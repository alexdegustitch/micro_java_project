INFO  18:00:03,364 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatCX11\workspace\MJCompiler\test\program.mj
INFO  18:00:03,370 - #33 program
INFO  18:00:03,371 - #1 Program
INFO  18:00:03,371 - #29 {
INFO  18:00:03,371 - #34 const
INFO  18:00:03,371 - #1 int
INFO  18:00:03,371 - #1 c
INFO  18:00:03,371 - #7 =
INFO  18:00:03,371 - #2 10
INFO  18:00:03,371 - #6 ;
INFO  18:00:03,371 - #34 const
INFO  18:00:03,371 - #1 int
INFO  18:00:03,372 - #1 d
INFO  18:00:03,372 - #7 =
INFO  18:00:03,372 - #2 13
INFO  18:00:03,372 - #6 ;
INFO  18:00:03,372 - #1 int
INFO  18:00:03,372 - #1 e
INFO  18:00:03,372 - #6 ;
INFO  18:00:03,372 - #35 void
INFO  18:00:03,372 - #1 test
INFO  18:00:03,372 - #10 (
INFO  18:00:03,372 - #11 )
INFO  18:00:03,373 - #29 {
INFO  18:00:03,373 - #1 int
INFO  18:00:03,373 - #1 a
INFO  18:00:03,373 - #6 ;
INFO  18:00:03,373 - #1 int
INFO  18:00:03,373 - #1 b
INFO  18:00:03,373 - #6 ;
INFO  18:00:03,373 - #1 a
INFO  18:00:03,373 - #7 =
INFO  18:00:03,373 - #2 3
INFO  18:00:03,373 - #6 ;
INFO  18:00:03,373 - #1 b
INFO  18:00:03,373 - #7 =
INFO  18:00:03,374 - #2 5
INFO  18:00:03,374 - #6 ;
INFO  18:00:03,374 - #13 print
INFO  18:00:03,374 - #10 (
INFO  18:00:03,374 - #1 a
INFO  18:00:03,374 - #16 +
INFO  18:00:03,374 - #1 b
INFO  18:00:03,374 - #11 )
INFO  18:00:03,374 - #6 ;
INFO  18:00:03,374 - #30 }
INFO  18:00:03,374 - #1 int
INFO  18:00:03,374 - #1 max
INFO  18:00:03,374 - #10 (
INFO  18:00:03,374 - #1 int
INFO  18:00:03,375 - #1 a
INFO  18:00:03,375 - #14 ,
INFO  18:00:03,375 - #1 int
INFO  18:00:03,375 - #1 b
INFO  18:00:03,375 - #11 )
INFO  18:00:03,375 - #29 {
INFO  18:00:03,375 - #23 if
INFO  18:00:03,375 - #10 (
INFO  18:00:03,375 - #1 a
INFO  18:00:03,375 - #40 >
INFO  18:00:03,377 - #1 b
INFO  18:00:03,377 - #11 )
INFO  18:00:03,377 - #29 {
INFO  18:00:03,377 - #1 return
INFO  18:00:03,377 - #1 a
INFO  18:00:03,377 - #6 ;
INFO  18:00:03,377 - #30 }
INFO  18:00:03,378 - #24 else
INFO  18:00:03,378 - #1 return
INFO  18:00:03,378 - #1 b
INFO  18:00:03,378 - #6 ;
INFO  18:00:03,378 - #30 }
INFO  18:00:03,378 - #1 int
INFO  18:00:03,378 - #1 min
INFO  18:00:03,378 - #10 (
INFO  18:00:03,378 - #1 int
INFO  18:00:03,378 - #1 a
INFO  18:00:03,378 - #14 ,
INFO  18:00:03,379 - #1 int
INFO  18:00:03,379 - #1 b
INFO  18:00:03,379 - #11 )
INFO  18:00:03,379 - #29 {
INFO  18:00:03,379 - #23 if
INFO  18:00:03,379 - #10 (
INFO  18:00:03,379 - #1 a
INFO  18:00:03,379 - #39 <
INFO  18:00:03,379 - #1 b
INFO  18:00:03,379 - #11 )
INFO  18:00:03,379 - #29 {
INFO  18:00:03,379 - #1 return
INFO  18:00:03,379 - #1 a
INFO  18:00:03,380 - #6 ;
INFO  18:00:03,380 - #30 }
INFO  18:00:03,380 - #24 else
INFO  18:00:03,380 - #29 {
INFO  18:00:03,380 - #1 return
INFO  18:00:03,380 - #1 b
INFO  18:00:03,380 - #6 ;
INFO  18:00:03,380 - #30 }
INFO  18:00:03,380 - #30 }
INFO  18:00:03,381 - #35 void
INFO  18:00:03,381 - #1 main
INFO  18:00:03,381 - #10 (
INFO  18:00:03,381 - #11 )
INFO  18:00:03,381 - #29 {
INFO  18:00:03,381 - #1 int
INFO  18:00:03,381 - #1 a
INFO  18:00:03,381 - #21 [
INFO  18:00:03,381 - #22 ]
INFO  18:00:03,381 - #7 =
INFO  18:00:03,381 - #15 new
INFO  18:00:03,382 - #1 int
INFO  18:00:03,382 - #21 [
INFO  18:00:03,382 - #2 5
INFO  18:00:03,382 - #22 ]
INFO  18:00:03,382 - #6 ;
INFO  18:00:03,382 - #1 int
INFO  18:00:03,382 - #1 b
INFO  18:00:03,382 - #6 ;
INFO  18:00:03,382 - #25 do
INFO  18:00:03,382 - #29 {
INFO  18:00:03,382 - #1 a
INFO  18:00:03,382 - #21 [
INFO  18:00:03,382 - #1 i
INFO  18:00:03,383 - #22 ]
INFO  18:00:03,383 - #7 =
INFO  18:00:03,383 - #12 read
INFO  18:00:03,383 - #10 (
INFO  18:00:03,383 - #1 b
INFO  18:00:03,383 - #11 )
INFO  18:00:03,383 - #6 ;
INFO  18:00:03,383 - #23 if
INFO  18:00:03,384 - #10 (
INFO  18:00:03,384 - #1 a
INFO  18:00:03,384 - #21 [
INFO  18:00:03,384 - #1 i
INFO  18:00:03,384 - #22 ]
INFO  18:00:03,384 - #20 %
INFO  18:00:03,384 - #2 3
INFO  18:00:03,384 - #37 ==
INFO  18:00:03,384 - #2 0
INFO  18:00:03,384 - #11 )
INFO  18:00:03,385 - #13 print
INFO  18:00:03,385 - #10 (
INFO  18:00:03,385 - #1 a
INFO  18:00:03,385 - #21 [
INFO  18:00:03,385 - #1 i
INFO  18:00:03,385 - #22 ]
INFO  18:00:03,386 - #11 )
INFO  18:00:03,386 - #6 ;
INFO  18:00:03,386 - #24 else
INFO  18:00:03,386 - #13 print
INFO  18:00:03,386 - #10 (
INFO  18:00:03,386 - #1 max
INFO  18:00:03,386 - #10 (
INFO  18:00:03,386 - #1 a
INFO  18:00:03,386 - #21 [
INFO  18:00:03,386 - #1 i
INFO  18:00:03,386 - #22 ]
INFO  18:00:03,386 - #14 ,
INFO  18:00:03,386 - #2 0
INFO  18:00:03,386 - #11 )
INFO  18:00:03,386 - #11 )
INFO  18:00:03,387 - #6 ;
INFO  18:00:03,387 - #30 }
INFO  18:00:03,387 - #26 while
INFO  18:00:03,387 - #10 (
INFO  18:00:03,387 - #1 i
INFO  18:00:03,387 - #39 <
INFO  18:00:03,387 - #2 5
INFO  18:00:03,387 - #11 )
INFO  18:00:03,387 - #6 ;
INFO  18:00:03,387 - #13 print
INFO  18:00:03,387 - #10 (
INFO  18:00:03,387 - #1 c
INFO  18:00:03,387 - #11 )
INFO  18:00:03,387 - #6 ;
INFO  18:00:03,387 - #30 }
INFO  18:00:03,387 - #30 }
