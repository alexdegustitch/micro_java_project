INFO  19:33:35,255 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatCX13\workspace\MJCompiler\test\program.mj
INFO  19:33:35,262 - #33 program
INFO  19:33:35,262 - #1 Program
INFO  19:33:35,262 - #29 {
INFO  19:33:35,262 - #34 const
INFO  19:33:35,262 - #1 int
INFO  19:33:35,262 - #1 c
INFO  19:33:35,263 - #7 =
INFO  19:33:35,263 - #2 10
INFO  19:33:35,263 - #6 ;
INFO  19:33:35,263 - #34 const
INFO  19:33:35,263 - #1 int
INFO  19:33:35,263 - #1 d
INFO  19:33:35,263 - #7 =
INFO  19:33:35,263 - #2 99
INFO  19:33:35,263 - #6 ;
INFO  19:33:35,263 - #1 int
INFO  19:33:35,264 - #1 e
INFO  19:33:35,264 - #6 ;
INFO  19:33:35,264 - #35 void
INFO  19:33:35,264 - #1 test
INFO  19:33:35,264 - #10 (
INFO  19:33:35,264 - #11 )
INFO  19:33:35,264 - #29 {
INFO  19:33:35,264 - #1 int
INFO  19:33:35,264 - #1 a
INFO  19:33:35,264 - #6 ;
INFO  19:33:35,264 - #1 int
INFO  19:33:35,265 - #1 b
INFO  19:33:35,265 - #6 ;
INFO  19:33:35,265 - #1 bool
INFO  19:33:35,265 - #1 cond
INFO  19:33:35,265 - #6 ;
INFO  19:33:35,265 - #1 a
INFO  19:33:35,265 - #7 =
INFO  19:33:35,265 - #2 3
INFO  19:33:35,265 - #6 ;
INFO  19:33:35,265 - #1 b
INFO  19:33:35,265 - #7 =
INFO  19:33:35,265 - #2 5
INFO  19:33:35,265 - #6 ;
INFO  19:33:35,266 - #1 cond
INFO  19:33:35,266 - #7 =
INFO  19:33:35,266 - #4 true
INFO  19:33:35,266 - #6 ;
INFO  19:33:35,266 - #23 if
INFO  19:33:35,266 - #10 (
INFO  19:33:35,266 - #2 2
INFO  19:33:35,266 - #18 *
INFO  19:33:35,266 - #10 (
INFO  19:33:35,266 - #1 a
INFO  19:33:35,266 - #17 -
INFO  19:33:35,268 - #1 b
INFO  19:33:35,268 - #17 -
INFO  19:33:35,268 - #2 1
INFO  19:33:35,268 - #11 )
INFO  19:33:35,268 - #17 -
INFO  19:33:35,268 - #2 14
INFO  19:33:35,268 - #40 >
INFO  19:33:35,268 - #2 0
INFO  19:33:35,270 - #31 ||
INFO  19:33:35,270 - #1 cond
INFO  19:33:35,270 - #11 )
INFO  19:33:35,270 - #13 print
INFO  19:33:35,270 - #10 (
INFO  19:33:35,270 - #1 a
INFO  19:33:35,270 - #16 +
INFO  19:33:35,270 - #1 b
INFO  19:33:35,270 - #11 )
INFO  19:33:35,271 - #6 ;
INFO  19:33:35,271 - #30 }
INFO  19:33:35,271 - #1 int
INFO  19:33:35,271 - #1 max
INFO  19:33:35,271 - #10 (
INFO  19:33:35,271 - #1 int
INFO  19:33:35,271 - #1 a
INFO  19:33:35,271 - #14 ,
INFO  19:33:35,271 - #1 int
INFO  19:33:35,271 - #1 b
INFO  19:33:35,271 - #11 )
INFO  19:33:35,271 - #29 {
INFO  19:33:35,271 - #23 if
INFO  19:33:35,271 - #10 (
INFO  19:33:35,271 - #1 a
INFO  19:33:35,271 - #40 >
INFO  19:33:35,272 - #1 b
INFO  19:33:35,272 - #11 )
INFO  19:33:35,272 - #29 {
INFO  19:33:35,272 - #36 return
INFO  19:33:35,272 - #1 a
INFO  19:33:35,272 - #6 ;
INFO  19:33:35,272 - #30 }
INFO  19:33:35,272 - #24 else
INFO  19:33:35,272 - #36 return
INFO  19:33:35,272 - #1 b
INFO  19:33:35,272 - #6 ;
INFO  19:33:35,272 - #30 }
INFO  19:33:35,272 - #1 int
INFO  19:33:35,272 - #1 min
INFO  19:33:35,273 - #10 (
INFO  19:33:35,273 - #1 int
INFO  19:33:35,273 - #1 a
INFO  19:33:35,273 - #14 ,
INFO  19:33:35,273 - #1 int
INFO  19:33:35,273 - #1 b
INFO  19:33:35,273 - #11 )
INFO  19:33:35,273 - #29 {
INFO  19:33:35,273 - #23 if
INFO  19:33:35,273 - #10 (
INFO  19:33:35,274 - #1 a
INFO  19:33:35,274 - #39 <
INFO  19:33:35,274 - #1 b
INFO  19:33:35,274 - #11 )
INFO  19:33:35,274 - #29 {
INFO  19:33:35,274 - #36 return
INFO  19:33:35,274 - #1 a
INFO  19:33:35,274 - #6 ;
INFO  19:33:35,274 - #30 }
INFO  19:33:35,274 - #24 else
INFO  19:33:35,274 - #29 {
INFO  19:33:35,274 - #36 return
INFO  19:33:35,275 - #1 b
INFO  19:33:35,275 - #6 ;
INFO  19:33:35,275 - #30 }
INFO  19:33:35,275 - #30 }
INFO  19:33:35,275 - #35 void
INFO  19:33:35,275 - #1 main
INFO  19:33:35,276 - #10 (
INFO  19:33:35,276 - #11 )
INFO  19:33:35,276 - #29 {
INFO  19:33:35,276 - #1 int
INFO  19:33:35,276 - #1 a
INFO  19:33:35,276 - #21 [
INFO  19:33:35,276 - #22 ]
INFO  19:33:35,276 - #6 ;
INFO  19:33:35,276 - #1 int
INFO  19:33:35,276 - #1 length
INFO  19:33:35,276 - #6 ;
INFO  19:33:35,276 - #1 length
INFO  19:33:35,276 - #7 =
INFO  19:33:35,276 - #1 c
INFO  19:33:35,276 - #6 ;
INFO  19:33:35,277 - #1 test
INFO  19:33:35,277 - #10 (
INFO  19:33:35,277 - #11 )
INFO  19:33:35,277 - #6 ;
INFO  19:33:35,277 - #23 if
INFO  19:33:35,277 - #10 (
INFO  19:33:35,277 - #1 length
INFO  19:33:35,277 - #40 >
INFO  19:33:35,277 - #2 0
INFO  19:33:35,277 - #32 &&
INFO  19:33:35,277 - #1 length
INFO  19:33:35,277 - #41 <=
INFO  19:33:35,277 - #1 d
INFO  19:33:35,277 - #11 )
INFO  19:33:35,277 - #1 a
INFO  19:33:35,278 - #7 =
INFO  19:33:35,278 - #15 new
INFO  19:33:35,278 - #1 int
INFO  19:33:35,278 - #21 [
INFO  19:33:35,278 - #1 length
INFO  19:33:35,278 - #22 ]
INFO  19:33:35,278 - #6 ;
INFO  19:33:35,278 - #24 else
INFO  19:33:35,278 - #1 a
INFO  19:33:35,278 - #7 =
INFO  19:33:35,278 - #15 new
INFO  19:33:35,278 - #1 int
INFO  19:33:35,278 - #21 [
INFO  19:33:35,278 - #2 5
INFO  19:33:35,278 - #22 ]
INFO  19:33:35,278 - #6 ;
INFO  19:33:35,279 - #25 do
INFO  19:33:35,279 - #29 {
INFO  19:33:35,279 - #12 read
INFO  19:33:35,279 - #10 (
INFO  19:33:35,279 - #1 a
INFO  19:33:35,279 - #21 [
INFO  19:33:35,279 - #1 i
INFO  19:33:35,279 - #22 ]
INFO  19:33:35,279 - #11 )
INFO  19:33:35,279 - #6 ;
INFO  19:33:35,279 - #23 if
INFO  19:33:35,279 - #10 (
INFO  19:33:35,279 - #1 a
INFO  19:33:35,279 - #21 [
INFO  19:33:35,279 - #1 i
INFO  19:33:35,280 - #22 ]
INFO  19:33:35,280 - #20 %
INFO  19:33:35,280 - #2 3
INFO  19:33:35,280 - #37 ==
INFO  19:33:35,280 - #2 0
INFO  19:33:35,280 - #11 )
INFO  19:33:35,280 - #13 print
INFO  19:33:35,280 - #10 (
INFO  19:33:35,280 - #1 a
INFO  19:33:35,280 - #21 [
INFO  19:33:35,280 - #1 i
INFO  19:33:35,280 - #22 ]
INFO  19:33:35,280 - #11 )
INFO  19:33:35,280 - #6 ;
INFO  19:33:35,280 - #24 else
INFO  19:33:35,281 - #13 print
INFO  19:33:35,281 - #10 (
INFO  19:33:35,281 - #1 max
INFO  19:33:35,281 - #10 (
INFO  19:33:35,281 - #1 a
INFO  19:33:35,281 - #21 [
INFO  19:33:35,281 - #1 i
INFO  19:33:35,281 - #22 ]
INFO  19:33:35,281 - #14 ,
INFO  19:33:35,281 - #2 0
INFO  19:33:35,281 - #11 )
INFO  19:33:35,281 - #11 )
INFO  19:33:35,281 - #6 ;
INFO  19:33:35,281 - #30 }
INFO  19:33:35,281 - #26 while
INFO  19:33:35,281 - #10 (
INFO  19:33:35,281 - #1 i
INFO  19:33:35,281 - #41 <=
INFO  19:33:35,281 - #1 length
INFO  19:33:35,281 - #17 -
INFO  19:33:35,281 - #2 1
INFO  19:33:35,281 - #11 )
INFO  19:33:35,282 - #6 ;
INFO  19:33:35,282 - #13 print
INFO  19:33:35,282 - #10 (
INFO  19:33:35,282 - #1 d
INFO  19:33:35,282 - #11 )
INFO  19:33:35,282 - #6 ;
INFO  19:33:35,282 - #30 }
INFO  19:33:35,282 - #30 }
