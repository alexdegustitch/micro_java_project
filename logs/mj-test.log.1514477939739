INFO  17:14:18,879 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatCX11\workspace\MJCompiler\test\program.mj
INFO  17:14:18,886 - #2 program
INFO  17:14:18,886 - #8 Program
INFO  17:14:18,886 - #20 {
INFO  17:14:18,886 - #5 const
INFO  17:14:18,886 - #8 int
INFO  17:14:18,886 - #8 c
INFO  17:14:18,887 - #24 =
INFO  17:14:18,887 - #9 10
INFO  17:14:18,887 - #27 ;
INFO  17:14:18,887 - #5 const
INFO  17:14:18,887 - #8 int
INFO  17:14:18,887 - #8 d
INFO  17:14:18,887 - #24 =
INFO  17:14:18,887 - #9 13
INFO  17:14:18,887 - #27 ;
INFO  17:14:18,887 - #8 int
INFO  17:14:18,888 - #8 e
INFO  17:14:18,888 - #27 ;
INFO  17:14:18,888 - #6 void
INFO  17:14:18,888 - #8 test
INFO  17:14:18,888 - #29 (
INFO  17:14:18,888 - #30 )
INFO  17:14:18,888 - #20 {
INFO  17:14:18,888 - #8 int
INFO  17:14:18,889 - #8 a
INFO  17:14:18,889 - #27 ;
INFO  17:14:18,889 - #8 int
INFO  17:14:18,889 - #8 b
INFO  17:14:18,889 - #27 ;
INFO  17:14:18,889 - #8 a
INFO  17:14:18,889 - #24 =
INFO  17:14:18,889 - #9 3
INFO  17:14:18,889 - #27 ;
INFO  17:14:18,889 - #27 ;
INFO  17:14:18,889 - #8 b
INFO  17:14:18,889 - #24 =
INFO  17:14:18,890 - #9 5
INFO  17:14:18,890 - #27 ;
INFO  17:14:18,890 - #27 ;
INFO  17:14:18,890 - #3 print
INFO  17:14:18,890 - #29 (
INFO  17:14:18,890 - #8 a
INFO  17:14:18,890 - #15 +
INFO  17:14:18,890 - #8 b
INFO  17:14:18,890 - #30 )
INFO  17:14:18,890 - #27 ;
INFO  17:14:18,890 - #21 }
INFO  17:14:18,890 - #8 int
INFO  17:14:18,891 - #8 max
INFO  17:14:18,891 - #29 (
INFO  17:14:18,891 - #8 int
INFO  17:14:18,891 - #8 a
INFO  17:14:18,891 - #28 ,
INFO  17:14:18,891 - #8 int
INFO  17:14:18,891 - #8 b
INFO  17:14:18,891 - #30 )
INFO  17:14:18,891 - #20 {
INFO  17:14:18,891 - #31 if
INFO  17:14:18,891 - #29 (
INFO  17:14:18,891 - #8 a
INFO  17:14:18,891 - #38 >
INFO  17:14:18,891 - #8 b
INFO  17:14:18,892 - #30 )
INFO  17:14:18,892 - #20 {
INFO  17:14:18,892 - #8 return
INFO  17:14:18,892 - #8 a
INFO  17:14:18,892 - #27 ;
INFO  17:14:18,892 - #21 }
INFO  17:14:18,892 - #32 else
INFO  17:14:18,892 - #8 return
INFO  17:14:18,892 - #8 b
INFO  17:14:18,892 - #27 ;
INFO  17:14:18,892 - #21 }
INFO  17:14:18,892 - #8 int
INFO  17:14:18,892 - #8 min
INFO  17:14:18,892 - #29 (
INFO  17:14:18,892 - #8 int
INFO  17:14:18,893 - #8 a
INFO  17:14:18,893 - #28 ,
INFO  17:14:18,893 - #8 int
INFO  17:14:18,893 - #8 b
INFO  17:14:18,893 - #30 )
INFO  17:14:18,893 - #20 {
INFO  17:14:18,893 - #31 if
INFO  17:14:18,893 - #29 (
INFO  17:14:18,893 - #8 a
INFO  17:14:18,893 - #40 <
INFO  17:14:18,893 - #8 b
INFO  17:14:18,893 - #30 )
INFO  17:14:18,893 - #20 {
INFO  17:14:18,893 - #8 return
INFO  17:14:18,893 - #8 a
INFO  17:14:18,894 - #27 ;
INFO  17:14:18,894 - #21 }
INFO  17:14:18,894 - #32 else
INFO  17:14:18,894 - #20 {
INFO  17:14:18,894 - #8 return
INFO  17:14:18,894 - #8 b
INFO  17:14:18,894 - #27 ;
INFO  17:14:18,894 - #21 }
INFO  17:14:18,894 - #21 }
INFO  17:14:18,894 - #6 void
INFO  17:14:18,894 - #8 main
INFO  17:14:18,894 - #29 (
INFO  17:14:18,895 - #30 )
INFO  17:14:18,895 - #20 {
INFO  17:14:18,895 - #8 int
INFO  17:14:18,895 - #8 a
INFO  17:14:18,895 - #22 [
INFO  17:14:18,895 - #23 ]
INFO  17:14:18,895 - #24 =
INFO  17:14:18,895 - #7 new
INFO  17:14:18,895 - #8 int
INFO  17:14:18,897 - #22 [
INFO  17:14:18,898 - #9 5
INFO  17:14:18,898 - #23 ]
INFO  17:14:18,898 - #27 ;
INFO  17:14:18,898 - #8 int
INFO  17:14:18,898 - #8 b
INFO  17:14:18,898 - #27 ;
INFO  17:14:18,898 - #33 do
INFO  17:14:18,898 - #20 {
INFO  17:14:18,898 - #8 a
INFO  17:14:18,900 - #22 [
INFO  17:14:18,900 - #8 i
INFO  17:14:18,900 - #23 ]
INFO  17:14:18,900 - #24 =
INFO  17:14:18,900 - #4 read
INFO  17:14:18,900 - #29 (
INFO  17:14:18,900 - #8 b
INFO  17:14:18,900 - #30 )
INFO  17:14:18,900 - #27 ;
INFO  17:14:18,900 - #31 if
INFO  17:14:18,900 - #29 (
INFO  17:14:18,900 - #8 a
INFO  17:14:18,900 - #22 [
INFO  17:14:18,901 - #8 i
INFO  17:14:18,901 - #23 ]
INFO  17:14:18,901 - #19 %
INFO  17:14:18,901 - #9 3
INFO  17:14:18,901 - #39 ==
INFO  17:14:18,901 - #9 0
INFO  17:14:18,901 - #30 )
INFO  17:14:18,901 - #3 print
INFO  17:14:18,901 - #29 (
INFO  17:14:18,901 - #8 a
INFO  17:14:18,901 - #22 [
INFO  17:14:18,901 - #8 i
INFO  17:14:18,901 - #23 ]
INFO  17:14:18,901 - #30 )
INFO  17:14:18,901 - #27 ;
INFO  17:14:18,901 - #32 else
INFO  17:14:18,902 - #3 print
INFO  17:14:18,902 - #29 (
INFO  17:14:18,902 - #8 max
INFO  17:14:18,902 - #29 (
INFO  17:14:18,902 - #8 a
INFO  17:14:18,902 - #22 [
INFO  17:14:18,902 - #8 i
INFO  17:14:18,902 - #23 ]
INFO  17:14:18,902 - #28 ,
INFO  17:14:18,902 - #9 0
INFO  17:14:18,902 - #30 )
INFO  17:14:18,902 - #30 )
INFO  17:14:18,902 - #27 ;
INFO  17:14:18,902 - #21 }
INFO  17:14:18,905 - #34 while
INFO  17:14:18,905 - #29 (
INFO  17:14:18,906 - #8 i
INFO  17:14:18,906 - #40 <
INFO  17:14:18,906 - #9 5
INFO  17:14:18,906 - #30 )
INFO  17:14:18,906 - #27 ;
INFO  17:14:18,906 - #3 print
INFO  17:14:18,906 - #29 (
INFO  17:14:18,906 - #8 c
INFO  17:14:18,906 - #30 )
INFO  17:14:18,906 - #27 ;
INFO  17:14:18,906 - #21 }
INFO  17:14:18,906 - #21 }
