INFO  06:04:16,690 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatCX7\workspace\MJCompiler\test\program.mj
INFO  06:04:16,698 - #33 program
INFO  06:04:16,698 - #1 Program
INFO  06:04:16,698 - #29 {
INFO  06:04:16,698 - #34 const
INFO  06:04:16,698 - #1 int
INFO  06:04:16,698 - #1 c
INFO  06:04:16,698 - #7 =
INFO  06:04:16,699 - #2 10
INFO  06:04:16,699 - #6 ;
INFO  06:04:16,699 - #34 const
INFO  06:04:16,699 - #1 int
INFO  06:04:16,699 - #1 d
INFO  06:04:16,699 - #7 =
INFO  06:04:16,699 - #2 13
INFO  06:04:16,699 - #6 ;
INFO  06:04:16,699 - #1 int
INFO  06:04:16,699 - #1 e
INFO  06:04:16,699 - #6 ;
INFO  06:04:16,700 - #35 void
INFO  06:04:16,700 - #1 test
INFO  06:04:16,700 - #10 (
INFO  06:04:16,700 - #11 )
INFO  06:04:16,700 - #29 {
INFO  06:04:16,700 - #1 int
INFO  06:04:16,700 - #1 a
INFO  06:04:16,700 - #6 ;
INFO  06:04:16,700 - #1 int
INFO  06:04:16,701 - #1 b
INFO  06:04:16,701 - #6 ;
INFO  06:04:16,701 - #1 a
INFO  06:04:16,701 - #7 =
INFO  06:04:16,701 - #2 3
INFO  06:04:16,701 - #6 ;
INFO  06:04:16,701 - #1 b
INFO  06:04:16,701 - #7 =
INFO  06:04:16,701 - #2 5
INFO  06:04:16,701 - #6 ;
INFO  06:04:16,701 - #13 print
INFO  06:04:16,701 - #10 (
INFO  06:04:16,701 - #1 a
INFO  06:04:16,701 - #16 +
INFO  06:04:16,701 - #1 b
INFO  06:04:16,702 - #11 )
INFO  06:04:16,702 - #6 ;
INFO  06:04:16,702 - #30 }
INFO  06:04:16,702 - #1 int
INFO  06:04:16,702 - #1 max
INFO  06:04:16,702 - #10 (
INFO  06:04:16,702 - #1 int
INFO  06:04:16,702 - #1 a
INFO  06:04:16,702 - #14 ,
INFO  06:04:16,702 - #1 int
INFO  06:04:16,702 - #1 b
INFO  06:04:16,702 - #11 )
INFO  06:04:16,702 - #29 {
INFO  06:04:16,703 - #23 if
INFO  06:04:16,703 - #10 (
INFO  06:04:16,703 - #1 a
INFO  06:04:16,703 - #40 >
INFO  06:04:16,704 - #1 b
INFO  06:04:16,704 - #11 )
INFO  06:04:16,704 - #29 {
INFO  06:04:16,705 - #1 return
INFO  06:04:16,705 - #1 a
INFO  06:04:16,705 - #6 ;
INFO  06:04:16,705 - #30 }
INFO  06:04:16,705 - #24 else
INFO  06:04:16,705 - #1 return
INFO  06:04:16,705 - #1 b
INFO  06:04:16,705 - #6 ;
INFO  06:04:16,705 - #30 }
INFO  06:04:16,705 - #1 int
INFO  06:04:16,705 - #1 min
INFO  06:04:16,705 - #10 (
INFO  06:04:16,705 - #1 int
INFO  06:04:16,706 - #1 a
INFO  06:04:16,706 - #14 ,
INFO  06:04:16,706 - #1 int
INFO  06:04:16,706 - #1 b
INFO  06:04:16,706 - #11 )
INFO  06:04:16,706 - #29 {
INFO  06:04:16,706 - #23 if
INFO  06:04:16,706 - #10 (
INFO  06:04:16,706 - #1 a
INFO  06:04:16,706 - #39 <
INFO  06:04:16,706 - #1 b
INFO  06:04:16,706 - #11 )
INFO  06:04:16,706 - #29 {
INFO  06:04:16,707 - #1 return
INFO  06:04:16,707 - #1 a
INFO  06:04:16,707 - #6 ;
INFO  06:04:16,707 - #30 }
INFO  06:04:16,707 - #24 else
INFO  06:04:16,707 - #29 {
INFO  06:04:16,707 - #1 return
INFO  06:04:16,707 - #1 b
INFO  06:04:16,707 - #6 ;
INFO  06:04:16,707 - #30 }
INFO  06:04:16,707 - #30 }
INFO  06:04:16,707 - #35 void
INFO  06:04:16,707 - #1 main
INFO  06:04:16,707 - #10 (
INFO  06:04:16,708 - #11 )
INFO  06:04:16,708 - #29 {
INFO  06:04:16,708 - #1 int
INFO  06:04:16,708 - #1 a
INFO  06:04:16,708 - #21 [
INFO  06:04:16,708 - #22 ]
INFO  06:04:16,708 - #7 =
INFO  06:04:16,708 - #15 new
INFO  06:04:16,708 - #1 int
INFO  06:04:16,708 - #21 [
INFO  06:04:16,708 - #2 5
INFO  06:04:16,709 - #22 ]
INFO  06:04:16,709 - #6 ;
INFO  06:04:16,709 - #1 int
INFO  06:04:16,709 - #1 b
INFO  06:04:16,710 - #6 ;
INFO  06:04:16,710 - #25 do
INFO  06:04:16,710 - #29 {
INFO  06:04:16,710 - #1 a
INFO  06:04:16,710 - #21 [
INFO  06:04:16,711 - #1 i
INFO  06:04:16,711 - #22 ]
INFO  06:04:16,711 - #7 =
INFO  06:04:16,712 - #12 read
INFO  06:04:16,712 - #10 (
INFO  06:04:16,712 - #1 b
INFO  06:04:16,712 - #11 )
INFO  06:04:16,713 - #6 ;
INFO  06:04:16,713 - #23 if
INFO  06:04:16,713 - #10 (
INFO  06:04:16,713 - #1 a
INFO  06:04:16,713 - #21 [
INFO  06:04:16,713 - #1 i
INFO  06:04:16,713 - #22 ]
INFO  06:04:16,713 - #20 %
INFO  06:04:16,713 - #2 3
INFO  06:04:16,713 - #37 ==
INFO  06:04:16,713 - #2 0
INFO  06:04:16,714 - #11 )
INFO  06:04:16,714 - #13 print
INFO  06:04:16,714 - #10 (
INFO  06:04:16,714 - #1 a
INFO  06:04:16,714 - #21 [
INFO  06:04:16,714 - #1 i
INFO  06:04:16,714 - #22 ]
INFO  06:04:16,714 - #11 )
INFO  06:04:16,714 - #6 ;
INFO  06:04:16,714 - #24 else
INFO  06:04:16,715 - #13 print
INFO  06:04:16,715 - #10 (
INFO  06:04:16,715 - #1 max
INFO  06:04:16,715 - #10 (
INFO  06:04:16,715 - #1 a
INFO  06:04:16,715 - #21 [
INFO  06:04:16,715 - #1 i
INFO  06:04:16,715 - #22 ]
INFO  06:04:16,715 - #14 ,
INFO  06:04:16,715 - #2 0
INFO  06:04:16,715 - #11 )
INFO  06:04:16,715 - #11 )
INFO  06:04:16,715 - #6 ;
INFO  06:04:16,715 - #30 }
INFO  06:04:16,715 - #26 while
INFO  06:04:16,715 - #10 (
INFO  06:04:16,715 - #1 i
INFO  06:04:16,716 - #39 <
INFO  06:04:16,716 - #2 5
INFO  06:04:16,716 - #11 )
INFO  06:04:16,716 - #6 ;
INFO  06:04:16,716 - #13 print
INFO  06:04:16,716 - #10 (
INFO  06:04:16,716 - #1 c
INFO  06:04:16,716 - #11 )
INFO  06:04:16,716 - #6 ;
INFO  06:04:16,716 - #30 }
INFO  06:04:16,716 - #30 }
