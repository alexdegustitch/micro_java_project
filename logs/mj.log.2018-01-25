INFO  00:00:24,681 - Obrada ulaznog fajla test\program.mj
INFO  00:00:24,759 - #2 program
INFO  00:00:24,760 - #8 Program
INFO  00:00:24,760 - #5 const
INFO  00:00:24,761 - #8 int
INFO  00:00:24,761 - #8 c
INFO  00:00:24,762 - #24 =
INFO  00:00:24,763 - #9 10
INFO  00:00:24,763 - #28 ,
INFO  00:00:24,765 - #8 d
INFO  00:00:24,765 - #24 =
INFO  00:00:24,765 - #9 99
INFO  00:00:24,765 - #28 ,
INFO  00:00:24,765 - #8 g
INFO  00:00:24,765 - #24 =
INFO  00:00:24,766 - #9 2
INFO  00:00:24,766 - #27 ;
INFO  00:00:24,766 - #8 int
INFO  00:00:24,767 - #8 e
INFO  00:00:24,767 - #27 ;
INFO  00:00:24,768 - #8 char
INFO  00:00:24,769 - #8 z
INFO  00:00:24,770 - #22 [
INFO  00:00:24,770 - #23 ]
INFO  00:00:24,770 - #27 ;
INFO  00:00:24,770 - #20 {
INFO  00:00:24,770 - #6 void
INFO  00:00:24,770 - #8 main
INFO  00:00:24,770 - #29 (
INFO  00:00:24,771 - #30 )
INFO  00:00:24,771 - #8 bool
INFO  00:00:24,771 - #8 cond
INFO  00:00:24,771 - #27 ;
INFO  00:00:24,772 - #20 {
INFO  00:00:24,772 - #8 cond
INFO  00:00:24,772 - #24 =
INFO  00:00:24,772 - #11 true
INFO  00:00:24,772 - #27 ;
INFO  00:00:24,773 - #31 if
INFO  00:00:24,773 - #29 (
INFO  00:00:24,773 - #12 false
INFO  00:00:24,773 - #30 )
INFO  00:00:24,774 - #20 {
INFO  00:00:24,774 - #8 e
INFO  00:00:24,774 - #24 =
INFO  00:00:24,774 - #9 20
INFO  00:00:24,774 - #27 ;
INFO  00:00:24,774 - #8 e
INFO  00:00:24,774 - #25 ++
INFO  00:00:24,774 - #27 ;
INFO  00:00:24,775 - #21 }
INFO  00:00:24,775 - #32 else
INFO  00:00:24,776 - #20 {
INFO  00:00:24,776 - #8 e
INFO  00:00:24,776 - #24 =
INFO  00:00:24,776 - #9 13
INFO  00:00:24,776 - #27 ;
INFO  00:00:24,777 - #8 e
INFO  00:00:24,777 - #26 --
INFO  00:00:24,777 - #27 ;
INFO  00:00:24,777 - #21 }
INFO  00:00:24,777 - #3 print
INFO  00:00:24,777 - #29 (
INFO  00:00:24,777 - #8 e
INFO  00:00:24,777 - #30 )
INFO  00:00:24,778 - #27 ;
INFO  00:00:24,778 - #3 print
INFO  00:00:24,778 - #29 (
INFO  00:00:24,778 - #9 1000
INFO  00:00:24,778 - #30 )
INFO  00:00:24,778 - #27 ;
INFO  00:00:24,778 - #21 }
INFO  00:00:24,778 - #21 }
INFO  00:00:24,779 - =====================SINTAKSNO_STABLO=========================
INFO  00:00:24,781 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_if_else(
                Stmt_if_part(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_one(
                        Expr_single(
                          Term_single(
                            Factor_bool_const(
                              Bool_const_false(
                               false
                              ) [Bool_const_false]
                            ) [Factor_bool_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Cond_fact_one]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Stmt_list(
                    Statement_multi(
                      Statement_single(
                        Stmt_design(
                          Assignment(
                            Designator_1(
                             e
                            ) [Designator_1]
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 20
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_single]
                      Stmt_design(
                        Increment(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Increment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                  ) [Stmt_list]
                ) [Stmt_if_part]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_design(
                        Assignment(
                          Designator_1(
                           e
                          ) [Designator_1]
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               13
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_single]
                    Stmt_design(
                      Decrement(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Decrement]
                    ) [Stmt_design]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if_else]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:00:24,782 - ==============================================================
INFO  00:00:24,800 - Pocetak obrade programa Program na liniji 1
INFO  00:00:24,800 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:00:24,801 - Deklarisana konstanta c na liniji 2
INFO  00:00:24,801 - Deklarisana konstanta d na liniji 2
INFO  00:00:24,801 - Deklarisana konstanta g na liniji 2
INFO  00:00:24,801 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:00:24,801 - Deklarisana promenljiva e na liniji 3
INFO  00:00:24,801 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:00:24,801 - Deklarisan niz z na liniji 3
INFO  00:00:24,802 - Pocetak obrade metode main na liniji 5
INFO  00:00:24,802 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:00:24,802 - Deklarisana promenljiva cond na liniji 5
INFO  00:00:24,803 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:00:24,803 - Zavrsetak obrade programa Program na liniji 1
INFO  00:00:24,803 - ======================TABELA_SIMBOLA==========================
INFO  00:00:24,804 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:00:24,804 - ==============================================================
INFO  00:00:24,804 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:00:24,804 - ==============================================================
INFO  00:00:24,804 - ======================GENERISANJE_KODA========================
INFO  00:00:24,811 - Generisanje koda uspesno zavrseno!
INFO  00:00:24,811 - Generisanje izlaznog fajla test\program.obj
INFO  00:00:24,811 - ==============================================================
INFO  00:00:27,570 - Obrada ulaznog fajla test\program.mj
INFO  00:00:27,674 - #2 program
INFO  00:00:27,674 - #8 Program
INFO  00:00:27,674 - #5 const
INFO  00:00:27,676 - #8 int
INFO  00:00:27,676 - #8 c
INFO  00:00:27,677 - #24 =
INFO  00:00:27,677 - #9 10
INFO  00:00:27,678 - #28 ,
INFO  00:00:27,680 - #8 d
INFO  00:00:27,680 - #24 =
INFO  00:00:27,680 - #9 99
INFO  00:00:27,680 - #28 ,
INFO  00:00:27,680 - #8 g
INFO  00:00:27,681 - #24 =
INFO  00:00:27,681 - #9 2
INFO  00:00:27,681 - #27 ;
INFO  00:00:27,681 - #8 int
INFO  00:00:27,682 - #8 e
INFO  00:00:27,682 - #27 ;
INFO  00:00:27,683 - #8 char
INFO  00:00:27,684 - #8 z
INFO  00:00:27,684 - #22 [
INFO  00:00:27,684 - #23 ]
INFO  00:00:27,684 - #27 ;
INFO  00:00:27,685 - #20 {
INFO  00:00:27,685 - #6 void
INFO  00:00:27,685 - #8 main
INFO  00:00:27,685 - #29 (
INFO  00:00:27,688 - #30 )
INFO  00:00:27,688 - #8 bool
INFO  00:00:27,688 - #8 cond
INFO  00:00:27,688 - #27 ;
INFO  00:00:27,688 - #20 {
INFO  00:00:27,689 - #8 cond
INFO  00:00:27,689 - #24 =
INFO  00:00:27,689 - #11 true
INFO  00:00:27,689 - #27 ;
INFO  00:00:27,690 - #31 if
INFO  00:00:27,691 - #29 (
INFO  00:00:27,691 - #12 false
INFO  00:00:27,691 - #30 )
INFO  00:00:27,691 - #20 {
INFO  00:00:27,691 - #8 e
INFO  00:00:27,691 - #24 =
INFO  00:00:27,692 - #9 20
INFO  00:00:27,692 - #27 ;
INFO  00:00:27,692 - #8 e
INFO  00:00:27,692 - #25 ++
INFO  00:00:27,692 - #27 ;
INFO  00:00:27,693 - #21 }
INFO  00:00:27,693 - #32 else
INFO  00:00:27,694 - #20 {
INFO  00:00:27,694 - #8 e
INFO  00:00:27,694 - #24 =
INFO  00:00:27,694 - #9 13
INFO  00:00:27,695 - #27 ;
INFO  00:00:27,695 - #8 e
INFO  00:00:27,695 - #26 --
INFO  00:00:27,695 - #27 ;
INFO  00:00:27,696 - #21 }
INFO  00:00:27,696 - #3 print
INFO  00:00:27,697 - #29 (
INFO  00:00:27,697 - #8 e
INFO  00:00:27,698 - #30 )
INFO  00:00:27,698 - #27 ;
INFO  00:00:27,698 - #3 print
INFO  00:00:27,698 - #29 (
INFO  00:00:27,698 - #9 1000
INFO  00:00:27,699 - #30 )
INFO  00:00:27,699 - #27 ;
INFO  00:00:27,699 - #21 }
INFO  00:00:27,699 - #21 }
INFO  00:00:27,700 - =====================SINTAKSNO_STABLO=========================
INFO  00:00:27,701 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_if_else(
                Stmt_if_part(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_one(
                        Expr_single(
                          Term_single(
                            Factor_bool_const(
                              Bool_const_false(
                               false
                              ) [Bool_const_false]
                            ) [Factor_bool_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Cond_fact_one]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Stmt_list(
                    Statement_multi(
                      Statement_single(
                        Stmt_design(
                          Assignment(
                            Designator_1(
                             e
                            ) [Designator_1]
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 20
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_single]
                      Stmt_design(
                        Increment(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Increment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                  ) [Stmt_list]
                ) [Stmt_if_part]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_design(
                        Assignment(
                          Designator_1(
                           e
                          ) [Designator_1]
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               13
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_single]
                    Stmt_design(
                      Decrement(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Decrement]
                    ) [Stmt_design]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if_else]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:00:27,702 - ==============================================================
INFO  00:00:27,715 - Pocetak obrade programa Program na liniji 1
INFO  00:00:27,715 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:00:27,716 - Deklarisana konstanta c na liniji 2
INFO  00:00:27,716 - Deklarisana konstanta d na liniji 2
INFO  00:00:27,716 - Deklarisana konstanta g na liniji 2
INFO  00:00:27,716 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:00:27,716 - Deklarisana promenljiva e na liniji 3
INFO  00:00:27,716 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:00:27,717 - Deklarisan niz z na liniji 3
INFO  00:00:27,717 - Pocetak obrade metode main na liniji 5
INFO  00:00:27,717 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:00:27,718 - Deklarisana promenljiva cond na liniji 5
INFO  00:00:27,718 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:00:27,718 - Zavrsetak obrade programa Program na liniji 1
INFO  00:00:27,718 - ======================TABELA_SIMBOLA==========================
INFO  00:00:27,719 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:00:27,719 - ==============================================================
INFO  00:00:27,719 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:00:27,719 - ==============================================================
INFO  00:00:27,719 - ======================GENERISANJE_KODA========================
INFO  00:01:26,472 - Obrada ulaznog fajla test\program.mj
INFO  00:01:26,570 - #2 program
INFO  00:01:26,570 - #8 Program
INFO  00:01:26,570 - #5 const
INFO  00:01:26,571 - #8 int
INFO  00:01:26,571 - #8 c
INFO  00:01:26,572 - #24 =
INFO  00:01:26,572 - #9 10
INFO  00:01:26,572 - #28 ,
INFO  00:01:26,574 - #8 d
INFO  00:01:26,574 - #24 =
INFO  00:01:26,574 - #9 99
INFO  00:01:26,574 - #28 ,
INFO  00:01:26,574 - #8 g
INFO  00:01:26,574 - #24 =
INFO  00:01:26,575 - #9 2
INFO  00:01:26,575 - #27 ;
INFO  00:01:26,575 - #8 int
INFO  00:01:26,576 - #8 e
INFO  00:01:26,576 - #27 ;
INFO  00:01:26,576 - #8 char
INFO  00:01:26,578 - #8 z
INFO  00:01:26,578 - #22 [
INFO  00:01:26,578 - #23 ]
INFO  00:01:26,578 - #27 ;
INFO  00:01:26,579 - #20 {
INFO  00:01:26,579 - #6 void
INFO  00:01:26,579 - #8 main
INFO  00:01:26,579 - #29 (
INFO  00:01:26,580 - #30 )
INFO  00:01:26,580 - #8 bool
INFO  00:01:26,580 - #8 cond
INFO  00:01:26,580 - #27 ;
INFO  00:01:26,581 - #20 {
INFO  00:01:26,581 - #8 cond
INFO  00:01:26,581 - #24 =
INFO  00:01:26,582 - #11 true
INFO  00:01:26,582 - #27 ;
INFO  00:01:26,582 - #31 if
INFO  00:01:26,583 - #29 (
INFO  00:01:26,583 - #12 false
INFO  00:01:26,583 - #30 )
INFO  00:01:26,584 - #20 {
INFO  00:01:26,585 - #8 e
INFO  00:01:26,585 - #24 =
INFO  00:01:26,585 - #9 20
INFO  00:01:26,585 - #27 ;
INFO  00:01:26,585 - #8 e
INFO  00:01:26,586 - #25 ++
INFO  00:01:26,586 - #27 ;
INFO  00:01:26,586 - #21 }
INFO  00:01:26,586 - #32 else
INFO  00:01:26,588 - #20 {
INFO  00:01:26,588 - #8 e
INFO  00:01:26,588 - #24 =
INFO  00:01:26,588 - #9 13
INFO  00:01:26,588 - #27 ;
INFO  00:01:26,589 - #8 e
INFO  00:01:26,589 - #26 --
INFO  00:01:26,589 - #27 ;
INFO  00:01:26,589 - #21 }
INFO  00:01:26,589 - #3 print
INFO  00:01:26,590 - #29 (
INFO  00:01:26,590 - #8 e
INFO  00:01:26,590 - #30 )
INFO  00:01:26,591 - #27 ;
INFO  00:01:26,591 - #3 print
INFO  00:01:26,591 - #29 (
INFO  00:01:26,591 - #9 1000
INFO  00:01:26,591 - #30 )
INFO  00:01:26,591 - #27 ;
INFO  00:01:26,591 - #21 }
INFO  00:01:26,592 - #21 }
INFO  00:01:26,593 - =====================SINTAKSNO_STABLO=========================
INFO  00:01:26,595 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_if_else(
                Stmt_if_part(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_one(
                        Expr_single(
                          Term_single(
                            Factor_bool_const(
                              Bool_const_false(
                               false
                              ) [Bool_const_false]
                            ) [Factor_bool_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Cond_fact_one]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Stmt_list(
                    Statement_multi(
                      Statement_single(
                        Stmt_design(
                          Assignment(
                            Designator_1(
                             e
                            ) [Designator_1]
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 20
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_single]
                      Stmt_design(
                        Increment(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Increment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                  ) [Stmt_list]
                ) [Stmt_if_part]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_design(
                        Assignment(
                          Designator_1(
                           e
                          ) [Designator_1]
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               13
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_single]
                    Stmt_design(
                      Decrement(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Decrement]
                    ) [Stmt_design]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if_else]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:01:26,597 - ==============================================================
INFO  00:01:26,612 - Pocetak obrade programa Program na liniji 1
INFO  00:01:26,613 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:01:26,614 - Deklarisana konstanta c na liniji 2
INFO  00:01:26,614 - Deklarisana konstanta d na liniji 2
INFO  00:01:26,614 - Deklarisana konstanta g na liniji 2
INFO  00:01:26,614 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:01:26,615 - Deklarisana promenljiva e na liniji 3
INFO  00:01:26,615 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:01:26,615 - Deklarisan niz z na liniji 3
INFO  00:01:26,616 - Pocetak obrade metode main na liniji 5
INFO  00:01:26,616 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:01:26,617 - Deklarisana promenljiva cond na liniji 5
INFO  00:01:26,618 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:01:26,619 - Zavrsetak obrade programa Program na liniji 1
INFO  00:01:26,621 - ======================TABELA_SIMBOLA==========================
INFO  00:01:26,625 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:01:26,625 - ==============================================================
INFO  00:01:26,625 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:01:26,625 - ==============================================================
INFO  00:01:26,625 - ======================GENERISANJE_KODA========================
INFO  00:01:26,631 - Generisanje koda uspesno zavrseno!
INFO  00:01:26,632 - Generisanje izlaznog fajla test\program.obj
INFO  00:01:26,632 - ==============================================================
INFO  00:01:28,864 - Obrada ulaznog fajla test\program.mj
INFO  00:01:28,948 - #2 program
INFO  00:01:28,948 - #8 Program
INFO  00:01:28,948 - #5 const
INFO  00:01:28,949 - #8 int
INFO  00:01:28,949 - #8 c
INFO  00:01:28,950 - #24 =
INFO  00:01:28,950 - #9 10
INFO  00:01:28,950 - #28 ,
INFO  00:01:28,951 - #8 d
INFO  00:01:28,951 - #24 =
INFO  00:01:28,952 - #9 99
INFO  00:01:28,952 - #28 ,
INFO  00:01:28,952 - #8 g
INFO  00:01:28,952 - #24 =
INFO  00:01:28,952 - #9 2
INFO  00:01:28,952 - #27 ;
INFO  00:01:28,952 - #8 int
INFO  00:01:28,953 - #8 e
INFO  00:01:28,953 - #27 ;
INFO  00:01:28,954 - #8 char
INFO  00:01:28,955 - #8 z
INFO  00:01:28,955 - #22 [
INFO  00:01:28,956 - #23 ]
INFO  00:01:28,956 - #27 ;
INFO  00:01:28,956 - #20 {
INFO  00:01:28,956 - #6 void
INFO  00:01:28,956 - #8 main
INFO  00:01:28,956 - #29 (
INFO  00:01:28,957 - #30 )
INFO  00:01:28,957 - #8 bool
INFO  00:01:28,957 - #8 cond
INFO  00:01:28,957 - #27 ;
INFO  00:01:28,957 - #20 {
INFO  00:01:28,958 - #8 cond
INFO  00:01:28,958 - #24 =
INFO  00:01:28,958 - #11 true
INFO  00:01:28,958 - #27 ;
INFO  00:01:28,959 - #31 if
INFO  00:01:28,959 - #29 (
INFO  00:01:28,959 - #12 false
INFO  00:01:28,959 - #30 )
INFO  00:01:28,960 - #20 {
INFO  00:01:28,960 - #8 e
INFO  00:01:28,960 - #24 =
INFO  00:01:28,960 - #9 20
INFO  00:01:28,960 - #27 ;
INFO  00:01:28,960 - #8 e
INFO  00:01:28,960 - #25 ++
INFO  00:01:28,960 - #27 ;
INFO  00:01:28,960 - #21 }
INFO  00:01:28,961 - #32 else
INFO  00:01:28,962 - #20 {
INFO  00:01:28,962 - #8 e
INFO  00:01:28,962 - #24 =
INFO  00:01:28,962 - #9 13
INFO  00:01:28,962 - #27 ;
INFO  00:01:28,962 - #8 e
INFO  00:01:28,962 - #26 --
INFO  00:01:28,962 - #27 ;
INFO  00:01:28,963 - #21 }
INFO  00:01:28,963 - #3 print
INFO  00:01:28,963 - #29 (
INFO  00:01:28,963 - #8 e
INFO  00:01:28,963 - #30 )
INFO  00:01:28,963 - #27 ;
INFO  00:01:28,964 - #3 print
INFO  00:01:28,964 - #29 (
INFO  00:01:28,964 - #9 1000
INFO  00:01:28,964 - #30 )
INFO  00:01:28,964 - #27 ;
INFO  00:01:28,964 - #21 }
INFO  00:01:28,964 - #21 }
INFO  00:01:28,965 - =====================SINTAKSNO_STABLO=========================
INFO  00:01:28,967 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_if_else(
                Stmt_if_part(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_one(
                        Expr_single(
                          Term_single(
                            Factor_bool_const(
                              Bool_const_false(
                               false
                              ) [Bool_const_false]
                            ) [Factor_bool_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Cond_fact_one]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Stmt_list(
                    Statement_multi(
                      Statement_single(
                        Stmt_design(
                          Assignment(
                            Designator_1(
                             e
                            ) [Designator_1]
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 20
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_single]
                      Stmt_design(
                        Increment(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Increment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                  ) [Stmt_list]
                ) [Stmt_if_part]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_design(
                        Assignment(
                          Designator_1(
                           e
                          ) [Designator_1]
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               13
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_single]
                    Stmt_design(
                      Decrement(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Decrement]
                    ) [Stmt_design]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if_else]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:01:28,968 - ==============================================================
INFO  00:01:28,982 - Pocetak obrade programa Program na liniji 1
INFO  00:01:28,983 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:01:28,983 - Deklarisana konstanta c na liniji 2
INFO  00:01:28,983 - Deklarisana konstanta d na liniji 2
INFO  00:01:28,984 - Deklarisana konstanta g na liniji 2
INFO  00:01:28,984 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:01:28,984 - Deklarisana promenljiva e na liniji 3
INFO  00:01:28,984 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:01:28,984 - Deklarisan niz z na liniji 3
INFO  00:01:28,985 - Pocetak obrade metode main na liniji 5
INFO  00:01:28,985 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:01:28,985 - Deklarisana promenljiva cond na liniji 5
INFO  00:01:28,985 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:01:28,985 - Zavrsetak obrade programa Program na liniji 1
INFO  00:01:28,985 - ======================TABELA_SIMBOLA==========================
INFO  00:01:28,986 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:01:28,986 - ==============================================================
INFO  00:01:28,986 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:01:28,986 - ==============================================================
INFO  00:01:28,986 - ======================GENERISANJE_KODA========================
INFO  00:01:28,991 - Generisanje koda uspesno zavrseno!
INFO  00:01:28,992 - Generisanje izlaznog fajla test\program.obj
INFO  00:01:28,992 - ==============================================================
INFO  00:03:17,814 - Obrada ulaznog fajla test\program.mj
INFO  00:03:17,892 - #2 program
INFO  00:03:17,893 - #8 Program
INFO  00:03:17,893 - #5 const
INFO  00:03:17,894 - #8 int
INFO  00:03:17,894 - #8 c
INFO  00:03:17,895 - #24 =
INFO  00:03:17,895 - #9 10
INFO  00:03:17,895 - #28 ,
INFO  00:03:17,896 - #8 d
INFO  00:03:17,896 - #24 =
INFO  00:03:17,896 - #9 99
INFO  00:03:17,896 - #28 ,
INFO  00:03:17,897 - #8 g
INFO  00:03:17,897 - #24 =
INFO  00:03:17,897 - #9 2
INFO  00:03:17,897 - #27 ;
INFO  00:03:17,897 - #8 int
INFO  00:03:17,898 - #8 e
INFO  00:03:17,898 - #27 ;
INFO  00:03:17,899 - #8 char
INFO  00:03:17,900 - #8 z
INFO  00:03:17,900 - #22 [
INFO  00:03:17,900 - #23 ]
INFO  00:03:17,900 - #27 ;
INFO  00:03:17,900 - #20 {
INFO  00:03:17,901 - #6 void
INFO  00:03:17,901 - #8 main
INFO  00:03:17,901 - #29 (
INFO  00:03:17,902 - #30 )
INFO  00:03:17,902 - #8 bool
INFO  00:03:17,902 - #8 cond
INFO  00:03:17,902 - #27 ;
INFO  00:03:17,902 - #20 {
INFO  00:03:17,903 - #8 cond
INFO  00:03:17,903 - #24 =
INFO  00:03:17,903 - #12 false
INFO  00:03:17,903 - #27 ;
INFO  00:03:17,904 - #33 do
INFO  00:03:17,904 - #20 {
INFO  00:03:17,905 - #8 e
INFO  00:03:17,905 - #25 ++
INFO  00:03:17,905 - #27 ;
INFO  00:03:17,905 - #21 }
INFO  00:03:17,906 - #34 while
INFO  00:03:17,906 - #29 (
INFO  00:03:17,906 - #8 cond
INFO  00:03:17,906 - #30 )
INFO  00:03:17,906 - #27 ;
INFO  00:03:17,907 - #3 print
INFO  00:03:17,907 - #29 (
INFO  00:03:17,907 - #8 e
INFO  00:03:17,907 - #30 )
INFO  00:03:17,907 - #27 ;
INFO  00:03:17,907 - #3 print
INFO  00:03:17,908 - #29 (
INFO  00:03:17,908 - #9 1000
INFO  00:03:17,908 - #30 )
INFO  00:03:17,908 - #27 ;
INFO  00:03:17,908 - #21 }
INFO  00:03:17,908 - #21 }
INFO  00:03:17,909 - =====================SINTAKSNO_STABLO=========================
INFO  00:03:17,911 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:03:17,913 - ==============================================================
INFO  00:03:17,928 - Pocetak obrade programa Program na liniji 1
INFO  00:03:17,928 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:03:17,929 - Deklarisana konstanta c na liniji 2
INFO  00:03:17,929 - Deklarisana konstanta d na liniji 2
INFO  00:03:17,929 - Deklarisana konstanta g na liniji 2
INFO  00:03:17,929 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:03:17,929 - Deklarisana promenljiva e na liniji 3
INFO  00:03:17,929 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:03:17,929 - Deklarisan niz z na liniji 3
INFO  00:03:17,930 - Pocetak obrade metode main na liniji 5
INFO  00:03:17,930 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:03:17,930 - Deklarisana promenljiva cond na liniji 5
INFO  00:03:17,932 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:03:17,932 - Zavrsetak obrade programa Program na liniji 1
INFO  00:03:17,932 - ======================TABELA_SIMBOLA==========================
INFO  00:03:17,933 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:03:17,933 - ==============================================================
INFO  00:03:17,933 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:03:17,933 - ==============================================================
INFO  00:03:17,934 - ======================GENERISANJE_KODA========================
INFO  00:03:17,941 - Generisanje koda uspesno zavrseno!
INFO  00:03:17,941 - Generisanje izlaznog fajla test\program.obj
INFO  00:03:17,941 - ==============================================================
INFO  00:07:09,507 - Obrada ulaznog fajla test\program.mj
INFO  00:07:09,588 - #2 program
INFO  00:07:09,588 - #8 Program
INFO  00:07:09,588 - #5 const
INFO  00:07:09,589 - #8 int
INFO  00:07:09,589 - #8 c
INFO  00:07:09,590 - #24 =
INFO  00:07:09,590 - #9 10
INFO  00:07:09,590 - #28 ,
INFO  00:07:09,591 - #8 d
INFO  00:07:09,591 - #24 =
INFO  00:07:09,591 - #9 99
INFO  00:07:09,591 - #28 ,
INFO  00:07:09,591 - #8 g
INFO  00:07:09,591 - #24 =
INFO  00:07:09,592 - #9 2
INFO  00:07:09,592 - #27 ;
INFO  00:07:09,592 - #8 int
INFO  00:07:09,593 - #8 e
INFO  00:07:09,593 - #27 ;
INFO  00:07:09,593 - #8 char
INFO  00:07:09,594 - #8 z
INFO  00:07:09,594 - #22 [
INFO  00:07:09,594 - #23 ]
INFO  00:07:09,594 - #27 ;
INFO  00:07:09,594 - #20 {
INFO  00:07:09,595 - #6 void
INFO  00:07:09,595 - #8 main
INFO  00:07:09,595 - #29 (
INFO  00:07:09,596 - #30 )
INFO  00:07:09,596 - #8 bool
INFO  00:07:09,596 - #8 cond
INFO  00:07:09,596 - #27 ;
INFO  00:07:09,596 - #20 {
INFO  00:07:09,596 - #8 cond
INFO  00:07:09,596 - #24 =
INFO  00:07:09,597 - #12 false
INFO  00:07:09,597 - #27 ;
INFO  00:07:09,597 - #33 do
INFO  00:07:09,597 - #20 {
INFO  00:07:09,598 - #8 e
INFO  00:07:09,598 - #25 ++
INFO  00:07:09,598 - #27 ;
INFO  00:07:09,599 - #21 }
INFO  00:07:09,599 - #34 while
INFO  00:07:09,599 - #29 (
INFO  00:07:09,599 - #8 cond
INFO  00:07:09,599 - #30 )
INFO  00:07:09,600 - #27 ;
INFO  00:07:09,600 - #3 print
INFO  00:07:09,601 - #29 (
INFO  00:07:09,601 - #8 e
INFO  00:07:09,601 - #30 )
INFO  00:07:09,602 - #27 ;
INFO  00:07:09,602 - #3 print
INFO  00:07:09,602 - #29 (
INFO  00:07:09,602 - #9 1000
INFO  00:07:09,602 - #30 )
INFO  00:07:09,602 - #27 ;
INFO  00:07:09,602 - #21 }
INFO  00:07:09,603 - #21 }
INFO  00:07:09,603 - =====================SINTAKSNO_STABLO=========================
INFO  00:07:09,605 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:07:09,606 - ==============================================================
INFO  00:07:09,622 - Pocetak obrade programa Program na liniji 1
INFO  00:07:09,622 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:07:09,623 - Deklarisana konstanta c na liniji 2
INFO  00:07:09,623 - Deklarisana konstanta d na liniji 2
INFO  00:07:09,623 - Deklarisana konstanta g na liniji 2
INFO  00:07:09,624 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:07:09,624 - Deklarisana promenljiva e na liniji 3
INFO  00:07:09,624 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:07:09,624 - Deklarisan niz z na liniji 3
INFO  00:07:09,625 - Pocetak obrade metode main na liniji 5
INFO  00:07:09,625 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:07:09,625 - Deklarisana promenljiva cond na liniji 5
INFO  00:07:09,626 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:07:09,627 - Zavrsetak obrade programa Program na liniji 1
INFO  00:07:09,627 - ======================TABELA_SIMBOLA==========================
INFO  00:07:09,627 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:07:09,627 - ==============================================================
INFO  00:07:09,628 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:07:09,628 - ==============================================================
INFO  00:07:09,628 - ======================GENERISANJE_KODA========================
INFO  00:07:09,633 - Generisanje koda uspesno zavrseno!
INFO  00:07:09,634 - Generisanje izlaznog fajla test\program.obj
INFO  00:07:09,634 - ==============================================================
INFO  00:07:14,553 - Obrada ulaznog fajla test\program.mj
INFO  00:07:14,652 - #2 program
INFO  00:07:14,652 - #8 Program
INFO  00:07:14,652 - #5 const
INFO  00:07:14,653 - #8 int
INFO  00:07:14,653 - #8 c
INFO  00:07:14,655 - #24 =
INFO  00:07:14,655 - #9 10
INFO  00:07:14,655 - #28 ,
INFO  00:07:14,657 - #8 d
INFO  00:07:14,657 - #24 =
INFO  00:07:14,658 - #9 99
INFO  00:07:14,658 - #28 ,
INFO  00:07:14,658 - #8 g
INFO  00:07:14,658 - #24 =
INFO  00:07:14,658 - #9 2
INFO  00:07:14,658 - #27 ;
INFO  00:07:14,658 - #8 int
INFO  00:07:14,660 - #8 e
INFO  00:07:14,660 - #27 ;
INFO  00:07:14,660 - #8 char
INFO  00:07:14,661 - #8 z
INFO  00:07:14,661 - #22 [
INFO  00:07:14,661 - #23 ]
INFO  00:07:14,662 - #27 ;
INFO  00:07:14,662 - #20 {
INFO  00:07:14,662 - #6 void
INFO  00:07:14,662 - #8 main
INFO  00:07:14,662 - #29 (
INFO  00:07:14,663 - #30 )
INFO  00:07:14,663 - #8 bool
INFO  00:07:14,663 - #8 cond
INFO  00:07:14,663 - #27 ;
INFO  00:07:14,663 - #20 {
INFO  00:07:14,663 - #8 cond
INFO  00:07:14,664 - #24 =
INFO  00:07:14,664 - #12 false
INFO  00:07:14,664 - #27 ;
INFO  00:07:14,665 - #33 do
INFO  00:07:14,665 - #20 {
INFO  00:07:14,666 - #8 e
INFO  00:07:14,666 - #25 ++
INFO  00:07:14,666 - #27 ;
INFO  00:07:14,666 - #21 }
INFO  00:07:14,666 - #34 while
INFO  00:07:14,666 - #29 (
INFO  00:07:14,666 - #8 cond
INFO  00:07:14,666 - #30 )
INFO  00:07:14,667 - #27 ;
INFO  00:07:14,667 - #3 print
INFO  00:07:14,668 - #29 (
INFO  00:07:14,668 - #8 e
INFO  00:07:14,668 - #30 )
INFO  00:07:14,668 - #27 ;
INFO  00:07:14,668 - #3 print
INFO  00:07:14,668 - #29 (
INFO  00:07:14,668 - #9 1000
INFO  00:07:14,669 - #30 )
INFO  00:07:14,669 - #27 ;
INFO  00:07:14,669 - #21 }
INFO  00:07:14,669 - #21 }
INFO  00:07:14,670 - =====================SINTAKSNO_STABLO=========================
INFO  00:07:14,672 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:07:14,672 - ==============================================================
INFO  00:07:14,685 - Pocetak obrade programa Program na liniji 1
INFO  00:07:14,685 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:07:14,686 - Deklarisana konstanta c na liniji 2
INFO  00:07:14,687 - Deklarisana konstanta d na liniji 2
INFO  00:07:14,687 - Deklarisana konstanta g na liniji 2
INFO  00:07:14,687 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:07:14,687 - Deklarisana promenljiva e na liniji 3
INFO  00:07:14,687 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:07:14,687 - Deklarisan niz z na liniji 3
INFO  00:07:14,688 - Pocetak obrade metode main na liniji 5
INFO  00:07:14,688 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:07:14,688 - Deklarisana promenljiva cond na liniji 5
INFO  00:07:14,690 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:07:14,690 - Zavrsetak obrade programa Program na liniji 1
INFO  00:07:14,690 - ======================TABELA_SIMBOLA==========================
INFO  00:07:14,691 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:07:14,691 - ==============================================================
INFO  00:07:14,691 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:07:14,691 - ==============================================================
INFO  00:07:14,691 - ======================GENERISANJE_KODA========================
INFO  00:07:14,714 - Generisanje koda uspesno zavrseno!
INFO  00:07:14,714 - Generisanje izlaznog fajla test\program.obj
INFO  00:07:14,714 - ==============================================================
INFO  00:07:26,033 - Obrada ulaznog fajla test\program.mj
INFO  00:07:26,142 - #2 program
INFO  00:07:26,143 - #8 Program
INFO  00:07:26,143 - #5 const
INFO  00:07:26,144 - #8 int
INFO  00:07:26,144 - #8 c
INFO  00:07:26,145 - #24 =
INFO  00:07:26,145 - #9 10
INFO  00:07:26,146 - #28 ,
INFO  00:07:26,147 - #8 d
INFO  00:07:26,147 - #24 =
INFO  00:07:26,148 - #9 99
INFO  00:07:26,148 - #28 ,
INFO  00:07:26,148 - #8 g
INFO  00:07:26,148 - #24 =
INFO  00:07:26,149 - #9 2
INFO  00:07:26,149 - #27 ;
INFO  00:07:26,149 - #8 int
INFO  00:07:26,151 - #8 e
INFO  00:07:26,151 - #27 ;
INFO  00:07:26,151 - #8 char
INFO  00:07:26,152 - #8 z
INFO  00:07:26,153 - #22 [
INFO  00:07:26,153 - #23 ]
INFO  00:07:26,153 - #27 ;
INFO  00:07:26,153 - #20 {
INFO  00:07:26,153 - #6 void
INFO  00:07:26,153 - #8 main
INFO  00:07:26,153 - #29 (
INFO  00:07:26,155 - #30 )
INFO  00:07:26,155 - #8 bool
INFO  00:07:26,155 - #8 cond
INFO  00:07:26,155 - #27 ;
INFO  00:07:26,155 - #20 {
INFO  00:07:26,156 - #8 cond
INFO  00:07:26,156 - #24 =
INFO  00:07:26,156 - #12 false
INFO  00:07:26,156 - #27 ;
INFO  00:07:26,157 - #33 do
INFO  00:07:26,157 - #20 {
INFO  00:07:26,159 - #8 e
INFO  00:07:26,159 - #25 ++
INFO  00:07:26,159 - #27 ;
INFO  00:07:26,160 - #21 }
INFO  00:07:26,160 - #34 while
INFO  00:07:26,160 - #29 (
INFO  00:07:26,160 - #8 cond
INFO  00:07:26,160 - #30 )
INFO  00:07:26,161 - #27 ;
INFO  00:07:26,161 - #3 print
INFO  00:07:26,161 - #29 (
INFO  00:07:26,161 - #8 e
INFO  00:07:26,161 - #30 )
INFO  00:07:26,162 - #27 ;
INFO  00:07:26,162 - #3 print
INFO  00:07:26,162 - #29 (
INFO  00:07:26,162 - #9 1000
INFO  00:07:26,162 - #30 )
INFO  00:07:26,162 - #27 ;
INFO  00:07:26,162 - #21 }
INFO  00:07:26,162 - #21 }
INFO  00:07:26,163 - =====================SINTAKSNO_STABLO=========================
INFO  00:07:26,165 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:07:26,166 - ==============================================================
INFO  00:07:26,185 - Pocetak obrade programa Program na liniji 1
INFO  00:07:26,185 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:07:26,186 - Deklarisana konstanta c na liniji 2
INFO  00:07:26,186 - Deklarisana konstanta d na liniji 2
INFO  00:07:26,187 - Deklarisana konstanta g na liniji 2
INFO  00:07:26,187 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:07:26,187 - Deklarisana promenljiva e na liniji 3
INFO  00:07:26,187 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:07:26,187 - Deklarisan niz z na liniji 3
INFO  00:07:26,188 - Pocetak obrade metode main na liniji 5
INFO  00:07:26,188 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:07:26,188 - Deklarisana promenljiva cond na liniji 5
INFO  00:07:26,190 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:07:26,190 - Zavrsetak obrade programa Program na liniji 1
INFO  00:07:26,190 - ======================TABELA_SIMBOLA==========================
INFO  00:07:26,191 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:07:26,191 - ==============================================================
INFO  00:07:26,191 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:07:26,191 - ==============================================================
INFO  00:07:26,191 - ======================GENERISANJE_KODA========================
INFO  00:09:28,359 - Obrada ulaznog fajla test\program.mj
INFO  00:09:28,434 - #2 program
INFO  00:09:28,434 - #8 Program
INFO  00:09:28,434 - #5 const
INFO  00:09:28,435 - #8 int
INFO  00:09:28,436 - #8 c
INFO  00:09:28,436 - #24 =
INFO  00:09:28,436 - #9 10
INFO  00:09:28,436 - #28 ,
INFO  00:09:28,439 - #8 d
INFO  00:09:28,439 - #24 =
INFO  00:09:28,439 - #9 99
INFO  00:09:28,439 - #28 ,
INFO  00:09:28,440 - #8 g
INFO  00:09:28,440 - #24 =
INFO  00:09:28,440 - #9 2
INFO  00:09:28,440 - #27 ;
INFO  00:09:28,441 - #8 int
INFO  00:09:28,444 - #8 e
INFO  00:09:28,444 - #27 ;
INFO  00:09:28,444 - #8 char
INFO  00:09:28,448 - #8 z
INFO  00:09:28,448 - #22 [
INFO  00:09:28,448 - #23 ]
INFO  00:09:28,448 - #27 ;
INFO  00:09:28,448 - #20 {
INFO  00:09:28,449 - #6 void
INFO  00:09:28,449 - #8 main
INFO  00:09:28,449 - #29 (
INFO  00:09:28,450 - #30 )
INFO  00:09:28,450 - #8 bool
INFO  00:09:28,450 - #8 cond
INFO  00:09:28,450 - #27 ;
INFO  00:09:28,450 - #20 {
INFO  00:09:28,450 - #8 cond
INFO  00:09:28,450 - #24 =
INFO  00:09:28,451 - #12 false
INFO  00:09:28,451 - #27 ;
INFO  00:09:28,451 - #33 do
INFO  00:09:28,452 - #20 {
INFO  00:09:28,453 - #8 e
INFO  00:09:28,453 - #25 ++
INFO  00:09:28,453 - #27 ;
INFO  00:09:28,453 - #21 }
INFO  00:09:28,453 - #34 while
INFO  00:09:28,453 - #29 (
INFO  00:09:28,454 - #8 cond
INFO  00:09:28,454 - #30 )
INFO  00:09:28,454 - #27 ;
INFO  00:09:28,454 - #3 print
INFO  00:09:28,455 - #29 (
INFO  00:09:28,456 - #8 e
INFO  00:09:28,456 - #30 )
INFO  00:09:28,456 - #27 ;
INFO  00:09:28,456 - #3 print
INFO  00:09:28,457 - #29 (
INFO  00:09:28,457 - #9 1000
INFO  00:09:28,457 - #30 )
INFO  00:09:28,457 - #27 ;
INFO  00:09:28,457 - #21 }
INFO  00:09:28,457 - #21 }
INFO  00:09:28,458 - =====================SINTAKSNO_STABLO=========================
INFO  00:09:28,461 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:09:28,462 - ==============================================================
INFO  00:09:28,477 - Pocetak obrade programa Program na liniji 1
INFO  00:09:28,477 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:09:28,477 - Deklarisana konstanta c na liniji 2
INFO  00:09:28,478 - Deklarisana konstanta d na liniji 2
INFO  00:09:28,478 - Deklarisana konstanta g na liniji 2
INFO  00:09:28,478 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:09:28,478 - Deklarisana promenljiva e na liniji 3
INFO  00:09:28,478 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:09:28,478 - Deklarisan niz z na liniji 3
INFO  00:09:28,479 - Pocetak obrade metode main na liniji 5
INFO  00:09:28,479 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:09:28,479 - Deklarisana promenljiva cond na liniji 5
INFO  00:09:28,481 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:09:28,481 - Zavrsetak obrade programa Program na liniji 1
INFO  00:09:28,481 - ======================TABELA_SIMBOLA==========================
INFO  00:09:28,481 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:09:28,481 - ==============================================================
INFO  00:09:28,481 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:09:28,481 - ==============================================================
INFO  00:09:28,482 - ======================GENERISANJE_KODA========================
INFO  00:09:28,487 - Generisanje koda uspesno zavrseno!
INFO  00:09:28,488 - Generisanje izlaznog fajla test\program.obj
INFO  00:09:28,488 - ==============================================================
INFO  00:10:32,086 - Obrada ulaznog fajla test\program.mj
INFO  00:10:32,166 - #2 program
INFO  00:10:32,166 - #8 Program
INFO  00:10:32,166 - #5 const
INFO  00:10:32,168 - #8 int
INFO  00:10:32,168 - #8 c
INFO  00:10:32,169 - #24 =
INFO  00:10:32,169 - #9 10
INFO  00:10:32,169 - #28 ,
INFO  00:10:32,171 - #8 d
INFO  00:10:32,171 - #24 =
INFO  00:10:32,171 - #9 99
INFO  00:10:32,171 - #28 ,
INFO  00:10:32,171 - #8 g
INFO  00:10:32,171 - #24 =
INFO  00:10:32,171 - #9 2
INFO  00:10:32,171 - #27 ;
INFO  00:10:32,172 - #8 int
INFO  00:10:32,173 - #8 e
INFO  00:10:32,173 - #27 ;
INFO  00:10:32,173 - #8 char
INFO  00:10:32,174 - #8 z
INFO  00:10:32,174 - #22 [
INFO  00:10:32,174 - #23 ]
INFO  00:10:32,174 - #27 ;
INFO  00:10:32,174 - #20 {
INFO  00:10:32,174 - #6 void
INFO  00:10:32,175 - #8 main
INFO  00:10:32,175 - #29 (
INFO  00:10:32,176 - #30 )
INFO  00:10:32,176 - #8 bool
INFO  00:10:32,176 - #8 cond
INFO  00:10:32,176 - #27 ;
INFO  00:10:32,176 - #20 {
INFO  00:10:32,176 - #8 cond
INFO  00:10:32,176 - #24 =
INFO  00:10:32,177 - #12 false
INFO  00:10:32,177 - #27 ;
INFO  00:10:32,177 - #33 do
INFO  00:10:32,178 - #20 {
INFO  00:10:32,179 - #8 e
INFO  00:10:32,179 - #25 ++
INFO  00:10:32,179 - #27 ;
INFO  00:10:32,179 - #21 }
INFO  00:10:32,179 - #34 while
INFO  00:10:32,179 - #29 (
INFO  00:10:32,180 - #8 cond
INFO  00:10:32,180 - #30 )
INFO  00:10:32,180 - #27 ;
INFO  00:10:32,181 - #3 print
INFO  00:10:32,181 - #29 (
INFO  00:10:32,181 - #8 e
INFO  00:10:32,181 - #30 )
INFO  00:10:32,181 - #27 ;
INFO  00:10:32,181 - #3 print
INFO  00:10:32,182 - #29 (
INFO  00:10:32,182 - #9 1000
INFO  00:10:32,182 - #30 )
INFO  00:10:32,182 - #27 ;
INFO  00:10:32,182 - #21 }
INFO  00:10:32,182 - #21 }
INFO  00:10:32,183 - =====================SINTAKSNO_STABLO=========================
INFO  00:10:32,185 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:10:32,185 - ==============================================================
INFO  00:10:32,201 - Pocetak obrade programa Program na liniji 1
INFO  00:10:32,202 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:10:32,202 - Deklarisana konstanta c na liniji 2
INFO  00:10:32,202 - Deklarisana konstanta d na liniji 2
INFO  00:10:32,203 - Deklarisana konstanta g na liniji 2
INFO  00:10:32,203 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:10:32,203 - Deklarisana promenljiva e na liniji 3
INFO  00:10:32,203 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:10:32,203 - Deklarisan niz z na liniji 3
INFO  00:10:32,204 - Pocetak obrade metode main na liniji 5
INFO  00:10:32,204 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:10:32,204 - Deklarisana promenljiva cond na liniji 5
INFO  00:10:32,205 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:10:32,206 - Zavrsetak obrade programa Program na liniji 1
INFO  00:10:32,206 - ======================TABELA_SIMBOLA==========================
INFO  00:10:32,206 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:10:32,206 - ==============================================================
INFO  00:10:32,206 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:10:32,206 - ==============================================================
INFO  00:10:32,207 - ======================GENERISANJE_KODA========================
INFO  00:10:32,211 - Generisanje koda uspesno zavrseno!
INFO  00:10:32,212 - Generisanje izlaznog fajla test\program.obj
INFO  00:10:32,212 - ==============================================================
INFO  00:10:46,549 - Obrada ulaznog fajla test\program.mj
INFO  00:10:46,624 - #2 program
INFO  00:10:46,625 - #8 Program
INFO  00:10:46,625 - #5 const
INFO  00:10:46,626 - #8 int
INFO  00:10:46,626 - #8 c
INFO  00:10:46,627 - #24 =
INFO  00:10:46,627 - #9 10
INFO  00:10:46,627 - #28 ,
INFO  00:10:46,628 - #8 d
INFO  00:10:46,628 - #24 =
INFO  00:10:46,628 - #9 99
INFO  00:10:46,629 - #28 ,
INFO  00:10:46,629 - #8 g
INFO  00:10:46,629 - #24 =
INFO  00:10:46,629 - #9 2
INFO  00:10:46,629 - #27 ;
INFO  00:10:46,629 - #8 int
INFO  00:10:46,631 - #8 e
INFO  00:10:46,631 - #27 ;
INFO  00:10:46,631 - #8 char
INFO  00:10:46,632 - #8 z
INFO  00:10:46,633 - #22 [
INFO  00:10:46,633 - #23 ]
INFO  00:10:46,633 - #27 ;
INFO  00:10:46,633 - #20 {
INFO  00:10:46,633 - #6 void
INFO  00:10:46,633 - #8 main
INFO  00:10:46,633 - #29 (
INFO  00:10:46,634 - #30 )
INFO  00:10:46,634 - #8 bool
INFO  00:10:46,634 - #8 cond
INFO  00:10:46,635 - #27 ;
INFO  00:10:46,635 - #20 {
INFO  00:10:46,635 - #8 cond
INFO  00:10:46,635 - #24 =
INFO  00:10:46,635 - #12 false
INFO  00:10:46,635 - #27 ;
INFO  00:10:46,636 - #33 do
INFO  00:10:46,636 - #20 {
INFO  00:10:46,637 - #8 e
INFO  00:10:46,637 - #25 ++
INFO  00:10:46,637 - #27 ;
INFO  00:10:46,637 - #21 }
INFO  00:10:46,637 - #34 while
INFO  00:10:46,637 - #29 (
INFO  00:10:46,637 - #8 cond
INFO  00:10:46,638 - #30 )
INFO  00:10:46,638 - #27 ;
INFO  00:10:46,638 - #3 print
INFO  00:10:46,639 - #29 (
INFO  00:10:46,639 - #8 e
INFO  00:10:46,639 - #30 )
INFO  00:10:46,639 - #27 ;
INFO  00:10:46,639 - #3 print
INFO  00:10:46,640 - #29 (
INFO  00:10:46,640 - #9 1000
INFO  00:10:46,640 - #30 )
INFO  00:10:46,640 - #27 ;
INFO  00:10:46,640 - #21 }
INFO  00:10:46,640 - #21 }
INFO  00:10:46,641 - =====================SINTAKSNO_STABLO=========================
INFO  00:10:46,643 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:10:46,643 - ==============================================================
INFO  00:10:46,657 - Pocetak obrade programa Program na liniji 1
INFO  00:10:46,657 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:10:46,659 - Deklarisana konstanta c na liniji 2
INFO  00:10:46,659 - Deklarisana konstanta d na liniji 2
INFO  00:10:46,659 - Deklarisana konstanta g na liniji 2
INFO  00:10:46,659 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:10:46,659 - Deklarisana promenljiva e na liniji 3
INFO  00:10:46,659 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:10:46,659 - Deklarisan niz z na liniji 3
INFO  00:10:46,661 - Pocetak obrade metode main na liniji 5
INFO  00:10:46,662 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:10:46,662 - Deklarisana promenljiva cond na liniji 5
INFO  00:10:46,664 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:10:46,664 - Zavrsetak obrade programa Program na liniji 1
INFO  00:10:46,664 - ======================TABELA_SIMBOLA==========================
INFO  00:10:46,665 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:10:46,665 - ==============================================================
INFO  00:10:46,665 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:10:46,665 - ==============================================================
INFO  00:10:46,665 - ======================GENERISANJE_KODA========================
INFO  00:10:46,670 - Generisanje koda uspesno zavrseno!
INFO  00:10:46,670 - Generisanje izlaznog fajla test\program.obj
INFO  00:10:46,670 - ==============================================================
INFO  00:11:28,916 - Obrada ulaznog fajla test\program.mj
INFO  00:11:29,010 - #2 program
INFO  00:11:29,010 - #8 Program
INFO  00:11:29,010 - #5 const
INFO  00:11:29,011 - #8 int
INFO  00:11:29,011 - #8 c
INFO  00:11:29,012 - #24 =
INFO  00:11:29,012 - #9 10
INFO  00:11:29,012 - #28 ,
INFO  00:11:29,013 - #8 d
INFO  00:11:29,013 - #24 =
INFO  00:11:29,013 - #9 99
INFO  00:11:29,013 - #28 ,
INFO  00:11:29,013 - #8 g
INFO  00:11:29,014 - #24 =
INFO  00:11:29,014 - #9 2
INFO  00:11:29,014 - #27 ;
INFO  00:11:29,014 - #8 int
INFO  00:11:29,016 - #8 e
INFO  00:11:29,016 - #27 ;
INFO  00:11:29,017 - #8 char
INFO  00:11:29,018 - #8 z
INFO  00:11:29,018 - #22 [
INFO  00:11:29,019 - #23 ]
INFO  00:11:29,019 - #27 ;
INFO  00:11:29,019 - #20 {
INFO  00:11:29,019 - #6 void
INFO  00:11:29,019 - #8 main
INFO  00:11:29,019 - #29 (
INFO  00:11:29,020 - #30 )
INFO  00:11:29,020 - #8 bool
INFO  00:11:29,021 - #8 cond
INFO  00:11:29,021 - #27 ;
INFO  00:11:29,021 - #20 {
INFO  00:11:29,021 - #8 cond
INFO  00:11:29,021 - #24 =
INFO  00:11:29,022 - #12 false
INFO  00:11:29,022 - #27 ;
INFO  00:11:29,022 - #8 e
INFO  00:11:29,023 - #24 =
INFO  00:11:29,023 - #9 0
INFO  00:11:29,023 - #27 ;
INFO  00:11:29,023 - #33 do
INFO  00:11:29,023 - #20 {
INFO  00:11:29,024 - #8 e
INFO  00:11:29,025 - #25 ++
INFO  00:11:29,025 - #27 ;
INFO  00:11:29,025 - #21 }
INFO  00:11:29,025 - #34 while
INFO  00:11:29,025 - #29 (
INFO  00:11:29,025 - #8 cond
INFO  00:11:29,025 - #30 )
INFO  00:11:29,026 - #27 ;
INFO  00:11:29,026 - #3 print
INFO  00:11:29,026 - #29 (
INFO  00:11:29,026 - #8 e
INFO  00:11:29,026 - #30 )
INFO  00:11:29,026 - #27 ;
INFO  00:11:29,026 - #3 print
INFO  00:11:29,027 - #29 (
INFO  00:11:29,027 - #9 1000
INFO  00:11:29,027 - #30 )
INFO  00:11:29,027 - #27 ;
INFO  00:11:29,027 - #21 }
INFO  00:11:29,027 - #21 }
INFO  00:11:29,030 - =====================SINTAKSNO_STABLO=========================
INFO  00:11:29,032 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       cond
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_design(
                  Assignment(
                    Designator_1(
                     e
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_multi]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:11:29,032 - ==============================================================
INFO  00:11:29,045 - Pocetak obrade programa Program na liniji 1
INFO  00:11:29,045 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:11:29,046 - Deklarisana konstanta c na liniji 2
INFO  00:11:29,046 - Deklarisana konstanta d na liniji 2
INFO  00:11:29,046 - Deklarisana konstanta g na liniji 2
INFO  00:11:29,046 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:11:29,046 - Deklarisana promenljiva e na liniji 3
INFO  00:11:29,047 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:11:29,048 - Deklarisan niz z na liniji 3
INFO  00:11:29,049 - Pocetak obrade metode main na liniji 5
INFO  00:11:29,049 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:11:29,050 - Deklarisana promenljiva cond na liniji 5
INFO  00:11:29,050 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:11:29,050 - Zavrsetak obrade programa Program na liniji 1
INFO  00:11:29,050 - ======================TABELA_SIMBOLA==========================
INFO  00:11:29,051 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:11:29,051 - ==============================================================
INFO  00:11:29,051 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:11:29,051 - ==============================================================
INFO  00:11:29,051 - ======================GENERISANJE_KODA========================
INFO  00:11:29,056 - Generisanje koda uspesno zavrseno!
INFO  00:11:29,056 - Generisanje izlaznog fajla test\program.obj
INFO  00:11:29,057 - ==============================================================
INFO  00:12:05,657 - Obrada ulaznog fajla test\program.mj
INFO  00:12:05,745 - #2 program
INFO  00:12:05,745 - #8 Program
INFO  00:12:05,745 - #5 const
INFO  00:12:05,746 - #8 int
INFO  00:12:05,746 - #8 c
INFO  00:12:05,747 - #24 =
INFO  00:12:05,747 - #9 10
INFO  00:12:05,747 - #28 ,
INFO  00:12:05,748 - #8 d
INFO  00:12:05,748 - #24 =
INFO  00:12:05,748 - #9 99
INFO  00:12:05,748 - #28 ,
INFO  00:12:05,748 - #8 g
INFO  00:12:05,748 - #24 =
INFO  00:12:05,749 - #9 2
INFO  00:12:05,749 - #27 ;
INFO  00:12:05,749 - #8 int
INFO  00:12:05,750 - #8 e
INFO  00:12:05,750 - #27 ;
INFO  00:12:05,750 - #8 char
INFO  00:12:05,752 - #8 z
INFO  00:12:05,752 - #22 [
INFO  00:12:05,752 - #23 ]
INFO  00:12:05,752 - #27 ;
INFO  00:12:05,752 - #20 {
INFO  00:12:05,752 - #6 void
INFO  00:12:05,752 - #8 main
INFO  00:12:05,752 - #29 (
INFO  00:12:05,753 - #30 )
INFO  00:12:05,753 - #8 bool
INFO  00:12:05,753 - #8 cond
INFO  00:12:05,753 - #27 ;
INFO  00:12:05,754 - #20 {
INFO  00:12:05,754 - #8 cond
INFO  00:12:05,754 - #24 =
INFO  00:12:05,754 - #12 false
INFO  00:12:05,754 - #27 ;
INFO  00:12:05,755 - #8 e
INFO  00:12:05,756 - #24 =
INFO  00:12:05,756 - #9 0
INFO  00:12:05,756 - #27 ;
INFO  00:12:05,757 - #33 do
INFO  00:12:05,757 - #20 {
INFO  00:12:05,758 - #8 e
INFO  00:12:05,758 - #25 ++
INFO  00:12:05,758 - #27 ;
INFO  00:12:05,758 - #21 }
INFO  00:12:05,758 - #34 while
INFO  00:12:05,759 - #29 (
INFO  00:12:05,759 - #8 cond
INFO  00:12:05,759 - #30 )
INFO  00:12:05,759 - #27 ;
INFO  00:12:05,759 - #3 print
INFO  00:12:05,760 - #29 (
INFO  00:12:05,760 - #8 e
INFO  00:12:05,760 - #30 )
INFO  00:12:05,760 - #27 ;
INFO  00:12:05,760 - #3 print
INFO  00:12:05,760 - #29 (
INFO  00:12:05,760 - #9 1000
INFO  00:12:05,760 - #30 )
INFO  00:12:05,761 - #27 ;
INFO  00:12:05,761 - #21 }
INFO  00:12:05,761 - #21 }
INFO  00:12:05,762 - =====================SINTAKSNO_STABLO=========================
INFO  00:12:05,764 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       cond
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_design(
                  Assignment(
                    Designator_1(
                     e
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_multi]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:12:05,764 - ==============================================================
INFO  00:12:05,777 - Pocetak obrade programa Program na liniji 1
INFO  00:12:05,777 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:12:05,778 - Deklarisana konstanta c na liniji 2
INFO  00:12:05,779 - Deklarisana konstanta d na liniji 2
INFO  00:12:05,779 - Deklarisana konstanta g na liniji 2
INFO  00:12:05,779 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:12:05,779 - Deklarisana promenljiva e na liniji 3
INFO  00:12:05,779 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:12:05,781 - Deklarisan niz z na liniji 3
INFO  00:12:05,782 - Pocetak obrade metode main na liniji 5
INFO  00:12:05,782 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:12:05,782 - Deklarisana promenljiva cond na liniji 5
INFO  00:12:05,783 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:12:05,783 - Zavrsetak obrade programa Program na liniji 1
INFO  00:12:05,783 - ======================TABELA_SIMBOLA==========================
INFO  00:12:05,783 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:12:05,784 - ==============================================================
INFO  00:12:05,784 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:12:05,784 - ==============================================================
INFO  00:12:05,784 - ======================GENERISANJE_KODA========================
INFO  00:12:05,790 - Generisanje koda uspesno zavrseno!
INFO  00:12:05,791 - Generisanje izlaznog fajla test\program.obj
INFO  00:12:05,791 - ==============================================================
INFO  00:14:50,318 - Obrada ulaznog fajla test\program.mj
INFO  00:14:50,394 - #2 program
INFO  00:14:50,395 - #8 Program
INFO  00:14:50,395 - #5 const
INFO  00:14:50,396 - #8 int
INFO  00:14:50,396 - #8 c
INFO  00:14:50,398 - #24 =
INFO  00:14:50,398 - #9 10
INFO  00:14:50,398 - #28 ,
INFO  00:14:50,399 - #8 d
INFO  00:14:50,399 - #24 =
INFO  00:14:50,400 - #9 99
INFO  00:14:50,400 - #28 ,
INFO  00:14:50,400 - #8 g
INFO  00:14:50,400 - #24 =
INFO  00:14:50,401 - #9 2
INFO  00:14:50,401 - #27 ;
INFO  00:14:50,401 - #8 int
INFO  00:14:50,402 - #8 e
INFO  00:14:50,402 - #27 ;
INFO  00:14:50,403 - #8 char
INFO  00:14:50,404 - #8 z
INFO  00:14:50,404 - #22 [
INFO  00:14:50,404 - #23 ]
INFO  00:14:50,404 - #27 ;
INFO  00:14:50,404 - #20 {
INFO  00:14:50,404 - #6 void
INFO  00:14:50,405 - #8 main
INFO  00:14:50,405 - #29 (
INFO  00:14:50,405 - #30 )
INFO  00:14:50,406 - #8 bool
INFO  00:14:50,406 - #8 cond
INFO  00:14:50,406 - #27 ;
INFO  00:14:50,406 - #20 {
INFO  00:14:50,406 - #8 cond
INFO  00:14:50,406 - #24 =
INFO  00:14:50,407 - #12 false
INFO  00:14:50,407 - #27 ;
INFO  00:14:50,407 - #8 e
INFO  00:14:50,408 - #24 =
INFO  00:14:50,408 - #9 0
INFO  00:14:50,408 - #27 ;
INFO  00:14:50,408 - #33 do
INFO  00:14:50,408 - #20 {
INFO  00:14:50,409 - #8 e
INFO  00:14:50,409 - #25 ++
INFO  00:14:50,409 - #27 ;
INFO  00:14:50,410 - #21 }
INFO  00:14:50,410 - #34 while
INFO  00:14:50,410 - #29 (
INFO  00:14:50,410 - #8 cond
INFO  00:14:50,411 - #30 )
INFO  00:14:50,411 - #27 ;
INFO  00:14:50,414 - #3 print
INFO  00:14:50,414 - #29 (
INFO  00:14:50,414 - #8 e
INFO  00:14:50,414 - #30 )
INFO  00:14:50,415 - #27 ;
INFO  00:14:50,415 - #3 print
INFO  00:14:50,415 - #29 (
INFO  00:14:50,415 - #9 1000
INFO  00:14:50,415 - #30 )
INFO  00:14:50,415 - #27 ;
INFO  00:14:50,415 - #21 }
INFO  00:14:50,415 - #21 }
INFO  00:14:50,416 - =====================SINTAKSNO_STABLO=========================
INFO  00:14:50,418 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       cond
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_design(
                  Assignment(
                    Designator_1(
                     e
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_multi]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:14:50,418 - ==============================================================
INFO  00:14:50,433 - Pocetak obrade programa Program na liniji 1
INFO  00:14:50,433 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:14:50,434 - Deklarisana konstanta c na liniji 2
INFO  00:14:50,434 - Deklarisana konstanta d na liniji 2
INFO  00:14:50,434 - Deklarisana konstanta g na liniji 2
INFO  00:14:50,434 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:14:50,434 - Deklarisana promenljiva e na liniji 3
INFO  00:14:50,435 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:14:50,436 - Deklarisan niz z na liniji 3
INFO  00:14:50,437 - Pocetak obrade metode main na liniji 5
INFO  00:14:50,437 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:14:50,437 - Deklarisana promenljiva cond na liniji 5
INFO  00:14:50,438 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:14:50,438 - Zavrsetak obrade programa Program na liniji 1
INFO  00:14:50,438 - ======================TABELA_SIMBOLA==========================
INFO  00:14:50,438 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:14:50,439 - ==============================================================
INFO  00:14:50,439 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:14:50,439 - ==============================================================
INFO  00:14:50,439 - ======================GENERISANJE_KODA========================
INFO  00:14:50,444 - Generisanje koda uspesno zavrseno!
INFO  00:14:50,444 - Generisanje izlaznog fajla test\program.obj
INFO  00:14:50,444 - ==============================================================
INFO  00:15:07,447 - Obrada ulaznog fajla test\program.mj
INFO  00:15:07,542 - #2 program
INFO  00:15:07,542 - #8 Program
INFO  00:15:07,543 - #5 const
INFO  00:15:07,544 - #8 int
INFO  00:15:07,544 - #8 c
INFO  00:15:07,545 - #24 =
INFO  00:15:07,545 - #9 10
INFO  00:15:07,546 - #28 ,
INFO  00:15:07,547 - #8 d
INFO  00:15:07,548 - #24 =
INFO  00:15:07,548 - #9 99
INFO  00:15:07,548 - #28 ,
INFO  00:15:07,548 - #8 g
INFO  00:15:07,548 - #24 =
INFO  00:15:07,548 - #9 2
INFO  00:15:07,548 - #27 ;
INFO  00:15:07,548 - #8 int
INFO  00:15:07,550 - #8 e
INFO  00:15:07,550 - #27 ;
INFO  00:15:07,550 - #8 char
INFO  00:15:07,552 - #8 z
INFO  00:15:07,552 - #22 [
INFO  00:15:07,552 - #23 ]
INFO  00:15:07,552 - #27 ;
INFO  00:15:07,552 - #20 {
INFO  00:15:07,552 - #6 void
INFO  00:15:07,552 - #8 main
INFO  00:15:07,552 - #29 (
INFO  00:15:07,553 - #30 )
INFO  00:15:07,553 - #8 bool
INFO  00:15:07,554 - #8 cond
INFO  00:15:07,554 - #27 ;
INFO  00:15:07,554 - #20 {
INFO  00:15:07,554 - #8 cond
INFO  00:15:07,554 - #24 =
INFO  00:15:07,554 - #12 false
INFO  00:15:07,554 - #27 ;
INFO  00:15:07,555 - #8 e
INFO  00:15:07,556 - #24 =
INFO  00:15:07,557 - #9 0
INFO  00:15:07,557 - #27 ;
INFO  00:15:07,557 - #33 do
INFO  00:15:07,557 - #20 {
INFO  00:15:07,558 - #8 e
INFO  00:15:07,558 - #25 ++
INFO  00:15:07,558 - #27 ;
INFO  00:15:07,558 - #21 }
INFO  00:15:07,559 - #34 while
INFO  00:15:07,559 - #29 (
INFO  00:15:07,559 - #8 cond
INFO  00:15:07,559 - #30 )
INFO  00:15:07,559 - #27 ;
INFO  00:15:07,560 - #3 print
INFO  00:15:07,560 - #29 (
INFO  00:15:07,560 - #8 e
INFO  00:15:07,560 - #30 )
INFO  00:15:07,560 - #27 ;
INFO  00:15:07,560 - #3 print
INFO  00:15:07,560 - #29 (
INFO  00:15:07,560 - #9 1000
INFO  00:15:07,560 - #30 )
INFO  00:15:07,561 - #27 ;
INFO  00:15:07,561 - #21 }
INFO  00:15:07,561 - #21 }
INFO  00:15:07,562 - =====================SINTAKSNO_STABLO=========================
INFO  00:15:07,563 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       cond
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_design(
                  Assignment(
                    Designator_1(
                     e
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_multi]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:15:07,564 - ==============================================================
INFO  00:15:07,576 - Pocetak obrade programa Program na liniji 1
INFO  00:15:07,576 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:15:07,577 - Deklarisana konstanta c na liniji 2
INFO  00:15:07,577 - Deklarisana konstanta d na liniji 2
INFO  00:15:07,577 - Deklarisana konstanta g na liniji 2
INFO  00:15:07,578 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:15:07,578 - Deklarisana promenljiva e na liniji 3
INFO  00:15:07,578 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:15:07,579 - Deklarisan niz z na liniji 3
INFO  00:15:07,580 - Pocetak obrade metode main na liniji 5
INFO  00:15:07,580 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:15:07,580 - Deklarisana promenljiva cond na liniji 5
INFO  00:15:07,580 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:15:07,581 - Zavrsetak obrade programa Program na liniji 1
INFO  00:15:07,581 - ======================TABELA_SIMBOLA==========================
INFO  00:15:07,581 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:15:07,581 - ==============================================================
INFO  00:15:07,581 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:15:07,581 - ==============================================================
INFO  00:15:07,581 - ======================GENERISANJE_KODA========================
INFO  00:15:07,587 - Generisanje koda uspesno zavrseno!
INFO  00:15:07,587 - Generisanje izlaznog fajla test\program.obj
INFO  00:15:07,588 - ==============================================================
INFO  00:15:09,901 - Obrada ulaznog fajla test\program.mj
INFO  00:15:09,978 - #2 program
INFO  00:15:09,978 - #8 Program
INFO  00:15:09,978 - #5 const
INFO  00:15:09,979 - #8 int
INFO  00:15:09,979 - #8 c
INFO  00:15:09,980 - #24 =
INFO  00:15:09,980 - #9 10
INFO  00:15:09,981 - #28 ,
INFO  00:15:09,982 - #8 d
INFO  00:15:09,982 - #24 =
INFO  00:15:09,982 - #9 99
INFO  00:15:09,982 - #28 ,
INFO  00:15:09,982 - #8 g
INFO  00:15:09,982 - #24 =
INFO  00:15:09,983 - #9 2
INFO  00:15:09,983 - #27 ;
INFO  00:15:09,983 - #8 int
INFO  00:15:09,984 - #8 e
INFO  00:15:09,984 - #27 ;
INFO  00:15:09,985 - #8 char
INFO  00:15:09,986 - #8 z
INFO  00:15:09,986 - #22 [
INFO  00:15:09,986 - #23 ]
INFO  00:15:09,986 - #27 ;
INFO  00:15:09,986 - #20 {
INFO  00:15:09,987 - #6 void
INFO  00:15:09,987 - #8 main
INFO  00:15:09,987 - #29 (
INFO  00:15:09,988 - #30 )
INFO  00:15:09,989 - #8 bool
INFO  00:15:09,989 - #8 cond
INFO  00:15:09,989 - #27 ;
INFO  00:15:09,989 - #20 {
INFO  00:15:09,989 - #8 cond
INFO  00:15:09,989 - #24 =
INFO  00:15:09,989 - #12 false
INFO  00:15:09,990 - #27 ;
INFO  00:15:09,990 - #8 e
INFO  00:15:09,991 - #24 =
INFO  00:15:09,991 - #9 0
INFO  00:15:09,991 - #27 ;
INFO  00:15:09,991 - #33 do
INFO  00:15:09,991 - #20 {
INFO  00:15:09,992 - #8 e
INFO  00:15:09,992 - #25 ++
INFO  00:15:09,992 - #27 ;
INFO  00:15:09,993 - #21 }
INFO  00:15:09,993 - #34 while
INFO  00:15:09,993 - #29 (
INFO  00:15:09,993 - #8 cond
INFO  00:15:09,993 - #30 )
INFO  00:15:09,994 - #27 ;
INFO  00:15:09,994 - #3 print
INFO  00:15:09,994 - #29 (
INFO  00:15:09,994 - #8 e
INFO  00:15:09,994 - #30 )
INFO  00:15:09,994 - #27 ;
INFO  00:15:09,994 - #3 print
INFO  00:15:09,995 - #29 (
INFO  00:15:09,995 - #9 1000
INFO  00:15:09,995 - #30 )
INFO  00:15:09,995 - #27 ;
INFO  00:15:09,995 - #21 }
INFO  00:15:09,995 - #21 }
INFO  00:15:09,996 - =====================SINTAKSNO_STABLO=========================
INFO  00:15:09,998 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       cond
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_design(
                  Assignment(
                    Designator_1(
                     e
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_multi]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:15:09,998 - ==============================================================
INFO  00:15:10,012 - Pocetak obrade programa Program na liniji 1
INFO  00:15:10,013 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:15:10,013 - Deklarisana konstanta c na liniji 2
INFO  00:15:10,013 - Deklarisana konstanta d na liniji 2
INFO  00:15:10,014 - Deklarisana konstanta g na liniji 2
INFO  00:15:10,014 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:15:10,014 - Deklarisana promenljiva e na liniji 3
INFO  00:15:10,014 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:15:10,015 - Deklarisan niz z na liniji 3
INFO  00:15:10,016 - Pocetak obrade metode main na liniji 5
INFO  00:15:10,016 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:15:10,016 - Deklarisana promenljiva cond na liniji 5
INFO  00:15:10,016 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:15:10,016 - Zavrsetak obrade programa Program na liniji 1
INFO  00:15:10,017 - ======================TABELA_SIMBOLA==========================
INFO  00:15:10,017 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:15:10,017 - ==============================================================
INFO  00:15:10,017 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:15:10,017 - ==============================================================
INFO  00:15:10,017 - ======================GENERISANJE_KODA========================
INFO  00:15:10,023 - Generisanje koda uspesno zavrseno!
INFO  00:15:10,023 - Generisanje izlaznog fajla test\program.obj
INFO  00:15:10,023 - ==============================================================
INFO  00:17:34,371 - Obrada ulaznog fajla test\program.mj
INFO  00:17:34,449 - #2 program
INFO  00:17:34,450 - #8 Program
INFO  00:17:34,450 - #5 const
INFO  00:17:34,450 - #8 int
INFO  00:17:34,451 - #8 c
INFO  00:17:34,451 - #24 =
INFO  00:17:34,451 - #9 10
INFO  00:17:34,451 - #28 ,
INFO  00:17:34,452 - #8 d
INFO  00:17:34,453 - #24 =
INFO  00:17:34,453 - #9 99
INFO  00:17:34,453 - #28 ,
INFO  00:17:34,453 - #8 g
INFO  00:17:34,453 - #24 =
INFO  00:17:34,453 - #9 2
INFO  00:17:34,453 - #27 ;
INFO  00:17:34,453 - #8 int
INFO  00:17:34,454 - #8 e
INFO  00:17:34,454 - #27 ;
INFO  00:17:34,455 - #8 char
INFO  00:17:34,456 - #8 z
INFO  00:17:34,456 - #22 [
INFO  00:17:34,456 - #23 ]
INFO  00:17:34,456 - #27 ;
INFO  00:17:34,457 - #20 {
INFO  00:17:34,457 - #6 void
INFO  00:17:34,457 - #8 main
INFO  00:17:34,457 - #29 (
INFO  00:17:34,458 - #30 )
INFO  00:17:34,458 - #8 bool
INFO  00:17:34,458 - #8 cond
INFO  00:17:34,458 - #27 ;
INFO  00:17:34,458 - #20 {
INFO  00:17:34,458 - #8 cond
INFO  00:17:34,459 - #24 =
INFO  00:17:34,459 - #12 false
INFO  00:17:34,459 - #27 ;
INFO  00:17:34,460 - #8 e
INFO  00:17:34,460 - #24 =
INFO  00:17:34,460 - #9 0
INFO  00:17:34,460 - #27 ;
INFO  00:17:34,460 - #33 do
INFO  00:17:34,461 - #20 {
INFO  00:17:34,462 - #8 e
INFO  00:17:34,462 - #25 ++
INFO  00:17:34,462 - #27 ;
INFO  00:17:34,463 - #21 }
INFO  00:17:34,463 - #34 while
INFO  00:17:34,463 - #29 (
INFO  00:17:34,463 - #12 false
INFO  00:17:34,464 - #30 )
INFO  00:17:34,464 - #27 ;
INFO  00:17:34,465 - #3 print
INFO  00:17:34,465 - #29 (
INFO  00:17:34,465 - #8 e
INFO  00:17:34,465 - #30 )
INFO  00:17:34,465 - #27 ;
INFO  00:17:34,465 - #3 print
INFO  00:17:34,465 - #29 (
INFO  00:17:34,466 - #9 1000
INFO  00:17:34,466 - #30 )
INFO  00:17:34,466 - #27 ;
INFO  00:17:34,466 - #21 }
INFO  00:17:34,466 - #21 }
INFO  00:17:34,467 - =====================SINTAKSNO_STABLO=========================
INFO  00:17:34,469 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       cond
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_design(
                  Assignment(
                    Designator_1(
                     e
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_multi]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:17:34,469 - ==============================================================
INFO  00:17:34,484 - Pocetak obrade programa Program na liniji 1
INFO  00:17:34,484 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:17:34,485 - Deklarisana konstanta c na liniji 2
INFO  00:17:34,485 - Deklarisana konstanta d na liniji 2
INFO  00:17:34,485 - Deklarisana konstanta g na liniji 2
INFO  00:17:34,485 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:17:34,485 - Deklarisana promenljiva e na liniji 3
INFO  00:17:34,485 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:17:34,487 - Deklarisan niz z na liniji 3
INFO  00:17:34,488 - Pocetak obrade metode main na liniji 5
INFO  00:17:34,488 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:17:34,488 - Deklarisana promenljiva cond na liniji 5
INFO  00:17:34,488 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:17:34,488 - Zavrsetak obrade programa Program na liniji 1
INFO  00:17:34,488 - ======================TABELA_SIMBOLA==========================
INFO  00:17:34,489 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:17:34,489 - ==============================================================
INFO  00:17:34,489 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:17:34,489 - ==============================================================
INFO  00:17:34,489 - ======================GENERISANJE_KODA========================
INFO  00:17:34,494 - Generisanje koda uspesno zavrseno!
INFO  00:17:34,495 - Generisanje izlaznog fajla test\program.obj
INFO  00:17:34,495 - ==============================================================
INFO  00:17:50,568 - Obrada ulaznog fajla test\program.mj
INFO  00:17:50,645 - #2 program
INFO  00:17:50,645 - #8 Program
INFO  00:17:50,645 - #5 const
INFO  00:17:50,646 - #8 int
INFO  00:17:50,646 - #8 c
INFO  00:17:50,647 - #24 =
INFO  00:17:50,647 - #9 10
INFO  00:17:50,647 - #28 ,
INFO  00:17:50,649 - #8 d
INFO  00:17:50,649 - #24 =
INFO  00:17:50,649 - #9 99
INFO  00:17:50,649 - #28 ,
INFO  00:17:50,649 - #8 g
INFO  00:17:50,649 - #24 =
INFO  00:17:50,649 - #9 2
INFO  00:17:50,649 - #27 ;
INFO  00:17:50,650 - #8 int
INFO  00:17:50,651 - #8 e
INFO  00:17:50,651 - #27 ;
INFO  00:17:50,651 - #8 char
INFO  00:17:50,653 - #8 z
INFO  00:17:50,653 - #22 [
INFO  00:17:50,653 - #23 ]
INFO  00:17:50,653 - #27 ;
INFO  00:17:50,653 - #20 {
INFO  00:17:50,653 - #6 void
INFO  00:17:50,654 - #8 main
INFO  00:17:50,654 - #29 (
INFO  00:17:50,655 - #30 )
INFO  00:17:50,655 - #8 bool
INFO  00:17:50,655 - #8 cond
INFO  00:17:50,655 - #27 ;
INFO  00:17:50,655 - #20 {
INFO  00:17:50,655 - #8 cond
INFO  00:17:50,655 - #24 =
INFO  00:17:50,656 - #12 false
INFO  00:17:50,656 - #27 ;
INFO  00:17:50,656 - #8 e
INFO  00:17:50,657 - #24 =
INFO  00:17:50,657 - #9 0
INFO  00:17:50,657 - #27 ;
INFO  00:17:50,657 - #33 do
INFO  00:17:50,657 - #20 {
INFO  00:17:50,658 - #8 e
INFO  00:17:50,659 - #25 ++
INFO  00:17:50,659 - #27 ;
INFO  00:17:50,659 - #21 }
INFO  00:17:50,659 - #34 while
INFO  00:17:50,659 - #29 (
INFO  00:17:50,659 - #12 false
INFO  00:17:50,659 - #30 )
INFO  00:17:50,660 - #27 ;
INFO  00:17:50,660 - #3 print
INFO  00:17:50,660 - #29 (
INFO  00:17:50,661 - #8 e
INFO  00:17:50,661 - #30 )
INFO  00:17:50,661 - #27 ;
INFO  00:17:50,661 - #3 print
INFO  00:17:50,661 - #29 (
INFO  00:17:50,661 - #9 1000
INFO  00:17:50,662 - #30 )
INFO  00:17:50,662 - #27 ;
INFO  00:17:50,662 - #21 }
INFO  00:17:50,662 - #21 }
INFO  00:17:50,663 - =====================SINTAKSNO_STABLO=========================
INFO  00:17:50,664 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       cond
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_design(
                  Assignment(
                    Designator_1(
                     e
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_multi]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:17:50,665 - ==============================================================
INFO  00:17:50,680 - Pocetak obrade programa Program na liniji 1
INFO  00:17:50,680 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:17:50,681 - Deklarisana konstanta c na liniji 2
INFO  00:17:50,681 - Deklarisana konstanta d na liniji 2
INFO  00:17:50,682 - Deklarisana konstanta g na liniji 2
INFO  00:17:50,682 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:17:50,682 - Deklarisana promenljiva e na liniji 3
INFO  00:17:50,682 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:17:50,683 - Deklarisan niz z na liniji 3
INFO  00:17:50,684 - Pocetak obrade metode main na liniji 5
INFO  00:17:50,684 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:17:50,684 - Deklarisana promenljiva cond na liniji 5
INFO  00:17:50,685 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:17:50,685 - Zavrsetak obrade programa Program na liniji 1
INFO  00:17:50,685 - ======================TABELA_SIMBOLA==========================
INFO  00:17:50,685 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:17:50,685 - ==============================================================
INFO  00:17:50,685 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:17:50,685 - ==============================================================
INFO  00:17:50,686 - ======================GENERISANJE_KODA========================
INFO  00:17:50,691 - Generisanje koda uspesno zavrseno!
INFO  00:17:50,691 - Generisanje izlaznog fajla test\program.obj
INFO  00:17:50,691 - ==============================================================
INFO  00:19:18,261 - Obrada ulaznog fajla test\program.mj
INFO  00:19:18,342 - #2 program
INFO  00:19:18,342 - #8 Program
INFO  00:19:18,342 - #5 const
INFO  00:19:18,343 - #8 int
INFO  00:19:18,344 - #8 c
INFO  00:19:18,345 - #24 =
INFO  00:19:18,345 - #9 10
INFO  00:19:18,345 - #28 ,
INFO  00:19:18,346 - #8 d
INFO  00:19:18,347 - #24 =
INFO  00:19:18,347 - #9 99
INFO  00:19:18,347 - #28 ,
INFO  00:19:18,347 - #8 g
INFO  00:19:18,347 - #24 =
INFO  00:19:18,347 - #9 2
INFO  00:19:18,347 - #27 ;
INFO  00:19:18,347 - #8 int
INFO  00:19:18,349 - #8 e
INFO  00:19:18,349 - #27 ;
INFO  00:19:18,350 - #8 char
INFO  00:19:18,351 - #8 z
INFO  00:19:18,351 - #22 [
INFO  00:19:18,351 - #23 ]
INFO  00:19:18,351 - #27 ;
INFO  00:19:18,351 - #20 {
INFO  00:19:18,351 - #6 void
INFO  00:19:18,351 - #8 main
INFO  00:19:18,351 - #29 (
INFO  00:19:18,352 - #30 )
INFO  00:19:18,352 - #8 bool
INFO  00:19:18,352 - #8 cond
INFO  00:19:18,353 - #27 ;
INFO  00:19:18,353 - #20 {
INFO  00:19:18,353 - #8 cond
INFO  00:19:18,353 - #24 =
INFO  00:19:18,353 - #12 false
INFO  00:19:18,353 - #27 ;
INFO  00:19:18,354 - #8 e
INFO  00:19:18,354 - #24 =
INFO  00:19:18,354 - #9 0
INFO  00:19:18,354 - #27 ;
INFO  00:19:18,355 - #33 do
INFO  00:19:18,355 - #20 {
INFO  00:19:18,356 - #8 e
INFO  00:19:18,356 - #25 ++
INFO  00:19:18,356 - #27 ;
INFO  00:19:18,356 - #21 }
INFO  00:19:18,356 - #34 while
INFO  00:19:18,356 - #29 (
INFO  00:19:18,356 - #11 true
INFO  00:19:18,357 - #30 )
INFO  00:19:18,357 - #27 ;
INFO  00:19:18,357 - #3 print
INFO  00:19:18,358 - #29 (
INFO  00:19:18,358 - #8 e
INFO  00:19:18,358 - #30 )
INFO  00:19:18,358 - #27 ;
INFO  00:19:18,359 - #3 print
INFO  00:19:18,359 - #29 (
INFO  00:19:18,359 - #9 1000
INFO  00:19:18,359 - #30 )
INFO  00:19:18,360 - #27 ;
INFO  00:19:18,360 - #21 }
INFO  00:19:18,361 - #21 }
INFO  00:19:18,363 - =====================SINTAKSNO_STABLO=========================
INFO  00:19:18,365 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       cond
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_design(
                  Assignment(
                    Designator_1(
                     e
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_multi]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_true(
                             true
                            ) [Bool_const_true]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:19:18,366 - ==============================================================
INFO  00:19:18,381 - Pocetak obrade programa Program na liniji 1
INFO  00:19:18,381 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:19:18,382 - Deklarisana konstanta c na liniji 2
INFO  00:19:18,382 - Deklarisana konstanta d na liniji 2
INFO  00:19:18,382 - Deklarisana konstanta g na liniji 2
INFO  00:19:18,382 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:19:18,383 - Deklarisana promenljiva e na liniji 3
INFO  00:19:18,383 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:19:18,384 - Deklarisan niz z na liniji 3
INFO  00:19:18,385 - Pocetak obrade metode main na liniji 5
INFO  00:19:18,385 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:19:18,385 - Deklarisana promenljiva cond na liniji 5
INFO  00:19:18,386 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:19:18,386 - Zavrsetak obrade programa Program na liniji 1
INFO  00:19:18,386 - ======================TABELA_SIMBOLA==========================
INFO  00:19:18,386 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:19:18,387 - ==============================================================
INFO  00:19:18,387 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:19:18,387 - ==============================================================
INFO  00:19:18,387 - ======================GENERISANJE_KODA========================
INFO  00:19:18,392 - Generisanje koda uspesno zavrseno!
INFO  00:19:18,393 - Generisanje izlaznog fajla test\program.obj
INFO  00:19:18,393 - ==============================================================
INFO  00:23:42,943 - Obrada ulaznog fajla test\program.mj
INFO  00:23:43,025 - #2 program
INFO  00:23:43,025 - #8 Program
INFO  00:23:43,025 - #5 const
INFO  00:23:43,026 - #8 int
INFO  00:23:43,026 - #8 c
INFO  00:23:43,027 - #24 =
INFO  00:23:43,027 - #9 10
INFO  00:23:43,027 - #28 ,
INFO  00:23:43,028 - #8 d
INFO  00:23:43,028 - #24 =
INFO  00:23:43,028 - #9 99
INFO  00:23:43,028 - #28 ,
INFO  00:23:43,029 - #8 g
INFO  00:23:43,029 - #24 =
INFO  00:23:43,029 - #9 2
INFO  00:23:43,029 - #27 ;
INFO  00:23:43,029 - #8 int
INFO  00:23:43,030 - #8 e
INFO  00:23:43,030 - #27 ;
INFO  00:23:43,030 - #8 char
INFO  00:23:43,031 - #8 z
INFO  00:23:43,032 - #22 [
INFO  00:23:43,032 - #23 ]
INFO  00:23:43,032 - #27 ;
INFO  00:23:43,032 - #20 {
INFO  00:23:43,032 - #6 void
INFO  00:23:43,032 - #8 main
INFO  00:23:43,032 - #29 (
INFO  00:23:43,033 - #30 )
INFO  00:23:43,033 - #8 bool
INFO  00:23:43,033 - #8 cond
INFO  00:23:43,033 - #27 ;
INFO  00:23:43,033 - #20 {
INFO  00:23:43,034 - #8 cond
INFO  00:23:43,034 - #24 =
INFO  00:23:43,034 - #12 false
INFO  00:23:43,034 - #27 ;
INFO  00:23:43,035 - #8 e
INFO  00:23:43,035 - #24 =
INFO  00:23:43,035 - #9 0
INFO  00:23:43,035 - #27 ;
INFO  00:23:43,035 - #3 print
INFO  00:23:43,035 - #29 (
INFO  00:23:43,036 - #8 d
INFO  00:23:43,036 - #30 )
INFO  00:23:43,036 - #27 ;
INFO  00:23:43,036 - #3 print
INFO  00:23:43,036 - #29 (
INFO  00:23:43,036 - #8 g
INFO  00:23:43,036 - #30 )
INFO  00:23:43,036 - #27 ;
INFO  00:23:43,037 - #33 do
INFO  00:23:43,037 - #20 {
INFO  00:23:43,039 - #3 print
INFO  00:23:43,039 - #29 (
INFO  00:23:43,039 - #9 50
INFO  00:23:43,039 - #30 )
INFO  00:23:43,039 - #27 ;
INFO  00:23:43,039 - #8 e
INFO  00:23:43,039 - #25 ++
INFO  00:23:43,040 - #27 ;
INFO  00:23:43,040 - #21 }
INFO  00:23:43,040 - #34 while
INFO  00:23:43,040 - #29 (
INFO  00:23:43,040 - #8 cond
INFO  00:23:43,040 - #30 )
INFO  00:23:43,041 - #27 ;
INFO  00:23:43,041 - #3 print
INFO  00:23:43,041 - #29 (
INFO  00:23:43,041 - #8 e
INFO  00:23:43,041 - #30 )
INFO  00:23:43,041 - #27 ;
INFO  00:23:43,041 - #3 print
INFO  00:23:43,042 - #29 (
INFO  00:23:43,042 - #9 1000
INFO  00:23:43,042 - #30 )
INFO  00:23:43,043 - #27 ;
INFO  00:23:43,043 - #21 }
INFO  00:23:43,043 - #21 }
INFO  00:23:43,044 - =====================SINTAKSNO_STABLO=========================
INFO  00:23:43,047 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_single(
                      Stmt_design(
                        Assignment(
                          Designator_1(
                           cond
                          ) [Designator_1]
                          Expr_single(
                            Term_single(
                              Factor_bool_const(
                                Bool_const_false(
                                 false
                                ) [Bool_const_false]
                              ) [Factor_bool_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_single]
                    Stmt_design(
                      Assignment(
                        Designator_1(
                         e
                        ) [Designator_1]
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             50
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:23:43,048 - ==============================================================
INFO  00:23:43,061 - Pocetak obrade programa Program na liniji 1
INFO  00:23:43,061 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:23:43,062 - Deklarisana konstanta c na liniji 2
INFO  00:23:43,062 - Deklarisana konstanta d na liniji 2
INFO  00:23:43,062 - Deklarisana konstanta g na liniji 2
INFO  00:23:43,063 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:23:43,063 - Deklarisana promenljiva e na liniji 3
INFO  00:23:43,063 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:23:43,063 - Deklarisan niz z na liniji 3
INFO  00:23:43,064 - Pocetak obrade metode main na liniji 5
INFO  00:23:43,064 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:23:43,064 - Deklarisana promenljiva cond na liniji 5
INFO  00:23:43,065 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:23:43,065 - Zavrsetak obrade programa Program na liniji 1
INFO  00:23:43,065 - ======================TABELA_SIMBOLA==========================
INFO  00:23:43,066 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:23:43,066 - ==============================================================
INFO  00:23:43,066 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:23:43,066 - ==============================================================
INFO  00:23:43,066 - ======================GENERISANJE_KODA========================
INFO  00:23:43,071 - Generisanje koda uspesno zavrseno!
INFO  00:23:43,071 - Generisanje izlaznog fajla test\program.obj
INFO  00:23:43,071 - ==============================================================
INFO  00:24:13,259 - Obrada ulaznog fajla test\program.mj
INFO  00:24:13,344 - #2 program
INFO  00:24:13,345 - #8 Program
INFO  00:24:13,345 - #5 const
INFO  00:24:13,346 - #8 int
INFO  00:24:13,346 - #8 c
INFO  00:24:13,346 - #24 =
INFO  00:24:13,346 - #9 10
INFO  00:24:13,347 - #28 ,
INFO  00:24:13,347 - #8 d
INFO  00:24:13,348 - #24 =
INFO  00:24:13,348 - #9 99
INFO  00:24:13,348 - #28 ,
INFO  00:24:13,348 - #8 g
INFO  00:24:13,348 - #24 =
INFO  00:24:13,348 - #9 2
INFO  00:24:13,348 - #27 ;
INFO  00:24:13,348 - #8 int
INFO  00:24:13,349 - #8 e
INFO  00:24:13,350 - #27 ;
INFO  00:24:13,350 - #8 char
INFO  00:24:13,351 - #8 z
INFO  00:24:13,351 - #22 [
INFO  00:24:13,351 - #23 ]
INFO  00:24:13,351 - #27 ;
INFO  00:24:13,351 - #20 {
INFO  00:24:13,352 - #6 void
INFO  00:24:13,352 - #8 main
INFO  00:24:13,352 - #29 (
INFO  00:24:13,353 - #30 )
INFO  00:24:13,353 - #8 bool
INFO  00:24:13,353 - #8 cond
INFO  00:24:13,353 - #27 ;
INFO  00:24:13,353 - #20 {
INFO  00:24:13,353 - #8 cond
INFO  00:24:13,353 - #24 =
INFO  00:24:13,353 - #11 true
INFO  00:24:13,354 - #27 ;
INFO  00:24:13,354 - #8 e
INFO  00:24:13,354 - #24 =
INFO  00:24:13,355 - #9 0
INFO  00:24:13,355 - #27 ;
INFO  00:24:13,355 - #3 print
INFO  00:24:13,355 - #29 (
INFO  00:24:13,355 - #8 d
INFO  00:24:13,355 - #30 )
INFO  00:24:13,355 - #27 ;
INFO  00:24:13,355 - #3 print
INFO  00:24:13,356 - #29 (
INFO  00:24:13,357 - #8 g
INFO  00:24:13,357 - #30 )
INFO  00:24:13,357 - #27 ;
INFO  00:24:13,357 - #33 do
INFO  00:24:13,357 - #20 {
INFO  00:24:13,359 - #3 print
INFO  00:24:13,359 - #29 (
INFO  00:24:13,359 - #9 50
INFO  00:24:13,359 - #30 )
INFO  00:24:13,359 - #27 ;
INFO  00:24:13,359 - #8 e
INFO  00:24:13,359 - #25 ++
INFO  00:24:13,359 - #27 ;
INFO  00:24:13,359 - #21 }
INFO  00:24:13,360 - #34 while
INFO  00:24:13,360 - #29 (
INFO  00:24:13,360 - #8 cond
INFO  00:24:13,360 - #30 )
INFO  00:24:13,361 - #27 ;
INFO  00:24:13,361 - #3 print
INFO  00:24:13,361 - #29 (
INFO  00:24:13,361 - #8 e
INFO  00:24:13,361 - #30 )
INFO  00:24:13,361 - #27 ;
INFO  00:24:13,361 - #3 print
INFO  00:24:13,361 - #29 (
INFO  00:24:13,361 - #9 1000
INFO  00:24:13,362 - #30 )
INFO  00:24:13,364 - #27 ;
INFO  00:24:13,364 - #21 }
INFO  00:24:13,364 - #21 }
INFO  00:24:13,365 - =====================SINTAKSNO_STABLO=========================
INFO  00:24:13,367 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_single(
                      Stmt_design(
                        Assignment(
                          Designator_1(
                           cond
                          ) [Designator_1]
                          Expr_single(
                            Term_single(
                              Factor_bool_const(
                                Bool_const_true(
                                 true
                                ) [Bool_const_true]
                              ) [Factor_bool_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_single]
                    Stmt_design(
                      Assignment(
                        Designator_1(
                         e
                        ) [Designator_1]
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             50
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:24:13,367 - ==============================================================
INFO  00:24:13,380 - Pocetak obrade programa Program na liniji 1
INFO  00:24:13,380 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:24:13,381 - Deklarisana konstanta c na liniji 2
INFO  00:24:13,381 - Deklarisana konstanta d na liniji 2
INFO  00:24:13,381 - Deklarisana konstanta g na liniji 2
INFO  00:24:13,381 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:24:13,381 - Deklarisana promenljiva e na liniji 3
INFO  00:24:13,381 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:24:13,381 - Deklarisan niz z na liniji 3
INFO  00:24:13,382 - Pocetak obrade metode main na liniji 5
INFO  00:24:13,382 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:24:13,382 - Deklarisana promenljiva cond na liniji 5
INFO  00:24:13,382 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:24:13,383 - Zavrsetak obrade programa Program na liniji 1
INFO  00:24:13,383 - ======================TABELA_SIMBOLA==========================
INFO  00:24:13,383 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:24:13,383 - ==============================================================
INFO  00:24:13,383 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:24:13,383 - ==============================================================
INFO  00:24:13,383 - ======================GENERISANJE_KODA========================
INFO  00:24:13,388 - Generisanje koda uspesno zavrseno!
INFO  00:24:13,388 - Generisanje izlaznog fajla test\program.obj
INFO  00:24:13,388 - ==============================================================
INFO  00:27:17,104 - Obrada ulaznog fajla test\program.mj
INFO  00:27:17,184 - #2 program
INFO  00:27:17,184 - #8 Program
INFO  00:27:17,184 - #5 const
INFO  00:27:17,185 - #8 int
INFO  00:27:17,185 - #8 c
INFO  00:27:17,186 - #24 =
INFO  00:27:17,187 - #9 10
INFO  00:27:17,187 - #28 ,
INFO  00:27:17,188 - #8 d
INFO  00:27:17,188 - #24 =
INFO  00:27:17,188 - #9 99
INFO  00:27:17,188 - #28 ,
INFO  00:27:17,189 - #8 g
INFO  00:27:17,189 - #24 =
INFO  00:27:17,189 - #9 2
INFO  00:27:17,189 - #27 ;
INFO  00:27:17,189 - #8 int
INFO  00:27:17,191 - #8 e
INFO  00:27:17,191 - #27 ;
INFO  00:27:17,191 - #8 char
INFO  00:27:17,192 - #8 z
INFO  00:27:17,192 - #22 [
INFO  00:27:17,192 - #23 ]
INFO  00:27:17,192 - #27 ;
INFO  00:27:17,192 - #20 {
INFO  00:27:17,193 - #6 void
INFO  00:27:17,193 - #8 main
INFO  00:27:17,193 - #29 (
INFO  00:27:17,194 - #30 )
INFO  00:27:17,194 - #8 bool
INFO  00:27:17,194 - #8 cond
INFO  00:27:17,194 - #27 ;
INFO  00:27:17,194 - #20 {
INFO  00:27:17,194 - #8 cond
INFO  00:27:17,194 - #24 =
INFO  00:27:17,195 - #11 true
INFO  00:27:17,195 - #27 ;
INFO  00:27:17,195 - #8 e
INFO  00:27:17,196 - #24 =
INFO  00:27:17,196 - #9 0
INFO  00:27:17,196 - #27 ;
INFO  00:27:17,196 - #3 print
INFO  00:27:17,196 - #29 (
INFO  00:27:17,196 - #8 d
INFO  00:27:17,196 - #30 )
INFO  00:27:17,196 - #27 ;
INFO  00:27:17,197 - #3 print
INFO  00:27:17,197 - #29 (
INFO  00:27:17,197 - #8 g
INFO  00:27:17,197 - #30 )
INFO  00:27:17,197 - #27 ;
INFO  00:27:17,197 - #33 do
INFO  00:27:17,197 - #20 {
INFO  00:27:17,198 - #3 print
INFO  00:27:17,198 - #29 (
INFO  00:27:17,198 - #9 50
INFO  00:27:17,198 - #30 )
INFO  00:27:17,198 - #27 ;
INFO  00:27:17,198 - #8 e
INFO  00:27:17,198 - #25 ++
INFO  00:27:17,199 - #27 ;
INFO  00:27:17,199 - #21 }
INFO  00:27:17,199 - #34 while
INFO  00:27:17,199 - #29 (
INFO  00:27:17,199 - #8 cond
INFO  00:27:17,199 - #30 )
INFO  00:27:17,200 - #27 ;
INFO  00:27:17,200 - #3 print
INFO  00:27:17,200 - #29 (
INFO  00:27:17,200 - #8 e
INFO  00:27:17,200 - #30 )
INFO  00:27:17,200 - #27 ;
INFO  00:27:17,201 - #3 print
INFO  00:27:17,201 - #29 (
INFO  00:27:17,201 - #9 1000
INFO  00:27:17,201 - #30 )
INFO  00:27:17,201 - #27 ;
INFO  00:27:17,201 - #21 }
INFO  00:27:17,201 - #21 }
INFO  00:27:17,202 - =====================SINTAKSNO_STABLO=========================
INFO  00:27:17,204 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_single(
                      Stmt_design(
                        Assignment(
                          Designator_1(
                           cond
                          ) [Designator_1]
                          Expr_single(
                            Term_single(
                              Factor_bool_const(
                                Bool_const_true(
                                 true
                                ) [Bool_const_true]
                              ) [Factor_bool_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_single]
                    Stmt_design(
                      Assignment(
                        Designator_1(
                         e
                        ) [Designator_1]
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             50
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:27:17,204 - ==============================================================
INFO  00:27:17,219 - Pocetak obrade programa Program na liniji 1
INFO  00:27:17,219 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:27:17,220 - Deklarisana konstanta c na liniji 2
INFO  00:27:17,220 - Deklarisana konstanta d na liniji 2
INFO  00:27:17,220 - Deklarisana konstanta g na liniji 2
INFO  00:27:17,220 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:27:17,221 - Deklarisana promenljiva e na liniji 3
INFO  00:27:17,221 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:27:17,221 - Deklarisan niz z na liniji 3
INFO  00:27:17,222 - Pocetak obrade metode main na liniji 5
INFO  00:27:17,222 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:27:17,222 - Deklarisana promenljiva cond na liniji 5
INFO  00:27:17,222 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:27:17,222 - Zavrsetak obrade programa Program na liniji 1
INFO  00:27:17,222 - ======================TABELA_SIMBOLA==========================
INFO  00:27:17,223 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:27:17,223 - ==============================================================
INFO  00:27:17,223 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:27:17,223 - ==============================================================
INFO  00:27:17,223 - ======================GENERISANJE_KODA========================
INFO  00:27:17,228 - Generisanje koda uspesno zavrseno!
INFO  00:27:17,228 - Generisanje izlaznog fajla test\program.obj
INFO  00:27:17,228 - ==============================================================
INFO  00:54:56,956 - Obrada ulaznog fajla test\program.mj
INFO  00:54:57,079 - #2 program
INFO  00:54:57,079 - #8 Program
INFO  00:54:57,079 - #5 const
INFO  00:54:57,080 - #8 int
INFO  00:54:57,080 - #8 c
INFO  00:54:57,082 - #24 =
INFO  00:54:57,082 - #9 10
INFO  00:54:57,082 - #28 ,
INFO  00:54:57,083 - #8 d
INFO  00:54:57,084 - #24 =
INFO  00:54:57,084 - #9 99
INFO  00:54:57,084 - #28 ,
INFO  00:54:57,085 - #8 g
INFO  00:54:57,085 - #24 =
INFO  00:54:57,085 - #9 2
INFO  00:54:57,085 - #27 ;
INFO  00:54:57,085 - #8 int
INFO  00:54:57,088 - #8 e
INFO  00:54:57,088 - #27 ;
INFO  00:54:57,088 - #8 char
INFO  00:54:57,090 - #8 z
INFO  00:54:57,090 - #22 [
INFO  00:54:57,090 - #23 ]
INFO  00:54:57,090 - #27 ;
INFO  00:54:57,090 - #20 {
INFO  00:54:57,092 - #6 void
INFO  00:54:57,092 - #8 main
INFO  00:54:57,092 - #29 (
INFO  00:54:57,094 - #30 )
INFO  00:54:57,094 - #8 bool
INFO  00:54:57,094 - #8 cond
INFO  00:54:57,094 - #27 ;
INFO  00:54:57,094 - #20 {
INFO  00:54:57,094 - #8 cond
INFO  00:54:57,094 - #24 =
INFO  00:54:57,095 - #11 true
INFO  00:54:57,095 - #27 ;
INFO  00:54:57,095 - #8 e
INFO  00:54:57,096 - #24 =
INFO  00:54:57,096 - #9 0
INFO  00:54:57,096 - #27 ;
INFO  00:54:57,096 - #3 print
INFO  00:54:57,098 - #29 (
INFO  00:54:57,098 - #8 d
INFO  00:54:57,098 - #30 )
INFO  00:54:57,098 - #27 ;
INFO  00:54:57,099 - #3 print
INFO  00:54:57,099 - #29 (
INFO  00:54:57,099 - #8 g
INFO  00:54:57,100 - #30 )
INFO  00:54:57,100 - #27 ;
INFO  00:54:57,100 - #33 do
INFO  00:54:57,100 - #20 {
INFO  00:54:57,101 - #3 print
INFO  00:54:57,101 - #29 (
INFO  00:54:57,101 - #9 50
INFO  00:54:57,101 - #30 )
INFO  00:54:57,101 - #27 ;
INFO  00:54:57,102 - #8 e
INFO  00:54:57,102 - #25 ++
INFO  00:54:57,102 - #27 ;
INFO  00:54:57,103 - #21 }
INFO  00:54:57,103 - #34 while
INFO  00:54:57,103 - #29 (
INFO  00:54:57,103 - #8 cond
INFO  00:54:57,103 - #30 )
INFO  00:54:57,104 - #27 ;
INFO  00:54:57,104 - #3 print
INFO  00:54:57,105 - #29 (
INFO  00:54:57,105 - #8 e
INFO  00:54:57,105 - #30 )
INFO  00:54:57,105 - #27 ;
INFO  00:54:57,105 - #3 print
INFO  00:54:57,105 - #29 (
INFO  00:54:57,105 - #9 1000
INFO  00:54:57,106 - #30 )
INFO  00:54:57,107 - #27 ;
INFO  00:54:57,108 - #21 }
INFO  00:54:57,108 - #21 }
INFO  00:54:57,109 - =====================SINTAKSNO_STABLO=========================
INFO  00:54:57,111 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_single(
                      Stmt_design(
                        Assignment(
                          Designator_1(
                           cond
                          ) [Designator_1]
                          Expr_single(
                            Term_single(
                              Factor_bool_const(
                                Bool_const_true(
                                 true
                                ) [Bool_const_true]
                              ) [Factor_bool_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_single]
                    Stmt_design(
                      Assignment(
                        Designator_1(
                         e
                        ) [Designator_1]
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             50
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:54:57,112 - ==============================================================
INFO  00:54:57,129 - Pocetak obrade programa Program na liniji 1
INFO  00:54:57,129 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:54:57,130 - Deklarisana konstanta c na liniji 2
INFO  00:54:57,130 - Deklarisana konstanta d na liniji 2
INFO  00:54:57,131 - Deklarisana konstanta g na liniji 2
INFO  00:54:57,131 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:54:57,131 - Deklarisana promenljiva e na liniji 3
INFO  00:54:57,131 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:54:57,131 - Deklarisan niz z na liniji 3
INFO  00:54:57,133 - Pocetak obrade metode main na liniji 5
INFO  00:54:57,133 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:54:57,133 - Deklarisana promenljiva cond na liniji 5
INFO  00:54:57,134 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:54:57,134 - Zavrsetak obrade programa Program na liniji 1
INFO  00:54:57,134 - ======================TABELA_SIMBOLA==========================
INFO  00:54:57,134 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:54:57,135 - ==============================================================
INFO  00:54:57,135 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:55:10,671 - Obrada ulaznog fajla test\program.mj
INFO  00:55:10,779 - #2 program
INFO  00:55:10,779 - #8 Program
INFO  00:55:10,779 - #5 const
INFO  00:55:10,781 - #8 int
INFO  00:55:10,781 - #8 c
INFO  00:55:10,782 - #24 =
INFO  00:55:10,782 - #9 10
INFO  00:55:10,783 - #28 ,
INFO  00:55:10,785 - #8 d
INFO  00:55:10,785 - #24 =
INFO  00:55:10,785 - #9 99
INFO  00:55:10,785 - #28 ,
INFO  00:55:10,786 - #8 g
INFO  00:55:10,786 - #24 =
INFO  00:55:10,786 - #9 2
INFO  00:55:10,786 - #27 ;
INFO  00:55:10,786 - #8 int
INFO  00:55:10,788 - #8 e
INFO  00:55:10,788 - #27 ;
INFO  00:55:10,789 - #8 char
INFO  00:55:10,790 - #8 z
INFO  00:55:10,790 - #22 [
INFO  00:55:10,791 - #23 ]
INFO  00:55:10,791 - #27 ;
INFO  00:55:10,791 - #20 {
INFO  00:55:10,791 - #6 void
INFO  00:55:10,791 - #8 main
INFO  00:55:10,791 - #29 (
INFO  00:55:10,792 - #30 )
INFO  00:55:10,792 - #8 bool
INFO  00:55:10,793 - #8 cond
INFO  00:55:10,793 - #27 ;
INFO  00:55:10,793 - #20 {
INFO  00:55:10,793 - #8 cond
INFO  00:55:10,793 - #24 =
INFO  00:55:10,794 - #11 true
INFO  00:55:10,794 - #27 ;
INFO  00:55:10,795 - #8 e
INFO  00:55:10,795 - #24 =
INFO  00:55:10,795 - #9 0
INFO  00:55:10,795 - #27 ;
INFO  00:55:10,795 - #3 print
INFO  00:55:10,796 - #29 (
INFO  00:55:10,796 - #8 d
INFO  00:55:10,796 - #30 )
INFO  00:55:10,796 - #27 ;
INFO  00:55:10,796 - #3 print
INFO  00:55:10,796 - #29 (
INFO  00:55:10,796 - #8 g
INFO  00:55:10,797 - #30 )
INFO  00:55:10,797 - #27 ;
INFO  00:55:10,797 - #33 do
INFO  00:55:10,797 - #20 {
INFO  00:55:10,798 - #3 print
INFO  00:55:10,799 - #29 (
INFO  00:55:10,799 - #9 50
INFO  00:55:10,799 - #30 )
INFO  00:55:10,799 - #27 ;
INFO  00:55:10,799 - #8 e
INFO  00:55:10,799 - #25 ++
INFO  00:55:10,800 - #27 ;
INFO  00:55:10,800 - #21 }
INFO  00:55:10,800 - #34 while
INFO  00:55:10,800 - #29 (
INFO  00:55:10,800 - #8 cond
INFO  00:55:10,800 - #30 )
INFO  00:55:10,801 - #27 ;
INFO  00:55:10,801 - #3 print
INFO  00:55:10,801 - #29 (
INFO  00:55:10,801 - #8 e
INFO  00:55:10,801 - #30 )
INFO  00:55:10,802 - #27 ;
INFO  00:55:10,802 - #3 print
INFO  00:55:10,802 - #29 (
INFO  00:55:10,802 - #9 1000
INFO  00:55:10,802 - #30 )
INFO  00:55:10,802 - #27 ;
INFO  00:55:10,802 - #21 }
INFO  00:55:10,802 - #21 }
INFO  00:55:10,803 - =====================SINTAKSNO_STABLO=========================
INFO  00:55:10,805 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_single(
                      Stmt_design(
                        Assignment(
                          Designator_1(
                           cond
                          ) [Designator_1]
                          Expr_single(
                            Term_single(
                              Factor_bool_const(
                                Bool_const_true(
                                 true
                                ) [Bool_const_true]
                              ) [Factor_bool_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_single]
                    Stmt_design(
                      Assignment(
                        Designator_1(
                         e
                        ) [Designator_1]
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_do_while(
                Stmt_do_while_part(
                ) [Stmt_do_while_part]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             50
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                ) [Stmt_list]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             cond
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Stmt_do_while]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:55:10,806 - ==============================================================
INFO  00:55:10,817 - Pocetak obrade programa Program na liniji 1
INFO  00:55:10,818 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:55:10,819 - Deklarisana konstanta c na liniji 2
INFO  00:55:10,819 - Deklarisana konstanta d na liniji 2
INFO  00:55:10,819 - Deklarisana konstanta g na liniji 2
INFO  00:55:10,819 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:55:10,819 - Deklarisana promenljiva e na liniji 3
INFO  00:55:10,820 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  00:55:10,820 - Deklarisan niz z na liniji 3
INFO  00:55:10,821 - Pocetak obrade metode main na liniji 5
INFO  00:55:10,821 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  00:55:10,821 - Deklarisana promenljiva cond na liniji 5
INFO  00:55:10,822 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:55:10,822 - Zavrsetak obrade programa Program na liniji 1
INFO  00:55:10,822 - ======================TABELA_SIMBOLA==========================
INFO  00:55:10,823 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  00:55:10,823 - ==============================================================
INFO  00:55:10,823 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:55:10,823 - ==============================================================
INFO  00:55:10,823 - ======================GENERISANJE_KODA========================
INFO  00:55:10,834 - Generisanje koda uspesno zavrseno!
INFO  00:55:10,834 - Generisanje izlaznog fajla test\program.obj
INFO  00:55:10,834 - ==============================================================
INFO  15:26:21,523 - Obrada ulaznog fajla test\program.mj
INFO  15:26:21,649 - #2 program
INFO  15:26:21,649 - #8 Program
INFO  15:26:21,649 - #5 const
INFO  15:26:21,650 - #8 int
INFO  15:26:21,650 - #8 c
INFO  15:26:21,650 - #24 =
INFO  15:26:21,650 - #9 10
INFO  15:26:21,651 - #28 ,
INFO  15:26:21,652 - #8 d
INFO  15:26:21,652 - #24 =
INFO  15:26:21,652 - #9 99
INFO  15:26:21,652 - #28 ,
INFO  15:26:21,652 - #8 g
INFO  15:26:21,652 - #24 =
INFO  15:26:21,652 - #9 2
INFO  15:26:21,652 - #27 ;
INFO  15:26:21,652 - #8 int
INFO  15:26:21,654 - #8 e
INFO  15:26:21,654 - #27 ;
INFO  15:26:21,654 - #8 char
INFO  15:26:21,656 - #8 z
INFO  15:26:21,656 - #22 [
INFO  15:26:21,656 - #23 ]
INFO  15:26:21,656 - #27 ;
INFO  15:26:21,656 - #20 {
INFO  15:26:21,656 - #6 void
INFO  15:26:21,656 - #8 main
INFO  15:26:21,656 - #29 (
INFO  15:26:21,657 - #30 )
INFO  15:26:21,658 - #8 bool
INFO  15:26:21,658 - #8 cond
INFO  15:26:21,658 - #27 ;
INFO  15:26:21,658 - #20 {
INFO  15:26:21,658 - #8 cond
INFO  15:26:21,658 - #24 =
INFO  15:26:21,659 - #11 true
INFO  15:26:21,659 - #27 ;
INFO  15:26:21,660 - #8 e
INFO  15:26:21,660 - #24 =
INFO  15:26:21,660 - #9 0
INFO  15:26:21,660 - #27 ;
INFO  15:26:21,660 - #31 if
INFO  15:26:21,661 - #29 (
INFO  15:26:21,662 - #8 e
INFO  15:26:21,662 - #38 >
INFO  15:26:21,662 - #9 0
INFO  15:26:21,664 - #30 )
INFO  15:26:21,665 - #20 {
INFO  15:26:21,665 - #3 print
INFO  15:26:21,665 - #29 (
INFO  15:26:21,665 - #8 d
INFO  15:26:21,665 - #30 )
INFO  15:26:21,665 - #27 ;
INFO  15:26:21,666 - #21 }
INFO  15:26:21,666 - #32 else
INFO  15:26:21,668 - #20 {
INFO  15:26:21,669 - #3 print
INFO  15:26:21,669 - #29 (
INFO  15:26:21,670 - #8 g
INFO  15:26:21,670 - #30 )
INFO  15:26:21,670 - #27 ;
INFO  15:26:21,670 - #21 }
INFO  15:26:21,670 - #3 print
INFO  15:26:21,671 - #29 (
INFO  15:26:21,671 - #9 50
INFO  15:26:21,671 - #30 )
INFO  15:26:21,671 - #27 ;
INFO  15:26:21,671 - #8 e
INFO  15:26:21,671 - #25 ++
INFO  15:26:21,671 - #27 ;
INFO  15:26:21,671 - #3 print
INFO  15:26:21,672 - #29 (
INFO  15:26:21,672 - #8 e
INFO  15:26:21,672 - #30 )
INFO  15:26:21,672 - #27 ;
INFO  15:26:21,672 - #3 print
INFO  15:26:21,672 - #29 (
INFO  15:26:21,673 - #9 1000
INFO  15:26:21,673 - #30 )
INFO  15:26:21,673 - #27 ;
INFO  15:26:21,673 - #21 }
INFO  15:26:21,676 - #21 }
INFO  15:26:21,678 - =====================SINTAKSNO_STABLO=========================
INFO  15:26:21,681 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_single(
                      Stmt_design(
                        Assignment(
                          Designator_1(
                           cond
                          ) [Designator_1]
                          Expr_single(
                            Term_single(
                              Factor_bool_const(
                                Bool_const_true(
                                 true
                                ) [Bool_const_true]
                              ) [Factor_bool_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_single]
                    Stmt_design(
                      Assignment(
                        Designator_1(
                         e
                        ) [Designator_1]
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_if_else(
                    Stmt_if_part(
                      Condition_one(
                        Cond_term_one(
                          Cond_fact_two(
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   e
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                            Rel_op_gt(
                            ) [Rel_op_gt]
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Cond_fact_two]
                        ) [Cond_term_one]
                      ) [Condition_one]
                      Stmt_list(
                        Statement_single(
                          Stmt_print_1(
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   d
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Stmt_print_1]
                        ) [Statement_single]
                      ) [Stmt_list]
                    ) [Stmt_if_part]
                    Stmt_list(
                      Statement_single(
                        Stmt_print_1(
                          Expr_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 g
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Stmt_print_1]
                      ) [Statement_single]
                    ) [Stmt_list]
                  ) [Stmt_if_else]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       50
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_design(
                Increment(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Increment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 1000
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:26:21,682 - ==============================================================
INFO  15:26:21,697 - Pocetak obrade programa Program na liniji 1
INFO  15:26:21,697 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:26:21,698 - Deklarisana konstanta c na liniji 2
INFO  15:26:21,698 - Deklarisana konstanta d na liniji 2
INFO  15:26:21,698 - Deklarisana konstanta g na liniji 2
INFO  15:26:21,698 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:26:21,698 - Deklarisana promenljiva e na liniji 3
INFO  15:26:21,698 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  15:26:21,699 - Deklarisan niz z na liniji 3
INFO  15:26:21,709 - Pocetak obrade metode main na liniji 5
INFO  15:26:21,709 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  15:26:21,709 - Deklarisana promenljiva cond na liniji 5
INFO  15:26:21,710 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:26:21,710 - Zavrsetak obrade programa Program na liniji 1
INFO  15:26:21,710 - ======================TABELA_SIMBOLA==========================
INFO  15:26:21,711 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  15:26:21,711 - ==============================================================
INFO  15:26:21,711 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:26:21,711 - ==============================================================
INFO  15:26:21,711 - ======================GENERISANJE_KODA========================
INFO  15:26:21,717 - Generisanje koda uspesno zavrseno!
INFO  15:26:21,729 - Generisanje izlaznog fajla test\program.obj
INFO  15:26:21,729 - ==============================================================
INFO  15:27:05,331 - Obrada ulaznog fajla test\program.mj
INFO  15:27:05,425 - #2 program
INFO  15:27:05,426 - #8 Program
INFO  15:27:05,426 - #5 const
INFO  15:27:05,427 - #8 int
INFO  15:27:05,428 - #8 c
INFO  15:27:05,428 - #24 =
INFO  15:27:05,428 - #9 10
INFO  15:27:05,429 - #28 ,
INFO  15:27:05,429 - #8 d
INFO  15:27:05,430 - #24 =
INFO  15:27:05,430 - #9 99
INFO  15:27:05,430 - #28 ,
INFO  15:27:05,430 - #8 g
INFO  15:27:05,430 - #24 =
INFO  15:27:05,430 - #9 2
INFO  15:27:05,430 - #27 ;
INFO  15:27:05,430 - #8 int
INFO  15:27:05,432 - #8 e
INFO  15:27:05,432 - #27 ;
INFO  15:27:05,432 - #8 char
INFO  15:27:05,434 - #8 z
INFO  15:27:05,434 - #22 [
INFO  15:27:05,434 - #23 ]
INFO  15:27:05,434 - #27 ;
INFO  15:27:05,434 - #20 {
INFO  15:27:05,434 - #6 void
INFO  15:27:05,434 - #8 main
INFO  15:27:05,435 - #29 (
INFO  15:27:05,436 - #30 )
INFO  15:27:05,436 - #8 bool
INFO  15:27:05,436 - #8 cond
INFO  15:27:05,436 - #27 ;
INFO  15:27:05,437 - #20 {
INFO  15:27:05,437 - #8 e
INFO  15:27:05,437 - #24 =
INFO  15:27:05,438 - #9 0
INFO  15:27:05,438 - #27 ;
INFO  15:27:05,438 - #31 if
INFO  15:27:05,439 - #29 (
INFO  15:27:05,439 - #8 e
INFO  15:27:05,439 - #38 >
INFO  15:27:05,439 - #9 0
INFO  15:27:05,442 - #30 )
INFO  15:27:05,443 - #20 {
INFO  15:27:05,443 - #3 print
INFO  15:27:05,443 - #29 (
INFO  15:27:05,443 - #8 d
INFO  15:27:05,444 - #30 )
INFO  15:27:05,444 - #27 ;
INFO  15:27:05,444 - #21 }
INFO  15:27:05,445 - #32 else
INFO  15:27:05,447 - #20 {
INFO  15:27:05,448 - #3 print
INFO  15:27:05,448 - #29 (
INFO  15:27:05,449 - #8 g
INFO  15:27:05,449 - #30 )
INFO  15:27:05,449 - #27 ;
INFO  15:27:05,449 - #21 }
INFO  15:27:05,449 - #21 }
INFO  15:27:05,450 - #21 }
INFO  15:27:05,451 - =====================SINTAKSNO_STABLO=========================
INFO  15:27:05,458 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:27:05,459 - ==============================================================
INFO  15:27:05,470 - Pocetak obrade programa Program na liniji 1
INFO  15:27:05,470 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:27:05,471 - Deklarisana konstanta c na liniji 2
INFO  15:27:05,471 - Deklarisana konstanta d na liniji 2
INFO  15:27:05,472 - Deklarisana konstanta g na liniji 2
INFO  15:27:05,472 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:27:05,472 - Deklarisana promenljiva e na liniji 3
INFO  15:27:05,472 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  15:27:05,472 - Deklarisan niz z na liniji 3
INFO  15:27:05,472 - Pocetak obrade metode main na liniji 5
INFO  15:27:05,472 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  15:27:05,473 - Deklarisana promenljiva cond na liniji 5
INFO  15:27:05,473 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:27:05,473 - Zavrsetak obrade programa Program na liniji 1
INFO  15:27:05,473 - ======================TABELA_SIMBOLA==========================
INFO  15:27:05,474 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  15:27:05,474 - ==============================================================
INFO  15:27:05,474 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:27:05,474 - ==============================================================
INFO  15:27:05,474 - ======================GENERISANJE_KODA========================
INFO  15:27:05,480 - Generisanje koda uspesno zavrseno!
INFO  15:27:05,489 - Generisanje izlaznog fajla test\program.obj
INFO  15:27:05,489 - ==============================================================
INFO  15:28:21,404 - Obrada ulaznog fajla test\program.mj
INFO  15:28:21,498 - #2 program
INFO  15:28:21,498 - #8 Program
INFO  15:28:21,498 - #5 const
INFO  15:28:21,498 - #8 int
INFO  15:28:21,498 - #8 c
INFO  15:28:21,498 - #24 =
INFO  15:28:21,498 - #9 10
INFO  15:28:21,498 - #28 ,
INFO  15:28:21,498 - #8 d
INFO  15:28:21,498 - #24 =
INFO  15:28:21,498 - #9 99
INFO  15:28:21,498 - #28 ,
INFO  15:28:21,498 - #8 g
INFO  15:28:21,498 - #24 =
INFO  15:28:21,498 - #9 2
INFO  15:28:21,498 - #27 ;
INFO  15:28:21,498 - #8 int
INFO  15:28:21,498 - #8 e
INFO  15:28:21,498 - #27 ;
INFO  15:28:21,498 - #8 char
INFO  15:28:21,498 - #8 z
INFO  15:28:21,498 - #22 [
INFO  15:28:21,498 - #23 ]
INFO  15:28:21,498 - #27 ;
INFO  15:28:21,498 - #20 {
INFO  15:28:21,498 - #6 void
INFO  15:28:21,498 - #8 main
INFO  15:28:21,498 - #29 (
INFO  15:28:21,498 - #30 )
INFO  15:28:21,498 - #8 bool
INFO  15:28:21,498 - #8 cond
INFO  15:28:21,498 - #27 ;
INFO  15:28:21,498 - #20 {
INFO  15:28:21,498 - #8 e
INFO  15:28:21,498 - #24 =
INFO  15:28:21,498 - #9 0
INFO  15:28:21,498 - #27 ;
INFO  15:28:21,498 - #31 if
INFO  15:28:21,498 - #29 (
INFO  15:28:21,498 - #8 e
INFO  15:28:21,498 - #39 ==
INFO  15:28:21,498 - #9 0
INFO  15:28:21,498 - #30 )
INFO  15:28:21,513 - #20 {
INFO  15:28:21,513 - #3 print
INFO  15:28:21,513 - #29 (
INFO  15:28:21,513 - #8 d
INFO  15:28:21,513 - #30 )
INFO  15:28:21,513 - #27 ;
INFO  15:28:21,513 - #21 }
INFO  15:28:21,513 - #32 else
INFO  15:28:21,513 - #20 {
INFO  15:28:21,513 - #3 print
INFO  15:28:21,513 - #29 (
INFO  15:28:21,513 - #8 g
INFO  15:28:21,513 - #30 )
INFO  15:28:21,513 - #27 ;
INFO  15:28:21,513 - #21 }
INFO  15:28:21,513 - #21 }
INFO  15:28:21,513 - #21 }
INFO  15:28:21,513 - =====================SINTAKSNO_STABLO=========================
INFO  15:28:21,513 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_eq(
                    ) [Rel_op_eq]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:28:21,513 - ==============================================================
INFO  15:28:21,529 - Pocetak obrade programa Program na liniji 1
INFO  15:28:21,529 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:28:21,529 - Deklarisana konstanta c na liniji 2
INFO  15:28:21,529 - Deklarisana konstanta d na liniji 2
INFO  15:28:21,529 - Deklarisana konstanta g na liniji 2
INFO  15:28:21,529 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:28:21,529 - Deklarisana promenljiva e na liniji 3
INFO  15:28:21,529 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  15:28:21,529 - Deklarisan niz z na liniji 3
INFO  15:28:21,529 - Pocetak obrade metode main na liniji 5
INFO  15:28:21,529 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  15:28:21,529 - Deklarisana promenljiva cond na liniji 5
INFO  15:28:21,529 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:28:21,529 - Zavrsetak obrade programa Program na liniji 1
INFO  15:28:21,529 - ======================TABELA_SIMBOLA==========================
INFO  15:28:21,529 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  15:28:21,529 - ==============================================================
INFO  15:28:21,529 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:28:21,529 - ==============================================================
INFO  15:28:21,529 - ======================GENERISANJE_KODA========================
INFO  15:28:21,545 - Generisanje koda uspesno zavrseno!
INFO  15:28:21,560 - Generisanje izlaznog fajla test\program.obj
INFO  15:28:21,560 - ==============================================================
INFO  15:28:35,268 - Obrada ulaznog fajla test\program.mj
INFO  15:28:35,378 - #2 program
INFO  15:28:35,378 - #8 Program
INFO  15:28:35,378 - #5 const
INFO  15:28:35,378 - #8 int
INFO  15:28:35,378 - #8 c
INFO  15:28:35,378 - #24 =
INFO  15:28:35,378 - #9 10
INFO  15:28:35,378 - #28 ,
INFO  15:28:35,378 - #8 d
INFO  15:28:35,378 - #24 =
INFO  15:28:35,378 - #9 99
INFO  15:28:35,378 - #28 ,
INFO  15:28:35,378 - #8 g
INFO  15:28:35,378 - #24 =
INFO  15:28:35,378 - #9 2
INFO  15:28:35,378 - #27 ;
INFO  15:28:35,378 - #8 int
INFO  15:28:35,378 - #8 e
INFO  15:28:35,378 - #27 ;
INFO  15:28:35,378 - #8 char
INFO  15:28:35,378 - #8 z
INFO  15:28:35,378 - #22 [
INFO  15:28:35,394 - #23 ]
INFO  15:28:35,394 - #27 ;
INFO  15:28:35,394 - #20 {
INFO  15:28:35,394 - #6 void
INFO  15:28:35,394 - #8 main
INFO  15:28:35,394 - #29 (
INFO  15:28:35,394 - #30 )
INFO  15:28:35,394 - #8 bool
INFO  15:28:35,394 - #8 cond
INFO  15:28:35,394 - #27 ;
INFO  15:28:35,394 - #20 {
INFO  15:28:35,394 - #8 e
INFO  15:28:35,394 - #24 =
INFO  15:28:35,394 - #9 0
INFO  15:28:35,394 - #27 ;
INFO  15:28:35,394 - #31 if
INFO  15:28:35,394 - #29 (
INFO  15:28:35,394 - #8 e
INFO  15:28:35,394 - #39 ==
INFO  15:28:35,394 - #9 0
INFO  15:28:35,394 - #30 )
INFO  15:28:35,394 - #20 {
INFO  15:28:35,394 - #3 print
INFO  15:28:35,394 - #29 (
INFO  15:28:35,394 - #8 d
INFO  15:28:35,394 - #30 )
INFO  15:28:35,394 - #27 ;
INFO  15:28:35,394 - #21 }
INFO  15:28:35,394 - #32 else
INFO  15:28:35,394 - #20 {
INFO  15:28:35,394 - #3 print
INFO  15:28:35,394 - #29 (
INFO  15:28:35,394 - #8 g
INFO  15:28:35,394 - #30 )
INFO  15:28:35,394 - #27 ;
INFO  15:28:35,394 - #21 }
INFO  15:28:35,394 - #21 }
INFO  15:28:35,394 - #21 }
INFO  15:28:35,394 - =====================SINTAKSNO_STABLO=========================
INFO  15:28:35,394 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_eq(
                    ) [Rel_op_eq]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:28:35,409 - ==============================================================
INFO  15:28:35,425 - Pocetak obrade programa Program na liniji 1
INFO  15:28:35,425 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:28:35,425 - Deklarisana konstanta c na liniji 2
INFO  15:28:35,425 - Deklarisana konstanta d na liniji 2
INFO  15:28:35,425 - Deklarisana konstanta g na liniji 2
INFO  15:28:35,425 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:28:35,425 - Deklarisana promenljiva e na liniji 3
INFO  15:28:35,425 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  15:28:35,425 - Deklarisan niz z na liniji 3
INFO  15:28:35,425 - Pocetak obrade metode main na liniji 5
INFO  15:28:35,425 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  15:28:35,425 - Deklarisana promenljiva cond na liniji 5
INFO  15:28:35,425 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:28:35,425 - Zavrsetak obrade programa Program na liniji 1
INFO  15:28:35,425 - ======================TABELA_SIMBOLA==========================
INFO  15:28:35,425 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  15:28:35,425 - ==============================================================
INFO  15:28:35,425 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:28:35,425 - ==============================================================
INFO  15:28:35,425 - ======================GENERISANJE_KODA========================
INFO  15:28:35,425 - Generisanje koda uspesno zavrseno!
INFO  15:28:35,441 - Generisanje izlaznog fajla test\program.obj
INFO  15:28:35,441 - ==============================================================
INFO  15:30:11,511 - Obrada ulaznog fajla test\program.mj
INFO  15:30:11,622 - #2 program
INFO  15:30:11,622 - #8 Program
INFO  15:30:11,622 - #5 const
INFO  15:30:11,623 - #8 int
INFO  15:30:11,623 - #8 c
INFO  15:30:11,624 - #24 =
INFO  15:30:11,624 - #9 10
INFO  15:30:11,625 - #28 ,
INFO  15:30:11,626 - #8 d
INFO  15:30:11,626 - #24 =
INFO  15:30:11,626 - #9 99
INFO  15:30:11,626 - #28 ,
INFO  15:30:11,627 - #8 g
INFO  15:30:11,627 - #24 =
INFO  15:30:11,627 - #9 2
INFO  15:30:11,627 - #27 ;
INFO  15:30:11,627 - #8 int
INFO  15:30:11,629 - #8 e
INFO  15:30:11,629 - #27 ;
INFO  15:30:11,629 - #8 char
INFO  15:30:11,631 - #8 z
INFO  15:30:11,631 - #22 [
INFO  15:30:11,631 - #23 ]
INFO  15:30:11,632 - #27 ;
INFO  15:30:11,632 - #20 {
INFO  15:30:11,632 - #6 void
INFO  15:30:11,632 - #8 main
INFO  15:30:11,632 - #29 (
INFO  15:30:11,634 - #30 )
INFO  15:30:11,634 - #8 bool
INFO  15:30:11,634 - #8 cond
INFO  15:30:11,634 - #27 ;
INFO  15:30:11,635 - #20 {
INFO  15:30:11,635 - #8 e
INFO  15:30:11,635 - #24 =
INFO  15:30:11,636 - #9 0
INFO  15:30:11,636 - #27 ;
INFO  15:30:11,637 - #31 if
INFO  15:30:11,637 - #29 (
INFO  15:30:11,641 - #8 e
INFO  15:30:11,642 - #38 >
INFO  15:30:11,644 - #9 0
INFO  15:30:11,656 - #30 )
INFO  15:30:11,657 - #20 {
INFO  15:30:11,657 - #3 print
INFO  15:30:11,657 - #29 (
INFO  15:30:11,658 - #8 d
INFO  15:30:11,658 - #30 )
INFO  15:30:11,658 - #27 ;
INFO  15:30:11,658 - #21 }
INFO  15:30:11,658 - #32 else
INFO  15:30:11,660 - #20 {
INFO  15:30:11,661 - #3 print
INFO  15:30:11,662 - #29 (
INFO  15:30:11,662 - #8 g
INFO  15:30:11,662 - #30 )
INFO  15:30:11,662 - #27 ;
INFO  15:30:11,662 - #21 }
INFO  15:30:11,664 - #21 }
INFO  15:30:11,666 - #21 }
INFO  15:30:11,671 - =====================SINTAKSNO_STABLO=========================
INFO  15:30:11,682 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:30:11,682 - ==============================================================
INFO  15:30:11,707 - Pocetak obrade programa Program na liniji 1
INFO  15:30:11,708 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:30:11,709 - Deklarisana konstanta c na liniji 2
INFO  15:30:11,709 - Deklarisana konstanta d na liniji 2
INFO  15:30:11,709 - Deklarisana konstanta g na liniji 2
INFO  15:30:11,710 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:30:11,710 - Deklarisana promenljiva e na liniji 3
INFO  15:30:11,710 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  15:30:11,710 - Deklarisan niz z na liniji 3
INFO  15:30:11,711 - Pocetak obrade metode main na liniji 5
INFO  15:30:11,711 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  15:30:11,712 - Deklarisana promenljiva cond na liniji 5
INFO  15:30:11,713 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:30:11,713 - Zavrsetak obrade programa Program na liniji 1
INFO  15:30:11,713 - ======================TABELA_SIMBOLA==========================
INFO  15:30:11,714 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  15:30:11,714 - ==============================================================
INFO  15:30:11,715 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:30:11,715 - ==============================================================
INFO  15:30:11,715 - ======================GENERISANJE_KODA========================
INFO  15:30:11,726 - Generisanje koda uspesno zavrseno!
INFO  15:30:11,731 - Generisanje izlaznog fajla test\program.obj
INFO  15:30:11,731 - ==============================================================
INFO  15:33:21,036 - Obrada ulaznog fajla test\program.mj
INFO  15:33:21,127 - #2 program
INFO  15:33:21,127 - #8 Program
INFO  15:33:21,127 - #5 const
INFO  15:33:21,128 - #8 int
INFO  15:33:21,128 - #8 c
INFO  15:33:21,129 - #24 =
INFO  15:33:21,129 - #9 10
INFO  15:33:21,129 - #28 ,
INFO  15:33:21,131 - #8 d
INFO  15:33:21,131 - #24 =
INFO  15:33:21,131 - #9 99
INFO  15:33:21,131 - #28 ,
INFO  15:33:21,131 - #8 g
INFO  15:33:21,131 - #24 =
INFO  15:33:21,132 - #9 2
INFO  15:33:21,132 - #27 ;
INFO  15:33:21,132 - #8 int
INFO  15:33:21,133 - #8 e
INFO  15:33:21,133 - #27 ;
INFO  15:33:21,134 - #8 char
INFO  15:33:21,136 - #8 z
INFO  15:33:21,136 - #22 [
INFO  15:33:21,136 - #23 ]
INFO  15:33:21,136 - #27 ;
INFO  15:33:21,136 - #20 {
INFO  15:33:21,136 - #6 void
INFO  15:33:21,136 - #8 main
INFO  15:33:21,136 - #29 (
INFO  15:33:21,137 - #30 )
INFO  15:33:21,138 - #8 bool
INFO  15:33:21,138 - #8 cond
INFO  15:33:21,138 - #27 ;
INFO  15:33:21,138 - #20 {
INFO  15:33:21,138 - #8 e
INFO  15:33:21,138 - #24 =
INFO  15:33:21,139 - #9 13
INFO  15:33:21,139 - #27 ;
INFO  15:33:21,139 - #31 if
INFO  15:33:21,139 - #29 (
INFO  15:33:21,140 - #8 e
INFO  15:33:21,140 - #38 >
INFO  15:33:21,140 - #9 0
INFO  15:33:21,142 - #30 )
INFO  15:33:21,143 - #20 {
INFO  15:33:21,143 - #3 print
INFO  15:33:21,143 - #29 (
INFO  15:33:21,143 - #8 d
INFO  15:33:21,143 - #30 )
INFO  15:33:21,143 - #27 ;
INFO  15:33:21,143 - #21 }
INFO  15:33:21,143 - #32 else
INFO  15:33:21,145 - #20 {
INFO  15:33:21,145 - #3 print
INFO  15:33:21,145 - #29 (
INFO  15:33:21,146 - #8 g
INFO  15:33:21,146 - #30 )
INFO  15:33:21,146 - #27 ;
INFO  15:33:21,146 - #21 }
INFO  15:33:21,146 - #21 }
INFO  15:33:21,147 - #21 }
INFO  15:33:21,152 - =====================SINTAKSNO_STABLO=========================
INFO  15:33:21,157 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     13
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:33:21,158 - ==============================================================
INFO  15:33:21,186 - Pocetak obrade programa Program na liniji 1
INFO  15:33:21,187 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:33:21,189 - Deklarisana konstanta c na liniji 2
INFO  15:33:21,189 - Deklarisana konstanta d na liniji 2
INFO  15:33:21,189 - Deklarisana konstanta g na liniji 2
INFO  15:33:21,190 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:33:21,190 - Deklarisana promenljiva e na liniji 3
INFO  15:33:21,190 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  15:33:21,190 - Deklarisan niz z na liniji 3
INFO  15:33:21,192 - Pocetak obrade metode main na liniji 5
INFO  15:33:21,193 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  15:33:21,193 - Deklarisana promenljiva cond na liniji 5
INFO  15:33:21,195 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:33:21,196 - Zavrsetak obrade programa Program na liniji 1
INFO  15:33:21,196 - ======================TABELA_SIMBOLA==========================
INFO  15:33:21,197 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  15:33:21,198 - ==============================================================
INFO  15:33:21,198 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:33:21,198 - ==============================================================
INFO  15:33:21,202 - ======================GENERISANJE_KODA========================
INFO  15:33:21,225 - Generisanje koda uspesno zavrseno!
INFO  15:33:21,243 - Generisanje izlaznog fajla test\program.obj
INFO  15:33:21,244 - ==============================================================
INFO  15:36:40,909 - Obrada ulaznog fajla test\program.mj
INFO  15:36:41,003 - #2 program
INFO  15:36:41,003 - #8 Program
INFO  15:36:41,003 - #5 const
INFO  15:36:41,003 - #8 int
INFO  15:36:41,003 - #8 c
INFO  15:36:41,003 - #24 =
INFO  15:36:41,003 - #9 10
INFO  15:36:41,003 - #28 ,
INFO  15:36:41,003 - #8 d
INFO  15:36:41,003 - #24 =
INFO  15:36:41,003 - #9 99
INFO  15:36:41,003 - #28 ,
INFO  15:36:41,003 - #8 g
INFO  15:36:41,003 - #24 =
INFO  15:36:41,003 - #9 2
INFO  15:36:41,003 - #27 ;
INFO  15:36:41,003 - #8 int
INFO  15:36:41,003 - #8 e
INFO  15:36:41,003 - #27 ;
INFO  15:36:41,003 - #8 char
INFO  15:36:41,003 - #8 z
INFO  15:36:41,003 - #22 [
INFO  15:36:41,003 - #23 ]
INFO  15:36:41,003 - #27 ;
INFO  15:36:41,003 - #20 {
INFO  15:36:41,003 - #6 void
INFO  15:36:41,003 - #8 main
INFO  15:36:41,003 - #29 (
INFO  15:36:41,003 - #30 )
INFO  15:36:41,003 - #8 bool
INFO  15:36:41,003 - #8 cond
INFO  15:36:41,003 - #27 ;
INFO  15:36:41,003 - #20 {
INFO  15:36:41,003 - #8 e
INFO  15:36:41,003 - #24 =
INFO  15:36:41,003 - #9 13
INFO  15:36:41,003 - #27 ;
INFO  15:36:41,003 - #31 if
INFO  15:36:41,003 - #29 (
INFO  15:36:41,003 - #8 e
INFO  15:36:41,003 - #38 >
INFO  15:36:41,003 - #9 0
INFO  15:36:41,018 - #30 )
INFO  15:36:41,018 - #20 {
INFO  15:36:41,018 - #3 print
INFO  15:36:41,018 - #29 (
INFO  15:36:41,018 - #8 d
INFO  15:36:41,018 - #30 )
INFO  15:36:41,018 - #27 ;
INFO  15:36:41,018 - #21 }
INFO  15:36:41,018 - #32 else
INFO  15:36:41,018 - #20 {
INFO  15:36:41,018 - #3 print
INFO  15:36:41,018 - #29 (
INFO  15:36:41,018 - #8 g
INFO  15:36:41,018 - #30 )
INFO  15:36:41,018 - #27 ;
INFO  15:36:41,018 - #21 }
INFO  15:36:41,018 - #21 }
INFO  15:36:41,018 - #21 }
INFO  15:36:41,018 - =====================SINTAKSNO_STABLO=========================
INFO  15:36:41,034 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     13
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:36:41,034 - ==============================================================
INFO  15:36:41,050 - Pocetak obrade programa Program na liniji 1
INFO  15:36:41,050 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:36:41,050 - Deklarisana konstanta c na liniji 2
INFO  15:36:41,050 - Deklarisana konstanta d na liniji 2
INFO  15:36:41,050 - Deklarisana konstanta g na liniji 2
INFO  15:36:41,050 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:36:41,050 - Deklarisana promenljiva e na liniji 3
INFO  15:36:41,050 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  15:36:41,050 - Deklarisan niz z na liniji 3
INFO  15:36:41,050 - Pocetak obrade metode main na liniji 5
INFO  15:36:41,050 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  15:36:41,050 - Deklarisana promenljiva cond na liniji 5
INFO  15:36:41,050 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:36:41,050 - Zavrsetak obrade programa Program na liniji 1
INFO  15:36:41,050 - ======================TABELA_SIMBOLA==========================
INFO  15:36:41,065 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  15:36:41,065 - ==============================================================
INFO  15:36:41,065 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:36:41,065 - ==============================================================
INFO  15:36:41,065 - ======================GENERISANJE_KODA========================
INFO  15:36:41,065 - Generisanje koda uspesno zavrseno!
INFO  15:36:41,081 - Generisanje izlaznog fajla test\program.obj
INFO  15:36:41,081 - ==============================================================
INFO  15:37:21,174 - Obrada ulaznog fajla test\program.mj
INFO  15:37:21,252 - #2 program
INFO  15:37:21,252 - #8 Program
INFO  15:37:21,252 - #5 const
INFO  15:37:21,252 - #8 int
INFO  15:37:21,252 - #8 c
INFO  15:37:21,252 - #24 =
INFO  15:37:21,252 - #9 10
INFO  15:37:21,252 - #28 ,
INFO  15:37:21,252 - #8 d
INFO  15:37:21,252 - #24 =
INFO  15:37:21,252 - #9 99
INFO  15:37:21,252 - #28 ,
INFO  15:37:21,252 - #8 g
INFO  15:37:21,252 - #24 =
INFO  15:37:21,252 - #9 2
INFO  15:37:21,252 - #27 ;
INFO  15:37:21,252 - #8 int
INFO  15:37:21,252 - #8 e
INFO  15:37:21,252 - #27 ;
INFO  15:37:21,252 - #8 char
INFO  15:37:21,252 - #8 z
INFO  15:37:21,252 - #22 [
INFO  15:37:21,252 - #23 ]
INFO  15:37:21,252 - #27 ;
INFO  15:37:21,252 - #20 {
INFO  15:37:21,252 - #6 void
INFO  15:37:21,252 - #8 main
INFO  15:37:21,252 - #29 (
INFO  15:37:21,252 - #30 )
INFO  15:37:21,252 - #8 bool
INFO  15:37:21,252 - #8 cond
INFO  15:37:21,252 - #27 ;
INFO  15:37:21,252 - #20 {
INFO  15:37:21,252 - #8 e
INFO  15:37:21,252 - #24 =
INFO  15:37:21,252 - #16 -
INFO  15:37:21,252 - #9 1
INFO  15:37:21,252 - #27 ;
INFO  15:37:21,252 - #31 if
INFO  15:37:21,252 - #29 (
INFO  15:37:21,252 - #8 e
INFO  15:37:21,252 - #38 >
INFO  15:37:21,252 - #9 0
INFO  15:37:21,252 - #30 )
INFO  15:37:21,267 - #20 {
INFO  15:37:21,267 - #3 print
INFO  15:37:21,267 - #29 (
INFO  15:37:21,267 - #8 d
INFO  15:37:21,267 - #30 )
INFO  15:37:21,267 - #27 ;
INFO  15:37:21,267 - #21 }
INFO  15:37:21,267 - #32 else
INFO  15:37:21,267 - #20 {
INFO  15:37:21,267 - #3 print
INFO  15:37:21,267 - #29 (
INFO  15:37:21,267 - #8 g
INFO  15:37:21,267 - #30 )
INFO  15:37:21,267 - #27 ;
INFO  15:37:21,267 - #21 }
INFO  15:37:21,267 - #21 }
INFO  15:37:21,267 - #21 }
INFO  15:37:21,267 - =====================SINTAKSNO_STABLO=========================
INFO  15:37:21,267 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:37:21,267 - ==============================================================
INFO  15:37:21,283 - Pocetak obrade programa Program na liniji 1
INFO  15:37:21,283 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:37:21,283 - Deklarisana konstanta c na liniji 2
INFO  15:37:21,283 - Deklarisana konstanta d na liniji 2
INFO  15:37:21,283 - Deklarisana konstanta g na liniji 2
INFO  15:37:21,283 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:37:21,283 - Deklarisana promenljiva e na liniji 3
INFO  15:37:21,283 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  15:37:21,283 - Deklarisan niz z na liniji 3
INFO  15:37:21,283 - Pocetak obrade metode main na liniji 5
INFO  15:37:21,283 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  15:37:21,283 - Deklarisana promenljiva cond na liniji 5
INFO  15:37:21,283 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:37:21,283 - Zavrsetak obrade programa Program na liniji 1
INFO  15:37:21,283 - ======================TABELA_SIMBOLA==========================
INFO  15:37:21,283 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  15:37:21,283 - ==============================================================
INFO  15:37:21,283 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:37:21,283 - ==============================================================
INFO  15:37:21,283 - ======================GENERISANJE_KODA========================
INFO  15:37:21,283 - Generisanje koda uspesno zavrseno!
INFO  15:37:21,330 - Generisanje izlaznog fajla test\program.obj
INFO  15:37:21,330 - ==============================================================
INFO  15:38:01,957 - Obrada ulaznog fajla test\program.mj
INFO  15:38:02,036 - #2 program
INFO  15:38:02,036 - #8 Program
INFO  15:38:02,036 - #5 const
INFO  15:38:02,036 - #8 int
INFO  15:38:02,036 - #8 c
INFO  15:38:02,036 - #24 =
INFO  15:38:02,036 - #9 10
INFO  15:38:02,036 - #28 ,
INFO  15:38:02,036 - #8 d
INFO  15:38:02,036 - #24 =
INFO  15:38:02,036 - #9 99
INFO  15:38:02,036 - #28 ,
INFO  15:38:02,036 - #8 g
INFO  15:38:02,036 - #24 =
INFO  15:38:02,036 - #9 2
INFO  15:38:02,036 - #27 ;
INFO  15:38:02,036 - #8 int
INFO  15:38:02,036 - #8 e
INFO  15:38:02,036 - #27 ;
INFO  15:38:02,036 - #8 char
INFO  15:38:02,036 - #8 z
INFO  15:38:02,036 - #22 [
INFO  15:38:02,036 - #23 ]
INFO  15:38:02,036 - #27 ;
INFO  15:38:02,036 - #20 {
INFO  15:38:02,036 - #6 void
INFO  15:38:02,036 - #8 main
INFO  15:38:02,036 - #29 (
INFO  15:38:02,036 - #30 )
INFO  15:38:02,036 - #8 bool
INFO  15:38:02,036 - #8 cond
INFO  15:38:02,036 - #27 ;
INFO  15:38:02,036 - #20 {
INFO  15:38:02,036 - #8 e
INFO  15:38:02,036 - #24 =
INFO  15:38:02,036 - #16 -
INFO  15:38:02,036 - #9 1
INFO  15:38:02,036 - #27 ;
INFO  15:38:02,036 - #31 if
INFO  15:38:02,036 - #29 (
INFO  15:38:02,036 - #8 e
INFO  15:38:02,036 - #38 >
INFO  15:38:02,036 - #9 0
INFO  15:38:02,051 - #30 )
INFO  15:38:02,051 - #20 {
INFO  15:38:02,051 - #3 print
INFO  15:38:02,051 - #29 (
INFO  15:38:02,051 - #8 d
INFO  15:38:02,051 - #30 )
INFO  15:38:02,051 - #27 ;
INFO  15:38:02,051 - #21 }
INFO  15:38:02,051 - #32 else
INFO  15:38:02,051 - #20 {
INFO  15:38:02,051 - #3 print
INFO  15:38:02,051 - #29 (
INFO  15:38:02,051 - #8 g
INFO  15:38:02,051 - #30 )
INFO  15:38:02,051 - #27 ;
INFO  15:38:02,051 - #21 }
INFO  15:38:02,051 - #21 }
INFO  15:38:02,051 - #21 }
INFO  15:38:02,051 - =====================SINTAKSNO_STABLO=========================
INFO  15:38:02,051 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:38:02,051 - ==============================================================
INFO  15:38:02,067 - Pocetak obrade programa Program na liniji 1
INFO  15:38:02,067 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:38:02,067 - Deklarisana konstanta c na liniji 2
INFO  15:38:02,067 - Deklarisana konstanta d na liniji 2
INFO  15:38:02,067 - Deklarisana konstanta g na liniji 2
INFO  15:38:02,067 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:38:02,067 - Deklarisana promenljiva e na liniji 3
INFO  15:38:02,067 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  15:38:02,067 - Deklarisan niz z na liniji 3
INFO  15:38:02,067 - Pocetak obrade metode main na liniji 5
INFO  15:38:02,067 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  15:38:02,067 - Deklarisana promenljiva cond na liniji 5
INFO  15:38:02,067 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:38:02,067 - Zavrsetak obrade programa Program na liniji 1
INFO  15:38:02,067 - ======================TABELA_SIMBOLA==========================
INFO  15:38:02,067 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  15:38:02,082 - ==============================================================
INFO  15:38:02,082 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:38:02,082 - ==============================================================
INFO  15:38:02,082 - ======================GENERISANJE_KODA========================
INFO  15:38:02,082 - Generisanje koda uspesno zavrseno!
INFO  15:38:02,098 - Generisanje izlaznog fajla test\program.obj
INFO  15:38:02,098 - ==============================================================
INFO  15:45:51,449 - Obrada ulaznog fajla test\program.mj
INFO  15:45:51,543 - #2 program
INFO  15:45:51,543 - #8 Program
INFO  15:45:51,543 - #5 const
INFO  15:45:51,543 - #8 int
INFO  15:45:51,543 - #8 c
INFO  15:45:51,543 - #24 =
INFO  15:45:51,543 - #9 10
INFO  15:45:51,543 - #28 ,
INFO  15:45:51,543 - #8 d
INFO  15:45:51,543 - #24 =
INFO  15:45:51,543 - #9 99
INFO  15:45:51,543 - #28 ,
INFO  15:45:51,543 - #8 g
INFO  15:45:51,543 - #24 =
INFO  15:45:51,543 - #9 2
INFO  15:45:51,543 - #27 ;
INFO  15:45:51,543 - #8 int
INFO  15:45:51,543 - #8 e
INFO  15:45:51,543 - #27 ;
INFO  15:45:51,543 - #8 char
INFO  15:45:51,543 - #8 z
INFO  15:45:51,543 - #22 [
INFO  15:45:51,543 - #23 ]
INFO  15:45:51,543 - #27 ;
INFO  15:45:51,543 - #20 {
INFO  15:45:51,543 - #6 void
INFO  15:45:51,543 - #8 main
INFO  15:45:51,543 - #29 (
INFO  15:45:51,543 - #30 )
INFO  15:45:51,543 - #8 bool
INFO  15:45:51,543 - #8 cond
INFO  15:45:51,543 - #27 ;
INFO  15:45:51,543 - #20 {
INFO  15:45:51,543 - #8 e
INFO  15:45:51,543 - #24 =
INFO  15:45:51,543 - #16 -
INFO  15:45:51,543 - #9 1
INFO  15:45:51,543 - #27 ;
INFO  15:45:51,543 - #31 if
INFO  15:45:51,543 - #29 (
INFO  15:45:51,543 - #8 e
INFO  15:45:51,543 - #38 >
INFO  15:45:51,543 - #9 0
INFO  15:45:51,543 - #30 )
INFO  15:45:51,543 - #20 {
INFO  15:45:51,543 - #3 print
INFO  15:45:51,543 - #29 (
INFO  15:45:51,543 - #8 d
INFO  15:45:51,543 - #30 )
INFO  15:45:51,543 - #27 ;
INFO  15:45:51,543 - #21 }
INFO  15:45:51,543 - #32 else
INFO  15:45:51,558 - #20 {
INFO  15:45:51,558 - #3 print
INFO  15:45:51,558 - #29 (
INFO  15:45:51,558 - #8 g
INFO  15:45:51,558 - #30 )
INFO  15:45:51,558 - #27 ;
INFO  15:45:51,558 - #21 }
INFO  15:45:51,558 - #21 }
INFO  15:45:51,558 - #21 }
INFO  15:45:51,558 - =====================SINTAKSNO_STABLO=========================
INFO  15:45:51,558 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:45:51,558 - ==============================================================
INFO  15:45:51,574 - Pocetak obrade programa Program na liniji 1
INFO  15:45:51,574 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:45:51,574 - Deklarisana konstanta c na liniji 2
INFO  15:45:51,574 - Deklarisana konstanta d na liniji 2
INFO  15:45:51,574 - Deklarisana konstanta g na liniji 2
INFO  15:45:51,574 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:45:51,574 - Deklarisana promenljiva e na liniji 3
INFO  15:45:51,574 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  15:45:51,574 - Deklarisan niz z na liniji 3
INFO  15:45:51,574 - Pocetak obrade metode main na liniji 5
INFO  15:45:51,574 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  15:45:51,574 - Deklarisana promenljiva cond na liniji 5
INFO  15:45:51,574 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:45:51,574 - Zavrsetak obrade programa Program na liniji 1
INFO  15:45:51,574 - ======================TABELA_SIMBOLA==========================
INFO  15:45:51,574 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  15:45:51,574 - ==============================================================
INFO  15:45:51,574 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:45:51,574 - ==============================================================
INFO  15:45:51,574 - ======================GENERISANJE_KODA========================
INFO  15:45:51,590 - Generisanje koda uspesno zavrseno!
INFO  15:45:51,590 - Generisanje izlaznog fajla test\program.obj
INFO  15:45:51,590 - ==============================================================
INFO  15:46:57,617 - Obrada ulaznog fajla test\program.mj
INFO  15:46:57,679 - #2 program
INFO  15:46:57,679 - #8 Program
INFO  15:46:57,679 - #5 const
INFO  15:46:57,679 - #8 int
INFO  15:46:57,679 - #8 c
INFO  15:46:57,679 - #24 =
INFO  15:46:57,695 - #9 10
INFO  15:46:57,695 - #28 ,
INFO  15:46:57,695 - #8 d
INFO  15:46:57,695 - #24 =
INFO  15:46:57,695 - #9 99
INFO  15:46:57,695 - #28 ,
INFO  15:46:57,695 - #8 g
INFO  15:46:57,695 - #24 =
INFO  15:46:57,695 - #9 2
INFO  15:46:57,695 - #27 ;
INFO  15:46:57,695 - #8 int
INFO  15:46:57,695 - #8 e
INFO  15:46:57,695 - #27 ;
INFO  15:46:57,695 - #8 char
INFO  15:46:57,695 - #8 z
INFO  15:46:57,695 - #22 [
INFO  15:46:57,695 - #23 ]
INFO  15:46:57,695 - #27 ;
INFO  15:46:57,695 - #20 {
INFO  15:46:57,695 - #6 void
INFO  15:46:57,695 - #8 main
INFO  15:46:57,695 - #29 (
INFO  15:46:57,695 - #30 )
INFO  15:46:57,695 - #8 bool
INFO  15:46:57,695 - #8 cond
INFO  15:46:57,695 - #27 ;
INFO  15:46:57,695 - #20 {
INFO  15:46:57,695 - #8 e
INFO  15:46:57,711 - #24 =
INFO  15:46:57,711 - #16 -
INFO  15:46:57,711 - #9 1
INFO  15:46:57,711 - #27 ;
INFO  15:46:57,711 - #31 if
INFO  15:46:57,711 - #29 (
INFO  15:46:57,711 - #8 e
INFO  15:46:57,711 - #38 >
INFO  15:46:57,711 - #9 0
INFO  15:46:57,711 - #30 )
INFO  15:46:57,711 - #20 {
INFO  15:46:57,711 - #3 print
INFO  15:46:57,711 - #29 (
INFO  15:46:57,711 - #8 d
INFO  15:46:57,711 - #30 )
INFO  15:46:57,711 - #27 ;
INFO  15:46:57,711 - #21 }
INFO  15:46:57,711 - #32 else
INFO  15:46:57,711 - #20 {
INFO  15:46:57,711 - #3 print
INFO  15:46:57,711 - #29 (
INFO  15:46:57,711 - #8 g
INFO  15:46:57,711 - #30 )
INFO  15:46:57,711 - #27 ;
INFO  15:46:57,711 - #21 }
INFO  15:46:57,711 - #21 }
INFO  15:46:57,711 - #21 }
INFO  15:46:57,711 - =====================SINTAKSNO_STABLO=========================
INFO  15:46:57,711 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         g
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:46:57,726 - ==============================================================
INFO  15:46:57,742 - Pocetak obrade programa Program na liniji 1
INFO  15:46:57,742 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:46:57,742 - Deklarisana konstanta c na liniji 2
INFO  15:46:57,742 - Deklarisana konstanta d na liniji 2
INFO  15:46:57,742 - Deklarisana konstanta g na liniji 2
INFO  15:46:57,742 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:46:57,742 - Deklarisana promenljiva e na liniji 3
INFO  15:46:57,742 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  15:46:57,742 - Deklarisan niz z na liniji 3
INFO  15:46:57,742 - Pocetak obrade metode main na liniji 5
INFO  15:46:57,742 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  15:46:57,742 - Deklarisana promenljiva cond na liniji 5
INFO  15:46:57,742 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:46:57,742 - Zavrsetak obrade programa Program na liniji 1
INFO  15:46:57,742 - ======================TABELA_SIMBOLA==========================
INFO  15:46:57,742 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  15:46:57,742 - ==============================================================
INFO  15:46:57,742 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:46:57,742 - ==============================================================
INFO  15:46:57,742 - ======================GENERISANJE_KODA========================
INFO  15:46:57,758 - Generisanje koda uspesno zavrseno!
INFO  15:46:57,773 - Generisanje izlaznog fajla test\program.obj
INFO  15:46:57,773 - ==============================================================
INFO  15:54:19,570 - Obrada ulaznog fajla test\program.mj
INFO  15:54:19,648 - #2 program
INFO  15:54:19,648 - #8 Program
INFO  15:54:19,648 - #5 const
INFO  15:54:19,648 - #8 int
INFO  15:54:19,648 - #8 c
INFO  15:54:19,648 - #24 =
INFO  15:54:19,648 - #9 10
INFO  15:54:19,648 - #28 ,
INFO  15:54:19,648 - #8 d
INFO  15:54:19,648 - #24 =
INFO  15:54:19,648 - #9 99
INFO  15:54:19,648 - #28 ,
INFO  15:54:19,648 - #8 g
INFO  15:54:19,648 - #24 =
INFO  15:54:19,648 - #9 2
INFO  15:54:19,648 - #27 ;
INFO  15:54:19,648 - #8 int
INFO  15:54:19,648 - #8 e
INFO  15:54:19,648 - #27 ;
INFO  15:54:19,648 - #8 char
INFO  15:54:19,648 - #8 z
INFO  15:54:19,648 - #22 [
INFO  15:54:19,648 - #23 ]
INFO  15:54:19,648 - #27 ;
INFO  15:54:19,648 - #20 {
INFO  15:54:19,648 - #6 void
INFO  15:54:19,648 - #8 main
INFO  15:54:19,648 - #29 (
INFO  15:54:19,648 - #30 )
INFO  15:54:19,648 - #8 bool
INFO  15:54:19,648 - #8 cond
INFO  15:54:19,648 - #27 ;
INFO  15:54:19,648 - #20 {
INFO  15:54:19,648 - #8 e
INFO  15:54:19,648 - #24 =
INFO  15:54:19,648 - #16 -
INFO  15:54:19,648 - #9 1
INFO  15:54:19,648 - #27 ;
INFO  15:54:19,664 - #31 if
INFO  15:54:19,664 - #29 (
INFO  15:54:19,664 - #8 e
INFO  15:54:19,664 - #38 >
INFO  15:54:19,664 - #9 0
INFO  15:54:19,664 - #30 )
INFO  15:54:19,664 - #20 {
INFO  15:54:19,664 - #3 print
INFO  15:54:19,664 - #29 (
INFO  15:54:19,664 - #8 d
INFO  15:54:19,664 - #30 )
INFO  15:54:19,664 - #27 ;
INFO  15:54:19,664 - #21 }
INFO  15:54:19,664 - #32 else
INFO  15:54:19,664 - #20 {
INFO  15:54:19,664 - #3 print
INFO  15:54:19,664 - #29 (
INFO  15:54:19,664 - #8 g
INFO  15:54:19,664 - #30 )
INFO  15:54:19,664 - #27 ;
INFO  15:54:19,664 - #21 }
INFO  15:54:19,664 - #33 do
INFO  15:54:19,664 - #20 {
INFO  15:54:19,664 - #3 print
INFO  15:54:19,664 - #29 (
INFO  15:54:19,664 - #9 50
INFO  15:54:19,664 - #30 )
INFO  15:54:19,664 - #27 ;
INFO  15:54:19,664 - #8 e
INFO  15:54:19,664 - #25 ++
INFO  15:54:19,664 - #27 ;
INFO  15:54:19,664 - #21 }
INFO  15:54:19,664 - #34 while
INFO  15:54:19,664 - #29 (
INFO  15:54:19,664 - #8 e
INFO  15:54:19,664 - #38 >
INFO  15:54:19,664 - #9 0
INFO  15:54:19,664 - #30 )
INFO  15:54:19,664 - #27 ;
INFO  15:54:19,664 - #21 }
INFO  15:54:19,664 - #21 }
INFO  15:54:19,664 - =====================SINTAKSNO_STABLO=========================
INFO  15:54:19,664 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_neg_term_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_neg_term_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         50
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_gt(
                  ) [Rel_op_gt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:54:19,679 - ==============================================================
INFO  15:54:19,679 - Pocetak obrade programa Program na liniji 1
INFO  15:54:19,695 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:54:19,695 - Deklarisana konstanta c na liniji 2
INFO  15:54:19,695 - Deklarisana konstanta d na liniji 2
INFO  15:54:19,695 - Deklarisana konstanta g na liniji 2
INFO  15:54:19,695 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:54:19,695 - Deklarisana promenljiva e na liniji 3
INFO  15:54:19,695 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  15:54:19,695 - Deklarisan niz z na liniji 3
INFO  15:54:19,695 - Pocetak obrade metode main na liniji 5
INFO  15:54:19,695 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  15:54:19,695 - Deklarisana promenljiva cond na liniji 5
INFO  15:54:19,695 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:54:19,695 - Zavrsetak obrade programa Program na liniji 1
INFO  15:54:19,695 - ======================TABELA_SIMBOLA==========================
INFO  15:54:19,695 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  15:54:19,695 - ==============================================================
INFO  15:54:19,695 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:54:19,695 - ==============================================================
INFO  15:54:19,695 - ======================GENERISANJE_KODA========================
INFO  15:54:19,695 - Generisanje koda uspesno zavrseno!
INFO  15:54:19,711 - Generisanje izlaznog fajla test\program.obj
INFO  15:54:19,711 - ==============================================================
INFO  15:56:16,217 - Obrada ulaznog fajla test\program.mj
INFO  15:56:16,295 - #2 program
INFO  15:56:16,295 - #8 Program
INFO  15:56:16,295 - #5 const
INFO  15:56:16,295 - #8 int
INFO  15:56:16,295 - #8 c
INFO  15:56:16,295 - #24 =
INFO  15:56:16,295 - #9 10
INFO  15:56:16,295 - #28 ,
INFO  15:56:16,295 - #8 d
INFO  15:56:16,295 - #24 =
INFO  15:56:16,295 - #9 99
INFO  15:56:16,295 - #28 ,
INFO  15:56:16,295 - #8 g
INFO  15:56:16,295 - #24 =
INFO  15:56:16,295 - #9 2
INFO  15:56:16,295 - #27 ;
INFO  15:56:16,295 - #8 int
INFO  15:56:16,295 - #8 e
INFO  15:56:16,295 - #27 ;
INFO  15:56:16,295 - #8 char
INFO  15:56:16,295 - #8 z
INFO  15:56:16,295 - #22 [
INFO  15:56:16,295 - #23 ]
INFO  15:56:16,295 - #27 ;
INFO  15:56:16,295 - #20 {
INFO  15:56:16,295 - #6 void
INFO  15:56:16,295 - #8 main
INFO  15:56:16,295 - #29 (
INFO  15:56:16,295 - #30 )
INFO  15:56:16,295 - #8 bool
INFO  15:56:16,295 - #8 cond
INFO  15:56:16,295 - #27 ;
INFO  15:56:16,295 - #20 {
INFO  15:56:16,295 - #8 e
INFO  15:56:16,295 - #24 =
INFO  15:56:16,295 - #16 -
INFO  15:56:16,295 - #9 1
INFO  15:56:16,295 - #27 ;
INFO  15:56:16,295 - #31 if
INFO  15:56:16,295 - #29 (
INFO  15:56:16,295 - #8 e
INFO  15:56:16,295 - #42 <=
INFO  15:56:16,295 - #9 0
INFO  15:56:16,295 - #30 )
INFO  15:56:16,295 - #20 {
INFO  15:56:16,295 - #3 print
INFO  15:56:16,295 - #29 (
INFO  15:56:16,295 - #8 d
INFO  15:56:16,295 - #30 )
INFO  15:56:16,295 - #27 ;
INFO  15:56:16,295 - #21 }
INFO  15:56:16,295 - #32 else
INFO  15:56:16,311 - #20 {
INFO  15:56:16,311 - #3 print
INFO  15:56:16,311 - #29 (
INFO  15:56:16,311 - #8 g
INFO  15:56:16,311 - #30 )
INFO  15:56:16,311 - #27 ;
INFO  15:56:16,311 - #21 }
INFO  15:56:16,311 - #33 do
INFO  15:56:16,311 - #20 {
INFO  15:56:16,311 - #3 print
INFO  15:56:16,311 - #29 (
INFO  15:56:16,311 - #9 50
INFO  15:56:16,311 - #30 )
INFO  15:56:16,311 - #27 ;
INFO  15:56:16,311 - #8 e
INFO  15:56:16,311 - #25 ++
INFO  15:56:16,311 - #27 ;
INFO  15:56:16,311 - #21 }
INFO  15:56:16,311 - #34 while
INFO  15:56:16,311 - #29 (
INFO  15:56:16,311 - #8 e
INFO  15:56:16,311 - #38 >
INFO  15:56:16,311 - #9 0
INFO  15:56:16,311 - #30 )
INFO  15:56:16,311 - #27 ;
INFO  15:56:16,311 - #21 }
INFO  15:56:16,311 - #21 }
INFO  15:56:16,311 - =====================SINTAKSNO_STABLO=========================
INFO  15:56:16,311 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_neg_term_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_neg_term_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         50
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_gt(
                  ) [Rel_op_gt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:56:16,311 - ==============================================================
INFO  15:56:16,326 - Pocetak obrade programa Program na liniji 1
INFO  15:56:16,326 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:56:16,342 - Deklarisana konstanta c na liniji 2
INFO  15:56:16,342 - Deklarisana konstanta d na liniji 2
INFO  15:56:16,342 - Deklarisana konstanta g na liniji 2
INFO  15:56:16,342 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:56:16,342 - Deklarisana promenljiva e na liniji 3
INFO  15:56:16,342 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  15:56:16,342 - Deklarisan niz z na liniji 3
INFO  15:56:16,342 - Pocetak obrade metode main na liniji 5
INFO  15:56:16,342 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  15:56:16,342 - Deklarisana promenljiva cond na liniji 5
INFO  15:56:16,342 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:56:16,342 - Zavrsetak obrade programa Program na liniji 1
INFO  15:56:16,342 - ======================TABELA_SIMBOLA==========================
INFO  15:56:16,342 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  15:56:16,342 - ==============================================================
INFO  15:56:16,342 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:56:16,342 - ==============================================================
INFO  15:56:16,342 - ======================GENERISANJE_KODA========================
INFO  15:56:16,357 - Generisanje koda uspesno zavrseno!
INFO  15:56:16,357 - Generisanje izlaznog fajla test\program.obj
INFO  15:56:16,357 - ==============================================================
INFO  19:33:51,467 - Obrada ulaznog fajla test\program.mj
INFO  19:33:51,549 - #2 program
INFO  19:33:51,549 - #8 Program
INFO  19:33:51,549 - #5 const
INFO  19:33:51,550 - #8 int
INFO  19:33:51,550 - #8 c
INFO  19:33:51,551 - #24 =
INFO  19:33:51,551 - #9 10
INFO  19:33:51,551 - #28 ,
INFO  19:33:51,553 - #8 d
INFO  19:33:51,553 - #24 =
INFO  19:33:51,553 - #9 99
INFO  19:33:51,553 - #28 ,
INFO  19:33:51,553 - #8 g
INFO  19:33:51,553 - #24 =
INFO  19:33:51,554 - #9 2
INFO  19:33:51,554 - #27 ;
INFO  19:33:51,554 - #8 int
INFO  19:33:51,555 - #8 e
INFO  19:33:51,555 - #27 ;
INFO  19:33:51,556 - #8 char
INFO  19:33:51,556 - #8 z
INFO  19:33:51,557 - #22 [
INFO  19:33:51,557 - #23 ]
INFO  19:33:51,557 - #27 ;
INFO  19:33:51,557 - #20 {
INFO  19:33:51,557 - #6 void
INFO  19:33:51,557 - #8 main
INFO  19:33:51,557 - #29 (
INFO  19:33:51,558 - #30 )
INFO  19:33:51,559 - #8 bool
INFO  19:33:51,559 - #8 cond
INFO  19:33:51,559 - #27 ;
INFO  19:33:51,559 - #20 {
INFO  19:33:51,559 - #8 e
INFO  19:33:51,559 - #24 =
INFO  19:33:51,560 - #16 -
INFO  19:33:51,560 - #9 1
INFO  19:33:51,560 - #27 ;
INFO  19:33:51,560 - #31 if
INFO  19:33:51,561 - #29 (
INFO  19:33:51,561 - #8 e
INFO  19:33:51,561 - #42 <=
INFO  19:33:51,561 - #9 0
INFO  19:33:51,563 - #30 )
INFO  19:33:51,564 - #20 {
INFO  19:33:51,564 - #3 print
INFO  19:33:51,564 - #29 (
INFO  19:33:51,564 - #8 d
INFO  19:33:51,564 - #30 )
INFO  19:33:51,564 - #27 ;
INFO  19:33:51,564 - #21 }
INFO  19:33:51,564 - #32 else
INFO  19:33:51,565 - #20 {
INFO  19:33:51,565 - #3 print
INFO  19:33:51,565 - #29 (
INFO  19:33:51,566 - #8 g
INFO  19:33:51,566 - #30 )
INFO  19:33:51,566 - #27 ;
INFO  19:33:51,566 - #21 }
INFO  19:33:51,566 - #33 do
INFO  19:33:51,566 - #20 {
INFO  19:33:51,567 - #3 print
INFO  19:33:51,568 - #29 (
INFO  19:33:51,568 - #9 50
INFO  19:33:51,568 - #30 )
INFO  19:33:51,568 - #27 ;
INFO  19:33:51,568 - #8 e
INFO  19:33:51,568 - #25 ++
INFO  19:33:51,568 - #27 ;
INFO  19:33:51,568 - #21 }
INFO  19:33:51,569 - #34 while
INFO  19:33:51,569 - #29 (
INFO  19:33:51,569 - #8 e
INFO  19:33:51,569 - #38 >
INFO  19:33:51,569 - #9 0
INFO  19:33:51,570 - #30 )
INFO  19:33:51,571 - #27 ;
INFO  19:33:51,571 - #21 }
INFO  19:33:51,572 - #21 }
INFO  19:33:51,573 - =====================SINTAKSNO_STABLO=========================
INFO  19:33:51,575 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_neg_term_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_neg_term_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         50
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_gt(
                  ) [Rel_op_gt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:33:51,576 - ==============================================================
INFO  19:33:51,591 - Pocetak obrade programa Program na liniji 1
INFO  19:33:51,592 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:33:51,592 - Deklarisana konstanta c na liniji 2
INFO  19:33:51,592 - Deklarisana konstanta d na liniji 2
INFO  19:33:51,592 - Deklarisana konstanta g na liniji 2
INFO  19:33:51,593 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:33:51,593 - Deklarisana promenljiva e na liniji 3
INFO  19:33:51,593 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:33:51,593 - Deklarisan niz z na liniji 3
INFO  19:33:51,594 - Pocetak obrade metode main na liniji 5
INFO  19:33:51,594 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  19:33:51,594 - Deklarisana promenljiva cond na liniji 5
INFO  19:33:51,594 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:33:51,595 - Zavrsetak obrade programa Program na liniji 1
INFO  19:33:51,595 - ======================TABELA_SIMBOLA==========================
INFO  19:33:51,595 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  19:33:51,595 - ==============================================================
INFO  19:33:51,595 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:33:51,595 - ==============================================================
INFO  19:33:51,596 - ======================GENERISANJE_KODA========================
INFO  19:33:51,601 - Generisanje koda uspesno zavrseno!
INFO  19:33:51,601 - Generisanje izlaznog fajla test\program.obj
INFO  19:33:51,601 - ==============================================================
INFO  19:36:15,585 - Obrada ulaznog fajla test\program.mj
INFO  19:36:15,661 - #2 program
INFO  19:36:15,662 - #8 Program
INFO  19:36:15,662 - #5 const
INFO  19:36:15,663 - #8 int
INFO  19:36:15,663 - #8 c
INFO  19:36:15,663 - #24 =
INFO  19:36:15,663 - #9 10
INFO  19:36:15,664 - #28 ,
INFO  19:36:15,665 - #8 d
INFO  19:36:15,665 - #24 =
INFO  19:36:15,665 - #9 99
INFO  19:36:15,665 - #28 ,
INFO  19:36:15,666 - #8 g
INFO  19:36:15,666 - #24 =
INFO  19:36:15,666 - #9 2
INFO  19:36:15,666 - #27 ;
INFO  19:36:15,666 - #8 int
INFO  19:36:15,667 - #8 e
INFO  19:36:15,667 - #27 ;
INFO  19:36:15,668 - #8 char
INFO  19:36:15,669 - #8 z
INFO  19:36:15,670 - #22 [
INFO  19:36:15,670 - #23 ]
INFO  19:36:15,670 - #27 ;
INFO  19:36:15,670 - #20 {
INFO  19:36:15,670 - #6 void
INFO  19:36:15,670 - #8 main
INFO  19:36:15,670 - #29 (
INFO  19:36:15,671 - #30 )
INFO  19:36:15,671 - #8 bool
INFO  19:36:15,672 - #8 cond
INFO  19:36:15,672 - #27 ;
INFO  19:36:15,672 - #20 {
INFO  19:36:15,672 - #8 e
INFO  19:36:15,672 - #24 =
INFO  19:36:15,672 - #16 -
INFO  19:36:15,672 - #9 1
INFO  19:36:15,672 - #27 ;
INFO  19:36:15,673 - #31 if
INFO  19:36:15,674 - #29 (
INFO  19:36:15,674 - #8 e
INFO  19:36:15,674 - #40 <
INFO  19:36:15,674 - #9 0
INFO  19:36:15,675 - #30 )
INFO  19:36:15,676 - #20 {
INFO  19:36:15,676 - #3 print
INFO  19:36:15,676 - #29 (
INFO  19:36:15,676 - #8 d
INFO  19:36:15,676 - #30 )
INFO  19:36:15,676 - #27 ;
INFO  19:36:15,677 - #21 }
INFO  19:36:15,677 - #32 else
INFO  19:36:15,678 - #20 {
INFO  19:36:15,678 - #3 print
INFO  19:36:15,678 - #29 (
INFO  19:36:15,678 - #8 g
INFO  19:36:15,678 - #30 )
INFO  19:36:15,678 - #27 ;
INFO  19:36:15,678 - #21 }
INFO  19:36:15,678 - #33 do
INFO  19:36:15,680 - #20 {
INFO  19:36:15,681 - #3 print
INFO  19:36:15,681 - #29 (
INFO  19:36:15,681 - #9 50
INFO  19:36:15,681 - #30 )
INFO  19:36:15,681 - #27 ;
INFO  19:36:15,681 - #8 e
INFO  19:36:15,681 - #25 ++
INFO  19:36:15,681 - #27 ;
INFO  19:36:15,682 - #21 }
INFO  19:36:15,682 - #34 while
INFO  19:36:15,682 - #29 (
INFO  19:36:15,682 - #8 e
INFO  19:36:15,682 - #38 >
INFO  19:36:15,682 - #9 0
INFO  19:36:15,683 - #30 )
INFO  19:36:15,683 - #27 ;
INFO  19:36:15,683 - #21 }
INFO  19:36:15,683 - #21 }
INFO  19:36:15,685 - =====================SINTAKSNO_STABLO=========================
INFO  19:36:15,687 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_neg_term_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_neg_term_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         50
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_gt(
                  ) [Rel_op_gt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:36:15,688 - ==============================================================
INFO  19:36:15,703 - Pocetak obrade programa Program na liniji 1
INFO  19:36:15,703 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:36:15,704 - Deklarisana konstanta c na liniji 2
INFO  19:36:15,704 - Deklarisana konstanta d na liniji 2
INFO  19:36:15,704 - Deklarisana konstanta g na liniji 2
INFO  19:36:15,704 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:36:15,704 - Deklarisana promenljiva e na liniji 3
INFO  19:36:15,704 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:36:15,704 - Deklarisan niz z na liniji 3
INFO  19:36:15,705 - Pocetak obrade metode main na liniji 5
INFO  19:36:15,705 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  19:36:15,705 - Deklarisana promenljiva cond na liniji 5
INFO  19:36:15,706 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:36:15,706 - Zavrsetak obrade programa Program na liniji 1
INFO  19:36:15,706 - ======================TABELA_SIMBOLA==========================
INFO  19:36:15,707 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  19:36:15,707 - ==============================================================
INFO  19:36:15,707 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:36:15,707 - ==============================================================
INFO  19:36:15,707 - ======================GENERISANJE_KODA========================
INFO  19:36:15,712 - Generisanje koda uspesno zavrseno!
INFO  19:36:15,712 - Generisanje izlaznog fajla test\program.obj
INFO  19:36:15,712 - ==============================================================
INFO  19:36:31,923 - Obrada ulaznog fajla test\program.mj
INFO  19:36:32,001 - #2 program
INFO  19:36:32,002 - #8 Program
INFO  19:36:32,002 - #5 const
INFO  19:36:32,003 - #8 int
INFO  19:36:32,003 - #8 c
INFO  19:36:32,004 - #24 =
INFO  19:36:32,004 - #9 10
INFO  19:36:32,004 - #28 ,
INFO  19:36:32,005 - #8 d
INFO  19:36:32,005 - #24 =
INFO  19:36:32,005 - #9 99
INFO  19:36:32,005 - #28 ,
INFO  19:36:32,006 - #8 g
INFO  19:36:32,006 - #24 =
INFO  19:36:32,006 - #9 2
INFO  19:36:32,006 - #27 ;
INFO  19:36:32,006 - #8 int
INFO  19:36:32,008 - #8 e
INFO  19:36:32,008 - #27 ;
INFO  19:36:32,008 - #8 char
INFO  19:36:32,009 - #8 z
INFO  19:36:32,010 - #22 [
INFO  19:36:32,010 - #23 ]
INFO  19:36:32,010 - #27 ;
INFO  19:36:32,010 - #20 {
INFO  19:36:32,010 - #6 void
INFO  19:36:32,010 - #8 main
INFO  19:36:32,010 - #29 (
INFO  19:36:32,011 - #30 )
INFO  19:36:32,011 - #8 bool
INFO  19:36:32,011 - #8 cond
INFO  19:36:32,011 - #27 ;
INFO  19:36:32,012 - #20 {
INFO  19:36:32,012 - #8 e
INFO  19:36:32,012 - #24 =
INFO  19:36:32,012 - #16 -
INFO  19:36:32,012 - #9 1
INFO  19:36:32,012 - #27 ;
INFO  19:36:32,013 - #31 if
INFO  19:36:32,014 - #29 (
INFO  19:36:32,014 - #8 e
INFO  19:36:32,014 - #40 <
INFO  19:36:32,014 - #9 0
INFO  19:36:32,016 - #30 )
INFO  19:36:32,016 - #20 {
INFO  19:36:32,016 - #3 print
INFO  19:36:32,017 - #29 (
INFO  19:36:32,017 - #8 d
INFO  19:36:32,017 - #30 )
INFO  19:36:32,017 - #27 ;
INFO  19:36:32,017 - #21 }
INFO  19:36:32,017 - #32 else
INFO  19:36:32,019 - #20 {
INFO  19:36:32,019 - #3 print
INFO  19:36:32,019 - #29 (
INFO  19:36:32,019 - #8 g
INFO  19:36:32,019 - #30 )
INFO  19:36:32,019 - #27 ;
INFO  19:36:32,019 - #21 }
INFO  19:36:32,019 - #33 do
INFO  19:36:32,020 - #20 {
INFO  19:36:32,021 - #3 print
INFO  19:36:32,021 - #29 (
INFO  19:36:32,021 - #9 50
INFO  19:36:32,021 - #30 )
INFO  19:36:32,021 - #27 ;
INFO  19:36:32,021 - #8 e
INFO  19:36:32,022 - #25 ++
INFO  19:36:32,022 - #27 ;
INFO  19:36:32,022 - #21 }
INFO  19:36:32,022 - #34 while
INFO  19:36:32,022 - #29 (
INFO  19:36:32,022 - #8 e
INFO  19:36:32,023 - #38 >
INFO  19:36:32,023 - #9 0
INFO  19:36:32,024 - #30 )
INFO  19:36:32,025 - #27 ;
INFO  19:36:32,026 - #21 }
INFO  19:36:32,026 - #21 }
INFO  19:36:32,027 - =====================SINTAKSNO_STABLO=========================
INFO  19:36:32,029 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_neg_term_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_neg_term_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         50
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_gt(
                  ) [Rel_op_gt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:36:32,030 - ==============================================================
INFO  19:36:32,042 - Pocetak obrade programa Program na liniji 1
INFO  19:36:32,042 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:36:32,045 - Deklarisana konstanta c na liniji 2
INFO  19:36:32,045 - Deklarisana konstanta d na liniji 2
INFO  19:36:32,045 - Deklarisana konstanta g na liniji 2
INFO  19:36:32,045 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:36:32,045 - Deklarisana promenljiva e na liniji 3
INFO  19:36:32,045 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:36:32,045 - Deklarisan niz z na liniji 3
INFO  19:36:32,046 - Pocetak obrade metode main na liniji 5
INFO  19:36:32,046 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  19:36:32,047 - Deklarisana promenljiva cond na liniji 5
INFO  19:36:32,047 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:36:32,047 - Zavrsetak obrade programa Program na liniji 1
INFO  19:36:32,047 - ======================TABELA_SIMBOLA==========================
INFO  19:36:32,048 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  19:36:32,048 - ==============================================================
INFO  19:36:32,048 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:38:17,482 - Obrada ulaznog fajla test\program.mj
INFO  19:38:17,575 - #2 program
INFO  19:38:17,576 - #8 Program
INFO  19:38:17,576 - #5 const
INFO  19:38:17,582 - #8 int
INFO  19:38:17,582 - #8 c
INFO  19:38:17,583 - #24 =
INFO  19:38:17,583 - #9 10
INFO  19:38:17,583 - #28 ,
INFO  19:38:17,584 - #8 d
INFO  19:38:17,584 - #24 =
INFO  19:38:17,584 - #9 99
INFO  19:38:17,584 - #28 ,
INFO  19:38:17,585 - #8 g
INFO  19:38:17,585 - #24 =
INFO  19:38:17,585 - #9 2
INFO  19:38:17,585 - #27 ;
INFO  19:38:17,585 - #8 int
INFO  19:38:17,587 - #8 e
INFO  19:38:17,587 - #27 ;
INFO  19:38:17,587 - #8 char
INFO  19:38:17,589 - #8 z
INFO  19:38:17,589 - #22 [
INFO  19:38:17,589 - #23 ]
INFO  19:38:17,589 - #27 ;
INFO  19:38:17,589 - #20 {
INFO  19:38:17,589 - #6 void
INFO  19:38:17,589 - #8 main
INFO  19:38:17,589 - #29 (
INFO  19:38:17,592 - #30 )
INFO  19:38:17,592 - #8 bool
INFO  19:38:17,593 - #8 cond
INFO  19:38:17,593 - #27 ;
INFO  19:38:17,593 - #20 {
INFO  19:38:17,593 - #8 e
INFO  19:38:17,593 - #24 =
INFO  19:38:17,593 - #16 -
INFO  19:38:17,593 - #9 1
INFO  19:38:17,594 - #27 ;
INFO  19:38:17,595 - #31 if
INFO  19:38:17,595 - #29 (
INFO  19:38:17,595 - #8 e
INFO  19:38:17,595 - #40 <
INFO  19:38:17,596 - #9 0
INFO  19:38:17,597 - #30 )
INFO  19:38:17,598 - #20 {
INFO  19:38:17,598 - #3 print
INFO  19:38:17,598 - #29 (
INFO  19:38:17,599 - #8 d
INFO  19:38:17,599 - #30 )
INFO  19:38:17,599 - #27 ;
INFO  19:38:17,599 - #21 }
INFO  19:38:17,599 - #32 else
INFO  19:38:17,600 - #20 {
INFO  19:38:17,600 - #3 print
INFO  19:38:17,600 - #29 (
INFO  19:38:17,601 - #8 g
INFO  19:38:17,601 - #30 )
INFO  19:38:17,601 - #27 ;
INFO  19:38:17,601 - #21 }
INFO  19:38:17,601 - #33 do
INFO  19:38:17,609 - #20 {
INFO  19:38:17,610 - #3 print
INFO  19:38:17,610 - #29 (
INFO  19:38:17,610 - #9 50
INFO  19:38:17,610 - #30 )
INFO  19:38:17,610 - #27 ;
INFO  19:38:17,611 - #8 e
INFO  19:38:17,611 - #25 ++
INFO  19:38:17,611 - #27 ;
INFO  19:38:17,611 - #21 }
INFO  19:38:17,611 - #34 while
INFO  19:38:17,615 - #29 (
INFO  19:38:17,615 - #8 e
INFO  19:38:17,615 - #38 >
INFO  19:38:17,615 - #9 0
INFO  19:38:17,616 - #30 )
INFO  19:38:17,618 - #27 ;
INFO  19:38:17,618 - #21 }
INFO  19:38:17,619 - #21 }
INFO  19:38:17,620 - =====================SINTAKSNO_STABLO=========================
INFO  19:38:17,623 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_neg_term_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_neg_term_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         50
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_gt(
                  ) [Rel_op_gt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:38:17,623 - ==============================================================
INFO  19:38:17,640 - Pocetak obrade programa Program na liniji 1
INFO  19:38:17,641 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:38:17,642 - Deklarisana konstanta c na liniji 2
INFO  19:38:17,642 - Deklarisana konstanta d na liniji 2
INFO  19:38:17,642 - Deklarisana konstanta g na liniji 2
INFO  19:38:17,643 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:38:17,643 - Deklarisana promenljiva e na liniji 3
INFO  19:38:17,643 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:38:17,643 - Deklarisan niz z na liniji 3
INFO  19:38:17,644 - Pocetak obrade metode main na liniji 5
INFO  19:38:17,644 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  19:38:17,644 - Deklarisana promenljiva cond na liniji 5
INFO  19:38:17,645 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:38:17,645 - Zavrsetak obrade programa Program na liniji 1
INFO  19:38:17,645 - ======================TABELA_SIMBOLA==========================
INFO  19:38:17,645 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  19:38:17,646 - ==============================================================
INFO  19:38:17,646 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:38:17,646 - ==============================================================
INFO  19:38:17,646 - ======================GENERISANJE_KODA========================
INFO  19:38:17,653 - Generisanje koda uspesno zavrseno!
INFO  19:38:17,653 - Generisanje izlaznog fajla test\program.obj
INFO  19:38:17,653 - ==============================================================
INFO  19:41:11,651 - Obrada ulaznog fajla test\program.mj
INFO  19:41:11,729 - #2 program
INFO  19:41:11,729 - #8 Program
INFO  19:41:11,730 - #5 const
INFO  19:41:11,730 - #8 int
INFO  19:41:11,730 - #8 c
INFO  19:41:11,731 - #24 =
INFO  19:41:11,731 - #9 10
INFO  19:41:11,731 - #28 ,
INFO  19:41:11,732 - #8 d
INFO  19:41:11,732 - #24 =
INFO  19:41:11,733 - #9 99
INFO  19:41:11,733 - #28 ,
INFO  19:41:11,733 - #8 g
INFO  19:41:11,733 - #24 =
INFO  19:41:11,733 - #9 2
INFO  19:41:11,733 - #27 ;
INFO  19:41:11,733 - #8 int
INFO  19:41:11,734 - #8 e
INFO  19:41:11,734 - #27 ;
INFO  19:41:11,735 - #8 char
INFO  19:41:11,736 - #8 z
INFO  19:41:11,736 - #22 [
INFO  19:41:11,736 - #23 ]
INFO  19:41:11,736 - #27 ;
INFO  19:41:11,736 - #20 {
INFO  19:41:11,736 - #6 void
INFO  19:41:11,736 - #8 main
INFO  19:41:11,737 - #29 (
INFO  19:41:11,737 - #30 )
INFO  19:41:11,738 - #8 bool
INFO  19:41:11,738 - #8 cond
INFO  19:41:11,738 - #27 ;
INFO  19:41:11,738 - #20 {
INFO  19:41:11,738 - #8 e
INFO  19:41:11,738 - #24 =
INFO  19:41:11,738 - #16 -
INFO  19:41:11,738 - #9 1
INFO  19:41:11,738 - #27 ;
INFO  19:41:11,739 - #31 if
INFO  19:41:11,739 - #29 (
INFO  19:41:11,739 - #8 e
INFO  19:41:11,739 - #40 <
INFO  19:41:11,740 - #9 0
INFO  19:41:11,741 - #30 )
INFO  19:41:11,742 - #20 {
INFO  19:41:11,742 - #3 print
INFO  19:41:11,742 - #29 (
INFO  19:41:11,742 - #8 d
INFO  19:41:11,742 - #30 )
INFO  19:41:11,742 - #27 ;
INFO  19:41:11,742 - #21 }
INFO  19:41:11,742 - #32 else
INFO  19:41:11,744 - #20 {
INFO  19:41:11,744 - #3 print
INFO  19:41:11,744 - #29 (
INFO  19:41:11,744 - #8 g
INFO  19:41:11,744 - #30 )
INFO  19:41:11,744 - #27 ;
INFO  19:41:11,744 - #21 }
INFO  19:41:11,744 - #33 do
INFO  19:41:11,745 - #20 {
INFO  19:41:11,746 - #3 print
INFO  19:41:11,746 - #29 (
INFO  19:41:11,746 - #9 50
INFO  19:41:11,746 - #30 )
INFO  19:41:11,746 - #27 ;
INFO  19:41:11,746 - #8 e
INFO  19:41:11,746 - #25 ++
INFO  19:41:11,746 - #27 ;
INFO  19:41:11,747 - #21 }
INFO  19:41:11,747 - #34 while
INFO  19:41:11,747 - #29 (
INFO  19:41:11,747 - #8 e
INFO  19:41:11,747 - #38 >
INFO  19:41:11,747 - #9 0
INFO  19:41:11,748 - #30 )
INFO  19:41:11,750 - #27 ;
INFO  19:41:11,750 - #21 }
INFO  19:41:11,750 - #21 }
INFO  19:41:11,751 - =====================SINTAKSNO_STABLO=========================
INFO  19:41:11,753 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_neg_term_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_neg_term_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         50
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_gt(
                  ) [Rel_op_gt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:41:11,753 - ==============================================================
INFO  19:41:11,766 - Pocetak obrade programa Program na liniji 1
INFO  19:41:11,766 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:41:11,767 - Deklarisana konstanta c na liniji 2
INFO  19:41:11,767 - Deklarisana konstanta d na liniji 2
INFO  19:41:11,767 - Deklarisana konstanta g na liniji 2
INFO  19:41:11,767 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:41:11,767 - Deklarisana promenljiva e na liniji 3
INFO  19:41:11,767 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:41:11,768 - Deklarisan niz z na liniji 3
INFO  19:41:11,768 - Pocetak obrade metode main na liniji 5
INFO  19:41:11,769 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  19:41:11,769 - Deklarisana promenljiva cond na liniji 5
INFO  19:41:11,770 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:41:11,770 - Zavrsetak obrade programa Program na liniji 1
INFO  19:41:11,770 - ======================TABELA_SIMBOLA==========================
INFO  19:41:11,771 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  19:41:11,771 - ==============================================================
INFO  19:41:11,771 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:41:11,771 - ==============================================================
INFO  19:41:11,771 - ======================GENERISANJE_KODA========================
INFO  19:41:11,777 - Generisanje koda uspesno zavrseno!
INFO  19:41:11,777 - Generisanje izlaznog fajla test\program.obj
INFO  19:41:11,777 - ==============================================================
INFO  19:41:39,080 - Obrada ulaznog fajla test\program.mj
INFO  19:41:39,160 - #2 program
INFO  19:41:39,160 - #8 Program
INFO  19:41:39,160 - #5 const
INFO  19:41:39,161 - #8 int
INFO  19:41:39,161 - #8 c
INFO  19:41:39,162 - #24 =
INFO  19:41:39,163 - #9 10
INFO  19:41:39,163 - #28 ,
INFO  19:41:39,167 - #8 d
INFO  19:41:39,167 - #24 =
INFO  19:41:39,167 - #9 99
INFO  19:41:39,167 - #28 ,
INFO  19:41:39,167 - #8 g
INFO  19:41:39,167 - #24 =
INFO  19:41:39,168 - #9 2
INFO  19:41:39,168 - #27 ;
INFO  19:41:39,168 - #8 int
INFO  19:41:39,169 - #8 e
INFO  19:41:39,169 - #27 ;
INFO  19:41:39,170 - #8 char
INFO  19:41:39,171 - #8 z
INFO  19:41:39,172 - #22 [
INFO  19:41:39,172 - #23 ]
INFO  19:41:39,172 - #27 ;
INFO  19:41:39,172 - #20 {
INFO  19:41:39,172 - #6 void
INFO  19:41:39,173 - #8 main
INFO  19:41:39,173 - #29 (
INFO  19:41:39,174 - #30 )
INFO  19:41:39,174 - #8 bool
INFO  19:41:39,174 - #8 cond
INFO  19:41:39,174 - #27 ;
INFO  19:41:39,174 - #20 {
INFO  19:41:39,174 - #8 e
INFO  19:41:39,174 - #24 =
INFO  19:41:39,175 - #16 -
INFO  19:41:39,175 - #9 1
INFO  19:41:39,175 - #27 ;
INFO  19:41:39,175 - #31 if
INFO  19:41:39,176 - #29 (
INFO  19:41:39,176 - #8 e
INFO  19:41:39,176 - #40 <
INFO  19:41:39,176 - #9 0
INFO  19:41:39,178 - #30 )
INFO  19:41:39,179 - #20 {
INFO  19:41:39,179 - #3 print
INFO  19:41:39,179 - #29 (
INFO  19:41:39,179 - #8 d
INFO  19:41:39,179 - #30 )
INFO  19:41:39,179 - #27 ;
INFO  19:41:39,179 - #21 }
INFO  19:41:39,179 - #32 else
INFO  19:41:39,181 - #20 {
INFO  19:41:39,181 - #3 print
INFO  19:41:39,182 - #29 (
INFO  19:41:39,182 - #8 g
INFO  19:41:39,182 - #30 )
INFO  19:41:39,182 - #27 ;
INFO  19:41:39,182 - #21 }
INFO  19:41:39,182 - #33 do
INFO  19:41:39,183 - #20 {
INFO  19:41:39,184 - #3 print
INFO  19:41:39,184 - #29 (
INFO  19:41:39,184 - #9 50
INFO  19:41:39,184 - #30 )
INFO  19:41:39,184 - #27 ;
INFO  19:41:39,184 - #8 e
INFO  19:41:39,184 - #25 ++
INFO  19:41:39,184 - #27 ;
INFO  19:41:39,184 - #21 }
INFO  19:41:39,185 - #34 while
INFO  19:41:39,185 - #29 (
INFO  19:41:39,185 - #8 e
INFO  19:41:39,185 - #38 >
INFO  19:41:39,185 - #9 0
INFO  19:41:39,186 - #30 )
INFO  19:41:39,186 - #27 ;
INFO  19:41:39,186 - #21 }
INFO  19:41:39,186 - #21 }
INFO  19:41:39,187 - =====================SINTAKSNO_STABLO=========================
INFO  19:41:39,189 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_neg_term_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_neg_term_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         50
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_gt(
                  ) [Rel_op_gt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:41:39,190 - ==============================================================
INFO  19:41:39,204 - Pocetak obrade programa Program na liniji 1
INFO  19:41:39,204 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:41:39,205 - Deklarisana konstanta c na liniji 2
INFO  19:41:39,205 - Deklarisana konstanta d na liniji 2
INFO  19:41:39,206 - Deklarisana konstanta g na liniji 2
INFO  19:41:39,206 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:41:39,206 - Deklarisana promenljiva e na liniji 3
INFO  19:41:39,206 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:41:39,206 - Deklarisan niz z na liniji 3
INFO  19:41:39,207 - Pocetak obrade metode main na liniji 5
INFO  19:41:39,207 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  19:41:39,207 - Deklarisana promenljiva cond na liniji 5
INFO  19:41:39,208 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:41:39,208 - Zavrsetak obrade programa Program na liniji 1
INFO  19:41:39,208 - ======================TABELA_SIMBOLA==========================
INFO  19:41:39,209 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  19:41:39,209 - ==============================================================
INFO  19:41:39,209 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:41:39,209 - ==============================================================
INFO  19:41:39,209 - ======================GENERISANJE_KODA========================
INFO  19:41:39,214 - Generisanje koda uspesno zavrseno!
INFO  19:41:39,215 - Generisanje izlaznog fajla test\program.obj
INFO  19:41:39,215 - ==============================================================
INFO  19:43:56,748 - Obrada ulaznog fajla test\program.mj
INFO  19:43:56,834 - #2 program
INFO  19:43:56,834 - #8 Program
INFO  19:43:56,834 - #5 const
INFO  19:43:56,835 - #8 int
INFO  19:43:56,836 - #8 c
INFO  19:43:56,836 - #24 =
INFO  19:43:56,837 - #9 10
INFO  19:43:56,837 - #28 ,
INFO  19:43:56,838 - #8 d
INFO  19:43:56,838 - #24 =
INFO  19:43:56,838 - #9 99
INFO  19:43:56,838 - #28 ,
INFO  19:43:56,838 - #8 g
INFO  19:43:56,839 - #24 =
INFO  19:43:56,839 - #9 2
INFO  19:43:56,839 - #27 ;
INFO  19:43:56,839 - #8 int
INFO  19:43:56,840 - #8 e
INFO  19:43:56,840 - #27 ;
INFO  19:43:56,840 - #8 char
INFO  19:43:56,841 - #8 z
INFO  19:43:56,842 - #22 [
INFO  19:43:56,842 - #23 ]
INFO  19:43:56,842 - #27 ;
INFO  19:43:56,842 - #20 {
INFO  19:43:56,842 - #6 void
INFO  19:43:56,842 - #8 main
INFO  19:43:56,842 - #29 (
INFO  19:43:56,843 - #30 )
INFO  19:43:56,843 - #8 bool
INFO  19:43:56,843 - #8 cond
INFO  19:43:56,843 - #27 ;
INFO  19:43:56,843 - #20 {
INFO  19:43:56,844 - #8 e
INFO  19:43:56,844 - #24 =
INFO  19:43:56,844 - #16 -
INFO  19:43:56,844 - #9 1
INFO  19:43:56,844 - #27 ;
INFO  19:43:56,845 - #31 if
INFO  19:43:56,845 - #29 (
INFO  19:43:56,845 - #8 e
INFO  19:43:56,845 - #40 <
INFO  19:43:56,845 - #9 0
INFO  19:43:56,847 - #30 )
INFO  19:43:56,847 - #20 {
INFO  19:43:56,847 - #3 print
INFO  19:43:56,848 - #29 (
INFO  19:43:56,848 - #8 d
INFO  19:43:56,848 - #30 )
INFO  19:43:56,848 - #27 ;
INFO  19:43:56,848 - #21 }
INFO  19:43:56,848 - #32 else
INFO  19:43:56,850 - #20 {
INFO  19:43:56,850 - #3 print
INFO  19:43:56,850 - #29 (
INFO  19:43:56,850 - #8 g
INFO  19:43:56,850 - #30 )
INFO  19:43:56,850 - #27 ;
INFO  19:43:56,851 - #21 }
INFO  19:43:56,851 - #33 do
INFO  19:43:56,851 - #20 {
INFO  19:43:56,852 - #3 print
INFO  19:43:56,852 - #29 (
INFO  19:43:56,852 - #9 50
INFO  19:43:56,853 - #30 )
INFO  19:43:56,853 - #27 ;
INFO  19:43:56,853 - #8 e
INFO  19:43:56,853 - #25 ++
INFO  19:43:56,853 - #27 ;
INFO  19:43:56,853 - #21 }
INFO  19:43:56,853 - #34 while
INFO  19:43:56,853 - #29 (
INFO  19:43:56,853 - #8 e
INFO  19:43:56,853 - #38 >
INFO  19:43:56,854 - #9 0
INFO  19:43:56,854 - #30 )
INFO  19:43:56,855 - #27 ;
INFO  19:43:56,855 - #21 }
INFO  19:43:56,855 - #21 }
INFO  19:43:56,856 - =====================SINTAKSNO_STABLO=========================
INFO  19:43:56,858 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_neg_term_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_neg_term_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         50
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_gt(
                  ) [Rel_op_gt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:43:56,859 - ==============================================================
INFO  19:43:56,871 - Pocetak obrade programa Program na liniji 1
INFO  19:43:56,872 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:43:56,872 - Deklarisana konstanta c na liniji 2
INFO  19:43:56,873 - Deklarisana konstanta d na liniji 2
INFO  19:43:56,873 - Deklarisana konstanta g na liniji 2
INFO  19:43:56,873 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:43:56,873 - Deklarisana promenljiva e na liniji 3
INFO  19:43:56,873 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:43:56,873 - Deklarisan niz z na liniji 3
INFO  19:43:56,874 - Pocetak obrade metode main na liniji 5
INFO  19:43:56,874 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  19:43:56,874 - Deklarisana promenljiva cond na liniji 5
INFO  19:43:56,875 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:43:56,875 - Zavrsetak obrade programa Program na liniji 1
INFO  19:43:56,875 - ======================TABELA_SIMBOLA==========================
INFO  19:43:56,875 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  19:43:56,875 - ==============================================================
INFO  19:43:56,875 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:43:56,875 - ==============================================================
INFO  19:43:56,876 - ======================GENERISANJE_KODA========================
INFO  19:43:56,880 - Generisanje koda uspesno zavrseno!
INFO  19:43:56,881 - Generisanje izlaznog fajla test\program.obj
INFO  19:43:56,881 - ==============================================================
INFO  19:52:49,175 - Obrada ulaznog fajla test\program.mj
INFO  19:52:49,259 - #2 program
INFO  19:52:49,260 - #8 Program
INFO  19:52:49,260 - #5 const
INFO  19:52:49,261 - #8 int
INFO  19:52:49,261 - #8 c
INFO  19:52:49,262 - #24 =
INFO  19:52:49,262 - #9 10
INFO  19:52:49,262 - #28 ,
INFO  19:52:49,263 - #8 d
INFO  19:52:49,264 - #24 =
INFO  19:52:49,264 - #9 99
INFO  19:52:49,264 - #28 ,
INFO  19:52:49,264 - #8 g
INFO  19:52:49,264 - #24 =
INFO  19:52:49,264 - #9 2
INFO  19:52:49,265 - #27 ;
INFO  19:52:49,265 - #8 int
INFO  19:52:49,266 - #8 e
INFO  19:52:49,266 - #27 ;
INFO  19:52:49,267 - #8 char
INFO  19:52:49,269 - #8 z
INFO  19:52:49,270 - #22 [
INFO  19:52:49,270 - #23 ]
INFO  19:52:49,270 - #27 ;
INFO  19:52:49,270 - #20 {
INFO  19:52:49,270 - #6 void
INFO  19:52:49,270 - #8 main
INFO  19:52:49,270 - #29 (
INFO  19:52:49,271 - #30 )
INFO  19:52:49,272 - #8 bool
INFO  19:52:49,272 - #8 cond
INFO  19:52:49,272 - #27 ;
INFO  19:52:49,272 - #20 {
INFO  19:52:49,272 - #8 e
INFO  19:52:49,272 - #24 =
INFO  19:52:49,272 - #16 -
INFO  19:52:49,273 - #9 1
INFO  19:52:49,273 - #27 ;
INFO  19:52:49,273 - #31 if
INFO  19:52:49,273 - #29 (
INFO  19:52:49,273 - #8 e
INFO  19:52:49,274 - #40 <
INFO  19:52:49,274 - #9 0
INFO  19:52:49,275 - #30 )
INFO  19:52:49,276 - #20 {
INFO  19:52:49,276 - #3 print
INFO  19:52:49,276 - #29 (
INFO  19:52:49,276 - #8 d
INFO  19:52:49,276 - #30 )
INFO  19:52:49,276 - #27 ;
INFO  19:52:49,276 - #21 }
INFO  19:52:49,277 - #32 else
INFO  19:52:49,278 - #20 {
INFO  19:52:49,278 - #3 print
INFO  19:52:49,278 - #29 (
INFO  19:52:49,278 - #8 g
INFO  19:52:49,278 - #30 )
INFO  19:52:49,278 - #27 ;
INFO  19:52:49,278 - #21 }
INFO  19:52:49,278 - #33 do
INFO  19:52:49,279 - #20 {
INFO  19:52:49,280 - #3 print
INFO  19:52:49,280 - #29 (
INFO  19:52:49,280 - #9 50
INFO  19:52:49,280 - #30 )
INFO  19:52:49,281 - #27 ;
INFO  19:52:49,281 - #8 e
INFO  19:52:49,281 - #25 ++
INFO  19:52:49,281 - #27 ;
INFO  19:52:49,281 - #21 }
INFO  19:52:49,281 - #34 while
INFO  19:52:49,281 - #29 (
INFO  19:52:49,282 - #8 e
INFO  19:52:49,282 - #38 >
INFO  19:52:49,282 - #9 0
INFO  19:52:49,283 - #30 )
INFO  19:52:49,285 - #27 ;
INFO  19:52:49,285 - #21 }
INFO  19:52:49,285 - #21 }
INFO  19:52:49,286 - =====================SINTAKSNO_STABLO=========================
INFO  19:52:49,288 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_neg_term_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_neg_term_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         50
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_gt(
                  ) [Rel_op_gt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:52:49,288 - ==============================================================
INFO  19:52:49,302 - Pocetak obrade programa Program na liniji 1
INFO  19:52:49,302 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:52:49,303 - Deklarisana konstanta c na liniji 2
INFO  19:52:49,303 - Deklarisana konstanta d na liniji 2
INFO  19:52:49,303 - Deklarisana konstanta g na liniji 2
INFO  19:52:49,303 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:52:49,303 - Deklarisana promenljiva e na liniji 3
INFO  19:52:49,304 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:52:49,304 - Deklarisan niz z na liniji 3
INFO  19:52:49,305 - Pocetak obrade metode main na liniji 5
INFO  19:52:49,305 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  19:52:49,305 - Deklarisana promenljiva cond na liniji 5
INFO  19:52:49,305 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:52:49,305 - Zavrsetak obrade programa Program na liniji 1
INFO  19:52:49,305 - ======================TABELA_SIMBOLA==========================
INFO  19:52:49,306 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  19:52:49,306 - ==============================================================
INFO  19:52:49,306 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:52:49,306 - ==============================================================
INFO  19:52:49,306 - ======================GENERISANJE_KODA========================
INFO  19:52:49,311 - Generisanje koda uspesno zavrseno!
INFO  19:52:49,312 - Generisanje izlaznog fajla test\program.obj
INFO  19:52:49,312 - ==============================================================
INFO  19:52:54,020 - Obrada ulaznog fajla test\program.mj
INFO  19:52:54,106 - #2 program
INFO  19:52:54,106 - #8 Program
INFO  19:52:54,106 - #5 const
INFO  19:52:54,107 - #8 int
INFO  19:52:54,107 - #8 c
INFO  19:52:54,108 - #24 =
INFO  19:52:54,108 - #9 10
INFO  19:52:54,108 - #28 ,
INFO  19:52:54,109 - #8 d
INFO  19:52:54,110 - #24 =
INFO  19:52:54,110 - #9 99
INFO  19:52:54,110 - #28 ,
INFO  19:52:54,110 - #8 g
INFO  19:52:54,111 - #24 =
INFO  19:52:54,111 - #9 2
INFO  19:52:54,111 - #27 ;
INFO  19:52:54,111 - #8 int
INFO  19:52:54,113 - #8 e
INFO  19:52:54,113 - #27 ;
INFO  19:52:54,113 - #8 char
INFO  19:52:54,115 - #8 z
INFO  19:52:54,116 - #22 [
INFO  19:52:54,116 - #23 ]
INFO  19:52:54,116 - #27 ;
INFO  19:52:54,116 - #20 {
INFO  19:52:54,116 - #6 void
INFO  19:52:54,116 - #8 main
INFO  19:52:54,116 - #29 (
INFO  19:52:54,117 - #30 )
INFO  19:52:54,117 - #8 bool
INFO  19:52:54,117 - #8 cond
INFO  19:52:54,118 - #27 ;
INFO  19:52:54,118 - #20 {
INFO  19:52:54,118 - #8 e
INFO  19:52:54,118 - #24 =
INFO  19:52:54,118 - #16 -
INFO  19:52:54,118 - #9 1
INFO  19:52:54,118 - #27 ;
INFO  19:52:54,119 - #31 if
INFO  19:52:54,119 - #29 (
INFO  19:52:54,120 - #8 e
INFO  19:52:54,120 - #40 <
INFO  19:52:54,120 - #9 0
INFO  19:52:54,122 - #30 )
INFO  19:52:54,122 - #20 {
INFO  19:52:54,122 - #3 print
INFO  19:52:54,122 - #29 (
INFO  19:52:54,123 - #8 d
INFO  19:52:54,123 - #30 )
INFO  19:52:54,123 - #27 ;
INFO  19:52:54,123 - #21 }
INFO  19:52:54,123 - #32 else
INFO  19:52:54,124 - #20 {
INFO  19:52:54,124 - #3 print
INFO  19:52:54,124 - #29 (
INFO  19:52:54,125 - #8 g
INFO  19:52:54,125 - #30 )
INFO  19:52:54,125 - #27 ;
INFO  19:52:54,125 - #21 }
INFO  19:52:54,125 - #33 do
INFO  19:52:54,125 - #20 {
INFO  19:52:54,126 - #3 print
INFO  19:52:54,126 - #29 (
INFO  19:52:54,127 - #9 50
INFO  19:52:54,127 - #30 )
INFO  19:52:54,127 - #27 ;
INFO  19:52:54,127 - #8 e
INFO  19:52:54,127 - #25 ++
INFO  19:52:54,127 - #27 ;
INFO  19:52:54,127 - #21 }
INFO  19:52:54,127 - #34 while
INFO  19:52:54,127 - #29 (
INFO  19:52:54,128 - #8 e
INFO  19:52:54,128 - #38 >
INFO  19:52:54,128 - #9 0
INFO  19:52:54,129 - #30 )
INFO  19:52:54,129 - #27 ;
INFO  19:52:54,129 - #21 }
INFO  19:52:54,129 - #21 }
INFO  19:52:54,130 - =====================SINTAKSNO_STABLO=========================
INFO  19:52:54,133 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_neg_term_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_neg_term_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         50
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_gt(
                  ) [Rel_op_gt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:52:54,137 - ==============================================================
INFO  19:52:54,148 - Pocetak obrade programa Program na liniji 1
INFO  19:52:54,148 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:52:54,149 - Deklarisana konstanta c na liniji 2
INFO  19:52:54,150 - Deklarisana konstanta d na liniji 2
INFO  19:52:54,151 - Deklarisana konstanta g na liniji 2
INFO  19:52:54,151 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:52:54,151 - Deklarisana promenljiva e na liniji 3
INFO  19:52:54,151 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:52:54,151 - Deklarisan niz z na liniji 3
INFO  19:52:54,152 - Pocetak obrade metode main na liniji 5
INFO  19:52:54,152 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  19:52:54,152 - Deklarisana promenljiva cond na liniji 5
INFO  19:52:54,153 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:52:54,153 - Zavrsetak obrade programa Program na liniji 1
INFO  19:52:54,153 - ======================TABELA_SIMBOLA==========================
INFO  19:52:54,153 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  19:52:54,154 - ==============================================================
INFO  19:52:54,154 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:52:54,154 - ==============================================================
INFO  19:52:54,154 - ======================GENERISANJE_KODA========================
INFO  19:52:54,159 - Generisanje koda uspesno zavrseno!
INFO  19:52:54,160 - Generisanje izlaznog fajla test\program.obj
INFO  19:52:54,160 - ==============================================================
INFO  19:53:37,713 - Obrada ulaznog fajla test\program.mj
INFO  19:53:37,868 - #2 program
INFO  19:53:37,868 - #8 Program
INFO  19:53:37,868 - #5 const
INFO  19:53:37,869 - #8 int
INFO  19:53:37,869 - #8 c
INFO  19:53:37,871 - #24 =
INFO  19:53:37,871 - #9 10
INFO  19:53:37,871 - #28 ,
INFO  19:53:37,872 - #8 d
INFO  19:53:37,873 - #24 =
INFO  19:53:37,873 - #9 99
INFO  19:53:37,873 - #28 ,
INFO  19:53:37,873 - #8 g
INFO  19:53:37,874 - #24 =
INFO  19:53:37,874 - #9 2
INFO  19:53:37,874 - #27 ;
INFO  19:53:37,874 - #8 int
INFO  19:53:37,876 - #8 e
INFO  19:53:37,876 - #27 ;
INFO  19:53:37,876 - #8 char
INFO  19:53:37,878 - #8 z
INFO  19:53:37,878 - #22 [
INFO  19:53:37,878 - #23 ]
INFO  19:53:37,878 - #27 ;
INFO  19:53:37,878 - #20 {
INFO  19:53:37,879 - #6 void
INFO  19:53:37,879 - #8 main
INFO  19:53:37,879 - #29 (
INFO  19:53:37,880 - #30 )
INFO  19:53:37,880 - #8 bool
INFO  19:53:37,880 - #8 cond
INFO  19:53:37,880 - #27 ;
INFO  19:53:37,881 - #20 {
INFO  19:53:37,881 - #8 e
INFO  19:53:37,881 - #24 =
INFO  19:53:37,881 - #9 3
INFO  19:53:37,882 - #27 ;
INFO  19:53:37,882 - #31 if
INFO  19:53:37,883 - #29 (
INFO  19:53:37,883 - #8 e
INFO  19:53:37,883 - #41 >=
INFO  19:53:37,883 - #9 0
INFO  19:53:37,885 - #30 )
INFO  19:53:37,885 - #20 {
INFO  19:53:37,886 - #3 print
INFO  19:53:37,886 - #29 (
INFO  19:53:37,886 - #8 d
INFO  19:53:37,886 - #30 )
INFO  19:53:37,886 - #27 ;
INFO  19:53:37,886 - #21 }
INFO  19:53:37,887 - #32 else
INFO  19:53:37,888 - #20 {
INFO  19:53:37,888 - #3 print
INFO  19:53:37,888 - #29 (
INFO  19:53:37,889 - #8 g
INFO  19:53:37,889 - #30 )
INFO  19:53:37,889 - #27 ;
INFO  19:53:37,889 - #21 }
INFO  19:53:37,889 - #33 do
INFO  19:53:37,890 - #20 {
INFO  19:53:37,891 - #3 print
INFO  19:53:37,891 - #29 (
INFO  19:53:37,891 - #9 50
INFO  19:53:37,891 - #30 )
INFO  19:53:37,891 - #27 ;
INFO  19:53:37,891 - #8 e
INFO  19:53:37,892 - #26 --
INFO  19:53:37,892 - #27 ;
INFO  19:53:37,892 - #21 }
INFO  19:53:37,892 - #34 while
INFO  19:53:37,892 - #29 (
INFO  19:53:37,892 - #8 e
INFO  19:53:37,893 - #38 >
INFO  19:53:37,893 - #9 0
INFO  19:53:37,894 - #30 )
INFO  19:53:37,894 - #27 ;
INFO  19:53:37,894 - #21 }
INFO  19:53:37,895 - #21 }
INFO  19:53:37,896 - =====================SINTAKSNO_STABLO=========================
INFO  19:53:37,898 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       3
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         50
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Decrement(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Decrement]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_gt(
                  ) [Rel_op_gt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:53:37,906 - ==============================================================
INFO  19:53:37,922 - Pocetak obrade programa Program na liniji 1
INFO  19:53:37,922 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:53:37,923 - Deklarisana konstanta c na liniji 2
INFO  19:53:37,924 - Deklarisana konstanta d na liniji 2
INFO  19:53:37,924 - Deklarisana konstanta g na liniji 2
INFO  19:53:37,924 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:53:37,924 - Deklarisana promenljiva e na liniji 3
INFO  19:53:37,924 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:53:37,925 - Deklarisan niz z na liniji 3
INFO  19:53:37,926 - Pocetak obrade metode main na liniji 5
INFO  19:53:37,926 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  19:53:37,926 - Deklarisana promenljiva cond na liniji 5
INFO  19:53:37,927 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:53:37,927 - Zavrsetak obrade programa Program na liniji 1
INFO  19:53:37,927 - ======================TABELA_SIMBOLA==========================
INFO  19:53:37,928 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  19:53:37,928 - ==============================================================
INFO  19:53:37,928 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:53:37,928 - ==============================================================
INFO  19:53:37,928 - ======================GENERISANJE_KODA========================
INFO  19:53:37,934 - Generisanje koda uspesno zavrseno!
INFO  19:53:37,935 - Generisanje izlaznog fajla test\program.obj
INFO  19:53:37,935 - ==============================================================
INFO  19:53:56,577 - Obrada ulaznog fajla test\program.mj
INFO  19:53:56,658 - #2 program
INFO  19:53:56,658 - #8 Program
INFO  19:53:56,658 - #5 const
INFO  19:53:56,660 - #8 int
INFO  19:53:56,660 - #8 c
INFO  19:53:56,661 - #24 =
INFO  19:53:56,661 - #9 10
INFO  19:53:56,661 - #28 ,
INFO  19:53:56,662 - #8 d
INFO  19:53:56,662 - #24 =
INFO  19:53:56,662 - #9 99
INFO  19:53:56,662 - #28 ,
INFO  19:53:56,663 - #8 g
INFO  19:53:56,663 - #24 =
INFO  19:53:56,663 - #9 2
INFO  19:53:56,663 - #27 ;
INFO  19:53:56,663 - #8 int
INFO  19:53:56,665 - #8 e
INFO  19:53:56,665 - #27 ;
INFO  19:53:56,665 - #8 char
INFO  19:53:56,666 - #8 z
INFO  19:53:56,666 - #22 [
INFO  19:53:56,667 - #23 ]
INFO  19:53:56,667 - #27 ;
INFO  19:53:56,667 - #20 {
INFO  19:53:56,667 - #6 void
INFO  19:53:56,667 - #8 main
INFO  19:53:56,667 - #29 (
INFO  19:53:56,668 - #30 )
INFO  19:53:56,668 - #8 bool
INFO  19:53:56,668 - #8 cond
INFO  19:53:56,668 - #27 ;
INFO  19:53:56,668 - #20 {
INFO  19:53:56,669 - #8 e
INFO  19:53:56,669 - #24 =
INFO  19:53:56,669 - #9 3
INFO  19:53:56,669 - #27 ;
INFO  19:53:56,670 - #31 if
INFO  19:53:56,670 - #29 (
INFO  19:53:56,670 - #8 e
INFO  19:53:56,670 - #41 >=
INFO  19:53:56,670 - #9 0
INFO  19:53:56,672 - #30 )
INFO  19:53:56,672 - #20 {
INFO  19:53:56,672 - #3 print
INFO  19:53:56,672 - #29 (
INFO  19:53:56,673 - #8 d
INFO  19:53:56,673 - #30 )
INFO  19:53:56,673 - #27 ;
INFO  19:53:56,673 - #21 }
INFO  19:53:56,673 - #32 else
INFO  19:53:56,675 - #20 {
INFO  19:53:56,675 - #3 print
INFO  19:53:56,675 - #29 (
INFO  19:53:56,675 - #8 g
INFO  19:53:56,675 - #30 )
INFO  19:53:56,675 - #27 ;
INFO  19:53:56,675 - #21 }
INFO  19:53:56,675 - #33 do
INFO  19:53:56,676 - #20 {
INFO  19:53:56,677 - #3 print
INFO  19:53:56,677 - #29 (
INFO  19:53:56,677 - #8 e
INFO  19:53:56,677 - #30 )
INFO  19:53:56,678 - #27 ;
INFO  19:53:56,678 - #8 e
INFO  19:53:56,678 - #26 --
INFO  19:53:56,678 - #27 ;
INFO  19:53:56,678 - #21 }
INFO  19:53:56,678 - #34 while
INFO  19:53:56,678 - #29 (
INFO  19:53:56,678 - #8 e
INFO  19:53:56,678 - #38 >
INFO  19:53:56,678 - #9 0
INFO  19:53:56,679 - #30 )
INFO  19:53:56,680 - #27 ;
INFO  19:53:56,682 - #21 }
INFO  19:53:56,682 - #21 }
INFO  19:53:56,683 - =====================SINTAKSNO_STABLO=========================
INFO  19:53:56,685 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       3
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Decrement(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Decrement]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_gt(
                  ) [Rel_op_gt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:53:56,687 - ==============================================================
INFO  19:53:56,702 - Pocetak obrade programa Program na liniji 1
INFO  19:53:56,702 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:53:56,703 - Deklarisana konstanta c na liniji 2
INFO  19:53:56,703 - Deklarisana konstanta d na liniji 2
INFO  19:53:56,703 - Deklarisana konstanta g na liniji 2
INFO  19:53:56,704 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:53:56,704 - Deklarisana promenljiva e na liniji 3
INFO  19:53:56,704 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:53:56,704 - Deklarisan niz z na liniji 3
INFO  19:53:56,706 - Pocetak obrade metode main na liniji 5
INFO  19:53:56,706 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  19:53:56,706 - Deklarisana promenljiva cond na liniji 5
INFO  19:53:56,706 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:53:56,706 - Zavrsetak obrade programa Program na liniji 1
INFO  19:53:56,706 - ======================TABELA_SIMBOLA==========================
INFO  19:53:56,707 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  19:53:56,707 - ==============================================================
INFO  19:53:56,707 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:53:56,707 - ==============================================================
INFO  19:53:56,707 - ======================GENERISANJE_KODA========================
INFO  19:53:56,712 - Generisanje koda uspesno zavrseno!
INFO  19:53:56,713 - Generisanje izlaznog fajla test\program.obj
INFO  19:53:56,713 - ==============================================================
INFO  20:14:20,335 - Obrada ulaznog fajla test\program.mj
INFO  20:14:20,427 - #2 program
INFO  20:14:20,427 - #8 Program
INFO  20:14:20,427 - #5 const
INFO  20:14:20,428 - #8 int
INFO  20:14:20,428 - #8 c
INFO  20:14:20,429 - #24 =
INFO  20:14:20,429 - #9 10
INFO  20:14:20,429 - #28 ,
INFO  20:14:20,430 - #8 d
INFO  20:14:20,431 - #24 =
INFO  20:14:20,431 - #9 99
INFO  20:14:20,431 - #28 ,
INFO  20:14:20,431 - #8 g
INFO  20:14:20,431 - #24 =
INFO  20:14:20,431 - #9 2
INFO  20:14:20,431 - #27 ;
INFO  20:14:20,431 - #8 int
INFO  20:14:20,433 - #8 e
INFO  20:14:20,433 - #27 ;
INFO  20:14:20,433 - #8 char
INFO  20:14:20,434 - #8 z
INFO  20:14:20,434 - #22 [
INFO  20:14:20,434 - #23 ]
INFO  20:14:20,435 - #27 ;
INFO  20:14:20,435 - #20 {
INFO  20:14:20,435 - #6 void
INFO  20:14:20,435 - #8 main
INFO  20:14:20,435 - #29 (
INFO  20:14:20,436 - #30 )
INFO  20:14:20,436 - #8 bool
INFO  20:14:20,436 - #8 cond
INFO  20:14:20,436 - #27 ;
INFO  20:14:20,437 - #20 {
INFO  20:14:20,437 - #8 e
INFO  20:14:20,437 - #24 =
INFO  20:14:20,437 - #9 3
INFO  20:14:20,437 - #27 ;
INFO  20:14:20,438 - #31 if
INFO  20:14:20,438 - #29 (
INFO  20:14:20,438 - #8 e
INFO  20:14:20,438 - #38 >
INFO  20:14:20,438 - #9 0
INFO  20:14:20,440 - #14 ||
INFO  20:14:20,440 - #8 e
INFO  20:14:20,440 - #42 <=
INFO  20:14:20,440 - #8 d
INFO  20:14:20,441 - #30 )
INFO  20:14:20,441 - #20 {
INFO  20:14:20,441 - #3 print
INFO  20:14:20,441 - #29 (
INFO  20:14:20,442 - #8 e
INFO  20:14:20,442 - #30 )
INFO  20:14:20,442 - #27 ;
INFO  20:14:20,442 - #21 }
INFO  20:14:20,442 - #32 else
INFO  20:14:20,444 - #20 {
INFO  20:14:20,444 - #3 print
INFO  20:14:20,444 - #29 (
INFO  20:14:20,444 - #8 d
INFO  20:14:20,444 - #30 )
INFO  20:14:20,444 - #27 ;
INFO  20:14:20,444 - #21 }
INFO  20:14:20,444 - #21 }
INFO  20:14:20,445 - #21 }
INFO  20:14:20,446 - =====================SINTAKSNO_STABLO=========================
INFO  20:14:20,448 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:14:20,448 - ==============================================================
INFO  20:14:20,461 - Pocetak obrade programa Program na liniji 1
INFO  20:14:20,461 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:14:20,462 - Deklarisana konstanta c na liniji 2
INFO  20:14:20,462 - Deklarisana konstanta d na liniji 2
INFO  20:14:20,462 - Deklarisana konstanta g na liniji 2
INFO  20:14:20,463 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:14:20,463 - Deklarisana promenljiva e na liniji 3
INFO  20:14:20,463 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:14:20,464 - Deklarisan niz z na liniji 3
INFO  20:14:20,465 - Pocetak obrade metode main na liniji 5
INFO  20:14:20,465 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  20:14:20,465 - Deklarisana promenljiva cond na liniji 5
INFO  20:14:20,466 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:14:20,466 - Zavrsetak obrade programa Program na liniji 1
INFO  20:14:20,466 - ======================TABELA_SIMBOLA==========================
INFO  20:14:20,466 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  20:14:20,466 - ==============================================================
INFO  20:14:20,467 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:14:20,467 - ==============================================================
INFO  20:14:20,467 - ======================GENERISANJE_KODA========================
ERROR 20:14:20,471 - Greska u generisanju koda - greska kod uslova (condition) na liniji 8!
INFO  20:14:20,472 - Generisanje koda uspesno zavrseno!
INFO  20:14:20,472 - Generisanje izlaznog fajla test\program.obj
INFO  20:14:20,473 - ==============================================================
INFO  20:16:16,565 - Obrada ulaznog fajla test\program.mj
INFO  20:16:16,641 - #2 program
INFO  20:16:16,642 - #8 Program
INFO  20:16:16,642 - #5 const
INFO  20:16:16,643 - #8 int
INFO  20:16:16,643 - #8 c
INFO  20:16:16,643 - #24 =
INFO  20:16:16,643 - #9 10
INFO  20:16:16,643 - #28 ,
INFO  20:16:16,644 - #8 d
INFO  20:16:16,645 - #24 =
INFO  20:16:16,645 - #9 99
INFO  20:16:16,645 - #28 ,
INFO  20:16:16,645 - #8 g
INFO  20:16:16,645 - #24 =
INFO  20:16:16,645 - #9 2
INFO  20:16:16,646 - #27 ;
INFO  20:16:16,646 - #8 int
INFO  20:16:16,647 - #8 e
INFO  20:16:16,647 - #27 ;
INFO  20:16:16,648 - #8 char
INFO  20:16:16,649 - #8 z
INFO  20:16:16,649 - #22 [
INFO  20:16:16,650 - #23 ]
INFO  20:16:16,650 - #27 ;
INFO  20:16:16,650 - #20 {
INFO  20:16:16,650 - #6 void
INFO  20:16:16,650 - #8 main
INFO  20:16:16,650 - #29 (
INFO  20:16:16,651 - #30 )
INFO  20:16:16,651 - #8 bool
INFO  20:16:16,651 - #8 cond
INFO  20:16:16,651 - #27 ;
INFO  20:16:16,652 - #20 {
INFO  20:16:16,652 - #8 e
INFO  20:16:16,652 - #24 =
INFO  20:16:16,652 - #9 3
INFO  20:16:16,652 - #27 ;
INFO  20:16:16,653 - #31 if
INFO  20:16:16,653 - #29 (
INFO  20:16:16,653 - #8 e
INFO  20:16:16,653 - #38 >
INFO  20:16:16,653 - #9 0
INFO  20:16:16,655 - #14 ||
INFO  20:16:16,655 - #8 e
INFO  20:16:16,655 - #42 <=
INFO  20:16:16,655 - #8 d
INFO  20:16:16,656 - #30 )
INFO  20:16:16,656 - #20 {
INFO  20:16:16,657 - #3 print
INFO  20:16:16,657 - #29 (
INFO  20:16:16,657 - #8 e
INFO  20:16:16,657 - #30 )
INFO  20:16:16,657 - #27 ;
INFO  20:16:16,657 - #21 }
INFO  20:16:16,657 - #32 else
INFO  20:16:16,658 - #20 {
INFO  20:16:16,658 - #3 print
INFO  20:16:16,658 - #29 (
INFO  20:16:16,659 - #8 d
INFO  20:16:16,659 - #30 )
INFO  20:16:16,660 - #27 ;
INFO  20:16:16,660 - #21 }
INFO  20:16:16,661 - #21 }
INFO  20:16:16,661 - #21 }
INFO  20:16:16,662 - =====================SINTAKSNO_STABLO=========================
INFO  20:16:16,664 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:16:16,664 - ==============================================================
INFO  20:16:16,679 - Pocetak obrade programa Program na liniji 1
INFO  20:16:16,679 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:16:16,680 - Deklarisana konstanta c na liniji 2
INFO  20:16:16,680 - Deklarisana konstanta d na liniji 2
INFO  20:16:16,680 - Deklarisana konstanta g na liniji 2
INFO  20:16:16,680 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:16:16,681 - Deklarisana promenljiva e na liniji 3
INFO  20:16:16,681 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:16:16,682 - Deklarisan niz z na liniji 3
INFO  20:16:16,683 - Pocetak obrade metode main na liniji 5
INFO  20:16:16,683 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  20:16:16,683 - Deklarisana promenljiva cond na liniji 5
INFO  20:16:16,684 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:16:16,684 - Zavrsetak obrade programa Program na liniji 1
INFO  20:16:16,684 - ======================TABELA_SIMBOLA==========================
INFO  20:16:16,684 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  20:16:16,684 - ==============================================================
INFO  20:16:16,684 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:16:16,685 - ==============================================================
INFO  20:16:16,685 - ======================GENERISANJE_KODA========================
ERROR 20:16:16,688 - Greska u generisanju koda - greska kod uslova (condition) na liniji 8!
INFO  20:16:16,690 - Generisanje koda uspesno zavrseno!
INFO  20:16:16,690 - Generisanje izlaznog fajla test\program.obj
INFO  20:16:16,690 - ==============================================================
INFO  20:21:00,413 - Obrada ulaznog fajla test\program.mj
INFO  20:21:00,515 - #2 program
INFO  20:21:00,515 - #8 Program
INFO  20:21:00,516 - #5 const
INFO  20:21:00,517 - #8 int
INFO  20:21:00,517 - #8 c
INFO  20:21:00,518 - #24 =
INFO  20:21:00,518 - #9 10
INFO  20:21:00,518 - #28 ,
INFO  20:21:00,520 - #8 d
INFO  20:21:00,520 - #24 =
INFO  20:21:00,520 - #9 99
INFO  20:21:00,520 - #28 ,
INFO  20:21:00,520 - #8 g
INFO  20:21:00,520 - #24 =
INFO  20:21:00,521 - #9 2
INFO  20:21:00,521 - #27 ;
INFO  20:21:00,521 - #8 int
INFO  20:21:00,522 - #8 e
INFO  20:21:00,522 - #27 ;
INFO  20:21:00,523 - #8 char
INFO  20:21:00,524 - #8 z
INFO  20:21:00,524 - #22 [
INFO  20:21:00,524 - #23 ]
INFO  20:21:00,525 - #27 ;
INFO  20:21:00,525 - #20 {
INFO  20:21:00,525 - #6 void
INFO  20:21:00,525 - #8 main
INFO  20:21:00,525 - #29 (
INFO  20:21:00,526 - #30 )
INFO  20:21:00,526 - #8 bool
INFO  20:21:00,526 - #8 cond
INFO  20:21:00,526 - #27 ;
INFO  20:21:00,526 - #20 {
INFO  20:21:00,527 - #8 e
INFO  20:21:00,527 - #24 =
INFO  20:21:00,527 - #9 3
INFO  20:21:00,527 - #27 ;
INFO  20:21:00,528 - #31 if
INFO  20:21:00,528 - #29 (
INFO  20:21:00,528 - #8 e
INFO  20:21:00,528 - #38 >
INFO  20:21:00,529 - #9 0
INFO  20:21:00,530 - #14 ||
INFO  20:21:00,531 - #8 e
INFO  20:21:00,531 - #42 <=
INFO  20:21:00,531 - #8 d
INFO  20:21:00,532 - #30 )
INFO  20:21:00,532 - #20 {
INFO  20:21:00,532 - #3 print
INFO  20:21:00,533 - #29 (
INFO  20:21:00,533 - #8 e
INFO  20:21:00,533 - #30 )
INFO  20:21:00,533 - #27 ;
INFO  20:21:00,533 - #21 }
INFO  20:21:00,533 - #32 else
INFO  20:21:00,535 - #20 {
INFO  20:21:00,535 - #3 print
INFO  20:21:00,535 - #29 (
INFO  20:21:00,535 - #8 d
INFO  20:21:00,535 - #30 )
INFO  20:21:00,537 - #27 ;
INFO  20:21:00,537 - #21 }
INFO  20:21:00,537 - #21 }
INFO  20:21:00,538 - #21 }
INFO  20:21:00,539 - =====================SINTAKSNO_STABLO=========================
INFO  20:21:00,541 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:21:00,541 - ==============================================================
INFO  20:21:00,555 - Pocetak obrade programa Program na liniji 1
INFO  20:21:00,555 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:21:00,557 - Deklarisana konstanta c na liniji 2
INFO  20:21:00,557 - Deklarisana konstanta d na liniji 2
INFO  20:21:00,557 - Deklarisana konstanta g na liniji 2
INFO  20:21:00,557 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:21:00,557 - Deklarisana promenljiva e na liniji 3
INFO  20:21:00,557 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:21:00,559 - Deklarisan niz z na liniji 3
INFO  20:21:00,560 - Pocetak obrade metode main na liniji 5
INFO  20:21:00,560 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  20:21:00,560 - Deklarisana promenljiva cond na liniji 5
INFO  20:21:00,561 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:21:00,561 - Zavrsetak obrade programa Program na liniji 1
INFO  20:21:00,561 - ======================TABELA_SIMBOLA==========================
INFO  20:21:00,561 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  20:21:00,562 - ==============================================================
INFO  20:21:00,562 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:21:00,562 - ==============================================================
INFO  20:21:00,562 - ======================GENERISANJE_KODA========================
ERROR 20:21:00,566 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 8!
ERROR 20:21:00,566 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 8!
INFO  20:21:00,568 - Generisanje koda uspesno zavrseno!
INFO  20:21:00,568 - Generisanje izlaznog fajla test\program.obj
INFO  20:21:00,568 - ==============================================================
INFO  20:22:16,934 - Obrada ulaznog fajla test\program.mj
INFO  20:22:17,012 - #2 program
INFO  20:22:17,012 - #8 Program
INFO  20:22:17,012 - #5 const
INFO  20:22:17,013 - #8 int
INFO  20:22:17,013 - #8 c
INFO  20:22:17,014 - #24 =
INFO  20:22:17,014 - #9 10
INFO  20:22:17,014 - #28 ,
INFO  20:22:17,015 - #8 d
INFO  20:22:17,015 - #24 =
INFO  20:22:17,015 - #9 99
INFO  20:22:17,016 - #28 ,
INFO  20:22:17,016 - #8 g
INFO  20:22:17,016 - #24 =
INFO  20:22:17,016 - #9 2
INFO  20:22:17,016 - #27 ;
INFO  20:22:17,016 - #8 int
INFO  20:22:17,017 - #8 e
INFO  20:22:17,017 - #27 ;
INFO  20:22:17,018 - #8 char
INFO  20:22:17,019 - #8 z
INFO  20:22:17,019 - #22 [
INFO  20:22:17,019 - #23 ]
INFO  20:22:17,019 - #27 ;
INFO  20:22:17,019 - #20 {
INFO  20:22:17,019 - #6 void
INFO  20:22:17,019 - #8 main
INFO  20:22:17,019 - #29 (
INFO  20:22:17,020 - #30 )
INFO  20:22:17,020 - #8 bool
INFO  20:22:17,020 - #8 cond
INFO  20:22:17,021 - #27 ;
INFO  20:22:17,021 - #20 {
INFO  20:22:17,021 - #8 e
INFO  20:22:17,021 - #24 =
INFO  20:22:17,021 - #9 3
INFO  20:22:17,021 - #27 ;
INFO  20:22:17,022 - #31 if
INFO  20:22:17,022 - #29 (
INFO  20:22:17,022 - #8 e
INFO  20:22:17,022 - #38 >
INFO  20:22:17,022 - #9 0
INFO  20:22:17,024 - #14 ||
INFO  20:22:17,024 - #8 e
INFO  20:22:17,024 - #42 <=
INFO  20:22:17,024 - #8 d
INFO  20:22:17,025 - #30 )
INFO  20:22:17,025 - #20 {
INFO  20:22:17,025 - #3 print
INFO  20:22:17,025 - #29 (
INFO  20:22:17,026 - #8 e
INFO  20:22:17,026 - #30 )
INFO  20:22:17,027 - #27 ;
INFO  20:22:17,027 - #21 }
INFO  20:22:17,027 - #32 else
INFO  20:22:17,028 - #20 {
INFO  20:22:17,028 - #3 print
INFO  20:22:17,028 - #29 (
INFO  20:22:17,028 - #8 d
INFO  20:22:17,028 - #30 )
INFO  20:22:17,028 - #27 ;
INFO  20:22:17,029 - #21 }
INFO  20:22:17,029 - #21 }
INFO  20:22:17,029 - #21 }
INFO  20:22:17,030 - =====================SINTAKSNO_STABLO=========================
INFO  20:22:17,032 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:22:17,032 - ==============================================================
INFO  20:22:17,048 - Pocetak obrade programa Program na liniji 1
INFO  20:22:17,048 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:22:17,049 - Deklarisana konstanta c na liniji 2
INFO  20:22:17,049 - Deklarisana konstanta d na liniji 2
INFO  20:22:17,049 - Deklarisana konstanta g na liniji 2
INFO  20:22:17,050 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:22:17,050 - Deklarisana promenljiva e na liniji 3
INFO  20:22:17,050 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:22:17,052 - Deklarisan niz z na liniji 3
INFO  20:22:17,053 - Pocetak obrade metode main na liniji 5
INFO  20:22:17,053 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  20:22:17,053 - Deklarisana promenljiva cond na liniji 5
INFO  20:22:17,054 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:22:17,054 - Zavrsetak obrade programa Program na liniji 1
INFO  20:22:17,054 - ======================TABELA_SIMBOLA==========================
INFO  20:22:17,055 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  20:22:17,055 - ==============================================================
INFO  20:22:17,055 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:22:17,055 - ==============================================================
INFO  20:22:17,055 - ======================GENERISANJE_KODA========================
ERROR 20:22:17,059 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 8!
ERROR 20:22:17,060 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 8!
ERROR 20:22:17,061 - Generisanje koda neuspesno!
INFO  20:22:17,061 - ==============================================================
INFO  20:22:22,971 - Obrada ulaznog fajla test\program.mj
INFO  20:22:23,073 - #2 program
INFO  20:22:23,074 - #8 Program
INFO  20:22:23,074 - #5 const
INFO  20:22:23,075 - #8 int
INFO  20:22:23,075 - #8 c
INFO  20:22:23,076 - #24 =
INFO  20:22:23,076 - #9 10
INFO  20:22:23,076 - #28 ,
INFO  20:22:23,078 - #8 d
INFO  20:22:23,078 - #24 =
INFO  20:22:23,078 - #9 99
INFO  20:22:23,078 - #28 ,
INFO  20:22:23,078 - #8 g
INFO  20:22:23,078 - #24 =
INFO  20:22:23,078 - #9 2
INFO  20:22:23,079 - #27 ;
INFO  20:22:23,079 - #8 int
INFO  20:22:23,080 - #8 e
INFO  20:22:23,081 - #27 ;
INFO  20:22:23,081 - #8 char
INFO  20:22:23,082 - #8 z
INFO  20:22:23,082 - #22 [
INFO  20:22:23,082 - #23 ]
INFO  20:22:23,082 - #27 ;
INFO  20:22:23,083 - #20 {
INFO  20:22:23,083 - #6 void
INFO  20:22:23,083 - #8 main
INFO  20:22:23,083 - #29 (
INFO  20:22:23,084 - #30 )
INFO  20:22:23,084 - #8 bool
INFO  20:22:23,084 - #8 cond
INFO  20:22:23,084 - #27 ;
INFO  20:22:23,084 - #20 {
INFO  20:22:23,085 - #8 e
INFO  20:22:23,085 - #24 =
INFO  20:22:23,085 - #9 3
INFO  20:22:23,085 - #27 ;
INFO  20:22:23,085 - #31 if
INFO  20:22:23,086 - #29 (
INFO  20:22:23,086 - #8 e
INFO  20:22:23,086 - #38 >
INFO  20:22:23,086 - #9 0
INFO  20:22:23,087 - #14 ||
INFO  20:22:23,088 - #8 e
INFO  20:22:23,088 - #42 <=
INFO  20:22:23,088 - #8 d
INFO  20:22:23,089 - #30 )
INFO  20:22:23,090 - #20 {
INFO  20:22:23,090 - #3 print
INFO  20:22:23,090 - #29 (
INFO  20:22:23,090 - #8 e
INFO  20:22:23,090 - #30 )
INFO  20:22:23,091 - #27 ;
INFO  20:22:23,091 - #21 }
INFO  20:22:23,091 - #32 else
INFO  20:22:23,093 - #20 {
INFO  20:22:23,093 - #3 print
INFO  20:22:23,093 - #29 (
INFO  20:22:23,093 - #8 d
INFO  20:22:23,093 - #30 )
INFO  20:22:23,093 - #27 ;
INFO  20:22:23,093 - #21 }
INFO  20:22:23,093 - #21 }
INFO  20:22:23,094 - #21 }
INFO  20:22:23,095 - =====================SINTAKSNO_STABLO=========================
INFO  20:22:23,097 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:22:23,097 - ==============================================================
INFO  20:22:23,109 - Pocetak obrade programa Program na liniji 1
INFO  20:22:23,109 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:22:23,110 - Deklarisana konstanta c na liniji 2
INFO  20:22:23,110 - Deklarisana konstanta d na liniji 2
INFO  20:22:23,110 - Deklarisana konstanta g na liniji 2
INFO  20:22:23,110 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:22:23,110 - Deklarisana promenljiva e na liniji 3
INFO  20:22:23,110 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:22:23,112 - Deklarisan niz z na liniji 3
INFO  20:22:23,112 - Pocetak obrade metode main na liniji 5
INFO  20:22:23,113 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  20:22:23,113 - Deklarisana promenljiva cond na liniji 5
INFO  20:22:23,113 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:22:23,113 - Zavrsetak obrade programa Program na liniji 1
INFO  20:22:23,113 - ======================TABELA_SIMBOLA==========================
INFO  20:22:23,114 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  20:22:23,114 - ==============================================================
INFO  20:22:23,114 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:22:23,114 - ==============================================================
INFO  20:22:23,114 - ======================GENERISANJE_KODA========================
ERROR 20:22:23,118 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 8!
ERROR 20:22:23,118 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 8!
ERROR 20:22:23,119 - Generisanje koda neuspesno!
INFO  20:22:23,119 - ==============================================================
INFO  20:26:37,392 - Obrada ulaznog fajla test\program.mj
INFO  20:26:37,492 - #2 program
INFO  20:26:37,492 - #8 Program
INFO  20:26:37,492 - #5 const
INFO  20:26:37,493 - #8 int
INFO  20:26:37,494 - #8 c
INFO  20:26:37,495 - #24 =
INFO  20:26:37,495 - #9 10
INFO  20:26:37,496 - #28 ,
INFO  20:26:37,497 - #8 d
INFO  20:26:37,498 - #24 =
INFO  20:26:37,498 - #9 99
INFO  20:26:37,498 - #28 ,
INFO  20:26:37,498 - #8 g
INFO  20:26:37,498 - #24 =
INFO  20:26:37,498 - #9 2
INFO  20:26:37,499 - #27 ;
INFO  20:26:37,499 - #8 int
INFO  20:26:37,500 - #8 e
INFO  20:26:37,501 - #27 ;
INFO  20:26:37,501 - #8 char
INFO  20:26:37,503 - #8 z
INFO  20:26:37,503 - #22 [
INFO  20:26:37,503 - #23 ]
INFO  20:26:37,503 - #27 ;
INFO  20:26:37,504 - #20 {
INFO  20:26:37,504 - #6 void
INFO  20:26:37,504 - #8 main
INFO  20:26:37,504 - #29 (
INFO  20:26:37,505 - #30 )
INFO  20:26:37,505 - #8 bool
INFO  20:26:37,506 - #8 cond
INFO  20:26:37,506 - #27 ;
INFO  20:26:37,506 - #20 {
INFO  20:26:37,506 - #8 e
INFO  20:26:37,506 - #24 =
INFO  20:26:37,506 - #9 3
INFO  20:26:37,506 - #27 ;
INFO  20:26:37,507 - #31 if
INFO  20:26:37,507 - #29 (
INFO  20:26:37,507 - #8 e
INFO  20:26:37,508 - #38 >
INFO  20:26:37,508 - #9 0
INFO  20:26:37,509 - #14 ||
INFO  20:26:37,510 - #8 e
INFO  20:26:37,510 - #42 <=
INFO  20:26:37,510 - #8 d
INFO  20:26:37,511 - #30 )
INFO  20:26:37,511 - #20 {
INFO  20:26:37,511 - #3 print
INFO  20:26:37,512 - #29 (
INFO  20:26:37,512 - #8 e
INFO  20:26:37,512 - #30 )
INFO  20:26:37,512 - #27 ;
INFO  20:26:37,512 - #21 }
INFO  20:26:37,512 - #32 else
INFO  20:26:37,513 - #20 {
INFO  20:26:37,513 - #3 print
INFO  20:26:37,514 - #29 (
INFO  20:26:37,514 - #8 d
INFO  20:26:37,514 - #30 )
INFO  20:26:37,514 - #27 ;
INFO  20:26:37,514 - #21 }
INFO  20:26:37,514 - #21 }
INFO  20:26:37,515 - #21 }
INFO  20:26:37,516 - =====================SINTAKSNO_STABLO=========================
INFO  20:26:37,518 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:26:37,519 - ==============================================================
INFO  20:26:37,532 - Pocetak obrade programa Program na liniji 1
INFO  20:26:37,533 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:26:37,534 - Deklarisana konstanta c na liniji 2
INFO  20:26:37,534 - Deklarisana konstanta d na liniji 2
INFO  20:26:37,534 - Deklarisana konstanta g na liniji 2
INFO  20:26:37,534 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:26:37,534 - Deklarisana promenljiva e na liniji 3
INFO  20:26:37,534 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:26:37,536 - Deklarisan niz z na liniji 3
INFO  20:26:37,537 - Pocetak obrade metode main na liniji 5
INFO  20:26:37,537 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  20:26:37,537 - Deklarisana promenljiva cond na liniji 5
INFO  20:26:37,537 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:26:37,537 - Zavrsetak obrade programa Program na liniji 1
INFO  20:26:37,537 - ======================TABELA_SIMBOLA==========================
INFO  20:26:37,538 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  20:26:37,538 - ==============================================================
INFO  20:26:37,538 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:28:17,674 - Obrada ulaznog fajla test\program.mj
INFO  20:28:17,775 - #2 program
INFO  20:28:17,775 - #8 Program
INFO  20:28:17,775 - #5 const
INFO  20:28:17,776 - #8 int
INFO  20:28:17,776 - #8 c
INFO  20:28:17,777 - #24 =
INFO  20:28:17,777 - #9 10
INFO  20:28:17,778 - #28 ,
INFO  20:28:17,779 - #8 d
INFO  20:28:17,779 - #24 =
INFO  20:28:17,779 - #9 99
INFO  20:28:17,779 - #28 ,
INFO  20:28:17,779 - #8 g
INFO  20:28:17,780 - #24 =
INFO  20:28:17,780 - #9 2
INFO  20:28:17,780 - #27 ;
INFO  20:28:17,780 - #8 int
INFO  20:28:17,781 - #8 e
INFO  20:28:17,781 - #27 ;
INFO  20:28:17,782 - #8 char
INFO  20:28:17,783 - #8 z
INFO  20:28:17,783 - #22 [
INFO  20:28:17,783 - #23 ]
INFO  20:28:17,783 - #27 ;
INFO  20:28:17,783 - #20 {
INFO  20:28:17,784 - #6 void
INFO  20:28:17,784 - #8 main
INFO  20:28:17,784 - #29 (
INFO  20:28:17,785 - #30 )
INFO  20:28:17,785 - #8 bool
INFO  20:28:17,786 - #8 cond
INFO  20:28:17,786 - #27 ;
INFO  20:28:17,786 - #20 {
INFO  20:28:17,786 - #8 e
INFO  20:28:17,786 - #24 =
INFO  20:28:17,787 - #9 3
INFO  20:28:17,787 - #27 ;
INFO  20:28:17,787 - #31 if
INFO  20:28:17,788 - #29 (
INFO  20:28:17,788 - #8 e
INFO  20:28:17,788 - #38 >
INFO  20:28:17,788 - #9 0
INFO  20:28:17,791 - #14 ||
INFO  20:28:17,791 - #8 e
INFO  20:28:17,791 - #42 <=
INFO  20:28:17,791 - #8 d
INFO  20:28:17,792 - #30 )
INFO  20:28:17,793 - #20 {
INFO  20:28:17,793 - #3 print
INFO  20:28:17,793 - #29 (
INFO  20:28:17,793 - #8 e
INFO  20:28:17,793 - #30 )
INFO  20:28:17,793 - #27 ;
INFO  20:28:17,793 - #21 }
INFO  20:28:17,794 - #32 else
INFO  20:28:17,796 - #20 {
INFO  20:28:17,796 - #3 print
INFO  20:28:17,796 - #29 (
INFO  20:28:17,796 - #8 d
INFO  20:28:17,796 - #30 )
INFO  20:28:17,798 - #27 ;
INFO  20:28:17,798 - #21 }
INFO  20:28:17,798 - #21 }
INFO  20:28:17,798 - #21 }
INFO  20:28:17,799 - =====================SINTAKSNO_STABLO=========================
INFO  20:28:17,801 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:28:17,802 - ==============================================================
INFO  20:28:17,818 - Pocetak obrade programa Program na liniji 1
INFO  20:28:17,818 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:28:17,819 - Deklarisana konstanta c na liniji 2
INFO  20:28:17,819 - Deklarisana konstanta d na liniji 2
INFO  20:28:17,819 - Deklarisana konstanta g na liniji 2
INFO  20:28:17,820 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:28:17,820 - Deklarisana promenljiva e na liniji 3
INFO  20:28:17,820 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:28:17,822 - Deklarisan niz z na liniji 3
INFO  20:28:17,823 - Pocetak obrade metode main na liniji 5
INFO  20:28:17,823 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  20:28:17,823 - Deklarisana promenljiva cond na liniji 5
INFO  20:28:17,824 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:28:17,824 - Zavrsetak obrade programa Program na liniji 1
INFO  20:28:17,824 - ======================TABELA_SIMBOLA==========================
INFO  20:28:17,825 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  20:28:17,825 - ==============================================================
INFO  20:28:17,825 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:28:17,825 - ==============================================================
INFO  20:28:17,825 - ======================GENERISANJE_KODA========================
ERROR 20:28:17,830 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 8!
ERROR 20:28:17,830 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 8!
ERROR 20:28:17,831 - Generisanje koda neuspesno!
INFO  20:28:17,831 - ==============================================================
INFO  20:28:25,363 - Obrada ulaznog fajla test\program.mj
INFO  20:28:25,450 - #2 program
INFO  20:28:25,450 - #8 Program
INFO  20:28:25,450 - #5 const
INFO  20:28:25,451 - #8 int
INFO  20:28:25,451 - #8 c
INFO  20:28:25,452 - #24 =
INFO  20:28:25,452 - #9 10
INFO  20:28:25,452 - #28 ,
INFO  20:28:25,453 - #8 d
INFO  20:28:25,453 - #24 =
INFO  20:28:25,453 - #9 99
INFO  20:28:25,453 - #28 ,
INFO  20:28:25,454 - #8 g
INFO  20:28:25,454 - #24 =
INFO  20:28:25,454 - #9 2
INFO  20:28:25,454 - #27 ;
INFO  20:28:25,454 - #8 int
INFO  20:28:25,455 - #8 e
INFO  20:28:25,455 - #27 ;
INFO  20:28:25,456 - #8 char
INFO  20:28:25,457 - #8 z
INFO  20:28:25,457 - #22 [
INFO  20:28:25,457 - #23 ]
INFO  20:28:25,457 - #27 ;
INFO  20:28:25,457 - #20 {
INFO  20:28:25,457 - #6 void
INFO  20:28:25,458 - #8 main
INFO  20:28:25,458 - #29 (
INFO  20:28:25,459 - #30 )
INFO  20:28:25,459 - #8 bool
INFO  20:28:25,459 - #8 cond
INFO  20:28:25,459 - #27 ;
INFO  20:28:25,459 - #20 {
INFO  20:28:25,459 - #8 e
INFO  20:28:25,459 - #24 =
INFO  20:28:25,460 - #9 3
INFO  20:28:25,460 - #27 ;
INFO  20:28:25,460 - #31 if
INFO  20:28:25,460 - #29 (
INFO  20:28:25,460 - #8 e
INFO  20:28:25,461 - #38 >
INFO  20:28:25,461 - #9 0
INFO  20:28:25,462 - #14 ||
INFO  20:28:25,463 - #8 e
INFO  20:28:25,463 - #42 <=
INFO  20:28:25,463 - #8 d
INFO  20:28:25,464 - #30 )
INFO  20:28:25,465 - #20 {
INFO  20:28:25,465 - #3 print
INFO  20:28:25,465 - #29 (
INFO  20:28:25,465 - #8 e
INFO  20:28:25,465 - #30 )
INFO  20:28:25,466 - #27 ;
INFO  20:28:25,466 - #21 }
INFO  20:28:25,466 - #32 else
INFO  20:28:25,467 - #20 {
INFO  20:28:25,468 - #3 print
INFO  20:28:25,468 - #29 (
INFO  20:28:25,468 - #8 d
INFO  20:28:25,468 - #30 )
INFO  20:28:25,468 - #27 ;
INFO  20:28:25,468 - #21 }
INFO  20:28:25,468 - #21 }
INFO  20:28:25,469 - #21 }
INFO  20:28:25,470 - =====================SINTAKSNO_STABLO=========================
INFO  20:28:25,472 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:28:25,473 - ==============================================================
INFO  20:28:25,488 - Pocetak obrade programa Program na liniji 1
INFO  20:28:25,489 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:28:25,490 - Deklarisana konstanta c na liniji 2
INFO  20:28:25,490 - Deklarisana konstanta d na liniji 2
INFO  20:28:25,490 - Deklarisana konstanta g na liniji 2
INFO  20:28:25,490 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:28:25,490 - Deklarisana promenljiva e na liniji 3
INFO  20:28:25,491 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:28:25,493 - Deklarisan niz z na liniji 3
INFO  20:28:25,494 - Pocetak obrade metode main na liniji 5
INFO  20:28:25,494 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  20:28:25,494 - Deklarisana promenljiva cond na liniji 5
INFO  20:28:25,495 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:28:25,495 - Zavrsetak obrade programa Program na liniji 1
INFO  20:28:25,495 - ======================TABELA_SIMBOLA==========================
INFO  20:28:25,496 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  20:28:25,497 - ==============================================================
INFO  20:28:25,497 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:28:25,497 - ==============================================================
INFO  20:28:25,497 - ======================GENERISANJE_KODA========================
ERROR 20:28:25,501 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 8!
ERROR 20:28:25,501 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 8!
ERROR 20:28:25,503 - Generisanje koda neuspesno!
INFO  20:28:25,503 - ==============================================================
INFO  20:28:27,381 - Obrada ulaznog fajla test\program.mj
INFO  20:28:27,472 - #2 program
INFO  20:28:27,472 - #8 Program
INFO  20:28:27,473 - #5 const
INFO  20:28:27,474 - #8 int
INFO  20:28:27,474 - #8 c
INFO  20:28:27,475 - #24 =
INFO  20:28:27,475 - #9 10
INFO  20:28:27,475 - #28 ,
INFO  20:28:27,477 - #8 d
INFO  20:28:27,477 - #24 =
INFO  20:28:27,477 - #9 99
INFO  20:28:27,477 - #28 ,
INFO  20:28:27,477 - #8 g
INFO  20:28:27,477 - #24 =
INFO  20:28:27,477 - #9 2
INFO  20:28:27,478 - #27 ;
INFO  20:28:27,478 - #8 int
INFO  20:28:27,479 - #8 e
INFO  20:28:27,480 - #27 ;
INFO  20:28:27,480 - #8 char
INFO  20:28:27,482 - #8 z
INFO  20:28:27,482 - #22 [
INFO  20:28:27,482 - #23 ]
INFO  20:28:27,482 - #27 ;
INFO  20:28:27,482 - #20 {
INFO  20:28:27,482 - #6 void
INFO  20:28:27,482 - #8 main
INFO  20:28:27,482 - #29 (
INFO  20:28:27,483 - #30 )
INFO  20:28:27,483 - #8 bool
INFO  20:28:27,483 - #8 cond
INFO  20:28:27,484 - #27 ;
INFO  20:28:27,484 - #20 {
INFO  20:28:27,484 - #8 e
INFO  20:28:27,484 - #24 =
INFO  20:28:27,484 - #9 3
INFO  20:28:27,484 - #27 ;
INFO  20:28:27,485 - #31 if
INFO  20:28:27,485 - #29 (
INFO  20:28:27,485 - #8 e
INFO  20:28:27,485 - #38 >
INFO  20:28:27,486 - #9 0
INFO  20:28:27,488 - #14 ||
INFO  20:28:27,490 - #8 e
INFO  20:28:27,490 - #42 <=
INFO  20:28:27,490 - #8 d
INFO  20:28:27,491 - #30 )
INFO  20:28:27,491 - #20 {
INFO  20:28:27,492 - #3 print
INFO  20:28:27,492 - #29 (
INFO  20:28:27,492 - #8 e
INFO  20:28:27,492 - #30 )
INFO  20:28:27,492 - #27 ;
INFO  20:28:27,492 - #21 }
INFO  20:28:27,492 - #32 else
INFO  20:28:27,494 - #20 {
INFO  20:28:27,494 - #3 print
INFO  20:28:27,494 - #29 (
INFO  20:28:27,494 - #8 d
INFO  20:28:27,494 - #30 )
INFO  20:28:27,494 - #27 ;
INFO  20:28:27,495 - #21 }
INFO  20:28:27,495 - #21 }
INFO  20:28:27,495 - #21 }
INFO  20:28:27,496 - =====================SINTAKSNO_STABLO=========================
INFO  20:28:27,498 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:28:27,498 - ==============================================================
INFO  20:28:27,512 - Pocetak obrade programa Program na liniji 1
INFO  20:28:27,512 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:28:27,513 - Deklarisana konstanta c na liniji 2
INFO  20:28:27,513 - Deklarisana konstanta d na liniji 2
INFO  20:28:27,513 - Deklarisana konstanta g na liniji 2
INFO  20:28:27,513 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:28:27,513 - Deklarisana promenljiva e na liniji 3
INFO  20:28:27,513 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:28:27,515 - Deklarisan niz z na liniji 3
INFO  20:28:27,516 - Pocetak obrade metode main na liniji 5
INFO  20:28:27,516 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  20:28:27,516 - Deklarisana promenljiva cond na liniji 5
INFO  20:28:27,516 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:28:27,516 - Zavrsetak obrade programa Program na liniji 1
INFO  20:28:27,516 - ======================TABELA_SIMBOLA==========================
INFO  20:28:27,517 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  20:28:27,517 - ==============================================================
INFO  20:28:27,517 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:28:27,517 - ==============================================================
INFO  20:28:27,517 - ======================GENERISANJE_KODA========================
INFO  20:28:42,027 - Obrada ulaznog fajla test\program.mj
INFO  20:28:42,122 - #2 program
INFO  20:28:42,122 - #8 Program
INFO  20:28:42,122 - #5 const
INFO  20:28:42,124 - #8 int
INFO  20:28:42,124 - #8 c
INFO  20:28:42,125 - #24 =
INFO  20:28:42,125 - #9 10
INFO  20:28:42,125 - #28 ,
INFO  20:28:42,126 - #8 d
INFO  20:28:42,126 - #24 =
INFO  20:28:42,127 - #9 99
INFO  20:28:42,127 - #28 ,
INFO  20:28:42,127 - #8 g
INFO  20:28:42,127 - #24 =
INFO  20:28:42,127 - #9 2
INFO  20:28:42,127 - #27 ;
INFO  20:28:42,127 - #8 int
INFO  20:28:42,129 - #8 e
INFO  20:28:42,129 - #27 ;
INFO  20:28:42,129 - #8 char
INFO  20:28:42,131 - #8 z
INFO  20:28:42,131 - #22 [
INFO  20:28:42,131 - #23 ]
INFO  20:28:42,132 - #27 ;
INFO  20:28:42,132 - #20 {
INFO  20:28:42,132 - #6 void
INFO  20:28:42,132 - #8 main
INFO  20:28:42,132 - #29 (
INFO  20:28:42,133 - #30 )
INFO  20:28:42,133 - #8 bool
INFO  20:28:42,133 - #8 cond
INFO  20:28:42,134 - #27 ;
INFO  20:28:42,134 - #20 {
INFO  20:28:42,134 - #8 e
INFO  20:28:42,134 - #24 =
INFO  20:28:42,134 - #9 3
INFO  20:28:42,134 - #27 ;
INFO  20:28:42,135 - #31 if
INFO  20:28:42,135 - #29 (
INFO  20:28:42,135 - #8 e
INFO  20:28:42,135 - #38 >
INFO  20:28:42,136 - #9 0
INFO  20:28:42,137 - #14 ||
INFO  20:28:42,138 - #8 e
INFO  20:28:42,138 - #42 <=
INFO  20:28:42,138 - #8 d
INFO  20:28:42,139 - #30 )
INFO  20:28:42,139 - #20 {
INFO  20:28:42,139 - #3 print
INFO  20:28:42,139 - #29 (
INFO  20:28:42,139 - #8 e
INFO  20:28:42,140 - #30 )
INFO  20:28:42,140 - #27 ;
INFO  20:28:42,140 - #21 }
INFO  20:28:42,140 - #32 else
INFO  20:28:42,141 - #20 {
INFO  20:28:42,142 - #3 print
INFO  20:28:42,142 - #29 (
INFO  20:28:42,142 - #8 d
INFO  20:28:42,142 - #30 )
INFO  20:28:42,143 - #27 ;
INFO  20:28:42,144 - #21 }
INFO  20:28:42,144 - #21 }
INFO  20:28:42,145 - #21 }
INFO  20:28:42,146 - =====================SINTAKSNO_STABLO=========================
INFO  20:28:42,148 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:28:42,148 - ==============================================================
INFO  20:28:42,162 - Pocetak obrade programa Program na liniji 1
INFO  20:28:42,163 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:28:42,163 - Deklarisana konstanta c na liniji 2
INFO  20:28:42,164 - Deklarisana konstanta d na liniji 2
INFO  20:28:42,164 - Deklarisana konstanta g na liniji 2
INFO  20:28:42,164 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:28:42,164 - Deklarisana promenljiva e na liniji 3
INFO  20:28:42,164 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:28:42,165 - Deklarisan niz z na liniji 3
INFO  20:28:42,166 - Pocetak obrade metode main na liniji 5
INFO  20:28:42,166 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  20:28:42,166 - Deklarisana promenljiva cond na liniji 5
INFO  20:28:42,167 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:28:42,167 - Zavrsetak obrade programa Program na liniji 1
INFO  20:28:42,167 - ======================TABELA_SIMBOLA==========================
INFO  20:28:42,167 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  20:28:42,168 - ==============================================================
INFO  20:28:42,168 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:28:42,168 - ==============================================================
INFO  20:28:42,168 - ======================GENERISANJE_KODA========================
INFO  20:35:43,234 - Obrada ulaznog fajla test\program.mj
INFO  20:35:43,322 - #2 program
INFO  20:35:43,322 - #8 Program
INFO  20:35:43,322 - #5 const
INFO  20:35:43,323 - #8 int
INFO  20:35:43,323 - #8 c
INFO  20:35:43,324 - #24 =
INFO  20:35:43,324 - #9 10
INFO  20:35:43,324 - #28 ,
INFO  20:35:43,325 - #8 d
INFO  20:35:43,325 - #24 =
INFO  20:35:43,325 - #9 99
INFO  20:35:43,325 - #28 ,
INFO  20:35:43,326 - #8 g
INFO  20:35:43,326 - #24 =
INFO  20:35:43,326 - #9 2
INFO  20:35:43,326 - #27 ;
INFO  20:35:43,326 - #8 int
INFO  20:35:43,327 - #8 e
INFO  20:35:43,327 - #27 ;
INFO  20:35:43,328 - #8 char
INFO  20:35:43,329 - #8 z
INFO  20:35:43,329 - #22 [
INFO  20:35:43,329 - #23 ]
INFO  20:35:43,329 - #27 ;
INFO  20:35:43,329 - #20 {
INFO  20:35:43,330 - #6 void
INFO  20:35:43,330 - #8 main
INFO  20:35:43,330 - #29 (
INFO  20:35:43,330 - #30 )
INFO  20:35:43,331 - #8 bool
INFO  20:35:43,331 - #8 cond
INFO  20:35:43,331 - #27 ;
INFO  20:35:43,331 - #20 {
INFO  20:35:43,331 - #8 e
INFO  20:35:43,331 - #24 =
INFO  20:35:43,331 - #9 3
INFO  20:35:43,332 - #27 ;
INFO  20:35:43,332 - #31 if
INFO  20:35:43,332 - #29 (
INFO  20:35:43,333 - #8 e
INFO  20:35:43,333 - #38 >
INFO  20:35:43,333 - #9 0
INFO  20:35:43,334 - #14 ||
INFO  20:35:43,335 - #8 e
INFO  20:35:43,335 - #42 <=
INFO  20:35:43,335 - #8 d
INFO  20:35:43,336 - #30 )
INFO  20:35:43,337 - #20 {
INFO  20:35:43,337 - #3 print
INFO  20:35:43,337 - #29 (
INFO  20:35:43,337 - #8 e
INFO  20:35:43,337 - #30 )
INFO  20:35:43,337 - #27 ;
INFO  20:35:43,337 - #21 }
INFO  20:35:43,337 - #32 else
INFO  20:35:43,338 - #20 {
INFO  20:35:43,339 - #3 print
INFO  20:35:43,339 - #29 (
INFO  20:35:43,339 - #8 d
INFO  20:35:43,339 - #30 )
INFO  20:35:43,339 - #27 ;
INFO  20:35:43,339 - #21 }
INFO  20:35:43,339 - #21 }
INFO  20:35:43,340 - #21 }
INFO  20:35:43,340 - =====================SINTAKSNO_STABLO=========================
INFO  20:35:43,342 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:35:43,343 - ==============================================================
INFO  20:35:43,356 - Pocetak obrade programa Program na liniji 1
INFO  20:35:43,356 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:35:43,357 - Deklarisana konstanta c na liniji 2
INFO  20:35:43,357 - Deklarisana konstanta d na liniji 2
INFO  20:35:43,357 - Deklarisana konstanta g na liniji 2
INFO  20:35:43,357 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:35:43,357 - Deklarisana promenljiva e na liniji 3
INFO  20:35:43,358 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:35:43,359 - Deklarisan niz z na liniji 3
INFO  20:35:43,360 - Pocetak obrade metode main na liniji 5
INFO  20:35:43,360 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  20:35:43,360 - Deklarisana promenljiva cond na liniji 5
INFO  20:35:43,360 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:35:43,360 - Zavrsetak obrade programa Program na liniji 1
INFO  20:35:43,360 - ======================TABELA_SIMBOLA==========================
INFO  20:35:43,361 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  20:35:43,361 - ==============================================================
INFO  20:35:43,361 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:35:43,361 - ==============================================================
INFO  20:35:43,361 - ======================GENERISANJE_KODA========================
ERROR 20:35:43,365 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 8!
ERROR 20:35:43,366 - Generisanje koda neuspesno!
INFO  20:35:43,366 - ==============================================================
INFO  20:39:34,925 - Obrada ulaznog fajla test\program.mj
INFO  20:39:35,020 - #2 program
INFO  20:39:35,020 - #8 Program
INFO  20:39:35,020 - #5 const
INFO  20:39:35,021 - #8 int
INFO  20:39:35,022 - #8 c
INFO  20:39:35,023 - #24 =
INFO  20:39:35,023 - #9 10
INFO  20:39:35,023 - #28 ,
INFO  20:39:35,024 - #8 d
INFO  20:39:35,024 - #24 =
INFO  20:39:35,024 - #9 99
INFO  20:39:35,025 - #28 ,
INFO  20:39:35,025 - #8 g
INFO  20:39:35,025 - #24 =
INFO  20:39:35,025 - #9 2
INFO  20:39:35,025 - #27 ;
INFO  20:39:35,025 - #8 int
INFO  20:39:35,027 - #8 e
INFO  20:39:35,027 - #27 ;
INFO  20:39:35,027 - #8 char
INFO  20:39:35,029 - #8 z
INFO  20:39:35,029 - #22 [
INFO  20:39:35,029 - #23 ]
INFO  20:39:35,029 - #27 ;
INFO  20:39:35,029 - #20 {
INFO  20:39:35,030 - #6 void
INFO  20:39:35,030 - #8 main
INFO  20:39:35,030 - #29 (
INFO  20:39:35,031 - #30 )
INFO  20:39:35,031 - #8 bool
INFO  20:39:35,031 - #8 cond
INFO  20:39:35,031 - #27 ;
INFO  20:39:35,031 - #20 {
INFO  20:39:35,032 - #8 e
INFO  20:39:35,032 - #24 =
INFO  20:39:35,032 - #9 3
INFO  20:39:35,032 - #27 ;
INFO  20:39:35,033 - #31 if
INFO  20:39:35,033 - #29 (
INFO  20:39:35,033 - #8 e
INFO  20:39:35,033 - #38 >
INFO  20:39:35,034 - #9 0
INFO  20:39:35,036 - #14 ||
INFO  20:39:35,036 - #8 e
INFO  20:39:35,036 - #42 <=
INFO  20:39:35,037 - #8 d
INFO  20:39:35,037 - #30 )
INFO  20:39:35,038 - #20 {
INFO  20:39:35,039 - #3 print
INFO  20:39:35,039 - #29 (
INFO  20:39:35,039 - #8 e
INFO  20:39:35,039 - #30 )
INFO  20:39:35,040 - #27 ;
INFO  20:39:35,040 - #21 }
INFO  20:39:35,040 - #32 else
INFO  20:39:35,041 - #20 {
INFO  20:39:35,041 - #3 print
INFO  20:39:35,041 - #29 (
INFO  20:39:35,041 - #8 d
INFO  20:39:35,041 - #30 )
INFO  20:39:35,042 - #27 ;
INFO  20:39:35,042 - #21 }
INFO  20:39:35,042 - #21 }
INFO  20:39:35,043 - #21 }
INFO  20:39:35,044 - =====================SINTAKSNO_STABLO=========================
INFO  20:39:35,046 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:39:35,047 - ==============================================================
INFO  20:39:35,064 - Pocetak obrade programa Program na liniji 1
INFO  20:39:35,065 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:39:35,066 - Deklarisana konstanta c na liniji 2
INFO  20:39:35,066 - Deklarisana konstanta d na liniji 2
INFO  20:39:35,066 - Deklarisana konstanta g na liniji 2
INFO  20:39:35,066 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:39:35,066 - Deklarisana promenljiva e na liniji 3
INFO  20:39:35,066 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:39:35,069 - Deklarisan niz z na liniji 3
INFO  20:39:35,070 - Pocetak obrade metode main na liniji 5
INFO  20:39:35,070 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  20:39:35,071 - Deklarisana promenljiva cond na liniji 5
INFO  20:39:35,071 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:39:35,071 - Zavrsetak obrade programa Program na liniji 1
INFO  20:39:35,072 - ======================TABELA_SIMBOLA==========================
INFO  20:39:35,072 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  20:39:35,072 - ==============================================================
INFO  20:39:35,073 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:39:35,073 - ==============================================================
INFO  20:39:35,073 - ======================GENERISANJE_KODA========================
ERROR 20:39:35,077 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 8!
ERROR 20:39:35,079 - Generisanje koda neuspesno!
INFO  20:39:35,079 - ==============================================================
INFO  20:42:46,722 - Obrada ulaznog fajla test\program.mj
INFO  20:42:46,798 - #2 program
INFO  20:42:46,799 - #8 Program
INFO  20:42:46,799 - #5 const
INFO  20:42:46,800 - #8 int
INFO  20:42:46,800 - #8 c
INFO  20:42:46,800 - #24 =
INFO  20:42:46,801 - #9 10
INFO  20:42:46,801 - #28 ,
INFO  20:42:46,802 - #8 d
INFO  20:42:46,802 - #24 =
INFO  20:42:46,802 - #9 99
INFO  20:42:46,802 - #28 ,
INFO  20:42:46,802 - #8 g
INFO  20:42:46,802 - #24 =
INFO  20:42:46,802 - #9 2
INFO  20:42:46,803 - #27 ;
INFO  20:42:46,803 - #8 int
INFO  20:42:46,804 - #8 e
INFO  20:42:46,804 - #27 ;
INFO  20:42:46,804 - #8 char
INFO  20:42:46,805 - #8 z
INFO  20:42:46,806 - #22 [
INFO  20:42:46,806 - #23 ]
INFO  20:42:46,806 - #27 ;
INFO  20:42:46,806 - #20 {
INFO  20:42:46,806 - #6 void
INFO  20:42:46,806 - #8 main
INFO  20:42:46,806 - #29 (
INFO  20:42:46,807 - #30 )
INFO  20:42:46,807 - #8 bool
INFO  20:42:46,807 - #8 cond
INFO  20:42:46,807 - #27 ;
INFO  20:42:46,807 - #20 {
INFO  20:42:46,808 - #8 e
INFO  20:42:46,808 - #24 =
INFO  20:42:46,808 - #9 3
INFO  20:42:46,808 - #27 ;
INFO  20:42:46,809 - #31 if
INFO  20:42:46,809 - #29 (
INFO  20:42:46,809 - #8 e
INFO  20:42:46,809 - #38 >
INFO  20:42:46,809 - #9 0
INFO  20:42:46,811 - #30 )
INFO  20:42:46,812 - #20 {
INFO  20:42:46,812 - #3 print
INFO  20:42:46,812 - #29 (
INFO  20:42:46,812 - #8 e
INFO  20:42:46,812 - #30 )
INFO  20:42:46,812 - #27 ;
INFO  20:42:46,812 - #21 }
INFO  20:42:46,813 - #32 else
INFO  20:42:46,814 - #20 {
INFO  20:42:46,814 - #3 print
INFO  20:42:46,814 - #29 (
INFO  20:42:46,814 - #8 d
INFO  20:42:46,814 - #30 )
INFO  20:42:46,814 - #27 ;
INFO  20:42:46,814 - #21 }
INFO  20:42:46,815 - #21 }
INFO  20:42:46,815 - #21 }
INFO  20:42:46,816 - =====================SINTAKSNO_STABLO=========================
INFO  20:42:46,818 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:42:46,818 - ==============================================================
INFO  20:42:46,838 - Pocetak obrade programa Program na liniji 1
INFO  20:42:46,838 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:42:46,839 - Deklarisana konstanta c na liniji 2
INFO  20:42:46,839 - Deklarisana konstanta d na liniji 2
INFO  20:42:46,839 - Deklarisana konstanta g na liniji 2
INFO  20:42:46,840 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:42:46,840 - Deklarisana promenljiva e na liniji 3
INFO  20:42:46,840 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:42:46,840 - Deklarisan niz z na liniji 3
INFO  20:42:46,841 - Pocetak obrade metode main na liniji 5
INFO  20:42:46,842 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  20:42:46,842 - Deklarisana promenljiva cond na liniji 5
INFO  20:42:46,844 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:42:46,845 - Zavrsetak obrade programa Program na liniji 1
INFO  20:42:46,845 - ======================TABELA_SIMBOLA==========================
INFO  20:42:46,846 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var cond: bool

INFO  20:42:46,846 - ==============================================================
INFO  20:42:46,846 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:42:46,846 - ==============================================================
INFO  20:42:46,846 - ======================GENERISANJE_KODA========================
INFO  20:42:46,853 - Generisanje koda uspesno zavrseno!
INFO  20:42:46,853 - Generisanje izlaznog fajla test\program.obj
INFO  20:42:46,853 - ==============================================================
INFO  20:43:33,776 - Obrada ulaznog fajla test\program.mj
INFO  20:43:33,857 - #2 program
INFO  20:43:33,857 - #8 Program
INFO  20:43:33,857 - #5 const
INFO  20:43:33,858 - #8 int
INFO  20:43:33,858 - #8 c
INFO  20:43:33,859 - #24 =
INFO  20:43:33,859 - #9 10
INFO  20:43:33,859 - #28 ,
INFO  20:43:33,860 - #8 d
INFO  20:43:33,860 - #24 =
INFO  20:43:33,860 - #9 99
INFO  20:43:33,861 - #28 ,
INFO  20:43:33,861 - #8 g
INFO  20:43:33,861 - #24 =
INFO  20:43:33,861 - #9 2
INFO  20:43:33,861 - #27 ;
INFO  20:43:33,861 - #8 int
INFO  20:43:33,862 - #8 e
INFO  20:43:33,862 - #27 ;
INFO  20:43:33,863 - #20 {
INFO  20:43:33,864 - #6 void
INFO  20:43:33,864 - #8 main
INFO  20:43:33,865 - #29 (
INFO  20:43:33,865 - #30 )
INFO  20:43:33,866 - #20 {
INFO  20:43:33,866 - #8 e
INFO  20:43:33,866 - #24 =
INFO  20:43:33,866 - #9 3
INFO  20:43:33,866 - #27 ;
INFO  20:43:33,867 - #31 if
INFO  20:43:33,867 - #29 (
INFO  20:43:33,867 - #8 e
INFO  20:43:33,867 - #38 >
INFO  20:43:33,867 - #9 0
INFO  20:43:33,868 - #30 )
INFO  20:43:33,869 - #20 {
INFO  20:43:33,869 - #3 print
INFO  20:43:33,869 - #29 (
INFO  20:43:33,869 - #8 e
INFO  20:43:33,869 - #30 )
INFO  20:43:33,869 - #27 ;
INFO  20:43:33,869 - #21 }
INFO  20:43:33,869 - #32 else
INFO  20:43:33,870 - #20 {
INFO  20:43:33,871 - #3 print
INFO  20:43:33,871 - #29 (
INFO  20:43:33,871 - #8 d
INFO  20:43:33,871 - #30 )
INFO  20:43:33,871 - #27 ;
INFO  20:43:33,871 - #21 }
INFO  20:43:33,871 - #21 }
INFO  20:43:33,871 - #21 }
INFO  20:43:33,872 - =====================SINTAKSNO_STABLO=========================
INFO  20:43:33,873 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:43:33,875 - ==============================================================
INFO  20:43:33,887 - Pocetak obrade programa Program na liniji 1
INFO  20:43:33,887 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:43:33,888 - Deklarisana konstanta c na liniji 2
INFO  20:43:33,888 - Deklarisana konstanta d na liniji 2
INFO  20:43:33,888 - Deklarisana konstanta g na liniji 2
INFO  20:43:33,889 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:43:33,889 - Deklarisana promenljiva e na liniji 3
INFO  20:43:33,890 - Pocetak obrade metode main na liniji 5
INFO  20:43:33,890 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:43:33,890 - Zavrsetak obrade programa Program na liniji 1
INFO  20:43:33,890 - ======================TABELA_SIMBOLA==========================
INFO  20:43:33,891 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:43:33,891 - ==============================================================
INFO  20:43:33,891 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:43:33,891 - ==============================================================
INFO  20:43:33,891 - ======================GENERISANJE_KODA========================
INFO  20:43:33,896 - Generisanje koda uspesno zavrseno!
INFO  20:43:33,897 - Generisanje izlaznog fajla test\program.obj
INFO  20:43:33,897 - ==============================================================
INFO  20:44:28,625 - Obrada ulaznog fajla test\program.mj
INFO  20:44:28,705 - #2 program
INFO  20:44:28,705 - #8 Program
INFO  20:44:28,706 - #5 const
INFO  20:44:28,706 - #8 int
INFO  20:44:28,706 - #8 c
INFO  20:44:28,707 - #24 =
INFO  20:44:28,707 - #9 10
INFO  20:44:28,707 - #28 ,
INFO  20:44:28,708 - #8 d
INFO  20:44:28,708 - #24 =
INFO  20:44:28,708 - #9 99
INFO  20:44:28,709 - #28 ,
INFO  20:44:28,709 - #8 g
INFO  20:44:28,709 - #24 =
INFO  20:44:28,709 - #9 2
INFO  20:44:28,709 - #27 ;
INFO  20:44:28,709 - #8 int
INFO  20:44:28,710 - #8 e
INFO  20:44:28,710 - #27 ;
INFO  20:44:28,711 - #20 {
INFO  20:44:28,712 - #6 void
INFO  20:44:28,712 - #8 main
INFO  20:44:28,713 - #29 (
INFO  20:44:28,714 - #30 )
INFO  20:44:28,714 - #20 {
INFO  20:44:28,714 - #8 e
INFO  20:44:28,714 - #24 =
INFO  20:44:28,714 - #9 3
INFO  20:44:28,714 - #27 ;
INFO  20:44:28,715 - #31 if
INFO  20:44:28,715 - #29 (
INFO  20:44:28,715 - #8 e
INFO  20:44:28,715 - #38 >
INFO  20:44:28,716 - #9 0
INFO  20:44:28,717 - #30 )
INFO  20:44:28,718 - #20 {
INFO  20:44:28,718 - #3 print
INFO  20:44:28,718 - #29 (
INFO  20:44:28,718 - #8 e
INFO  20:44:28,718 - #30 )
INFO  20:44:28,718 - #27 ;
INFO  20:44:28,718 - #21 }
INFO  20:44:28,718 - #32 else
INFO  20:44:28,719 - #20 {
INFO  20:44:28,719 - #3 print
INFO  20:44:28,720 - #29 (
INFO  20:44:28,720 - #8 d
INFO  20:44:28,720 - #30 )
INFO  20:44:28,720 - #27 ;
INFO  20:44:28,720 - #21 }
INFO  20:44:28,720 - #21 }
INFO  20:44:28,721 - #21 }
INFO  20:44:28,721 - =====================SINTAKSNO_STABLO=========================
INFO  20:44:28,723 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:44:28,724 - ==============================================================
INFO  20:44:28,734 - Pocetak obrade programa Program na liniji 1
INFO  20:44:28,735 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:44:28,735 - Deklarisana konstanta c na liniji 2
INFO  20:44:28,736 - Deklarisana konstanta d na liniji 2
INFO  20:44:28,736 - Deklarisana konstanta g na liniji 2
INFO  20:44:28,736 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:44:28,736 - Deklarisana promenljiva e na liniji 3
INFO  20:44:28,737 - Pocetak obrade metode main na liniji 5
INFO  20:44:28,737 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:44:28,737 - Zavrsetak obrade programa Program na liniji 1
INFO  20:44:28,737 - ======================TABELA_SIMBOLA==========================
INFO  20:44:28,738 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:44:28,738 - ==============================================================
INFO  20:44:28,738 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:44:28,738 - ==============================================================
INFO  20:44:28,738 - ======================GENERISANJE_KODA========================
INFO  20:44:28,744 - Generisanje koda uspesno zavrseno!
INFO  20:44:28,744 - Generisanje izlaznog fajla test\program.obj
INFO  20:44:28,744 - ==============================================================
INFO  20:47:14,901 - Obrada ulaznog fajla test\program.mj
INFO  20:47:14,986 - #2 program
INFO  20:47:14,986 - #8 Program
INFO  20:47:14,986 - #5 const
INFO  20:47:14,987 - #8 int
INFO  20:47:14,987 - #8 c
INFO  20:47:14,988 - #24 =
INFO  20:47:14,988 - #9 10
INFO  20:47:14,988 - #28 ,
INFO  20:47:14,989 - #8 d
INFO  20:47:14,989 - #24 =
INFO  20:47:14,989 - #9 99
INFO  20:47:14,989 - #28 ,
INFO  20:47:14,989 - #8 g
INFO  20:47:14,990 - #24 =
INFO  20:47:14,990 - #9 2
INFO  20:47:14,990 - #27 ;
INFO  20:47:14,990 - #8 int
INFO  20:47:14,991 - #8 e
INFO  20:47:14,991 - #27 ;
INFO  20:47:14,992 - #20 {
INFO  20:47:14,993 - #6 void
INFO  20:47:14,993 - #8 main
INFO  20:47:14,993 - #29 (
INFO  20:47:14,994 - #30 )
INFO  20:47:14,994 - #20 {
INFO  20:47:14,994 - #8 e
INFO  20:47:14,994 - #24 =
INFO  20:47:14,994 - #9 3
INFO  20:47:14,995 - #27 ;
INFO  20:47:14,995 - #31 if
INFO  20:47:14,996 - #29 (
INFO  20:47:14,996 - #8 e
INFO  20:47:14,996 - #38 >
INFO  20:47:14,996 - #9 0
INFO  20:47:14,997 - #30 )
INFO  20:47:14,998 - #20 {
INFO  20:47:14,998 - #3 print
INFO  20:47:14,998 - #29 (
INFO  20:47:14,998 - #8 e
INFO  20:47:14,998 - #30 )
INFO  20:47:14,998 - #27 ;
INFO  20:47:14,998 - #21 }
INFO  20:47:14,998 - #32 else
INFO  20:47:14,999 - #20 {
INFO  20:47:14,999 - #3 print
INFO  20:47:15,000 - #29 (
INFO  20:47:15,000 - #8 d
INFO  20:47:15,000 - #30 )
INFO  20:47:15,000 - #27 ;
INFO  20:47:15,000 - #21 }
INFO  20:47:15,000 - #21 }
INFO  20:47:15,000 - #21 }
INFO  20:47:15,001 - =====================SINTAKSNO_STABLO=========================
INFO  20:47:15,003 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:47:15,004 - ==============================================================
INFO  20:47:15,020 - Pocetak obrade programa Program na liniji 1
INFO  20:47:15,020 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:47:15,021 - Deklarisana konstanta c na liniji 2
INFO  20:47:15,021 - Deklarisana konstanta d na liniji 2
INFO  20:47:15,021 - Deklarisana konstanta g na liniji 2
INFO  20:47:15,021 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:47:15,021 - Deklarisana promenljiva e na liniji 3
INFO  20:47:15,023 - Pocetak obrade metode main na liniji 5
INFO  20:47:15,024 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:47:15,024 - Zavrsetak obrade programa Program na liniji 1
INFO  20:47:15,024 - ======================TABELA_SIMBOLA==========================
INFO  20:47:15,025 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:47:15,025 - ==============================================================
INFO  20:47:15,025 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:47:15,025 - ==============================================================
INFO  20:47:15,025 - ======================GENERISANJE_KODA========================
INFO  20:47:15,030 - Generisanje koda uspesno zavrseno!
INFO  20:47:15,031 - Generisanje izlaznog fajla test\program.obj
INFO  20:47:15,031 - ==============================================================
INFO  20:47:44,986 - Obrada ulaznog fajla test\program.mj
INFO  20:47:45,064 - #2 program
INFO  20:47:45,065 - #8 Program
INFO  20:47:45,065 - #5 const
INFO  20:47:45,066 - #8 int
INFO  20:47:45,066 - #8 c
INFO  20:47:45,067 - #24 =
INFO  20:47:45,067 - #9 10
INFO  20:47:45,067 - #28 ,
INFO  20:47:45,068 - #8 d
INFO  20:47:45,068 - #24 =
INFO  20:47:45,068 - #9 99
INFO  20:47:45,069 - #28 ,
INFO  20:47:45,069 - #8 g
INFO  20:47:45,069 - #24 =
INFO  20:47:45,069 - #9 2
INFO  20:47:45,069 - #27 ;
INFO  20:47:45,069 - #8 int
INFO  20:47:45,070 - #8 e
INFO  20:47:45,070 - #27 ;
INFO  20:47:45,071 - #20 {
INFO  20:47:45,072 - #6 void
INFO  20:47:45,072 - #8 main
INFO  20:47:45,072 - #29 (
INFO  20:47:45,073 - #30 )
INFO  20:47:45,073 - #20 {
INFO  20:47:45,073 - #8 e
INFO  20:47:45,073 - #24 =
INFO  20:47:45,073 - #9 3
INFO  20:47:45,073 - #27 ;
INFO  20:47:45,074 - #31 if
INFO  20:47:45,074 - #29 (
INFO  20:47:45,074 - #8 e
INFO  20:47:45,074 - #38 >
INFO  20:47:45,074 - #9 0
INFO  20:47:45,075 - #30 )
INFO  20:47:45,076 - #20 {
INFO  20:47:45,076 - #3 print
INFO  20:47:45,076 - #29 (
INFO  20:47:45,076 - #8 e
INFO  20:47:45,076 - #30 )
INFO  20:47:45,076 - #27 ;
INFO  20:47:45,076 - #21 }
INFO  20:47:45,077 - #32 else
INFO  20:47:45,077 - #20 {
INFO  20:47:45,077 - #3 print
INFO  20:47:45,078 - #29 (
INFO  20:47:45,078 - #8 d
INFO  20:47:45,078 - #30 )
INFO  20:47:45,078 - #27 ;
INFO  20:47:45,078 - #21 }
INFO  20:47:45,078 - #21 }
INFO  20:47:45,078 - #21 }
INFO  20:47:45,079 - =====================SINTAKSNO_STABLO=========================
INFO  20:47:45,081 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:47:45,082 - ==============================================================
INFO  20:47:45,097 - Pocetak obrade programa Program na liniji 1
INFO  20:47:45,098 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:47:45,099 - Deklarisana konstanta c na liniji 2
INFO  20:47:45,099 - Deklarisana konstanta d na liniji 2
INFO  20:47:45,099 - Deklarisana konstanta g na liniji 2
INFO  20:47:45,099 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:47:45,099 - Deklarisana promenljiva e na liniji 3
INFO  20:47:45,100 - Pocetak obrade metode main na liniji 5
INFO  20:47:45,101 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:47:45,101 - Zavrsetak obrade programa Program na liniji 1
INFO  20:47:45,101 - ======================TABELA_SIMBOLA==========================
INFO  20:47:45,102 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:47:45,102 - ==============================================================
INFO  20:47:45,103 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:47:45,103 - ==============================================================
INFO  20:47:45,103 - ======================GENERISANJE_KODA========================
INFO  20:47:45,109 - Generisanje koda uspesno zavrseno!
INFO  20:47:45,109 - Generisanje izlaznog fajla test\program.obj
INFO  20:47:45,109 - ==============================================================
INFO  20:55:28,142 - Obrada ulaznog fajla test\program.mj
INFO  20:55:28,217 - #2 program
INFO  20:55:28,217 - #8 Program
INFO  20:55:28,217 - #5 const
INFO  20:55:28,218 - #8 int
INFO  20:55:28,218 - #8 c
INFO  20:55:28,219 - #24 =
INFO  20:55:28,219 - #9 10
INFO  20:55:28,219 - #28 ,
INFO  20:55:28,220 - #8 d
INFO  20:55:28,220 - #24 =
INFO  20:55:28,220 - #9 99
INFO  20:55:28,220 - #28 ,
INFO  20:55:28,221 - #8 g
INFO  20:55:28,221 - #24 =
INFO  20:55:28,221 - #9 2
INFO  20:55:28,222 - #27 ;
INFO  20:55:28,222 - #8 int
INFO  20:55:28,223 - #8 e
INFO  20:55:28,223 - #27 ;
INFO  20:55:28,224 - #20 {
INFO  20:55:28,225 - #6 void
INFO  20:55:28,225 - #8 main
INFO  20:55:28,225 - #29 (
INFO  20:55:28,226 - #30 )
INFO  20:55:28,226 - #20 {
INFO  20:55:28,226 - #8 e
INFO  20:55:28,226 - #24 =
INFO  20:55:28,226 - #9 3
INFO  20:55:28,226 - #27 ;
INFO  20:55:28,227 - #31 if
INFO  20:55:28,227 - #29 (
INFO  20:55:28,228 - #8 e
INFO  20:55:28,228 - #40 <
INFO  20:55:28,228 - #9 0
INFO  20:55:28,229 - #30 )
INFO  20:55:28,230 - #20 {
INFO  20:55:28,230 - #3 print
INFO  20:55:28,230 - #29 (
INFO  20:55:28,230 - #8 e
INFO  20:55:28,230 - #30 )
INFO  20:55:28,230 - #27 ;
INFO  20:55:28,230 - #21 }
INFO  20:55:28,231 - #32 else
INFO  20:55:28,232 - #20 {
INFO  20:55:28,232 - #3 print
INFO  20:55:28,232 - #29 (
INFO  20:55:28,232 - #8 d
INFO  20:55:28,232 - #30 )
INFO  20:55:28,232 - #27 ;
INFO  20:55:28,232 - #21 }
INFO  20:55:28,232 - #21 }
INFO  20:55:28,233 - #21 }
INFO  20:55:28,234 - =====================SINTAKSNO_STABLO=========================
INFO  20:55:28,235 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:55:28,236 - ==============================================================
INFO  20:55:28,248 - Pocetak obrade programa Program na liniji 1
INFO  20:55:28,248 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:55:28,249 - Deklarisana konstanta c na liniji 2
INFO  20:55:28,249 - Deklarisana konstanta d na liniji 2
INFO  20:55:28,249 - Deklarisana konstanta g na liniji 2
INFO  20:55:28,249 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:55:28,250 - Deklarisana promenljiva e na liniji 3
INFO  20:55:28,251 - Pocetak obrade metode main na liniji 5
INFO  20:55:28,251 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:55:28,251 - Zavrsetak obrade programa Program na liniji 1
INFO  20:55:28,251 - ======================TABELA_SIMBOLA==========================
INFO  20:55:28,252 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:55:28,252 - ==============================================================
INFO  20:55:28,252 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:55:28,252 - ==============================================================
INFO  20:55:28,252 - ======================GENERISANJE_KODA========================
INFO  20:55:28,258 - Generisanje koda uspesno zavrseno!
INFO  20:55:28,258 - Generisanje izlaznog fajla test\program.obj
INFO  20:55:28,258 - ==============================================================
INFO  20:57:47,214 - Obrada ulaznog fajla test\program.mj
INFO  20:57:47,294 - #2 program
INFO  20:57:47,294 - #8 Program
INFO  20:57:47,294 - #5 const
INFO  20:57:47,295 - #8 int
INFO  20:57:47,295 - #8 c
INFO  20:57:47,296 - #24 =
INFO  20:57:47,296 - #9 10
INFO  20:57:47,296 - #28 ,
INFO  20:57:47,297 - #8 d
INFO  20:57:47,297 - #24 =
INFO  20:57:47,297 - #9 99
INFO  20:57:47,297 - #28 ,
INFO  20:57:47,297 - #8 g
INFO  20:57:47,298 - #24 =
INFO  20:57:47,298 - #9 2
INFO  20:57:47,298 - #27 ;
INFO  20:57:47,298 - #8 int
INFO  20:57:47,299 - #8 e
INFO  20:57:47,299 - #27 ;
INFO  20:57:47,300 - #20 {
INFO  20:57:47,301 - #6 void
INFO  20:57:47,301 - #8 main
INFO  20:57:47,301 - #29 (
INFO  20:57:47,302 - #30 )
INFO  20:57:47,302 - #20 {
INFO  20:57:47,303 - #8 e
INFO  20:57:47,303 - #24 =
INFO  20:57:47,303 - #9 3
INFO  20:57:47,303 - #27 ;
INFO  20:57:47,304 - #31 if
INFO  20:57:47,304 - #29 (
INFO  20:57:47,304 - #11 true
INFO  20:57:47,304 - #30 )
INFO  20:57:47,305 - #20 {
INFO  20:57:47,305 - #3 print
INFO  20:57:47,305 - #29 (
INFO  20:57:47,305 - #8 e
INFO  20:57:47,305 - #30 )
INFO  20:57:47,305 - #27 ;
INFO  20:57:47,305 - #21 }
INFO  20:57:47,306 - #32 else
INFO  20:57:47,307 - #20 {
INFO  20:57:47,307 - #3 print
INFO  20:57:47,307 - #29 (
INFO  20:57:47,307 - #8 d
INFO  20:57:47,307 - #30 )
INFO  20:57:47,307 - #27 ;
INFO  20:57:47,307 - #21 }
INFO  20:57:47,307 - #21 }
INFO  20:57:47,308 - #21 }
INFO  20:57:47,309 - =====================SINTAKSNO_STABLO=========================
INFO  20:57:47,312 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:57:47,312 - ==============================================================
INFO  20:57:47,327 - Pocetak obrade programa Program na liniji 1
INFO  20:57:47,327 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:57:47,328 - Deklarisana konstanta c na liniji 2
INFO  20:57:47,328 - Deklarisana konstanta d na liniji 2
INFO  20:57:47,328 - Deklarisana konstanta g na liniji 2
INFO  20:57:47,328 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:57:47,329 - Deklarisana promenljiva e na liniji 3
INFO  20:57:47,329 - Pocetak obrade metode main na liniji 5
INFO  20:57:47,330 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:57:47,330 - Zavrsetak obrade programa Program na liniji 1
INFO  20:57:47,330 - ======================TABELA_SIMBOLA==========================
INFO  20:57:47,330 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:57:47,330 - ==============================================================
INFO  20:57:47,331 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:57:47,331 - ==============================================================
INFO  20:57:47,331 - ======================GENERISANJE_KODA========================
INFO  20:57:47,335 - Generisanje koda uspesno zavrseno!
INFO  20:57:47,336 - Generisanje izlaznog fajla test\program.obj
INFO  20:57:47,336 - ==============================================================
INFO  20:57:59,056 - Obrada ulaznog fajla test\program.mj
INFO  20:57:59,135 - #2 program
INFO  20:57:59,135 - #8 Program
INFO  20:57:59,135 - #5 const
INFO  20:57:59,137 - #8 int
INFO  20:57:59,137 - #8 c
INFO  20:57:59,138 - #24 =
INFO  20:57:59,138 - #9 10
INFO  20:57:59,139 - #28 ,
INFO  20:57:59,140 - #8 d
INFO  20:57:59,140 - #24 =
INFO  20:57:59,140 - #9 99
INFO  20:57:59,141 - #28 ,
INFO  20:57:59,141 - #8 g
INFO  20:57:59,141 - #24 =
INFO  20:57:59,141 - #9 2
INFO  20:57:59,141 - #27 ;
INFO  20:57:59,141 - #8 int
INFO  20:57:59,143 - #8 e
INFO  20:57:59,144 - #27 ;
INFO  20:57:59,144 - #20 {
INFO  20:57:59,146 - #6 void
INFO  20:57:59,146 - #8 main
INFO  20:57:59,146 - #29 (
INFO  20:57:59,147 - #30 )
INFO  20:57:59,147 - #20 {
INFO  20:57:59,147 - #8 e
INFO  20:57:59,147 - #24 =
INFO  20:57:59,147 - #9 3
INFO  20:57:59,147 - #27 ;
INFO  20:57:59,148 - #31 if
INFO  20:57:59,149 - #29 (
INFO  20:57:59,149 - #12 false
INFO  20:57:59,149 - #30 )
INFO  20:57:59,150 - #20 {
INFO  20:57:59,150 - #3 print
INFO  20:57:59,150 - #29 (
INFO  20:57:59,150 - #8 e
INFO  20:57:59,150 - #30 )
INFO  20:57:59,150 - #27 ;
INFO  20:57:59,151 - #21 }
INFO  20:57:59,151 - #32 else
INFO  20:57:59,152 - #20 {
INFO  20:57:59,152 - #3 print
INFO  20:57:59,152 - #29 (
INFO  20:57:59,152 - #8 d
INFO  20:57:59,152 - #30 )
INFO  20:57:59,152 - #27 ;
INFO  20:57:59,152 - #21 }
INFO  20:57:59,153 - #21 }
INFO  20:57:59,153 - #21 }
INFO  20:57:59,154 - =====================SINTAKSNO_STABLO=========================
INFO  20:57:59,155 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:57:59,156 - ==============================================================
INFO  20:57:59,171 - Pocetak obrade programa Program na liniji 1
INFO  20:57:59,171 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:57:59,172 - Deklarisana konstanta c na liniji 2
INFO  20:57:59,172 - Deklarisana konstanta d na liniji 2
INFO  20:57:59,172 - Deklarisana konstanta g na liniji 2
INFO  20:57:59,172 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:57:59,172 - Deklarisana promenljiva e na liniji 3
INFO  20:57:59,173 - Pocetak obrade metode main na liniji 5
INFO  20:57:59,174 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:57:59,174 - Zavrsetak obrade programa Program na liniji 1
INFO  20:57:59,174 - ======================TABELA_SIMBOLA==========================
INFO  20:57:59,174 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:57:59,174 - ==============================================================
INFO  20:57:59,175 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:57:59,175 - ==============================================================
INFO  20:57:59,175 - ======================GENERISANJE_KODA========================
INFO  20:57:59,179 - Generisanje koda uspesno zavrseno!
INFO  20:57:59,180 - Generisanje izlaznog fajla test\program.obj
INFO  20:57:59,180 - ==============================================================
INFO  20:58:28,936 - Obrada ulaznog fajla test\program.mj
INFO  20:58:29,046 - #2 program
INFO  20:58:29,046 - #8 Program
INFO  20:58:29,046 - #5 const
INFO  20:58:29,048 - #8 int
INFO  20:58:29,048 - #8 c
INFO  20:58:29,049 - #24 =
INFO  20:58:29,049 - #9 10
INFO  20:58:29,049 - #28 ,
INFO  20:58:29,050 - #8 d
INFO  20:58:29,050 - #24 =
INFO  20:58:29,050 - #9 99
INFO  20:58:29,050 - #28 ,
INFO  20:58:29,051 - #8 g
INFO  20:58:29,051 - #24 =
INFO  20:58:29,051 - #9 2
INFO  20:58:29,051 - #27 ;
INFO  20:58:29,051 - #8 int
INFO  20:58:29,053 - #8 e
INFO  20:58:29,053 - #27 ;
INFO  20:58:29,053 - #20 {
INFO  20:58:29,054 - #6 void
INFO  20:58:29,054 - #8 main
INFO  20:58:29,055 - #29 (
INFO  20:58:29,056 - #30 )
INFO  20:58:29,056 - #20 {
INFO  20:58:29,057 - #8 e
INFO  20:58:29,057 - #24 =
INFO  20:58:29,057 - #9 3
INFO  20:58:29,057 - #27 ;
INFO  20:58:29,058 - #31 if
INFO  20:58:29,059 - #29 (
INFO  20:58:29,059 - #8 e
INFO  20:58:29,059 - #38 >
INFO  20:58:29,060 - #9 0
INFO  20:58:29,062 - #30 )
INFO  20:58:29,063 - #20 {
INFO  20:58:29,063 - #3 print
INFO  20:58:29,063 - #29 (
INFO  20:58:29,063 - #8 e
INFO  20:58:29,063 - #30 )
INFO  20:58:29,063 - #27 ;
INFO  20:58:29,063 - #21 }
INFO  20:58:29,064 - #32 else
INFO  20:58:29,065 - #20 {
INFO  20:58:29,065 - #3 print
INFO  20:58:29,065 - #29 (
INFO  20:58:29,065 - #8 d
INFO  20:58:29,065 - #30 )
INFO  20:58:29,066 - #27 ;
INFO  20:58:29,066 - #21 }
INFO  20:58:29,066 - #21 }
INFO  20:58:29,066 - #21 }
INFO  20:58:29,067 - =====================SINTAKSNO_STABLO=========================
INFO  20:58:29,071 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:58:29,072 - ==============================================================
INFO  20:58:29,089 - Pocetak obrade programa Program na liniji 1
INFO  20:58:29,089 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:58:29,090 - Deklarisana konstanta c na liniji 2
INFO  20:58:29,090 - Deklarisana konstanta d na liniji 2
INFO  20:58:29,090 - Deklarisana konstanta g na liniji 2
INFO  20:58:29,090 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:58:29,091 - Deklarisana promenljiva e na liniji 3
INFO  20:58:29,092 - Pocetak obrade metode main na liniji 5
INFO  20:58:29,092 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:58:29,093 - Zavrsetak obrade programa Program na liniji 1
INFO  20:58:29,093 - ======================TABELA_SIMBOLA==========================
INFO  20:58:29,093 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:58:29,094 - ==============================================================
INFO  20:58:29,094 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:58:29,094 - ==============================================================
INFO  20:58:29,094 - ======================GENERISANJE_KODA========================
INFO  20:58:29,100 - Generisanje koda uspesno zavrseno!
INFO  20:58:29,100 - Generisanje izlaznog fajla test\program.obj
INFO  20:58:29,100 - ==============================================================
INFO  21:01:49,104 - Obrada ulaznog fajla test\program.mj
INFO  21:01:49,185 - #2 program
INFO  21:01:49,185 - #8 Program
INFO  21:01:49,185 - #5 const
INFO  21:01:49,186 - #8 int
INFO  21:01:49,186 - #8 c
INFO  21:01:49,187 - #24 =
INFO  21:01:49,187 - #9 10
INFO  21:01:49,187 - #28 ,
INFO  21:01:49,188 - #8 d
INFO  21:01:49,189 - #24 =
INFO  21:01:49,189 - #9 99
INFO  21:01:49,189 - #28 ,
INFO  21:01:49,189 - #8 g
INFO  21:01:49,189 - #24 =
INFO  21:01:49,189 - #9 2
INFO  21:01:49,189 - #27 ;
INFO  21:01:49,190 - #8 int
INFO  21:01:49,191 - #8 e
INFO  21:01:49,191 - #27 ;
INFO  21:01:49,192 - #20 {
INFO  21:01:49,193 - #6 void
INFO  21:01:49,193 - #8 main
INFO  21:01:49,194 - #29 (
INFO  21:01:49,195 - #30 )
INFO  21:01:49,195 - #20 {
INFO  21:01:49,195 - #8 e
INFO  21:01:49,195 - #24 =
INFO  21:01:49,195 - #9 3
INFO  21:01:49,195 - #27 ;
INFO  21:01:49,196 - #31 if
INFO  21:01:49,197 - #29 (
INFO  21:01:49,197 - #8 e
INFO  21:01:49,197 - #38 >
INFO  21:01:49,197 - #9 0
INFO  21:01:49,198 - #30 )
INFO  21:01:49,199 - #20 {
INFO  21:01:49,199 - #3 print
INFO  21:01:49,199 - #29 (
INFO  21:01:49,199 - #8 e
INFO  21:01:49,199 - #30 )
INFO  21:01:49,199 - #27 ;
INFO  21:01:49,199 - #21 }
INFO  21:01:49,199 - #32 else
INFO  21:01:49,200 - #20 {
INFO  21:01:49,201 - #3 print
INFO  21:01:49,201 - #29 (
INFO  21:01:49,201 - #8 d
INFO  21:01:49,201 - #30 )
INFO  21:01:49,201 - #27 ;
INFO  21:01:49,201 - #21 }
INFO  21:01:49,201 - #21 }
INFO  21:01:49,202 - #21 }
INFO  21:01:49,203 - =====================SINTAKSNO_STABLO=========================
INFO  21:01:49,207 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:01:49,207 - ==============================================================
INFO  21:01:49,222 - Pocetak obrade programa Program na liniji 1
INFO  21:01:49,222 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:01:49,223 - Deklarisana konstanta c na liniji 2
INFO  21:01:49,223 - Deklarisana konstanta d na liniji 2
INFO  21:01:49,223 - Deklarisana konstanta g na liniji 2
INFO  21:01:49,223 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:01:49,223 - Deklarisana promenljiva e na liniji 3
INFO  21:01:49,224 - Pocetak obrade metode main na liniji 5
INFO  21:01:49,225 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:01:49,225 - Zavrsetak obrade programa Program na liniji 1
INFO  21:01:49,225 - ======================TABELA_SIMBOLA==========================
INFO  21:01:49,226 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:01:49,226 - ==============================================================
INFO  21:01:49,226 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:01:49,226 - ==============================================================
INFO  21:01:49,226 - ======================GENERISANJE_KODA========================
INFO  21:01:49,232 - Generisanje koda uspesno zavrseno!
INFO  21:01:49,232 - Generisanje izlaznog fajla test\program.obj
INFO  21:01:49,232 - ==============================================================
INFO  21:04:54,472 - Obrada ulaznog fajla test\program.mj
INFO  21:04:54,557 - #2 program
INFO  21:04:54,557 - #8 Program
INFO  21:04:54,557 - #5 const
INFO  21:04:54,558 - #8 int
INFO  21:04:54,558 - #8 c
INFO  21:04:54,559 - #24 =
INFO  21:04:54,559 - #9 10
INFO  21:04:54,559 - #28 ,
INFO  21:04:54,561 - #8 d
INFO  21:04:54,561 - #24 =
INFO  21:04:54,561 - #9 99
INFO  21:04:54,561 - #28 ,
INFO  21:04:54,561 - #8 g
INFO  21:04:54,561 - #24 =
INFO  21:04:54,561 - #9 2
INFO  21:04:54,561 - #27 ;
INFO  21:04:54,562 - #8 int
INFO  21:04:54,563 - #8 e
INFO  21:04:54,563 - #27 ;
INFO  21:04:54,563 - #20 {
INFO  21:04:54,565 - #6 void
INFO  21:04:54,565 - #8 main
INFO  21:04:54,565 - #29 (
INFO  21:04:54,566 - #30 )
INFO  21:04:54,566 - #20 {
INFO  21:04:54,566 - #8 e
INFO  21:04:54,566 - #24 =
INFO  21:04:54,567 - #9 3
INFO  21:04:54,567 - #27 ;
INFO  21:04:54,567 - #31 if
INFO  21:04:54,568 - #29 (
INFO  21:04:54,568 - #8 e
INFO  21:04:54,568 - #38 >
INFO  21:04:54,568 - #9 0
INFO  21:04:54,570 - #30 )
INFO  21:04:54,570 - #20 {
INFO  21:04:54,570 - #3 print
INFO  21:04:54,571 - #29 (
INFO  21:04:54,571 - #8 e
INFO  21:04:54,571 - #30 )
INFO  21:04:54,571 - #27 ;
INFO  21:04:54,571 - #21 }
INFO  21:04:54,571 - #32 else
INFO  21:04:54,572 - #20 {
INFO  21:04:54,572 - #3 print
INFO  21:04:54,572 - #29 (
INFO  21:04:54,573 - #8 d
INFO  21:04:54,573 - #30 )
INFO  21:04:54,573 - #27 ;
INFO  21:04:54,573 - #21 }
INFO  21:04:54,573 - #21 }
INFO  21:04:54,575 - #21 }
INFO  21:04:54,576 - =====================SINTAKSNO_STABLO=========================
INFO  21:04:54,577 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:04:54,578 - ==============================================================
INFO  21:04:54,594 - Pocetak obrade programa Program na liniji 1
INFO  21:04:54,594 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:04:54,595 - Deklarisana konstanta c na liniji 2
INFO  21:04:54,596 - Deklarisana konstanta d na liniji 2
INFO  21:04:54,596 - Deklarisana konstanta g na liniji 2
INFO  21:04:54,596 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:04:54,596 - Deklarisana promenljiva e na liniji 3
INFO  21:04:54,597 - Pocetak obrade metode main na liniji 5
INFO  21:04:54,598 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:04:54,598 - Zavrsetak obrade programa Program na liniji 1
INFO  21:04:54,598 - ======================TABELA_SIMBOLA==========================
INFO  21:04:54,599 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:04:54,600 - ==============================================================
INFO  21:04:54,600 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:04:54,600 - ==============================================================
INFO  21:04:54,600 - ======================GENERISANJE_KODA========================
INFO  21:04:54,606 - Generisanje koda uspesno zavrseno!
INFO  21:04:54,606 - Generisanje izlaznog fajla test\program.obj
INFO  21:04:54,606 - ==============================================================
INFO  21:06:32,948 - Obrada ulaznog fajla test\program.mj
INFO  21:06:33,048 - #2 program
INFO  21:06:33,049 - #8 Program
INFO  21:06:33,049 - #5 const
INFO  21:06:33,050 - #8 int
INFO  21:06:33,050 - #8 c
INFO  21:06:33,051 - #24 =
INFO  21:06:33,051 - #9 10
INFO  21:06:33,052 - #28 ,
INFO  21:06:33,053 - #8 d
INFO  21:06:33,053 - #24 =
INFO  21:06:33,053 - #9 99
INFO  21:06:33,053 - #28 ,
INFO  21:06:33,053 - #8 g
INFO  21:06:33,053 - #24 =
INFO  21:06:33,054 - #9 2
INFO  21:06:33,054 - #27 ;
INFO  21:06:33,054 - #8 int
INFO  21:06:33,055 - #8 e
INFO  21:06:33,055 - #27 ;
INFO  21:06:33,056 - #20 {
INFO  21:06:33,057 - #6 void
INFO  21:06:33,057 - #8 main
INFO  21:06:33,057 - #29 (
INFO  21:06:33,058 - #30 )
INFO  21:06:33,058 - #20 {
INFO  21:06:33,058 - #8 e
INFO  21:06:33,058 - #24 =
INFO  21:06:33,058 - #9 3
INFO  21:06:33,058 - #27 ;
INFO  21:06:33,059 - #31 if
INFO  21:06:33,059 - #29 (
INFO  21:06:33,060 - #11 true
INFO  21:06:33,060 - #30 )
INFO  21:06:33,060 - #20 {
INFO  21:06:33,061 - #3 print
INFO  21:06:33,061 - #29 (
INFO  21:06:33,061 - #8 e
INFO  21:06:33,061 - #30 )
INFO  21:06:33,061 - #27 ;
INFO  21:06:33,061 - #21 }
INFO  21:06:33,061 - #32 else
INFO  21:06:33,062 - #20 {
INFO  21:06:33,063 - #3 print
INFO  21:06:33,063 - #29 (
INFO  21:06:33,063 - #8 d
INFO  21:06:33,063 - #30 )
INFO  21:06:33,063 - #27 ;
INFO  21:06:33,063 - #21 }
INFO  21:06:33,063 - #21 }
INFO  21:06:33,064 - #21 }
INFO  21:06:33,065 - =====================SINTAKSNO_STABLO=========================
INFO  21:06:33,067 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:06:33,068 - ==============================================================
INFO  21:06:33,084 - Pocetak obrade programa Program na liniji 1
INFO  21:06:33,084 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:06:33,085 - Deklarisana konstanta c na liniji 2
INFO  21:06:33,085 - Deklarisana konstanta d na liniji 2
INFO  21:06:33,086 - Deklarisana konstanta g na liniji 2
INFO  21:06:33,086 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:06:33,086 - Deklarisana promenljiva e na liniji 3
INFO  21:06:33,087 - Pocetak obrade metode main na liniji 5
INFO  21:06:33,087 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:06:33,087 - Zavrsetak obrade programa Program na liniji 1
INFO  21:06:33,087 - ======================TABELA_SIMBOLA==========================
INFO  21:06:33,088 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:06:33,088 - ==============================================================
INFO  21:06:33,088 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:06:33,088 - ==============================================================
INFO  21:06:33,088 - ======================GENERISANJE_KODA========================
INFO  21:06:33,094 - Generisanje koda uspesno zavrseno!
INFO  21:06:33,095 - Generisanje izlaznog fajla test\program.obj
INFO  21:06:33,095 - ==============================================================
INFO  21:08:59,315 - Obrada ulaznog fajla test\program.mj
INFO  21:08:59,401 - #2 program
INFO  21:08:59,401 - #8 Program
INFO  21:08:59,401 - #5 const
INFO  21:08:59,402 - #8 int
INFO  21:08:59,402 - #8 c
INFO  21:08:59,403 - #24 =
INFO  21:08:59,403 - #9 10
INFO  21:08:59,403 - #28 ,
INFO  21:08:59,405 - #8 d
INFO  21:08:59,405 - #24 =
INFO  21:08:59,405 - #9 99
INFO  21:08:59,405 - #28 ,
INFO  21:08:59,405 - #8 g
INFO  21:08:59,405 - #24 =
INFO  21:08:59,406 - #9 2
INFO  21:08:59,406 - #27 ;
INFO  21:08:59,406 - #8 int
INFO  21:08:59,407 - #8 e
INFO  21:08:59,407 - #27 ;
INFO  21:08:59,408 - #20 {
INFO  21:08:59,409 - #6 void
INFO  21:08:59,409 - #8 main
INFO  21:08:59,409 - #29 (
INFO  21:08:59,410 - #30 )
INFO  21:08:59,410 - #20 {
INFO  21:08:59,410 - #8 e
INFO  21:08:59,410 - #24 =
INFO  21:08:59,411 - #9 3
INFO  21:08:59,411 - #27 ;
INFO  21:08:59,411 - #31 if
INFO  21:08:59,412 - #29 (
INFO  21:08:59,412 - #8 e
INFO  21:08:59,412 - #38 >
INFO  21:08:59,412 - #9 0
INFO  21:08:59,414 - #30 )
INFO  21:08:59,415 - #20 {
INFO  21:08:59,415 - #3 print
INFO  21:08:59,415 - #29 (
INFO  21:08:59,415 - #8 e
INFO  21:08:59,415 - #30 )
INFO  21:08:59,416 - #27 ;
INFO  21:08:59,416 - #21 }
INFO  21:08:59,416 - #32 else
INFO  21:08:59,417 - #20 {
INFO  21:08:59,417 - #3 print
INFO  21:08:59,417 - #29 (
INFO  21:08:59,417 - #8 d
INFO  21:08:59,417 - #30 )
INFO  21:08:59,418 - #27 ;
INFO  21:08:59,418 - #21 }
INFO  21:08:59,418 - #21 }
INFO  21:08:59,418 - #21 }
INFO  21:08:59,419 - =====================SINTAKSNO_STABLO=========================
INFO  21:08:59,421 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:08:59,421 - ==============================================================
INFO  21:08:59,435 - Pocetak obrade programa Program na liniji 1
INFO  21:08:59,435 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:08:59,436 - Deklarisana konstanta c na liniji 2
INFO  21:08:59,437 - Deklarisana konstanta d na liniji 2
INFO  21:08:59,437 - Deklarisana konstanta g na liniji 2
INFO  21:08:59,437 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:08:59,437 - Deklarisana promenljiva e na liniji 3
INFO  21:08:59,438 - Pocetak obrade metode main na liniji 5
INFO  21:08:59,438 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:08:59,438 - Zavrsetak obrade programa Program na liniji 1
INFO  21:08:59,438 - ======================TABELA_SIMBOLA==========================
INFO  21:08:59,439 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:08:59,439 - ==============================================================
INFO  21:08:59,439 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:08:59,439 - ==============================================================
INFO  21:08:59,439 - ======================GENERISANJE_KODA========================
INFO  21:08:59,444 - Generisanje koda uspesno zavrseno!
INFO  21:08:59,445 - Generisanje izlaznog fajla test\program.obj
INFO  21:08:59,445 - ==============================================================
INFO  21:09:28,466 - Obrada ulaznog fajla test\program.mj
INFO  21:09:28,553 - #2 program
INFO  21:09:28,553 - #8 Program
INFO  21:09:28,553 - #5 const
INFO  21:09:28,554 - #8 int
INFO  21:09:28,554 - #8 c
INFO  21:09:28,555 - #24 =
INFO  21:09:28,555 - #9 10
INFO  21:09:28,555 - #28 ,
INFO  21:09:28,556 - #8 d
INFO  21:09:28,556 - #24 =
INFO  21:09:28,557 - #9 99
INFO  21:09:28,557 - #28 ,
INFO  21:09:28,557 - #8 g
INFO  21:09:28,557 - #24 =
INFO  21:09:28,557 - #9 2
INFO  21:09:28,557 - #27 ;
INFO  21:09:28,557 - #8 int
INFO  21:09:28,558 - #8 e
INFO  21:09:28,559 - #27 ;
INFO  21:09:28,559 - #20 {
INFO  21:09:28,560 - #6 void
INFO  21:09:28,560 - #8 main
INFO  21:09:28,560 - #29 (
INFO  21:09:28,561 - #30 )
INFO  21:09:28,561 - #20 {
INFO  21:09:28,562 - #8 e
INFO  21:09:28,562 - #24 =
INFO  21:09:28,562 - #9 3
INFO  21:09:28,562 - #27 ;
INFO  21:09:28,562 - #31 if
INFO  21:09:28,563 - #29 (
INFO  21:09:28,563 - #8 e
INFO  21:09:28,563 - #38 >
INFO  21:09:28,563 - #9 0
INFO  21:09:28,564 - #30 )
INFO  21:09:28,565 - #20 {
INFO  21:09:28,565 - #3 print
INFO  21:09:28,565 - #29 (
INFO  21:09:28,565 - #8 e
INFO  21:09:28,565 - #30 )
INFO  21:09:28,565 - #27 ;
INFO  21:09:28,565 - #21 }
INFO  21:09:28,565 - #32 else
INFO  21:09:28,567 - #20 {
INFO  21:09:28,567 - #3 print
INFO  21:09:28,567 - #29 (
INFO  21:09:28,567 - #8 d
INFO  21:09:28,568 - #30 )
INFO  21:09:28,568 - #27 ;
INFO  21:09:28,568 - #21 }
INFO  21:09:28,568 - #21 }
INFO  21:09:28,568 - #21 }
INFO  21:09:28,569 - =====================SINTAKSNO_STABLO=========================
INFO  21:09:28,571 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:09:28,572 - ==============================================================
INFO  21:09:28,590 - Pocetak obrade programa Program na liniji 1
INFO  21:09:28,590 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:09:28,591 - Deklarisana konstanta c na liniji 2
INFO  21:09:28,591 - Deklarisana konstanta d na liniji 2
INFO  21:09:28,591 - Deklarisana konstanta g na liniji 2
INFO  21:09:28,591 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:09:28,591 - Deklarisana promenljiva e na liniji 3
INFO  21:09:28,592 - Pocetak obrade metode main na liniji 5
INFO  21:09:28,592 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:09:28,592 - Zavrsetak obrade programa Program na liniji 1
INFO  21:09:28,593 - ======================TABELA_SIMBOLA==========================
INFO  21:09:28,593 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:09:28,593 - ==============================================================
INFO  21:09:28,593 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:09:28,593 - ==============================================================
INFO  21:09:28,593 - ======================GENERISANJE_KODA========================
INFO  21:09:28,599 - Generisanje koda uspesno zavrseno!
INFO  21:09:28,599 - Generisanje izlaznog fajla test\program.obj
INFO  21:09:28,599 - ==============================================================
INFO  21:11:05,902 - Obrada ulaznog fajla test\program.mj
INFO  21:11:06,012 - #2 program
INFO  21:11:06,012 - #8 Program
INFO  21:11:06,012 - #5 const
INFO  21:11:06,013 - #8 int
INFO  21:11:06,014 - #8 c
INFO  21:11:06,015 - #24 =
INFO  21:11:06,015 - #9 10
INFO  21:11:06,015 - #28 ,
INFO  21:11:06,016 - #8 d
INFO  21:11:06,017 - #24 =
INFO  21:11:06,017 - #9 99
INFO  21:11:06,017 - #28 ,
INFO  21:11:06,017 - #8 g
INFO  21:11:06,017 - #24 =
INFO  21:11:06,017 - #9 2
INFO  21:11:06,017 - #27 ;
INFO  21:11:06,017 - #8 int
INFO  21:11:06,019 - #8 e
INFO  21:11:06,019 - #27 ;
INFO  21:11:06,020 - #20 {
INFO  21:11:06,021 - #6 void
INFO  21:11:06,021 - #8 main
INFO  21:11:06,021 - #29 (
INFO  21:11:06,022 - #30 )
INFO  21:11:06,023 - #20 {
INFO  21:11:06,023 - #8 e
INFO  21:11:06,023 - #24 =
INFO  21:11:06,023 - #9 3
INFO  21:11:06,023 - #27 ;
INFO  21:11:06,024 - #31 if
INFO  21:11:06,024 - #29 (
INFO  21:11:06,024 - #8 e
INFO  21:11:06,024 - #38 >
INFO  21:11:06,025 - #9 0
INFO  21:11:06,026 - #30 )
INFO  21:11:06,027 - #20 {
INFO  21:11:06,027 - #3 print
INFO  21:11:06,027 - #29 (
INFO  21:11:06,027 - #8 e
INFO  21:11:06,027 - #30 )
INFO  21:11:06,027 - #27 ;
INFO  21:11:06,028 - #21 }
INFO  21:11:06,028 - #32 else
INFO  21:11:06,029 - #20 {
INFO  21:11:06,029 - #3 print
INFO  21:11:06,029 - #29 (
INFO  21:11:06,029 - #8 d
INFO  21:11:06,029 - #30 )
INFO  21:11:06,029 - #27 ;
INFO  21:11:06,030 - #21 }
INFO  21:11:06,030 - #21 }
INFO  21:11:06,030 - #21 }
INFO  21:11:06,031 - =====================SINTAKSNO_STABLO=========================
INFO  21:11:06,033 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:11:06,034 - ==============================================================
INFO  21:11:06,048 - Pocetak obrade programa Program na liniji 1
INFO  21:11:06,049 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:11:06,050 - Deklarisana konstanta c na liniji 2
INFO  21:11:06,050 - Deklarisana konstanta d na liniji 2
INFO  21:11:06,050 - Deklarisana konstanta g na liniji 2
INFO  21:11:06,050 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:11:06,050 - Deklarisana promenljiva e na liniji 3
INFO  21:11:06,052 - Pocetak obrade metode main na liniji 5
INFO  21:11:06,052 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:11:06,052 - Zavrsetak obrade programa Program na liniji 1
INFO  21:11:06,052 - ======================TABELA_SIMBOLA==========================
INFO  21:11:06,053 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:11:06,053 - ==============================================================
INFO  21:11:06,053 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:11:06,053 - ==============================================================
INFO  21:11:06,053 - ======================GENERISANJE_KODA========================
INFO  21:11:06,073 - Generisanje koda uspesno zavrseno!
INFO  21:11:06,074 - Generisanje izlaznog fajla test\program.obj
INFO  21:11:06,074 - ==============================================================
INFO  21:11:09,707 - Obrada ulaznog fajla test\program.mj
INFO  21:11:09,809 - #2 program
INFO  21:11:09,809 - #8 Program
INFO  21:11:09,809 - #5 const
INFO  21:11:09,811 - #8 int
INFO  21:11:09,811 - #8 c
INFO  21:11:09,811 - #24 =
INFO  21:11:09,812 - #9 10
INFO  21:11:09,812 - #28 ,
INFO  21:11:09,813 - #8 d
INFO  21:11:09,813 - #24 =
INFO  21:11:09,813 - #9 99
INFO  21:11:09,814 - #28 ,
INFO  21:11:09,814 - #8 g
INFO  21:11:09,814 - #24 =
INFO  21:11:09,814 - #9 2
INFO  21:11:09,814 - #27 ;
INFO  21:11:09,814 - #8 int
INFO  21:11:09,816 - #8 e
INFO  21:11:09,816 - #27 ;
INFO  21:11:09,816 - #20 {
INFO  21:11:09,818 - #6 void
INFO  21:11:09,818 - #8 main
INFO  21:11:09,818 - #29 (
INFO  21:11:09,819 - #30 )
INFO  21:11:09,819 - #20 {
INFO  21:11:09,819 - #8 e
INFO  21:11:09,819 - #24 =
INFO  21:11:09,819 - #9 3
INFO  21:11:09,820 - #27 ;
INFO  21:11:09,820 - #31 if
INFO  21:11:09,820 - #29 (
INFO  21:11:09,821 - #8 e
INFO  21:11:09,821 - #38 >
INFO  21:11:09,821 - #9 0
INFO  21:11:09,822 - #30 )
INFO  21:11:09,823 - #20 {
INFO  21:11:09,823 - #3 print
INFO  21:11:09,823 - #29 (
INFO  21:11:09,823 - #8 e
INFO  21:11:09,823 - #30 )
INFO  21:11:09,823 - #27 ;
INFO  21:11:09,823 - #21 }
INFO  21:11:09,823 - #32 else
INFO  21:11:09,825 - #20 {
INFO  21:11:09,825 - #3 print
INFO  21:11:09,825 - #29 (
INFO  21:11:09,825 - #8 d
INFO  21:11:09,825 - #30 )
INFO  21:11:09,825 - #27 ;
INFO  21:11:09,825 - #21 }
INFO  21:11:09,825 - #21 }
INFO  21:11:09,826 - #21 }
INFO  21:11:09,827 - =====================SINTAKSNO_STABLO=========================
INFO  21:11:09,828 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:11:09,830 - ==============================================================
INFO  21:11:09,844 - Pocetak obrade programa Program na liniji 1
INFO  21:11:09,844 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:11:09,845 - Deklarisana konstanta c na liniji 2
INFO  21:11:09,845 - Deklarisana konstanta d na liniji 2
INFO  21:11:09,845 - Deklarisana konstanta g na liniji 2
INFO  21:11:09,846 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:11:09,846 - Deklarisana promenljiva e na liniji 3
INFO  21:11:09,846 - Pocetak obrade metode main na liniji 5
INFO  21:11:09,847 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:11:09,847 - Zavrsetak obrade programa Program na liniji 1
INFO  21:11:09,847 - ======================TABELA_SIMBOLA==========================
INFO  21:11:09,848 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:11:09,848 - ==============================================================
INFO  21:11:09,848 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:11:09,848 - ==============================================================
INFO  21:11:09,848 - ======================GENERISANJE_KODA========================
INFO  21:11:09,869 - Generisanje koda uspesno zavrseno!
INFO  21:11:09,870 - Generisanje izlaznog fajla test\program.obj
INFO  21:11:09,870 - ==============================================================
INFO  21:11:24,836 - Obrada ulaznog fajla test\program.mj
INFO  21:11:24,916 - #2 program
INFO  21:11:24,916 - #8 Program
INFO  21:11:24,916 - #5 const
INFO  21:11:24,917 - #8 int
INFO  21:11:24,917 - #8 c
INFO  21:11:24,918 - #24 =
INFO  21:11:24,918 - #9 10
INFO  21:11:24,918 - #28 ,
INFO  21:11:24,919 - #8 d
INFO  21:11:24,919 - #24 =
INFO  21:11:24,919 - #9 99
INFO  21:11:24,920 - #28 ,
INFO  21:11:24,920 - #8 g
INFO  21:11:24,920 - #24 =
INFO  21:11:24,920 - #9 2
INFO  21:11:24,920 - #27 ;
INFO  21:11:24,920 - #8 int
INFO  21:11:24,922 - #8 e
INFO  21:11:24,922 - #27 ;
INFO  21:11:24,922 - #20 {
INFO  21:11:24,923 - #6 void
INFO  21:11:24,923 - #8 main
INFO  21:11:24,923 - #29 (
INFO  21:11:24,924 - #30 )
INFO  21:11:24,924 - #20 {
INFO  21:11:24,925 - #8 e
INFO  21:11:24,925 - #24 =
INFO  21:11:24,925 - #9 3
INFO  21:11:24,925 - #27 ;
INFO  21:11:24,926 - #31 if
INFO  21:11:24,927 - #29 (
INFO  21:11:24,927 - #8 e
INFO  21:11:24,927 - #38 >
INFO  21:11:24,927 - #9 0
INFO  21:11:24,929 - #30 )
INFO  21:11:24,930 - #20 {
INFO  21:11:24,930 - #3 print
INFO  21:11:24,930 - #29 (
INFO  21:11:24,930 - #8 e
INFO  21:11:24,930 - #30 )
INFO  21:11:24,930 - #27 ;
INFO  21:11:24,930 - #21 }
INFO  21:11:24,930 - #32 else
INFO  21:11:24,932 - #20 {
INFO  21:11:24,932 - #3 print
INFO  21:11:24,932 - #29 (
INFO  21:11:24,932 - #8 d
INFO  21:11:24,932 - #30 )
INFO  21:11:24,932 - #27 ;
INFO  21:11:24,932 - #21 }
INFO  21:11:24,933 - #21 }
INFO  21:11:24,933 - #21 }
INFO  21:11:24,934 - =====================SINTAKSNO_STABLO=========================
INFO  21:11:24,935 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:11:24,936 - ==============================================================
INFO  21:11:24,952 - Pocetak obrade programa Program na liniji 1
INFO  21:11:24,952 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:11:24,953 - Deklarisana konstanta c na liniji 2
INFO  21:11:24,953 - Deklarisana konstanta d na liniji 2
INFO  21:11:24,953 - Deklarisana konstanta g na liniji 2
INFO  21:11:24,954 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:11:24,954 - Deklarisana promenljiva e na liniji 3
INFO  21:11:24,954 - Pocetak obrade metode main na liniji 5
INFO  21:11:24,955 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:11:24,955 - Zavrsetak obrade programa Program na liniji 1
INFO  21:11:24,955 - ======================TABELA_SIMBOLA==========================
INFO  21:11:24,955 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:11:24,955 - ==============================================================
INFO  21:11:24,955 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:11:24,956 - ==============================================================
INFO  21:11:24,956 - ======================GENERISANJE_KODA========================
INFO  21:11:24,961 - Generisanje koda uspesno zavrseno!
INFO  21:11:24,961 - Generisanje izlaznog fajla test\program.obj
INFO  21:11:24,961 - ==============================================================
INFO  21:11:27,311 - Obrada ulaznog fajla test\program.mj
INFO  21:11:27,404 - #2 program
INFO  21:11:27,404 - #8 Program
INFO  21:11:27,404 - #5 const
INFO  21:11:27,405 - #8 int
INFO  21:11:27,405 - #8 c
INFO  21:11:27,406 - #24 =
INFO  21:11:27,406 - #9 10
INFO  21:11:27,407 - #28 ,
INFO  21:11:27,408 - #8 d
INFO  21:11:27,408 - #24 =
INFO  21:11:27,408 - #9 99
INFO  21:11:27,408 - #28 ,
INFO  21:11:27,408 - #8 g
INFO  21:11:27,409 - #24 =
INFO  21:11:27,409 - #9 2
INFO  21:11:27,409 - #27 ;
INFO  21:11:27,409 - #8 int
INFO  21:11:27,410 - #8 e
INFO  21:11:27,410 - #27 ;
INFO  21:11:27,411 - #20 {
INFO  21:11:27,412 - #6 void
INFO  21:11:27,412 - #8 main
INFO  21:11:27,412 - #29 (
INFO  21:11:27,414 - #30 )
INFO  21:11:27,414 - #20 {
INFO  21:11:27,415 - #8 e
INFO  21:11:27,415 - #24 =
INFO  21:11:27,415 - #9 3
INFO  21:11:27,415 - #27 ;
INFO  21:11:27,416 - #31 if
INFO  21:11:27,416 - #29 (
INFO  21:11:27,417 - #8 e
INFO  21:11:27,417 - #38 >
INFO  21:11:27,417 - #9 0
INFO  21:11:27,419 - #30 )
INFO  21:11:27,419 - #20 {
INFO  21:11:27,420 - #3 print
INFO  21:11:27,420 - #29 (
INFO  21:11:27,420 - #8 e
INFO  21:11:27,420 - #30 )
INFO  21:11:27,420 - #27 ;
INFO  21:11:27,420 - #21 }
INFO  21:11:27,420 - #32 else
INFO  21:11:27,422 - #20 {
INFO  21:11:27,422 - #3 print
INFO  21:11:27,422 - #29 (
INFO  21:11:27,423 - #8 d
INFO  21:11:27,423 - #30 )
INFO  21:11:27,423 - #27 ;
INFO  21:11:27,423 - #21 }
INFO  21:11:27,423 - #21 }
INFO  21:11:27,423 - #21 }
INFO  21:11:27,424 - =====================SINTAKSNO_STABLO=========================
INFO  21:11:27,426 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:11:27,427 - ==============================================================
INFO  21:11:27,443 - Pocetak obrade programa Program na liniji 1
INFO  21:11:27,443 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:11:27,445 - Deklarisana konstanta c na liniji 2
INFO  21:11:27,445 - Deklarisana konstanta d na liniji 2
INFO  21:11:27,445 - Deklarisana konstanta g na liniji 2
INFO  21:11:27,445 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:11:27,445 - Deklarisana promenljiva e na liniji 3
INFO  21:11:27,447 - Pocetak obrade metode main na liniji 5
INFO  21:11:27,447 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:11:27,448 - Zavrsetak obrade programa Program na liniji 1
INFO  21:11:27,448 - ======================TABELA_SIMBOLA==========================
INFO  21:11:27,449 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:11:27,449 - ==============================================================
INFO  21:11:27,449 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:11:27,449 - ==============================================================
INFO  21:11:27,449 - ======================GENERISANJE_KODA========================
INFO  21:11:27,468 - Generisanje koda uspesno zavrseno!
INFO  21:11:27,469 - Generisanje izlaznog fajla test\program.obj
INFO  21:11:27,469 - ==============================================================
INFO  21:11:39,512 - Obrada ulaznog fajla test\program.mj
INFO  21:11:39,600 - #2 program
INFO  21:11:39,600 - #8 Program
INFO  21:11:39,600 - #5 const
INFO  21:11:39,601 - #8 int
INFO  21:11:39,601 - #8 c
INFO  21:11:39,602 - #24 =
INFO  21:11:39,602 - #9 10
INFO  21:11:39,602 - #28 ,
INFO  21:11:39,603 - #8 d
INFO  21:11:39,603 - #24 =
INFO  21:11:39,603 - #9 99
INFO  21:11:39,603 - #28 ,
INFO  21:11:39,603 - #8 g
INFO  21:11:39,604 - #24 =
INFO  21:11:39,604 - #9 2
INFO  21:11:39,604 - #27 ;
INFO  21:11:39,604 - #8 int
INFO  21:11:39,605 - #8 e
INFO  21:11:39,605 - #27 ;
INFO  21:11:39,606 - #20 {
INFO  21:11:39,607 - #6 void
INFO  21:11:39,607 - #8 main
INFO  21:11:39,607 - #29 (
INFO  21:11:39,608 - #30 )
INFO  21:11:39,608 - #20 {
INFO  21:11:39,608 - #8 e
INFO  21:11:39,609 - #24 =
INFO  21:11:39,609 - #9 3
INFO  21:11:39,609 - #27 ;
INFO  21:11:39,609 - #31 if
INFO  21:11:39,610 - #29 (
INFO  21:11:39,610 - #8 e
INFO  21:11:39,610 - #38 >
INFO  21:11:39,610 - #9 0
INFO  21:11:39,611 - #30 )
INFO  21:11:39,612 - #20 {
INFO  21:11:39,612 - #3 print
INFO  21:11:39,612 - #29 (
INFO  21:11:39,612 - #8 e
INFO  21:11:39,612 - #30 )
INFO  21:11:39,612 - #27 ;
INFO  21:11:39,612 - #21 }
INFO  21:11:39,612 - #32 else
INFO  21:11:39,613 - #20 {
INFO  21:11:39,613 - #3 print
INFO  21:11:39,613 - #29 (
INFO  21:11:39,614 - #8 d
INFO  21:11:39,614 - #30 )
INFO  21:11:39,614 - #27 ;
INFO  21:11:39,614 - #21 }
INFO  21:11:39,614 - #21 }
INFO  21:11:39,614 - #21 }
INFO  21:11:39,615 - =====================SINTAKSNO_STABLO=========================
INFO  21:11:39,619 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:11:39,620 - ==============================================================
INFO  21:11:39,633 - Pocetak obrade programa Program na liniji 1
INFO  21:11:39,634 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:11:39,634 - Deklarisana konstanta c na liniji 2
INFO  21:11:39,635 - Deklarisana konstanta d na liniji 2
INFO  21:11:39,635 - Deklarisana konstanta g na liniji 2
INFO  21:11:39,635 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:11:39,635 - Deklarisana promenljiva e na liniji 3
INFO  21:11:39,635 - Pocetak obrade metode main na liniji 5
INFO  21:11:39,636 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:11:39,636 - Zavrsetak obrade programa Program na liniji 1
INFO  21:11:39,636 - ======================TABELA_SIMBOLA==========================
INFO  21:11:39,637 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:11:39,637 - ==============================================================
INFO  21:11:39,637 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:11:39,637 - ==============================================================
INFO  21:11:39,637 - ======================GENERISANJE_KODA========================
INFO  21:11:39,642 - Generisanje koda uspesno zavrseno!
INFO  21:11:39,642 - Generisanje izlaznog fajla test\program.obj
INFO  21:11:39,642 - ==============================================================
INFO  21:11:41,755 - Obrada ulaznog fajla test\program.mj
INFO  21:11:41,856 - #2 program
INFO  21:11:41,856 - #8 Program
INFO  21:11:41,856 - #5 const
INFO  21:11:41,857 - #8 int
INFO  21:11:41,857 - #8 c
INFO  21:11:41,858 - #24 =
INFO  21:11:41,858 - #9 10
INFO  21:11:41,858 - #28 ,
INFO  21:11:41,860 - #8 d
INFO  21:11:41,860 - #24 =
INFO  21:11:41,860 - #9 99
INFO  21:11:41,860 - #28 ,
INFO  21:11:41,860 - #8 g
INFO  21:11:41,860 - #24 =
INFO  21:11:41,860 - #9 2
INFO  21:11:41,861 - #27 ;
INFO  21:11:41,861 - #8 int
INFO  21:11:41,862 - #8 e
INFO  21:11:41,862 - #27 ;
INFO  21:11:41,863 - #20 {
INFO  21:11:41,864 - #6 void
INFO  21:11:41,864 - #8 main
INFO  21:11:41,864 - #29 (
INFO  21:11:41,865 - #30 )
INFO  21:11:41,865 - #20 {
INFO  21:11:41,865 - #8 e
INFO  21:11:41,865 - #24 =
INFO  21:11:41,866 - #9 3
INFO  21:11:41,866 - #27 ;
INFO  21:11:41,866 - #31 if
INFO  21:11:41,867 - #29 (
INFO  21:11:41,868 - #8 e
INFO  21:11:41,868 - #38 >
INFO  21:11:41,868 - #9 0
INFO  21:11:41,870 - #30 )
INFO  21:11:41,870 - #20 {
INFO  21:11:41,871 - #3 print
INFO  21:11:41,871 - #29 (
INFO  21:11:41,871 - #8 e
INFO  21:11:41,871 - #30 )
INFO  21:11:41,871 - #27 ;
INFO  21:11:41,871 - #21 }
INFO  21:11:41,871 - #32 else
INFO  21:11:41,873 - #20 {
INFO  21:11:41,873 - #3 print
INFO  21:11:41,873 - #29 (
INFO  21:11:41,873 - #8 d
INFO  21:11:41,873 - #30 )
INFO  21:11:41,873 - #27 ;
INFO  21:11:41,873 - #21 }
INFO  21:11:41,873 - #21 }
INFO  21:11:41,874 - #21 }
INFO  21:11:41,874 - =====================SINTAKSNO_STABLO=========================
INFO  21:11:41,876 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:11:41,877 - ==============================================================
INFO  21:11:41,891 - Pocetak obrade programa Program na liniji 1
INFO  21:11:41,891 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:11:41,892 - Deklarisana konstanta c na liniji 2
INFO  21:11:41,892 - Deklarisana konstanta d na liniji 2
INFO  21:11:41,892 - Deklarisana konstanta g na liniji 2
INFO  21:11:41,893 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:11:41,893 - Deklarisana promenljiva e na liniji 3
INFO  21:11:41,894 - Pocetak obrade metode main na liniji 5
INFO  21:11:41,894 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:11:41,894 - Zavrsetak obrade programa Program na liniji 1
INFO  21:11:41,895 - ======================TABELA_SIMBOLA==========================
INFO  21:11:41,895 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:11:41,895 - ==============================================================
INFO  21:11:41,895 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:11:41,895 - ==============================================================
INFO  21:11:41,896 - ======================GENERISANJE_KODA========================
INFO  21:11:41,917 - Generisanje koda uspesno zavrseno!
INFO  21:11:41,917 - Generisanje izlaznog fajla test\program.obj
INFO  21:11:41,918 - ==============================================================
INFO  21:12:12,132 - Obrada ulaznog fajla test\program.mj
INFO  21:12:12,221 - #2 program
INFO  21:12:12,221 - #8 Program
INFO  21:12:12,221 - #5 const
INFO  21:12:12,222 - #8 int
INFO  21:12:12,222 - #8 c
INFO  21:12:12,223 - #24 =
INFO  21:12:12,223 - #9 10
INFO  21:12:12,223 - #28 ,
INFO  21:12:12,224 - #8 d
INFO  21:12:12,224 - #24 =
INFO  21:12:12,224 - #9 99
INFO  21:12:12,225 - #28 ,
INFO  21:12:12,225 - #8 g
INFO  21:12:12,225 - #24 =
INFO  21:12:12,225 - #9 2
INFO  21:12:12,226 - #27 ;
INFO  21:12:12,226 - #8 int
INFO  21:12:12,227 - #8 e
INFO  21:12:12,227 - #27 ;
INFO  21:12:12,228 - #20 {
INFO  21:12:12,229 - #6 void
INFO  21:12:12,229 - #8 main
INFO  21:12:12,229 - #29 (
INFO  21:12:12,230 - #30 )
INFO  21:12:12,230 - #20 {
INFO  21:12:12,230 - #8 e
INFO  21:12:12,230 - #24 =
INFO  21:12:12,230 - #9 3
INFO  21:12:12,230 - #27 ;
INFO  21:12:12,231 - #31 if
INFO  21:12:12,231 - #29 (
INFO  21:12:12,231 - #8 e
INFO  21:12:12,231 - #38 >
INFO  21:12:12,232 - #9 0
INFO  21:12:12,233 - #30 )
INFO  21:12:12,234 - #20 {
INFO  21:12:12,234 - #3 print
INFO  21:12:12,234 - #29 (
INFO  21:12:12,234 - #8 e
INFO  21:12:12,234 - #30 )
INFO  21:12:12,234 - #27 ;
INFO  21:12:12,235 - #21 }
INFO  21:12:12,235 - #32 else
INFO  21:12:12,236 - #20 {
INFO  21:12:12,236 - #3 print
INFO  21:12:12,236 - #29 (
INFO  21:12:12,236 - #8 d
INFO  21:12:12,236 - #30 )
INFO  21:12:12,237 - #27 ;
INFO  21:12:12,237 - #21 }
INFO  21:12:12,237 - #21 }
INFO  21:12:12,237 - #21 }
INFO  21:12:12,238 - =====================SINTAKSNO_STABLO=========================
INFO  21:12:12,240 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:12:12,241 - ==============================================================
INFO  21:12:12,254 - Pocetak obrade programa Program na liniji 1
INFO  21:12:12,255 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:12:12,255 - Deklarisana konstanta c na liniji 2
INFO  21:12:12,255 - Deklarisana konstanta d na liniji 2
INFO  21:12:12,255 - Deklarisana konstanta g na liniji 2
INFO  21:12:12,256 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:12:12,256 - Deklarisana promenljiva e na liniji 3
INFO  21:12:12,256 - Pocetak obrade metode main na liniji 5
INFO  21:12:12,257 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:12:12,257 - Zavrsetak obrade programa Program na liniji 1
INFO  21:12:12,257 - ======================TABELA_SIMBOLA==========================
INFO  21:12:12,257 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:12:12,257 - ==============================================================
INFO  21:12:12,258 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:12:12,258 - ==============================================================
INFO  21:12:12,258 - ======================GENERISANJE_KODA========================
INFO  21:12:12,263 - Generisanje koda uspesno zavrseno!
INFO  21:12:12,263 - Generisanje izlaznog fajla test\program.obj
INFO  21:12:12,263 - ==============================================================
INFO  21:12:15,950 - Obrada ulaznog fajla test\program.mj
INFO  21:12:16,046 - #2 program
INFO  21:12:16,046 - #8 Program
INFO  21:12:16,046 - #5 const
INFO  21:12:16,048 - #8 int
INFO  21:12:16,048 - #8 c
INFO  21:12:16,049 - #24 =
INFO  21:12:16,049 - #9 10
INFO  21:12:16,050 - #28 ,
INFO  21:12:16,051 - #8 d
INFO  21:12:16,051 - #24 =
INFO  21:12:16,051 - #9 99
INFO  21:12:16,051 - #28 ,
INFO  21:12:16,051 - #8 g
INFO  21:12:16,051 - #24 =
INFO  21:12:16,051 - #9 2
INFO  21:12:16,051 - #27 ;
INFO  21:12:16,052 - #8 int
INFO  21:12:16,053 - #8 e
INFO  21:12:16,053 - #27 ;
INFO  21:12:16,053 - #20 {
INFO  21:12:16,054 - #6 void
INFO  21:12:16,055 - #8 main
INFO  21:12:16,055 - #29 (
INFO  21:12:16,056 - #30 )
INFO  21:12:16,056 - #20 {
INFO  21:12:16,056 - #8 e
INFO  21:12:16,056 - #24 =
INFO  21:12:16,056 - #9 3
INFO  21:12:16,056 - #27 ;
INFO  21:12:16,057 - #31 if
INFO  21:12:16,057 - #29 (
INFO  21:12:16,057 - #8 e
INFO  21:12:16,057 - #38 >
INFO  21:12:16,057 - #9 0
INFO  21:12:16,059 - #30 )
INFO  21:12:16,059 - #20 {
INFO  21:12:16,059 - #3 print
INFO  21:12:16,060 - #29 (
INFO  21:12:16,060 - #8 e
INFO  21:12:16,060 - #30 )
INFO  21:12:16,060 - #27 ;
INFO  21:12:16,060 - #21 }
INFO  21:12:16,060 - #32 else
INFO  21:12:16,061 - #20 {
INFO  21:12:16,061 - #3 print
INFO  21:12:16,062 - #29 (
INFO  21:12:16,062 - #8 d
INFO  21:12:16,062 - #30 )
INFO  21:12:16,062 - #27 ;
INFO  21:12:16,062 - #21 }
INFO  21:12:16,062 - #21 }
INFO  21:12:16,063 - #21 }
INFO  21:12:16,063 - =====================SINTAKSNO_STABLO=========================
INFO  21:12:16,065 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:12:16,066 - ==============================================================
INFO  21:12:16,080 - Pocetak obrade programa Program na liniji 1
INFO  21:12:16,080 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:12:16,081 - Deklarisana konstanta c na liniji 2
INFO  21:12:16,081 - Deklarisana konstanta d na liniji 2
INFO  21:12:16,081 - Deklarisana konstanta g na liniji 2
INFO  21:12:16,081 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:12:16,081 - Deklarisana promenljiva e na liniji 3
INFO  21:12:16,082 - Pocetak obrade metode main na liniji 5
INFO  21:12:16,083 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:12:16,083 - Zavrsetak obrade programa Program na liniji 1
INFO  21:12:16,083 - ======================TABELA_SIMBOLA==========================
INFO  21:12:16,083 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:12:16,083 - ==============================================================
INFO  21:12:16,083 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:12:16,084 - ==============================================================
INFO  21:12:16,084 - ======================GENERISANJE_KODA========================
INFO  21:12:30,735 - Obrada ulaznog fajla test\program.mj
INFO  21:12:30,834 - #2 program
INFO  21:12:30,834 - #8 Program
INFO  21:12:30,834 - #5 const
INFO  21:12:30,835 - #8 int
INFO  21:12:30,836 - #8 c
INFO  21:12:30,837 - #24 =
INFO  21:12:30,837 - #9 10
INFO  21:12:30,837 - #28 ,
INFO  21:12:30,839 - #8 d
INFO  21:12:30,839 - #24 =
INFO  21:12:30,839 - #9 99
INFO  21:12:30,839 - #28 ,
INFO  21:12:30,839 - #8 g
INFO  21:12:30,839 - #24 =
INFO  21:12:30,840 - #9 2
INFO  21:12:30,840 - #27 ;
INFO  21:12:30,840 - #8 int
INFO  21:12:30,841 - #8 e
INFO  21:12:30,841 - #27 ;
INFO  21:12:30,842 - #20 {
INFO  21:12:30,843 - #6 void
INFO  21:12:30,843 - #8 main
INFO  21:12:30,843 - #29 (
INFO  21:12:30,844 - #30 )
INFO  21:12:30,844 - #20 {
INFO  21:12:30,845 - #8 e
INFO  21:12:30,845 - #24 =
INFO  21:12:30,845 - #9 3
INFO  21:12:30,845 - #27 ;
INFO  21:12:30,847 - #31 if
INFO  21:12:30,847 - #29 (
INFO  21:12:30,847 - #8 e
INFO  21:12:30,848 - #38 >
INFO  21:12:30,848 - #9 0
INFO  21:12:30,850 - #30 )
INFO  21:12:30,850 - #20 {
INFO  21:12:30,850 - #3 print
INFO  21:12:30,851 - #29 (
INFO  21:12:30,851 - #8 e
INFO  21:12:30,851 - #30 )
INFO  21:12:30,851 - #27 ;
INFO  21:12:30,851 - #21 }
INFO  21:12:30,851 - #32 else
INFO  21:12:30,853 - #20 {
INFO  21:12:30,853 - #3 print
INFO  21:12:30,853 - #29 (
INFO  21:12:30,853 - #8 d
INFO  21:12:30,853 - #30 )
INFO  21:12:30,853 - #27 ;
INFO  21:12:30,853 - #21 }
INFO  21:12:30,854 - #21 }
INFO  21:12:30,854 - #21 }
INFO  21:12:30,855 - =====================SINTAKSNO_STABLO=========================
INFO  21:12:30,857 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:12:30,857 - ==============================================================
INFO  21:12:30,875 - Pocetak obrade programa Program na liniji 1
INFO  21:12:30,875 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:12:30,877 - Deklarisana konstanta c na liniji 2
INFO  21:12:30,877 - Deklarisana konstanta d na liniji 2
INFO  21:12:30,877 - Deklarisana konstanta g na liniji 2
INFO  21:12:30,877 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:12:30,877 - Deklarisana promenljiva e na liniji 3
INFO  21:12:30,878 - Pocetak obrade metode main na liniji 5
INFO  21:12:30,879 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:12:30,879 - Zavrsetak obrade programa Program na liniji 1
INFO  21:12:30,879 - ======================TABELA_SIMBOLA==========================
INFO  21:12:30,880 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:12:30,880 - ==============================================================
INFO  21:12:30,880 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:12:30,881 - ==============================================================
INFO  21:12:30,881 - ======================GENERISANJE_KODA========================
INFO  21:12:30,887 - Generisanje koda uspesno zavrseno!
INFO  21:12:30,887 - Generisanje izlaznog fajla test\program.obj
INFO  21:12:30,888 - ==============================================================
INFO  21:13:33,390 - Obrada ulaznog fajla test\program.mj
INFO  21:13:33,471 - #2 program
INFO  21:13:33,472 - #8 Program
INFO  21:13:33,472 - #5 const
INFO  21:13:33,473 - #8 int
INFO  21:13:33,473 - #8 c
INFO  21:13:33,473 - #24 =
INFO  21:13:33,474 - #9 10
INFO  21:13:33,474 - #28 ,
INFO  21:13:33,475 - #8 d
INFO  21:13:33,475 - #24 =
INFO  21:13:33,475 - #9 99
INFO  21:13:33,476 - #28 ,
INFO  21:13:33,476 - #8 g
INFO  21:13:33,476 - #24 =
INFO  21:13:33,476 - #9 2
INFO  21:13:33,476 - #27 ;
INFO  21:13:33,477 - #8 int
INFO  21:13:33,478 - #8 e
INFO  21:13:33,478 - #27 ;
INFO  21:13:33,478 - #20 {
INFO  21:13:33,480 - #6 void
INFO  21:13:33,480 - #8 main
INFO  21:13:33,480 - #29 (
INFO  21:13:33,481 - #30 )
INFO  21:13:33,481 - #20 {
INFO  21:13:33,481 - #8 e
INFO  21:13:33,481 - #24 =
INFO  21:13:33,481 - #9 3
INFO  21:13:33,481 - #27 ;
INFO  21:13:33,482 - #31 if
INFO  21:13:33,482 - #29 (
INFO  21:13:33,482 - #8 e
INFO  21:13:33,482 - #38 >
INFO  21:13:33,482 - #9 0
INFO  21:13:33,483 - #30 )
INFO  21:13:33,484 - #20 {
INFO  21:13:33,484 - #3 print
INFO  21:13:33,484 - #29 (
INFO  21:13:33,484 - #8 e
INFO  21:13:33,484 - #30 )
INFO  21:13:33,484 - #27 ;
INFO  21:13:33,484 - #21 }
INFO  21:13:33,485 - #32 else
INFO  21:13:33,485 - #20 {
INFO  21:13:33,486 - #3 print
INFO  21:13:33,486 - #29 (
INFO  21:13:33,486 - #8 d
INFO  21:13:33,486 - #30 )
INFO  21:13:33,486 - #27 ;
INFO  21:13:33,487 - #21 }
INFO  21:13:33,487 - #21 }
INFO  21:13:33,488 - #21 }
INFO  21:13:33,489 - =====================SINTAKSNO_STABLO=========================
INFO  21:13:33,491 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:13:33,494 - ==============================================================
INFO  21:13:33,507 - Pocetak obrade programa Program na liniji 1
INFO  21:13:33,507 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:13:33,508 - Deklarisana konstanta c na liniji 2
INFO  21:13:33,508 - Deklarisana konstanta d na liniji 2
INFO  21:13:33,508 - Deklarisana konstanta g na liniji 2
INFO  21:13:33,508 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:13:33,508 - Deklarisana promenljiva e na liniji 3
INFO  21:13:33,509 - Pocetak obrade metode main na liniji 5
INFO  21:13:33,509 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:13:33,510 - Zavrsetak obrade programa Program na liniji 1
INFO  21:13:33,510 - ======================TABELA_SIMBOLA==========================
INFO  21:13:33,510 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:13:33,510 - ==============================================================
INFO  21:13:33,510 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:13:33,510 - ==============================================================
INFO  21:13:33,510 - ======================GENERISANJE_KODA========================
INFO  21:13:33,516 - Generisanje koda uspesno zavrseno!
INFO  21:13:33,517 - Generisanje izlaznog fajla test\program.obj
INFO  21:13:33,517 - ==============================================================
INFO  21:13:40,783 - Obrada ulaznog fajla test\program.mj
INFO  21:13:40,875 - #2 program
INFO  21:13:40,875 - #8 Program
INFO  21:13:40,875 - #5 const
INFO  21:13:40,876 - #8 int
INFO  21:13:40,876 - #8 c
INFO  21:13:40,877 - #24 =
INFO  21:13:40,877 - #9 10
INFO  21:13:40,877 - #28 ,
INFO  21:13:40,879 - #8 d
INFO  21:13:40,879 - #24 =
INFO  21:13:40,879 - #9 99
INFO  21:13:40,879 - #28 ,
INFO  21:13:40,879 - #8 g
INFO  21:13:40,879 - #24 =
INFO  21:13:40,879 - #9 2
INFO  21:13:40,879 - #27 ;
INFO  21:13:40,880 - #8 int
INFO  21:13:40,881 - #8 e
INFO  21:13:40,881 - #27 ;
INFO  21:13:40,882 - #20 {
INFO  21:13:40,883 - #6 void
INFO  21:13:40,884 - #8 main
INFO  21:13:40,884 - #29 (
INFO  21:13:40,885 - #30 )
INFO  21:13:40,885 - #20 {
INFO  21:13:40,885 - #8 e
INFO  21:13:40,885 - #24 =
INFO  21:13:40,885 - #9 3
INFO  21:13:40,885 - #27 ;
INFO  21:13:40,886 - #31 if
INFO  21:13:40,887 - #29 (
INFO  21:13:40,887 - #8 e
INFO  21:13:40,887 - #38 >
INFO  21:13:40,887 - #9 0
INFO  21:13:40,890 - #30 )
INFO  21:13:40,890 - #20 {
INFO  21:13:40,890 - #3 print
INFO  21:13:40,891 - #29 (
INFO  21:13:40,891 - #8 e
INFO  21:13:40,891 - #30 )
INFO  21:13:40,891 - #27 ;
INFO  21:13:40,891 - #21 }
INFO  21:13:40,891 - #32 else
INFO  21:13:40,893 - #20 {
INFO  21:13:40,893 - #3 print
INFO  21:13:40,893 - #29 (
INFO  21:13:40,893 - #8 d
INFO  21:13:40,893 - #30 )
INFO  21:13:40,894 - #27 ;
INFO  21:13:40,894 - #21 }
INFO  21:13:40,894 - #21 }
INFO  21:13:40,894 - #21 }
INFO  21:13:40,895 - =====================SINTAKSNO_STABLO=========================
INFO  21:13:40,898 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:13:40,898 - ==============================================================
INFO  21:13:40,911 - Pocetak obrade programa Program na liniji 1
INFO  21:13:40,912 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:13:40,913 - Deklarisana konstanta c na liniji 2
INFO  21:13:40,913 - Deklarisana konstanta d na liniji 2
INFO  21:13:40,913 - Deklarisana konstanta g na liniji 2
INFO  21:13:40,914 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:13:40,914 - Deklarisana promenljiva e na liniji 3
INFO  21:13:40,914 - Pocetak obrade metode main na liniji 5
INFO  21:13:40,915 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:13:40,915 - Zavrsetak obrade programa Program na liniji 1
INFO  21:13:40,915 - ======================TABELA_SIMBOLA==========================
INFO  21:13:40,915 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:13:40,916 - ==============================================================
INFO  21:13:40,916 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:13:40,916 - ==============================================================
INFO  21:13:40,916 - ======================GENERISANJE_KODA========================
INFO  21:13:40,920 - Generisanje koda uspesno zavrseno!
INFO  21:13:40,921 - Generisanje izlaznog fajla test\program.obj
INFO  21:13:40,921 - ==============================================================
INFO  21:14:06,946 - Obrada ulaznog fajla test\program.mj
INFO  21:14:07,024 - #2 program
INFO  21:14:07,025 - #8 Program
INFO  21:14:07,025 - #5 const
INFO  21:14:07,026 - #8 int
INFO  21:14:07,026 - #8 c
INFO  21:14:07,027 - #24 =
INFO  21:14:07,027 - #9 10
INFO  21:14:07,027 - #28 ,
INFO  21:14:07,028 - #8 d
INFO  21:14:07,028 - #24 =
INFO  21:14:07,028 - #9 99
INFO  21:14:07,028 - #28 ,
INFO  21:14:07,029 - #8 g
INFO  21:14:07,029 - #24 =
INFO  21:14:07,029 - #9 2
INFO  21:14:07,029 - #27 ;
INFO  21:14:07,029 - #8 int
INFO  21:14:07,031 - #8 e
INFO  21:14:07,031 - #27 ;
INFO  21:14:07,031 - #20 {
INFO  21:14:07,033 - #6 void
INFO  21:14:07,033 - #8 main
INFO  21:14:07,033 - #29 (
INFO  21:14:07,034 - #30 )
INFO  21:14:07,034 - #20 {
INFO  21:14:07,034 - #8 e
INFO  21:14:07,034 - #24 =
INFO  21:14:07,034 - #16 -
INFO  21:14:07,034 - #9 3
INFO  21:14:07,034 - #27 ;
INFO  21:14:07,035 - #31 if
INFO  21:14:07,035 - #29 (
INFO  21:14:07,036 - #8 e
INFO  21:14:07,036 - #38 >
INFO  21:14:07,036 - #9 0
INFO  21:14:07,037 - #30 )
INFO  21:14:07,038 - #20 {
INFO  21:14:07,038 - #3 print
INFO  21:14:07,038 - #29 (
INFO  21:14:07,038 - #8 e
INFO  21:14:07,038 - #30 )
INFO  21:14:07,038 - #27 ;
INFO  21:14:07,038 - #21 }
INFO  21:14:07,038 - #32 else
INFO  21:14:07,039 - #20 {
INFO  21:14:07,039 - #3 print
INFO  21:14:07,039 - #29 (
INFO  21:14:07,040 - #8 d
INFO  21:14:07,040 - #30 )
INFO  21:14:07,040 - #27 ;
INFO  21:14:07,040 - #21 }
INFO  21:14:07,040 - #21 }
INFO  21:14:07,040 - #21 }
INFO  21:14:07,041 - =====================SINTAKSNO_STABLO=========================
INFO  21:14:07,043 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:14:07,044 - ==============================================================
INFO  21:14:07,058 - Pocetak obrade programa Program na liniji 1
INFO  21:14:07,059 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:14:07,060 - Deklarisana konstanta c na liniji 2
INFO  21:14:07,060 - Deklarisana konstanta d na liniji 2
INFO  21:14:07,060 - Deklarisana konstanta g na liniji 2
INFO  21:14:07,060 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:14:07,060 - Deklarisana promenljiva e na liniji 3
INFO  21:14:07,062 - Pocetak obrade metode main na liniji 5
INFO  21:14:07,063 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:14:07,063 - Zavrsetak obrade programa Program na liniji 1
INFO  21:14:07,063 - ======================TABELA_SIMBOLA==========================
INFO  21:14:07,064 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:14:07,064 - ==============================================================
INFO  21:14:07,064 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:14:07,064 - ==============================================================
INFO  21:14:07,064 - ======================GENERISANJE_KODA========================
INFO  21:14:07,070 - Generisanje koda uspesno zavrseno!
INFO  21:14:07,070 - Generisanje izlaznog fajla test\program.obj
INFO  21:14:07,070 - ==============================================================
INFO  21:16:57,992 - Obrada ulaznog fajla test\program.mj
INFO  21:16:58,068 - #2 program
INFO  21:16:58,068 - #8 Program
INFO  21:16:58,069 - #5 const
INFO  21:16:58,069 - #8 int
INFO  21:16:58,069 - #8 c
INFO  21:16:58,070 - #24 =
INFO  21:16:58,070 - #9 10
INFO  21:16:58,070 - #28 ,
INFO  21:16:58,071 - #8 d
INFO  21:16:58,071 - #24 =
INFO  21:16:58,071 - #9 99
INFO  21:16:58,071 - #28 ,
INFO  21:16:58,072 - #8 g
INFO  21:16:58,072 - #24 =
INFO  21:16:58,072 - #9 2
INFO  21:16:58,072 - #27 ;
INFO  21:16:58,072 - #8 int
INFO  21:16:58,073 - #8 e
INFO  21:16:58,073 - #27 ;
INFO  21:16:58,074 - #20 {
INFO  21:16:58,076 - #6 void
INFO  21:16:58,076 - #8 main
INFO  21:16:58,076 - #29 (
INFO  21:16:58,077 - #30 )
INFO  21:16:58,077 - #20 {
INFO  21:16:58,077 - #8 e
INFO  21:16:58,077 - #24 =
INFO  21:16:58,077 - #16 -
INFO  21:16:58,078 - #9 3
INFO  21:16:58,078 - #27 ;
INFO  21:16:58,078 - #31 if
INFO  21:16:58,079 - #29 (
INFO  21:16:58,079 - #8 e
INFO  21:16:58,079 - #38 >
INFO  21:16:58,079 - #9 0
INFO  21:16:58,080 - #14 ||
INFO  21:16:58,081 - #8 e
INFO  21:16:58,081 - #40 <
INFO  21:16:58,081 - #9 10
INFO  21:16:58,082 - #30 )
INFO  21:16:58,082 - #20 {
INFO  21:16:58,082 - #3 print
INFO  21:16:58,083 - #29 (
INFO  21:16:58,083 - #8 e
INFO  21:16:58,083 - #30 )
INFO  21:16:58,084 - #27 ;
INFO  21:16:58,084 - #21 }
INFO  21:16:58,084 - #32 else
INFO  21:16:58,085 - #20 {
INFO  21:16:58,085 - #3 print
INFO  21:16:58,086 - #29 (
INFO  21:16:58,086 - #8 d
INFO  21:16:58,086 - #30 )
INFO  21:16:58,086 - #27 ;
INFO  21:16:58,086 - #21 }
INFO  21:16:58,087 - #21 }
INFO  21:16:58,087 - #21 }
INFO  21:16:58,088 - =====================SINTAKSNO_STABLO=========================
INFO  21:16:58,090 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:16:58,090 - ==============================================================
INFO  21:16:58,107 - Pocetak obrade programa Program na liniji 1
INFO  21:16:58,107 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:16:58,108 - Deklarisana konstanta c na liniji 2
INFO  21:16:58,108 - Deklarisana konstanta d na liniji 2
INFO  21:16:58,109 - Deklarisana konstanta g na liniji 2
INFO  21:16:58,109 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:16:58,109 - Deklarisana promenljiva e na liniji 3
INFO  21:16:58,110 - Pocetak obrade metode main na liniji 5
INFO  21:16:58,110 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:16:58,110 - Zavrsetak obrade programa Program na liniji 1
INFO  21:16:58,111 - ======================TABELA_SIMBOLA==========================
INFO  21:16:58,111 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:16:58,111 - ==============================================================
INFO  21:16:58,111 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:16:58,111 - ==============================================================
INFO  21:16:58,113 - ======================GENERISANJE_KODA========================
ERROR 21:16:58,119 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:16:58,120 - Generisanje koda neuspesno!
INFO  21:16:58,120 - ==============================================================
INFO  21:17:04,015 - Obrada ulaznog fajla test\program.mj
INFO  21:17:04,111 - #2 program
INFO  21:17:04,112 - #8 Program
INFO  21:17:04,112 - #5 const
INFO  21:17:04,113 - #8 int
INFO  21:17:04,113 - #8 c
INFO  21:17:04,114 - #24 =
INFO  21:17:04,114 - #9 10
INFO  21:17:04,114 - #28 ,
INFO  21:17:04,116 - #8 d
INFO  21:17:04,116 - #24 =
INFO  21:17:04,116 - #9 99
INFO  21:17:04,116 - #28 ,
INFO  21:17:04,117 - #8 g
INFO  21:17:04,117 - #24 =
INFO  21:17:04,117 - #9 2
INFO  21:17:04,117 - #27 ;
INFO  21:17:04,117 - #8 int
INFO  21:17:04,119 - #8 e
INFO  21:17:04,119 - #27 ;
INFO  21:17:04,119 - #20 {
INFO  21:17:04,121 - #6 void
INFO  21:17:04,121 - #8 main
INFO  21:17:04,121 - #29 (
INFO  21:17:04,122 - #30 )
INFO  21:17:04,122 - #20 {
INFO  21:17:04,123 - #8 e
INFO  21:17:04,123 - #24 =
INFO  21:17:04,123 - #16 -
INFO  21:17:04,123 - #9 3
INFO  21:17:04,123 - #27 ;
INFO  21:17:04,124 - #31 if
INFO  21:17:04,125 - #29 (
INFO  21:17:04,125 - #8 e
INFO  21:17:04,125 - #38 >
INFO  21:17:04,126 - #9 0
INFO  21:17:04,128 - #14 ||
INFO  21:17:04,129 - #8 e
INFO  21:17:04,129 - #40 <
INFO  21:17:04,129 - #9 10
INFO  21:17:04,130 - #30 )
INFO  21:17:04,130 - #20 {
INFO  21:17:04,130 - #3 print
INFO  21:17:04,130 - #29 (
INFO  21:17:04,130 - #8 e
INFO  21:17:04,130 - #30 )
INFO  21:17:04,131 - #27 ;
INFO  21:17:04,131 - #21 }
INFO  21:17:04,131 - #32 else
INFO  21:17:04,132 - #20 {
INFO  21:17:04,132 - #3 print
INFO  21:17:04,132 - #29 (
INFO  21:17:04,133 - #8 d
INFO  21:17:04,133 - #30 )
INFO  21:17:04,133 - #27 ;
INFO  21:17:04,133 - #21 }
INFO  21:17:04,133 - #21 }
INFO  21:17:04,133 - #21 }
INFO  21:17:04,135 - =====================SINTAKSNO_STABLO=========================
INFO  21:17:04,138 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:17:04,139 - ==============================================================
INFO  21:17:04,154 - Pocetak obrade programa Program na liniji 1
INFO  21:17:04,155 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:17:04,156 - Deklarisana konstanta c na liniji 2
INFO  21:17:04,156 - Deklarisana konstanta d na liniji 2
INFO  21:17:04,156 - Deklarisana konstanta g na liniji 2
INFO  21:17:04,156 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:17:04,156 - Deklarisana promenljiva e na liniji 3
INFO  21:17:04,158 - Pocetak obrade metode main na liniji 5
INFO  21:17:04,158 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:17:04,158 - Zavrsetak obrade programa Program na liniji 1
INFO  21:17:04,158 - ======================TABELA_SIMBOLA==========================
INFO  21:17:04,159 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:17:04,159 - ==============================================================
INFO  21:17:04,159 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:17:04,159 - ==============================================================
INFO  21:17:04,161 - ======================GENERISANJE_KODA========================
ERROR 21:17:04,165 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:17:04,168 - Generisanje koda neuspesno!
INFO  21:17:04,168 - ==============================================================
INFO  21:33:25,199 - Obrada ulaznog fajla test\program.mj
INFO  21:33:25,292 - #2 program
INFO  21:33:25,292 - #8 Program
INFO  21:33:25,292 - #5 const
INFO  21:33:25,293 - #8 int
INFO  21:33:25,293 - #8 c
INFO  21:33:25,295 - #24 =
INFO  21:33:25,295 - #9 10
INFO  21:33:25,295 - #28 ,
INFO  21:33:25,296 - #8 d
INFO  21:33:25,296 - #24 =
INFO  21:33:25,297 - #9 99
INFO  21:33:25,297 - #28 ,
INFO  21:33:25,297 - #8 g
INFO  21:33:25,297 - #24 =
INFO  21:33:25,297 - #9 2
INFO  21:33:25,297 - #27 ;
INFO  21:33:25,297 - #8 int
INFO  21:33:25,299 - #8 e
INFO  21:33:25,299 - #27 ;
INFO  21:33:25,299 - #20 {
INFO  21:33:25,301 - #6 void
INFO  21:33:25,301 - #8 main
INFO  21:33:25,301 - #29 (
INFO  21:33:25,302 - #30 )
INFO  21:33:25,302 - #20 {
INFO  21:33:25,302 - #8 e
INFO  21:33:25,303 - #24 =
INFO  21:33:25,303 - #16 -
INFO  21:33:25,303 - #9 3
INFO  21:33:25,303 - #27 ;
INFO  21:33:25,304 - #31 if
INFO  21:33:25,305 - #29 (
INFO  21:33:25,305 - #8 e
INFO  21:33:25,305 - #38 >
INFO  21:33:25,305 - #9 0
INFO  21:33:25,307 - #14 ||
INFO  21:33:25,308 - #8 e
INFO  21:33:25,308 - #40 <
INFO  21:33:25,308 - #9 10
INFO  21:33:25,309 - #30 )
INFO  21:33:25,309 - #20 {
INFO  21:33:25,309 - #3 print
INFO  21:33:25,310 - #29 (
INFO  21:33:25,310 - #8 e
INFO  21:33:25,310 - #30 )
INFO  21:33:25,310 - #27 ;
INFO  21:33:25,310 - #21 }
INFO  21:33:25,310 - #32 else
INFO  21:33:25,312 - #20 {
INFO  21:33:25,312 - #3 print
INFO  21:33:25,312 - #29 (
INFO  21:33:25,312 - #8 d
INFO  21:33:25,312 - #30 )
INFO  21:33:25,312 - #27 ;
INFO  21:33:25,312 - #21 }
INFO  21:33:25,312 - #21 }
INFO  21:33:25,313 - #21 }
INFO  21:33:25,314 - =====================SINTAKSNO_STABLO=========================
INFO  21:33:25,316 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:33:25,318 - ==============================================================
INFO  21:33:25,337 - Pocetak obrade programa Program na liniji 1
INFO  21:33:25,337 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:33:25,338 - Deklarisana konstanta c na liniji 2
INFO  21:33:25,338 - Deklarisana konstanta d na liniji 2
INFO  21:33:25,339 - Deklarisana konstanta g na liniji 2
INFO  21:33:25,339 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:33:25,339 - Deklarisana promenljiva e na liniji 3
INFO  21:33:25,340 - Pocetak obrade metode main na liniji 5
INFO  21:33:25,340 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:33:25,340 - Zavrsetak obrade programa Program na liniji 1
INFO  21:33:25,340 - ======================TABELA_SIMBOLA==========================
INFO  21:33:25,341 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:33:25,341 - ==============================================================
INFO  21:33:25,341 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:33:25,341 - ==============================================================
INFO  21:33:25,342 - ======================GENERISANJE_KODA========================
ERROR 21:33:25,345 - Greska u generisanju koda - jumpTrickAND, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:33:25,345 - Greska u generisanju koda - jumpTrickOR, treba da ima relacioni operator na liniji 7!
ERROR 21:33:25,345 - Greska u generisanju koda - jumpTrickAND, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:33:25,347 - Generisanje koda neuspesno!
INFO  21:33:25,347 - ==============================================================
INFO  21:34:58,368 - Obrada ulaznog fajla test\program.mj
INFO  21:34:58,448 - #2 program
INFO  21:34:58,449 - #8 Program
INFO  21:34:58,449 - #5 const
INFO  21:34:58,450 - #8 int
INFO  21:34:58,450 - #8 c
INFO  21:34:58,451 - #24 =
INFO  21:34:58,451 - #9 10
INFO  21:34:58,451 - #28 ,
INFO  21:34:58,453 - #8 d
INFO  21:34:58,453 - #24 =
INFO  21:34:58,453 - #9 99
INFO  21:34:58,453 - #28 ,
INFO  21:34:58,453 - #8 g
INFO  21:34:58,453 - #24 =
INFO  21:34:58,453 - #9 2
INFO  21:34:58,453 - #27 ;
INFO  21:34:58,454 - #8 int
INFO  21:34:58,455 - #8 e
INFO  21:34:58,455 - #27 ;
INFO  21:34:58,455 - #20 {
INFO  21:34:58,456 - #6 void
INFO  21:34:58,456 - #8 main
INFO  21:34:58,456 - #29 (
INFO  21:34:58,457 - #30 )
INFO  21:34:58,457 - #20 {
INFO  21:34:58,457 - #8 e
INFO  21:34:58,457 - #24 =
INFO  21:34:58,457 - #16 -
INFO  21:34:58,458 - #9 3
INFO  21:34:58,458 - #27 ;
INFO  21:34:58,458 - #31 if
INFO  21:34:58,459 - #29 (
INFO  21:34:58,459 - #8 e
INFO  21:34:58,459 - #38 >
INFO  21:34:58,459 - #9 0
INFO  21:34:58,460 - #14 ||
INFO  21:34:58,461 - #8 e
INFO  21:34:58,461 - #40 <
INFO  21:34:58,461 - #9 10
INFO  21:34:58,462 - #30 )
INFO  21:34:58,462 - #20 {
INFO  21:34:58,462 - #3 print
INFO  21:34:58,462 - #29 (
INFO  21:34:58,462 - #8 e
INFO  21:34:58,462 - #30 )
INFO  21:34:58,462 - #27 ;
INFO  21:34:58,462 - #21 }
INFO  21:34:58,463 - #32 else
INFO  21:34:58,463 - #20 {
INFO  21:34:58,463 - #3 print
INFO  21:34:58,464 - #29 (
INFO  21:34:58,464 - #8 d
INFO  21:34:58,464 - #30 )
INFO  21:34:58,464 - #27 ;
INFO  21:34:58,464 - #21 }
INFO  21:34:58,464 - #21 }
INFO  21:34:58,464 - #21 }
INFO  21:34:58,465 - =====================SINTAKSNO_STABLO=========================
INFO  21:34:58,467 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:34:58,468 - ==============================================================
INFO  21:34:58,483 - Pocetak obrade programa Program na liniji 1
INFO  21:34:58,483 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:34:58,484 - Deklarisana konstanta c na liniji 2
INFO  21:34:58,484 - Deklarisana konstanta d na liniji 2
INFO  21:34:58,484 - Deklarisana konstanta g na liniji 2
INFO  21:34:58,484 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:34:58,484 - Deklarisana promenljiva e na liniji 3
INFO  21:34:58,485 - Pocetak obrade metode main na liniji 5
INFO  21:34:58,486 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:34:58,486 - Zavrsetak obrade programa Program na liniji 1
INFO  21:34:58,486 - ======================TABELA_SIMBOLA==========================
INFO  21:34:58,487 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:34:58,487 - ==============================================================
INFO  21:34:58,487 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:34:58,487 - ==============================================================
INFO  21:34:58,489 - ======================GENERISANJE_KODA========================
ERROR 21:34:58,492 - Greska u generisanju koda - jumpTrickAND, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:34:58,492 - Greska u generisanju koda - jumpTrickOR, treba da ima relacioni operator na liniji 7!
ERROR 21:34:58,492 - Greska u generisanju koda - jumpTrickAND, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:34:58,494 - Generisanje koda neuspesno!
INFO  21:34:58,494 - ==============================================================
INFO  21:35:00,175 - Obrada ulaznog fajla test\program.mj
INFO  21:35:00,282 - #2 program
INFO  21:35:00,282 - #8 Program
INFO  21:35:00,283 - #5 const
INFO  21:35:00,284 - #8 int
INFO  21:35:00,284 - #8 c
INFO  21:35:00,285 - #24 =
INFO  21:35:00,285 - #9 10
INFO  21:35:00,285 - #28 ,
INFO  21:35:00,286 - #8 d
INFO  21:35:00,287 - #24 =
INFO  21:35:00,287 - #9 99
INFO  21:35:00,287 - #28 ,
INFO  21:35:00,288 - #8 g
INFO  21:35:00,288 - #24 =
INFO  21:35:00,288 - #9 2
INFO  21:35:00,288 - #27 ;
INFO  21:35:00,288 - #8 int
INFO  21:35:00,290 - #8 e
INFO  21:35:00,290 - #27 ;
INFO  21:35:00,290 - #20 {
INFO  21:35:00,292 - #6 void
INFO  21:35:00,292 - #8 main
INFO  21:35:00,293 - #29 (
INFO  21:35:00,294 - #30 )
INFO  21:35:00,294 - #20 {
INFO  21:35:00,296 - #8 e
INFO  21:35:00,296 - #24 =
INFO  21:35:00,296 - #16 -
INFO  21:35:00,296 - #9 3
INFO  21:35:00,297 - #27 ;
INFO  21:35:00,297 - #31 if
INFO  21:35:00,298 - #29 (
INFO  21:35:00,298 - #8 e
INFO  21:35:00,298 - #38 >
INFO  21:35:00,298 - #9 0
INFO  21:35:00,300 - #14 ||
INFO  21:35:00,301 - #8 e
INFO  21:35:00,301 - #40 <
INFO  21:35:00,301 - #9 10
INFO  21:35:00,302 - #30 )
INFO  21:35:00,302 - #20 {
INFO  21:35:00,302 - #3 print
INFO  21:35:00,302 - #29 (
INFO  21:35:00,302 - #8 e
INFO  21:35:00,302 - #30 )
INFO  21:35:00,303 - #27 ;
INFO  21:35:00,303 - #21 }
INFO  21:35:00,303 - #32 else
INFO  21:35:00,304 - #20 {
INFO  21:35:00,304 - #3 print
INFO  21:35:00,304 - #29 (
INFO  21:35:00,304 - #8 d
INFO  21:35:00,305 - #30 )
INFO  21:35:00,305 - #27 ;
INFO  21:35:00,305 - #21 }
INFO  21:35:00,305 - #21 }
INFO  21:35:00,305 - #21 }
INFO  21:35:00,306 - =====================SINTAKSNO_STABLO=========================
INFO  21:35:00,310 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:35:00,311 - ==============================================================
INFO  21:35:00,326 - Pocetak obrade programa Program na liniji 1
INFO  21:35:00,327 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:35:00,328 - Deklarisana konstanta c na liniji 2
INFO  21:35:00,329 - Deklarisana konstanta d na liniji 2
INFO  21:35:00,329 - Deklarisana konstanta g na liniji 2
INFO  21:35:00,329 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:35:00,329 - Deklarisana promenljiva e na liniji 3
INFO  21:35:00,330 - Pocetak obrade metode main na liniji 5
INFO  21:35:00,331 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:35:00,331 - Zavrsetak obrade programa Program na liniji 1
INFO  21:35:00,331 - ======================TABELA_SIMBOLA==========================
INFO  21:35:00,331 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:35:00,332 - ==============================================================
INFO  21:35:00,332 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:35:00,332 - ==============================================================
INFO  21:35:00,333 - ======================GENERISANJE_KODA========================
INFO  21:43:51,762 - Obrada ulaznog fajla test\program.mj
INFO  21:43:51,847 - #2 program
INFO  21:43:51,847 - #8 Program
INFO  21:43:51,847 - #5 const
INFO  21:43:51,848 - #8 int
INFO  21:43:51,848 - #8 c
INFO  21:43:51,849 - #24 =
INFO  21:43:51,849 - #9 10
INFO  21:43:51,849 - #28 ,
INFO  21:43:51,851 - #8 d
INFO  21:43:51,851 - #24 =
INFO  21:43:51,851 - #9 99
INFO  21:43:51,851 - #28 ,
INFO  21:43:51,852 - #8 g
INFO  21:43:51,852 - #24 =
INFO  21:43:51,852 - #9 2
INFO  21:43:51,852 - #27 ;
INFO  21:43:51,852 - #8 int
INFO  21:43:51,854 - #8 e
INFO  21:43:51,854 - #27 ;
INFO  21:43:51,854 - #20 {
INFO  21:43:51,855 - #6 void
INFO  21:43:51,855 - #8 main
INFO  21:43:51,855 - #29 (
INFO  21:43:51,856 - #30 )
INFO  21:43:51,856 - #20 {
INFO  21:43:51,857 - #8 e
INFO  21:43:51,857 - #24 =
INFO  21:43:51,857 - #16 -
INFO  21:43:51,857 - #9 3
INFO  21:43:51,857 - #27 ;
INFO  21:43:51,858 - #31 if
INFO  21:43:51,858 - #29 (
INFO  21:43:51,858 - #8 e
INFO  21:43:51,858 - #38 >
INFO  21:43:51,859 - #9 0
INFO  21:43:51,860 - #14 ||
INFO  21:43:51,861 - #8 e
INFO  21:43:51,861 - #40 <
INFO  21:43:51,861 - #9 10
INFO  21:43:51,862 - #30 )
INFO  21:43:51,862 - #20 {
INFO  21:43:51,862 - #3 print
INFO  21:43:51,862 - #29 (
INFO  21:43:51,862 - #8 e
INFO  21:43:51,862 - #30 )
INFO  21:43:51,862 - #27 ;
INFO  21:43:51,863 - #21 }
INFO  21:43:51,863 - #32 else
INFO  21:43:51,864 - #20 {
INFO  21:43:51,864 - #3 print
INFO  21:43:51,864 - #29 (
INFO  21:43:51,864 - #8 d
INFO  21:43:51,864 - #30 )
INFO  21:43:51,864 - #27 ;
INFO  21:43:51,865 - #21 }
INFO  21:43:51,865 - #21 }
INFO  21:43:51,865 - #21 }
INFO  21:43:51,866 - =====================SINTAKSNO_STABLO=========================
INFO  21:43:51,867 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:43:51,869 - ==============================================================
INFO  21:43:51,883 - Pocetak obrade programa Program na liniji 1
INFO  21:43:51,883 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:43:51,884 - Deklarisana konstanta c na liniji 2
INFO  21:43:51,885 - Deklarisana konstanta d na liniji 2
INFO  21:43:51,885 - Deklarisana konstanta g na liniji 2
INFO  21:43:51,885 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:43:51,885 - Deklarisana promenljiva e na liniji 3
INFO  21:43:51,886 - Pocetak obrade metode main na liniji 5
INFO  21:43:51,887 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:43:51,887 - Zavrsetak obrade programa Program na liniji 1
INFO  21:43:51,887 - ======================TABELA_SIMBOLA==========================
INFO  21:43:51,887 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:43:51,888 - ==============================================================
INFO  21:43:51,888 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:43:51,888 - ==============================================================
INFO  21:43:51,890 - ======================GENERISANJE_KODA========================
ERROR 21:43:51,894 - Greska u generisanju koda - jumpTrickAND, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:43:51,894 - Greska u generisanju koda - jumpTrickOR, treba da ima relacioni operator na liniji 7!
ERROR 21:43:51,894 - Greska u generisanju koda - jumpTrickAND, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:43:51,896 - Generisanje koda neuspesno!
INFO  21:43:51,896 - ==============================================================
INFO  21:44:36,048 - Obrada ulaznog fajla test\program.mj
INFO  21:44:36,122 - #2 program
INFO  21:44:36,123 - #8 Program
INFO  21:44:36,123 - #5 const
INFO  21:44:36,124 - #8 int
INFO  21:44:36,124 - #8 c
INFO  21:44:36,125 - #24 =
INFO  21:44:36,125 - #9 10
INFO  21:44:36,125 - #28 ,
INFO  21:44:36,126 - #8 d
INFO  21:44:36,127 - #24 =
INFO  21:44:36,127 - #9 99
INFO  21:44:36,127 - #28 ,
INFO  21:44:36,127 - #8 g
INFO  21:44:36,127 - #24 =
INFO  21:44:36,127 - #9 2
INFO  21:44:36,127 - #27 ;
INFO  21:44:36,127 - #8 int
INFO  21:44:36,129 - #8 e
INFO  21:44:36,129 - #27 ;
INFO  21:44:36,129 - #20 {
INFO  21:44:36,131 - #6 void
INFO  21:44:36,131 - #8 main
INFO  21:44:36,131 - #29 (
INFO  21:44:36,132 - #30 )
INFO  21:44:36,132 - #20 {
INFO  21:44:36,132 - #8 e
INFO  21:44:36,132 - #24 =
INFO  21:44:36,132 - #16 -
INFO  21:44:36,132 - #9 3
INFO  21:44:36,132 - #27 ;
INFO  21:44:36,134 - #31 if
INFO  21:44:36,134 - #29 (
INFO  21:44:36,135 - #8 e
INFO  21:44:36,135 - #38 >
INFO  21:44:36,135 - #9 0
INFO  21:44:36,136 - #14 ||
INFO  21:44:36,137 - #8 e
INFO  21:44:36,137 - #40 <
INFO  21:44:36,137 - #9 10
INFO  21:44:36,138 - #30 )
INFO  21:44:36,138 - #20 {
INFO  21:44:36,138 - #3 print
INFO  21:44:36,138 - #29 (
INFO  21:44:36,138 - #8 e
INFO  21:44:36,139 - #30 )
INFO  21:44:36,139 - #27 ;
INFO  21:44:36,139 - #21 }
INFO  21:44:36,139 - #32 else
INFO  21:44:36,140 - #20 {
INFO  21:44:36,140 - #3 print
INFO  21:44:36,140 - #29 (
INFO  21:44:36,141 - #8 d
INFO  21:44:36,141 - #30 )
INFO  21:44:36,141 - #27 ;
INFO  21:44:36,141 - #21 }
INFO  21:44:36,141 - #21 }
INFO  21:44:36,141 - #21 }
INFO  21:44:36,142 - =====================SINTAKSNO_STABLO=========================
INFO  21:44:36,144 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:44:36,145 - ==============================================================
INFO  21:44:36,160 - Pocetak obrade programa Program na liniji 1
INFO  21:44:36,161 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:44:36,162 - Deklarisana konstanta c na liniji 2
INFO  21:44:36,162 - Deklarisana konstanta d na liniji 2
INFO  21:44:36,162 - Deklarisana konstanta g na liniji 2
INFO  21:44:36,163 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:44:36,163 - Deklarisana promenljiva e na liniji 3
INFO  21:44:36,163 - Pocetak obrade metode main na liniji 5
INFO  21:44:36,164 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:44:36,164 - Zavrsetak obrade programa Program na liniji 1
INFO  21:44:36,164 - ======================TABELA_SIMBOLA==========================
INFO  21:44:36,165 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:44:36,165 - ==============================================================
INFO  21:44:36,165 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:44:36,165 - ==============================================================
INFO  21:44:36,166 - ======================GENERISANJE_KODA========================
ERROR 21:44:36,171 - Greska u generisanju koda - jumpTrickAND, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:44:36,171 - Greska u generisanju koda - jumpTrickOR, treba da ima relacioni operator na liniji 7!
ERROR 21:44:36,171 - Greska u generisanju koda - jumpTrickAND, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:44:36,173 - Generisanje koda neuspesno!
INFO  21:44:36,173 - ==============================================================
INFO  21:44:51,171 - Obrada ulaznog fajla test\program.mj
INFO  21:44:51,276 - #2 program
INFO  21:44:51,276 - #8 Program
INFO  21:44:51,276 - #5 const
INFO  21:44:51,278 - #8 int
INFO  21:44:51,278 - #8 c
INFO  21:44:51,279 - #24 =
INFO  21:44:51,279 - #9 10
INFO  21:44:51,280 - #28 ,
INFO  21:44:51,281 - #8 d
INFO  21:44:51,281 - #24 =
INFO  21:44:51,281 - #9 99
INFO  21:44:51,282 - #28 ,
INFO  21:44:51,282 - #8 g
INFO  21:44:51,282 - #24 =
INFO  21:44:51,282 - #9 2
INFO  21:44:51,282 - #27 ;
INFO  21:44:51,282 - #8 int
INFO  21:44:51,284 - #8 e
INFO  21:44:51,284 - #27 ;
INFO  21:44:51,284 - #20 {
INFO  21:44:51,286 - #6 void
INFO  21:44:51,286 - #8 main
INFO  21:44:51,286 - #29 (
INFO  21:44:51,287 - #30 )
INFO  21:44:51,288 - #20 {
INFO  21:44:51,288 - #8 e
INFO  21:44:51,288 - #24 =
INFO  21:44:51,288 - #16 -
INFO  21:44:51,288 - #9 3
INFO  21:44:51,288 - #27 ;
INFO  21:44:51,289 - #31 if
INFO  21:44:51,289 - #29 (
INFO  21:44:51,289 - #8 e
INFO  21:44:51,290 - #38 >
INFO  21:44:51,290 - #9 0
INFO  21:44:51,291 - #14 ||
INFO  21:44:51,292 - #8 e
INFO  21:44:51,292 - #40 <
INFO  21:44:51,292 - #9 10
INFO  21:44:51,293 - #30 )
INFO  21:44:51,293 - #20 {
INFO  21:44:51,294 - #3 print
INFO  21:44:51,294 - #29 (
INFO  21:44:51,294 - #8 e
INFO  21:44:51,294 - #30 )
INFO  21:44:51,294 - #27 ;
INFO  21:44:51,294 - #21 }
INFO  21:44:51,294 - #32 else
INFO  21:44:51,296 - #20 {
INFO  21:44:51,296 - #3 print
INFO  21:44:51,296 - #29 (
INFO  21:44:51,296 - #8 d
INFO  21:44:51,296 - #30 )
INFO  21:44:51,296 - #27 ;
INFO  21:44:51,296 - #21 }
INFO  21:44:51,296 - #21 }
INFO  21:44:51,297 - #21 }
INFO  21:44:51,298 - =====================SINTAKSNO_STABLO=========================
INFO  21:44:51,300 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:44:51,300 - ==============================================================
INFO  21:44:51,315 - Pocetak obrade programa Program na liniji 1
INFO  21:44:51,315 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:44:51,317 - Deklarisana konstanta c na liniji 2
INFO  21:44:51,317 - Deklarisana konstanta d na liniji 2
INFO  21:44:51,317 - Deklarisana konstanta g na liniji 2
INFO  21:44:51,317 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:44:51,317 - Deklarisana promenljiva e na liniji 3
INFO  21:44:51,318 - Pocetak obrade metode main na liniji 5
INFO  21:44:51,318 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:44:51,319 - Zavrsetak obrade programa Program na liniji 1
INFO  21:44:51,319 - ======================TABELA_SIMBOLA==========================
INFO  21:44:51,319 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:44:51,319 - ==============================================================
INFO  21:44:51,319 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:44:51,320 - ==============================================================
INFO  21:44:51,321 - ======================GENERISANJE_KODA========================
INFO  21:46:17,158 - Obrada ulaznog fajla test\program.mj
INFO  21:46:17,250 - #2 program
INFO  21:46:17,251 - #8 Program
INFO  21:46:17,251 - #5 const
INFO  21:46:17,252 - #8 int
INFO  21:46:17,252 - #8 c
INFO  21:46:17,253 - #24 =
INFO  21:46:17,253 - #9 10
INFO  21:46:17,253 - #28 ,
INFO  21:46:17,254 - #8 d
INFO  21:46:17,254 - #24 =
INFO  21:46:17,254 - #9 99
INFO  21:46:17,254 - #28 ,
INFO  21:46:17,254 - #8 g
INFO  21:46:17,254 - #24 =
INFO  21:46:17,255 - #9 2
INFO  21:46:17,255 - #27 ;
INFO  21:46:17,255 - #8 int
INFO  21:46:17,256 - #8 e
INFO  21:46:17,256 - #27 ;
INFO  21:46:17,256 - #20 {
INFO  21:46:17,258 - #6 void
INFO  21:46:17,258 - #8 main
INFO  21:46:17,258 - #29 (
INFO  21:46:17,259 - #30 )
INFO  21:46:17,259 - #20 {
INFO  21:46:17,260 - #8 e
INFO  21:46:17,260 - #24 =
INFO  21:46:17,260 - #16 -
INFO  21:46:17,260 - #9 3
INFO  21:46:17,260 - #27 ;
INFO  21:46:17,261 - #31 if
INFO  21:46:17,262 - #29 (
INFO  21:46:17,262 - #8 e
INFO  21:46:17,262 - #38 >
INFO  21:46:17,263 - #9 0
INFO  21:46:17,265 - #14 ||
INFO  21:46:17,265 - #8 e
INFO  21:46:17,265 - #40 <
INFO  21:46:17,265 - #9 10
INFO  21:46:17,266 - #30 )
INFO  21:46:17,267 - #20 {
INFO  21:46:17,267 - #3 print
INFO  21:46:17,267 - #29 (
INFO  21:46:17,267 - #8 e
INFO  21:46:17,267 - #30 )
INFO  21:46:17,267 - #27 ;
INFO  21:46:17,267 - #21 }
INFO  21:46:17,267 - #32 else
INFO  21:46:17,269 - #20 {
INFO  21:46:17,269 - #3 print
INFO  21:46:17,269 - #29 (
INFO  21:46:17,269 - #8 d
INFO  21:46:17,269 - #30 )
INFO  21:46:17,269 - #27 ;
INFO  21:46:17,270 - #21 }
INFO  21:46:17,270 - #21 }
INFO  21:46:17,270 - #21 }
INFO  21:46:17,271 - =====================SINTAKSNO_STABLO=========================
INFO  21:46:17,274 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:46:17,275 - ==============================================================
INFO  21:46:17,291 - Pocetak obrade programa Program na liniji 1
INFO  21:46:17,291 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:46:17,292 - Deklarisana konstanta c na liniji 2
INFO  21:46:17,293 - Deklarisana konstanta d na liniji 2
INFO  21:46:17,293 - Deklarisana konstanta g na liniji 2
INFO  21:46:17,293 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:46:17,293 - Deklarisana promenljiva e na liniji 3
INFO  21:46:17,294 - Pocetak obrade metode main na liniji 5
INFO  21:46:17,295 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:46:17,295 - Zavrsetak obrade programa Program na liniji 1
INFO  21:46:17,295 - ======================TABELA_SIMBOLA==========================
INFO  21:46:17,296 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:46:17,296 - ==============================================================
INFO  21:46:17,296 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:46:17,296 - ==============================================================
INFO  21:46:17,298 - ======================GENERISANJE_KODA========================
INFO  21:46:22,971 - Obrada ulaznog fajla test\program.mj
INFO  21:46:23,072 - #2 program
INFO  21:46:23,072 - #8 Program
INFO  21:46:23,072 - #5 const
INFO  21:46:23,074 - #8 int
INFO  21:46:23,074 - #8 c
INFO  21:46:23,075 - #24 =
INFO  21:46:23,075 - #9 10
INFO  21:46:23,075 - #28 ,
INFO  21:46:23,076 - #8 d
INFO  21:46:23,077 - #24 =
INFO  21:46:23,077 - #9 99
INFO  21:46:23,077 - #28 ,
INFO  21:46:23,077 - #8 g
INFO  21:46:23,077 - #24 =
INFO  21:46:23,077 - #9 2
INFO  21:46:23,077 - #27 ;
INFO  21:46:23,078 - #8 int
INFO  21:46:23,080 - #8 e
INFO  21:46:23,080 - #27 ;
INFO  21:46:23,080 - #20 {
INFO  21:46:23,082 - #6 void
INFO  21:46:23,082 - #8 main
INFO  21:46:23,082 - #29 (
INFO  21:46:23,083 - #30 )
INFO  21:46:23,083 - #20 {
INFO  21:46:23,083 - #8 e
INFO  21:46:23,084 - #24 =
INFO  21:46:23,084 - #16 -
INFO  21:46:23,084 - #9 3
INFO  21:46:23,084 - #27 ;
INFO  21:46:23,085 - #31 if
INFO  21:46:23,085 - #29 (
INFO  21:46:23,085 - #8 e
INFO  21:46:23,085 - #38 >
INFO  21:46:23,086 - #9 0
INFO  21:46:23,087 - #14 ||
INFO  21:46:23,088 - #8 e
INFO  21:46:23,088 - #40 <
INFO  21:46:23,088 - #9 10
INFO  21:46:23,089 - #30 )
INFO  21:46:23,090 - #20 {
INFO  21:46:23,090 - #3 print
INFO  21:46:23,090 - #29 (
INFO  21:46:23,090 - #8 e
INFO  21:46:23,090 - #30 )
INFO  21:46:23,090 - #27 ;
INFO  21:46:23,090 - #21 }
INFO  21:46:23,090 - #32 else
INFO  21:46:23,091 - #20 {
INFO  21:46:23,092 - #3 print
INFO  21:46:23,092 - #29 (
INFO  21:46:23,092 - #8 d
INFO  21:46:23,092 - #30 )
INFO  21:46:23,092 - #27 ;
INFO  21:46:23,093 - #21 }
INFO  21:46:23,093 - #21 }
INFO  21:46:23,093 - #21 }
INFO  21:46:23,095 - =====================SINTAKSNO_STABLO=========================
INFO  21:46:23,097 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:46:23,097 - ==============================================================
INFO  21:46:23,113 - Pocetak obrade programa Program na liniji 1
INFO  21:46:23,113 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:46:23,114 - Deklarisana konstanta c na liniji 2
INFO  21:46:23,115 - Deklarisana konstanta d na liniji 2
INFO  21:46:23,115 - Deklarisana konstanta g na liniji 2
INFO  21:46:23,115 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:46:23,115 - Deklarisana promenljiva e na liniji 3
INFO  21:46:23,116 - Pocetak obrade metode main na liniji 5
INFO  21:46:23,117 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:46:23,117 - Zavrsetak obrade programa Program na liniji 1
INFO  21:46:23,117 - ======================TABELA_SIMBOLA==========================
INFO  21:46:23,118 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:46:23,118 - ==============================================================
INFO  21:46:23,118 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:46:23,118 - ==============================================================
INFO  21:46:23,120 - ======================GENERISANJE_KODA========================
ERROR 21:46:23,125 - Greska u generisanju koda - jumpTrickAND, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:46:23,126 - Greska u generisanju koda - jumpTrickOR, treba da ima relacioni operator na liniji 7!
ERROR 21:46:23,128 - Generisanje koda neuspesno!
INFO  21:46:23,128 - ==============================================================
INFO  21:47:38,434 - Obrada ulaznog fajla test\program.mj
INFO  21:47:38,517 - #2 program
INFO  21:47:38,517 - #8 Program
INFO  21:47:38,517 - #5 const
INFO  21:47:38,518 - #8 int
INFO  21:47:38,518 - #8 c
INFO  21:47:38,519 - #24 =
INFO  21:47:38,519 - #9 10
INFO  21:47:38,520 - #28 ,
INFO  21:47:38,521 - #8 d
INFO  21:47:38,521 - #24 =
INFO  21:47:38,521 - #9 99
INFO  21:47:38,521 - #28 ,
INFO  21:47:38,522 - #8 g
INFO  21:47:38,522 - #24 =
INFO  21:47:38,522 - #9 2
INFO  21:47:38,522 - #27 ;
INFO  21:47:38,522 - #8 int
INFO  21:47:38,523 - #8 e
INFO  21:47:38,524 - #27 ;
INFO  21:47:38,524 - #20 {
INFO  21:47:38,525 - #6 void
INFO  21:47:38,525 - #8 main
INFO  21:47:38,526 - #29 (
INFO  21:47:38,527 - #30 )
INFO  21:47:38,527 - #20 {
INFO  21:47:38,527 - #8 e
INFO  21:47:38,527 - #24 =
INFO  21:47:38,527 - #16 -
INFO  21:47:38,527 - #9 3
INFO  21:47:38,527 - #27 ;
INFO  21:47:38,528 - #31 if
INFO  21:47:38,528 - #29 (
INFO  21:47:38,528 - #8 e
INFO  21:47:38,529 - #38 >
INFO  21:47:38,529 - #9 0
INFO  21:47:38,531 - #14 ||
INFO  21:47:38,531 - #8 e
INFO  21:47:38,532 - #40 <
INFO  21:47:38,532 - #9 10
INFO  21:47:38,532 - #30 )
INFO  21:47:38,533 - #20 {
INFO  21:47:38,533 - #3 print
INFO  21:47:38,533 - #29 (
INFO  21:47:38,533 - #8 e
INFO  21:47:38,533 - #30 )
INFO  21:47:38,533 - #27 ;
INFO  21:47:38,533 - #21 }
INFO  21:47:38,533 - #32 else
INFO  21:47:38,535 - #20 {
INFO  21:47:38,535 - #3 print
INFO  21:47:38,536 - #29 (
INFO  21:47:38,537 - #8 d
INFO  21:47:38,537 - #30 )
INFO  21:47:38,537 - #27 ;
INFO  21:47:38,537 - #21 }
INFO  21:47:38,537 - #21 }
INFO  21:47:38,538 - #21 }
INFO  21:47:38,538 - =====================SINTAKSNO_STABLO=========================
INFO  21:47:38,540 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:47:38,541 - ==============================================================
INFO  21:47:38,555 - Pocetak obrade programa Program na liniji 1
INFO  21:47:38,555 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:47:38,556 - Deklarisana konstanta c na liniji 2
INFO  21:47:38,556 - Deklarisana konstanta d na liniji 2
INFO  21:47:38,556 - Deklarisana konstanta g na liniji 2
INFO  21:47:38,556 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:47:38,556 - Deklarisana promenljiva e na liniji 3
INFO  21:47:38,557 - Pocetak obrade metode main na liniji 5
INFO  21:47:38,558 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:47:38,558 - Zavrsetak obrade programa Program na liniji 1
INFO  21:47:38,558 - ======================TABELA_SIMBOLA==========================
INFO  21:47:38,558 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:47:38,559 - ==============================================================
INFO  21:47:38,559 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:47:38,559 - ==============================================================
INFO  21:47:38,560 - ======================GENERISANJE_KODA========================
ERROR 21:47:38,564 - Greska u generisanju koda - jumpTrickAND, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:47:38,564 - Greska u generisanju koda - jumpTrickOR, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:47:38,565 - Generisanje koda neuspesno!
INFO  21:47:38,565 - ==============================================================
INFO  21:53:12,010 - Obrada ulaznog fajla test\program.mj
INFO  21:53:12,100 - #2 program
INFO  21:53:12,100 - #8 Program
INFO  21:53:12,100 - #5 const
INFO  21:53:12,102 - #8 int
INFO  21:53:12,102 - #8 c
INFO  21:53:12,103 - #24 =
INFO  21:53:12,103 - #9 10
INFO  21:53:12,103 - #28 ,
INFO  21:53:12,104 - #8 d
INFO  21:53:12,105 - #24 =
INFO  21:53:12,105 - #9 99
INFO  21:53:12,105 - #28 ,
INFO  21:53:12,105 - #8 g
INFO  21:53:12,105 - #24 =
INFO  21:53:12,105 - #9 2
INFO  21:53:12,105 - #27 ;
INFO  21:53:12,105 - #8 int
INFO  21:53:12,107 - #8 e
INFO  21:53:12,107 - #27 ;
INFO  21:53:12,107 - #20 {
INFO  21:53:12,109 - #6 void
INFO  21:53:12,109 - #8 main
INFO  21:53:12,109 - #29 (
INFO  21:53:12,110 - #30 )
INFO  21:53:12,110 - #20 {
INFO  21:53:12,110 - #8 e
INFO  21:53:12,110 - #24 =
INFO  21:53:12,110 - #16 -
INFO  21:53:12,110 - #9 3
INFO  21:53:12,111 - #27 ;
INFO  21:53:12,111 - #31 if
INFO  21:53:12,112 - #29 (
INFO  21:53:12,112 - #8 e
INFO  21:53:12,112 - #38 >
INFO  21:53:12,113 - #9 0
INFO  21:53:12,114 - #14 ||
INFO  21:53:12,115 - #8 e
INFO  21:53:12,115 - #40 <
INFO  21:53:12,115 - #9 10
INFO  21:53:12,116 - #30 )
INFO  21:53:12,116 - #20 {
INFO  21:53:12,116 - #3 print
INFO  21:53:12,116 - #29 (
INFO  21:53:12,116 - #8 e
INFO  21:53:12,116 - #30 )
INFO  21:53:12,117 - #27 ;
INFO  21:53:12,117 - #21 }
INFO  21:53:12,117 - #32 else
INFO  21:53:12,118 - #20 {
INFO  21:53:12,118 - #3 print
INFO  21:53:12,118 - #29 (
INFO  21:53:12,118 - #8 d
INFO  21:53:12,118 - #30 )
INFO  21:53:12,119 - #27 ;
INFO  21:53:12,119 - #21 }
INFO  21:53:12,119 - #21 }
INFO  21:53:12,119 - #21 }
INFO  21:53:12,120 - =====================SINTAKSNO_STABLO=========================
INFO  21:53:12,122 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:53:12,123 - ==============================================================
INFO  21:53:12,137 - Pocetak obrade programa Program na liniji 1
INFO  21:53:12,137 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:53:12,138 - Deklarisana konstanta c na liniji 2
INFO  21:53:12,138 - Deklarisana konstanta d na liniji 2
INFO  21:53:12,139 - Deklarisana konstanta g na liniji 2
INFO  21:53:12,139 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:53:12,139 - Deklarisana promenljiva e na liniji 3
INFO  21:53:12,140 - Pocetak obrade metode main na liniji 5
INFO  21:53:12,140 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:53:12,140 - Zavrsetak obrade programa Program na liniji 1
INFO  21:53:12,140 - ======================TABELA_SIMBOLA==========================
INFO  21:53:12,141 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:53:12,141 - ==============================================================
INFO  21:53:12,141 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:53:12,141 - ==============================================================
INFO  21:53:12,143 - ======================GENERISANJE_KODA========================
INFO  21:53:12,148 - Generisanje koda uspesno zavrseno!
INFO  21:53:12,148 - Generisanje izlaznog fajla test\program.obj
INFO  21:53:12,148 - ==============================================================
INFO  21:53:14,777 - Obrada ulaznog fajla test\program.mj
INFO  21:53:14,851 - #2 program
INFO  21:53:14,851 - #8 Program
INFO  21:53:14,851 - #5 const
INFO  21:53:14,852 - #8 int
INFO  21:53:14,852 - #8 c
INFO  21:53:14,853 - #24 =
INFO  21:53:14,853 - #9 10
INFO  21:53:14,853 - #28 ,
INFO  21:53:14,854 - #8 d
INFO  21:53:14,854 - #24 =
INFO  21:53:14,854 - #9 99
INFO  21:53:14,854 - #28 ,
INFO  21:53:14,854 - #8 g
INFO  21:53:14,854 - #24 =
INFO  21:53:14,854 - #9 2
INFO  21:53:14,854 - #27 ;
INFO  21:53:14,854 - #8 int
INFO  21:53:14,855 - #8 e
INFO  21:53:14,856 - #27 ;
INFO  21:53:14,856 - #20 {
INFO  21:53:14,857 - #6 void
INFO  21:53:14,857 - #8 main
INFO  21:53:14,858 - #29 (
INFO  21:53:14,859 - #30 )
INFO  21:53:14,859 - #20 {
INFO  21:53:14,859 - #8 e
INFO  21:53:14,859 - #24 =
INFO  21:53:14,859 - #16 -
INFO  21:53:14,859 - #9 3
INFO  21:53:14,859 - #27 ;
INFO  21:53:14,860 - #31 if
INFO  21:53:14,860 - #29 (
INFO  21:53:14,860 - #8 e
INFO  21:53:14,860 - #38 >
INFO  21:53:14,861 - #9 0
INFO  21:53:14,862 - #14 ||
INFO  21:53:14,862 - #8 e
INFO  21:53:14,862 - #40 <
INFO  21:53:14,862 - #9 10
INFO  21:53:14,863 - #30 )
INFO  21:53:14,863 - #20 {
INFO  21:53:14,863 - #3 print
INFO  21:53:14,863 - #29 (
INFO  21:53:14,864 - #8 e
INFO  21:53:14,864 - #30 )
INFO  21:53:14,864 - #27 ;
INFO  21:53:14,864 - #21 }
INFO  21:53:14,864 - #32 else
INFO  21:53:14,865 - #20 {
INFO  21:53:14,865 - #3 print
INFO  21:53:14,865 - #29 (
INFO  21:53:14,865 - #8 d
INFO  21:53:14,865 - #30 )
INFO  21:53:14,865 - #27 ;
INFO  21:53:14,865 - #21 }
INFO  21:53:14,865 - #21 }
INFO  21:53:14,866 - #21 }
INFO  21:53:14,866 - =====================SINTAKSNO_STABLO=========================
INFO  21:53:14,868 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:53:14,869 - ==============================================================
INFO  21:53:14,882 - Pocetak obrade programa Program na liniji 1
INFO  21:53:14,883 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:53:14,884 - Deklarisana konstanta c na liniji 2
INFO  21:53:14,884 - Deklarisana konstanta d na liniji 2
INFO  21:53:14,884 - Deklarisana konstanta g na liniji 2
INFO  21:53:14,884 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:53:14,884 - Deklarisana promenljiva e na liniji 3
INFO  21:53:14,885 - Pocetak obrade metode main na liniji 5
INFO  21:53:14,886 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:53:14,886 - Zavrsetak obrade programa Program na liniji 1
INFO  21:53:14,886 - ======================TABELA_SIMBOLA==========================
INFO  21:53:14,887 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:53:14,887 - ==============================================================
INFO  21:53:14,887 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:53:14,887 - ==============================================================
INFO  21:53:14,889 - ======================GENERISANJE_KODA========================
INFO  21:53:14,894 - Generisanje koda uspesno zavrseno!
INFO  21:53:14,894 - Generisanje izlaznog fajla test\program.obj
INFO  21:53:14,894 - ==============================================================
INFO  21:53:26,922 - Obrada ulaznog fajla test\program.mj
INFO  21:53:27,008 - #2 program
INFO  21:53:27,009 - #8 Program
INFO  21:53:27,009 - #5 const
INFO  21:53:27,010 - #8 int
INFO  21:53:27,010 - #8 c
INFO  21:53:27,011 - #24 =
INFO  21:53:27,011 - #9 10
INFO  21:53:27,012 - #28 ,
INFO  21:53:27,013 - #8 d
INFO  21:53:27,013 - #24 =
INFO  21:53:27,013 - #9 99
INFO  21:53:27,013 - #28 ,
INFO  21:53:27,014 - #8 g
INFO  21:53:27,014 - #24 =
INFO  21:53:27,014 - #9 2
INFO  21:53:27,014 - #27 ;
INFO  21:53:27,014 - #8 int
INFO  21:53:27,015 - #8 e
INFO  21:53:27,015 - #27 ;
INFO  21:53:27,016 - #20 {
INFO  21:53:27,017 - #6 void
INFO  21:53:27,017 - #8 main
INFO  21:53:27,017 - #29 (
INFO  21:53:27,018 - #30 )
INFO  21:53:27,018 - #20 {
INFO  21:53:27,018 - #8 e
INFO  21:53:27,018 - #24 =
INFO  21:53:27,018 - #16 -
INFO  21:53:27,018 - #9 3
INFO  21:53:27,019 - #27 ;
INFO  21:53:27,019 - #31 if
INFO  21:53:27,020 - #29 (
INFO  21:53:27,020 - #8 e
INFO  21:53:27,020 - #38 >
INFO  21:53:27,020 - #9 0
INFO  21:53:27,021 - #30 )
INFO  21:53:27,022 - #20 {
INFO  21:53:27,022 - #3 print
INFO  21:53:27,022 - #29 (
INFO  21:53:27,022 - #8 e
INFO  21:53:27,022 - #30 )
INFO  21:53:27,022 - #27 ;
INFO  21:53:27,022 - #21 }
INFO  21:53:27,022 - #32 else
INFO  21:53:27,024 - #20 {
INFO  21:53:27,024 - #3 print
INFO  21:53:27,024 - #29 (
INFO  21:53:27,024 - #8 d
INFO  21:53:27,024 - #30 )
INFO  21:53:27,024 - #27 ;
INFO  21:53:27,024 - #21 }
INFO  21:53:27,025 - #21 }
INFO  21:53:27,025 - #21 }
INFO  21:53:27,026 - =====================SINTAKSNO_STABLO=========================
INFO  21:53:27,028 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:53:27,029 - ==============================================================
INFO  21:53:27,040 - Pocetak obrade programa Program na liniji 1
INFO  21:53:27,041 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:53:27,042 - Deklarisana konstanta c na liniji 2
INFO  21:53:27,042 - Deklarisana konstanta d na liniji 2
INFO  21:53:27,042 - Deklarisana konstanta g na liniji 2
INFO  21:53:27,042 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:53:27,043 - Deklarisana promenljiva e na liniji 3
INFO  21:53:27,044 - Pocetak obrade metode main na liniji 5
INFO  21:53:27,044 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:53:27,044 - Zavrsetak obrade programa Program na liniji 1
INFO  21:53:27,044 - ======================TABELA_SIMBOLA==========================
INFO  21:53:27,045 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:53:27,045 - ==============================================================
INFO  21:53:27,045 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:53:27,045 - ==============================================================
INFO  21:53:27,045 - ======================GENERISANJE_KODA========================
INFO  21:53:27,050 - Generisanje koda uspesno zavrseno!
INFO  21:53:27,050 - Generisanje izlaznog fajla test\program.obj
INFO  21:53:27,050 - ==============================================================
INFO  21:55:01,122 - Obrada ulaznog fajla test\program.mj
INFO  21:55:01,210 - #2 program
INFO  21:55:01,210 - #8 Program
INFO  21:55:01,210 - #5 const
INFO  21:55:01,211 - #8 int
INFO  21:55:01,211 - #8 c
INFO  21:55:01,212 - #24 =
INFO  21:55:01,212 - #9 10
INFO  21:55:01,213 - #28 ,
INFO  21:55:01,214 - #8 d
INFO  21:55:01,214 - #24 =
INFO  21:55:01,214 - #9 99
INFO  21:55:01,214 - #28 ,
INFO  21:55:01,214 - #8 g
INFO  21:55:01,214 - #24 =
INFO  21:55:01,214 - #9 2
INFO  21:55:01,214 - #27 ;
INFO  21:55:01,214 - #8 int
INFO  21:55:01,216 - #8 e
INFO  21:55:01,216 - #27 ;
INFO  21:55:01,216 - #20 {
INFO  21:55:01,217 - #6 void
INFO  21:55:01,217 - #8 main
INFO  21:55:01,217 - #29 (
INFO  21:55:01,219 - #30 )
INFO  21:55:01,219 - #20 {
INFO  21:55:01,219 - #8 e
INFO  21:55:01,219 - #24 =
INFO  21:55:01,220 - #16 -
INFO  21:55:01,220 - #9 3
INFO  21:55:01,220 - #27 ;
INFO  21:55:01,221 - #31 if
INFO  21:55:01,221 - #29 (
INFO  21:55:01,221 - #8 e
INFO  21:55:01,221 - #38 >
INFO  21:55:01,222 - #9 0
INFO  21:55:01,224 - #30 )
INFO  21:55:01,224 - #20 {
INFO  21:55:01,225 - #3 print
INFO  21:55:01,225 - #29 (
INFO  21:55:01,225 - #8 e
INFO  21:55:01,225 - #30 )
INFO  21:55:01,225 - #27 ;
INFO  21:55:01,225 - #21 }
INFO  21:55:01,225 - #32 else
INFO  21:55:01,226 - #20 {
INFO  21:55:01,227 - #3 print
INFO  21:55:01,227 - #29 (
INFO  21:55:01,227 - #8 d
INFO  21:55:01,227 - #30 )
INFO  21:55:01,227 - #27 ;
INFO  21:55:01,227 - #21 }
INFO  21:55:01,227 - #21 }
INFO  21:55:01,228 - #21 }
INFO  21:55:01,229 - =====================SINTAKSNO_STABLO=========================
INFO  21:55:01,230 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:55:01,231 - ==============================================================
INFO  21:55:01,251 - Pocetak obrade programa Program na liniji 1
INFO  21:55:01,251 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:55:01,253 - Deklarisana konstanta c na liniji 2
INFO  21:55:01,253 - Deklarisana konstanta d na liniji 2
INFO  21:55:01,253 - Deklarisana konstanta g na liniji 2
INFO  21:55:01,253 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:55:01,253 - Deklarisana promenljiva e na liniji 3
INFO  21:55:01,255 - Pocetak obrade metode main na liniji 5
INFO  21:55:01,255 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:55:01,255 - Zavrsetak obrade programa Program na liniji 1
INFO  21:55:01,255 - ======================TABELA_SIMBOLA==========================
INFO  21:55:01,256 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:55:01,256 - ==============================================================
INFO  21:55:01,256 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:55:01,256 - ==============================================================
INFO  21:55:01,256 - ======================GENERISANJE_KODA========================
INFO  21:55:01,261 - Generisanje koda uspesno zavrseno!
INFO  21:55:01,262 - Generisanje izlaznog fajla test\program.obj
INFO  21:55:01,262 - ==============================================================
INFO  21:57:32,289 - Obrada ulaznog fajla test\program.mj
INFO  21:57:32,385 - #2 program
INFO  21:57:32,386 - #8 Program
INFO  21:57:32,386 - #5 const
INFO  21:57:32,387 - #8 int
INFO  21:57:32,387 - #8 c
INFO  21:57:32,388 - #24 =
INFO  21:57:32,388 - #9 10
INFO  21:57:32,388 - #28 ,
INFO  21:57:32,390 - #8 d
INFO  21:57:32,390 - #24 =
INFO  21:57:32,390 - #9 99
INFO  21:57:32,391 - #28 ,
INFO  21:57:32,391 - #8 g
INFO  21:57:32,391 - #24 =
INFO  21:57:32,391 - #9 2
INFO  21:57:32,391 - #27 ;
INFO  21:57:32,392 - #8 int
INFO  21:57:32,393 - #8 e
INFO  21:57:32,394 - #27 ;
INFO  21:57:32,394 - #20 {
INFO  21:57:32,395 - #6 void
INFO  21:57:32,396 - #8 main
INFO  21:57:32,396 - #29 (
INFO  21:57:32,396 - #30 )
INFO  21:57:32,397 - #20 {
INFO  21:57:32,397 - #8 e
INFO  21:57:32,397 - #24 =
INFO  21:57:32,397 - #16 -
INFO  21:57:32,397 - #9 3
INFO  21:57:32,397 - #27 ;
INFO  21:57:32,398 - #31 if
INFO  21:57:32,398 - #29 (
INFO  21:57:32,399 - #8 e
INFO  21:57:32,399 - #38 >
INFO  21:57:32,399 - #9 0
INFO  21:57:32,401 - #30 )
INFO  21:57:32,401 - #20 {
INFO  21:57:32,401 - #3 print
INFO  21:57:32,402 - #29 (
INFO  21:57:32,402 - #8 e
INFO  21:57:32,402 - #30 )
INFO  21:57:32,402 - #27 ;
INFO  21:57:32,402 - #21 }
INFO  21:57:32,402 - #32 else
INFO  21:57:32,403 - #20 {
INFO  21:57:32,403 - #3 print
INFO  21:57:32,403 - #29 (
INFO  21:57:32,403 - #8 d
INFO  21:57:32,403 - #30 )
INFO  21:57:32,404 - #27 ;
INFO  21:57:32,404 - #21 }
INFO  21:57:32,404 - #21 }
INFO  21:57:32,404 - #21 }
INFO  21:57:32,405 - =====================SINTAKSNO_STABLO=========================
INFO  21:57:32,407 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:57:32,407 - ==============================================================
INFO  21:57:32,421 - Pocetak obrade programa Program na liniji 1
INFO  21:57:32,421 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:57:32,422 - Deklarisana konstanta c na liniji 2
INFO  21:57:32,423 - Deklarisana konstanta d na liniji 2
INFO  21:57:32,423 - Deklarisana konstanta g na liniji 2
INFO  21:57:32,423 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:57:32,423 - Deklarisana promenljiva e na liniji 3
INFO  21:57:32,424 - Pocetak obrade metode main na liniji 5
INFO  21:57:32,424 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:57:32,424 - Zavrsetak obrade programa Program na liniji 1
INFO  21:57:32,424 - ======================TABELA_SIMBOLA==========================
INFO  21:57:32,425 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:57:32,425 - ==============================================================
INFO  21:57:32,425 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:57:32,425 - ==============================================================
INFO  21:57:32,425 - ======================GENERISANJE_KODA========================
INFO  21:57:32,432 - Generisanje koda uspesno zavrseno!
INFO  21:57:32,432 - Generisanje izlaznog fajla test\program.obj
INFO  21:57:32,432 - ==============================================================
INFO  21:58:19,098 - Obrada ulaznog fajla test\program.mj
INFO  21:58:19,183 - #2 program
INFO  21:58:19,184 - #8 Program
INFO  21:58:19,184 - #5 const
INFO  21:58:19,185 - #8 int
INFO  21:58:19,185 - #8 c
INFO  21:58:19,186 - #24 =
INFO  21:58:19,186 - #9 10
INFO  21:58:19,186 - #28 ,
INFO  21:58:19,188 - #8 d
INFO  21:58:19,188 - #24 =
INFO  21:58:19,188 - #9 99
INFO  21:58:19,188 - #28 ,
INFO  21:58:19,188 - #8 g
INFO  21:58:19,188 - #24 =
INFO  21:58:19,188 - #9 2
INFO  21:58:19,189 - #27 ;
INFO  21:58:19,189 - #8 int
INFO  21:58:19,190 - #8 e
INFO  21:58:19,190 - #27 ;
INFO  21:58:19,191 - #20 {
INFO  21:58:19,192 - #6 void
INFO  21:58:19,193 - #8 main
INFO  21:58:19,193 - #29 (
INFO  21:58:19,194 - #30 )
INFO  21:58:19,194 - #20 {
INFO  21:58:19,194 - #8 e
INFO  21:58:19,194 - #24 =
INFO  21:58:19,195 - #16 -
INFO  21:58:19,195 - #9 3
INFO  21:58:19,195 - #27 ;
INFO  21:58:19,195 - #31 if
INFO  21:58:19,196 - #29 (
INFO  21:58:19,196 - #8 e
INFO  21:58:19,196 - #38 >
INFO  21:58:19,196 - #9 0
INFO  21:58:19,197 - #30 )
INFO  21:58:19,198 - #20 {
INFO  21:58:19,198 - #3 print
INFO  21:58:19,198 - #29 (
INFO  21:58:19,198 - #8 e
INFO  21:58:19,198 - #30 )
INFO  21:58:19,198 - #27 ;
INFO  21:58:19,198 - #21 }
INFO  21:58:19,198 - #32 else
INFO  21:58:19,200 - #20 {
INFO  21:58:19,200 - #3 print
INFO  21:58:19,200 - #29 (
INFO  21:58:19,200 - #8 d
INFO  21:58:19,200 - #30 )
INFO  21:58:19,201 - #27 ;
INFO  21:58:19,201 - #21 }
INFO  21:58:19,201 - #21 }
INFO  21:58:19,202 - #21 }
INFO  21:58:19,203 - =====================SINTAKSNO_STABLO=========================
INFO  21:58:19,204 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:58:19,205 - ==============================================================
INFO  21:58:19,219 - Pocetak obrade programa Program na liniji 1
INFO  21:58:19,220 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:58:19,220 - Deklarisana konstanta c na liniji 2
INFO  21:58:19,220 - Deklarisana konstanta d na liniji 2
INFO  21:58:19,221 - Deklarisana konstanta g na liniji 2
INFO  21:58:19,221 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:58:19,221 - Deklarisana promenljiva e na liniji 3
INFO  21:58:19,222 - Pocetak obrade metode main na liniji 5
INFO  21:58:19,222 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:58:19,222 - Zavrsetak obrade programa Program na liniji 1
INFO  21:58:19,222 - ======================TABELA_SIMBOLA==========================
INFO  21:58:19,223 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:58:19,223 - ==============================================================
INFO  21:58:19,223 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:58:19,223 - ==============================================================
INFO  21:58:19,223 - ======================GENERISANJE_KODA========================
INFO  21:58:19,229 - Generisanje koda uspesno zavrseno!
INFO  21:58:19,229 - Generisanje izlaznog fajla test\program.obj
INFO  21:58:19,229 - ==============================================================
INFO  21:58:45,450 - Obrada ulaznog fajla test\program.mj
INFO  21:58:45,531 - #2 program
INFO  21:58:45,531 - #8 Program
INFO  21:58:45,532 - #5 const
INFO  21:58:45,533 - #8 int
INFO  21:58:45,533 - #8 c
INFO  21:58:45,534 - #24 =
INFO  21:58:45,534 - #9 10
INFO  21:58:45,534 - #28 ,
INFO  21:58:45,535 - #8 d
INFO  21:58:45,536 - #24 =
INFO  21:58:45,536 - #9 99
INFO  21:58:45,536 - #28 ,
INFO  21:58:45,536 - #8 g
INFO  21:58:45,536 - #24 =
INFO  21:58:45,536 - #9 2
INFO  21:58:45,536 - #27 ;
INFO  21:58:45,536 - #8 int
INFO  21:58:45,537 - #8 e
INFO  21:58:45,537 - #27 ;
INFO  21:58:45,538 - #20 {
INFO  21:58:45,539 - #6 void
INFO  21:58:45,539 - #8 main
INFO  21:58:45,539 - #29 (
INFO  21:58:45,540 - #30 )
INFO  21:58:45,540 - #20 {
INFO  21:58:45,540 - #8 e
INFO  21:58:45,540 - #24 =
INFO  21:58:45,540 - #16 -
INFO  21:58:45,540 - #9 3
INFO  21:58:45,541 - #27 ;
INFO  21:58:45,541 - #31 if
INFO  21:58:45,541 - #29 (
INFO  21:58:45,542 - #8 e
INFO  21:58:45,542 - #38 >
INFO  21:58:45,542 - #9 0
INFO  21:58:45,544 - #30 )
INFO  21:58:45,544 - #20 {
INFO  21:58:45,544 - #3 print
INFO  21:58:45,545 - #29 (
INFO  21:58:45,545 - #8 e
INFO  21:58:45,545 - #30 )
INFO  21:58:45,545 - #27 ;
INFO  21:58:45,545 - #21 }
INFO  21:58:45,545 - #32 else
INFO  21:58:45,546 - #20 {
INFO  21:58:45,546 - #3 print
INFO  21:58:45,546 - #29 (
INFO  21:58:45,547 - #8 d
INFO  21:58:45,547 - #30 )
INFO  21:58:45,547 - #27 ;
INFO  21:58:45,547 - #21 }
INFO  21:58:45,547 - #21 }
INFO  21:58:45,547 - #21 }
INFO  21:58:45,548 - =====================SINTAKSNO_STABLO=========================
INFO  21:58:45,550 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:58:45,551 - ==============================================================
INFO  21:58:45,562 - Pocetak obrade programa Program na liniji 1
INFO  21:58:45,562 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:58:45,563 - Deklarisana konstanta c na liniji 2
INFO  21:58:45,563 - Deklarisana konstanta d na liniji 2
INFO  21:58:45,563 - Deklarisana konstanta g na liniji 2
INFO  21:58:45,563 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:58:45,564 - Deklarisana promenljiva e na liniji 3
INFO  21:58:45,565 - Pocetak obrade metode main na liniji 5
INFO  21:58:45,566 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:58:45,566 - Zavrsetak obrade programa Program na liniji 1
INFO  21:58:45,566 - ======================TABELA_SIMBOLA==========================
INFO  21:58:45,567 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:58:45,567 - ==============================================================
INFO  21:58:45,567 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:58:45,567 - ==============================================================
INFO  21:58:45,567 - ======================GENERISANJE_KODA========================
ERROR 21:58:45,571 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:58:45,572 - Generisanje koda neuspesno!
INFO  21:58:45,573 - ==============================================================
INFO  21:59:00,123 - Obrada ulaznog fajla test\program.mj
INFO  21:59:00,198 - #2 program
INFO  21:59:00,199 - #8 Program
INFO  21:59:00,199 - #5 const
INFO  21:59:00,200 - #8 int
INFO  21:59:00,200 - #8 c
INFO  21:59:00,200 - #24 =
INFO  21:59:00,201 - #9 10
INFO  21:59:00,201 - #28 ,
INFO  21:59:00,202 - #8 d
INFO  21:59:00,202 - #24 =
INFO  21:59:00,202 - #9 99
INFO  21:59:00,202 - #28 ,
INFO  21:59:00,202 - #8 g
INFO  21:59:00,202 - #24 =
INFO  21:59:00,202 - #9 2
INFO  21:59:00,203 - #27 ;
INFO  21:59:00,203 - #8 int
INFO  21:59:00,204 - #8 e
INFO  21:59:00,204 - #27 ;
INFO  21:59:00,204 - #20 {
INFO  21:59:00,206 - #6 void
INFO  21:59:00,206 - #8 main
INFO  21:59:00,206 - #29 (
INFO  21:59:00,206 - #30 )
INFO  21:59:00,207 - #20 {
INFO  21:59:00,207 - #8 e
INFO  21:59:00,207 - #24 =
INFO  21:59:00,207 - #16 -
INFO  21:59:00,207 - #9 3
INFO  21:59:00,207 - #27 ;
INFO  21:59:00,208 - #31 if
INFO  21:59:00,208 - #29 (
INFO  21:59:00,208 - #8 e
INFO  21:59:00,208 - #38 >
INFO  21:59:00,209 - #9 0
INFO  21:59:00,210 - #30 )
INFO  21:59:00,210 - #20 {
INFO  21:59:00,210 - #3 print
INFO  21:59:00,210 - #29 (
INFO  21:59:00,210 - #8 e
INFO  21:59:00,210 - #30 )
INFO  21:59:00,211 - #27 ;
INFO  21:59:00,211 - #21 }
INFO  21:59:00,211 - #32 else
INFO  21:59:00,213 - #20 {
INFO  21:59:00,213 - #3 print
INFO  21:59:00,213 - #29 (
INFO  21:59:00,213 - #8 d
INFO  21:59:00,213 - #30 )
INFO  21:59:00,214 - #27 ;
INFO  21:59:00,214 - #21 }
INFO  21:59:00,214 - #21 }
INFO  21:59:00,214 - #21 }
INFO  21:59:00,215 - =====================SINTAKSNO_STABLO=========================
INFO  21:59:00,217 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:59:00,218 - ==============================================================
INFO  21:59:00,233 - Pocetak obrade programa Program na liniji 1
INFO  21:59:00,233 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:59:00,234 - Deklarisana konstanta c na liniji 2
INFO  21:59:00,234 - Deklarisana konstanta d na liniji 2
INFO  21:59:00,234 - Deklarisana konstanta g na liniji 2
INFO  21:59:00,234 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:59:00,235 - Deklarisana promenljiva e na liniji 3
INFO  21:59:00,235 - Pocetak obrade metode main na liniji 5
INFO  21:59:00,236 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:59:00,236 - Zavrsetak obrade programa Program na liniji 1
INFO  21:59:00,236 - ======================TABELA_SIMBOLA==========================
INFO  21:59:00,237 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:59:00,237 - ==============================================================
INFO  21:59:00,237 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:59:00,237 - ==============================================================
INFO  21:59:00,237 - ======================GENERISANJE_KODA========================
ERROR 21:59:00,240 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:59:00,242 - Generisanje koda neuspesno!
INFO  21:59:00,242 - ==============================================================
INFO  21:59:05,339 - Obrada ulaznog fajla test\program.mj
INFO  21:59:05,459 - #2 program
INFO  21:59:05,459 - #8 Program
INFO  21:59:05,460 - #5 const
INFO  21:59:05,461 - #8 int
INFO  21:59:05,461 - #8 c
INFO  21:59:05,462 - #24 =
INFO  21:59:05,462 - #9 10
INFO  21:59:05,462 - #28 ,
INFO  21:59:05,464 - #8 d
INFO  21:59:05,464 - #24 =
INFO  21:59:05,464 - #9 99
INFO  21:59:05,464 - #28 ,
INFO  21:59:05,464 - #8 g
INFO  21:59:05,464 - #24 =
INFO  21:59:05,464 - #9 2
INFO  21:59:05,464 - #27 ;
INFO  21:59:05,465 - #8 int
INFO  21:59:05,467 - #8 e
INFO  21:59:05,467 - #27 ;
INFO  21:59:05,468 - #20 {
INFO  21:59:05,471 - #6 void
INFO  21:59:05,471 - #8 main
INFO  21:59:05,471 - #29 (
INFO  21:59:05,472 - #30 )
INFO  21:59:05,472 - #20 {
INFO  21:59:05,473 - #8 e
INFO  21:59:05,473 - #24 =
INFO  21:59:05,473 - #16 -
INFO  21:59:05,473 - #9 3
INFO  21:59:05,473 - #27 ;
INFO  21:59:05,474 - #31 if
INFO  21:59:05,474 - #29 (
INFO  21:59:05,474 - #8 e
INFO  21:59:05,475 - #38 >
INFO  21:59:05,475 - #9 0
INFO  21:59:05,477 - #30 )
INFO  21:59:05,477 - #20 {
INFO  21:59:05,478 - #3 print
INFO  21:59:05,478 - #29 (
INFO  21:59:05,478 - #8 e
INFO  21:59:05,478 - #30 )
INFO  21:59:05,478 - #27 ;
INFO  21:59:05,478 - #21 }
INFO  21:59:05,479 - #32 else
INFO  21:59:05,481 - #20 {
INFO  21:59:05,481 - #3 print
INFO  21:59:05,481 - #29 (
INFO  21:59:05,481 - #8 d
INFO  21:59:05,482 - #30 )
INFO  21:59:05,482 - #27 ;
INFO  21:59:05,482 - #21 }
INFO  21:59:05,482 - #21 }
INFO  21:59:05,483 - #21 }
INFO  21:59:05,484 - =====================SINTAKSNO_STABLO=========================
INFO  21:59:05,487 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:59:05,488 - ==============================================================
INFO  21:59:05,508 - Pocetak obrade programa Program na liniji 1
INFO  21:59:05,508 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:59:05,509 - Deklarisana konstanta c na liniji 2
INFO  21:59:05,509 - Deklarisana konstanta d na liniji 2
INFO  21:59:05,510 - Deklarisana konstanta g na liniji 2
INFO  21:59:05,510 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:59:05,510 - Deklarisana promenljiva e na liniji 3
INFO  21:59:05,511 - Pocetak obrade metode main na liniji 5
INFO  21:59:05,511 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:59:05,512 - Zavrsetak obrade programa Program na liniji 1
INFO  21:59:05,512 - ======================TABELA_SIMBOLA==========================
INFO  21:59:05,512 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  21:59:05,512 - ==============================================================
INFO  21:59:05,512 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:59:05,513 - ==============================================================
INFO  21:59:05,513 - ======================GENERISANJE_KODA========================
ERROR 21:59:05,517 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 21:59:05,519 - Generisanje koda neuspesno!
INFO  21:59:05,519 - ==============================================================
INFO  22:00:50,304 - Obrada ulaznog fajla test\program.mj
INFO  22:00:50,383 - #2 program
INFO  22:00:50,384 - #8 Program
INFO  22:00:50,384 - #5 const
INFO  22:00:50,385 - #8 int
INFO  22:00:50,385 - #8 c
INFO  22:00:50,385 - #24 =
INFO  22:00:50,385 - #9 10
INFO  22:00:50,386 - #28 ,
INFO  22:00:50,387 - #8 d
INFO  22:00:50,387 - #24 =
INFO  22:00:50,387 - #9 99
INFO  22:00:50,387 - #28 ,
INFO  22:00:50,387 - #8 g
INFO  22:00:50,387 - #24 =
INFO  22:00:50,387 - #9 2
INFO  22:00:50,387 - #27 ;
INFO  22:00:50,387 - #8 int
INFO  22:00:50,388 - #8 e
INFO  22:00:50,388 - #27 ;
INFO  22:00:50,389 - #20 {
INFO  22:00:50,390 - #6 void
INFO  22:00:50,390 - #8 main
INFO  22:00:50,390 - #29 (
INFO  22:00:50,391 - #30 )
INFO  22:00:50,391 - #20 {
INFO  22:00:50,391 - #8 e
INFO  22:00:50,391 - #24 =
INFO  22:00:50,391 - #16 -
INFO  22:00:50,391 - #9 3
INFO  22:00:50,391 - #27 ;
INFO  22:00:50,392 - #31 if
INFO  22:00:50,392 - #29 (
INFO  22:00:50,392 - #8 e
INFO  22:00:50,392 - #38 >
INFO  22:00:50,393 - #9 0
INFO  22:00:50,394 - #30 )
INFO  22:00:50,394 - #20 {
INFO  22:00:50,394 - #3 print
INFO  22:00:50,394 - #29 (
INFO  22:00:50,394 - #8 e
INFO  22:00:50,394 - #30 )
INFO  22:00:50,395 - #27 ;
INFO  22:00:50,395 - #21 }
INFO  22:00:50,395 - #32 else
INFO  22:00:50,396 - #20 {
INFO  22:00:50,396 - #3 print
INFO  22:00:50,396 - #29 (
INFO  22:00:50,396 - #8 d
INFO  22:00:50,396 - #30 )
INFO  22:00:50,396 - #27 ;
INFO  22:00:50,396 - #21 }
INFO  22:00:50,396 - #21 }
INFO  22:00:50,397 - #21 }
INFO  22:00:50,397 - =====================SINTAKSNO_STABLO=========================
INFO  22:00:50,399 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:00:50,401 - ==============================================================
INFO  22:00:50,414 - Pocetak obrade programa Program na liniji 1
INFO  22:00:50,414 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:00:50,415 - Deklarisana konstanta c na liniji 2
INFO  22:00:50,416 - Deklarisana konstanta d na liniji 2
INFO  22:00:50,416 - Deklarisana konstanta g na liniji 2
INFO  22:00:50,416 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:00:50,416 - Deklarisana promenljiva e na liniji 3
INFO  22:00:50,417 - Pocetak obrade metode main na liniji 5
INFO  22:00:50,417 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:00:50,417 - Zavrsetak obrade programa Program na liniji 1
INFO  22:00:50,417 - ======================TABELA_SIMBOLA==========================
INFO  22:00:50,418 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:00:50,418 - ==============================================================
INFO  22:00:50,418 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:00:50,418 - ==============================================================
INFO  22:00:50,418 - ======================GENERISANJE_KODA========================
INFO  22:00:50,423 - Generisanje koda uspesno zavrseno!
INFO  22:00:50,424 - Generisanje izlaznog fajla test\program.obj
INFO  22:00:50,424 - ==============================================================
INFO  22:02:40,755 - Obrada ulaznog fajla test\program.mj
INFO  22:02:40,835 - #2 program
INFO  22:02:40,835 - #8 Program
INFO  22:02:40,835 - #5 const
INFO  22:02:40,836 - #8 int
INFO  22:02:40,836 - #8 c
INFO  22:02:40,837 - #24 =
INFO  22:02:40,837 - #9 10
INFO  22:02:40,837 - #28 ,
INFO  22:02:40,839 - #8 d
INFO  22:02:40,839 - #24 =
INFO  22:02:40,839 - #9 99
INFO  22:02:40,839 - #28 ,
INFO  22:02:40,839 - #8 g
INFO  22:02:40,839 - #24 =
INFO  22:02:40,839 - #9 2
INFO  22:02:40,839 - #27 ;
INFO  22:02:40,840 - #8 int
INFO  22:02:40,841 - #8 e
INFO  22:02:40,841 - #27 ;
INFO  22:02:40,841 - #20 {
INFO  22:02:40,842 - #6 void
INFO  22:02:40,843 - #8 main
INFO  22:02:40,843 - #29 (
INFO  22:02:40,844 - #30 )
INFO  22:02:40,844 - #20 {
INFO  22:02:40,844 - #8 e
INFO  22:02:40,844 - #24 =
INFO  22:02:40,844 - #9 1
INFO  22:02:40,844 - #27 ;
INFO  22:02:40,845 - #31 if
INFO  22:02:40,845 - #29 (
INFO  22:02:40,845 - #8 e
INFO  22:02:40,845 - #38 >
INFO  22:02:40,846 - #9 0
INFO  22:02:40,848 - #30 )
INFO  22:02:40,849 - #20 {
INFO  22:02:40,849 - #3 print
INFO  22:02:40,849 - #29 (
INFO  22:02:40,849 - #8 e
INFO  22:02:40,849 - #30 )
INFO  22:02:40,849 - #27 ;
INFO  22:02:40,849 - #21 }
INFO  22:02:40,850 - #32 else
INFO  22:02:40,851 - #20 {
INFO  22:02:40,851 - #3 print
INFO  22:02:40,851 - #29 (
INFO  22:02:40,851 - #8 d
INFO  22:02:40,851 - #30 )
INFO  22:02:40,851 - #27 ;
INFO  22:02:40,851 - #21 }
INFO  22:02:40,851 - #21 }
INFO  22:02:40,852 - #21 }
INFO  22:02:40,853 - =====================SINTAKSNO_STABLO=========================
INFO  22:02:40,854 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:02:40,855 - ==============================================================
INFO  22:02:40,871 - Pocetak obrade programa Program na liniji 1
INFO  22:02:40,871 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:02:40,872 - Deklarisana konstanta c na liniji 2
INFO  22:02:40,872 - Deklarisana konstanta d na liniji 2
INFO  22:02:40,873 - Deklarisana konstanta g na liniji 2
INFO  22:02:40,873 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:02:40,873 - Deklarisana promenljiva e na liniji 3
INFO  22:02:40,874 - Pocetak obrade metode main na liniji 5
INFO  22:02:40,874 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:02:40,875 - Zavrsetak obrade programa Program na liniji 1
INFO  22:02:40,875 - ======================TABELA_SIMBOLA==========================
INFO  22:02:40,875 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:02:40,875 - ==============================================================
INFO  22:02:40,875 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:02:40,875 - ==============================================================
INFO  22:02:40,875 - ======================GENERISANJE_KODA========================
INFO  22:02:40,881 - Generisanje koda uspesno zavrseno!
INFO  22:02:40,881 - Generisanje izlaznog fajla test\program.obj
INFO  22:02:40,881 - ==============================================================
INFO  22:03:28,404 - Obrada ulaznog fajla test\program.mj
INFO  22:03:28,482 - #2 program
INFO  22:03:28,482 - #8 Program
INFO  22:03:28,482 - #5 const
INFO  22:03:28,483 - #8 int
INFO  22:03:28,483 - #8 c
INFO  22:03:28,483 - #24 =
INFO  22:03:28,484 - #9 10
INFO  22:03:28,484 - #28 ,
INFO  22:03:28,485 - #8 d
INFO  22:03:28,485 - #24 =
INFO  22:03:28,485 - #9 99
INFO  22:03:28,485 - #28 ,
INFO  22:03:28,485 - #8 g
INFO  22:03:28,485 - #24 =
INFO  22:03:28,486 - #9 2
INFO  22:03:28,486 - #27 ;
INFO  22:03:28,487 - #8 int
INFO  22:03:28,488 - #8 e
INFO  22:03:28,488 - #27 ;
INFO  22:03:28,489 - #20 {
INFO  22:03:28,490 - #6 void
INFO  22:03:28,490 - #8 main
INFO  22:03:28,490 - #29 (
INFO  22:03:28,491 - #30 )
INFO  22:03:28,492 - #20 {
INFO  22:03:28,492 - #8 e
INFO  22:03:28,492 - #24 =
INFO  22:03:28,492 - #9 0
INFO  22:03:28,493 - #27 ;
INFO  22:03:28,493 - #31 if
INFO  22:03:28,494 - #29 (
INFO  22:03:28,494 - #8 e
INFO  22:03:28,494 - #38 >
INFO  22:03:28,494 - #9 0
INFO  22:03:28,495 - #30 )
INFO  22:03:28,496 - #20 {
INFO  22:03:28,496 - #3 print
INFO  22:03:28,496 - #29 (
INFO  22:03:28,496 - #8 e
INFO  22:03:28,496 - #30 )
INFO  22:03:28,496 - #27 ;
INFO  22:03:28,497 - #21 }
INFO  22:03:28,497 - #32 else
INFO  22:03:28,498 - #20 {
INFO  22:03:28,498 - #3 print
INFO  22:03:28,498 - #29 (
INFO  22:03:28,498 - #8 d
INFO  22:03:28,498 - #30 )
INFO  22:03:28,498 - #27 ;
INFO  22:03:28,499 - #21 }
INFO  22:03:28,499 - #33 do
INFO  22:03:28,499 - #20 {
INFO  22:03:28,500 - #3 print
INFO  22:03:28,500 - #29 (
INFO  22:03:28,500 - #8 e
INFO  22:03:28,500 - #30 )
INFO  22:03:28,500 - #27 ;
INFO  22:03:28,500 - #8 e
INFO  22:03:28,500 - #25 ++
INFO  22:03:28,501 - #27 ;
INFO  22:03:28,501 - #21 }
INFO  22:03:28,501 - #34 while
INFO  22:03:28,501 - #29 (
INFO  22:03:28,501 - #8 i
INFO  22:03:28,501 - #40 <
INFO  22:03:28,501 - #9 3
INFO  22:03:28,502 - #30 )
INFO  22:03:28,502 - #27 ;
INFO  22:03:28,502 - #21 }
INFO  22:03:28,503 - #21 }
INFO  22:03:28,503 - =====================SINTAKSNO_STABLO=========================
INFO  22:03:28,506 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         i
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_lt(
                  ) [Rel_op_lt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       3
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:03:28,506 - ==============================================================
INFO  22:03:28,523 - Pocetak obrade programa Program na liniji 1
INFO  22:03:28,523 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:03:28,525 - Deklarisana konstanta c na liniji 2
INFO  22:03:28,525 - Deklarisana konstanta d na liniji 2
INFO  22:03:28,525 - Deklarisana konstanta g na liniji 2
INFO  22:03:28,525 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:03:28,525 - Deklarisana promenljiva e na liniji 3
INFO  22:03:28,526 - Pocetak obrade metode main na liniji 5
ERROR 22:03:28,526 - Semanticka greska - ime i nije deklarisano na liniji 16!
INFO  22:03:28,527 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:03:28,527 - Zavrsetak obrade programa Program na liniji 1
INFO  22:03:28,527 - ======================TABELA_SIMBOLA==========================
INFO  22:03:28,527 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:03:28,527 - ==============================================================
ERROR 22:03:28,527 - Ulazni fajl ima semanticke greske!
INFO  22:03:42,773 - Obrada ulaznog fajla test\program.mj
INFO  22:03:42,857 - #2 program
INFO  22:03:42,857 - #8 Program
INFO  22:03:42,858 - #5 const
INFO  22:03:42,859 - #8 int
INFO  22:03:42,859 - #8 c
INFO  22:03:42,860 - #24 =
INFO  22:03:42,860 - #9 10
INFO  22:03:42,860 - #28 ,
INFO  22:03:42,862 - #8 d
INFO  22:03:42,862 - #24 =
INFO  22:03:42,862 - #9 99
INFO  22:03:42,862 - #28 ,
INFO  22:03:42,863 - #8 g
INFO  22:03:42,863 - #24 =
INFO  22:03:42,863 - #9 2
INFO  22:03:42,863 - #27 ;
INFO  22:03:42,863 - #8 int
INFO  22:03:42,864 - #8 e
INFO  22:03:42,864 - #27 ;
INFO  22:03:42,865 - #20 {
INFO  22:03:42,867 - #6 void
INFO  22:03:42,867 - #8 main
INFO  22:03:42,867 - #29 (
INFO  22:03:42,868 - #30 )
INFO  22:03:42,868 - #20 {
INFO  22:03:42,868 - #8 e
INFO  22:03:42,868 - #24 =
INFO  22:03:42,869 - #9 0
INFO  22:03:42,869 - #27 ;
INFO  22:03:42,869 - #31 if
INFO  22:03:42,870 - #29 (
INFO  22:03:42,870 - #8 e
INFO  22:03:42,870 - #38 >
INFO  22:03:42,871 - #9 0
INFO  22:03:42,872 - #30 )
INFO  22:03:42,873 - #20 {
INFO  22:03:42,873 - #3 print
INFO  22:03:42,873 - #29 (
INFO  22:03:42,873 - #8 e
INFO  22:03:42,874 - #30 )
INFO  22:03:42,874 - #27 ;
INFO  22:03:42,874 - #21 }
INFO  22:03:42,874 - #32 else
INFO  22:03:42,875 - #20 {
INFO  22:03:42,876 - #3 print
INFO  22:03:42,876 - #29 (
INFO  22:03:42,876 - #8 d
INFO  22:03:42,876 - #30 )
INFO  22:03:42,876 - #27 ;
INFO  22:03:42,876 - #21 }
INFO  22:03:42,877 - #33 do
INFO  22:03:42,878 - #20 {
INFO  22:03:42,880 - #3 print
INFO  22:03:42,880 - #29 (
INFO  22:03:42,880 - #8 e
INFO  22:03:42,880 - #30 )
INFO  22:03:42,880 - #27 ;
INFO  22:03:42,880 - #8 e
INFO  22:03:42,881 - #25 ++
INFO  22:03:42,881 - #27 ;
INFO  22:03:42,881 - #21 }
INFO  22:03:42,881 - #34 while
INFO  22:03:42,881 - #29 (
INFO  22:03:42,881 - #8 e
INFO  22:03:42,881 - #40 <
INFO  22:03:42,881 - #9 3
INFO  22:03:42,882 - #30 )
INFO  22:03:42,883 - #27 ;
INFO  22:03:42,883 - #21 }
INFO  22:03:42,883 - #21 }
INFO  22:03:42,884 - =====================SINTAKSNO_STABLO=========================
INFO  22:03:42,887 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_lt(
                  ) [Rel_op_lt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       3
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:03:42,887 - ==============================================================
INFO  22:03:42,904 - Pocetak obrade programa Program na liniji 1
INFO  22:03:42,905 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:03:42,908 - Deklarisana konstanta c na liniji 2
INFO  22:03:42,908 - Deklarisana konstanta d na liniji 2
INFO  22:03:42,908 - Deklarisana konstanta g na liniji 2
INFO  22:03:42,908 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:03:42,909 - Deklarisana promenljiva e na liniji 3
INFO  22:03:42,910 - Pocetak obrade metode main na liniji 5
INFO  22:03:42,910 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:03:42,910 - Zavrsetak obrade programa Program na liniji 1
INFO  22:03:42,910 - ======================TABELA_SIMBOLA==========================
INFO  22:03:42,911 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:03:42,911 - ==============================================================
INFO  22:03:42,911 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:03:42,911 - ==============================================================
INFO  22:03:42,912 - ======================GENERISANJE_KODA========================
INFO  22:03:42,918 - Generisanje koda uspesno zavrseno!
INFO  22:03:42,918 - Generisanje izlaznog fajla test\program.obj
INFO  22:03:42,918 - ==============================================================
INFO  22:04:39,038 - Obrada ulaznog fajla test\program.mj
INFO  22:04:39,119 - #2 program
INFO  22:04:39,120 - #8 Program
INFO  22:04:39,120 - #5 const
INFO  22:04:39,121 - #8 int
INFO  22:04:39,121 - #8 c
INFO  22:04:39,122 - #24 =
INFO  22:04:39,122 - #9 10
INFO  22:04:39,122 - #28 ,
INFO  22:04:39,123 - #8 d
INFO  22:04:39,123 - #24 =
INFO  22:04:39,123 - #9 99
INFO  22:04:39,124 - #28 ,
INFO  22:04:39,124 - #8 g
INFO  22:04:39,124 - #24 =
INFO  22:04:39,125 - #9 2
INFO  22:04:39,125 - #27 ;
INFO  22:04:39,125 - #8 int
INFO  22:04:39,126 - #8 e
INFO  22:04:39,127 - #27 ;
INFO  22:04:39,127 - #20 {
INFO  22:04:39,129 - #6 void
INFO  22:04:39,129 - #8 main
INFO  22:04:39,129 - #29 (
INFO  22:04:39,130 - #30 )
INFO  22:04:39,130 - #20 {
INFO  22:04:39,130 - #8 e
INFO  22:04:39,131 - #24 =
INFO  22:04:39,131 - #9 5
INFO  22:04:39,131 - #27 ;
INFO  22:04:39,132 - #31 if
INFO  22:04:39,132 - #29 (
INFO  22:04:39,132 - #8 e
INFO  22:04:39,132 - #38 >
INFO  22:04:39,133 - #9 0
INFO  22:04:39,134 - #30 )
INFO  22:04:39,135 - #20 {
INFO  22:04:39,135 - #3 print
INFO  22:04:39,135 - #29 (
INFO  22:04:39,135 - #8 e
INFO  22:04:39,135 - #30 )
INFO  22:04:39,135 - #27 ;
INFO  22:04:39,135 - #21 }
INFO  22:04:39,135 - #32 else
INFO  22:04:39,136 - #20 {
INFO  22:04:39,137 - #3 print
INFO  22:04:39,137 - #29 (
INFO  22:04:39,137 - #8 d
INFO  22:04:39,137 - #30 )
INFO  22:04:39,137 - #27 ;
INFO  22:04:39,137 - #21 }
INFO  22:04:39,137 - #33 do
INFO  22:04:39,137 - #20 {
INFO  22:04:39,138 - #3 print
INFO  22:04:39,138 - #29 (
INFO  22:04:39,138 - #8 e
INFO  22:04:39,138 - #30 )
INFO  22:04:39,139 - #27 ;
INFO  22:04:39,139 - #8 e
INFO  22:04:39,139 - #25 ++
INFO  22:04:39,139 - #27 ;
INFO  22:04:39,139 - #21 }
INFO  22:04:39,139 - #34 while
INFO  22:04:39,139 - #29 (
INFO  22:04:39,139 - #8 e
INFO  22:04:39,140 - #40 <
INFO  22:04:39,140 - #9 9
INFO  22:04:39,141 - #30 )
INFO  22:04:39,141 - #27 ;
INFO  22:04:39,141 - #21 }
INFO  22:04:39,141 - #21 }
INFO  22:04:39,142 - =====================SINTAKSNO_STABLO=========================
INFO  22:04:39,144 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       5
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_lt(
                  ) [Rel_op_lt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       9
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:04:39,145 - ==============================================================
INFO  22:04:39,157 - Pocetak obrade programa Program na liniji 1
INFO  22:04:39,157 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:04:39,159 - Deklarisana konstanta c na liniji 2
INFO  22:04:39,159 - Deklarisana konstanta d na liniji 2
INFO  22:04:39,160 - Deklarisana konstanta g na liniji 2
INFO  22:04:39,160 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:04:39,160 - Deklarisana promenljiva e na liniji 3
INFO  22:04:39,160 - Pocetak obrade metode main na liniji 5
INFO  22:04:39,161 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:04:39,161 - Zavrsetak obrade programa Program na liniji 1
INFO  22:04:39,161 - ======================TABELA_SIMBOLA==========================
INFO  22:04:39,161 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:04:39,162 - ==============================================================
INFO  22:04:39,162 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:04:39,162 - ==============================================================
INFO  22:04:39,162 - ======================GENERISANJE_KODA========================
INFO  22:04:39,166 - Generisanje koda uspesno zavrseno!
INFO  22:04:39,166 - Generisanje izlaznog fajla test\program.obj
INFO  22:04:39,166 - ==============================================================
INFO  22:06:46,834 - Obrada ulaznog fajla test\program.mj
INFO  22:06:46,917 - #2 program
INFO  22:06:46,917 - #8 Program
INFO  22:06:46,917 - #5 const
INFO  22:06:46,918 - #8 int
INFO  22:06:46,918 - #8 c
INFO  22:06:46,919 - #24 =
INFO  22:06:46,919 - #9 10
INFO  22:06:46,919 - #28 ,
INFO  22:06:46,922 - #8 d
INFO  22:06:46,922 - #24 =
INFO  22:06:46,922 - #9 99
INFO  22:06:46,923 - #28 ,
INFO  22:06:46,923 - #8 g
INFO  22:06:46,923 - #24 =
INFO  22:06:46,923 - #9 2
INFO  22:06:46,923 - #27 ;
INFO  22:06:46,924 - #8 int
INFO  22:06:46,925 - #8 e
INFO  22:06:46,926 - #27 ;
INFO  22:06:46,926 - #20 {
INFO  22:06:46,927 - #6 void
INFO  22:06:46,927 - #8 main
INFO  22:06:46,927 - #29 (
INFO  22:06:46,928 - #30 )
INFO  22:06:46,928 - #20 {
INFO  22:06:46,928 - #8 e
INFO  22:06:46,928 - #24 =
INFO  22:06:46,928 - #9 0
INFO  22:06:46,928 - #27 ;
INFO  22:06:46,929 - #31 if
INFO  22:06:46,929 - #29 (
INFO  22:06:46,930 - #8 e
INFO  22:06:46,930 - #38 >
INFO  22:06:46,930 - #9 0
INFO  22:06:46,931 - #30 )
INFO  22:06:46,931 - #20 {
INFO  22:06:46,931 - #3 print
INFO  22:06:46,932 - #29 (
INFO  22:06:46,932 - #8 e
INFO  22:06:46,932 - #30 )
INFO  22:06:46,932 - #27 ;
INFO  22:06:46,932 - #21 }
INFO  22:06:46,932 - #32 else
INFO  22:06:46,933 - #20 {
INFO  22:06:46,933 - #3 print
INFO  22:06:46,933 - #29 (
INFO  22:06:46,933 - #8 d
INFO  22:06:46,933 - #30 )
INFO  22:06:46,934 - #27 ;
INFO  22:06:46,934 - #21 }
INFO  22:06:46,934 - #33 do
INFO  22:06:46,935 - #20 {
INFO  22:06:46,936 - #3 print
INFO  22:06:46,936 - #29 (
INFO  22:06:46,936 - #8 e
INFO  22:06:46,936 - #30 )
INFO  22:06:46,936 - #27 ;
INFO  22:06:46,936 - #8 e
INFO  22:06:46,936 - #25 ++
INFO  22:06:46,936 - #27 ;
INFO  22:06:46,937 - #21 }
INFO  22:06:46,937 - #34 while
INFO  22:06:46,937 - #29 (
INFO  22:06:46,937 - #8 e
INFO  22:06:46,937 - #40 <
INFO  22:06:46,937 - #9 0
INFO  22:06:46,938 - #30 )
INFO  22:06:46,938 - #27 ;
INFO  22:06:46,939 - #21 }
INFO  22:06:46,939 - #21 }
INFO  22:06:46,940 - =====================SINTAKSNO_STABLO=========================
INFO  22:06:46,941 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_lt(
                  ) [Rel_op_lt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       0
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:06:46,942 - ==============================================================
INFO  22:06:46,953 - Pocetak obrade programa Program na liniji 1
INFO  22:06:46,953 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:06:46,955 - Deklarisana konstanta c na liniji 2
INFO  22:06:46,955 - Deklarisana konstanta d na liniji 2
INFO  22:06:46,955 - Deklarisana konstanta g na liniji 2
INFO  22:06:46,956 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:06:46,956 - Deklarisana promenljiva e na liniji 3
INFO  22:06:46,957 - Pocetak obrade metode main na liniji 5
INFO  22:06:46,957 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:06:46,957 - Zavrsetak obrade programa Program na liniji 1
INFO  22:06:46,957 - ======================TABELA_SIMBOLA==========================
INFO  22:06:46,958 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:06:46,958 - ==============================================================
INFO  22:06:46,958 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:06:46,958 - ==============================================================
INFO  22:06:46,958 - ======================GENERISANJE_KODA========================
INFO  22:06:46,963 - Generisanje koda uspesno zavrseno!
INFO  22:06:46,964 - Generisanje izlaznog fajla test\program.obj
INFO  22:06:46,964 - ==============================================================
INFO  22:07:01,455 - Obrada ulaznog fajla test\program.mj
INFO  22:07:01,550 - #2 program
INFO  22:07:01,550 - #8 Program
INFO  22:07:01,550 - #5 const
INFO  22:07:01,552 - #8 int
INFO  22:07:01,552 - #8 c
INFO  22:07:01,553 - #24 =
INFO  22:07:01,553 - #9 10
INFO  22:07:01,553 - #28 ,
INFO  22:07:01,555 - #8 d
INFO  22:07:01,557 - #24 =
INFO  22:07:01,557 - #9 99
INFO  22:07:01,557 - #28 ,
INFO  22:07:01,557 - #8 g
INFO  22:07:01,558 - #24 =
INFO  22:07:01,558 - #9 2
INFO  22:07:01,558 - #27 ;
INFO  22:07:01,558 - #8 int
INFO  22:07:01,560 - #8 e
INFO  22:07:01,560 - #27 ;
INFO  22:07:01,560 - #20 {
INFO  22:07:01,562 - #6 void
INFO  22:07:01,562 - #8 main
INFO  22:07:01,562 - #29 (
INFO  22:07:01,563 - #30 )
INFO  22:07:01,566 - #20 {
INFO  22:07:01,566 - #8 e
INFO  22:07:01,566 - #24 =
INFO  22:07:01,566 - #9 1
INFO  22:07:01,566 - #27 ;
INFO  22:07:01,567 - #31 if
INFO  22:07:01,567 - #29 (
INFO  22:07:01,568 - #8 e
INFO  22:07:01,568 - #38 >
INFO  22:07:01,568 - #9 0
INFO  22:07:01,570 - #30 )
INFO  22:07:01,571 - #20 {
INFO  22:07:01,571 - #3 print
INFO  22:07:01,571 - #29 (
INFO  22:07:01,571 - #8 e
INFO  22:07:01,572 - #30 )
INFO  22:07:01,572 - #27 ;
INFO  22:07:01,572 - #21 }
INFO  22:07:01,572 - #32 else
INFO  22:07:01,574 - #20 {
INFO  22:07:01,574 - #3 print
INFO  22:07:01,574 - #29 (
INFO  22:07:01,574 - #8 d
INFO  22:07:01,574 - #30 )
INFO  22:07:01,574 - #27 ;
INFO  22:07:01,574 - #21 }
INFO  22:07:01,575 - #33 do
INFO  22:07:01,575 - #20 {
INFO  22:07:01,576 - #3 print
INFO  22:07:01,576 - #29 (
INFO  22:07:01,576 - #8 e
INFO  22:07:01,577 - #30 )
INFO  22:07:01,577 - #27 ;
INFO  22:07:01,577 - #8 e
INFO  22:07:01,577 - #25 ++
INFO  22:07:01,577 - #27 ;
INFO  22:07:01,580 - #21 }
INFO  22:07:01,581 - #34 while
INFO  22:07:01,581 - #29 (
INFO  22:07:01,583 - #8 e
INFO  22:07:01,583 - #40 <
INFO  22:07:01,583 - #9 1
INFO  22:07:01,585 - #30 )
INFO  22:07:01,585 - #27 ;
INFO  22:07:01,585 - #21 }
INFO  22:07:01,586 - #21 }
INFO  22:07:01,588 - =====================SINTAKSNO_STABLO=========================
INFO  22:07:01,590 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_lt(
                  ) [Rel_op_lt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:07:01,591 - ==============================================================
INFO  22:07:01,606 - Pocetak obrade programa Program na liniji 1
INFO  22:07:01,606 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:07:01,609 - Deklarisana konstanta c na liniji 2
INFO  22:07:01,609 - Deklarisana konstanta d na liniji 2
INFO  22:07:01,609 - Deklarisana konstanta g na liniji 2
INFO  22:07:01,610 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:07:01,610 - Deklarisana promenljiva e na liniji 3
INFO  22:07:01,611 - Pocetak obrade metode main na liniji 5
INFO  22:07:01,611 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:07:01,611 - Zavrsetak obrade programa Program na liniji 1
INFO  22:07:01,611 - ======================TABELA_SIMBOLA==========================
INFO  22:07:01,612 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:07:01,612 - ==============================================================
INFO  22:07:01,612 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:07:01,612 - ==============================================================
INFO  22:07:01,612 - ======================GENERISANJE_KODA========================
INFO  22:07:01,617 - Generisanje koda uspesno zavrseno!
INFO  22:07:01,618 - Generisanje izlaznog fajla test\program.obj
INFO  22:07:01,618 - ==============================================================
INFO  22:17:50,589 - Obrada ulaznog fajla test\program.mj
INFO  22:17:50,667 - #2 program
INFO  22:17:50,667 - #8 Program
INFO  22:17:50,667 - #5 const
INFO  22:17:50,668 - #8 int
INFO  22:17:50,668 - #8 c
INFO  22:17:50,669 - #24 =
INFO  22:17:50,669 - #9 10
INFO  22:17:50,669 - #28 ,
INFO  22:17:50,670 - #8 d
INFO  22:17:50,670 - #24 =
INFO  22:17:50,671 - #9 99
INFO  22:17:50,671 - #28 ,
INFO  22:17:50,671 - #8 g
INFO  22:17:50,671 - #24 =
INFO  22:17:50,671 - #9 2
INFO  22:17:50,671 - #27 ;
INFO  22:17:50,671 - #8 int
INFO  22:17:50,673 - #8 e
INFO  22:17:50,673 - #27 ;
INFO  22:17:50,674 - #20 {
INFO  22:17:50,675 - #6 void
INFO  22:17:50,675 - #8 main
INFO  22:17:50,675 - #29 (
INFO  22:17:50,676 - #30 )
INFO  22:17:50,676 - #20 {
INFO  22:17:50,678 - #8 e
INFO  22:17:50,678 - #24 =
INFO  22:17:50,679 - #9 1
INFO  22:17:50,679 - #27 ;
INFO  22:17:50,680 - #31 if
INFO  22:17:50,680 - #29 (
INFO  22:17:50,680 - #8 e
INFO  22:17:50,680 - #38 >
INFO  22:17:50,680 - #9 0
INFO  22:17:50,682 - #30 )
INFO  22:17:50,683 - #20 {
INFO  22:17:50,683 - #3 print
INFO  22:17:50,683 - #29 (
INFO  22:17:50,683 - #8 e
INFO  22:17:50,683 - #30 )
INFO  22:17:50,683 - #27 ;
INFO  22:17:50,683 - #21 }
INFO  22:17:50,683 - #32 else
INFO  22:17:50,685 - #20 {
INFO  22:17:50,685 - #3 print
INFO  22:17:50,685 - #29 (
INFO  22:17:50,685 - #8 d
INFO  22:17:50,685 - #30 )
INFO  22:17:50,685 - #27 ;
INFO  22:17:50,686 - #21 }
INFO  22:17:50,686 - #33 do
INFO  22:17:50,686 - #20 {
INFO  22:17:50,687 - #3 print
INFO  22:17:50,687 - #29 (
INFO  22:17:50,688 - #8 e
INFO  22:17:50,688 - #30 )
INFO  22:17:50,688 - #27 ;
INFO  22:17:50,688 - #8 e
INFO  22:17:50,688 - #25 ++
INFO  22:17:50,688 - #27 ;
INFO  22:17:50,691 - #21 }
INFO  22:17:50,691 - #34 while
INFO  22:17:50,691 - #29 (
INFO  22:17:50,691 - #8 e
INFO  22:17:50,691 - #40 <
INFO  22:17:50,691 - #9 1
INFO  22:17:50,692 - #30 )
INFO  22:17:50,693 - #27 ;
INFO  22:17:50,693 - #21 }
INFO  22:17:50,693 - #21 }
INFO  22:17:50,694 - =====================SINTAKSNO_STABLO=========================
INFO  22:17:50,696 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_lt(
                  ) [Rel_op_lt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:17:50,696 - ==============================================================
INFO  22:17:50,709 - Pocetak obrade programa Program na liniji 1
INFO  22:17:50,709 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:17:50,711 - Deklarisana konstanta c na liniji 2
INFO  22:17:50,712 - Deklarisana konstanta d na liniji 2
INFO  22:17:50,712 - Deklarisana konstanta g na liniji 2
INFO  22:17:50,712 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:17:50,712 - Deklarisana promenljiva e na liniji 3
INFO  22:17:50,713 - Pocetak obrade metode main na liniji 5
INFO  22:17:50,713 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:17:50,714 - Zavrsetak obrade programa Program na liniji 1
INFO  22:17:50,714 - ======================TABELA_SIMBOLA==========================
INFO  22:17:50,714 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:17:50,714 - ==============================================================
INFO  22:17:50,714 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:17:50,715 - ==============================================================
INFO  22:17:50,715 - ======================GENERISANJE_KODA========================
INFO  22:17:50,720 - Generisanje koda uspesno zavrseno!
INFO  22:17:50,721 - Generisanje izlaznog fajla test\program.obj
INFO  22:17:50,721 - ==============================================================
INFO  22:26:15,165 - Obrada ulaznog fajla test\program.mj
INFO  22:26:15,239 - #2 program
INFO  22:26:15,239 - #8 Program
INFO  22:26:15,239 - #5 const
INFO  22:26:15,240 - #8 int
INFO  22:26:15,240 - #8 c
INFO  22:26:15,241 - #24 =
INFO  22:26:15,241 - #9 10
INFO  22:26:15,241 - #28 ,
INFO  22:26:15,242 - #8 d
INFO  22:26:15,242 - #24 =
INFO  22:26:15,242 - #9 99
INFO  22:26:15,243 - #28 ,
INFO  22:26:15,243 - #8 g
INFO  22:26:15,243 - #24 =
INFO  22:26:15,243 - #9 2
INFO  22:26:15,243 - #27 ;
INFO  22:26:15,243 - #8 int
INFO  22:26:15,244 - #8 e
INFO  22:26:15,244 - #27 ;
INFO  22:26:15,245 - #20 {
INFO  22:26:15,246 - #6 void
INFO  22:26:15,246 - #8 main
INFO  22:26:15,247 - #29 (
INFO  22:26:15,248 - #30 )
INFO  22:26:15,248 - #20 {
INFO  22:26:15,248 - #8 e
INFO  22:26:15,248 - #24 =
INFO  22:26:15,249 - #9 1
INFO  22:26:15,249 - #27 ;
INFO  22:26:15,249 - #31 if
INFO  22:26:15,250 - #29 (
INFO  22:26:15,250 - #8 e
INFO  22:26:15,250 - #38 >
INFO  22:26:15,250 - #9 0
INFO  22:26:15,252 - #30 )
INFO  22:26:15,252 - #20 {
INFO  22:26:15,252 - #3 print
INFO  22:26:15,252 - #29 (
INFO  22:26:15,252 - #8 e
INFO  22:26:15,252 - #30 )
INFO  22:26:15,253 - #27 ;
INFO  22:26:15,253 - #21 }
INFO  22:26:15,253 - #32 else
INFO  22:26:15,254 - #20 {
INFO  22:26:15,254 - #3 print
INFO  22:26:15,254 - #29 (
INFO  22:26:15,254 - #8 d
INFO  22:26:15,254 - #30 )
INFO  22:26:15,254 - #27 ;
INFO  22:26:15,254 - #21 }
INFO  22:26:15,254 - #33 do
INFO  22:26:15,255 - #20 {
INFO  22:26:15,256 - #3 print
INFO  22:26:15,256 - #29 (
INFO  22:26:15,256 - #8 e
INFO  22:26:15,256 - #30 )
INFO  22:26:15,256 - #27 ;
INFO  22:26:15,256 - #8 e
INFO  22:26:15,256 - #25 ++
INFO  22:26:15,256 - #27 ;
INFO  22:26:15,256 - #21 }
INFO  22:26:15,257 - #34 while
INFO  22:26:15,257 - #29 (
INFO  22:26:15,257 - #8 e
INFO  22:26:15,257 - #40 <
INFO  22:26:15,257 - #9 1
INFO  22:26:15,258 - #30 )
INFO  22:26:15,258 - #27 ;
INFO  22:26:15,258 - #21 }
INFO  22:26:15,259 - #21 }
INFO  22:26:15,260 - =====================SINTAKSNO_STABLO=========================
INFO  22:26:15,262 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_lt(
                  ) [Rel_op_lt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:26:15,262 - ==============================================================
INFO  22:26:15,278 - Pocetak obrade programa Program na liniji 1
INFO  22:26:15,278 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:26:15,281 - Deklarisana konstanta c na liniji 2
INFO  22:26:15,281 - Deklarisana konstanta d na liniji 2
INFO  22:26:15,281 - Deklarisana konstanta g na liniji 2
INFO  22:26:15,281 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:26:15,281 - Deklarisana promenljiva e na liniji 3
INFO  22:26:15,282 - Pocetak obrade metode main na liniji 5
INFO  22:26:15,282 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:26:15,282 - Zavrsetak obrade programa Program na liniji 1
INFO  22:26:15,282 - ======================TABELA_SIMBOLA==========================
INFO  22:26:15,283 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:26:15,283 - ==============================================================
INFO  22:26:15,283 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:26:15,283 - ==============================================================
INFO  22:26:15,283 - ======================GENERISANJE_KODA========================
INFO  22:26:15,288 - Generisanje koda uspesno zavrseno!
INFO  22:26:15,288 - Generisanje izlaznog fajla test\program.obj
INFO  22:26:15,288 - ==============================================================
INFO  22:28:33,026 - Obrada ulaznog fajla test\program.mj
INFO  22:28:33,103 - #2 program
INFO  22:28:33,103 - #8 Program
INFO  22:28:33,103 - #5 const
INFO  22:28:33,104 - #8 int
INFO  22:28:33,104 - #8 c
INFO  22:28:33,105 - #24 =
INFO  22:28:33,106 - #9 10
INFO  22:28:33,106 - #28 ,
INFO  22:28:33,107 - #8 d
INFO  22:28:33,107 - #24 =
INFO  22:28:33,107 - #9 99
INFO  22:28:33,107 - #28 ,
INFO  22:28:33,107 - #8 g
INFO  22:28:33,108 - #24 =
INFO  22:28:33,108 - #9 2
INFO  22:28:33,108 - #27 ;
INFO  22:28:33,108 - #8 int
INFO  22:28:33,109 - #8 e
INFO  22:28:33,109 - #27 ;
INFO  22:28:33,110 - #20 {
INFO  22:28:33,111 - #6 void
INFO  22:28:33,111 - #8 main
INFO  22:28:33,111 - #29 (
INFO  22:28:33,112 - #30 )
INFO  22:28:33,113 - #20 {
INFO  22:28:33,113 - #8 e
INFO  22:28:33,113 - #24 =
INFO  22:28:33,113 - #9 1
INFO  22:28:33,113 - #27 ;
INFO  22:28:33,114 - #31 if
INFO  22:28:33,114 - #29 (
INFO  22:28:33,114 - #8 e
INFO  22:28:33,114 - #38 >
INFO  22:28:33,115 - #9 0
INFO  22:28:33,116 - #30 )
INFO  22:28:33,117 - #20 {
INFO  22:28:33,117 - #3 print
INFO  22:28:33,117 - #29 (
INFO  22:28:33,117 - #8 e
INFO  22:28:33,117 - #30 )
INFO  22:28:33,117 - #27 ;
INFO  22:28:33,118 - #21 }
INFO  22:28:33,118 - #32 else
INFO  22:28:33,119 - #20 {
INFO  22:28:33,119 - #3 print
INFO  22:28:33,119 - #29 (
INFO  22:28:33,119 - #8 d
INFO  22:28:33,119 - #30 )
INFO  22:28:33,119 - #27 ;
INFO  22:28:33,120 - #21 }
INFO  22:28:33,120 - #33 do
INFO  22:28:33,120 - #20 {
INFO  22:28:33,121 - #3 print
INFO  22:28:33,121 - #29 (
INFO  22:28:33,121 - #8 e
INFO  22:28:33,121 - #30 )
INFO  22:28:33,122 - #27 ;
INFO  22:28:33,122 - #8 e
INFO  22:28:33,122 - #25 ++
INFO  22:28:33,122 - #27 ;
INFO  22:28:33,122 - #21 }
INFO  22:28:33,122 - #34 while
INFO  22:28:33,122 - #29 (
INFO  22:28:33,122 - #8 e
INFO  22:28:33,122 - #40 <
INFO  22:28:33,123 - #9 1
INFO  22:28:33,124 - #30 )
INFO  22:28:33,124 - #27 ;
INFO  22:28:33,124 - #21 }
INFO  22:28:33,124 - #21 }
INFO  22:28:33,125 - =====================SINTAKSNO_STABLO=========================
INFO  22:28:33,127 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if_else(
              Stmt_if_part(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_single(
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_single]
                ) [Stmt_list]
              ) [Stmt_if_part]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_else]
          ) [Statement_multi]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                  Rel_op_lt(
                  ) [Rel_op_lt]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       1
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:28:33,128 - ==============================================================
INFO  22:28:33,142 - Pocetak obrade programa Program na liniji 1
INFO  22:28:33,142 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:28:33,143 - Deklarisana konstanta c na liniji 2
INFO  22:28:33,143 - Deklarisana konstanta d na liniji 2
INFO  22:28:33,143 - Deklarisana konstanta g na liniji 2
INFO  22:28:33,144 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:28:33,144 - Deklarisana promenljiva e na liniji 3
INFO  22:28:33,144 - Pocetak obrade metode main na liniji 5
INFO  22:28:33,145 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:28:33,145 - Zavrsetak obrade programa Program na liniji 1
INFO  22:28:33,145 - ======================TABELA_SIMBOLA==========================
INFO  22:28:33,145 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:28:33,145 - ==============================================================
INFO  22:28:33,146 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:28:33,146 - ==============================================================
INFO  22:28:33,146 - ======================GENERISANJE_KODA========================
INFO  22:28:33,151 - Generisanje koda uspesno zavrseno!
INFO  22:28:33,151 - Generisanje izlaznog fajla test\program.obj
INFO  22:28:33,151 - ==============================================================
INFO  22:29:26,205 - Obrada ulaznog fajla test\program.mj
INFO  22:29:26,284 - #2 program
INFO  22:29:26,284 - #8 Program
INFO  22:29:26,285 - #5 const
INFO  22:29:26,286 - #8 int
INFO  22:29:26,286 - #8 c
INFO  22:29:26,287 - #24 =
INFO  22:29:26,287 - #9 10
INFO  22:29:26,287 - #28 ,
INFO  22:29:26,288 - #8 d
INFO  22:29:26,288 - #24 =
INFO  22:29:26,288 - #9 99
INFO  22:29:26,288 - #28 ,
INFO  22:29:26,289 - #8 g
INFO  22:29:26,289 - #24 =
INFO  22:29:26,289 - #9 2
INFO  22:29:26,289 - #27 ;
INFO  22:29:26,289 - #8 int
INFO  22:29:26,290 - #8 e
INFO  22:29:26,290 - #27 ;
INFO  22:29:26,290 - #20 {
INFO  22:29:26,291 - #6 void
INFO  22:29:26,292 - #8 main
INFO  22:29:26,292 - #29 (
INFO  22:29:26,292 - #30 )
INFO  22:29:26,292 - #20 {
INFO  22:29:26,293 - #8 e
INFO  22:29:26,293 - #24 =
INFO  22:29:26,293 - #9 1
INFO  22:29:26,293 - #27 ;
INFO  22:29:26,294 - #31 if
INFO  22:29:26,294 - #29 (
INFO  22:29:26,294 - #8 e
INFO  22:29:26,294 - #38 >
INFO  22:29:26,294 - #9 0
INFO  22:29:26,296 - #13 &&
INFO  22:29:26,296 - #8 e
INFO  22:29:26,296 - #42 <=
INFO  22:29:26,296 - #9 9
INFO  22:29:26,297 - #30 )
INFO  22:29:26,297 - #20 {
INFO  22:29:26,297 - #3 print
INFO  22:29:26,297 - #29 (
INFO  22:29:26,297 - #8 e
INFO  22:29:26,297 - #30 )
INFO  22:29:26,297 - #27 ;
INFO  22:29:26,298 - #21 }
INFO  22:29:26,298 - #32 else
INFO  22:29:26,299 - #20 {
INFO  22:29:26,299 - #3 print
INFO  22:29:26,300 - #29 (
INFO  22:29:26,300 - #8 d
INFO  22:29:26,300 - #30 )
INFO  22:29:26,300 - #27 ;
INFO  22:29:26,300 - #21 }
INFO  22:29:26,300 - #21 }
INFO  22:29:26,300 - #21 }
INFO  22:29:26,301 - =====================SINTAKSNO_STABLO=========================
INFO  22:29:26,303 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:29:26,304 - ==============================================================
INFO  22:29:26,317 - Pocetak obrade programa Program na liniji 1
INFO  22:29:26,317 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:29:26,318 - Deklarisana konstanta c na liniji 2
INFO  22:29:26,319 - Deklarisana konstanta d na liniji 2
INFO  22:29:26,319 - Deklarisana konstanta g na liniji 2
INFO  22:29:26,319 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:29:26,319 - Deklarisana promenljiva e na liniji 3
INFO  22:29:26,320 - Pocetak obrade metode main na liniji 5
INFO  22:29:26,320 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:29:26,320 - Zavrsetak obrade programa Program na liniji 1
INFO  22:29:26,321 - ======================TABELA_SIMBOLA==========================
INFO  22:29:26,321 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:29:26,321 - ==============================================================
INFO  22:29:26,321 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:29:26,322 - ==============================================================
INFO  22:29:26,322 - ======================GENERISANJE_KODA========================
ERROR 22:29:26,327 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
INFO  22:31:13,102 - Obrada ulaznog fajla test\program.mj
INFO  22:31:13,191 - #2 program
INFO  22:31:13,191 - #8 Program
INFO  22:31:13,191 - #5 const
INFO  22:31:13,192 - #8 int
INFO  22:31:13,193 - #8 c
INFO  22:31:13,194 - #24 =
INFO  22:31:13,194 - #9 10
INFO  22:31:13,194 - #28 ,
INFO  22:31:13,196 - #8 d
INFO  22:31:13,196 - #24 =
INFO  22:31:13,196 - #9 99
INFO  22:31:13,196 - #28 ,
INFO  22:31:13,197 - #8 g
INFO  22:31:13,197 - #24 =
INFO  22:31:13,197 - #9 2
INFO  22:31:13,197 - #27 ;
INFO  22:31:13,197 - #8 int
INFO  22:31:13,199 - #8 e
INFO  22:31:13,199 - #27 ;
INFO  22:31:13,200 - #20 {
INFO  22:31:13,202 - #6 void
INFO  22:31:13,202 - #8 main
INFO  22:31:13,202 - #29 (
INFO  22:31:13,203 - #30 )
INFO  22:31:13,203 - #20 {
INFO  22:31:13,203 - #8 e
INFO  22:31:13,203 - #24 =
INFO  22:31:13,203 - #9 1
INFO  22:31:13,203 - #27 ;
INFO  22:31:13,204 - #31 if
INFO  22:31:13,204 - #29 (
INFO  22:31:13,204 - #8 e
INFO  22:31:13,204 - #38 >
INFO  22:31:13,205 - #9 0
INFO  22:31:13,207 - #13 &&
INFO  22:31:13,207 - #8 e
INFO  22:31:13,207 - #42 <=
INFO  22:31:13,208 - #9 9
INFO  22:31:13,208 - #30 )
INFO  22:31:13,209 - #20 {
INFO  22:31:13,209 - #3 print
INFO  22:31:13,209 - #29 (
INFO  22:31:13,209 - #8 e
INFO  22:31:13,209 - #30 )
INFO  22:31:13,209 - #27 ;
INFO  22:31:13,209 - #21 }
INFO  22:31:13,210 - #32 else
INFO  22:31:13,211 - #20 {
INFO  22:31:13,211 - #3 print
INFO  22:31:13,211 - #29 (
INFO  22:31:13,212 - #8 d
INFO  22:31:13,212 - #30 )
INFO  22:31:13,213 - #27 ;
INFO  22:31:13,213 - #21 }
INFO  22:31:13,213 - #21 }
INFO  22:31:13,213 - #21 }
INFO  22:31:13,214 - =====================SINTAKSNO_STABLO=========================
INFO  22:31:13,216 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:31:13,216 - ==============================================================
INFO  22:31:13,230 - Pocetak obrade programa Program na liniji 1
INFO  22:31:13,230 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:31:13,231 - Deklarisana konstanta c na liniji 2
INFO  22:31:13,231 - Deklarisana konstanta d na liniji 2
INFO  22:31:13,231 - Deklarisana konstanta g na liniji 2
INFO  22:31:13,231 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:31:13,232 - Deklarisana promenljiva e na liniji 3
INFO  22:31:13,232 - Pocetak obrade metode main na liniji 5
INFO  22:31:13,233 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:31:13,233 - Zavrsetak obrade programa Program na liniji 1
INFO  22:31:13,233 - ======================TABELA_SIMBOLA==========================
INFO  22:31:13,233 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:31:13,234 - ==============================================================
INFO  22:31:13,234 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:31:13,234 - ==============================================================
INFO  22:31:13,234 - ======================GENERISANJE_KODA========================
ERROR 22:31:13,239 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 22:31:13,241 - Generisanje koda neuspesno!
INFO  22:31:13,241 - ==============================================================
INFO  22:31:56,441 - Obrada ulaznog fajla test\program.mj
INFO  22:31:56,518 - #2 program
INFO  22:31:56,518 - #8 Program
INFO  22:31:56,518 - #5 const
INFO  22:31:56,519 - #8 int
INFO  22:31:56,519 - #8 c
INFO  22:31:56,520 - #24 =
INFO  22:31:56,520 - #9 10
INFO  22:31:56,520 - #28 ,
INFO  22:31:56,521 - #8 d
INFO  22:31:56,521 - #24 =
INFO  22:31:56,521 - #9 99
INFO  22:31:56,521 - #28 ,
INFO  22:31:56,521 - #8 g
INFO  22:31:56,522 - #24 =
INFO  22:31:56,522 - #9 2
INFO  22:31:56,522 - #27 ;
INFO  22:31:56,522 - #8 int
INFO  22:31:56,523 - #8 e
INFO  22:31:56,523 - #27 ;
INFO  22:31:56,523 - #20 {
INFO  22:31:56,524 - #6 void
INFO  22:31:56,525 - #8 main
INFO  22:31:56,525 - #29 (
INFO  22:31:56,525 - #30 )
INFO  22:31:56,526 - #20 {
INFO  22:31:56,526 - #8 e
INFO  22:31:56,526 - #24 =
INFO  22:31:56,526 - #9 1
INFO  22:31:56,526 - #27 ;
INFO  22:31:56,527 - #31 if
INFO  22:31:56,527 - #29 (
INFO  22:31:56,527 - #8 e
INFO  22:31:56,527 - #38 >
INFO  22:31:56,528 - #9 0
INFO  22:31:56,529 - #13 &&
INFO  22:31:56,529 - #8 e
INFO  22:31:56,530 - #42 <=
INFO  22:31:56,530 - #9 9
INFO  22:31:56,531 - #30 )
INFO  22:31:56,531 - #20 {
INFO  22:31:56,531 - #3 print
INFO  22:31:56,531 - #29 (
INFO  22:31:56,532 - #8 e
INFO  22:31:56,532 - #30 )
INFO  22:31:56,532 - #27 ;
INFO  22:31:56,532 - #21 }
INFO  22:31:56,532 - #32 else
INFO  22:31:56,533 - #20 {
INFO  22:31:56,533 - #3 print
INFO  22:31:56,534 - #29 (
INFO  22:31:56,534 - #8 d
INFO  22:31:56,534 - #30 )
INFO  22:31:56,534 - #27 ;
INFO  22:31:56,534 - #21 }
INFO  22:31:56,534 - #21 }
INFO  22:31:56,534 - #21 }
INFO  22:31:56,535 - =====================SINTAKSNO_STABLO=========================
INFO  22:31:56,537 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:31:56,538 - ==============================================================
INFO  22:31:56,551 - Pocetak obrade programa Program na liniji 1
INFO  22:31:56,551 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:31:56,552 - Deklarisana konstanta c na liniji 2
INFO  22:31:56,552 - Deklarisana konstanta d na liniji 2
INFO  22:31:56,553 - Deklarisana konstanta g na liniji 2
INFO  22:31:56,553 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:31:56,553 - Deklarisana promenljiva e na liniji 3
INFO  22:31:56,554 - Pocetak obrade metode main na liniji 5
INFO  22:31:56,554 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:31:56,554 - Zavrsetak obrade programa Program na liniji 1
INFO  22:31:56,554 - ======================TABELA_SIMBOLA==========================
INFO  22:31:56,555 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:31:56,555 - ==============================================================
INFO  22:31:56,555 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:31:56,555 - ==============================================================
INFO  22:31:56,555 - ======================GENERISANJE_KODA========================
ERROR 22:31:56,561 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 22:31:56,562 - Generisanje koda neuspesno!
INFO  22:31:56,562 - ==============================================================
INFO  22:31:59,484 - Obrada ulaznog fajla test\program.mj
INFO  22:31:59,578 - #2 program
INFO  22:31:59,578 - #8 Program
INFO  22:31:59,578 - #5 const
INFO  22:31:59,579 - #8 int
INFO  22:31:59,579 - #8 c
INFO  22:31:59,580 - #24 =
INFO  22:31:59,580 - #9 10
INFO  22:31:59,580 - #28 ,
INFO  22:31:59,581 - #8 d
INFO  22:31:59,581 - #24 =
INFO  22:31:59,582 - #9 99
INFO  22:31:59,582 - #28 ,
INFO  22:31:59,582 - #8 g
INFO  22:31:59,582 - #24 =
INFO  22:31:59,582 - #9 2
INFO  22:31:59,582 - #27 ;
INFO  22:31:59,582 - #8 int
INFO  22:31:59,583 - #8 e
INFO  22:31:59,583 - #27 ;
INFO  22:31:59,584 - #20 {
INFO  22:31:59,586 - #6 void
INFO  22:31:59,586 - #8 main
INFO  22:31:59,587 - #29 (
INFO  22:31:59,587 - #30 )
INFO  22:31:59,588 - #20 {
INFO  22:31:59,588 - #8 e
INFO  22:31:59,588 - #24 =
INFO  22:31:59,588 - #9 1
INFO  22:31:59,588 - #27 ;
INFO  22:31:59,589 - #31 if
INFO  22:31:59,589 - #29 (
INFO  22:31:59,590 - #8 e
INFO  22:31:59,590 - #38 >
INFO  22:31:59,590 - #9 0
INFO  22:31:59,591 - #13 &&
INFO  22:31:59,592 - #8 e
INFO  22:31:59,592 - #42 <=
INFO  22:31:59,592 - #9 9
INFO  22:31:59,593 - #30 )
INFO  22:31:59,594 - #20 {
INFO  22:31:59,594 - #3 print
INFO  22:31:59,594 - #29 (
INFO  22:31:59,594 - #8 e
INFO  22:31:59,594 - #30 )
INFO  22:31:59,594 - #27 ;
INFO  22:31:59,594 - #21 }
INFO  22:31:59,595 - #32 else
INFO  22:31:59,596 - #20 {
INFO  22:31:59,596 - #3 print
INFO  22:31:59,596 - #29 (
INFO  22:31:59,596 - #8 d
INFO  22:31:59,597 - #30 )
INFO  22:31:59,597 - #27 ;
INFO  22:31:59,597 - #21 }
INFO  22:31:59,597 - #21 }
INFO  22:31:59,597 - #21 }
INFO  22:31:59,598 - =====================SINTAKSNO_STABLO=========================
INFO  22:31:59,602 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:31:59,602 - ==============================================================
INFO  22:31:59,616 - Pocetak obrade programa Program na liniji 1
INFO  22:31:59,617 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:31:59,618 - Deklarisana konstanta c na liniji 2
INFO  22:31:59,618 - Deklarisana konstanta d na liniji 2
INFO  22:31:59,618 - Deklarisana konstanta g na liniji 2
INFO  22:31:59,618 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:31:59,618 - Deklarisana promenljiva e na liniji 3
INFO  22:31:59,619 - Pocetak obrade metode main na liniji 5
INFO  22:31:59,619 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:31:59,619 - Zavrsetak obrade programa Program na liniji 1
INFO  22:31:59,619 - ======================TABELA_SIMBOLA==========================
INFO  22:31:59,620 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:31:59,620 - ==============================================================
INFO  22:31:59,621 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:31:59,621 - ==============================================================
INFO  22:31:59,621 - ======================GENERISANJE_KODA========================
INFO  22:39:32,947 - Obrada ulaznog fajla test\program.mj
INFO  22:39:33,029 - #2 program
INFO  22:39:33,030 - #8 Program
INFO  22:39:33,030 - #5 const
INFO  22:39:33,031 - #8 int
INFO  22:39:33,031 - #8 c
INFO  22:39:33,032 - #24 =
INFO  22:39:33,032 - #9 10
INFO  22:39:33,032 - #28 ,
INFO  22:39:33,033 - #8 d
INFO  22:39:33,033 - #24 =
INFO  22:39:33,034 - #9 99
INFO  22:39:33,034 - #28 ,
INFO  22:39:33,034 - #8 g
INFO  22:39:33,034 - #24 =
INFO  22:39:33,034 - #9 2
INFO  22:39:33,034 - #27 ;
INFO  22:39:33,034 - #8 int
INFO  22:39:33,036 - #8 e
INFO  22:39:33,036 - #27 ;
INFO  22:39:33,036 - #20 {
INFO  22:39:33,037 - #6 void
INFO  22:39:33,037 - #8 main
INFO  22:39:33,037 - #29 (
INFO  22:39:33,038 - #30 )
INFO  22:39:33,038 - #20 {
INFO  22:39:33,038 - #8 e
INFO  22:39:33,038 - #24 =
INFO  22:39:33,039 - #9 1
INFO  22:39:33,039 - #27 ;
INFO  22:39:33,039 - #31 if
INFO  22:39:33,040 - #29 (
INFO  22:39:33,040 - #8 e
INFO  22:39:33,040 - #38 >
INFO  22:39:33,040 - #9 0
INFO  22:39:33,041 - #13 &&
INFO  22:39:33,042 - #8 e
INFO  22:39:33,042 - #42 <=
INFO  22:39:33,042 - #9 9
INFO  22:39:33,042 - #30 )
INFO  22:39:33,043 - #20 {
INFO  22:39:33,043 - #3 print
INFO  22:39:33,043 - #29 (
INFO  22:39:33,043 - #8 e
INFO  22:39:33,043 - #30 )
INFO  22:39:33,043 - #27 ;
INFO  22:39:33,043 - #21 }
INFO  22:39:33,043 - #32 else
INFO  22:39:33,044 - #20 {
INFO  22:39:33,044 - #3 print
INFO  22:39:33,044 - #29 (
INFO  22:39:33,044 - #8 d
INFO  22:39:33,044 - #30 )
INFO  22:39:33,045 - #27 ;
INFO  22:39:33,045 - #21 }
INFO  22:39:33,045 - #21 }
INFO  22:39:33,045 - #21 }
INFO  22:39:33,046 - =====================SINTAKSNO_STABLO=========================
INFO  22:39:33,048 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:39:33,048 - ==============================================================
INFO  22:39:33,064 - Pocetak obrade programa Program na liniji 1
INFO  22:39:33,064 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:39:33,066 - Deklarisana konstanta c na liniji 2
INFO  22:39:33,066 - Deklarisana konstanta d na liniji 2
INFO  22:39:33,066 - Deklarisana konstanta g na liniji 2
INFO  22:39:33,066 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:39:33,067 - Deklarisana promenljiva e na liniji 3
INFO  22:39:33,067 - Pocetak obrade metode main na liniji 5
INFO  22:39:33,068 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:39:33,068 - Zavrsetak obrade programa Program na liniji 1
INFO  22:39:33,068 - ======================TABELA_SIMBOLA==========================
INFO  22:39:33,069 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:39:33,069 - ==============================================================
INFO  22:39:33,069 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:39:33,069 - ==============================================================
INFO  22:39:33,069 - ======================GENERISANJE_KODA========================
ERROR 22:39:33,076 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 22:39:33,078 - Generisanje koda neuspesno!
INFO  22:39:33,078 - ==============================================================
INFO  22:44:27,871 - Obrada ulaznog fajla test\program.mj
INFO  22:44:27,947 - #2 program
INFO  22:44:27,948 - #8 Program
INFO  22:44:27,948 - #5 const
INFO  22:44:27,948 - #8 int
INFO  22:44:27,949 - #8 c
INFO  22:44:27,949 - #24 =
INFO  22:44:27,949 - #9 10
INFO  22:44:27,950 - #28 ,
INFO  22:44:27,950 - #8 d
INFO  22:44:27,951 - #24 =
INFO  22:44:27,951 - #9 99
INFO  22:44:27,951 - #28 ,
INFO  22:44:27,951 - #8 g
INFO  22:44:27,951 - #24 =
INFO  22:44:27,951 - #9 2
INFO  22:44:27,951 - #27 ;
INFO  22:44:27,952 - #8 int
INFO  22:44:27,953 - #8 e
INFO  22:44:27,953 - #27 ;
INFO  22:44:27,953 - #20 {
INFO  22:44:27,955 - #6 void
INFO  22:44:27,955 - #8 main
INFO  22:44:27,955 - #29 (
INFO  22:44:27,956 - #30 )
INFO  22:44:27,956 - #20 {
INFO  22:44:27,956 - #8 e
INFO  22:44:27,956 - #24 =
INFO  22:44:27,957 - #9 1
INFO  22:44:27,957 - #27 ;
INFO  22:44:27,958 - #31 if
INFO  22:44:27,958 - #29 (
INFO  22:44:27,958 - #8 e
INFO  22:44:27,958 - #38 >
INFO  22:44:27,958 - #9 0
INFO  22:44:27,960 - #13 &&
INFO  22:44:27,960 - #8 e
INFO  22:44:27,960 - #42 <=
INFO  22:44:27,961 - #9 9
INFO  22:44:27,961 - #30 )
INFO  22:44:27,962 - #20 {
INFO  22:44:27,962 - #3 print
INFO  22:44:27,962 - #29 (
INFO  22:44:27,962 - #8 e
INFO  22:44:27,962 - #30 )
INFO  22:44:27,962 - #27 ;
INFO  22:44:27,962 - #21 }
INFO  22:44:27,962 - #32 else
INFO  22:44:27,964 - #20 {
INFO  22:44:27,964 - #3 print
INFO  22:44:27,964 - #29 (
INFO  22:44:27,964 - #8 d
INFO  22:44:27,964 - #30 )
INFO  22:44:27,964 - #27 ;
INFO  22:44:27,964 - #21 }
INFO  22:44:27,964 - #21 }
INFO  22:44:27,965 - #21 }
INFO  22:44:27,966 - =====================SINTAKSNO_STABLO=========================
INFO  22:44:27,968 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:44:27,968 - ==============================================================
INFO  22:44:27,985 - Pocetak obrade programa Program na liniji 1
INFO  22:44:27,985 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:44:27,986 - Deklarisana konstanta c na liniji 2
INFO  22:44:27,986 - Deklarisana konstanta d na liniji 2
INFO  22:44:27,987 - Deklarisana konstanta g na liniji 2
INFO  22:44:27,987 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:44:27,987 - Deklarisana promenljiva e na liniji 3
INFO  22:44:27,988 - Pocetak obrade metode main na liniji 5
INFO  22:44:27,988 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:44:27,989 - Zavrsetak obrade programa Program na liniji 1
INFO  22:44:27,989 - ======================TABELA_SIMBOLA==========================
INFO  22:44:27,989 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:44:27,989 - ==============================================================
INFO  22:44:27,989 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:44:27,989 - ==============================================================
INFO  22:44:27,989 - ======================GENERISANJE_KODA========================
ERROR 22:44:27,995 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 22:44:27,996 - Generisanje koda neuspesno!
INFO  22:44:27,996 - ==============================================================
INFO  22:44:32,147 - Obrada ulaznog fajla test\program.mj
INFO  22:44:32,253 - #2 program
INFO  22:44:32,253 - #8 Program
INFO  22:44:32,254 - #5 const
INFO  22:44:32,255 - #8 int
INFO  22:44:32,255 - #8 c
INFO  22:44:32,256 - #24 =
INFO  22:44:32,256 - #9 10
INFO  22:44:32,256 - #28 ,
INFO  22:44:32,257 - #8 d
INFO  22:44:32,257 - #24 =
INFO  22:44:32,257 - #9 99
INFO  22:44:32,257 - #28 ,
INFO  22:44:32,258 - #8 g
INFO  22:44:32,259 - #24 =
INFO  22:44:32,259 - #9 2
INFO  22:44:32,259 - #27 ;
INFO  22:44:32,259 - #8 int
INFO  22:44:32,261 - #8 e
INFO  22:44:32,261 - #27 ;
INFO  22:44:32,262 - #20 {
INFO  22:44:32,263 - #6 void
INFO  22:44:32,263 - #8 main
INFO  22:44:32,263 - #29 (
INFO  22:44:32,264 - #30 )
INFO  22:44:32,265 - #20 {
INFO  22:44:32,265 - #8 e
INFO  22:44:32,265 - #24 =
INFO  22:44:32,265 - #9 1
INFO  22:44:32,265 - #27 ;
INFO  22:44:32,266 - #31 if
INFO  22:44:32,266 - #29 (
INFO  22:44:32,267 - #8 e
INFO  22:44:32,267 - #38 >
INFO  22:44:32,267 - #9 0
INFO  22:44:32,268 - #13 &&
INFO  22:44:32,269 - #8 e
INFO  22:44:32,269 - #42 <=
INFO  22:44:32,269 - #9 9
INFO  22:44:32,270 - #30 )
INFO  22:44:32,270 - #20 {
INFO  22:44:32,270 - #3 print
INFO  22:44:32,271 - #29 (
INFO  22:44:32,271 - #8 e
INFO  22:44:32,271 - #30 )
INFO  22:44:32,271 - #27 ;
INFO  22:44:32,271 - #21 }
INFO  22:44:32,271 - #32 else
INFO  22:44:32,272 - #20 {
INFO  22:44:32,273 - #3 print
INFO  22:44:32,273 - #29 (
INFO  22:44:32,273 - #8 d
INFO  22:44:32,273 - #30 )
INFO  22:44:32,274 - #27 ;
INFO  22:44:32,274 - #21 }
INFO  22:44:32,274 - #21 }
INFO  22:44:32,275 - #21 }
INFO  22:44:32,276 - =====================SINTAKSNO_STABLO=========================
INFO  22:44:32,279 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:44:32,279 - ==============================================================
INFO  22:44:32,294 - Pocetak obrade programa Program na liniji 1
INFO  22:44:32,295 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:44:32,295 - Deklarisana konstanta c na liniji 2
INFO  22:44:32,296 - Deklarisana konstanta d na liniji 2
INFO  22:44:32,296 - Deklarisana konstanta g na liniji 2
INFO  22:44:32,296 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:44:32,296 - Deklarisana promenljiva e na liniji 3
INFO  22:44:32,297 - Pocetak obrade metode main na liniji 5
INFO  22:44:32,297 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:44:32,297 - Zavrsetak obrade programa Program na liniji 1
INFO  22:44:32,298 - ======================TABELA_SIMBOLA==========================
INFO  22:44:32,298 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:44:32,298 - ==============================================================
INFO  22:44:32,298 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:44:32,298 - ==============================================================
INFO  22:44:32,298 - ======================GENERISANJE_KODA========================
ERROR 22:44:32,304 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 22:44:32,306 - Generisanje koda neuspesno!
INFO  22:44:32,306 - ==============================================================
INFO  22:44:46,534 - Obrada ulaznog fajla test\program.mj
INFO  22:44:46,606 - #2 program
INFO  22:44:46,607 - #8 Program
INFO  22:44:46,607 - #5 const
INFO  22:44:46,607 - #8 int
INFO  22:44:46,607 - #8 c
INFO  22:44:46,608 - #24 =
INFO  22:44:46,608 - #9 10
INFO  22:44:46,608 - #28 ,
INFO  22:44:46,609 - #8 d
INFO  22:44:46,609 - #24 =
INFO  22:44:46,610 - #9 99
INFO  22:44:46,610 - #28 ,
INFO  22:44:46,610 - #8 g
INFO  22:44:46,610 - #24 =
INFO  22:44:46,610 - #9 2
INFO  22:44:46,610 - #27 ;
INFO  22:44:46,611 - #8 int
INFO  22:44:46,612 - #8 e
INFO  22:44:46,612 - #27 ;
INFO  22:44:46,612 - #20 {
INFO  22:44:46,613 - #6 void
INFO  22:44:46,613 - #8 main
INFO  22:44:46,613 - #29 (
INFO  22:44:46,614 - #30 )
INFO  22:44:46,614 - #20 {
INFO  22:44:46,614 - #8 e
INFO  22:44:46,614 - #24 =
INFO  22:44:46,614 - #9 1
INFO  22:44:46,614 - #27 ;
INFO  22:44:46,615 - #31 if
INFO  22:44:46,615 - #29 (
INFO  22:44:46,615 - #8 e
INFO  22:44:46,615 - #38 >
INFO  22:44:46,615 - #9 0
INFO  22:44:46,616 - #13 &&
INFO  22:44:46,617 - #8 e
INFO  22:44:46,617 - #42 <=
INFO  22:44:46,617 - #9 9
INFO  22:44:46,618 - #30 )
INFO  22:44:46,618 - #20 {
INFO  22:44:46,618 - #3 print
INFO  22:44:46,618 - #29 (
INFO  22:44:46,618 - #8 e
INFO  22:44:46,618 - #30 )
INFO  22:44:46,618 - #27 ;
INFO  22:44:46,619 - #21 }
INFO  22:44:46,619 - #32 else
INFO  22:44:46,620 - #20 {
INFO  22:44:46,620 - #3 print
INFO  22:44:46,620 - #29 (
INFO  22:44:46,620 - #8 d
INFO  22:44:46,620 - #30 )
INFO  22:44:46,620 - #27 ;
INFO  22:44:46,620 - #21 }
INFO  22:44:46,620 - #21 }
INFO  22:44:46,620 - #21 }
INFO  22:44:46,621 - =====================SINTAKSNO_STABLO=========================
INFO  22:44:46,623 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:44:46,628 - ==============================================================
INFO  22:44:46,649 - Pocetak obrade programa Program na liniji 1
INFO  22:44:46,649 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:44:46,649 - Deklarisana konstanta c na liniji 2
INFO  22:44:46,650 - Deklarisana konstanta d na liniji 2
INFO  22:44:46,650 - Deklarisana konstanta g na liniji 2
INFO  22:44:46,650 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:44:46,650 - Deklarisana promenljiva e na liniji 3
INFO  22:44:46,651 - Pocetak obrade metode main na liniji 5
INFO  22:44:46,651 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:44:46,651 - Zavrsetak obrade programa Program na liniji 1
INFO  22:44:46,652 - ======================TABELA_SIMBOLA==========================
INFO  22:44:46,654 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:44:46,654 - ==============================================================
INFO  22:44:46,654 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:44:46,654 - ==============================================================
INFO  22:44:46,655 - ======================GENERISANJE_KODA========================
ERROR 22:44:46,664 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 22:44:46,664 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 22:44:46,666 - Generisanje koda neuspesno!
INFO  22:44:46,666 - ==============================================================
INFO  22:44:59,531 - Obrada ulaznog fajla test\program.mj
INFO  22:44:59,627 - #2 program
INFO  22:44:59,627 - #8 Program
INFO  22:44:59,627 - #5 const
INFO  22:44:59,628 - #8 int
INFO  22:44:59,628 - #8 c
INFO  22:44:59,629 - #24 =
INFO  22:44:59,630 - #9 10
INFO  22:44:59,630 - #28 ,
INFO  22:44:59,631 - #8 d
INFO  22:44:59,631 - #24 =
INFO  22:44:59,631 - #9 99
INFO  22:44:59,631 - #28 ,
INFO  22:44:59,632 - #8 g
INFO  22:44:59,632 - #24 =
INFO  22:44:59,632 - #9 2
INFO  22:44:59,632 - #27 ;
INFO  22:44:59,632 - #8 int
INFO  22:44:59,634 - #8 e
INFO  22:44:59,634 - #27 ;
INFO  22:44:59,635 - #20 {
INFO  22:44:59,636 - #6 void
INFO  22:44:59,637 - #8 main
INFO  22:44:59,637 - #29 (
INFO  22:44:59,638 - #30 )
INFO  22:44:59,638 - #20 {
INFO  22:44:59,639 - #8 e
INFO  22:44:59,639 - #24 =
INFO  22:44:59,639 - #9 1
INFO  22:44:59,639 - #27 ;
INFO  22:44:59,640 - #31 if
INFO  22:44:59,641 - #29 (
INFO  22:44:59,641 - #8 e
INFO  22:44:59,641 - #38 >
INFO  22:44:59,641 - #9 0
INFO  22:44:59,644 - #13 &&
INFO  22:44:59,645 - #8 e
INFO  22:44:59,645 - #42 <=
INFO  22:44:59,645 - #9 9
INFO  22:44:59,646 - #30 )
INFO  22:44:59,647 - #20 {
INFO  22:44:59,647 - #3 print
INFO  22:44:59,647 - #29 (
INFO  22:44:59,647 - #8 e
INFO  22:44:59,647 - #30 )
INFO  22:44:59,647 - #27 ;
INFO  22:44:59,647 - #21 }
INFO  22:44:59,648 - #32 else
INFO  22:44:59,649 - #20 {
INFO  22:44:59,649 - #3 print
INFO  22:44:59,649 - #29 (
INFO  22:44:59,649 - #8 d
INFO  22:44:59,649 - #30 )
INFO  22:44:59,649 - #27 ;
INFO  22:44:59,650 - #21 }
INFO  22:44:59,650 - #21 }
INFO  22:44:59,650 - #21 }
INFO  22:44:59,651 - =====================SINTAKSNO_STABLO=========================
INFO  22:44:59,656 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:44:59,657 - ==============================================================
INFO  22:44:59,672 - Pocetak obrade programa Program na liniji 1
INFO  22:44:59,672 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:44:59,674 - Deklarisana konstanta c na liniji 2
INFO  22:44:59,674 - Deklarisana konstanta d na liniji 2
INFO  22:44:59,674 - Deklarisana konstanta g na liniji 2
INFO  22:44:59,674 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:44:59,674 - Deklarisana promenljiva e na liniji 3
INFO  22:44:59,675 - Pocetak obrade metode main na liniji 5
INFO  22:44:59,676 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:44:59,676 - Zavrsetak obrade programa Program na liniji 1
INFO  22:44:59,676 - ======================TABELA_SIMBOLA==========================
INFO  22:44:59,676 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:44:59,677 - ==============================================================
INFO  22:44:59,677 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:44:59,677 - ==============================================================
INFO  22:44:59,677 - ======================GENERISANJE_KODA========================
ERROR 22:44:59,682 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 22:44:59,685 - Generisanje koda neuspesno!
INFO  22:44:59,685 - ==============================================================
INFO  22:45:14,269 - Obrada ulaznog fajla test\program.mj
INFO  22:45:14,359 - #2 program
INFO  22:45:14,359 - #8 Program
INFO  22:45:14,359 - #5 const
INFO  22:45:14,360 - #8 int
INFO  22:45:14,361 - #8 c
INFO  22:45:14,361 - #24 =
INFO  22:45:14,362 - #9 10
INFO  22:45:14,362 - #28 ,
INFO  22:45:14,363 - #8 d
INFO  22:45:14,363 - #24 =
INFO  22:45:14,363 - #9 99
INFO  22:45:14,363 - #28 ,
INFO  22:45:14,364 - #8 g
INFO  22:45:14,364 - #24 =
INFO  22:45:14,364 - #9 2
INFO  22:45:14,364 - #27 ;
INFO  22:45:14,365 - #8 int
INFO  22:45:14,366 - #8 e
INFO  22:45:14,366 - #27 ;
INFO  22:45:14,366 - #20 {
INFO  22:45:14,367 - #6 void
INFO  22:45:14,368 - #8 main
INFO  22:45:14,368 - #29 (
INFO  22:45:14,368 - #30 )
INFO  22:45:14,369 - #20 {
INFO  22:45:14,369 - #8 e
INFO  22:45:14,369 - #24 =
INFO  22:45:14,369 - #9 1
INFO  22:45:14,369 - #27 ;
INFO  22:45:14,370 - #31 if
INFO  22:45:14,370 - #29 (
INFO  22:45:14,370 - #8 e
INFO  22:45:14,370 - #38 >
INFO  22:45:14,370 - #9 0
INFO  22:45:14,371 - #13 &&
INFO  22:45:14,372 - #8 e
INFO  22:45:14,372 - #42 <=
INFO  22:45:14,372 - #9 9
INFO  22:45:14,373 - #30 )
INFO  22:45:14,373 - #20 {
INFO  22:45:14,374 - #3 print
INFO  22:45:14,374 - #29 (
INFO  22:45:14,374 - #8 e
INFO  22:45:14,374 - #30 )
INFO  22:45:14,374 - #27 ;
INFO  22:45:14,374 - #21 }
INFO  22:45:14,374 - #32 else
INFO  22:45:14,376 - #20 {
INFO  22:45:14,376 - #3 print
INFO  22:45:14,376 - #29 (
INFO  22:45:14,376 - #8 d
INFO  22:45:14,376 - #30 )
INFO  22:45:14,376 - #27 ;
INFO  22:45:14,376 - #21 }
INFO  22:45:14,377 - #21 }
INFO  22:45:14,377 - #21 }
INFO  22:45:14,378 - =====================SINTAKSNO_STABLO=========================
INFO  22:45:14,380 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:45:14,381 - ==============================================================
INFO  22:45:14,391 - Pocetak obrade programa Program na liniji 1
INFO  22:45:14,391 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:45:14,392 - Deklarisana konstanta c na liniji 2
INFO  22:45:14,392 - Deklarisana konstanta d na liniji 2
INFO  22:45:14,392 - Deklarisana konstanta g na liniji 2
INFO  22:45:14,392 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:45:14,393 - Deklarisana promenljiva e na liniji 3
INFO  22:45:14,394 - Pocetak obrade metode main na liniji 5
INFO  22:45:14,394 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:45:14,395 - Zavrsetak obrade programa Program na liniji 1
INFO  22:45:14,395 - ======================TABELA_SIMBOLA==========================
INFO  22:45:14,396 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:45:14,396 - ==============================================================
INFO  22:45:14,396 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:45:14,396 - ==============================================================
INFO  22:45:14,396 - ======================GENERISANJE_KODA========================
ERROR 22:45:14,401 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 22:45:14,402 - Generisanje koda neuspesno!
INFO  22:45:14,402 - ==============================================================
INFO  22:59:37,893 - Obrada ulaznog fajla test\program.mj
INFO  22:59:37,976 - #2 program
INFO  22:59:37,976 - #8 Program
INFO  22:59:37,976 - #5 const
INFO  22:59:37,977 - #8 int
INFO  22:59:37,978 - #8 c
INFO  22:59:37,979 - #24 =
INFO  22:59:37,979 - #9 10
INFO  22:59:37,979 - #28 ,
INFO  22:59:37,981 - #8 d
INFO  22:59:37,981 - #24 =
INFO  22:59:37,981 - #9 99
INFO  22:59:37,981 - #28 ,
INFO  22:59:37,981 - #8 g
INFO  22:59:37,981 - #24 =
INFO  22:59:37,982 - #9 2
INFO  22:59:37,982 - #27 ;
INFO  22:59:37,982 - #8 int
INFO  22:59:37,984 - #8 e
INFO  22:59:37,984 - #27 ;
INFO  22:59:37,985 - #20 {
INFO  22:59:37,986 - #6 void
INFO  22:59:37,986 - #8 main
INFO  22:59:37,986 - #29 (
INFO  22:59:37,989 - #30 )
INFO  22:59:37,989 - #20 {
INFO  22:59:37,992 - #8 e
INFO  22:59:37,992 - #24 =
INFO  22:59:37,992 - #9 1
INFO  22:59:37,992 - #27 ;
INFO  22:59:37,993 - #31 if
INFO  22:59:37,993 - #29 (
INFO  22:59:37,993 - #8 e
INFO  22:59:37,993 - #38 >
INFO  22:59:37,994 - #9 0
INFO  22:59:37,996 - #13 &&
INFO  22:59:37,996 - #8 e
INFO  22:59:37,996 - #42 <=
INFO  22:59:37,997 - #9 9
INFO  22:59:37,997 - #30 )
INFO  22:59:37,998 - #20 {
INFO  22:59:37,998 - #3 print
INFO  22:59:37,998 - #29 (
INFO  22:59:37,998 - #8 e
INFO  22:59:37,998 - #30 )
INFO  22:59:37,998 - #27 ;
INFO  22:59:37,998 - #21 }
INFO  22:59:37,999 - #32 else
INFO  22:59:38,001 - #20 {
INFO  22:59:38,001 - #3 print
INFO  22:59:38,001 - #29 (
INFO  22:59:38,004 - #8 d
INFO  22:59:38,005 - #30 )
INFO  22:59:38,005 - #27 ;
INFO  22:59:38,005 - #21 }
INFO  22:59:38,005 - #21 }
INFO  22:59:38,006 - #21 }
INFO  22:59:38,006 - =====================SINTAKSNO_STABLO=========================
INFO  22:59:38,008 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:59:38,009 - ==============================================================
INFO  22:59:38,020 - Pocetak obrade programa Program na liniji 1
INFO  22:59:38,020 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:59:38,021 - Deklarisana konstanta c na liniji 2
INFO  22:59:38,021 - Deklarisana konstanta d na liniji 2
INFO  22:59:38,021 - Deklarisana konstanta g na liniji 2
INFO  22:59:38,021 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:59:38,021 - Deklarisana promenljiva e na liniji 3
INFO  22:59:38,022 - Pocetak obrade metode main na liniji 5
INFO  22:59:38,023 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:59:38,023 - Zavrsetak obrade programa Program na liniji 1
INFO  22:59:38,023 - ======================TABELA_SIMBOLA==========================
INFO  22:59:38,024 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:59:38,024 - ==============================================================
INFO  22:59:38,024 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:59:38,024 - ==============================================================
INFO  22:59:38,024 - ======================GENERISANJE_KODA========================
ERROR 22:59:38,029 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 22:59:38,030 - Generisanje koda neuspesno!
INFO  22:59:38,030 - ==============================================================
INFO  22:59:42,682 - Obrada ulaznog fajla test\program.mj
INFO  22:59:42,763 - #2 program
INFO  22:59:42,763 - #8 Program
INFO  22:59:42,763 - #5 const
INFO  22:59:42,764 - #8 int
INFO  22:59:42,764 - #8 c
INFO  22:59:42,765 - #24 =
INFO  22:59:42,765 - #9 10
INFO  22:59:42,765 - #28 ,
INFO  22:59:42,767 - #8 d
INFO  22:59:42,767 - #24 =
INFO  22:59:42,767 - #9 99
INFO  22:59:42,767 - #28 ,
INFO  22:59:42,767 - #8 g
INFO  22:59:42,767 - #24 =
INFO  22:59:42,767 - #9 2
INFO  22:59:42,768 - #27 ;
INFO  22:59:42,768 - #8 int
INFO  22:59:42,769 - #8 e
INFO  22:59:42,769 - #27 ;
INFO  22:59:42,770 - #20 {
INFO  22:59:42,771 - #6 void
INFO  22:59:42,771 - #8 main
INFO  22:59:42,771 - #29 (
INFO  22:59:42,772 - #30 )
INFO  22:59:42,772 - #20 {
INFO  22:59:42,772 - #8 e
INFO  22:59:42,772 - #24 =
INFO  22:59:42,773 - #9 1
INFO  22:59:42,773 - #27 ;
INFO  22:59:42,773 - #31 if
INFO  22:59:42,774 - #29 (
INFO  22:59:42,774 - #8 e
INFO  22:59:42,774 - #38 >
INFO  22:59:42,774 - #9 0
INFO  22:59:42,775 - #13 &&
INFO  22:59:42,776 - #8 e
INFO  22:59:42,776 - #42 <=
INFO  22:59:42,776 - #9 9
INFO  22:59:42,777 - #30 )
INFO  22:59:42,777 - #20 {
INFO  22:59:42,777 - #3 print
INFO  22:59:42,778 - #29 (
INFO  22:59:42,778 - #8 e
INFO  22:59:42,778 - #30 )
INFO  22:59:42,778 - #27 ;
INFO  22:59:42,778 - #21 }
INFO  22:59:42,778 - #32 else
INFO  22:59:42,779 - #20 {
INFO  22:59:42,779 - #3 print
INFO  22:59:42,779 - #29 (
INFO  22:59:42,780 - #8 d
INFO  22:59:42,780 - #30 )
INFO  22:59:42,780 - #27 ;
INFO  22:59:42,780 - #21 }
INFO  22:59:42,780 - #21 }
INFO  22:59:42,780 - #21 }
INFO  22:59:42,781 - =====================SINTAKSNO_STABLO=========================
INFO  22:59:42,783 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:59:42,783 - ==============================================================
INFO  22:59:42,798 - Pocetak obrade programa Program na liniji 1
INFO  22:59:42,798 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:59:42,799 - Deklarisana konstanta c na liniji 2
INFO  22:59:42,799 - Deklarisana konstanta d na liniji 2
INFO  22:59:42,799 - Deklarisana konstanta g na liniji 2
INFO  22:59:42,800 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:59:42,800 - Deklarisana promenljiva e na liniji 3
INFO  22:59:42,800 - Pocetak obrade metode main na liniji 5
INFO  22:59:42,801 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:59:42,801 - Zavrsetak obrade programa Program na liniji 1
INFO  22:59:42,801 - ======================TABELA_SIMBOLA==========================
INFO  22:59:42,801 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  22:59:42,802 - ==============================================================
INFO  22:59:42,802 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:59:42,802 - ==============================================================
INFO  22:59:42,802 - ======================GENERISANJE_KODA========================
ERROR 22:59:42,807 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 22:59:42,809 - Generisanje koda neuspesno!
INFO  22:59:42,809 - ==============================================================
INFO  23:10:57,614 - Obrada ulaznog fajla test\program.mj
INFO  23:10:57,703 - #2 program
INFO  23:10:57,704 - #8 Program
INFO  23:10:57,704 - #5 const
INFO  23:10:57,705 - #8 int
INFO  23:10:57,705 - #8 c
INFO  23:10:57,705 - #24 =
INFO  23:10:57,706 - #9 10
INFO  23:10:57,706 - #28 ,
INFO  23:10:57,707 - #8 d
INFO  23:10:57,707 - #24 =
INFO  23:10:57,707 - #9 99
INFO  23:10:57,707 - #28 ,
INFO  23:10:57,707 - #8 g
INFO  23:10:57,707 - #24 =
INFO  23:10:57,707 - #9 2
INFO  23:10:57,707 - #27 ;
INFO  23:10:57,707 - #8 int
INFO  23:10:57,708 - #8 e
INFO  23:10:57,709 - #27 ;
INFO  23:10:57,709 - #20 {
INFO  23:10:57,710 - #6 void
INFO  23:10:57,710 - #8 main
INFO  23:10:57,710 - #29 (
INFO  23:10:57,711 - #30 )
INFO  23:10:57,711 - #20 {
INFO  23:10:57,711 - #8 e
INFO  23:10:57,711 - #24 =
INFO  23:10:57,711 - #9 1
INFO  23:10:57,712 - #27 ;
INFO  23:10:57,712 - #31 if
INFO  23:10:57,713 - #29 (
INFO  23:10:57,713 - #8 e
INFO  23:10:57,713 - #38 >
INFO  23:10:57,713 - #9 0
INFO  23:10:57,715 - #13 &&
INFO  23:10:57,715 - #8 e
INFO  23:10:57,715 - #42 <=
INFO  23:10:57,716 - #9 9
INFO  23:10:57,716 - #30 )
INFO  23:10:57,717 - #20 {
INFO  23:10:57,717 - #3 print
INFO  23:10:57,717 - #29 (
INFO  23:10:57,717 - #8 e
INFO  23:10:57,717 - #30 )
INFO  23:10:57,717 - #27 ;
INFO  23:10:57,717 - #21 }
INFO  23:10:57,717 - #32 else
INFO  23:10:57,718 - #20 {
INFO  23:10:57,719 - #3 print
INFO  23:10:57,719 - #29 (
INFO  23:10:57,719 - #8 d
INFO  23:10:57,719 - #30 )
INFO  23:10:57,719 - #27 ;
INFO  23:10:57,719 - #21 }
INFO  23:10:57,719 - #21 }
INFO  23:10:57,720 - #21 }
INFO  23:10:57,720 - =====================SINTAKSNO_STABLO=========================
INFO  23:10:57,722 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:10:57,723 - ==============================================================
INFO  23:10:57,736 - Pocetak obrade programa Program na liniji 1
INFO  23:10:57,736 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:10:57,737 - Deklarisana konstanta c na liniji 2
INFO  23:10:57,737 - Deklarisana konstanta d na liniji 2
INFO  23:10:57,737 - Deklarisana konstanta g na liniji 2
INFO  23:10:57,737 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:10:57,737 - Deklarisana promenljiva e na liniji 3
INFO  23:10:57,738 - Pocetak obrade metode main na liniji 5
INFO  23:10:57,739 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:10:57,739 - Zavrsetak obrade programa Program na liniji 1
INFO  23:10:57,739 - ======================TABELA_SIMBOLA==========================
INFO  23:10:57,739 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:10:57,739 - ==============================================================
INFO  23:10:57,739 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:10:57,740 - ==============================================================
INFO  23:10:57,740 - ======================GENERISANJE_KODA========================
INFO  23:12:30,881 - Obrada ulaznog fajla test\program.mj
INFO  23:12:30,957 - #2 program
INFO  23:12:30,958 - #8 Program
INFO  23:12:30,958 - #5 const
INFO  23:12:30,959 - #8 int
INFO  23:12:30,959 - #8 c
INFO  23:12:30,959 - #24 =
INFO  23:12:30,960 - #9 10
INFO  23:12:30,960 - #28 ,
INFO  23:12:30,961 - #8 d
INFO  23:12:30,961 - #24 =
INFO  23:12:30,961 - #9 99
INFO  23:12:30,961 - #28 ,
INFO  23:12:30,961 - #8 g
INFO  23:12:30,961 - #24 =
INFO  23:12:30,961 - #9 2
INFO  23:12:30,961 - #27 ;
INFO  23:12:30,962 - #8 int
INFO  23:12:30,963 - #8 e
INFO  23:12:30,963 - #27 ;
INFO  23:12:30,963 - #20 {
INFO  23:12:30,964 - #6 void
INFO  23:12:30,964 - #8 main
INFO  23:12:30,965 - #29 (
INFO  23:12:30,965 - #30 )
INFO  23:12:30,965 - #20 {
INFO  23:12:30,965 - #8 e
INFO  23:12:30,966 - #24 =
INFO  23:12:30,966 - #9 1
INFO  23:12:30,966 - #27 ;
INFO  23:12:30,967 - #31 if
INFO  23:12:30,967 - #29 (
INFO  23:12:30,967 - #8 e
INFO  23:12:30,967 - #38 >
INFO  23:12:30,967 - #9 0
INFO  23:12:30,968 - #13 &&
INFO  23:12:30,969 - #8 e
INFO  23:12:30,969 - #42 <=
INFO  23:12:30,969 - #9 9
INFO  23:12:30,970 - #30 )
INFO  23:12:30,970 - #20 {
INFO  23:12:30,970 - #3 print
INFO  23:12:30,970 - #29 (
INFO  23:12:30,971 - #8 e
INFO  23:12:30,971 - #30 )
INFO  23:12:30,971 - #27 ;
INFO  23:12:30,971 - #21 }
INFO  23:12:30,971 - #32 else
INFO  23:12:30,972 - #20 {
INFO  23:12:30,972 - #3 print
INFO  23:12:30,973 - #29 (
INFO  23:12:30,973 - #8 d
INFO  23:12:30,973 - #30 )
INFO  23:12:30,973 - #27 ;
INFO  23:12:30,973 - #21 }
INFO  23:12:30,973 - #21 }
INFO  23:12:30,973 - #21 }
INFO  23:12:30,974 - =====================SINTAKSNO_STABLO=========================
INFO  23:12:30,976 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:12:30,976 - ==============================================================
INFO  23:12:30,991 - Pocetak obrade programa Program na liniji 1
INFO  23:12:30,991 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:12:30,992 - Deklarisana konstanta c na liniji 2
INFO  23:12:30,992 - Deklarisana konstanta d na liniji 2
INFO  23:12:30,993 - Deklarisana konstanta g na liniji 2
INFO  23:12:30,993 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:12:30,993 - Deklarisana promenljiva e na liniji 3
INFO  23:12:30,994 - Pocetak obrade metode main na liniji 5
INFO  23:12:30,994 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:12:30,994 - Zavrsetak obrade programa Program na liniji 1
INFO  23:12:30,994 - ======================TABELA_SIMBOLA==========================
INFO  23:12:30,995 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:12:30,995 - ==============================================================
INFO  23:12:30,995 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:12:30,995 - ==============================================================
INFO  23:12:30,995 - ======================GENERISANJE_KODA========================
INFO  23:14:09,096 - Obrada ulaznog fajla test\program.mj
INFO  23:14:09,179 - #2 program
INFO  23:14:09,179 - #8 Program
INFO  23:14:09,179 - #5 const
INFO  23:14:09,180 - #8 int
INFO  23:14:09,180 - #8 c
INFO  23:14:09,181 - #24 =
INFO  23:14:09,181 - #9 10
INFO  23:14:09,181 - #28 ,
INFO  23:14:09,182 - #8 d
INFO  23:14:09,182 - #24 =
INFO  23:14:09,182 - #9 99
INFO  23:14:09,182 - #28 ,
INFO  23:14:09,182 - #8 g
INFO  23:14:09,183 - #24 =
INFO  23:14:09,183 - #9 2
INFO  23:14:09,183 - #27 ;
INFO  23:14:09,183 - #8 int
INFO  23:14:09,184 - #8 e
INFO  23:14:09,184 - #27 ;
INFO  23:14:09,184 - #20 {
INFO  23:14:09,185 - #6 void
INFO  23:14:09,185 - #8 main
INFO  23:14:09,186 - #29 (
INFO  23:14:09,186 - #30 )
INFO  23:14:09,186 - #20 {
INFO  23:14:09,187 - #8 e
INFO  23:14:09,187 - #24 =
INFO  23:14:09,188 - #9 1
INFO  23:14:09,188 - #27 ;
INFO  23:14:09,188 - #31 if
INFO  23:14:09,189 - #29 (
INFO  23:14:09,189 - #8 e
INFO  23:14:09,189 - #38 >
INFO  23:14:09,189 - #9 0
INFO  23:14:09,191 - #13 &&
INFO  23:14:09,191 - #8 e
INFO  23:14:09,191 - #42 <=
INFO  23:14:09,192 - #9 9
INFO  23:14:09,192 - #30 )
INFO  23:14:09,193 - #20 {
INFO  23:14:09,193 - #3 print
INFO  23:14:09,193 - #29 (
INFO  23:14:09,193 - #8 e
INFO  23:14:09,193 - #30 )
INFO  23:14:09,193 - #27 ;
INFO  23:14:09,193 - #21 }
INFO  23:14:09,194 - #32 else
INFO  23:14:09,195 - #20 {
INFO  23:14:09,195 - #3 print
INFO  23:14:09,195 - #29 (
INFO  23:14:09,195 - #8 d
INFO  23:14:09,195 - #30 )
INFO  23:14:09,195 - #27 ;
INFO  23:14:09,195 - #21 }
INFO  23:14:09,195 - #21 }
INFO  23:14:09,196 - #21 }
INFO  23:14:09,196 - =====================SINTAKSNO_STABLO=========================
INFO  23:14:09,199 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:14:09,200 - ==============================================================
INFO  23:14:09,215 - Pocetak obrade programa Program na liniji 1
INFO  23:14:09,215 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:14:09,216 - Deklarisana konstanta c na liniji 2
INFO  23:14:09,216 - Deklarisana konstanta d na liniji 2
INFO  23:14:09,216 - Deklarisana konstanta g na liniji 2
INFO  23:14:09,216 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:14:09,216 - Deklarisana promenljiva e na liniji 3
INFO  23:14:09,217 - Pocetak obrade metode main na liniji 5
INFO  23:14:09,218 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:14:09,218 - Zavrsetak obrade programa Program na liniji 1
INFO  23:14:09,218 - ======================TABELA_SIMBOLA==========================
INFO  23:14:09,219 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:14:09,219 - ==============================================================
INFO  23:14:09,219 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:14:09,219 - ==============================================================
INFO  23:14:09,219 - ======================GENERISANJE_KODA========================
INFO  23:14:14,393 - Obrada ulaznog fajla test\program.mj
INFO  23:14:14,495 - #2 program
INFO  23:14:14,495 - #8 Program
INFO  23:14:14,495 - #5 const
INFO  23:14:14,496 - #8 int
INFO  23:14:14,497 - #8 c
INFO  23:14:14,497 - #24 =
INFO  23:14:14,497 - #9 10
INFO  23:14:14,498 - #28 ,
INFO  23:14:14,499 - #8 d
INFO  23:14:14,499 - #24 =
INFO  23:14:14,499 - #9 99
INFO  23:14:14,499 - #28 ,
INFO  23:14:14,500 - #8 g
INFO  23:14:14,500 - #24 =
INFO  23:14:14,500 - #9 2
INFO  23:14:14,500 - #27 ;
INFO  23:14:14,500 - #8 int
INFO  23:14:14,502 - #8 e
INFO  23:14:14,502 - #27 ;
INFO  23:14:14,502 - #20 {
INFO  23:14:14,504 - #6 void
INFO  23:14:14,504 - #8 main
INFO  23:14:14,504 - #29 (
INFO  23:14:14,505 - #30 )
INFO  23:14:14,505 - #20 {
INFO  23:14:14,505 - #8 e
INFO  23:14:14,505 - #24 =
INFO  23:14:14,505 - #9 1
INFO  23:14:14,505 - #27 ;
INFO  23:14:14,506 - #31 if
INFO  23:14:14,506 - #29 (
INFO  23:14:14,506 - #8 e
INFO  23:14:14,506 - #38 >
INFO  23:14:14,506 - #9 0
INFO  23:14:14,509 - #13 &&
INFO  23:14:14,509 - #8 e
INFO  23:14:14,509 - #42 <=
INFO  23:14:14,510 - #9 9
INFO  23:14:14,510 - #30 )
INFO  23:14:14,511 - #20 {
INFO  23:14:14,511 - #3 print
INFO  23:14:14,511 - #29 (
INFO  23:14:14,511 - #8 e
INFO  23:14:14,511 - #30 )
INFO  23:14:14,511 - #27 ;
INFO  23:14:14,511 - #21 }
INFO  23:14:14,512 - #32 else
INFO  23:14:14,513 - #20 {
INFO  23:14:14,513 - #3 print
INFO  23:14:14,513 - #29 (
INFO  23:14:14,513 - #8 d
INFO  23:14:14,513 - #30 )
INFO  23:14:14,514 - #27 ;
INFO  23:14:14,514 - #21 }
INFO  23:14:14,514 - #21 }
INFO  23:14:14,514 - #21 }
INFO  23:14:14,515 - =====================SINTAKSNO_STABLO=========================
INFO  23:14:14,517 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:14:14,517 - ==============================================================
INFO  23:14:14,532 - Pocetak obrade programa Program na liniji 1
INFO  23:14:14,532 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:14:14,533 - Deklarisana konstanta c na liniji 2
INFO  23:14:14,533 - Deklarisana konstanta d na liniji 2
INFO  23:14:14,533 - Deklarisana konstanta g na liniji 2
INFO  23:14:14,533 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:14:14,533 - Deklarisana promenljiva e na liniji 3
INFO  23:14:14,534 - Pocetak obrade metode main na liniji 5
INFO  23:14:14,535 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:14:14,535 - Zavrsetak obrade programa Program na liniji 1
INFO  23:14:14,535 - ======================TABELA_SIMBOLA==========================
INFO  23:14:14,535 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:14:14,535 - ==============================================================
INFO  23:14:14,535 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:14:14,535 - ==============================================================
INFO  23:14:14,536 - ======================GENERISANJE_KODA========================
INFO  23:26:10,685 - Obrada ulaznog fajla test\program.mj
INFO  23:26:10,773 - #2 program
INFO  23:26:10,773 - #8 Program
INFO  23:26:10,773 - #5 const
INFO  23:26:10,774 - #8 int
INFO  23:26:10,774 - #8 c
INFO  23:26:10,775 - #24 =
INFO  23:26:10,775 - #9 10
INFO  23:26:10,775 - #28 ,
INFO  23:26:10,776 - #8 d
INFO  23:26:10,776 - #24 =
INFO  23:26:10,777 - #9 99
INFO  23:26:10,777 - #28 ,
INFO  23:26:10,777 - #8 g
INFO  23:26:10,777 - #24 =
INFO  23:26:10,777 - #9 2
INFO  23:26:10,777 - #27 ;
INFO  23:26:10,777 - #8 int
INFO  23:26:10,779 - #8 e
INFO  23:26:10,779 - #27 ;
INFO  23:26:10,779 - #20 {
INFO  23:26:10,780 - #6 void
INFO  23:26:10,780 - #8 main
INFO  23:26:10,781 - #29 (
INFO  23:26:10,781 - #30 )
INFO  23:26:10,782 - #20 {
INFO  23:26:10,782 - #8 e
INFO  23:26:10,782 - #24 =
INFO  23:26:10,782 - #9 1
INFO  23:26:10,782 - #27 ;
INFO  23:26:10,783 - #31 if
INFO  23:26:10,783 - #29 (
INFO  23:26:10,783 - #8 e
INFO  23:26:10,784 - #38 >
INFO  23:26:10,784 - #9 0
INFO  23:26:10,786 - #13 &&
INFO  23:26:10,786 - #8 e
INFO  23:26:10,786 - #42 <=
INFO  23:26:10,786 - #9 9
INFO  23:26:10,787 - #30 )
INFO  23:26:10,788 - #20 {
INFO  23:26:10,788 - #3 print
INFO  23:26:10,788 - #29 (
INFO  23:26:10,788 - #8 e
INFO  23:26:10,788 - #30 )
INFO  23:26:10,788 - #27 ;
INFO  23:26:10,788 - #21 }
INFO  23:26:10,788 - #32 else
INFO  23:26:10,790 - #20 {
INFO  23:26:10,790 - #3 print
INFO  23:26:10,790 - #29 (
INFO  23:26:10,790 - #8 d
INFO  23:26:10,790 - #30 )
INFO  23:26:10,790 - #27 ;
INFO  23:26:10,790 - #21 }
INFO  23:26:10,791 - #21 }
INFO  23:26:10,791 - #21 }
INFO  23:26:10,792 - =====================SINTAKSNO_STABLO=========================
INFO  23:26:10,796 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:26:10,796 - ==============================================================
INFO  23:26:10,812 - Pocetak obrade programa Program na liniji 1
INFO  23:26:10,812 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:26:10,813 - Deklarisana konstanta c na liniji 2
INFO  23:26:10,813 - Deklarisana konstanta d na liniji 2
INFO  23:26:10,813 - Deklarisana konstanta g na liniji 2
INFO  23:26:10,813 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:26:10,813 - Deklarisana promenljiva e na liniji 3
INFO  23:26:10,814 - Pocetak obrade metode main na liniji 5
INFO  23:26:10,815 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:26:10,815 - Zavrsetak obrade programa Program na liniji 1
INFO  23:26:10,815 - ======================TABELA_SIMBOLA==========================
INFO  23:26:10,815 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:26:10,816 - ==============================================================
INFO  23:26:10,816 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:26:10,816 - ==============================================================
INFO  23:26:10,816 - ======================GENERISANJE_KODA========================
INFO  23:26:17,495 - Obrada ulaznog fajla test\program.mj
INFO  23:26:17,604 - #2 program
INFO  23:26:17,604 - #8 Program
INFO  23:26:17,604 - #5 const
INFO  23:26:17,606 - #8 int
INFO  23:26:17,606 - #8 c
INFO  23:26:17,607 - #24 =
INFO  23:26:17,607 - #9 10
INFO  23:26:17,607 - #28 ,
INFO  23:26:17,609 - #8 d
INFO  23:26:17,612 - #24 =
INFO  23:26:17,612 - #9 99
INFO  23:26:17,613 - #28 ,
INFO  23:26:17,613 - #8 g
INFO  23:26:17,613 - #24 =
INFO  23:26:17,613 - #9 2
INFO  23:26:17,614 - #27 ;
INFO  23:26:17,615 - #8 int
INFO  23:26:17,616 - #8 e
INFO  23:26:17,617 - #27 ;
INFO  23:26:17,617 - #20 {
INFO  23:26:17,630 - #6 void
INFO  23:26:17,630 - #8 main
INFO  23:26:17,630 - #29 (
INFO  23:26:17,631 - #30 )
INFO  23:26:17,631 - #20 {
INFO  23:26:17,632 - #8 e
INFO  23:26:17,632 - #24 =
INFO  23:26:17,632 - #9 1
INFO  23:26:17,632 - #27 ;
INFO  23:26:17,634 - #31 if
INFO  23:26:17,634 - #29 (
INFO  23:26:17,635 - #8 e
INFO  23:26:17,635 - #38 >
INFO  23:26:17,635 - #9 0
INFO  23:26:17,637 - #13 &&
INFO  23:26:17,638 - #8 e
INFO  23:26:17,638 - #42 <=
INFO  23:26:17,638 - #9 9
INFO  23:26:17,639 - #30 )
INFO  23:26:17,640 - #20 {
INFO  23:26:17,640 - #3 print
INFO  23:26:17,640 - #29 (
INFO  23:26:17,640 - #8 e
INFO  23:26:17,640 - #30 )
INFO  23:26:17,641 - #27 ;
INFO  23:26:17,641 - #21 }
INFO  23:26:17,641 - #32 else
INFO  23:26:17,643 - #20 {
INFO  23:26:17,643 - #3 print
INFO  23:26:17,643 - #29 (
INFO  23:26:17,644 - #8 d
INFO  23:26:17,644 - #30 )
INFO  23:26:17,644 - #27 ;
INFO  23:26:17,644 - #21 }
INFO  23:26:17,644 - #21 }
INFO  23:26:17,644 - #21 }
INFO  23:26:17,646 - =====================SINTAKSNO_STABLO=========================
INFO  23:26:17,648 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:26:17,648 - ==============================================================
INFO  23:26:17,665 - Pocetak obrade programa Program na liniji 1
INFO  23:26:17,665 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:26:17,666 - Deklarisana konstanta c na liniji 2
INFO  23:26:17,666 - Deklarisana konstanta d na liniji 2
INFO  23:26:17,666 - Deklarisana konstanta g na liniji 2
INFO  23:26:17,666 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:26:17,666 - Deklarisana promenljiva e na liniji 3
INFO  23:26:17,668 - Pocetak obrade metode main na liniji 5
INFO  23:26:17,668 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:26:17,668 - Zavrsetak obrade programa Program na liniji 1
INFO  23:26:17,668 - ======================TABELA_SIMBOLA==========================
INFO  23:26:17,669 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:26:17,669 - ==============================================================
INFO  23:26:17,669 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:26:17,669 - ==============================================================
INFO  23:26:17,669 - ======================GENERISANJE_KODA========================
INFO  23:27:23,614 - Obrada ulaznog fajla test\program.mj
INFO  23:27:23,744 - #2 program
INFO  23:27:23,744 - #8 Program
INFO  23:27:23,744 - #5 const
INFO  23:27:23,745 - #8 int
INFO  23:27:23,745 - #8 c
INFO  23:27:23,746 - #24 =
INFO  23:27:23,746 - #9 10
INFO  23:27:23,746 - #28 ,
INFO  23:27:23,747 - #8 d
INFO  23:27:23,747 - #24 =
INFO  23:27:23,748 - #9 99
INFO  23:27:23,748 - #28 ,
INFO  23:27:23,748 - #8 g
INFO  23:27:23,748 - #24 =
INFO  23:27:23,748 - #9 2
INFO  23:27:23,748 - #27 ;
INFO  23:27:23,749 - #8 int
INFO  23:27:23,750 - #8 e
INFO  23:27:23,750 - #27 ;
INFO  23:27:23,750 - #20 {
INFO  23:27:23,751 - #6 void
INFO  23:27:23,752 - #8 main
INFO  23:27:23,752 - #29 (
INFO  23:27:23,752 - #30 )
INFO  23:27:23,752 - #20 {
INFO  23:27:23,753 - #8 e
INFO  23:27:23,753 - #24 =
INFO  23:27:23,753 - #9 1
INFO  23:27:23,753 - #27 ;
INFO  23:27:23,754 - #31 if
INFO  23:27:23,754 - #29 (
INFO  23:27:23,754 - #8 e
INFO  23:27:23,755 - #38 >
INFO  23:27:23,755 - #9 0
INFO  23:27:23,756 - #13 &&
INFO  23:27:23,757 - #8 e
INFO  23:27:23,757 - #42 <=
INFO  23:27:23,757 - #9 9
INFO  23:27:23,757 - #30 )
INFO  23:27:23,758 - #20 {
INFO  23:27:23,758 - #3 print
INFO  23:27:23,758 - #29 (
INFO  23:27:23,758 - #8 e
INFO  23:27:23,758 - #30 )
INFO  23:27:23,758 - #27 ;
INFO  23:27:23,758 - #21 }
INFO  23:27:23,759 - #32 else
INFO  23:27:23,763 - #20 {
INFO  23:27:23,763 - #3 print
INFO  23:27:23,763 - #29 (
INFO  23:27:23,763 - #8 d
INFO  23:27:23,763 - #30 )
INFO  23:27:23,763 - #27 ;
INFO  23:27:23,764 - #21 }
INFO  23:27:23,764 - #21 }
INFO  23:27:23,764 - #21 }
INFO  23:27:23,765 - =====================SINTAKSNO_STABLO=========================
INFO  23:27:23,772 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:27:23,773 - ==============================================================
INFO  23:27:23,787 - Pocetak obrade programa Program na liniji 1
INFO  23:27:23,787 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:27:23,788 - Deklarisana konstanta c na liniji 2
INFO  23:27:23,788 - Deklarisana konstanta d na liniji 2
INFO  23:27:23,788 - Deklarisana konstanta g na liniji 2
INFO  23:27:23,788 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:27:23,789 - Deklarisana promenljiva e na liniji 3
INFO  23:27:23,789 - Pocetak obrade metode main na liniji 5
INFO  23:27:23,790 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:27:23,790 - Zavrsetak obrade programa Program na liniji 1
INFO  23:27:23,790 - ======================TABELA_SIMBOLA==========================
INFO  23:27:23,792 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:27:23,792 - ==============================================================
INFO  23:27:23,792 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:27:23,792 - ==============================================================
INFO  23:27:23,792 - ======================GENERISANJE_KODA========================
INFO  23:27:23,802 - Generisanje koda uspesno zavrseno!
INFO  23:27:23,802 - Generisanje izlaznog fajla test\program.obj
INFO  23:27:23,802 - ==============================================================
INFO  23:28:06,734 - Obrada ulaznog fajla test\program.mj
INFO  23:28:06,846 - #2 program
INFO  23:28:06,846 - #8 Program
INFO  23:28:06,846 - #5 const
INFO  23:28:06,847 - #8 int
INFO  23:28:06,848 - #8 c
INFO  23:28:06,848 - #24 =
INFO  23:28:06,849 - #9 10
INFO  23:28:06,849 - #28 ,
INFO  23:28:06,850 - #8 d
INFO  23:28:06,850 - #24 =
INFO  23:28:06,850 - #9 99
INFO  23:28:06,851 - #28 ,
INFO  23:28:06,851 - #8 g
INFO  23:28:06,851 - #24 =
INFO  23:28:06,851 - #9 2
INFO  23:28:06,851 - #27 ;
INFO  23:28:06,851 - #8 int
INFO  23:28:06,853 - #8 e
INFO  23:28:06,853 - #27 ;
INFO  23:28:06,854 - #20 {
INFO  23:28:06,855 - #6 void
INFO  23:28:06,856 - #8 main
INFO  23:28:06,856 - #29 (
INFO  23:28:06,857 - #30 )
INFO  23:28:06,858 - #20 {
INFO  23:28:06,858 - #8 e
INFO  23:28:06,858 - #24 =
INFO  23:28:06,858 - #9 10
INFO  23:28:06,858 - #27 ;
INFO  23:28:06,859 - #31 if
INFO  23:28:06,859 - #29 (
INFO  23:28:06,859 - #8 e
INFO  23:28:06,859 - #38 >
INFO  23:28:06,860 - #9 0
INFO  23:28:06,861 - #13 &&
INFO  23:28:06,861 - #8 e
INFO  23:28:06,861 - #42 <=
INFO  23:28:06,861 - #9 9
INFO  23:28:06,862 - #30 )
INFO  23:28:06,862 - #20 {
INFO  23:28:06,862 - #3 print
INFO  23:28:06,863 - #29 (
INFO  23:28:06,863 - #8 e
INFO  23:28:06,863 - #30 )
INFO  23:28:06,863 - #27 ;
INFO  23:28:06,863 - #21 }
INFO  23:28:06,863 - #32 else
INFO  23:28:06,864 - #20 {
INFO  23:28:06,864 - #3 print
INFO  23:28:06,864 - #29 (
INFO  23:28:06,866 - #8 d
INFO  23:28:06,866 - #30 )
INFO  23:28:06,866 - #27 ;
INFO  23:28:06,866 - #21 }
INFO  23:28:06,867 - #21 }
INFO  23:28:06,867 - #21 }
INFO  23:28:06,868 - =====================SINTAKSNO_STABLO=========================
INFO  23:28:06,871 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         9
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:28:06,872 - ==============================================================
INFO  23:28:06,885 - Pocetak obrade programa Program na liniji 1
INFO  23:28:06,886 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:28:06,887 - Deklarisana konstanta c na liniji 2
INFO  23:28:06,887 - Deklarisana konstanta d na liniji 2
INFO  23:28:06,887 - Deklarisana konstanta g na liniji 2
INFO  23:28:06,888 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:28:06,888 - Deklarisana promenljiva e na liniji 3
INFO  23:28:06,889 - Pocetak obrade metode main na liniji 5
INFO  23:28:06,889 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:28:06,890 - Zavrsetak obrade programa Program na liniji 1
INFO  23:28:06,890 - ======================TABELA_SIMBOLA==========================
INFO  23:28:06,891 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:28:06,891 - ==============================================================
INFO  23:28:06,891 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:28:06,891 - ==============================================================
INFO  23:28:06,891 - ======================GENERISANJE_KODA========================
INFO  23:28:06,901 - Generisanje koda uspesno zavrseno!
INFO  23:28:06,901 - Generisanje izlaznog fajla test\program.obj
INFO  23:28:06,901 - ==============================================================
INFO  23:31:38,615 - Obrada ulaznog fajla test\program.mj
INFO  23:31:38,716 - #2 program
INFO  23:31:38,716 - #8 Program
INFO  23:31:38,716 - #5 const
INFO  23:31:38,718 - #8 int
INFO  23:31:38,718 - #8 c
INFO  23:31:38,720 - #24 =
INFO  23:31:38,720 - #9 10
INFO  23:31:38,720 - #28 ,
INFO  23:31:38,722 - #8 d
INFO  23:31:38,722 - #24 =
INFO  23:31:38,722 - #9 99
INFO  23:31:38,722 - #28 ,
INFO  23:31:38,723 - #8 g
INFO  23:31:38,723 - #24 =
INFO  23:31:38,723 - #9 2
INFO  23:31:38,723 - #27 ;
INFO  23:31:38,723 - #8 int
INFO  23:31:38,726 - #8 e
INFO  23:31:38,726 - #27 ;
INFO  23:31:38,726 - #20 {
INFO  23:31:38,729 - #6 void
INFO  23:31:38,729 - #8 main
INFO  23:31:38,729 - #29 (
INFO  23:31:38,730 - #30 )
INFO  23:31:38,730 - #20 {
INFO  23:31:38,731 - #8 e
INFO  23:31:38,731 - #24 =
INFO  23:31:38,731 - #9 10
INFO  23:31:38,731 - #27 ;
INFO  23:31:38,732 - #31 if
INFO  23:31:38,732 - #29 (
INFO  23:31:38,744 - #8 e
INFO  23:31:38,744 - #38 >
INFO  23:31:38,745 - #9 0
INFO  23:31:38,746 - #14 ||
INFO  23:31:38,747 - #8 e
INFO  23:31:38,747 - #42 <=
INFO  23:31:38,747 - #8 d
INFO  23:31:38,747 - #13 &&
INFO  23:31:38,748 - #8 e
INFO  23:31:38,748 - #38 >
INFO  23:31:38,748 - #8 g
INFO  23:31:38,748 - #30 )
INFO  23:31:38,748 - #20 {
INFO  23:31:38,748 - #3 print
INFO  23:31:38,748 - #29 (
INFO  23:31:38,749 - #8 e
INFO  23:31:38,749 - #30 )
INFO  23:31:38,749 - #27 ;
INFO  23:31:38,749 - #21 }
INFO  23:31:38,749 - #32 else
INFO  23:31:38,750 - #20 {
INFO  23:31:38,750 - #3 print
INFO  23:31:38,753 - #29 (
INFO  23:31:38,753 - #8 d
INFO  23:31:38,753 - #30 )
INFO  23:31:38,754 - #27 ;
INFO  23:31:38,754 - #21 }
INFO  23:31:38,754 - #21 }
INFO  23:31:38,754 - #21 }
INFO  23:31:38,755 - =====================SINTAKSNO_STABLO=========================
INFO  23:31:38,757 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:31:38,758 - ==============================================================
INFO  23:31:38,773 - Pocetak obrade programa Program na liniji 1
INFO  23:31:38,773 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:31:38,774 - Deklarisana konstanta c na liniji 2
INFO  23:31:38,774 - Deklarisana konstanta d na liniji 2
INFO  23:31:38,774 - Deklarisana konstanta g na liniji 2
INFO  23:31:38,774 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:31:38,775 - Deklarisana promenljiva e na liniji 3
INFO  23:31:38,775 - Pocetak obrade metode main na liniji 5
INFO  23:31:38,776 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:31:38,776 - Zavrsetak obrade programa Program na liniji 1
INFO  23:31:38,776 - ======================TABELA_SIMBOLA==========================
INFO  23:31:38,776 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:31:38,778 - ==============================================================
INFO  23:31:38,778 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:31:38,778 - ==============================================================
INFO  23:31:38,779 - ======================GENERISANJE_KODA========================
INFO  23:31:38,784 - Generisanje koda uspesno zavrseno!
INFO  23:31:38,784 - Generisanje izlaznog fajla test\program.obj
INFO  23:31:38,784 - ==============================================================
INFO  23:32:43,499 - Obrada ulaznog fajla test\program.mj
INFO  23:32:43,621 - #2 program
INFO  23:32:43,622 - #8 Program
INFO  23:32:43,622 - #5 const
INFO  23:32:43,623 - #8 int
INFO  23:32:43,623 - #8 c
INFO  23:32:43,624 - #24 =
INFO  23:32:43,624 - #9 10
INFO  23:32:43,624 - #28 ,
INFO  23:32:43,625 - #8 d
INFO  23:32:43,625 - #24 =
INFO  23:32:43,625 - #9 99
INFO  23:32:43,626 - #28 ,
INFO  23:32:43,626 - #8 g
INFO  23:32:43,626 - #24 =
INFO  23:32:43,626 - #9 2
INFO  23:32:43,626 - #27 ;
INFO  23:32:43,626 - #8 int
INFO  23:32:43,628 - #8 e
INFO  23:32:43,628 - #27 ;
INFO  23:32:43,628 - #20 {
INFO  23:32:43,630 - #6 void
INFO  23:32:43,631 - #8 main
INFO  23:32:43,631 - #29 (
INFO  23:32:43,631 - #30 )
INFO  23:32:43,632 - #20 {
INFO  23:32:43,632 - #8 e
INFO  23:32:43,632 - #24 =
INFO  23:32:43,632 - #9 10
INFO  23:32:43,632 - #27 ;
INFO  23:32:43,633 - #31 if
INFO  23:32:43,633 - #29 (
INFO  23:32:43,633 - #8 e
INFO  23:32:43,633 - #38 >
INFO  23:32:43,634 - #9 0
INFO  23:32:43,635 - #14 ||
INFO  23:32:43,636 - #8 e
INFO  23:32:43,636 - #42 <=
INFO  23:32:43,636 - #8 d
INFO  23:32:43,636 - #13 &&
INFO  23:32:43,636 - #8 e
INFO  23:32:43,637 - #38 >
INFO  23:32:43,637 - #8 g
INFO  23:32:43,638 - #30 )
INFO  23:32:43,639 - #20 {
INFO  23:32:43,639 - #3 print
INFO  23:32:43,639 - #29 (
INFO  23:32:43,639 - #8 e
INFO  23:32:43,639 - #30 )
INFO  23:32:43,640 - #27 ;
INFO  23:32:43,640 - #21 }
INFO  23:32:43,641 - #32 else
INFO  23:32:43,642 - #20 {
INFO  23:32:43,642 - #3 print
INFO  23:32:43,646 - #29 (
INFO  23:32:43,646 - #8 d
INFO  23:32:43,646 - #30 )
INFO  23:32:43,646 - #27 ;
INFO  23:32:43,646 - #21 }
INFO  23:32:43,646 - #21 }
INFO  23:32:43,647 - #21 }
INFO  23:32:43,648 - =====================SINTAKSNO_STABLO=========================
INFO  23:32:43,650 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:32:43,650 - ==============================================================
INFO  23:32:43,673 - Pocetak obrade programa Program na liniji 1
INFO  23:32:43,673 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:32:43,674 - Deklarisana konstanta c na liniji 2
INFO  23:32:43,674 - Deklarisana konstanta d na liniji 2
INFO  23:32:43,675 - Deklarisana konstanta g na liniji 2
INFO  23:32:43,675 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:32:43,675 - Deklarisana promenljiva e na liniji 3
INFO  23:32:43,676 - Pocetak obrade metode main na liniji 5
INFO  23:32:43,677 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:32:43,677 - Zavrsetak obrade programa Program na liniji 1
INFO  23:32:43,677 - ======================TABELA_SIMBOLA==========================
INFO  23:32:43,678 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:32:43,680 - ==============================================================
INFO  23:32:43,680 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:32:43,680 - ==============================================================
INFO  23:32:43,680 - ======================GENERISANJE_KODA========================
ERROR 23:32:43,684 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 23:32:43,684 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 23:32:43,684 - Greska u generisanju koda - jumpTrickII, ne mogu odrediti kojoj naredbi pripada condition na liniji 7!
ERROR 23:32:43,686 - Generisanje koda neuspesno!
INFO  23:32:43,686 - ==============================================================
INFO  23:33:16,311 - Obrada ulaznog fajla test\program.mj
INFO  23:33:16,436 - #2 program
INFO  23:33:16,437 - #8 Program
INFO  23:33:16,437 - #5 const
INFO  23:33:16,438 - #8 int
INFO  23:33:16,438 - #8 c
INFO  23:33:16,439 - #24 =
INFO  23:33:16,439 - #9 10
INFO  23:33:16,439 - #28 ,
INFO  23:33:16,440 - #8 d
INFO  23:33:16,440 - #24 =
INFO  23:33:16,440 - #9 99
INFO  23:33:16,441 - #28 ,
INFO  23:33:16,441 - #8 g
INFO  23:33:16,441 - #24 =
INFO  23:33:16,441 - #9 2
INFO  23:33:16,441 - #27 ;
INFO  23:33:16,441 - #8 int
INFO  23:33:16,443 - #8 e
INFO  23:33:16,443 - #27 ;
INFO  23:33:16,443 - #20 {
INFO  23:33:16,444 - #6 void
INFO  23:33:16,445 - #8 main
INFO  23:33:16,445 - #29 (
INFO  23:33:16,446 - #30 )
INFO  23:33:16,446 - #20 {
INFO  23:33:16,447 - #8 e
INFO  23:33:16,447 - #24 =
INFO  23:33:16,447 - #9 10
INFO  23:33:16,447 - #27 ;
INFO  23:33:16,448 - #31 if
INFO  23:33:16,448 - #29 (
INFO  23:33:16,448 - #8 e
INFO  23:33:16,448 - #38 >
INFO  23:33:16,448 - #9 0
INFO  23:33:16,450 - #14 ||
INFO  23:33:16,451 - #8 e
INFO  23:33:16,451 - #42 <=
INFO  23:33:16,451 - #8 d
INFO  23:33:16,452 - #13 &&
INFO  23:33:16,452 - #8 e
INFO  23:33:16,452 - #38 >
INFO  23:33:16,452 - #8 g
INFO  23:33:16,454 - #30 )
INFO  23:33:16,454 - #20 {
INFO  23:33:16,455 - #3 print
INFO  23:33:16,455 - #29 (
INFO  23:33:16,455 - #8 e
INFO  23:33:16,455 - #30 )
INFO  23:33:16,455 - #27 ;
INFO  23:33:16,455 - #21 }
INFO  23:33:16,456 - #32 else
INFO  23:33:16,457 - #20 {
INFO  23:33:16,458 - #3 print
INFO  23:33:16,458 - #29 (
INFO  23:33:16,458 - #8 d
INFO  23:33:16,458 - #30 )
INFO  23:33:16,458 - #27 ;
INFO  23:33:16,458 - #21 }
INFO  23:33:16,459 - #21 }
INFO  23:33:16,461 - #21 }
INFO  23:33:16,462 - =====================SINTAKSNO_STABLO=========================
INFO  23:33:16,464 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:33:16,464 - ==============================================================
INFO  23:33:16,479 - Pocetak obrade programa Program na liniji 1
INFO  23:33:16,479 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:33:16,480 - Deklarisana konstanta c na liniji 2
INFO  23:33:16,481 - Deklarisana konstanta d na liniji 2
INFO  23:33:16,481 - Deklarisana konstanta g na liniji 2
INFO  23:33:16,481 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:33:16,481 - Deklarisana promenljiva e na liniji 3
INFO  23:33:16,482 - Pocetak obrade metode main na liniji 5
INFO  23:33:16,483 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:33:16,484 - Zavrsetak obrade programa Program na liniji 1
INFO  23:33:16,484 - ======================TABELA_SIMBOLA==========================
INFO  23:33:16,485 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:33:16,487 - ==============================================================
INFO  23:33:16,487 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:33:16,487 - ==============================================================
INFO  23:33:16,488 - ======================GENERISANJE_KODA========================
INFO  23:33:16,493 - Generisanje koda uspesno zavrseno!
INFO  23:33:16,493 - Generisanje izlaznog fajla test\program.obj
INFO  23:33:16,493 - ==============================================================
INFO  23:33:59,845 - Obrada ulaznog fajla test\program.mj
INFO  23:33:59,970 - #2 program
INFO  23:33:59,970 - #8 Program
INFO  23:33:59,970 - #5 const
INFO  23:33:59,971 - #8 int
INFO  23:33:59,971 - #8 c
INFO  23:33:59,972 - #24 =
INFO  23:33:59,972 - #9 10
INFO  23:33:59,972 - #28 ,
INFO  23:33:59,973 - #8 d
INFO  23:33:59,973 - #24 =
INFO  23:33:59,973 - #9 99
INFO  23:33:59,976 - #28 ,
INFO  23:33:59,977 - #8 g
INFO  23:33:59,977 - #24 =
INFO  23:33:59,977 - #9 2
INFO  23:33:59,977 - #27 ;
INFO  23:33:59,977 - #8 int
INFO  23:33:59,979 - #8 e
INFO  23:33:59,979 - #27 ;
INFO  23:33:59,979 - #20 {
INFO  23:33:59,980 - #6 void
INFO  23:33:59,981 - #8 main
INFO  23:33:59,981 - #29 (
INFO  23:33:59,981 - #30 )
INFO  23:33:59,981 - #20 {
INFO  23:33:59,982 - #8 e
INFO  23:33:59,982 - #24 =
INFO  23:33:59,982 - #16 -
INFO  23:33:59,982 - #9 10
INFO  23:33:59,982 - #27 ;
INFO  23:33:59,983 - #31 if
INFO  23:33:59,983 - #29 (
INFO  23:33:59,983 - #8 e
INFO  23:33:59,983 - #38 >
INFO  23:33:59,983 - #9 0
INFO  23:33:59,984 - #14 ||
INFO  23:33:59,985 - #8 e
INFO  23:33:59,985 - #42 <=
INFO  23:33:59,985 - #8 d
INFO  23:33:59,986 - #13 &&
INFO  23:33:59,986 - #8 e
INFO  23:33:59,986 - #38 >
INFO  23:33:59,987 - #8 g
INFO  23:33:59,987 - #30 )
INFO  23:33:59,988 - #20 {
INFO  23:33:59,988 - #3 print
INFO  23:33:59,988 - #29 (
INFO  23:33:59,989 - #8 e
INFO  23:33:59,989 - #30 )
INFO  23:33:59,989 - #27 ;
INFO  23:33:59,989 - #21 }
INFO  23:33:59,989 - #32 else
INFO  23:33:59,990 - #20 {
INFO  23:33:59,990 - #3 print
INFO  23:33:59,990 - #29 (
INFO  23:33:59,991 - #8 d
INFO  23:33:59,991 - #30 )
INFO  23:33:59,991 - #27 ;
INFO  23:33:59,991 - #21 }
INFO  23:33:59,991 - #21 }
INFO  23:33:59,993 - #21 }
INFO  23:33:59,995 - =====================SINTAKSNO_STABLO=========================
INFO  23:33:59,997 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:33:59,998 - ==============================================================
INFO  23:34:00,020 - Pocetak obrade programa Program na liniji 1
INFO  23:34:00,021 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:34:00,022 - Deklarisana konstanta c na liniji 2
INFO  23:34:00,022 - Deklarisana konstanta d na liniji 2
INFO  23:34:00,022 - Deklarisana konstanta g na liniji 2
INFO  23:34:00,022 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:34:00,022 - Deklarisana promenljiva e na liniji 3
INFO  23:34:00,023 - Pocetak obrade metode main na liniji 5
INFO  23:34:00,024 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:34:00,024 - Zavrsetak obrade programa Program na liniji 1
INFO  23:34:00,024 - ======================TABELA_SIMBOLA==========================
INFO  23:34:00,024 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:34:00,024 - ==============================================================
INFO  23:34:00,025 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:34:00,025 - ==============================================================
INFO  23:34:00,025 - ======================GENERISANJE_KODA========================
INFO  23:34:00,030 - Generisanje koda uspesno zavrseno!
INFO  23:34:00,030 - Generisanje izlaznog fajla test\program.obj
INFO  23:34:00,030 - ==============================================================
INFO  23:35:39,084 - Obrada ulaznog fajla test\program.mj
INFO  23:35:39,212 - #2 program
INFO  23:35:39,213 - #8 Program
INFO  23:35:39,213 - #5 const
INFO  23:35:39,214 - #8 int
INFO  23:35:39,214 - #8 c
INFO  23:35:39,214 - #24 =
INFO  23:35:39,214 - #9 10
INFO  23:35:39,215 - #28 ,
INFO  23:35:39,216 - #8 d
INFO  23:35:39,216 - #24 =
INFO  23:35:39,216 - #9 99
INFO  23:35:39,216 - #28 ,
INFO  23:35:39,216 - #8 g
INFO  23:35:39,216 - #24 =
INFO  23:35:39,217 - #9 2
INFO  23:35:39,217 - #27 ;
INFO  23:35:39,217 - #8 int
INFO  23:35:39,218 - #8 e
INFO  23:35:39,219 - #27 ;
INFO  23:35:39,219 - #20 {
INFO  23:35:39,220 - #6 void
INFO  23:35:39,220 - #8 main
INFO  23:35:39,220 - #29 (
INFO  23:35:39,221 - #30 )
INFO  23:35:39,221 - #20 {
INFO  23:35:39,221 - #8 e
INFO  23:35:39,221 - #24 =
INFO  23:35:39,222 - #16 -
INFO  23:35:39,222 - #9 10
INFO  23:35:39,222 - #27 ;
INFO  23:35:39,223 - #31 if
INFO  23:35:39,223 - #29 (
INFO  23:35:39,223 - #8 e
INFO  23:35:39,223 - #38 >
INFO  23:35:39,223 - #9 0
INFO  23:35:39,225 - #14 ||
INFO  23:35:39,225 - #8 e
INFO  23:35:39,226 - #42 <=
INFO  23:35:39,226 - #8 d
INFO  23:35:39,227 - #13 &&
INFO  23:35:39,227 - #8 e
INFO  23:35:39,227 - #38 >
INFO  23:35:39,228 - #8 g
INFO  23:35:39,228 - #30 )
INFO  23:35:39,229 - #20 {
INFO  23:35:39,229 - #3 print
INFO  23:35:39,230 - #29 (
INFO  23:35:39,230 - #8 e
INFO  23:35:39,230 - #30 )
INFO  23:35:39,230 - #27 ;
INFO  23:35:39,231 - #21 }
INFO  23:35:39,231 - #32 else
INFO  23:35:39,233 - #20 {
INFO  23:35:39,233 - #3 print
INFO  23:35:39,233 - #29 (
INFO  23:35:39,233 - #8 d
INFO  23:35:39,233 - #30 )
INFO  23:35:39,233 - #27 ;
INFO  23:35:39,233 - #21 }
INFO  23:35:39,234 - #21 }
INFO  23:35:39,234 - #21 }
INFO  23:35:39,235 - =====================SINTAKSNO_STABLO=========================
INFO  23:35:39,237 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:35:39,238 - ==============================================================
INFO  23:35:39,261 - Pocetak obrade programa Program na liniji 1
INFO  23:35:39,262 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:35:39,263 - Deklarisana konstanta c na liniji 2
INFO  23:35:39,263 - Deklarisana konstanta d na liniji 2
INFO  23:35:39,263 - Deklarisana konstanta g na liniji 2
INFO  23:35:39,264 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:35:39,264 - Deklarisana promenljiva e na liniji 3
INFO  23:35:39,265 - Pocetak obrade metode main na liniji 5
INFO  23:35:39,266 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:35:39,266 - Zavrsetak obrade programa Program na liniji 1
INFO  23:35:39,266 - ======================TABELA_SIMBOLA==========================
INFO  23:35:39,269 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:35:39,269 - ==============================================================
INFO  23:35:39,270 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:35:39,270 - ==============================================================
INFO  23:35:39,270 - ======================GENERISANJE_KODA========================
INFO  23:35:39,277 - Generisanje koda uspesno zavrseno!
INFO  23:35:39,277 - Generisanje izlaznog fajla test\program.obj
INFO  23:35:39,277 - ==============================================================
INFO  00:09:36,480 - Obrada ulaznog fajla test\program.mj
INFO  00:09:36,608 - #2 program
INFO  00:09:36,609 - #8 Program
INFO  00:09:36,609 - #5 const
INFO  00:09:36,611 - #8 int
INFO  00:09:36,611 - #8 c
INFO  00:09:36,612 - #24 =
INFO  00:09:36,612 - #9 10
INFO  00:09:36,612 - #28 ,
INFO  00:09:36,614 - #8 d
INFO  00:09:36,614 - #24 =
INFO  00:09:36,614 - #9 99
INFO  00:09:36,614 - #28 ,
INFO  00:09:36,615 - #8 g
INFO  00:09:36,615 - #24 =
INFO  00:09:36,615 - #9 2
INFO  00:09:36,615 - #27 ;
INFO  00:09:36,615 - #8 int
INFO  00:09:36,617 - #8 e
INFO  00:09:36,617 - #27 ;
INFO  00:09:36,617 - #20 {
INFO  00:09:36,618 - #6 void
INFO  00:09:36,619 - #8 main
INFO  00:09:36,619 - #29 (
INFO  00:09:36,620 - #30 )
INFO  00:09:36,620 - #20 {
INFO  00:09:36,621 - #8 e
INFO  00:09:36,621 - #24 =
INFO  00:09:36,621 - #16 -
INFO  00:09:36,622 - #9 10
INFO  00:09:36,622 - #27 ;
INFO  00:09:36,622 - #31 if
INFO  00:09:36,623 - #29 (
INFO  00:09:36,623 - #8 e
INFO  00:09:36,623 - #38 >
INFO  00:09:36,623 - #9 0
INFO  00:09:36,625 - #14 ||
INFO  00:09:36,625 - #8 e
INFO  00:09:36,626 - #42 <=
INFO  00:09:36,626 - #8 d
INFO  00:09:36,627 - #13 &&
INFO  00:09:36,627 - #8 e
INFO  00:09:36,628 - #38 >
INFO  00:09:36,628 - #8 g
INFO  00:09:36,628 - #30 )
INFO  00:09:36,630 - #20 {
INFO  00:09:36,630 - #3 print
INFO  00:09:36,630 - #29 (
INFO  00:09:36,631 - #8 e
INFO  00:09:36,632 - #30 )
INFO  00:09:36,632 - #27 ;
INFO  00:09:36,632 - #21 }
INFO  00:09:36,633 - #32 else
INFO  00:09:36,634 - #20 {
INFO  00:09:36,634 - #3 print
INFO  00:09:36,635 - #29 (
INFO  00:09:36,635 - #8 d
INFO  00:09:36,635 - #30 )
INFO  00:09:36,635 - #27 ;
INFO  00:09:36,635 - #21 }
INFO  00:09:36,636 - #21 }
INFO  00:09:36,636 - #21 }
INFO  00:09:36,637 - =====================SINTAKSNO_STABLO=========================
INFO  00:09:36,639 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:09:36,640 - ==============================================================
INFO  00:09:36,657 - Pocetak obrade programa Program na liniji 1
INFO  00:09:36,658 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:09:36,659 - Deklarisana konstanta c na liniji 2
INFO  00:09:36,659 - Deklarisana konstanta d na liniji 2
INFO  00:09:36,660 - Deklarisana konstanta g na liniji 2
INFO  00:09:36,660 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:09:36,660 - Deklarisana promenljiva e na liniji 3
INFO  00:09:36,661 - Pocetak obrade metode main na liniji 5
INFO  00:09:36,661 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:09:36,661 - Zavrsetak obrade programa Program na liniji 1
INFO  00:09:36,662 - ======================TABELA_SIMBOLA==========================
INFO  00:09:36,664 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:09:36,664 - ==============================================================
INFO  00:09:36,664 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:09:36,665 - ==============================================================
INFO  00:09:36,665 - ======================GENERISANJE_KODA========================
INFO  00:09:36,671 - Generisanje koda uspesno zavrseno!
INFO  00:09:36,671 - Generisanje izlaznog fajla test\program.obj
INFO  00:09:36,671 - ==============================================================
INFO  00:09:55,594 - Obrada ulaznog fajla test\program.mj
INFO  00:09:55,694 - #2 program
INFO  00:09:55,694 - #8 Program
INFO  00:09:55,694 - #5 const
INFO  00:09:55,697 - #8 int
INFO  00:09:55,697 - #8 c
INFO  00:09:55,699 - #24 =
INFO  00:09:55,699 - #9 10
INFO  00:09:55,699 - #28 ,
INFO  00:09:55,700 - #8 d
INFO  00:09:55,701 - #24 =
INFO  00:09:55,701 - #9 99
INFO  00:09:55,701 - #28 ,
INFO  00:09:55,701 - #8 g
INFO  00:09:55,701 - #24 =
INFO  00:09:55,701 - #9 2
INFO  00:09:55,701 - #27 ;
INFO  00:09:55,702 - #8 int
INFO  00:09:55,703 - #8 e
INFO  00:09:55,704 - #27 ;
INFO  00:09:55,704 - #20 {
INFO  00:09:55,708 - #6 void
INFO  00:09:55,708 - #8 main
INFO  00:09:55,708 - #29 (
INFO  00:09:55,709 - #30 )
INFO  00:09:55,709 - #20 {
INFO  00:09:55,709 - #8 e
INFO  00:09:55,709 - #24 =
INFO  00:09:55,710 - #16 -
INFO  00:09:55,710 - #9 10
INFO  00:09:55,710 - #27 ;
INFO  00:09:55,710 - #31 if
INFO  00:09:55,711 - #29 (
INFO  00:09:55,711 - #8 e
INFO  00:09:55,711 - #38 >
INFO  00:09:55,711 - #9 0
INFO  00:09:55,713 - #14 ||
INFO  00:09:55,713 - #8 e
INFO  00:09:55,713 - #42 <=
INFO  00:09:55,714 - #8 d
INFO  00:09:55,714 - #13 &&
INFO  00:09:55,714 - #8 e
INFO  00:09:55,715 - #38 >
INFO  00:09:55,716 - #8 g
INFO  00:09:55,716 - #30 )
INFO  00:09:55,717 - #20 {
INFO  00:09:55,717 - #3 print
INFO  00:09:55,718 - #29 (
INFO  00:09:55,718 - #8 e
INFO  00:09:55,718 - #30 )
INFO  00:09:55,718 - #27 ;
INFO  00:09:55,720 - #21 }
INFO  00:09:55,720 - #32 else
INFO  00:09:55,722 - #20 {
INFO  00:09:55,725 - #3 print
INFO  00:09:55,725 - #29 (
INFO  00:09:55,725 - #8 d
INFO  00:09:55,726 - #30 )
INFO  00:09:55,726 - #27 ;
INFO  00:09:55,726 - #21 }
INFO  00:09:55,726 - #21 }
INFO  00:09:55,726 - #21 }
INFO  00:09:55,727 - =====================SINTAKSNO_STABLO=========================
INFO  00:09:55,731 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:09:55,737 - ==============================================================
INFO  00:09:55,748 - Pocetak obrade programa Program na liniji 1
INFO  00:09:55,748 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:09:55,749 - Deklarisana konstanta c na liniji 2
INFO  00:09:55,749 - Deklarisana konstanta d na liniji 2
INFO  00:09:55,749 - Deklarisana konstanta g na liniji 2
INFO  00:09:55,749 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:09:55,750 - Deklarisana promenljiva e na liniji 3
INFO  00:09:55,750 - Pocetak obrade metode main na liniji 5
INFO  00:09:55,751 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:09:55,751 - Zavrsetak obrade programa Program na liniji 1
INFO  00:09:55,751 - ======================TABELA_SIMBOLA==========================
INFO  00:09:55,753 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:09:55,754 - ==============================================================
INFO  00:09:55,754 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:09:55,754 - ==============================================================
INFO  00:09:55,754 - ======================GENERISANJE_KODA========================
INFO  00:09:55,760 - Generisanje koda uspesno zavrseno!
INFO  00:09:55,760 - Generisanje izlaznog fajla test\program.obj
INFO  00:09:55,760 - ==============================================================
INFO  00:12:03,599 - Obrada ulaznog fajla test\program.mj
INFO  00:12:03,704 - #2 program
INFO  00:12:03,704 - #8 Program
INFO  00:12:03,704 - #5 const
INFO  00:12:03,706 - #8 int
INFO  00:12:03,706 - #8 c
INFO  00:12:03,707 - #24 =
INFO  00:12:03,707 - #9 10
INFO  00:12:03,707 - #28 ,
INFO  00:12:03,709 - #8 d
INFO  00:12:03,709 - #24 =
INFO  00:12:03,709 - #9 99
INFO  00:12:03,709 - #28 ,
INFO  00:12:03,710 - #8 g
INFO  00:12:03,710 - #24 =
INFO  00:12:03,710 - #9 2
INFO  00:12:03,710 - #27 ;
INFO  00:12:03,710 - #8 int
INFO  00:12:03,712 - #8 e
INFO  00:12:03,712 - #27 ;
INFO  00:12:03,712 - #20 {
INFO  00:12:03,714 - #6 void
INFO  00:12:03,715 - #8 main
INFO  00:12:03,715 - #29 (
INFO  00:12:03,716 - #30 )
INFO  00:12:03,716 - #20 {
INFO  00:12:03,716 - #8 e
INFO  00:12:03,716 - #24 =
INFO  00:12:03,717 - #16 -
INFO  00:12:03,717 - #9 10
INFO  00:12:03,717 - #27 ;
INFO  00:12:03,718 - #31 if
INFO  00:12:03,719 - #29 (
INFO  00:12:03,719 - #8 e
INFO  00:12:03,719 - #38 >
INFO  00:12:03,720 - #9 0
INFO  00:12:03,723 - #14 ||
INFO  00:12:03,723 - #8 e
INFO  00:12:03,724 - #42 <=
INFO  00:12:03,724 - #8 d
INFO  00:12:03,725 - #13 &&
INFO  00:12:03,725 - #8 e
INFO  00:12:03,725 - #38 >
INFO  00:12:03,727 - #8 g
INFO  00:12:03,727 - #30 )
INFO  00:12:03,728 - #20 {
INFO  00:12:03,728 - #3 print
INFO  00:12:03,729 - #29 (
INFO  00:12:03,729 - #8 e
INFO  00:12:03,729 - #30 )
INFO  00:12:03,729 - #27 ;
INFO  00:12:03,729 - #21 }
INFO  00:12:03,730 - #32 else
INFO  00:12:03,731 - #20 {
INFO  00:12:03,731 - #3 print
INFO  00:12:03,731 - #29 (
INFO  00:12:03,731 - #8 d
INFO  00:12:03,731 - #30 )
INFO  00:12:03,732 - #27 ;
INFO  00:12:03,732 - #21 }
INFO  00:12:03,732 - #21 }
INFO  00:12:03,732 - #21 }
INFO  00:12:03,733 - =====================SINTAKSNO_STABLO=========================
INFO  00:12:03,735 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_neg_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_neg_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:12:03,738 - ==============================================================
INFO  00:12:03,754 - Pocetak obrade programa Program na liniji 1
INFO  00:12:03,755 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:12:03,755 - Deklarisana konstanta c na liniji 2
INFO  00:12:03,756 - Deklarisana konstanta d na liniji 2
INFO  00:12:03,756 - Deklarisana konstanta g na liniji 2
INFO  00:12:03,756 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:12:03,756 - Deklarisana promenljiva e na liniji 3
INFO  00:12:03,757 - Pocetak obrade metode main na liniji 5
INFO  00:12:03,757 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:12:03,757 - Zavrsetak obrade programa Program na liniji 1
INFO  00:12:03,757 - ======================TABELA_SIMBOLA==========================
INFO  00:12:03,760 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:12:03,760 - ==============================================================
INFO  00:12:03,760 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:12:03,760 - ==============================================================
INFO  00:12:03,760 - ======================GENERISANJE_KODA========================
INFO  00:12:03,765 - Generisanje koda uspesno zavrseno!
INFO  00:12:03,765 - Generisanje izlaznog fajla test\program.obj
INFO  00:12:03,766 - ==============================================================
INFO  00:12:40,132 - Obrada ulaznog fajla test\program.mj
INFO  00:12:40,238 - #2 program
INFO  00:12:40,239 - #8 Program
INFO  00:12:40,239 - #5 const
INFO  00:12:40,241 - #8 int
INFO  00:12:40,241 - #8 c
INFO  00:12:40,242 - #24 =
INFO  00:12:40,242 - #9 10
INFO  00:12:40,242 - #28 ,
INFO  00:12:40,243 - #8 d
INFO  00:12:40,243 - #24 =
INFO  00:12:40,243 - #9 99
INFO  00:12:40,243 - #28 ,
INFO  00:12:40,244 - #8 g
INFO  00:12:40,244 - #24 =
INFO  00:12:40,244 - #9 2
INFO  00:12:40,244 - #27 ;
INFO  00:12:40,244 - #8 int
INFO  00:12:40,245 - #8 e
INFO  00:12:40,246 - #27 ;
INFO  00:12:40,246 - #20 {
INFO  00:12:40,247 - #6 void
INFO  00:12:40,247 - #8 main
INFO  00:12:40,247 - #29 (
INFO  00:12:40,248 - #30 )
INFO  00:12:40,248 - #20 {
INFO  00:12:40,249 - #8 e
INFO  00:12:40,249 - #24 =
INFO  00:12:40,249 - #9 3
INFO  00:12:40,249 - #27 ;
INFO  00:12:40,250 - #31 if
INFO  00:12:40,250 - #29 (
INFO  00:12:40,250 - #8 e
INFO  00:12:40,250 - #38 >
INFO  00:12:40,250 - #9 0
INFO  00:12:40,252 - #14 ||
INFO  00:12:40,252 - #8 e
INFO  00:12:40,252 - #42 <=
INFO  00:12:40,252 - #8 d
INFO  00:12:40,253 - #13 &&
INFO  00:12:40,253 - #8 e
INFO  00:12:40,254 - #38 >
INFO  00:12:40,254 - #8 g
INFO  00:12:40,254 - #30 )
INFO  00:12:40,254 - #20 {
INFO  00:12:40,254 - #3 print
INFO  00:12:40,254 - #29 (
INFO  00:12:40,254 - #8 e
INFO  00:12:40,255 - #30 )
INFO  00:12:40,255 - #27 ;
INFO  00:12:40,255 - #21 }
INFO  00:12:40,255 - #32 else
INFO  00:12:40,256 - #20 {
INFO  00:12:40,256 - #3 print
INFO  00:12:40,260 - #29 (
INFO  00:12:40,260 - #8 d
INFO  00:12:40,260 - #30 )
INFO  00:12:40,260 - #27 ;
INFO  00:12:40,260 - #21 }
INFO  00:12:40,261 - #21 }
INFO  00:12:40,261 - #21 }
INFO  00:12:40,263 - =====================SINTAKSNO_STABLO=========================
INFO  00:12:40,265 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:12:40,267 - ==============================================================
INFO  00:12:40,283 - Pocetak obrade programa Program na liniji 1
INFO  00:12:40,283 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:12:40,284 - Deklarisana konstanta c na liniji 2
INFO  00:12:40,284 - Deklarisana konstanta d na liniji 2
INFO  00:12:40,284 - Deklarisana konstanta g na liniji 2
INFO  00:12:40,284 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:12:40,284 - Deklarisana promenljiva e na liniji 3
INFO  00:12:40,285 - Pocetak obrade metode main na liniji 5
INFO  00:12:40,286 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:12:40,286 - Zavrsetak obrade programa Program na liniji 1
INFO  00:12:40,286 - ======================TABELA_SIMBOLA==========================
INFO  00:12:40,287 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:12:40,290 - ==============================================================
INFO  00:12:40,290 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:12:40,290 - ==============================================================
INFO  00:12:40,290 - ======================GENERISANJE_KODA========================
INFO  00:12:40,295 - Generisanje koda uspesno zavrseno!
INFO  00:12:40,296 - Generisanje izlaznog fajla test\program.obj
INFO  00:12:40,296 - ==============================================================
INFO  00:20:44,275 - Obrada ulaznog fajla test\program.mj
INFO  00:20:44,382 - #2 program
INFO  00:20:44,382 - #8 Program
INFO  00:20:44,382 - #5 const
INFO  00:20:44,384 - #8 int
INFO  00:20:44,384 - #8 c
INFO  00:20:44,385 - #24 =
INFO  00:20:44,385 - #9 10
INFO  00:20:44,385 - #28 ,
INFO  00:20:44,386 - #8 d
INFO  00:20:44,387 - #24 =
INFO  00:20:44,387 - #9 99
INFO  00:20:44,387 - #28 ,
INFO  00:20:44,387 - #8 g
INFO  00:20:44,387 - #24 =
INFO  00:20:44,388 - #9 2
INFO  00:20:44,388 - #27 ;
INFO  00:20:44,388 - #8 int
INFO  00:20:44,392 - #8 e
INFO  00:20:44,392 - #27 ;
INFO  00:20:44,392 - #20 {
INFO  00:20:44,395 - #6 void
INFO  00:20:44,395 - #8 main
INFO  00:20:44,395 - #29 (
INFO  00:20:44,396 - #30 )
INFO  00:20:44,396 - #20 {
INFO  00:20:44,396 - #8 e
INFO  00:20:44,396 - #24 =
INFO  00:20:44,396 - #9 3
INFO  00:20:44,396 - #27 ;
INFO  00:20:44,397 - #31 if
INFO  00:20:44,397 - #29 (
INFO  00:20:44,397 - #8 e
INFO  00:20:44,397 - #38 >
INFO  00:20:44,398 - #9 0
INFO  00:20:44,399 - #14 ||
INFO  00:20:44,400 - #8 e
INFO  00:20:44,400 - #42 <=
INFO  00:20:44,400 - #8 d
INFO  00:20:44,401 - #13 &&
INFO  00:20:44,401 - #8 e
INFO  00:20:44,401 - #38 >
INFO  00:20:44,401 - #8 g
INFO  00:20:44,401 - #30 )
INFO  00:20:44,402 - #20 {
INFO  00:20:44,402 - #3 print
INFO  00:20:44,402 - #29 (
INFO  00:20:44,402 - #8 e
INFO  00:20:44,402 - #30 )
INFO  00:20:44,402 - #27 ;
INFO  00:20:44,402 - #21 }
INFO  00:20:44,402 - #32 else
INFO  00:20:44,404 - #20 {
INFO  00:20:44,404 - #3 print
INFO  00:20:44,404 - #29 (
INFO  00:20:44,404 - #8 d
INFO  00:20:44,405 - #30 )
INFO  00:20:44,405 - #27 ;
INFO  00:20:44,405 - #21 }
INFO  00:20:44,405 - #21 }
INFO  00:20:44,405 - #21 }
INFO  00:20:44,409 - =====================SINTAKSNO_STABLO=========================
INFO  00:20:44,410 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     3
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:20:44,411 - ==============================================================
INFO  00:20:44,424 - Pocetak obrade programa Program na liniji 1
INFO  00:20:44,425 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:20:44,425 - Deklarisana konstanta c na liniji 2
INFO  00:20:44,425 - Deklarisana konstanta d na liniji 2
INFO  00:20:44,426 - Deklarisana konstanta g na liniji 2
INFO  00:20:44,426 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:20:44,426 - Deklarisana promenljiva e na liniji 3
INFO  00:20:44,426 - Pocetak obrade metode main na liniji 5
INFO  00:20:44,427 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:20:44,427 - Zavrsetak obrade programa Program na liniji 1
INFO  00:20:44,427 - ======================TABELA_SIMBOLA==========================
INFO  00:20:44,427 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:20:44,429 - ==============================================================
INFO  00:20:44,429 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:20:44,429 - ==============================================================
INFO  00:20:44,429 - ======================GENERISANJE_KODA========================
INFO  00:20:44,435 - Generisanje koda uspesno zavrseno!
INFO  00:20:44,436 - Generisanje izlaznog fajla test\program.obj
INFO  00:20:44,436 - ==============================================================
INFO  00:21:37,759 - Obrada ulaznog fajla test\program.mj
INFO  00:21:37,875 - #2 program
INFO  00:21:37,875 - #8 Program
INFO  00:21:37,875 - #5 const
INFO  00:21:37,877 - #8 int
INFO  00:21:37,877 - #8 c
INFO  00:21:37,878 - #24 =
INFO  00:21:37,878 - #9 10
INFO  00:21:37,878 - #28 ,
INFO  00:21:37,879 - #8 d
INFO  00:21:37,880 - #24 =
INFO  00:21:37,880 - #9 99
INFO  00:21:37,880 - #28 ,
INFO  00:21:37,880 - #8 g
INFO  00:21:37,881 - #24 =
INFO  00:21:37,881 - #9 2
INFO  00:21:37,881 - #27 ;
INFO  00:21:37,881 - #8 int
INFO  00:21:37,883 - #8 e
INFO  00:21:37,883 - #27 ;
INFO  00:21:37,884 - #20 {
INFO  00:21:37,885 - #6 void
INFO  00:21:37,885 - #8 main
INFO  00:21:37,885 - #29 (
INFO  00:21:37,887 - #30 )
INFO  00:21:37,887 - #20 {
INFO  00:21:37,887 - #8 e
INFO  00:21:37,887 - #24 =
INFO  00:21:37,888 - #9 1
INFO  00:21:37,888 - #27 ;
INFO  00:21:37,888 - #31 if
INFO  00:21:37,889 - #29 (
INFO  00:21:37,889 - #8 e
INFO  00:21:37,889 - #38 >
INFO  00:21:37,889 - #9 0
INFO  00:21:37,890 - #14 ||
INFO  00:21:37,891 - #8 e
INFO  00:21:37,891 - #42 <=
INFO  00:21:37,891 - #8 d
INFO  00:21:37,892 - #13 &&
INFO  00:21:37,892 - #8 e
INFO  00:21:37,892 - #38 >
INFO  00:21:37,892 - #8 g
INFO  00:21:37,894 - #30 )
INFO  00:21:37,895 - #20 {
INFO  00:21:37,895 - #3 print
INFO  00:21:37,895 - #29 (
INFO  00:21:37,895 - #8 e
INFO  00:21:37,895 - #30 )
INFO  00:21:37,895 - #27 ;
INFO  00:21:37,896 - #21 }
INFO  00:21:37,897 - #32 else
INFO  00:21:37,898 - #20 {
INFO  00:21:37,898 - #3 print
INFO  00:21:37,898 - #29 (
INFO  00:21:37,898 - #8 d
INFO  00:21:37,898 - #30 )
INFO  00:21:37,899 - #27 ;
INFO  00:21:37,899 - #21 }
INFO  00:21:37,899 - #21 }
INFO  00:21:37,899 - #21 }
INFO  00:21:37,900 - =====================SINTAKSNO_STABLO=========================
INFO  00:21:37,902 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:21:37,906 - ==============================================================
INFO  00:21:37,926 - Pocetak obrade programa Program na liniji 1
INFO  00:21:37,926 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:21:37,928 - Deklarisana konstanta c na liniji 2
INFO  00:21:37,928 - Deklarisana konstanta d na liniji 2
INFO  00:21:37,928 - Deklarisana konstanta g na liniji 2
INFO  00:21:37,928 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:21:37,928 - Deklarisana promenljiva e na liniji 3
INFO  00:21:37,929 - Pocetak obrade metode main na liniji 5
INFO  00:21:37,929 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:21:37,930 - Zavrsetak obrade programa Program na liniji 1
INFO  00:21:37,930 - ======================TABELA_SIMBOLA==========================
INFO  00:21:37,930 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:21:37,932 - ==============================================================
INFO  00:21:37,933 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:21:37,933 - ==============================================================
INFO  00:21:37,933 - ======================GENERISANJE_KODA========================
INFO  00:21:37,939 - Generisanje koda uspesno zavrseno!
INFO  00:21:37,940 - Generisanje izlaznog fajla test\program.obj
INFO  00:21:37,940 - ==============================================================
INFO  00:26:29,775 - Obrada ulaznog fajla test\program.mj
INFO  00:26:29,861 - #2 program
INFO  00:26:29,861 - #8 Program
INFO  00:26:29,861 - #5 const
INFO  00:26:29,862 - #8 int
INFO  00:26:29,862 - #8 c
INFO  00:26:29,863 - #24 =
INFO  00:26:29,863 - #9 10
INFO  00:26:29,863 - #28 ,
INFO  00:26:29,864 - #8 d
INFO  00:26:29,864 - #24 =
INFO  00:26:29,864 - #9 99
INFO  00:26:29,864 - #28 ,
INFO  00:26:29,865 - #8 g
INFO  00:26:29,865 - #24 =
INFO  00:26:29,865 - #9 2
INFO  00:26:29,865 - #27 ;
INFO  00:26:29,865 - #8 int
INFO  00:26:29,866 - #8 e
INFO  00:26:29,866 - #27 ;
INFO  00:26:29,866 - #20 {
INFO  00:26:29,868 - #6 void
INFO  00:26:29,868 - #8 main
INFO  00:26:29,868 - #29 (
INFO  00:26:29,869 - #30 )
INFO  00:26:29,869 - #20 {
INFO  00:26:29,869 - #8 e
INFO  00:26:29,869 - #24 =
INFO  00:26:29,869 - #9 1
INFO  00:26:29,869 - #27 ;
INFO  00:26:29,870 - #31 if
INFO  00:26:29,870 - #29 (
INFO  00:26:29,871 - #11 true
INFO  00:26:29,871 - #30 )
INFO  00:26:29,872 - #20 {
INFO  00:26:29,872 - #3 print
INFO  00:26:29,872 - #29 (
INFO  00:26:29,872 - #8 e
INFO  00:26:29,872 - #30 )
INFO  00:26:29,872 - #27 ;
INFO  00:26:29,872 - #21 }
INFO  00:26:29,873 - #32 else
INFO  00:26:29,874 - #20 {
INFO  00:26:29,875 - #3 print
INFO  00:26:29,875 - #29 (
INFO  00:26:29,875 - #8 d
INFO  00:26:29,875 - #30 )
INFO  00:26:29,875 - #27 ;
INFO  00:26:29,876 - #21 }
INFO  00:26:29,876 - #21 }
INFO  00:26:29,883 - #21 }
INFO  00:26:29,885 - =====================SINTAKSNO_STABLO=========================
INFO  00:26:29,886 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:26:29,887 - ==============================================================
INFO  00:26:29,902 - Pocetak obrade programa Program na liniji 1
INFO  00:26:29,902 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:26:29,903 - Deklarisana konstanta c na liniji 2
INFO  00:26:29,903 - Deklarisana konstanta d na liniji 2
INFO  00:26:29,903 - Deklarisana konstanta g na liniji 2
INFO  00:26:29,904 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:26:29,904 - Deklarisana promenljiva e na liniji 3
INFO  00:26:29,904 - Pocetak obrade metode main na liniji 5
INFO  00:26:29,905 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:26:29,905 - Zavrsetak obrade programa Program na liniji 1
INFO  00:26:29,905 - ======================TABELA_SIMBOLA==========================
INFO  00:26:29,906 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:26:29,906 - ==============================================================
INFO  00:26:29,906 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:26:29,906 - ==============================================================
INFO  00:26:29,906 - ======================GENERISANJE_KODA========================
INFO  00:26:29,912 - Generisanje koda uspesno zavrseno!
INFO  00:26:29,912 - Generisanje izlaznog fajla test\program.obj
INFO  00:26:29,912 - ==============================================================
INFO  00:26:44,365 - Obrada ulaznog fajla test\program.mj
INFO  00:26:44,494 - #2 program
INFO  00:26:44,494 - #8 Program
INFO  00:26:44,494 - #5 const
INFO  00:26:44,495 - #8 int
INFO  00:26:44,495 - #8 c
INFO  00:26:44,496 - #24 =
INFO  00:26:44,497 - #9 10
INFO  00:26:44,497 - #28 ,
INFO  00:26:44,498 - #8 d
INFO  00:26:44,499 - #24 =
INFO  00:26:44,499 - #9 99
INFO  00:26:44,499 - #28 ,
INFO  00:26:44,499 - #8 g
INFO  00:26:44,500 - #24 =
INFO  00:26:44,500 - #9 2
INFO  00:26:44,500 - #27 ;
INFO  00:26:44,500 - #8 int
INFO  00:26:44,502 - #8 e
INFO  00:26:44,502 - #27 ;
INFO  00:26:44,503 - #20 {
INFO  00:26:44,505 - #6 void
INFO  00:26:44,505 - #8 main
INFO  00:26:44,505 - #29 (
INFO  00:26:44,506 - #30 )
INFO  00:26:44,506 - #20 {
INFO  00:26:44,507 - #8 e
INFO  00:26:44,507 - #24 =
INFO  00:26:44,507 - #9 1
INFO  00:26:44,507 - #27 ;
INFO  00:26:44,508 - #31 if
INFO  00:26:44,508 - #29 (
INFO  00:26:44,509 - #12 false
INFO  00:26:44,509 - #30 )
INFO  00:26:44,510 - #20 {
INFO  00:26:44,510 - #3 print
INFO  00:26:44,510 - #29 (
INFO  00:26:44,510 - #8 e
INFO  00:26:44,510 - #30 )
INFO  00:26:44,510 - #27 ;
INFO  00:26:44,510 - #21 }
INFO  00:26:44,511 - #32 else
INFO  00:26:44,512 - #20 {
INFO  00:26:44,513 - #3 print
INFO  00:26:44,514 - #29 (
INFO  00:26:44,514 - #8 d
INFO  00:26:44,514 - #30 )
INFO  00:26:44,514 - #27 ;
INFO  00:26:44,515 - #21 }
INFO  00:26:44,515 - #21 }
INFO  00:26:44,516 - #21 }
INFO  00:26:44,517 - =====================SINTAKSNO_STABLO=========================
INFO  00:26:44,521 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:26:44,522 - ==============================================================
INFO  00:26:44,542 - Pocetak obrade programa Program na liniji 1
INFO  00:26:44,542 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:26:44,543 - Deklarisana konstanta c na liniji 2
INFO  00:26:44,543 - Deklarisana konstanta d na liniji 2
INFO  00:26:44,543 - Deklarisana konstanta g na liniji 2
INFO  00:26:44,543 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:26:44,544 - Deklarisana promenljiva e na liniji 3
INFO  00:26:44,545 - Pocetak obrade metode main na liniji 5
INFO  00:26:44,546 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:26:44,546 - Zavrsetak obrade programa Program na liniji 1
INFO  00:26:44,548 - ======================TABELA_SIMBOLA==========================
INFO  00:26:44,548 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:26:44,549 - ==============================================================
INFO  00:26:44,549 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:26:44,549 - ==============================================================
INFO  00:26:44,549 - ======================GENERISANJE_KODA========================
INFO  00:26:44,557 - Generisanje koda uspesno zavrseno!
INFO  00:26:44,557 - Generisanje izlaznog fajla test\program.obj
INFO  00:26:44,557 - ==============================================================
INFO  00:27:01,615 - Obrada ulaznog fajla test\program.mj
INFO  00:27:01,747 - #2 program
INFO  00:27:01,747 - #8 Program
INFO  00:27:01,747 - #5 const
INFO  00:27:01,748 - #8 int
INFO  00:27:01,748 - #8 c
INFO  00:27:01,749 - #24 =
INFO  00:27:01,749 - #9 10
INFO  00:27:01,749 - #28 ,
INFO  00:27:01,751 - #8 d
INFO  00:27:01,751 - #24 =
INFO  00:27:01,751 - #9 99
INFO  00:27:01,751 - #28 ,
INFO  00:27:01,751 - #8 g
INFO  00:27:01,751 - #24 =
INFO  00:27:01,751 - #9 2
INFO  00:27:01,752 - #27 ;
INFO  00:27:01,752 - #8 int
INFO  00:27:01,753 - #8 e
INFO  00:27:01,753 - #27 ;
INFO  00:27:01,754 - #20 {
INFO  00:27:01,755 - #6 void
INFO  00:27:01,755 - #8 main
INFO  00:27:01,755 - #29 (
INFO  00:27:01,756 - #30 )
INFO  00:27:01,756 - #20 {
INFO  00:27:01,756 - #8 e
INFO  00:27:01,757 - #24 =
INFO  00:27:01,757 - #9 1
INFO  00:27:01,757 - #27 ;
INFO  00:27:01,758 - #31 if
INFO  00:27:01,758 - #29 (
INFO  00:27:01,758 - #8 e
INFO  00:27:01,758 - #38 >
INFO  00:27:01,758 - #9 0
INFO  00:27:01,760 - #14 ||
INFO  00:27:01,760 - #8 e
INFO  00:27:01,761 - #42 <=
INFO  00:27:01,761 - #8 d
INFO  00:27:01,761 - #13 &&
INFO  00:27:01,762 - #8 e
INFO  00:27:01,762 - #38 >
INFO  00:27:01,762 - #8 g
INFO  00:27:01,762 - #30 )
INFO  00:27:01,762 - #20 {
INFO  00:27:01,762 - #3 print
INFO  00:27:01,762 - #29 (
INFO  00:27:01,762 - #8 e
INFO  00:27:01,763 - #30 )
INFO  00:27:01,763 - #27 ;
INFO  00:27:01,763 - #21 }
INFO  00:27:01,763 - #32 else
INFO  00:27:01,764 - #20 {
INFO  00:27:01,764 - #3 print
INFO  00:27:01,764 - #29 (
INFO  00:27:01,764 - #8 d
INFO  00:27:01,765 - #30 )
INFO  00:27:01,765 - #27 ;
INFO  00:27:01,765 - #21 }
INFO  00:27:01,765 - #21 }
INFO  00:27:01,765 - #21 }
INFO  00:27:01,768 - =====================SINTAKSNO_STABLO=========================
INFO  00:27:01,772 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           g
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:27:01,772 - ==============================================================
INFO  00:27:01,787 - Pocetak obrade programa Program na liniji 1
INFO  00:27:01,787 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:27:01,788 - Deklarisana konstanta c na liniji 2
INFO  00:27:01,788 - Deklarisana konstanta d na liniji 2
INFO  00:27:01,788 - Deklarisana konstanta g na liniji 2
INFO  00:27:01,788 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:27:01,788 - Deklarisana promenljiva e na liniji 3
INFO  00:27:01,789 - Pocetak obrade metode main na liniji 5
INFO  00:27:01,790 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:27:01,790 - Zavrsetak obrade programa Program na liniji 1
INFO  00:27:01,790 - ======================TABELA_SIMBOLA==========================
INFO  00:27:01,790 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:27:01,792 - ==============================================================
INFO  00:27:01,792 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:27:01,792 - ==============================================================
INFO  00:27:01,793 - ======================GENERISANJE_KODA========================
INFO  00:27:01,798 - Generisanje koda uspesno zavrseno!
INFO  00:27:01,798 - Generisanje izlaznog fajla test\program.obj
INFO  00:27:01,798 - ==============================================================
INFO  00:30:51,025 - Obrada ulaznog fajla test\program.mj
INFO  00:30:51,156 - #2 program
INFO  00:30:51,157 - #8 Program
INFO  00:30:51,157 - #5 const
INFO  00:30:51,158 - #8 int
INFO  00:30:51,159 - #8 c
INFO  00:30:51,159 - #24 =
INFO  00:30:51,160 - #9 10
INFO  00:30:51,160 - #28 ,
INFO  00:30:51,161 - #8 d
INFO  00:30:51,162 - #24 =
INFO  00:30:51,162 - #9 99
INFO  00:30:51,162 - #28 ,
INFO  00:30:51,162 - #8 g
INFO  00:30:51,162 - #24 =
INFO  00:30:51,162 - #9 2
INFO  00:30:51,163 - #27 ;
INFO  00:30:51,163 - #8 int
INFO  00:30:51,164 - #8 e
INFO  00:30:51,164 - #27 ;
INFO  00:30:51,164 - #20 {
INFO  00:30:51,165 - #6 void
INFO  00:30:51,165 - #8 main
INFO  00:30:51,165 - #29 (
INFO  00:30:51,166 - #30 )
INFO  00:30:51,166 - #20 {
INFO  00:30:51,166 - #8 e
INFO  00:30:51,167 - #24 =
INFO  00:30:51,167 - #9 1
INFO  00:30:51,167 - #27 ;
INFO  00:30:51,168 - #31 if
INFO  00:30:51,168 - #29 (
INFO  00:30:51,168 - #8 e
INFO  00:30:51,168 - #38 >
INFO  00:30:51,169 - #9 0
INFO  00:30:51,170 - #14 ||
INFO  00:30:51,171 - #8 e
INFO  00:30:51,171 - #42 <=
INFO  00:30:51,171 - #8 d
INFO  00:30:51,172 - #13 &&
INFO  00:30:51,172 - #8 e
INFO  00:30:51,172 - #38 >
INFO  00:30:51,173 - #8 g
INFO  00:30:51,173 - #30 )
INFO  00:30:51,173 - #20 {
INFO  00:30:51,173 - #3 print
INFO  00:30:51,173 - #29 (
INFO  00:30:51,174 - #8 e
INFO  00:30:51,174 - #30 )
INFO  00:30:51,174 - #27 ;
INFO  00:30:51,174 - #21 }
INFO  00:30:51,175 - #32 else
INFO  00:30:51,176 - #20 {
INFO  00:30:51,176 - #3 print
INFO  00:30:51,177 - #29 (
INFO  00:30:51,177 - #8 d
INFO  00:30:51,177 - #30 )
INFO  00:30:51,177 - #27 ;
INFO  00:30:51,177 - #21 }
INFO  00:30:51,177 - #21 }
INFO  00:30:51,177 - #21 }
INFO  00:30:51,180 - =====================SINTAKSNO_STABLO=========================
INFO  00:30:51,182 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_two(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               g
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:30:51,183 - ==============================================================
INFO  00:30:51,197 - Pocetak obrade programa Program na liniji 1
INFO  00:30:51,198 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:30:51,198 - Deklarisana konstanta c na liniji 2
INFO  00:30:51,198 - Deklarisana konstanta d na liniji 2
INFO  00:30:51,199 - Deklarisana konstanta g na liniji 2
INFO  00:30:51,199 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:30:51,199 - Deklarisana promenljiva e na liniji 3
INFO  00:30:51,199 - Pocetak obrade metode main na liniji 5
INFO  00:30:51,200 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:30:51,200 - Zavrsetak obrade programa Program na liniji 1
INFO  00:30:51,200 - ======================TABELA_SIMBOLA==========================
INFO  00:30:51,201 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:30:51,204 - ==============================================================
INFO  00:30:51,204 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:31:23,465 - Obrada ulaznog fajla test\program.mj
INFO  00:31:23,593 - #2 program
INFO  00:31:23,593 - #8 Program
INFO  00:31:23,594 - #5 const
INFO  00:31:23,595 - #8 int
INFO  00:31:23,595 - #8 c
INFO  00:31:23,597 - #24 =
INFO  00:31:23,597 - #9 10
INFO  00:31:23,597 - #28 ,
INFO  00:31:23,598 - #8 d
INFO  00:31:23,599 - #24 =
INFO  00:31:23,599 - #9 99
INFO  00:31:23,599 - #28 ,
INFO  00:31:23,599 - #8 g
INFO  00:31:23,600 - #24 =
INFO  00:31:23,600 - #9 2
INFO  00:31:23,600 - #27 ;
INFO  00:31:23,600 - #8 int
INFO  00:31:23,601 - #8 e
INFO  00:31:23,601 - #27 ;
INFO  00:31:23,603 - #20 {
INFO  00:31:23,605 - #6 void
INFO  00:31:23,605 - #8 main
INFO  00:31:23,606 - #29 (
INFO  00:31:23,607 - #30 )
INFO  00:31:23,607 - #20 {
INFO  00:31:23,607 - #8 e
INFO  00:31:23,607 - #24 =
INFO  00:31:23,607 - #9 1
INFO  00:31:23,607 - #27 ;
INFO  00:31:23,608 - #31 if
INFO  00:31:23,609 - #29 (
INFO  00:31:23,609 - #8 e
INFO  00:31:23,609 - #38 >
INFO  00:31:23,609 - #9 0
INFO  00:31:23,611 - #14 ||
INFO  00:31:23,611 - #8 e
INFO  00:31:23,611 - #42 <=
INFO  00:31:23,611 - #8 d
INFO  00:31:23,612 - #13 &&
INFO  00:31:23,612 - #8 e
INFO  00:31:23,613 - #38 >
INFO  00:31:23,613 - #8 g
INFO  00:31:23,614 - #30 )
INFO  00:31:23,615 - #20 {
INFO  00:31:23,615 - #3 print
INFO  00:31:23,616 - #29 (
INFO  00:31:23,616 - #8 e
INFO  00:31:23,616 - #30 )
INFO  00:31:23,616 - #27 ;
INFO  00:31:23,616 - #21 }
INFO  00:31:23,617 - #32 else
INFO  00:31:23,618 - #20 {
INFO  00:31:23,618 - #3 print
INFO  00:31:23,621 - #29 (
INFO  00:31:23,621 - #8 d
INFO  00:31:23,621 - #30 )
INFO  00:31:23,621 - #27 ;
INFO  00:31:23,621 - #21 }
INFO  00:31:23,621 - #21 }
INFO  00:31:23,622 - #21 }
INFO  00:31:23,623 - =====================SINTAKSNO_STABLO=========================
INFO  00:31:23,628 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_two(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               g
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:31:23,629 - ==============================================================
INFO  00:31:23,644 - Pocetak obrade programa Program na liniji 1
INFO  00:31:23,644 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:31:23,646 - Deklarisana konstanta c na liniji 2
INFO  00:31:23,646 - Deklarisana konstanta d na liniji 2
INFO  00:31:23,646 - Deklarisana konstanta g na liniji 2
INFO  00:31:23,646 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:31:23,646 - Deklarisana promenljiva e na liniji 3
INFO  00:31:23,647 - Pocetak obrade metode main na liniji 5
INFO  00:31:23,648 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:31:23,648 - Zavrsetak obrade programa Program na liniji 1
INFO  00:31:23,648 - ======================TABELA_SIMBOLA==========================
INFO  00:31:23,648 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:31:23,650 - ==============================================================
INFO  00:31:23,650 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:31:23,650 - ==============================================================
INFO  00:31:23,650 - ======================GENERISANJE_KODA========================
INFO  00:31:23,657 - Generisanje koda uspesno zavrseno!
INFO  00:31:23,657 - Generisanje izlaznog fajla test\program.obj
INFO  00:31:23,657 - ==============================================================
INFO  00:37:10,326 - Obrada ulaznog fajla test\program.mj
INFO  00:37:10,429 - #2 program
INFO  00:37:10,429 - #8 Program
INFO  00:37:10,429 - #5 const
INFO  00:37:10,430 - #8 int
INFO  00:37:10,430 - #8 c
INFO  00:37:10,431 - #24 =
INFO  00:37:10,432 - #9 10
INFO  00:37:10,432 - #28 ,
INFO  00:37:10,433 - #8 d
INFO  00:37:10,433 - #24 =
INFO  00:37:10,433 - #9 99
INFO  00:37:10,434 - #28 ,
INFO  00:37:10,434 - #8 g
INFO  00:37:10,434 - #24 =
INFO  00:37:10,434 - #9 2
INFO  00:37:10,434 - #27 ;
INFO  00:37:10,435 - #8 int
INFO  00:37:10,436 - #8 e
INFO  00:37:10,436 - #27 ;
INFO  00:37:10,437 - #20 {
INFO  00:37:10,439 - #6 void
INFO  00:37:10,439 - #8 main
INFO  00:37:10,440 - #29 (
INFO  00:37:10,440 - #30 )
INFO  00:37:10,441 - #20 {
INFO  00:37:10,441 - #8 e
INFO  00:37:10,441 - #24 =
INFO  00:37:10,441 - #9 1
INFO  00:37:10,441 - #27 ;
INFO  00:37:10,442 - #31 if
INFO  00:37:10,442 - #29 (
INFO  00:37:10,442 - #8 e
INFO  00:37:10,442 - #38 >
INFO  00:37:10,443 - #9 0
INFO  00:37:10,444 - #14 ||
INFO  00:37:10,445 - #8 e
INFO  00:37:10,445 - #42 <=
INFO  00:37:10,445 - #8 d
INFO  00:37:10,446 - #30 )
INFO  00:37:10,447 - #20 {
INFO  00:37:10,447 - #3 print
INFO  00:37:10,447 - #29 (
INFO  00:37:10,447 - #8 e
INFO  00:37:10,447 - #30 )
INFO  00:37:10,447 - #27 ;
INFO  00:37:10,447 - #21 }
INFO  00:37:10,448 - #32 else
INFO  00:37:10,449 - #20 {
INFO  00:37:10,449 - #3 print
INFO  00:37:10,450 - #29 (
INFO  00:37:10,450 - #8 d
INFO  00:37:10,450 - #30 )
INFO  00:37:10,450 - #27 ;
INFO  00:37:10,450 - #21 }
INFO  00:37:10,450 - #21 }
INFO  00:37:10,450 - #21 }
INFO  00:37:10,451 - =====================SINTAKSNO_STABLO=========================
INFO  00:37:10,453 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:37:10,456 - ==============================================================
INFO  00:37:10,478 - Pocetak obrade programa Program na liniji 1
INFO  00:37:10,478 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:37:10,479 - Deklarisana konstanta c na liniji 2
INFO  00:37:10,479 - Deklarisana konstanta d na liniji 2
INFO  00:37:10,479 - Deklarisana konstanta g na liniji 2
INFO  00:37:10,479 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:37:10,479 - Deklarisana promenljiva e na liniji 3
INFO  00:37:10,480 - Pocetak obrade metode main na liniji 5
INFO  00:37:10,481 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:37:10,481 - Zavrsetak obrade programa Program na liniji 1
INFO  00:37:10,481 - ======================TABELA_SIMBOLA==========================
INFO  00:37:10,481 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:37:10,482 - ==============================================================
INFO  00:37:10,482 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:37:10,482 - ==============================================================
INFO  00:37:10,482 - ======================GENERISANJE_KODA========================
INFO  00:37:10,490 - Generisanje koda uspesno zavrseno!
INFO  00:37:10,491 - Generisanje izlaznog fajla test\program.obj
INFO  00:37:10,491 - ==============================================================
INFO  00:37:25,291 - Obrada ulaznog fajla test\program.mj
INFO  00:37:25,394 - #2 program
INFO  00:37:25,394 - #8 Program
INFO  00:37:25,394 - #5 const
INFO  00:37:25,395 - #8 int
INFO  00:37:25,395 - #8 c
INFO  00:37:25,396 - #24 =
INFO  00:37:25,396 - #9 10
INFO  00:37:25,396 - #28 ,
INFO  00:37:25,397 - #8 d
INFO  00:37:25,397 - #24 =
INFO  00:37:25,397 - #9 99
INFO  00:37:25,397 - #28 ,
INFO  00:37:25,397 - #8 g
INFO  00:37:25,398 - #24 =
INFO  00:37:25,398 - #9 2
INFO  00:37:25,398 - #27 ;
INFO  00:37:25,398 - #8 int
INFO  00:37:25,399 - #8 e
INFO  00:37:25,399 - #27 ;
INFO  00:37:25,399 - #20 {
INFO  00:37:25,401 - #6 void
INFO  00:37:25,401 - #8 main
INFO  00:37:25,401 - #29 (
INFO  00:37:25,402 - #30 )
INFO  00:37:25,402 - #20 {
INFO  00:37:25,402 - #8 e
INFO  00:37:25,402 - #24 =
INFO  00:37:25,402 - #9 1
INFO  00:37:25,402 - #27 ;
INFO  00:37:25,403 - #31 if
INFO  00:37:25,403 - #29 (
INFO  00:37:25,403 - #8 e
INFO  00:37:25,403 - #38 >
INFO  00:37:25,405 - #9 0
INFO  00:37:25,407 - #14 ||
INFO  00:37:25,407 - #8 e
INFO  00:37:25,407 - #38 >
INFO  00:37:25,407 - #8 d
INFO  00:37:25,407 - #30 )
INFO  00:37:25,408 - #20 {
INFO  00:37:25,408 - #3 print
INFO  00:37:25,408 - #29 (
INFO  00:37:25,408 - #8 e
INFO  00:37:25,409 - #30 )
INFO  00:37:25,409 - #27 ;
INFO  00:37:25,409 - #21 }
INFO  00:37:25,409 - #32 else
INFO  00:37:25,410 - #20 {
INFO  00:37:25,411 - #3 print
INFO  00:37:25,411 - #29 (
INFO  00:37:25,411 - #8 d
INFO  00:37:25,411 - #30 )
INFO  00:37:25,411 - #27 ;
INFO  00:37:25,413 - #21 }
INFO  00:37:25,414 - #21 }
INFO  00:37:25,414 - #21 }
INFO  00:37:25,415 - =====================SINTAKSNO_STABLO=========================
INFO  00:37:25,417 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:37:25,419 - ==============================================================
INFO  00:37:25,435 - Pocetak obrade programa Program na liniji 1
INFO  00:37:25,435 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:37:25,436 - Deklarisana konstanta c na liniji 2
INFO  00:37:25,436 - Deklarisana konstanta d na liniji 2
INFO  00:37:25,436 - Deklarisana konstanta g na liniji 2
INFO  00:37:25,436 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:37:25,436 - Deklarisana promenljiva e na liniji 3
INFO  00:37:25,437 - Pocetak obrade metode main na liniji 5
INFO  00:37:25,437 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:37:25,437 - Zavrsetak obrade programa Program na liniji 1
INFO  00:37:25,437 - ======================TABELA_SIMBOLA==========================
INFO  00:37:25,438 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:37:25,438 - ==============================================================
INFO  00:37:25,438 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:37:25,438 - ==============================================================
INFO  00:37:25,438 - ======================GENERISANJE_KODA========================
INFO  00:37:25,446 - Generisanje koda uspesno zavrseno!
INFO  00:37:25,446 - Generisanje izlaznog fajla test\program.obj
INFO  00:37:25,446 - ==============================================================
INFO  00:39:25,010 - Obrada ulaznog fajla test\program.mj
INFO  00:39:25,094 - #2 program
INFO  00:39:25,094 - #8 Program
INFO  00:39:25,094 - #5 const
INFO  00:39:25,095 - #8 int
INFO  00:39:25,095 - #8 c
INFO  00:39:25,097 - #24 =
INFO  00:39:25,097 - #9 10
INFO  00:39:25,098 - #28 ,
INFO  00:39:25,099 - #8 d
INFO  00:39:25,099 - #24 =
INFO  00:39:25,100 - #9 99
INFO  00:39:25,100 - #28 ,
INFO  00:39:25,100 - #8 g
INFO  00:39:25,100 - #24 =
INFO  00:39:25,100 - #9 2
INFO  00:39:25,101 - #27 ;
INFO  00:39:25,101 - #8 int
INFO  00:39:25,103 - #8 e
INFO  00:39:25,103 - #27 ;
INFO  00:39:25,103 - #20 {
INFO  00:39:25,106 - #6 void
INFO  00:39:25,106 - #8 main
INFO  00:39:25,106 - #29 (
INFO  00:39:25,107 - #30 )
INFO  00:39:25,107 - #20 {
INFO  00:39:25,107 - #8 e
INFO  00:39:25,107 - #24 =
INFO  00:39:25,108 - #9 1
INFO  00:39:25,108 - #27 ;
INFO  00:39:25,109 - #31 if
INFO  00:39:25,109 - #29 (
INFO  00:39:25,109 - #8 e
INFO  00:39:25,109 - #38 >
INFO  00:39:25,109 - #9 0
INFO  00:39:25,111 - #14 ||
INFO  00:39:25,111 - #8 e
INFO  00:39:25,111 - #38 >
INFO  00:39:25,112 - #8 d
INFO  00:39:25,112 - #30 )
INFO  00:39:25,112 - #20 {
INFO  00:39:25,112 - #3 print
INFO  00:39:25,112 - #29 (
INFO  00:39:25,114 - #8 e
INFO  00:39:25,114 - #30 )
INFO  00:39:25,114 - #27 ;
INFO  00:39:25,114 - #21 }
INFO  00:39:25,115 - #32 else
INFO  00:39:25,116 - #20 {
INFO  00:39:25,116 - #3 print
INFO  00:39:25,116 - #29 (
INFO  00:39:25,117 - #8 d
INFO  00:39:25,118 - #30 )
INFO  00:39:25,118 - #27 ;
INFO  00:39:25,121 - #21 }
INFO  00:39:25,121 - #21 }
INFO  00:39:25,121 - #21 }
INFO  00:39:25,122 - =====================SINTAKSNO_STABLO=========================
INFO  00:39:25,124 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:39:25,124 - ==============================================================
INFO  00:39:25,146 - Pocetak obrade programa Program na liniji 1
INFO  00:39:25,146 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:39:25,148 - Deklarisana konstanta c na liniji 2
INFO  00:39:25,148 - Deklarisana konstanta d na liniji 2
INFO  00:39:25,148 - Deklarisana konstanta g na liniji 2
INFO  00:39:25,148 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:39:25,149 - Deklarisana promenljiva e na liniji 3
INFO  00:39:25,150 - Pocetak obrade metode main na liniji 5
INFO  00:39:25,151 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:39:25,151 - Zavrsetak obrade programa Program na liniji 1
INFO  00:39:25,151 - ======================TABELA_SIMBOLA==========================
INFO  00:39:25,151 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:39:25,151 - ==============================================================
INFO  00:39:25,152 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:39:25,152 - ==============================================================
INFO  00:39:25,152 - ======================GENERISANJE_KODA========================
INFO  00:39:25,160 - Generisanje koda uspesno zavrseno!
INFO  00:39:25,160 - Generisanje izlaznog fajla test\program.obj
INFO  00:39:25,160 - ==============================================================
INFO  00:39:42,546 - Obrada ulaznog fajla test\program.mj
INFO  00:39:42,644 - #2 program
INFO  00:39:42,644 - #8 Program
INFO  00:39:42,644 - #5 const
INFO  00:39:42,645 - #8 int
INFO  00:39:42,645 - #8 c
INFO  00:39:42,646 - #24 =
INFO  00:39:42,646 - #9 10
INFO  00:39:42,647 - #28 ,
INFO  00:39:42,649 - #8 d
INFO  00:39:42,649 - #24 =
INFO  00:39:42,655 - #9 99
INFO  00:39:42,655 - #28 ,
INFO  00:39:42,655 - #8 g
INFO  00:39:42,655 - #24 =
INFO  00:39:42,656 - #9 2
INFO  00:39:42,656 - #27 ;
INFO  00:39:42,656 - #8 int
INFO  00:39:42,658 - #8 e
INFO  00:39:42,658 - #27 ;
INFO  00:39:42,659 - #20 {
INFO  00:39:42,661 - #6 void
INFO  00:39:42,661 - #8 main
INFO  00:39:42,661 - #29 (
INFO  00:39:42,662 - #30 )
INFO  00:39:42,662 - #20 {
INFO  00:39:42,662 - #8 e
INFO  00:39:42,662 - #24 =
INFO  00:39:42,662 - #9 1
INFO  00:39:42,662 - #27 ;
INFO  00:39:42,663 - #31 if
INFO  00:39:42,664 - #29 (
INFO  00:39:42,664 - #8 e
INFO  00:39:42,664 - #38 >
INFO  00:39:42,665 - #9 0
INFO  00:39:42,667 - #14 ||
INFO  00:39:42,668 - #8 e
INFO  00:39:42,668 - #38 >
INFO  00:39:42,668 - #8 d
INFO  00:39:42,668 - #30 )
INFO  00:39:42,669 - #20 {
INFO  00:39:42,669 - #3 print
INFO  00:39:42,669 - #29 (
INFO  00:39:42,670 - #8 e
INFO  00:39:42,670 - #30 )
INFO  00:39:42,670 - #27 ;
INFO  00:39:42,670 - #21 }
INFO  00:39:42,671 - #32 else
INFO  00:39:42,672 - #20 {
INFO  00:39:42,673 - #3 print
INFO  00:39:42,673 - #29 (
INFO  00:39:42,673 - #8 d
INFO  00:39:42,673 - #30 )
INFO  00:39:42,673 - #27 ;
INFO  00:39:42,673 - #21 }
INFO  00:39:42,676 - #21 }
INFO  00:39:42,677 - #21 }
INFO  00:39:42,678 - =====================SINTAKSNO_STABLO=========================
INFO  00:39:42,679 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:39:42,680 - ==============================================================
INFO  00:39:42,692 - Pocetak obrade programa Program na liniji 1
INFO  00:39:42,692 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:39:42,693 - Deklarisana konstanta c na liniji 2
INFO  00:39:42,693 - Deklarisana konstanta d na liniji 2
INFO  00:39:42,693 - Deklarisana konstanta g na liniji 2
INFO  00:39:42,693 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:39:42,693 - Deklarisana promenljiva e na liniji 3
INFO  00:39:42,694 - Pocetak obrade metode main na liniji 5
INFO  00:39:42,694 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:39:42,694 - Zavrsetak obrade programa Program na liniji 1
INFO  00:39:42,694 - ======================TABELA_SIMBOLA==========================
INFO  00:39:42,695 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:39:42,695 - ==============================================================
INFO  00:39:42,695 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:39:42,695 - ==============================================================
INFO  00:39:42,695 - ======================GENERISANJE_KODA========================
INFO  00:39:42,703 - Generisanje koda uspesno zavrseno!
INFO  00:39:42,703 - Generisanje izlaznog fajla test\program.obj
INFO  00:39:42,704 - ==============================================================
INFO  00:40:29,672 - Obrada ulaznog fajla test\program.mj
INFO  00:40:29,789 - #2 program
INFO  00:40:29,789 - #8 Program
INFO  00:40:29,789 - #5 const
INFO  00:40:29,790 - #8 int
INFO  00:40:29,791 - #8 c
INFO  00:40:29,791 - #24 =
INFO  00:40:29,792 - #9 10
INFO  00:40:29,792 - #28 ,
INFO  00:40:29,793 - #8 d
INFO  00:40:29,793 - #24 =
INFO  00:40:29,793 - #9 99
INFO  00:40:29,794 - #28 ,
INFO  00:40:29,794 - #8 g
INFO  00:40:29,794 - #24 =
INFO  00:40:29,794 - #9 2
INFO  00:40:29,795 - #27 ;
INFO  00:40:29,795 - #8 int
INFO  00:40:29,797 - #8 e
INFO  00:40:29,797 - #27 ;
INFO  00:40:29,797 - #20 {
INFO  00:40:29,799 - #6 void
INFO  00:40:29,799 - #8 main
INFO  00:40:29,799 - #29 (
INFO  00:40:29,800 - #30 )
INFO  00:40:29,800 - #20 {
INFO  00:40:29,801 - #8 e
INFO  00:40:29,801 - #24 =
INFO  00:40:29,801 - #9 1
INFO  00:40:29,801 - #27 ;
INFO  00:40:29,802 - #31 if
INFO  00:40:29,802 - #29 (
INFO  00:40:29,802 - #8 e
INFO  00:40:29,802 - #38 >
INFO  00:40:29,803 - #9 0
INFO  00:40:29,804 - #14 ||
INFO  00:40:29,804 - #8 e
INFO  00:40:29,804 - #38 >
INFO  00:40:29,804 - #8 d
INFO  00:40:29,804 - #30 )
INFO  00:40:29,806 - #20 {
INFO  00:40:29,807 - #3 print
INFO  00:40:29,807 - #29 (
INFO  00:40:29,807 - #8 e
INFO  00:40:29,808 - #30 )
INFO  00:40:29,808 - #27 ;
INFO  00:40:29,808 - #21 }
INFO  00:40:29,808 - #32 else
INFO  00:40:29,810 - #20 {
INFO  00:40:29,810 - #3 print
INFO  00:40:29,810 - #29 (
INFO  00:40:29,810 - #8 d
INFO  00:40:29,811 - #30 )
INFO  00:40:29,811 - #27 ;
INFO  00:40:29,811 - #21 }
INFO  00:40:29,811 - #21 }
INFO  00:40:29,812 - #21 }
INFO  00:40:29,813 - =====================SINTAKSNO_STABLO=========================
INFO  00:40:29,815 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:40:29,815 - ==============================================================
INFO  00:40:29,831 - Pocetak obrade programa Program na liniji 1
INFO  00:40:29,831 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:40:29,834 - Deklarisana konstanta c na liniji 2
INFO  00:40:29,834 - Deklarisana konstanta d na liniji 2
INFO  00:40:29,835 - Deklarisana konstanta g na liniji 2
INFO  00:40:29,835 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:40:29,835 - Deklarisana promenljiva e na liniji 3
INFO  00:40:29,836 - Pocetak obrade metode main na liniji 5
INFO  00:40:29,836 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:40:29,836 - Zavrsetak obrade programa Program na liniji 1
INFO  00:40:29,836 - ======================TABELA_SIMBOLA==========================
INFO  00:40:29,837 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:40:29,837 - ==============================================================
INFO  00:40:29,837 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:40:29,837 - ==============================================================
INFO  00:40:29,837 - ======================GENERISANJE_KODA========================
INFO  00:40:29,847 - Generisanje koda uspesno zavrseno!
INFO  00:40:29,847 - Generisanje izlaznog fajla test\program.obj
INFO  00:40:29,847 - ==============================================================
INFO  00:42:13,481 - Obrada ulaznog fajla test\program.mj
INFO  00:42:13,608 - #2 program
INFO  00:42:13,608 - #8 Program
INFO  00:42:13,608 - #5 const
INFO  00:42:13,609 - #8 int
INFO  00:42:13,610 - #8 c
INFO  00:42:13,610 - #24 =
INFO  00:42:13,611 - #9 10
INFO  00:42:13,611 - #28 ,
INFO  00:42:13,612 - #8 d
INFO  00:42:13,612 - #24 =
INFO  00:42:13,612 - #9 99
INFO  00:42:13,613 - #28 ,
INFO  00:42:13,613 - #8 g
INFO  00:42:13,613 - #24 =
INFO  00:42:13,614 - #9 2
INFO  00:42:13,614 - #27 ;
INFO  00:42:13,614 - #8 int
INFO  00:42:13,616 - #8 e
INFO  00:42:13,616 - #27 ;
INFO  00:42:13,617 - #20 {
INFO  00:42:13,619 - #6 void
INFO  00:42:13,619 - #8 main
INFO  00:42:13,619 - #29 (
INFO  00:42:13,620 - #30 )
INFO  00:42:13,621 - #20 {
INFO  00:42:13,621 - #8 e
INFO  00:42:13,621 - #24 =
INFO  00:42:13,621 - #9 1
INFO  00:42:13,621 - #27 ;
INFO  00:42:13,622 - #31 if
INFO  00:42:13,622 - #29 (
INFO  00:42:13,622 - #8 e
INFO  00:42:13,622 - #38 >
INFO  00:42:13,623 - #9 0
INFO  00:42:13,624 - #14 ||
INFO  00:42:13,624 - #8 e
INFO  00:42:13,625 - #38 >
INFO  00:42:13,625 - #8 d
INFO  00:42:13,625 - #30 )
INFO  00:42:13,625 - #20 {
INFO  00:42:13,625 - #3 print
INFO  00:42:13,626 - #29 (
INFO  00:42:13,627 - #8 e
INFO  00:42:13,627 - #30 )
INFO  00:42:13,627 - #27 ;
INFO  00:42:13,627 - #21 }
INFO  00:42:13,628 - #32 else
INFO  00:42:13,629 - #20 {
INFO  00:42:13,629 - #3 print
INFO  00:42:13,629 - #29 (
INFO  00:42:13,629 - #8 d
INFO  00:42:13,629 - #30 )
INFO  00:42:13,630 - #27 ;
INFO  00:42:13,630 - #21 }
INFO  00:42:13,630 - #21 }
INFO  00:42:13,630 - #21 }
INFO  00:42:13,632 - =====================SINTAKSNO_STABLO=========================
INFO  00:42:13,634 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:42:13,634 - ==============================================================
INFO  00:42:13,652 - Pocetak obrade programa Program na liniji 1
INFO  00:42:13,652 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:42:13,653 - Deklarisana konstanta c na liniji 2
INFO  00:42:13,653 - Deklarisana konstanta d na liniji 2
INFO  00:42:13,654 - Deklarisana konstanta g na liniji 2
INFO  00:42:13,654 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:42:13,654 - Deklarisana promenljiva e na liniji 3
INFO  00:42:13,655 - Pocetak obrade metode main na liniji 5
INFO  00:42:13,656 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:42:13,656 - Zavrsetak obrade programa Program na liniji 1
INFO  00:42:13,656 - ======================TABELA_SIMBOLA==========================
INFO  00:42:13,657 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:42:13,657 - ==============================================================
INFO  00:42:13,657 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:42:13,657 - ==============================================================
INFO  00:42:13,658 - ======================GENERISANJE_KODA========================
INFO  00:42:13,666 - Generisanje koda uspesno zavrseno!
INFO  00:42:13,666 - Generisanje izlaznog fajla test\program.obj
INFO  00:42:13,666 - ==============================================================
INFO  00:47:48,979 - Obrada ulaznog fajla test\program.mj
INFO  00:47:49,070 - #2 program
INFO  00:47:49,070 - #8 Program
INFO  00:47:49,070 - #5 const
INFO  00:47:49,071 - #8 int
INFO  00:47:49,071 - #8 c
INFO  00:47:49,072 - #24 =
INFO  00:47:49,073 - #9 10
INFO  00:47:49,073 - #28 ,
INFO  00:47:49,074 - #8 d
INFO  00:47:49,074 - #24 =
INFO  00:47:49,074 - #9 99
INFO  00:47:49,074 - #28 ,
INFO  00:47:49,075 - #8 g
INFO  00:47:49,075 - #24 =
INFO  00:47:49,075 - #9 2
INFO  00:47:49,075 - #27 ;
INFO  00:47:49,075 - #8 int
INFO  00:47:49,077 - #8 e
INFO  00:47:49,077 - #27 ;
INFO  00:47:49,077 - #20 {
INFO  00:47:49,079 - #6 void
INFO  00:47:49,079 - #8 main
INFO  00:47:49,079 - #29 (
INFO  00:47:49,080 - #30 )
INFO  00:47:49,080 - #20 {
INFO  00:47:49,080 - #8 e
INFO  00:47:49,080 - #24 =
INFO  00:47:49,080 - #9 1
INFO  00:47:49,081 - #27 ;
INFO  00:47:49,081 - #31 if
INFO  00:47:49,082 - #29 (
INFO  00:47:49,082 - #8 e
INFO  00:47:49,082 - #38 >
INFO  00:47:49,082 - #9 0
INFO  00:47:49,084 - #14 ||
INFO  00:47:49,085 - #8 e
INFO  00:47:49,085 - #38 >
INFO  00:47:49,085 - #8 d
INFO  00:47:49,085 - #30 )
INFO  00:47:49,085 - #20 {
INFO  00:47:49,085 - #3 print
INFO  00:47:49,086 - #29 (
INFO  00:47:49,086 - #8 e
INFO  00:47:49,086 - #30 )
INFO  00:47:49,086 - #27 ;
INFO  00:47:49,086 - #21 }
INFO  00:47:49,086 - #32 else
INFO  00:47:49,088 - #20 {
INFO  00:47:49,088 - #3 print
INFO  00:47:49,088 - #29 (
INFO  00:47:49,088 - #8 d
INFO  00:47:49,088 - #30 )
INFO  00:47:49,088 - #27 ;
INFO  00:47:49,088 - #21 }
INFO  00:47:49,088 - #21 }
INFO  00:47:49,089 - #21 }
INFO  00:47:49,090 - =====================SINTAKSNO_STABLO=========================
INFO  00:47:49,092 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:47:49,093 - ==============================================================
INFO  00:47:49,124 - Pocetak obrade programa Program na liniji 1
INFO  00:47:49,124 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:47:49,125 - Deklarisana konstanta c na liniji 2
INFO  00:47:49,125 - Deklarisana konstanta d na liniji 2
INFO  00:47:49,126 - Deklarisana konstanta g na liniji 2
INFO  00:47:49,126 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:47:49,126 - Deklarisana promenljiva e na liniji 3
INFO  00:47:49,128 - Pocetak obrade metode main na liniji 5
INFO  00:47:49,129 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:47:49,130 - Zavrsetak obrade programa Program na liniji 1
INFO  00:47:49,130 - ======================TABELA_SIMBOLA==========================
INFO  00:47:49,131 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:47:49,131 - ==============================================================
INFO  00:47:49,131 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:51:56,850 - Obrada ulaznog fajla test\program.mj
INFO  00:51:56,960 - #2 program
INFO  00:51:56,960 - #8 Program
INFO  00:51:56,960 - #5 const
INFO  00:51:56,961 - #8 int
INFO  00:51:56,961 - #8 c
INFO  00:51:56,962 - #24 =
INFO  00:51:56,962 - #9 10
INFO  00:51:56,962 - #28 ,
INFO  00:51:56,963 - #8 d
INFO  00:51:56,963 - #24 =
INFO  00:51:56,963 - #9 99
INFO  00:51:56,964 - #28 ,
INFO  00:51:56,964 - #8 g
INFO  00:51:56,964 - #24 =
INFO  00:51:56,964 - #9 2
INFO  00:51:56,964 - #27 ;
INFO  00:51:56,964 - #8 int
INFO  00:51:56,965 - #8 e
INFO  00:51:56,966 - #27 ;
INFO  00:51:56,966 - #20 {
INFO  00:51:56,967 - #6 void
INFO  00:51:56,967 - #8 main
INFO  00:51:56,967 - #29 (
INFO  00:51:56,972 - #30 )
INFO  00:51:56,974 - #20 {
INFO  00:51:56,974 - #8 e
INFO  00:51:56,974 - #24 =
INFO  00:51:56,974 - #9 1
INFO  00:51:56,974 - #27 ;
INFO  00:51:56,975 - #31 if
INFO  00:51:56,975 - #29 (
INFO  00:51:56,975 - #8 e
INFO  00:51:56,975 - #38 >
INFO  00:51:56,976 - #9 0
INFO  00:51:56,977 - #14 ||
INFO  00:51:56,977 - #8 e
INFO  00:51:56,977 - #38 >
INFO  00:51:56,978 - #8 d
INFO  00:51:56,978 - #30 )
INFO  00:51:56,978 - #20 {
INFO  00:51:56,978 - #3 print
INFO  00:51:56,979 - #29 (
INFO  00:51:56,981 - #8 e
INFO  00:51:56,981 - #30 )
INFO  00:51:56,981 - #27 ;
INFO  00:51:56,981 - #21 }
INFO  00:51:56,982 - #32 else
INFO  00:51:56,984 - #20 {
INFO  00:51:56,984 - #3 print
INFO  00:51:56,985 - #29 (
INFO  00:51:56,986 - #8 d
INFO  00:51:56,986 - #30 )
INFO  00:51:56,986 - #27 ;
INFO  00:51:56,989 - #21 }
INFO  00:51:56,989 - #21 }
INFO  00:51:56,989 - #21 }
INFO  00:51:56,990 - =====================SINTAKSNO_STABLO=========================
INFO  00:51:56,992 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:51:56,992 - ==============================================================
INFO  00:51:57,006 - Pocetak obrade programa Program na liniji 1
INFO  00:51:57,006 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:51:57,007 - Deklarisana konstanta c na liniji 2
INFO  00:51:57,007 - Deklarisana konstanta d na liniji 2
INFO  00:51:57,008 - Deklarisana konstanta g na liniji 2
INFO  00:51:57,008 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:51:57,008 - Deklarisana promenljiva e na liniji 3
INFO  00:51:57,009 - Pocetak obrade metode main na liniji 5
INFO  00:51:57,009 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:51:57,009 - Zavrsetak obrade programa Program na liniji 1
INFO  00:51:57,009 - ======================TABELA_SIMBOLA==========================
INFO  00:51:57,010 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:51:57,010 - ==============================================================
INFO  00:51:57,010 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:51:58,685 - Obrada ulaznog fajla test\program.mj
INFO  00:51:58,769 - #2 program
INFO  00:51:58,769 - #8 Program
INFO  00:51:58,769 - #5 const
INFO  00:51:58,771 - #8 int
INFO  00:51:58,771 - #8 c
INFO  00:51:58,772 - #24 =
INFO  00:51:58,772 - #9 10
INFO  00:51:58,772 - #28 ,
INFO  00:51:58,773 - #8 d
INFO  00:51:58,774 - #24 =
INFO  00:51:58,774 - #9 99
INFO  00:51:58,774 - #28 ,
INFO  00:51:58,774 - #8 g
INFO  00:51:58,774 - #24 =
INFO  00:51:58,774 - #9 2
INFO  00:51:58,774 - #27 ;
INFO  00:51:58,774 - #8 int
INFO  00:51:58,775 - #8 e
INFO  00:51:58,776 - #27 ;
INFO  00:51:58,776 - #20 {
INFO  00:51:58,777 - #6 void
INFO  00:51:58,777 - #8 main
INFO  00:51:58,777 - #29 (
INFO  00:51:58,778 - #30 )
INFO  00:51:58,778 - #20 {
INFO  00:51:58,778 - #8 e
INFO  00:51:58,778 - #24 =
INFO  00:51:58,778 - #9 1
INFO  00:51:58,778 - #27 ;
INFO  00:51:58,779 - #31 if
INFO  00:51:58,779 - #29 (
INFO  00:51:58,779 - #8 e
INFO  00:51:58,779 - #38 >
INFO  00:51:58,780 - #9 0
INFO  00:51:58,781 - #14 ||
INFO  00:51:58,781 - #8 e
INFO  00:51:58,781 - #38 >
INFO  00:51:58,782 - #8 d
INFO  00:51:58,782 - #30 )
INFO  00:51:58,782 - #20 {
INFO  00:51:58,782 - #3 print
INFO  00:51:58,782 - #29 (
INFO  00:51:58,782 - #8 e
INFO  00:51:58,782 - #30 )
INFO  00:51:58,782 - #27 ;
INFO  00:51:58,783 - #21 }
INFO  00:51:58,783 - #32 else
INFO  00:51:58,784 - #20 {
INFO  00:51:58,784 - #3 print
INFO  00:51:58,784 - #29 (
INFO  00:51:58,784 - #8 d
INFO  00:51:58,784 - #30 )
INFO  00:51:58,784 - #27 ;
INFO  00:51:58,784 - #21 }
INFO  00:51:58,784 - #21 }
INFO  00:51:58,785 - #21 }
INFO  00:51:58,785 - =====================SINTAKSNO_STABLO=========================
INFO  00:51:58,787 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:51:58,788 - ==============================================================
INFO  00:51:58,801 - Pocetak obrade programa Program na liniji 1
INFO  00:51:58,801 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:51:58,802 - Deklarisana konstanta c na liniji 2
INFO  00:51:58,802 - Deklarisana konstanta d na liniji 2
INFO  00:51:58,807 - Deklarisana konstanta g na liniji 2
INFO  00:51:58,807 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:51:58,807 - Deklarisana promenljiva e na liniji 3
INFO  00:51:58,808 - Pocetak obrade metode main na liniji 5
INFO  00:51:58,808 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:51:58,808 - Zavrsetak obrade programa Program na liniji 1
INFO  00:51:58,808 - ======================TABELA_SIMBOLA==========================
INFO  00:51:58,809 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:51:58,809 - ==============================================================
INFO  00:51:58,809 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:51:58,810 - ==============================================================
INFO  00:51:58,810 - ======================GENERISANJE_KODA========================
INFO  00:51:58,817 - Generisanje koda uspesno zavrseno!
INFO  00:51:58,818 - Generisanje izlaznog fajla test\program.obj
INFO  00:51:58,818 - ==============================================================
INFO  00:52:55,271 - Obrada ulaznog fajla test\program.mj
INFO  00:52:55,450 - #2 program
INFO  00:52:55,450 - #8 Program
INFO  00:52:55,450 - #5 const
INFO  00:52:55,451 - #8 int
INFO  00:52:55,451 - #8 c
INFO  00:52:55,451 - #24 =
INFO  00:52:55,451 - #9 10
INFO  00:52:55,452 - #28 ,
INFO  00:52:55,452 - #8 d
INFO  00:52:55,453 - #24 =
INFO  00:52:55,453 - #9 99
INFO  00:52:55,453 - #28 ,
INFO  00:52:55,453 - #8 g
INFO  00:52:55,453 - #24 =
INFO  00:52:55,453 - #9 2
INFO  00:52:55,453 - #27 ;
INFO  00:52:55,453 - #8 int
INFO  00:52:55,458 - #8 e
INFO  00:52:55,458 - #27 ;
INFO  00:52:55,459 - #20 {
INFO  00:52:55,460 - #6 void
INFO  00:52:55,460 - #8 main
INFO  00:52:55,460 - #29 (
INFO  00:52:55,461 - #30 )
INFO  00:52:55,461 - #20 {
INFO  00:52:55,462 - #8 e
INFO  00:52:55,462 - #24 =
INFO  00:52:55,462 - #9 1
INFO  00:52:55,462 - #27 ;
INFO  00:52:55,463 - #31 if
INFO  00:52:55,463 - #29 (
INFO  00:52:55,463 - #8 e
INFO  00:52:55,463 - #38 >
INFO  00:52:55,463 - #9 0
INFO  00:52:55,465 - #13 &&
INFO  00:52:55,465 - #8 e
INFO  00:52:55,465 - #38 >
INFO  00:52:55,466 - #8 d
INFO  00:52:55,466 - #30 )
INFO  00:52:55,466 - #20 {
INFO  00:52:55,466 - #3 print
INFO  00:52:55,466 - #29 (
INFO  00:52:55,466 - #8 e
INFO  00:52:55,466 - #30 )
INFO  00:52:55,467 - #27 ;
INFO  00:52:55,467 - #21 }
INFO  00:52:55,467 - #32 else
INFO  00:52:55,468 - #20 {
INFO  00:52:55,468 - #3 print
INFO  00:52:55,468 - #29 (
INFO  00:52:55,468 - #8 d
INFO  00:52:55,469 - #30 )
INFO  00:52:55,469 - #27 ;
INFO  00:52:55,469 - #21 }
INFO  00:52:55,469 - #21 }
INFO  00:52:55,469 - #21 }
INFO  00:52:55,470 - =====================SINTAKSNO_STABLO=========================
INFO  00:52:55,472 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:52:55,473 - ==============================================================
INFO  00:52:55,487 - Pocetak obrade programa Program na liniji 1
INFO  00:52:55,487 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:52:55,488 - Deklarisana konstanta c na liniji 2
INFO  00:52:55,488 - Deklarisana konstanta d na liniji 2
INFO  00:52:55,489 - Deklarisana konstanta g na liniji 2
INFO  00:52:55,489 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:52:55,489 - Deklarisana promenljiva e na liniji 3
INFO  00:52:55,490 - Pocetak obrade metode main na liniji 5
INFO  00:52:55,490 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:52:55,493 - Zavrsetak obrade programa Program na liniji 1
INFO  00:52:55,493 - ======================TABELA_SIMBOLA==========================
INFO  00:52:55,494 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:52:55,494 - ==============================================================
INFO  00:52:55,494 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:52:55,494 - ==============================================================
INFO  00:52:55,494 - ======================GENERISANJE_KODA========================
INFO  00:52:55,501 - Generisanje koda uspesno zavrseno!
INFO  00:52:55,502 - Generisanje izlaznog fajla test\program.obj
INFO  00:52:55,502 - ==============================================================
INFO  00:54:22,643 - Obrada ulaznog fajla test\program.mj
INFO  00:54:22,725 - #2 program
INFO  00:54:22,725 - #8 Program
INFO  00:54:22,725 - #5 const
INFO  00:54:22,727 - #8 int
INFO  00:54:22,727 - #8 c
INFO  00:54:22,728 - #24 =
INFO  00:54:22,728 - #9 10
INFO  00:54:22,728 - #28 ,
INFO  00:54:22,729 - #8 d
INFO  00:54:22,729 - #24 =
INFO  00:54:22,729 - #9 99
INFO  00:54:22,729 - #28 ,
INFO  00:54:22,730 - #8 g
INFO  00:54:22,730 - #24 =
INFO  00:54:22,730 - #9 2
INFO  00:54:22,730 - #27 ;
INFO  00:54:22,730 - #8 int
INFO  00:54:22,731 - #8 e
INFO  00:54:22,731 - #27 ;
INFO  00:54:22,731 - #20 {
INFO  00:54:22,732 - #6 void
INFO  00:54:22,733 - #8 main
INFO  00:54:22,733 - #29 (
INFO  00:54:22,733 - #30 )
INFO  00:54:22,734 - #20 {
INFO  00:54:22,734 - #8 e
INFO  00:54:22,734 - #24 =
INFO  00:54:22,734 - #9 1
INFO  00:54:22,734 - #27 ;
INFO  00:54:22,735 - #31 if
INFO  00:54:22,735 - #29 (
INFO  00:54:22,735 - #8 e
INFO  00:54:22,735 - #38 >
INFO  00:54:22,735 - #9 0
INFO  00:54:22,737 - #13 &&
INFO  00:54:22,737 - #8 e
INFO  00:54:22,737 - #38 >
INFO  00:54:22,737 - #8 d
INFO  00:54:22,737 - #30 )
INFO  00:54:22,738 - #20 {
INFO  00:54:22,738 - #3 print
INFO  00:54:22,738 - #29 (
INFO  00:54:22,738 - #8 e
INFO  00:54:22,738 - #30 )
INFO  00:54:22,738 - #27 ;
INFO  00:54:22,738 - #21 }
INFO  00:54:22,739 - #32 else
INFO  00:54:22,740 - #20 {
INFO  00:54:22,740 - #3 print
INFO  00:54:22,740 - #29 (
INFO  00:54:22,740 - #8 d
INFO  00:54:22,740 - #30 )
INFO  00:54:22,740 - #27 ;
INFO  00:54:22,740 - #21 }
INFO  00:54:22,740 - #21 }
INFO  00:54:22,741 - #21 }
INFO  00:54:22,741 - =====================SINTAKSNO_STABLO=========================
INFO  00:54:22,743 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:54:22,744 - ==============================================================
INFO  00:54:22,757 - Pocetak obrade programa Program na liniji 1
INFO  00:54:22,757 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:54:22,758 - Deklarisana konstanta c na liniji 2
INFO  00:54:22,758 - Deklarisana konstanta d na liniji 2
INFO  00:54:22,758 - Deklarisana konstanta g na liniji 2
INFO  00:54:22,758 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:54:22,759 - Deklarisana promenljiva e na liniji 3
INFO  00:54:22,759 - Pocetak obrade metode main na liniji 5
INFO  00:54:22,760 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:54:22,760 - Zavrsetak obrade programa Program na liniji 1
INFO  00:54:22,760 - ======================TABELA_SIMBOLA==========================
INFO  00:54:22,760 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:54:22,760 - ==============================================================
INFO  00:54:22,760 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:54:22,761 - ==============================================================
INFO  00:54:22,761 - ======================GENERISANJE_KODA========================
INFO  00:54:22,767 - Generisanje koda uspesno zavrseno!
INFO  00:54:22,768 - Generisanje izlaznog fajla test\program.obj
INFO  00:54:22,768 - ==============================================================
INFO  00:54:32,582 - Obrada ulaznog fajla test\program.mj
INFO  00:54:32,665 - #2 program
INFO  00:54:32,665 - #8 Program
INFO  00:54:32,665 - #5 const
INFO  00:54:32,667 - #8 int
INFO  00:54:32,667 - #8 c
INFO  00:54:32,668 - #24 =
INFO  00:54:32,668 - #9 10
INFO  00:54:32,668 - #28 ,
INFO  00:54:32,669 - #8 d
INFO  00:54:32,669 - #24 =
INFO  00:54:32,679 - #9 99
INFO  00:54:32,679 - #28 ,
INFO  00:54:32,680 - #8 g
INFO  00:54:32,680 - #24 =
INFO  00:54:32,680 - #9 2
INFO  00:54:32,680 - #27 ;
INFO  00:54:32,680 - #8 int
INFO  00:54:32,681 - #8 e
INFO  00:54:32,681 - #27 ;
INFO  00:54:32,682 - #20 {
INFO  00:54:32,683 - #6 void
INFO  00:54:32,683 - #8 main
INFO  00:54:32,683 - #29 (
INFO  00:54:32,684 - #30 )
INFO  00:54:32,684 - #20 {
INFO  00:54:32,684 - #8 e
INFO  00:54:32,684 - #24 =
INFO  00:54:32,685 - #9 1
INFO  00:54:32,685 - #27 ;
INFO  00:54:32,685 - #31 if
INFO  00:54:32,686 - #29 (
INFO  00:54:32,686 - #8 e
INFO  00:54:32,686 - #38 >
INFO  00:54:32,686 - #9 0
INFO  00:54:32,688 - #14 ||
INFO  00:54:32,689 - #8 e
INFO  00:54:32,689 - #38 >
INFO  00:54:32,689 - #8 d
INFO  00:54:32,689 - #30 )
INFO  00:54:32,689 - #20 {
INFO  00:54:32,689 - #3 print
INFO  00:54:32,689 - #29 (
INFO  00:54:32,689 - #8 e
INFO  00:54:32,690 - #30 )
INFO  00:54:32,690 - #27 ;
INFO  00:54:32,691 - #21 }
INFO  00:54:32,691 - #32 else
INFO  00:54:32,692 - #20 {
INFO  00:54:32,692 - #3 print
INFO  00:54:32,692 - #29 (
INFO  00:54:32,692 - #8 d
INFO  00:54:32,693 - #30 )
INFO  00:54:32,693 - #27 ;
INFO  00:54:32,693 - #21 }
INFO  00:54:32,693 - #21 }
INFO  00:54:32,693 - #21 }
INFO  00:54:32,694 - =====================SINTAKSNO_STABLO=========================
INFO  00:54:32,696 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:54:32,712 - ==============================================================
INFO  00:54:32,732 - Pocetak obrade programa Program na liniji 1
INFO  00:54:32,732 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:54:32,734 - Deklarisana konstanta c na liniji 2
INFO  00:54:32,734 - Deklarisana konstanta d na liniji 2
INFO  00:54:32,734 - Deklarisana konstanta g na liniji 2
INFO  00:54:32,734 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:54:32,734 - Deklarisana promenljiva e na liniji 3
INFO  00:54:32,735 - Pocetak obrade metode main na liniji 5
INFO  00:54:32,736 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:54:32,736 - Zavrsetak obrade programa Program na liniji 1
INFO  00:54:32,736 - ======================TABELA_SIMBOLA==========================
INFO  00:54:32,737 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:54:32,737 - ==============================================================
INFO  00:54:32,737 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:54:32,737 - ==============================================================
INFO  00:54:32,738 - ======================GENERISANJE_KODA========================
INFO  00:54:32,746 - Generisanje koda uspesno zavrseno!
INFO  00:54:32,747 - Generisanje izlaznog fajla test\program.obj
INFO  00:54:32,747 - ==============================================================
INFO  00:55:34,748 - Obrada ulaznog fajla test\program.mj
INFO  00:55:34,847 - #2 program
INFO  00:55:34,847 - #8 Program
INFO  00:55:34,847 - #5 const
INFO  00:55:34,850 - #8 int
INFO  00:55:34,850 - #8 c
INFO  00:55:34,851 - #24 =
INFO  00:55:34,851 - #9 10
INFO  00:55:34,851 - #28 ,
INFO  00:55:34,852 - #8 d
INFO  00:55:34,852 - #24 =
INFO  00:55:34,852 - #9 99
INFO  00:55:34,852 - #28 ,
INFO  00:55:34,852 - #8 g
INFO  00:55:34,852 - #24 =
INFO  00:55:34,853 - #9 2
INFO  00:55:34,853 - #27 ;
INFO  00:55:34,853 - #8 int
INFO  00:55:34,854 - #8 e
INFO  00:55:34,854 - #27 ;
INFO  00:55:34,855 - #20 {
INFO  00:55:34,856 - #6 void
INFO  00:55:34,856 - #8 main
INFO  00:55:34,856 - #29 (
INFO  00:55:34,856 - #30 )
INFO  00:55:34,856 - #20 {
INFO  00:55:34,857 - #8 e
INFO  00:55:34,857 - #24 =
INFO  00:55:34,857 - #9 1
INFO  00:55:34,857 - #27 ;
INFO  00:55:34,858 - #31 if
INFO  00:55:34,858 - #29 (
INFO  00:55:34,858 - #8 e
INFO  00:55:34,858 - #38 >
INFO  00:55:34,858 - #9 0
INFO  00:55:34,859 - #14 ||
INFO  00:55:34,860 - #8 e
INFO  00:55:34,860 - #38 >
INFO  00:55:34,860 - #9 5
INFO  00:55:34,860 - #13 &&
INFO  00:55:34,860 - #8 e
INFO  00:55:34,860 - #42 <=
INFO  00:55:34,860 - #8 d
INFO  00:55:34,861 - #30 )
INFO  00:55:34,861 - #20 {
INFO  00:55:34,862 - #3 print
INFO  00:55:34,862 - #29 (
INFO  00:55:34,862 - #8 e
INFO  00:55:34,862 - #30 )
INFO  00:55:34,862 - #27 ;
INFO  00:55:34,862 - #21 }
INFO  00:55:34,862 - #32 else
INFO  00:55:34,863 - #20 {
INFO  00:55:34,863 - #3 print
INFO  00:55:34,863 - #29 (
INFO  00:55:34,864 - #8 d
INFO  00:55:34,864 - #30 )
INFO  00:55:34,864 - #27 ;
INFO  00:55:34,864 - #21 }
INFO  00:55:34,864 - #21 }
INFO  00:55:34,864 - #21 }
INFO  00:55:34,865 - =====================SINTAKSNO_STABLO=========================
INFO  00:55:34,867 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           5
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:55:34,868 - ==============================================================
INFO  00:55:34,886 - Pocetak obrade programa Program na liniji 1
INFO  00:55:34,886 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:55:34,887 - Deklarisana konstanta c na liniji 2
INFO  00:55:34,887 - Deklarisana konstanta d na liniji 2
INFO  00:55:34,887 - Deklarisana konstanta g na liniji 2
INFO  00:55:34,887 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:55:34,887 - Deklarisana promenljiva e na liniji 3
INFO  00:55:34,888 - Pocetak obrade metode main na liniji 5
INFO  00:55:34,889 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:55:34,889 - Zavrsetak obrade programa Program na liniji 1
INFO  00:55:34,889 - ======================TABELA_SIMBOLA==========================
INFO  00:55:34,890 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:55:34,893 - ==============================================================
INFO  00:55:34,893 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:55:34,893 - ==============================================================
INFO  00:55:34,893 - ======================GENERISANJE_KODA========================
INFO  00:55:34,899 - Generisanje koda uspesno zavrseno!
INFO  00:55:34,899 - Generisanje izlaznog fajla test\program.obj
INFO  00:55:34,899 - ==============================================================
INFO  00:55:54,415 - Obrada ulaznog fajla test\program.mj
INFO  00:55:54,515 - #2 program
INFO  00:55:54,516 - #8 Program
INFO  00:55:54,516 - #5 const
INFO  00:55:54,517 - #8 int
INFO  00:55:54,518 - #8 c
INFO  00:55:54,520 - #24 =
INFO  00:55:54,520 - #9 10
INFO  00:55:54,521 - #28 ,
INFO  00:55:54,523 - #8 d
INFO  00:55:54,523 - #24 =
INFO  00:55:54,523 - #9 99
INFO  00:55:54,524 - #28 ,
INFO  00:55:54,524 - #8 g
INFO  00:55:54,524 - #24 =
INFO  00:55:54,524 - #9 2
INFO  00:55:54,524 - #27 ;
INFO  00:55:54,525 - #8 int
INFO  00:55:54,527 - #8 e
INFO  00:55:54,527 - #27 ;
INFO  00:55:54,528 - #20 {
INFO  00:55:54,530 - #6 void
INFO  00:55:54,530 - #8 main
INFO  00:55:54,530 - #29 (
INFO  00:55:54,531 - #30 )
INFO  00:55:54,531 - #20 {
INFO  00:55:54,532 - #8 e
INFO  00:55:54,532 - #24 =
INFO  00:55:54,532 - #9 10
INFO  00:55:54,532 - #27 ;
INFO  00:55:54,533 - #31 if
INFO  00:55:54,533 - #29 (
INFO  00:55:54,533 - #8 e
INFO  00:55:54,534 - #38 >
INFO  00:55:54,534 - #9 0
INFO  00:55:54,535 - #14 ||
INFO  00:55:54,536 - #8 e
INFO  00:55:54,536 - #38 >
INFO  00:55:54,536 - #9 5
INFO  00:55:54,537 - #13 &&
INFO  00:55:54,537 - #8 e
INFO  00:55:54,537 - #42 <=
INFO  00:55:54,537 - #8 d
INFO  00:55:54,539 - #30 )
INFO  00:55:54,540 - #20 {
INFO  00:55:54,541 - #3 print
INFO  00:55:54,541 - #29 (
INFO  00:55:54,541 - #8 e
INFO  00:55:54,541 - #30 )
INFO  00:55:54,541 - #27 ;
INFO  00:55:54,548 - #21 }
INFO  00:55:54,550 - #32 else
INFO  00:55:54,552 - #20 {
INFO  00:55:54,552 - #3 print
INFO  00:55:54,555 - #29 (
INFO  00:55:54,555 - #8 d
INFO  00:55:54,556 - #30 )
INFO  00:55:54,556 - #27 ;
INFO  00:55:54,556 - #21 }
INFO  00:55:54,556 - #21 }
INFO  00:55:54,556 - #21 }
INFO  00:55:54,557 - =====================SINTAKSNO_STABLO=========================
INFO  00:55:54,559 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           5
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:55:54,560 - ==============================================================
INFO  00:55:54,581 - Pocetak obrade programa Program na liniji 1
INFO  00:55:54,582 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:55:54,583 - Deklarisana konstanta c na liniji 2
INFO  00:55:54,583 - Deklarisana konstanta d na liniji 2
INFO  00:55:54,583 - Deklarisana konstanta g na liniji 2
INFO  00:55:54,583 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:55:54,583 - Deklarisana promenljiva e na liniji 3
INFO  00:55:54,584 - Pocetak obrade metode main na liniji 5
INFO  00:55:54,584 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:55:54,585 - Zavrsetak obrade programa Program na liniji 1
INFO  00:55:54,585 - ======================TABELA_SIMBOLA==========================
INFO  00:55:54,585 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:55:54,587 - ==============================================================
INFO  00:55:54,587 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:55:54,587 - ==============================================================
INFO  00:55:54,587 - ======================GENERISANJE_KODA========================
INFO  00:55:54,594 - Generisanje koda uspesno zavrseno!
INFO  00:55:54,594 - Generisanje izlaznog fajla test\program.obj
INFO  00:55:54,594 - ==============================================================
INFO  00:57:02,870 - Obrada ulaznog fajla test\program.mj
INFO  00:57:02,993 - #2 program
INFO  00:57:02,993 - #8 Program
INFO  00:57:02,993 - #5 const
INFO  00:57:02,995 - #8 int
INFO  00:57:02,995 - #8 c
INFO  00:57:02,996 - #24 =
INFO  00:57:02,996 - #9 10
INFO  00:57:02,996 - #28 ,
INFO  00:57:02,997 - #8 d
INFO  00:57:02,997 - #24 =
INFO  00:57:02,997 - #9 99
INFO  00:57:02,997 - #28 ,
INFO  00:57:02,998 - #8 g
INFO  00:57:02,998 - #24 =
INFO  00:57:02,998 - #9 2
INFO  00:57:02,998 - #27 ;
INFO  00:57:02,998 - #8 int
INFO  00:57:02,999 - #8 e
INFO  00:57:02,999 - #27 ;
INFO  00:57:02,999 - #20 {
INFO  00:57:03,001 - #6 void
INFO  00:57:03,001 - #8 main
INFO  00:57:03,001 - #29 (
INFO  00:57:03,001 - #30 )
INFO  00:57:03,002 - #20 {
INFO  00:57:03,002 - #8 e
INFO  00:57:03,002 - #24 =
INFO  00:57:03,002 - #9 100
INFO  00:57:03,002 - #27 ;
INFO  00:57:03,003 - #31 if
INFO  00:57:03,003 - #29 (
INFO  00:57:03,003 - #8 e
INFO  00:57:03,003 - #38 >
INFO  00:57:03,003 - #9 0
INFO  00:57:03,004 - #14 ||
INFO  00:57:03,005 - #8 e
INFO  00:57:03,005 - #38 >
INFO  00:57:03,005 - #9 5
INFO  00:57:03,005 - #13 &&
INFO  00:57:03,005 - #8 e
INFO  00:57:03,006 - #42 <=
INFO  00:57:03,006 - #8 d
INFO  00:57:03,007 - #30 )
INFO  00:57:03,008 - #20 {
INFO  00:57:03,008 - #3 print
INFO  00:57:03,008 - #29 (
INFO  00:57:03,008 - #8 e
INFO  00:57:03,008 - #30 )
INFO  00:57:03,009 - #27 ;
INFO  00:57:03,009 - #21 }
INFO  00:57:03,009 - #32 else
INFO  00:57:03,010 - #20 {
INFO  00:57:03,010 - #3 print
INFO  00:57:03,010 - #29 (
INFO  00:57:03,010 - #8 d
INFO  00:57:03,010 - #30 )
INFO  00:57:03,010 - #27 ;
INFO  00:57:03,010 - #21 }
INFO  00:57:03,010 - #21 }
INFO  00:57:03,011 - #21 }
INFO  00:57:03,012 - =====================SINTAKSNO_STABLO=========================
INFO  00:57:03,013 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     100
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           5
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:57:03,014 - ==============================================================
INFO  00:57:03,029 - Pocetak obrade programa Program na liniji 1
INFO  00:57:03,029 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:57:03,030 - Deklarisana konstanta c na liniji 2
INFO  00:57:03,030 - Deklarisana konstanta d na liniji 2
INFO  00:57:03,030 - Deklarisana konstanta g na liniji 2
INFO  00:57:03,030 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:57:03,031 - Deklarisana promenljiva e na liniji 3
INFO  00:57:03,031 - Pocetak obrade metode main na liniji 5
INFO  00:57:03,032 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:57:03,032 - Zavrsetak obrade programa Program na liniji 1
INFO  00:57:03,032 - ======================TABELA_SIMBOLA==========================
INFO  00:57:03,033 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:57:03,035 - ==============================================================
INFO  00:57:03,035 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:57:03,035 - ==============================================================
INFO  00:57:03,035 - ======================GENERISANJE_KODA========================
INFO  00:57:03,042 - Generisanje koda uspesno zavrseno!
INFO  00:57:03,042 - Generisanje izlaznog fajla test\program.obj
INFO  00:57:03,042 - ==============================================================
INFO  00:57:42,960 - Obrada ulaznog fajla test\program.mj
INFO  00:57:43,077 - #2 program
INFO  00:57:43,077 - #8 Program
INFO  00:57:43,077 - #5 const
INFO  00:57:43,078 - #8 int
INFO  00:57:43,079 - #8 c
INFO  00:57:43,080 - #24 =
INFO  00:57:43,080 - #9 10
INFO  00:57:43,080 - #28 ,
INFO  00:57:43,081 - #8 d
INFO  00:57:43,082 - #24 =
INFO  00:57:43,082 - #9 99
INFO  00:57:43,082 - #28 ,
INFO  00:57:43,082 - #8 g
INFO  00:57:43,082 - #24 =
INFO  00:57:43,082 - #9 2
INFO  00:57:43,082 - #27 ;
INFO  00:57:43,082 - #8 int
INFO  00:57:43,083 - #8 e
INFO  00:57:43,084 - #27 ;
INFO  00:57:43,084 - #20 {
INFO  00:57:43,085 - #6 void
INFO  00:57:43,085 - #8 main
INFO  00:57:43,085 - #29 (
INFO  00:57:43,086 - #30 )
INFO  00:57:43,086 - #20 {
INFO  00:57:43,086 - #8 e
INFO  00:57:43,086 - #24 =
INFO  00:57:43,086 - #9 1
INFO  00:57:43,086 - #27 ;
INFO  00:57:43,087 - #31 if
INFO  00:57:43,087 - #29 (
INFO  00:57:43,087 - #8 e
INFO  00:57:43,087 - #38 >
INFO  00:57:43,088 - #9 0
INFO  00:57:43,089 - #14 ||
INFO  00:57:43,089 - #8 e
INFO  00:57:43,089 - #38 >
INFO  00:57:43,089 - #9 5
INFO  00:57:43,089 - #13 &&
INFO  00:57:43,090 - #8 e
INFO  00:57:43,090 - #42 <=
INFO  00:57:43,090 - #8 d
INFO  00:57:43,090 - #30 )
INFO  00:57:43,091 - #20 {
INFO  00:57:43,091 - #3 print
INFO  00:57:43,091 - #29 (
INFO  00:57:43,091 - #8 e
INFO  00:57:43,091 - #30 )
INFO  00:57:43,091 - #27 ;
INFO  00:57:43,091 - #21 }
INFO  00:57:43,092 - #32 else
INFO  00:57:43,092 - #20 {
INFO  00:57:43,093 - #3 print
INFO  00:57:43,093 - #29 (
INFO  00:57:43,093 - #8 d
INFO  00:57:43,093 - #30 )
INFO  00:57:43,093 - #27 ;
INFO  00:57:43,093 - #21 }
INFO  00:57:43,093 - #21 }
INFO  00:57:43,093 - #21 }
INFO  00:57:43,094 - =====================SINTAKSNO_STABLO=========================
INFO  00:57:43,096 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           5
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:57:43,099 - ==============================================================
INFO  00:57:43,110 - Pocetak obrade programa Program na liniji 1
INFO  00:57:43,111 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:57:43,111 - Deklarisana konstanta c na liniji 2
INFO  00:57:43,112 - Deklarisana konstanta d na liniji 2
INFO  00:57:43,112 - Deklarisana konstanta g na liniji 2
INFO  00:57:43,112 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:57:43,112 - Deklarisana promenljiva e na liniji 3
INFO  00:57:43,113 - Pocetak obrade metode main na liniji 5
INFO  00:57:43,113 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:57:43,113 - Zavrsetak obrade programa Program na liniji 1
INFO  00:57:43,113 - ======================TABELA_SIMBOLA==========================
INFO  00:57:43,114 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:57:43,116 - ==============================================================
INFO  00:57:43,116 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:57:43,116 - ==============================================================
INFO  00:57:43,116 - ======================GENERISANJE_KODA========================
INFO  00:57:43,121 - Generisanje koda uspesno zavrseno!
INFO  00:57:43,121 - Generisanje izlaznog fajla test\program.obj
INFO  00:57:43,122 - ==============================================================
INFO  00:59:28,772 - Obrada ulaznog fajla test\program.mj
INFO  00:59:28,860 - #2 program
INFO  00:59:28,860 - #8 Program
INFO  00:59:28,861 - #5 const
INFO  00:59:28,862 - #8 int
INFO  00:59:28,862 - #8 c
INFO  00:59:28,863 - #24 =
INFO  00:59:28,863 - #9 10
INFO  00:59:28,863 - #28 ,
INFO  00:59:28,865 - #8 d
INFO  00:59:28,865 - #24 =
INFO  00:59:28,865 - #9 99
INFO  00:59:28,865 - #28 ,
INFO  00:59:28,866 - #8 g
INFO  00:59:28,866 - #24 =
INFO  00:59:28,866 - #9 2
INFO  00:59:28,866 - #27 ;
INFO  00:59:28,866 - #8 int
INFO  00:59:28,868 - #8 e
INFO  00:59:28,868 - #27 ;
INFO  00:59:28,868 - #20 {
INFO  00:59:28,869 - #6 void
INFO  00:59:28,870 - #8 main
INFO  00:59:28,870 - #29 (
INFO  00:59:28,871 - #30 )
INFO  00:59:28,871 - #20 {
INFO  00:59:28,871 - #8 e
INFO  00:59:28,871 - #24 =
INFO  00:59:28,871 - #9 1
INFO  00:59:28,871 - #27 ;
INFO  00:59:28,872 - #31 if
INFO  00:59:28,873 - #29 (
INFO  00:59:28,873 - #8 e
INFO  00:59:28,873 - #42 <=
INFO  00:59:28,873 - #8 d
INFO  00:59:28,875 - #14 ||
INFO  00:59:28,875 - #8 e
INFO  00:59:28,875 - #40 <
INFO  00:59:28,876 - #9 0
INFO  00:59:28,877 - #13 &&
INFO  00:59:28,877 - #8 e
INFO  00:59:28,878 - #39 ==
INFO  00:59:28,878 - #16 -
INFO  00:59:28,879 - #8 d
INFO  00:59:28,879 - #30 )
INFO  00:59:28,879 - #20 {
INFO  00:59:28,879 - #3 print
INFO  00:59:28,880 - #29 (
INFO  00:59:28,880 - #8 e
INFO  00:59:28,880 - #30 )
INFO  00:59:28,880 - #27 ;
INFO  00:59:28,880 - #21 }
INFO  00:59:28,880 - #32 else
INFO  00:59:28,882 - #20 {
INFO  00:59:28,882 - #3 print
INFO  00:59:28,882 - #29 (
INFO  00:59:28,882 - #8 d
INFO  00:59:28,883 - #30 )
INFO  00:59:28,883 - #27 ;
INFO  00:59:28,883 - #21 }
INFO  00:59:28,883 - #21 }
INFO  00:59:28,883 - #21 }
INFO  00:59:28,887 - =====================SINTAKSNO_STABLO=========================
INFO  00:59:28,889 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_eq(
                    ) [Rel_op_eq]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:59:28,894 - ==============================================================
INFO  00:59:28,911 - Pocetak obrade programa Program na liniji 1
INFO  00:59:28,918 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:59:28,919 - Deklarisana konstanta c na liniji 2
INFO  00:59:28,919 - Deklarisana konstanta d na liniji 2
INFO  00:59:28,919 - Deklarisana konstanta g na liniji 2
INFO  00:59:28,919 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:59:28,919 - Deklarisana promenljiva e na liniji 3
INFO  00:59:28,920 - Pocetak obrade metode main na liniji 5
INFO  00:59:28,921 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:59:28,921 - Zavrsetak obrade programa Program na liniji 1
INFO  00:59:28,921 - ======================TABELA_SIMBOLA==========================
INFO  00:59:28,923 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:59:28,923 - ==============================================================
INFO  00:59:28,923 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:59:28,923 - ==============================================================
INFO  00:59:28,924 - ======================GENERISANJE_KODA========================
INFO  00:59:28,931 - Generisanje koda uspesno zavrseno!
INFO  00:59:28,933 - Generisanje izlaznog fajla test\program.obj
INFO  00:59:28,933 - ==============================================================
INFO  01:02:38,325 - Obrada ulaznog fajla test\program.mj
INFO  01:02:38,426 - #2 program
INFO  01:02:38,426 - #8 Program
INFO  01:02:38,426 - #5 const
INFO  01:02:38,428 - #8 int
INFO  01:02:38,428 - #8 c
INFO  01:02:38,429 - #24 =
INFO  01:02:38,429 - #9 10
INFO  01:02:38,429 - #28 ,
INFO  01:02:38,430 - #8 d
INFO  01:02:38,430 - #24 =
INFO  01:02:38,431 - #9 99
INFO  01:02:38,431 - #28 ,
INFO  01:02:38,431 - #8 g
INFO  01:02:38,431 - #24 =
INFO  01:02:38,431 - #9 2
INFO  01:02:38,431 - #27 ;
INFO  01:02:38,431 - #8 int
INFO  01:02:38,433 - #8 e
INFO  01:02:38,433 - #27 ;
INFO  01:02:38,433 - #20 {
INFO  01:02:38,434 - #6 void
INFO  01:02:38,434 - #8 main
INFO  01:02:38,434 - #29 (
INFO  01:02:38,436 - #30 )
INFO  01:02:38,436 - #20 {
INFO  01:02:38,437 - #8 e
INFO  01:02:38,437 - #24 =
INFO  01:02:38,437 - #9 1
INFO  01:02:38,437 - #27 ;
INFO  01:02:38,445 - #31 if
INFO  01:02:38,445 - #29 (
INFO  01:02:38,446 - #8 e
INFO  01:02:38,446 - #42 <=
INFO  01:02:38,446 - #8 d
INFO  01:02:38,447 - #14 ||
INFO  01:02:38,448 - #8 e
INFO  01:02:38,448 - #40 <
INFO  01:02:38,448 - #9 0
INFO  01:02:38,449 - #13 &&
INFO  01:02:38,449 - #8 e
INFO  01:02:38,449 - #38 >
INFO  01:02:38,449 - #16 -
INFO  01:02:38,450 - #8 d
INFO  01:02:38,450 - #30 )
INFO  01:02:38,450 - #20 {
INFO  01:02:38,450 - #3 print
INFO  01:02:38,450 - #29 (
INFO  01:02:38,451 - #8 e
INFO  01:02:38,451 - #30 )
INFO  01:02:38,451 - #27 ;
INFO  01:02:38,451 - #21 }
INFO  01:02:38,451 - #32 else
INFO  01:02:38,453 - #20 {
INFO  01:02:38,453 - #3 print
INFO  01:02:38,453 - #29 (
INFO  01:02:38,453 - #8 d
INFO  01:02:38,453 - #30 )
INFO  01:02:38,453 - #27 ;
INFO  01:02:38,453 - #21 }
INFO  01:02:38,454 - #21 }
INFO  01:02:38,454 - #21 }
INFO  01:02:38,455 - =====================SINTAKSNO_STABLO=========================
INFO  01:02:38,457 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  01:02:38,457 - ==============================================================
INFO  01:02:38,472 - Pocetak obrade programa Program na liniji 1
INFO  01:02:38,473 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  01:02:38,474 - Deklarisana konstanta c na liniji 2
INFO  01:02:38,474 - Deklarisana konstanta d na liniji 2
INFO  01:02:38,474 - Deklarisana konstanta g na liniji 2
INFO  01:02:38,474 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  01:02:38,474 - Deklarisana promenljiva e na liniji 3
INFO  01:02:38,475 - Pocetak obrade metode main na liniji 5
INFO  01:02:38,475 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  01:02:38,475 - Zavrsetak obrade programa Program na liniji 1
INFO  01:02:38,475 - ======================TABELA_SIMBOLA==========================
INFO  01:02:38,477 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  01:02:38,477 - ==============================================================
INFO  01:02:38,477 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  01:02:38,477 - ==============================================================
INFO  01:02:38,477 - ======================GENERISANJE_KODA========================
INFO  01:02:38,482 - Generisanje koda uspesno zavrseno!
INFO  01:02:38,483 - Generisanje izlaznog fajla test\program.obj
INFO  01:02:38,483 - ==============================================================
INFO  01:09:59,935 - Obrada ulaznog fajla test\program.mj
INFO  01:10:00,039 - #2 program
INFO  01:10:00,039 - #8 Program
INFO  01:10:00,039 - #5 const
INFO  01:10:00,041 - #8 int
INFO  01:10:00,041 - #8 c
INFO  01:10:00,043 - #24 =
INFO  01:10:00,043 - #9 10
INFO  01:10:00,043 - #28 ,
INFO  01:10:00,045 - #8 d
INFO  01:10:00,045 - #24 =
INFO  01:10:00,045 - #9 99
INFO  01:10:00,045 - #28 ,
INFO  01:10:00,046 - #8 g
INFO  01:10:00,046 - #24 =
INFO  01:10:00,046 - #9 2
INFO  01:10:00,046 - #27 ;
INFO  01:10:00,046 - #8 int
INFO  01:10:00,048 - #8 e
INFO  01:10:00,048 - #27 ;
INFO  01:10:00,049 - #20 {
INFO  01:10:00,050 - #6 void
INFO  01:10:00,050 - #8 main
INFO  01:10:00,051 - #29 (
INFO  01:10:00,052 - #30 )
INFO  01:10:00,052 - #20 {
INFO  01:10:00,053 - #8 e
INFO  01:10:00,053 - #24 =
INFO  01:10:00,053 - #9 1
INFO  01:10:00,053 - #27 ;
INFO  01:10:00,054 - #31 if
INFO  01:10:00,054 - #29 (
INFO  01:10:00,054 - #8 e
INFO  01:10:00,054 - #42 <=
INFO  01:10:00,054 - #8 d
INFO  01:10:00,056 - #14 ||
INFO  01:10:00,057 - #8 e
INFO  01:10:00,057 - #40 <
INFO  01:10:00,057 - #9 0
INFO  01:10:00,058 - #13 &&
INFO  01:10:00,058 - #8 e
INFO  01:10:00,058 - #38 >
INFO  01:10:00,058 - #16 -
INFO  01:10:00,060 - #8 d
INFO  01:10:00,060 - #30 )
INFO  01:10:00,061 - #20 {
INFO  01:10:00,061 - #3 print
INFO  01:10:00,062 - #29 (
INFO  01:10:00,062 - #8 e
INFO  01:10:00,062 - #30 )
INFO  01:10:00,062 - #27 ;
INFO  01:10:00,063 - #21 }
INFO  01:10:00,064 - #32 else
INFO  01:10:00,067 - #20 {
INFO  01:10:00,068 - #3 print
INFO  01:10:00,068 - #29 (
INFO  01:10:00,068 - #8 d
INFO  01:10:00,068 - #30 )
INFO  01:10:00,068 - #27 ;
INFO  01:10:00,068 - #21 }
INFO  01:10:00,070 - #21 }
INFO  01:10:00,071 - #21 }
INFO  01:10:00,072 - =====================SINTAKSNO_STABLO=========================
INFO  01:10:00,074 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_single(
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_single]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  01:10:00,075 - ==============================================================
INFO  01:10:00,089 - Pocetak obrade programa Program na liniji 1
INFO  01:10:00,090 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  01:10:00,090 - Deklarisana konstanta c na liniji 2
INFO  01:10:00,093 - Deklarisana konstanta d na liniji 2
INFO  01:10:00,094 - Deklarisana konstanta g na liniji 2
INFO  01:10:00,095 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  01:10:00,095 - Deklarisana promenljiva e na liniji 3
INFO  01:10:00,096 - Pocetak obrade metode main na liniji 5
INFO  01:10:00,096 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  01:10:00,096 - Zavrsetak obrade programa Program na liniji 1
INFO  01:10:00,096 - ======================TABELA_SIMBOLA==========================
INFO  01:10:00,100 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  01:10:00,100 - ==============================================================
INFO  01:10:00,100 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  01:10:00,100 - ==============================================================
INFO  01:10:00,100 - ======================GENERISANJE_KODA========================
INFO  01:10:00,106 - Generisanje koda uspesno zavrseno!
INFO  01:10:00,106 - Generisanje izlaznog fajla test\program.obj
INFO  01:10:00,107 - ==============================================================
INFO  01:31:01,680 - Obrada ulaznog fajla test\program.mj
INFO  01:31:01,783 - #2 program
INFO  01:31:01,784 - #8 Program
INFO  01:31:01,784 - #5 const
INFO  01:31:01,785 - #8 int
INFO  01:31:01,785 - #8 c
INFO  01:31:01,786 - #24 =
INFO  01:31:01,786 - #9 10
INFO  01:31:01,787 - #28 ,
INFO  01:31:01,788 - #8 d
INFO  01:31:01,788 - #24 =
INFO  01:31:01,788 - #9 99
INFO  01:31:01,788 - #28 ,
INFO  01:31:01,788 - #8 g
INFO  01:31:01,789 - #24 =
INFO  01:31:01,789 - #9 2
INFO  01:31:01,789 - #27 ;
INFO  01:31:01,789 - #8 int
INFO  01:31:01,791 - #8 e
INFO  01:31:01,791 - #27 ;
INFO  01:31:01,792 - #20 {
INFO  01:31:01,794 - #6 void
INFO  01:31:01,794 - #8 main
INFO  01:31:01,794 - #29 (
INFO  01:31:01,795 - #30 )
INFO  01:31:01,796 - #20 {
INFO  01:31:01,796 - #8 e
INFO  01:31:01,796 - #24 =
INFO  01:31:01,796 - #9 1
INFO  01:31:01,796 - #27 ;
INFO  01:31:01,797 - #31 if
INFO  01:31:01,797 - #29 (
INFO  01:31:01,797 - #8 e
INFO  01:31:01,797 - #42 <=
INFO  01:31:01,797 - #8 d
INFO  01:31:01,799 - #14 ||
INFO  01:31:01,800 - #8 e
INFO  01:31:01,800 - #40 <
INFO  01:31:01,800 - #9 0
INFO  01:31:01,802 - #13 &&
INFO  01:31:01,802 - #8 e
INFO  01:31:01,802 - #38 >
INFO  01:31:01,802 - #16 -
INFO  01:31:01,803 - #8 d
INFO  01:31:01,803 - #30 )
INFO  01:31:01,804 - #20 {
INFO  01:31:01,804 - #3 print
INFO  01:31:01,804 - #29 (
INFO  01:31:01,804 - #8 e
INFO  01:31:01,804 - #30 )
INFO  01:31:01,804 - #27 ;
INFO  01:31:01,804 - #21 }
INFO  01:31:01,804 - #21 }
ERROR 01:31:01,806 - Sintaksna greska na liniji -1, koloni -1!
ERROR 01:31:01,807 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1, koloni -1!
INFO  01:31:01,807 - Ulazni fajl ima sintaksne greske!
INFO  01:31:07,034 - Obrada ulaznog fajla test\program.mj
INFO  01:31:07,139 - #2 program
INFO  01:31:07,139 - #8 Program
INFO  01:31:07,139 - #5 const
INFO  01:31:07,140 - #8 int
INFO  01:31:07,140 - #8 c
INFO  01:31:07,141 - #24 =
INFO  01:31:07,141 - #9 10
INFO  01:31:07,142 - #28 ,
INFO  01:31:07,143 - #8 d
INFO  01:31:07,143 - #24 =
INFO  01:31:07,143 - #9 99
INFO  01:31:07,144 - #28 ,
INFO  01:31:07,144 - #8 g
INFO  01:31:07,144 - #24 =
INFO  01:31:07,144 - #9 2
INFO  01:31:07,144 - #27 ;
INFO  01:31:07,144 - #8 int
INFO  01:31:07,146 - #8 e
INFO  01:31:07,146 - #27 ;
INFO  01:31:07,147 - #20 {
INFO  01:31:07,148 - #6 void
INFO  01:31:07,148 - #8 main
INFO  01:31:07,149 - #29 (
INFO  01:31:07,150 - #30 )
INFO  01:31:07,151 - #20 {
INFO  01:31:07,151 - #8 e
INFO  01:31:07,151 - #24 =
INFO  01:31:07,151 - #9 1
INFO  01:31:07,151 - #27 ;
INFO  01:31:07,152 - #31 if
INFO  01:31:07,152 - #29 (
INFO  01:31:07,152 - #8 e
INFO  01:31:07,153 - #42 <=
INFO  01:31:07,153 - #8 d
INFO  01:31:07,154 - #14 ||
INFO  01:31:07,155 - #8 e
INFO  01:31:07,155 - #40 <
INFO  01:31:07,155 - #9 0
INFO  01:31:07,156 - #13 &&
INFO  01:31:07,156 - #8 e
INFO  01:31:07,156 - #38 >
INFO  01:31:07,157 - #16 -
INFO  01:31:07,159 - #8 d
INFO  01:31:07,159 - #30 )
INFO  01:31:07,160 - #20 {
INFO  01:31:07,160 - #3 print
INFO  01:31:07,160 - #29 (
INFO  01:31:07,160 - #8 e
INFO  01:31:07,161 - #30 )
INFO  01:31:07,161 - #27 ;
INFO  01:31:07,161 - #21 }
INFO  01:31:07,161 - #21 }
ERROR 01:31:07,162 - Sintaksna greska na liniji -1, koloni -1!
ERROR 01:31:07,164 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1, koloni -1!
INFO  01:31:07,164 - Ulazni fajl ima sintaksne greske!
INFO  01:31:22,326 - Obrada ulaznog fajla test\program.mj
INFO  01:31:22,438 - #2 program
INFO  01:31:22,439 - #8 Program
INFO  01:31:22,439 - #5 const
INFO  01:31:22,439 - #8 int
INFO  01:31:22,439 - #8 c
INFO  01:31:22,440 - #24 =
INFO  01:31:22,440 - #9 10
INFO  01:31:22,440 - #28 ,
INFO  01:31:22,442 - #8 d
INFO  01:31:22,442 - #24 =
INFO  01:31:22,442 - #9 99
INFO  01:31:22,442 - #28 ,
INFO  01:31:22,443 - #8 g
INFO  01:31:22,443 - #24 =
INFO  01:31:22,443 - #9 2
INFO  01:31:22,443 - #27 ;
INFO  01:31:22,443 - #8 int
INFO  01:31:22,444 - #8 e
INFO  01:31:22,445 - #27 ;
INFO  01:31:22,445 - #20 {
INFO  01:31:22,446 - #6 void
INFO  01:31:22,446 - #8 main
INFO  01:31:22,446 - #29 (
INFO  01:31:22,447 - #30 )
INFO  01:31:22,447 - #20 {
INFO  01:31:22,447 - #8 e
INFO  01:31:22,448 - #24 =
INFO  01:31:22,448 - #9 1
INFO  01:31:22,448 - #27 ;
INFO  01:31:22,449 - #31 if
INFO  01:31:22,449 - #29 (
INFO  01:31:22,449 - #8 e
INFO  01:31:22,449 - #42 <=
INFO  01:31:22,449 - #8 d
INFO  01:31:22,451 - #14 ||
INFO  01:31:22,451 - #8 e
INFO  01:31:22,451 - #40 <
INFO  01:31:22,451 - #9 0
INFO  01:31:22,452 - #13 &&
INFO  01:31:22,452 - #8 e
INFO  01:31:22,452 - #38 >
INFO  01:31:22,453 - #16 -
INFO  01:31:22,455 - #8 d
INFO  01:31:22,455 - #30 )
INFO  01:31:22,455 - #20 {
INFO  01:31:22,455 - #3 print
INFO  01:31:22,456 - #29 (
INFO  01:31:22,456 - #8 e
INFO  01:31:22,456 - #30 )
INFO  01:31:22,456 - #27 ;
INFO  01:31:22,456 - #21 }
INFO  01:31:22,456 - #21 }
INFO  01:31:22,457 - #21 }
INFO  01:31:22,458 - =====================SINTAKSNO_STABLO=========================
INFO  01:31:22,466 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  01:31:22,467 - ==============================================================
INFO  01:31:22,481 - Pocetak obrade programa Program na liniji 1
INFO  01:31:22,481 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  01:31:22,484 - Deklarisana konstanta c na liniji 2
INFO  01:31:22,484 - Deklarisana konstanta d na liniji 2
INFO  01:31:22,484 - Deklarisana konstanta g na liniji 2
INFO  01:31:22,484 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  01:31:22,484 - Deklarisana promenljiva e na liniji 3
INFO  01:31:22,485 - Pocetak obrade metode main na liniji 5
INFO  01:31:22,486 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  01:31:22,486 - Zavrsetak obrade programa Program na liniji 1
INFO  01:31:22,486 - ======================TABELA_SIMBOLA==========================
INFO  01:31:22,487 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  01:31:22,487 - ==============================================================
INFO  01:31:22,487 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  01:31:22,487 - ==============================================================
INFO  01:31:22,487 - ======================GENERISANJE_KODA========================
INFO  01:31:22,493 - Generisanje koda uspesno zavrseno!
INFO  01:31:22,493 - Generisanje izlaznog fajla test\program.obj
INFO  01:31:22,493 - ==============================================================
INFO  01:34:59,032 - Obrada ulaznog fajla test\program.mj
INFO  01:34:59,125 - #2 program
INFO  01:34:59,125 - #8 Program
INFO  01:34:59,125 - #5 const
INFO  01:34:59,126 - #8 int
INFO  01:34:59,126 - #8 c
INFO  01:34:59,127 - #24 =
INFO  01:34:59,127 - #9 10
INFO  01:34:59,127 - #28 ,
INFO  01:34:59,128 - #8 d
INFO  01:34:59,128 - #24 =
INFO  01:34:59,128 - #9 99
INFO  01:34:59,129 - #28 ,
INFO  01:34:59,129 - #8 g
INFO  01:34:59,129 - #24 =
INFO  01:34:59,129 - #9 2
INFO  01:34:59,129 - #27 ;
INFO  01:34:59,129 - #8 int
INFO  01:34:59,131 - #8 e
INFO  01:34:59,131 - #27 ;
INFO  01:34:59,132 - #20 {
INFO  01:34:59,133 - #6 void
INFO  01:34:59,133 - #8 main
INFO  01:34:59,133 - #29 (
INFO  01:34:59,134 - #30 )
INFO  01:34:59,136 - #20 {
INFO  01:34:59,136 - #8 e
INFO  01:34:59,136 - #24 =
INFO  01:34:59,136 - #9 1
INFO  01:34:59,136 - #27 ;
INFO  01:34:59,138 - #31 if
INFO  01:34:59,138 - #29 (
INFO  01:34:59,138 - #11 true
INFO  01:34:59,138 - #30 )
INFO  01:34:59,139 - #20 {
INFO  01:34:59,139 - #3 print
INFO  01:34:59,139 - #29 (
INFO  01:34:59,140 - #8 e
INFO  01:34:59,140 - #30 )
INFO  01:34:59,140 - #27 ;
INFO  01:34:59,140 - #21 }
INFO  01:34:59,140 - #21 }
INFO  01:34:59,142 - #21 }
INFO  01:34:59,143 - =====================SINTAKSNO_STABLO=========================
INFO  01:34:59,150 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  01:34:59,151 - ==============================================================
INFO  01:34:59,172 - Pocetak obrade programa Program na liniji 1
INFO  01:34:59,172 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  01:34:59,173 - Deklarisana konstanta c na liniji 2
INFO  01:34:59,173 - Deklarisana konstanta d na liniji 2
INFO  01:34:59,173 - Deklarisana konstanta g na liniji 2
INFO  01:34:59,173 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  01:34:59,173 - Deklarisana promenljiva e na liniji 3
INFO  01:34:59,174 - Pocetak obrade metode main na liniji 5
INFO  01:34:59,176 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  01:34:59,176 - Zavrsetak obrade programa Program na liniji 1
INFO  01:34:59,176 - ======================TABELA_SIMBOLA==========================
INFO  01:34:59,177 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  01:34:59,177 - ==============================================================
INFO  01:34:59,177 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  01:34:59,177 - ==============================================================
INFO  01:34:59,178 - ======================GENERISANJE_KODA========================
INFO  01:34:59,184 - Generisanje koda uspesno zavrseno!
INFO  01:34:59,185 - Generisanje izlaznog fajla test\program.obj
INFO  01:34:59,186 - ==============================================================
INFO  01:35:04,518 - Obrada ulaznog fajla test\program.mj
INFO  01:35:04,676 - #2 program
INFO  01:35:04,676 - #8 Program
INFO  01:35:04,676 - #5 const
INFO  01:35:04,677 - #8 int
INFO  01:35:04,678 - #8 c
INFO  01:35:04,680 - #24 =
INFO  01:35:04,681 - #9 10
INFO  01:35:04,681 - #28 ,
INFO  01:35:04,682 - #8 d
INFO  01:35:04,682 - #24 =
INFO  01:35:04,682 - #9 99
INFO  01:35:04,683 - #28 ,
INFO  01:35:04,683 - #8 g
INFO  01:35:04,683 - #24 =
INFO  01:35:04,683 - #9 2
INFO  01:35:04,683 - #27 ;
INFO  01:35:04,683 - #8 int
INFO  01:35:04,685 - #8 e
INFO  01:35:04,685 - #27 ;
INFO  01:35:04,685 - #20 {
INFO  01:35:04,690 - #6 void
INFO  01:35:04,690 - #8 main
INFO  01:35:04,690 - #29 (
INFO  01:35:04,691 - #30 )
INFO  01:35:04,691 - #20 {
INFO  01:35:04,692 - #8 e
INFO  01:35:04,694 - #24 =
INFO  01:35:04,694 - #9 1
INFO  01:35:04,694 - #27 ;
INFO  01:35:04,695 - #31 if
INFO  01:35:04,695 - #29 (
INFO  01:35:04,695 - #11 true
INFO  01:35:04,696 - #30 )
INFO  01:35:04,696 - #20 {
INFO  01:35:04,696 - #3 print
INFO  01:35:04,696 - #29 (
INFO  01:35:04,696 - #8 e
INFO  01:35:04,697 - #30 )
INFO  01:35:04,697 - #27 ;
INFO  01:35:04,697 - #21 }
INFO  01:35:04,697 - #21 }
INFO  01:35:04,699 - #21 }
INFO  01:35:04,700 - =====================SINTAKSNO_STABLO=========================
INFO  01:35:04,709 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  01:35:04,709 - ==============================================================
INFO  01:35:04,722 - Pocetak obrade programa Program na liniji 1
INFO  01:35:04,722 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  01:35:04,723 - Deklarisana konstanta c na liniji 2
INFO  01:35:04,723 - Deklarisana konstanta d na liniji 2
INFO  01:35:04,723 - Deklarisana konstanta g na liniji 2
INFO  01:35:04,723 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  01:35:04,723 - Deklarisana promenljiva e na liniji 3
INFO  01:35:04,725 - Pocetak obrade metode main na liniji 5
INFO  01:35:04,725 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  01:35:04,725 - Zavrsetak obrade programa Program na liniji 1
INFO  01:35:04,725 - ======================TABELA_SIMBOLA==========================
INFO  01:35:04,726 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  01:35:04,726 - ==============================================================
INFO  01:35:04,726 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  01:35:04,726 - ==============================================================
INFO  01:35:04,726 - ======================GENERISANJE_KODA========================
INFO  01:35:04,731 - Generisanje koda uspesno zavrseno!
INFO  01:35:04,732 - Generisanje izlaznog fajla test\program.obj
INFO  01:35:04,732 - ==============================================================
INFO  01:35:16,275 - Obrada ulaznog fajla test\program.mj
INFO  01:35:16,393 - #2 program
INFO  01:35:16,394 - #8 Program
INFO  01:35:16,394 - #5 const
INFO  01:35:16,395 - #8 int
INFO  01:35:16,395 - #8 c
INFO  01:35:16,396 - #24 =
INFO  01:35:16,396 - #9 10
INFO  01:35:16,396 - #28 ,
INFO  01:35:16,398 - #8 d
INFO  01:35:16,398 - #24 =
INFO  01:35:16,398 - #9 99
INFO  01:35:16,398 - #28 ,
INFO  01:35:16,398 - #8 g
INFO  01:35:16,399 - #24 =
INFO  01:35:16,399 - #9 2
INFO  01:35:16,399 - #27 ;
INFO  01:35:16,399 - #8 int
INFO  01:35:16,404 - #8 e
INFO  01:35:16,404 - #27 ;
INFO  01:35:16,404 - #20 {
INFO  01:35:16,407 - #6 void
INFO  01:35:16,407 - #8 main
INFO  01:35:16,407 - #29 (
INFO  01:35:16,408 - #30 )
INFO  01:35:16,409 - #20 {
INFO  01:35:16,409 - #8 e
INFO  01:35:16,409 - #24 =
INFO  01:35:16,409 - #9 1
INFO  01:35:16,409 - #27 ;
INFO  01:35:16,410 - #31 if
INFO  01:35:16,410 - #29 (
INFO  01:35:16,411 - #12 false
INFO  01:35:16,411 - #30 )
INFO  01:35:16,412 - #20 {
INFO  01:35:16,412 - #3 print
INFO  01:35:16,412 - #29 (
INFO  01:35:16,412 - #8 e
INFO  01:35:16,412 - #30 )
INFO  01:35:16,412 - #27 ;
INFO  01:35:16,412 - #21 }
INFO  01:35:16,413 - #21 }
INFO  01:35:16,414 - #21 }
INFO  01:35:16,421 - =====================SINTAKSNO_STABLO=========================
INFO  01:35:16,422 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  01:35:16,423 - ==============================================================
INFO  01:35:16,446 - Pocetak obrade programa Program na liniji 1
INFO  01:35:16,446 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  01:35:16,447 - Deklarisana konstanta c na liniji 2
INFO  01:35:16,447 - Deklarisana konstanta d na liniji 2
INFO  01:35:16,448 - Deklarisana konstanta g na liniji 2
INFO  01:35:16,448 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  01:35:16,449 - Deklarisana promenljiva e na liniji 3
INFO  01:35:16,450 - Pocetak obrade metode main na liniji 5
INFO  01:35:16,450 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  01:35:16,452 - Zavrsetak obrade programa Program na liniji 1
INFO  01:35:16,453 - ======================TABELA_SIMBOLA==========================
INFO  01:35:16,453 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  01:35:16,453 - ==============================================================
INFO  01:35:16,454 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  01:35:16,454 - ==============================================================
INFO  01:35:16,454 - ======================GENERISANJE_KODA========================
INFO  01:35:16,461 - Generisanje koda uspesno zavrseno!
INFO  01:35:16,461 - Generisanje izlaznog fajla test\program.obj
INFO  01:35:16,462 - ==============================================================
INFO  01:43:29,107 - Obrada ulaznog fajla test\program.mj
INFO  01:43:29,221 - #2 program
INFO  01:43:29,221 - #8 Program
INFO  01:43:29,221 - #5 const
INFO  01:43:29,223 - #8 int
INFO  01:43:29,223 - #8 c
INFO  01:43:29,224 - #24 =
INFO  01:43:29,224 - #9 10
INFO  01:43:29,224 - #28 ,
INFO  01:43:29,226 - #8 d
INFO  01:43:29,226 - #24 =
INFO  01:43:29,226 - #9 99
INFO  01:43:29,227 - #28 ,
INFO  01:43:29,227 - #8 g
INFO  01:43:29,227 - #24 =
INFO  01:43:29,227 - #9 2
INFO  01:43:29,227 - #27 ;
INFO  01:43:29,228 - #8 int
INFO  01:43:29,229 - #8 e
INFO  01:43:29,230 - #27 ;
INFO  01:43:29,230 - #20 {
INFO  01:43:29,232 - #6 void
INFO  01:43:29,232 - #8 main
INFO  01:43:29,232 - #29 (
INFO  01:43:29,233 - #30 )
INFO  01:43:29,233 - #20 {
INFO  01:43:29,233 - #8 e
INFO  01:43:29,234 - #24 =
INFO  01:43:29,234 - #9 1
INFO  01:43:29,234 - #27 ;
INFO  01:43:29,235 - #31 if
INFO  01:43:29,235 - #29 (
INFO  01:43:29,235 - #8 e
INFO  01:43:29,235 - #42 <=
INFO  01:43:29,236 - #8 d
INFO  01:43:29,237 - #14 ||
INFO  01:43:29,237 - #8 e
INFO  01:43:29,238 - #40 <
INFO  01:43:29,238 - #9 0
INFO  01:43:29,238 - #13 &&
INFO  01:43:29,238 - #8 e
INFO  01:43:29,238 - #38 >
INFO  01:43:29,239 - #16 -
INFO  01:43:29,239 - #8 d
INFO  01:43:29,239 - #30 )
INFO  01:43:29,240 - #20 {
INFO  01:43:29,240 - #3 print
INFO  01:43:29,240 - #29 (
INFO  01:43:29,240 - #8 e
INFO  01:43:29,240 - #30 )
INFO  01:43:29,240 - #27 ;
INFO  01:43:29,240 - #21 }
INFO  01:43:29,241 - #21 }
INFO  01:43:29,242 - #21 }
INFO  01:43:29,243 - =====================SINTAKSNO_STABLO=========================
INFO  01:43:29,245 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  01:43:29,246 - ==============================================================
INFO  01:43:29,259 - Pocetak obrade programa Program na liniji 1
INFO  01:43:29,260 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  01:43:29,261 - Deklarisana konstanta c na liniji 2
INFO  01:43:29,262 - Deklarisana konstanta d na liniji 2
INFO  01:43:29,262 - Deklarisana konstanta g na liniji 2
INFO  01:43:29,262 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  01:43:29,262 - Deklarisana promenljiva e na liniji 3
INFO  01:43:29,263 - Pocetak obrade metode main na liniji 5
INFO  01:43:29,264 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  01:43:29,264 - Zavrsetak obrade programa Program na liniji 1
INFO  01:43:29,264 - ======================TABELA_SIMBOLA==========================
INFO  01:43:29,265 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  01:43:29,265 - ==============================================================
INFO  01:43:29,265 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  01:43:29,265 - ==============================================================
INFO  01:43:29,265 - ======================GENERISANJE_KODA========================
INFO  01:43:29,270 - Generisanje koda uspesno zavrseno!
INFO  01:43:29,270 - Generisanje izlaznog fajla test\program.obj
INFO  01:43:29,270 - ==============================================================
INFO  01:43:33,631 - Obrada ulaznog fajla test\program.mj
INFO  01:43:33,711 - #2 program
INFO  01:43:33,711 - #8 Program
INFO  01:43:33,711 - #5 const
INFO  01:43:33,713 - #8 int
INFO  01:43:33,713 - #8 c
INFO  01:43:33,714 - #24 =
INFO  01:43:33,714 - #9 10
INFO  01:43:33,714 - #28 ,
INFO  01:43:33,715 - #8 d
INFO  01:43:33,716 - #24 =
INFO  01:43:33,716 - #9 99
INFO  01:43:33,716 - #28 ,
INFO  01:43:33,716 - #8 g
INFO  01:43:33,716 - #24 =
INFO  01:43:33,716 - #9 2
INFO  01:43:33,716 - #27 ;
INFO  01:43:33,716 - #8 int
INFO  01:43:33,718 - #8 e
INFO  01:43:33,718 - #27 ;
INFO  01:43:33,718 - #20 {
INFO  01:43:33,720 - #6 void
INFO  01:43:33,720 - #8 main
INFO  01:43:33,720 - #29 (
INFO  01:43:33,721 - #30 )
INFO  01:43:33,721 - #20 {
INFO  01:43:33,721 - #8 e
INFO  01:43:33,721 - #24 =
INFO  01:43:33,721 - #9 1
INFO  01:43:33,721 - #27 ;
INFO  01:43:33,722 - #31 if
INFO  01:43:33,722 - #29 (
INFO  01:43:33,723 - #8 e
INFO  01:43:33,723 - #42 <=
INFO  01:43:33,723 - #8 d
INFO  01:43:33,724 - #14 ||
INFO  01:43:33,725 - #8 e
INFO  01:43:33,725 - #40 <
INFO  01:43:33,725 - #9 0
INFO  01:43:33,726 - #13 &&
INFO  01:43:33,726 - #8 e
INFO  01:43:33,726 - #38 >
INFO  01:43:33,727 - #16 -
INFO  01:43:33,727 - #8 d
INFO  01:43:33,728 - #30 )
INFO  01:43:33,728 - #20 {
INFO  01:43:33,729 - #3 print
INFO  01:43:33,729 - #29 (
INFO  01:43:33,729 - #8 e
INFO  01:43:33,729 - #30 )
INFO  01:43:33,729 - #27 ;
INFO  01:43:33,730 - #21 }
INFO  01:43:33,731 - #21 }
INFO  01:43:33,732 - #21 }
INFO  01:43:33,736 - =====================SINTAKSNO_STABLO=========================
INFO  01:43:33,738 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  01:43:33,739 - ==============================================================
INFO  01:43:33,756 - Pocetak obrade programa Program na liniji 1
INFO  01:43:33,756 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  01:43:33,757 - Deklarisana konstanta c na liniji 2
INFO  01:43:33,757 - Deklarisana konstanta d na liniji 2
INFO  01:43:33,757 - Deklarisana konstanta g na liniji 2
INFO  01:43:33,758 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  01:43:33,758 - Deklarisana promenljiva e na liniji 3
INFO  01:43:33,759 - Pocetak obrade metode main na liniji 5
INFO  01:43:33,759 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  01:43:33,759 - Zavrsetak obrade programa Program na liniji 1
INFO  01:43:33,759 - ======================TABELA_SIMBOLA==========================
INFO  01:43:33,760 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  01:43:33,760 - ==============================================================
INFO  01:43:33,760 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  01:43:33,760 - ==============================================================
INFO  01:43:33,760 - ======================GENERISANJE_KODA========================
INFO  01:43:33,767 - Generisanje koda uspesno zavrseno!
INFO  01:43:33,767 - Generisanje izlaznog fajla test\program.obj
INFO  01:43:33,767 - ==============================================================
INFO  01:50:07,047 - Obrada ulaznog fajla test\program.mj
INFO  01:50:07,135 - #2 program
INFO  01:50:07,135 - #8 Program
INFO  01:50:07,135 - #5 const
INFO  01:50:07,136 - #8 int
INFO  01:50:07,136 - #8 c
INFO  01:50:07,137 - #24 =
INFO  01:50:07,137 - #9 10
INFO  01:50:07,138 - #28 ,
INFO  01:50:07,139 - #8 d
INFO  01:50:07,139 - #24 =
INFO  01:50:07,139 - #9 99
INFO  01:50:07,139 - #28 ,
INFO  01:50:07,139 - #8 g
INFO  01:50:07,139 - #24 =
INFO  01:50:07,139 - #9 2
INFO  01:50:07,139 - #27 ;
INFO  01:50:07,139 - #8 int
INFO  01:50:07,141 - #8 e
INFO  01:50:07,141 - #27 ;
INFO  01:50:07,141 - #20 {
INFO  01:50:07,142 - #6 void
INFO  01:50:07,142 - #8 main
INFO  01:50:07,142 - #29 (
INFO  01:50:07,144 - #30 )
INFO  01:50:07,144 - #20 {
INFO  01:50:07,144 - #8 e
INFO  01:50:07,144 - #24 =
INFO  01:50:07,144 - #9 1
INFO  01:50:07,145 - #27 ;
INFO  01:50:07,145 - #31 if
INFO  01:50:07,146 - #29 (
INFO  01:50:07,146 - #8 e
INFO  01:50:07,146 - #42 <=
INFO  01:50:07,146 - #8 d
INFO  01:50:07,148 - #14 ||
INFO  01:50:07,149 - #8 e
INFO  01:50:07,149 - #40 <
INFO  01:50:07,149 - #9 0
INFO  01:50:07,150 - #13 &&
INFO  01:50:07,150 - #8 e
INFO  01:50:07,150 - #38 >
INFO  01:50:07,150 - #16 -
INFO  01:50:07,151 - #8 d
INFO  01:50:07,151 - #30 )
INFO  01:50:07,151 - #20 {
INFO  01:50:07,151 - #3 print
INFO  01:50:07,152 - #29 (
INFO  01:50:07,152 - #8 e
INFO  01:50:07,152 - #30 )
INFO  01:50:07,152 - #27 ;
INFO  01:50:07,152 - #21 }
INFO  01:50:07,152 - #21 }
INFO  01:50:07,154 - #21 }
INFO  01:50:07,154 - =====================SINTAKSNO_STABLO=========================
INFO  01:50:07,157 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  01:50:07,158 - ==============================================================
INFO  01:50:07,172 - Pocetak obrade programa Program na liniji 1
INFO  01:50:07,172 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  01:50:07,174 - Deklarisana konstanta c na liniji 2
INFO  01:50:07,174 - Deklarisana konstanta d na liniji 2
INFO  01:50:07,174 - Deklarisana konstanta g na liniji 2
INFO  01:50:07,174 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  01:50:07,174 - Deklarisana promenljiva e na liniji 3
INFO  01:50:07,175 - Pocetak obrade metode main na liniji 5
INFO  01:50:07,176 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  01:50:07,176 - Zavrsetak obrade programa Program na liniji 1
INFO  01:50:07,176 - ======================TABELA_SIMBOLA==========================
INFO  01:50:07,177 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  01:50:07,177 - ==============================================================
INFO  01:50:07,177 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  01:50:07,177 - ==============================================================
INFO  01:50:07,177 - ======================GENERISANJE_KODA========================
INFO  01:50:07,183 - Generisanje koda uspesno zavrseno!
INFO  01:50:07,184 - Generisanje izlaznog fajla test\program.obj
INFO  01:50:07,184 - ==============================================================
INFO  01:50:39,640 - Obrada ulaznog fajla test\program.mj
INFO  01:50:39,738 - #2 program
INFO  01:50:39,739 - #8 Program
INFO  01:50:39,739 - #5 const
INFO  01:50:39,740 - #8 int
INFO  01:50:39,740 - #8 c
INFO  01:50:39,740 - #24 =
INFO  01:50:39,740 - #9 10
INFO  01:50:39,741 - #28 ,
INFO  01:50:39,742 - #8 d
INFO  01:50:39,742 - #24 =
INFO  01:50:39,742 - #9 99
INFO  01:50:39,742 - #28 ,
INFO  01:50:39,742 - #8 g
INFO  01:50:39,742 - #24 =
INFO  01:50:39,742 - #9 2
INFO  01:50:39,742 - #27 ;
INFO  01:50:39,742 - #8 int
INFO  01:50:39,743 - #8 e
INFO  01:50:39,743 - #27 ;
INFO  01:50:39,744 - #20 {
INFO  01:50:39,748 - #6 void
INFO  01:50:39,748 - #8 main
INFO  01:50:39,748 - #29 (
INFO  01:50:39,749 - #30 )
INFO  01:50:39,749 - #20 {
INFO  01:50:39,749 - #8 e
INFO  01:50:39,749 - #24 =
INFO  01:50:39,749 - #9 1
INFO  01:50:39,749 - #27 ;
INFO  01:50:39,750 - #31 if
INFO  01:50:39,750 - #29 (
INFO  01:50:39,750 - #8 e
INFO  01:50:39,750 - #42 <=
INFO  01:50:39,751 - #8 d
INFO  01:50:39,752 - #14 ||
INFO  01:50:39,753 - #8 e
INFO  01:50:39,753 - #40 <
INFO  01:50:39,753 - #9 0
INFO  01:50:39,753 - #13 &&
INFO  01:50:39,754 - #8 e
INFO  01:50:39,754 - #38 >
INFO  01:50:39,754 - #16 -
INFO  01:50:39,754 - #8 d
INFO  01:50:39,755 - #30 )
INFO  01:50:39,755 - #20 {
INFO  01:50:39,755 - #3 print
INFO  01:50:39,755 - #29 (
INFO  01:50:39,755 - #8 e
INFO  01:50:39,755 - #30 )
INFO  01:50:39,756 - #27 ;
INFO  01:50:39,757 - #21 }
INFO  01:50:39,758 - #21 }
INFO  01:50:39,759 - #21 }
INFO  01:50:39,760 - =====================SINTAKSNO_STABLO=========================
INFO  01:50:39,767 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  01:50:39,768 - ==============================================================
INFO  01:50:39,782 - Pocetak obrade programa Program na liniji 1
INFO  01:50:39,782 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  01:50:39,784 - Deklarisana konstanta c na liniji 2
INFO  01:50:39,784 - Deklarisana konstanta d na liniji 2
INFO  01:50:39,784 - Deklarisana konstanta g na liniji 2
INFO  01:50:39,784 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  01:50:39,784 - Deklarisana promenljiva e na liniji 3
INFO  01:50:39,785 - Pocetak obrade metode main na liniji 5
INFO  01:50:39,786 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  01:50:39,786 - Zavrsetak obrade programa Program na liniji 1
INFO  01:50:39,786 - ======================TABELA_SIMBOLA==========================
INFO  01:50:39,787 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  01:50:39,787 - ==============================================================
INFO  01:50:39,787 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  01:50:39,787 - ==============================================================
INFO  01:50:39,787 - ======================GENERISANJE_KODA========================
INFO  01:50:39,795 - Generisanje koda uspesno zavrseno!
INFO  01:50:39,796 - Generisanje izlaznog fajla test\program.obj
INFO  01:50:39,796 - ==============================================================
INFO  01:51:12,790 - Obrada ulaznog fajla test\program.mj
INFO  01:51:12,886 - #2 program
INFO  01:51:12,886 - #8 Program
INFO  01:51:12,887 - #5 const
INFO  01:51:12,897 - #8 int
INFO  01:51:12,897 - #8 c
INFO  01:51:12,899 - #24 =
INFO  01:51:12,899 - #9 10
INFO  01:51:12,899 - #28 ,
INFO  01:51:12,900 - #8 d
INFO  01:51:12,900 - #24 =
INFO  01:51:12,900 - #9 99
INFO  01:51:12,901 - #28 ,
INFO  01:51:12,901 - #8 g
INFO  01:51:12,901 - #24 =
INFO  01:51:12,901 - #9 2
INFO  01:51:12,901 - #27 ;
INFO  01:51:12,901 - #8 int
INFO  01:51:12,903 - #8 e
INFO  01:51:12,904 - #27 ;
INFO  01:51:12,904 - #20 {
INFO  01:51:12,908 - #6 void
INFO  01:51:12,908 - #8 main
INFO  01:51:12,908 - #29 (
INFO  01:51:12,909 - #30 )
INFO  01:51:12,909 - #20 {
INFO  01:51:12,909 - #8 e
INFO  01:51:12,909 - #24 =
INFO  01:51:12,910 - #9 1
INFO  01:51:12,910 - #27 ;
INFO  01:51:12,911 - #31 if
INFO  01:51:12,911 - #29 (
INFO  01:51:12,911 - #8 e
INFO  01:51:12,911 - #42 <=
INFO  01:51:12,912 - #8 d
INFO  01:51:12,914 - #14 ||
INFO  01:51:12,914 - #8 e
INFO  01:51:12,915 - #40 <
INFO  01:51:12,915 - #9 0
INFO  01:51:12,915 - #13 &&
INFO  01:51:12,915 - #8 e
INFO  01:51:12,915 - #38 >
INFO  01:51:12,916 - #16 -
INFO  01:51:12,918 - #8 d
INFO  01:51:12,918 - #30 )
INFO  01:51:12,919 - #20 {
INFO  01:51:12,919 - #3 print
INFO  01:51:12,919 - #29 (
INFO  01:51:12,919 - #8 e
INFO  01:51:12,919 - #30 )
INFO  01:51:12,921 - #27 ;
INFO  01:51:12,921 - #21 }
INFO  01:51:12,921 - #21 }
INFO  01:51:12,922 - #21 }
INFO  01:51:12,925 - =====================SINTAKSNO_STABLO=========================
INFO  01:51:12,927 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  01:51:12,928 - ==============================================================
INFO  01:51:12,948 - Pocetak obrade programa Program na liniji 1
INFO  01:51:12,948 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  01:51:12,949 - Deklarisana konstanta c na liniji 2
INFO  01:51:12,949 - Deklarisana konstanta d na liniji 2
INFO  01:51:12,949 - Deklarisana konstanta g na liniji 2
INFO  01:51:12,949 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  01:51:12,949 - Deklarisana promenljiva e na liniji 3
INFO  01:51:12,950 - Pocetak obrade metode main na liniji 5
INFO  01:51:12,951 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  01:51:12,951 - Zavrsetak obrade programa Program na liniji 1
INFO  01:51:12,951 - ======================TABELA_SIMBOLA==========================
INFO  01:51:12,952 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  01:51:12,952 - ==============================================================
INFO  01:51:12,952 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  01:51:12,952 - ==============================================================
INFO  01:51:12,952 - ======================GENERISANJE_KODA========================
INFO  01:51:12,960 - Generisanje koda uspesno zavrseno!
INFO  01:51:12,960 - Generisanje izlaznog fajla test\program.obj
INFO  01:51:12,960 - ==============================================================
INFO  01:52:30,582 - Obrada ulaznog fajla test\program.mj
INFO  01:52:30,697 - #2 program
INFO  01:52:30,697 - #8 Program
INFO  01:52:30,698 - #5 const
INFO  01:52:30,700 - #8 int
INFO  01:52:30,700 - #8 c
INFO  01:52:30,701 - #24 =
INFO  01:52:30,701 - #9 10
INFO  01:52:30,701 - #28 ,
INFO  01:52:30,703 - #8 d
INFO  01:52:30,703 - #24 =
INFO  01:52:30,703 - #9 99
INFO  01:52:30,703 - #28 ,
INFO  01:52:30,704 - #8 g
INFO  01:52:30,704 - #24 =
INFO  01:52:30,704 - #9 2
INFO  01:52:30,704 - #27 ;
INFO  01:52:30,704 - #8 int
INFO  01:52:30,706 - #8 e
INFO  01:52:30,706 - #27 ;
INFO  01:52:30,706 - #20 {
INFO  01:52:30,708 - #6 void
INFO  01:52:30,708 - #8 main
INFO  01:52:30,709 - #29 (
INFO  01:52:30,710 - #30 )
INFO  01:52:30,710 - #20 {
INFO  01:52:30,710 - #8 e
INFO  01:52:30,710 - #24 =
INFO  01:52:30,710 - #9 1
INFO  01:52:30,710 - #27 ;
INFO  01:52:30,711 - #31 if
INFO  01:52:30,711 - #29 (
INFO  01:52:30,711 - #8 e
INFO  01:52:30,712 - #42 <=
INFO  01:52:30,712 - #8 d
INFO  01:52:30,713 - #14 ||
INFO  01:52:30,714 - #8 e
INFO  01:52:30,714 - #40 <
INFO  01:52:30,714 - #9 0
INFO  01:52:30,715 - #13 &&
INFO  01:52:30,715 - #8 e
INFO  01:52:30,715 - #38 >
INFO  01:52:30,715 - #16 -
INFO  01:52:30,717 - #8 d
INFO  01:52:30,718 - #30 )
INFO  01:52:30,718 - #20 {
INFO  01:52:30,719 - #3 print
INFO  01:52:30,719 - #29 (
INFO  01:52:30,719 - #8 e
INFO  01:52:30,719 - #30 )
INFO  01:52:30,719 - #27 ;
INFO  01:52:30,719 - #21 }
INFO  01:52:30,719 - #21 }
INFO  01:52:30,721 - #21 }
INFO  01:52:30,723 - =====================SINTAKSNO_STABLO=========================
INFO  01:52:30,725 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  01:52:30,725 - ==============================================================
INFO  01:52:30,748 - Pocetak obrade programa Program na liniji 1
INFO  01:52:30,748 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  01:52:30,749 - Deklarisana konstanta c na liniji 2
INFO  01:52:30,749 - Deklarisana konstanta d na liniji 2
INFO  01:52:30,750 - Deklarisana konstanta g na liniji 2
INFO  01:52:30,750 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  01:52:30,750 - Deklarisana promenljiva e na liniji 3
INFO  01:52:30,753 - Pocetak obrade metode main na liniji 5
INFO  01:52:30,754 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  01:52:30,754 - Zavrsetak obrade programa Program na liniji 1
INFO  01:52:30,754 - ======================TABELA_SIMBOLA==========================
INFO  01:52:30,754 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  01:52:30,754 - ==============================================================
INFO  01:52:30,754 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  01:52:30,754 - ==============================================================
INFO  01:52:30,755 - ======================GENERISANJE_KODA========================
INFO  01:52:30,761 - Generisanje koda uspesno zavrseno!
INFO  01:52:30,762 - Generisanje izlaznog fajla test\program.obj
INFO  01:52:30,762 - ==============================================================
INFO  02:15:38,296 - Obrada ulaznog fajla test\program.mj
INFO  02:15:38,426 - #2 program
INFO  02:15:38,426 - #8 Program
INFO  02:15:38,426 - #5 const
INFO  02:15:38,427 - #8 int
INFO  02:15:38,427 - #8 c
INFO  02:15:38,428 - #24 =
INFO  02:15:38,428 - #9 10
INFO  02:15:38,429 - #28 ,
INFO  02:15:38,430 - #8 d
INFO  02:15:38,430 - #24 =
INFO  02:15:38,430 - #9 99
INFO  02:15:38,430 - #28 ,
INFO  02:15:38,430 - #8 g
INFO  02:15:38,431 - #24 =
INFO  02:15:38,431 - #9 2
INFO  02:15:38,431 - #27 ;
INFO  02:15:38,431 - #8 int
INFO  02:15:38,432 - #8 e
INFO  02:15:38,432 - #27 ;
INFO  02:15:38,433 - #20 {
INFO  02:15:38,435 - #6 void
INFO  02:15:38,435 - #8 main
INFO  02:15:38,435 - #29 (
INFO  02:15:38,436 - #30 )
INFO  02:15:38,436 - #20 {
INFO  02:15:38,436 - #8 e
INFO  02:15:38,436 - #24 =
INFO  02:15:38,436 - #9 1
INFO  02:15:38,437 - #27 ;
INFO  02:15:38,437 - #31 if
INFO  02:15:38,438 - #29 (
INFO  02:15:38,438 - #8 e
INFO  02:15:38,438 - #42 <=
INFO  02:15:38,438 - #8 d
INFO  02:15:38,439 - #14 ||
INFO  02:15:38,440 - #8 e
INFO  02:15:38,440 - #40 <
INFO  02:15:38,440 - #9 0
INFO  02:15:38,441 - #13 &&
INFO  02:15:38,441 - #8 e
INFO  02:15:38,441 - #38 >
INFO  02:15:38,441 - #16 -
INFO  02:15:38,443 - #8 d
INFO  02:15:38,443 - #30 )
INFO  02:15:38,444 - #20 {
INFO  02:15:38,444 - #3 print
INFO  02:15:38,444 - #29 (
INFO  02:15:38,444 - #8 e
INFO  02:15:38,444 - #30 )
INFO  02:15:38,444 - #27 ;
INFO  02:15:38,444 - #21 }
INFO  02:15:38,445 - #21 }
INFO  02:15:38,446 - #21 }
INFO  02:15:38,448 - =====================SINTAKSNO_STABLO=========================
INFO  02:15:38,450 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:15:38,450 - ==============================================================
INFO  02:15:38,463 - Pocetak obrade programa Program na liniji 1
INFO  02:15:38,463 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:15:38,464 - Deklarisana konstanta c na liniji 2
INFO  02:15:38,464 - Deklarisana konstanta d na liniji 2
INFO  02:15:38,464 - Deklarisana konstanta g na liniji 2
INFO  02:15:38,464 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:15:38,464 - Deklarisana promenljiva e na liniji 3
INFO  02:15:38,465 - Pocetak obrade metode main na liniji 5
INFO  02:15:38,465 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:15:38,465 - Zavrsetak obrade programa Program na liniji 1
INFO  02:15:38,465 - ======================TABELA_SIMBOLA==========================
INFO  02:15:38,466 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:15:38,466 - ==============================================================
INFO  02:15:38,466 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:15:38,466 - ==============================================================
INFO  02:15:38,466 - ======================GENERISANJE_KODA========================
ERROR 02:15:38,471 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 02:15:38,471 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 02:15:38,473 - Generisanje koda neuspesno!
INFO  02:15:38,474 - ==============================================================
INFO  02:15:43,448 - Obrada ulaznog fajla test\program.mj
INFO  02:15:43,564 - #2 program
INFO  02:15:43,564 - #8 Program
INFO  02:15:43,564 - #5 const
INFO  02:15:43,565 - #8 int
INFO  02:15:43,565 - #8 c
INFO  02:15:43,566 - #24 =
INFO  02:15:43,566 - #9 10
INFO  02:15:43,566 - #28 ,
INFO  02:15:43,568 - #8 d
INFO  02:15:43,568 - #24 =
INFO  02:15:43,568 - #9 99
INFO  02:15:43,568 - #28 ,
INFO  02:15:43,568 - #8 g
INFO  02:15:43,568 - #24 =
INFO  02:15:43,568 - #9 2
INFO  02:15:43,568 - #27 ;
INFO  02:15:43,569 - #8 int
INFO  02:15:43,570 - #8 e
INFO  02:15:43,570 - #27 ;
INFO  02:15:43,570 - #20 {
INFO  02:15:43,572 - #6 void
INFO  02:15:43,572 - #8 main
INFO  02:15:43,572 - #29 (
INFO  02:15:43,573 - #30 )
INFO  02:15:43,573 - #20 {
INFO  02:15:43,573 - #8 e
INFO  02:15:43,573 - #24 =
INFO  02:15:43,573 - #9 1
INFO  02:15:43,574 - #27 ;
INFO  02:15:43,574 - #31 if
INFO  02:15:43,575 - #29 (
INFO  02:15:43,575 - #8 e
INFO  02:15:43,575 - #42 <=
INFO  02:15:43,575 - #8 d
INFO  02:15:43,576 - #14 ||
INFO  02:15:43,577 - #8 e
INFO  02:15:43,577 - #40 <
INFO  02:15:43,577 - #9 0
INFO  02:15:43,578 - #13 &&
INFO  02:15:43,578 - #8 e
INFO  02:15:43,578 - #38 >
INFO  02:15:43,578 - #16 -
INFO  02:15:43,579 - #8 d
INFO  02:15:43,579 - #30 )
INFO  02:15:43,580 - #20 {
INFO  02:15:43,580 - #3 print
INFO  02:15:43,580 - #29 (
INFO  02:15:43,580 - #8 e
INFO  02:15:43,580 - #30 )
INFO  02:15:43,580 - #27 ;
INFO  02:15:43,580 - #21 }
INFO  02:15:43,581 - #21 }
INFO  02:15:43,582 - #21 }
INFO  02:15:43,583 - =====================SINTAKSNO_STABLO=========================
INFO  02:15:43,585 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:15:43,585 - ==============================================================
INFO  02:15:43,603 - Pocetak obrade programa Program na liniji 1
INFO  02:15:43,603 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:15:43,604 - Deklarisana konstanta c na liniji 2
INFO  02:15:43,604 - Deklarisana konstanta d na liniji 2
INFO  02:15:43,604 - Deklarisana konstanta g na liniji 2
INFO  02:15:43,605 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:15:43,605 - Deklarisana promenljiva e na liniji 3
INFO  02:15:43,606 - Pocetak obrade metode main na liniji 5
INFO  02:15:43,607 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:15:43,607 - Zavrsetak obrade programa Program na liniji 1
INFO  02:15:43,607 - ======================TABELA_SIMBOLA==========================
INFO  02:15:43,607 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:15:43,608 - ==============================================================
INFO  02:15:43,608 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:15:43,608 - ==============================================================
INFO  02:15:43,608 - ======================GENERISANJE_KODA========================
ERROR 02:15:43,615 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 02:15:43,616 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 02:15:43,617 - Generisanje koda neuspesno!
INFO  02:15:43,619 - ==============================================================
INFO  02:16:59,431 - Obrada ulaznog fajla test\program.mj
INFO  02:16:59,557 - #2 program
INFO  02:16:59,558 - #8 Program
INFO  02:16:59,558 - #5 const
INFO  02:16:59,559 - #8 int
INFO  02:16:59,559 - #8 c
INFO  02:16:59,559 - #24 =
INFO  02:16:59,559 - #9 10
INFO  02:16:59,560 - #28 ,
INFO  02:16:59,560 - #8 d
INFO  02:16:59,561 - #24 =
INFO  02:16:59,561 - #9 99
INFO  02:16:59,561 - #28 ,
INFO  02:16:59,561 - #8 g
INFO  02:16:59,561 - #24 =
INFO  02:16:59,561 - #9 2
INFO  02:16:59,561 - #27 ;
INFO  02:16:59,561 - #8 int
INFO  02:16:59,562 - #8 e
INFO  02:16:59,562 - #27 ;
INFO  02:16:59,563 - #20 {
INFO  02:16:59,564 - #6 void
INFO  02:16:59,564 - #8 main
INFO  02:16:59,564 - #29 (
INFO  02:16:59,565 - #30 )
INFO  02:16:59,565 - #20 {
INFO  02:16:59,565 - #8 e
INFO  02:16:59,565 - #24 =
INFO  02:16:59,565 - #9 1
INFO  02:16:59,565 - #27 ;
INFO  02:16:59,566 - #31 if
INFO  02:16:59,566 - #29 (
INFO  02:16:59,566 - #8 e
INFO  02:16:59,566 - #42 <=
INFO  02:16:59,567 - #8 d
INFO  02:16:59,568 - #14 ||
INFO  02:16:59,569 - #8 e
INFO  02:16:59,569 - #40 <
INFO  02:16:59,569 - #9 0
INFO  02:16:59,570 - #13 &&
INFO  02:16:59,570 - #8 e
INFO  02:16:59,570 - #38 >
INFO  02:16:59,570 - #16 -
INFO  02:16:59,571 - #8 d
INFO  02:16:59,571 - #30 )
INFO  02:16:59,572 - #20 {
INFO  02:16:59,572 - #3 print
INFO  02:16:59,572 - #29 (
INFO  02:16:59,572 - #8 e
INFO  02:16:59,572 - #30 )
INFO  02:16:59,572 - #27 ;
INFO  02:16:59,572 - #21 }
INFO  02:16:59,573 - #21 }
INFO  02:16:59,574 - #21 }
INFO  02:16:59,575 - =====================SINTAKSNO_STABLO=========================
INFO  02:16:59,577 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:16:59,577 - ==============================================================
INFO  02:16:59,591 - Pocetak obrade programa Program na liniji 1
INFO  02:16:59,592 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:16:59,592 - Deklarisana konstanta c na liniji 2
INFO  02:16:59,592 - Deklarisana konstanta d na liniji 2
INFO  02:16:59,593 - Deklarisana konstanta g na liniji 2
INFO  02:16:59,593 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:16:59,593 - Deklarisana promenljiva e na liniji 3
INFO  02:16:59,594 - Pocetak obrade metode main na liniji 5
INFO  02:16:59,594 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:16:59,594 - Zavrsetak obrade programa Program na liniji 1
INFO  02:16:59,594 - ======================TABELA_SIMBOLA==========================
INFO  02:16:59,595 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:16:59,595 - ==============================================================
INFO  02:16:59,595 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:16:59,595 - ==============================================================
INFO  02:16:59,595 - ======================GENERISANJE_KODA========================
INFO  02:16:59,601 - Generisanje koda uspesno zavrseno!
INFO  02:16:59,601 - Generisanje izlaznog fajla test\program.obj
INFO  02:16:59,602 - ==============================================================
INFO  02:18:16,548 - Obrada ulaznog fajla test\program.mj
INFO  02:18:16,626 - #2 program
INFO  02:18:16,626 - #8 Program
INFO  02:18:16,626 - #5 const
INFO  02:18:16,627 - #8 int
INFO  02:18:16,627 - #8 c
INFO  02:18:16,629 - #24 =
INFO  02:18:16,629 - #9 10
INFO  02:18:16,629 - #28 ,
INFO  02:18:16,630 - #8 d
INFO  02:18:16,630 - #24 =
INFO  02:18:16,630 - #9 99
INFO  02:18:16,631 - #28 ,
INFO  02:18:16,631 - #8 g
INFO  02:18:16,631 - #24 =
INFO  02:18:16,631 - #9 2
INFO  02:18:16,631 - #27 ;
INFO  02:18:16,631 - #8 int
INFO  02:18:16,633 - #8 e
INFO  02:18:16,634 - #27 ;
INFO  02:18:16,634 - #20 {
INFO  02:18:16,635 - #6 void
INFO  02:18:16,636 - #8 main
INFO  02:18:16,636 - #29 (
INFO  02:18:16,637 - #30 )
INFO  02:18:16,637 - #20 {
INFO  02:18:16,637 - #8 e
INFO  02:18:16,637 - #24 =
INFO  02:18:16,637 - #9 1
INFO  02:18:16,637 - #27 ;
INFO  02:18:16,638 - #31 if
INFO  02:18:16,638 - #29 (
INFO  02:18:16,639 - #8 e
INFO  02:18:16,639 - #42 <=
INFO  02:18:16,639 - #8 d
INFO  02:18:16,640 - #14 ||
INFO  02:18:16,642 - #8 e
INFO  02:18:16,642 - #40 <
INFO  02:18:16,642 - #9 0
INFO  02:18:16,643 - #13 &&
INFO  02:18:16,643 - #8 e
INFO  02:18:16,643 - #38 >
INFO  02:18:16,643 - #16 -
INFO  02:18:16,644 - #8 d
INFO  02:18:16,645 - #30 )
INFO  02:18:16,645 - #20 {
INFO  02:18:16,645 - #3 print
INFO  02:18:16,645 - #29 (
INFO  02:18:16,646 - #8 e
INFO  02:18:16,646 - #30 )
INFO  02:18:16,646 - #27 ;
INFO  02:18:16,646 - #21 }
INFO  02:18:16,646 - #21 }
INFO  02:18:16,648 - #21 }
INFO  02:18:16,649 - =====================SINTAKSNO_STABLO=========================
INFO  02:18:16,651 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:18:16,652 - ==============================================================
INFO  02:18:16,666 - Pocetak obrade programa Program na liniji 1
INFO  02:18:16,666 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:18:16,668 - Deklarisana konstanta c na liniji 2
INFO  02:18:16,668 - Deklarisana konstanta d na liniji 2
INFO  02:18:16,668 - Deklarisana konstanta g na liniji 2
INFO  02:18:16,668 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:18:16,668 - Deklarisana promenljiva e na liniji 3
INFO  02:18:16,669 - Pocetak obrade metode main na liniji 5
INFO  02:18:16,670 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:18:16,670 - Zavrsetak obrade programa Program na liniji 1
INFO  02:18:16,670 - ======================TABELA_SIMBOLA==========================
INFO  02:18:16,671 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:18:16,671 - ==============================================================
INFO  02:18:16,671 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:18:16,671 - ==============================================================
INFO  02:18:16,671 - ======================GENERISANJE_KODA========================
ERROR 02:18:16,676 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 02:18:16,676 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 02:18:16,679 - Generisanje koda neuspesno!
INFO  02:18:16,681 - ==============================================================
INFO  02:19:16,282 - Obrada ulaznog fajla test\program.mj
INFO  02:19:16,368 - #2 program
INFO  02:19:16,369 - #8 Program
INFO  02:19:16,369 - #5 const
INFO  02:19:16,370 - #8 int
INFO  02:19:16,370 - #8 c
INFO  02:19:16,371 - #24 =
INFO  02:19:16,371 - #9 10
INFO  02:19:16,371 - #28 ,
INFO  02:19:16,373 - #8 d
INFO  02:19:16,373 - #24 =
INFO  02:19:16,373 - #9 99
INFO  02:19:16,373 - #28 ,
INFO  02:19:16,374 - #8 g
INFO  02:19:16,374 - #24 =
INFO  02:19:16,374 - #9 2
INFO  02:19:16,374 - #27 ;
INFO  02:19:16,374 - #8 int
INFO  02:19:16,376 - #8 e
INFO  02:19:16,376 - #27 ;
INFO  02:19:16,376 - #20 {
INFO  02:19:16,378 - #6 void
INFO  02:19:16,378 - #8 main
INFO  02:19:16,379 - #29 (
INFO  02:19:16,379 - #30 )
INFO  02:19:16,380 - #20 {
INFO  02:19:16,380 - #8 e
INFO  02:19:16,380 - #24 =
INFO  02:19:16,380 - #9 1
INFO  02:19:16,380 - #27 ;
INFO  02:19:16,381 - #31 if
INFO  02:19:16,381 - #29 (
INFO  02:19:16,382 - #8 e
INFO  02:19:16,382 - #42 <=
INFO  02:19:16,382 - #8 d
INFO  02:19:16,383 - #14 ||
INFO  02:19:16,384 - #8 e
INFO  02:19:16,384 - #40 <
INFO  02:19:16,384 - #9 0
INFO  02:19:16,385 - #13 &&
INFO  02:19:16,385 - #8 e
INFO  02:19:16,385 - #38 >
INFO  02:19:16,385 - #16 -
INFO  02:19:16,388 - #8 d
INFO  02:19:16,388 - #30 )
INFO  02:19:16,389 - #20 {
INFO  02:19:16,389 - #3 print
INFO  02:19:16,389 - #29 (
INFO  02:19:16,389 - #8 e
INFO  02:19:16,389 - #30 )
INFO  02:19:16,390 - #27 ;
INFO  02:19:16,391 - #21 }
INFO  02:19:16,393 - #21 }
INFO  02:19:16,395 - #21 }
INFO  02:19:16,396 - =====================SINTAKSNO_STABLO=========================
INFO  02:19:16,402 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:19:16,403 - ==============================================================
INFO  02:19:16,419 - Pocetak obrade programa Program na liniji 1
INFO  02:19:16,419 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:19:16,420 - Deklarisana konstanta c na liniji 2
INFO  02:19:16,420 - Deklarisana konstanta d na liniji 2
INFO  02:19:16,420 - Deklarisana konstanta g na liniji 2
INFO  02:19:16,421 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:19:16,421 - Deklarisana promenljiva e na liniji 3
INFO  02:19:16,422 - Pocetak obrade metode main na liniji 5
INFO  02:19:16,422 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:19:16,422 - Zavrsetak obrade programa Program na liniji 1
INFO  02:19:16,422 - ======================TABELA_SIMBOLA==========================
INFO  02:19:16,423 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:19:16,423 - ==============================================================
INFO  02:19:16,423 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:19:16,423 - ==============================================================
INFO  02:19:16,423 - ======================GENERISANJE_KODA========================
ERROR 02:19:16,429 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 02:19:16,430 - Generisanje koda neuspesno!
INFO  02:19:16,431 - ==============================================================
INFO  02:20:29,229 - Obrada ulaznog fajla test\program.mj
INFO  02:20:29,339 - #2 program
INFO  02:20:29,339 - #8 Program
INFO  02:20:29,339 - #5 const
INFO  02:20:29,340 - #8 int
INFO  02:20:29,340 - #8 c
INFO  02:20:29,341 - #24 =
INFO  02:20:29,341 - #9 10
INFO  02:20:29,341 - #28 ,
INFO  02:20:29,343 - #8 d
INFO  02:20:29,343 - #24 =
INFO  02:20:29,343 - #9 99
INFO  02:20:29,343 - #28 ,
INFO  02:20:29,343 - #8 g
INFO  02:20:29,344 - #24 =
INFO  02:20:29,344 - #9 2
INFO  02:20:29,344 - #27 ;
INFO  02:20:29,344 - #8 int
INFO  02:20:29,345 - #8 e
INFO  02:20:29,345 - #27 ;
INFO  02:20:29,346 - #20 {
INFO  02:20:29,347 - #6 void
INFO  02:20:29,347 - #8 main
INFO  02:20:29,347 - #29 (
INFO  02:20:29,348 - #30 )
INFO  02:20:29,348 - #20 {
INFO  02:20:29,348 - #8 e
INFO  02:20:29,348 - #24 =
INFO  02:20:29,348 - #9 1
INFO  02:20:29,348 - #27 ;
INFO  02:20:29,349 - #31 if
INFO  02:20:29,349 - #29 (
INFO  02:20:29,350 - #8 e
INFO  02:20:29,350 - #42 <=
INFO  02:20:29,350 - #8 d
INFO  02:20:29,351 - #14 ||
INFO  02:20:29,352 - #8 e
INFO  02:20:29,352 - #40 <
INFO  02:20:29,352 - #9 0
INFO  02:20:29,353 - #13 &&
INFO  02:20:29,353 - #8 e
INFO  02:20:29,353 - #38 >
INFO  02:20:29,353 - #16 -
INFO  02:20:29,354 - #8 d
INFO  02:20:29,354 - #30 )
INFO  02:20:29,355 - #20 {
INFO  02:20:29,356 - #3 print
INFO  02:20:29,356 - #29 (
INFO  02:20:29,356 - #8 e
INFO  02:20:29,357 - #30 )
INFO  02:20:29,357 - #27 ;
INFO  02:20:29,358 - #21 }
INFO  02:20:29,358 - #21 }
INFO  02:20:29,359 - #21 }
INFO  02:20:29,360 - =====================SINTAKSNO_STABLO=========================
INFO  02:20:29,362 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_lt(
                      ) [Rel_op_lt]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_neg_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_neg_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:20:29,363 - ==============================================================
INFO  02:20:29,376 - Pocetak obrade programa Program na liniji 1
INFO  02:20:29,376 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:20:29,377 - Deklarisana konstanta c na liniji 2
INFO  02:20:29,377 - Deklarisana konstanta d na liniji 2
INFO  02:20:29,377 - Deklarisana konstanta g na liniji 2
INFO  02:20:29,378 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:20:29,378 - Deklarisana promenljiva e na liniji 3
INFO  02:20:29,382 - Pocetak obrade metode main na liniji 5
INFO  02:20:29,383 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:20:29,383 - Zavrsetak obrade programa Program na liniji 1
INFO  02:20:29,383 - ======================TABELA_SIMBOLA==========================
INFO  02:20:29,383 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:20:29,384 - ==============================================================
INFO  02:20:29,384 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:20:29,384 - ==============================================================
INFO  02:20:29,384 - ======================GENERISANJE_KODA========================
ERROR 02:20:29,389 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 02:20:29,390 - Generisanje koda neuspesno!
INFO  02:20:29,390 - ==============================================================
INFO  02:21:54,922 - Obrada ulaznog fajla test\program.mj
INFO  02:21:55,023 - #2 program
INFO  02:21:55,023 - #8 Program
INFO  02:21:55,023 - #5 const
INFO  02:21:55,024 - #8 int
INFO  02:21:55,024 - #8 c
INFO  02:21:55,025 - #24 =
INFO  02:21:55,026 - #9 10
INFO  02:21:55,026 - #28 ,
INFO  02:21:55,030 - #8 d
INFO  02:21:55,031 - #24 =
INFO  02:21:55,031 - #9 99
INFO  02:21:55,031 - #28 ,
INFO  02:21:55,031 - #8 g
INFO  02:21:55,031 - #24 =
INFO  02:21:55,031 - #9 2
INFO  02:21:55,031 - #27 ;
INFO  02:21:55,032 - #8 int
INFO  02:21:55,033 - #8 e
INFO  02:21:55,033 - #27 ;
INFO  02:21:55,033 - #20 {
INFO  02:21:55,035 - #6 void
INFO  02:21:55,035 - #8 main
INFO  02:21:55,035 - #29 (
INFO  02:21:55,036 - #30 )
INFO  02:21:55,038 - #20 {
INFO  02:21:55,038 - #8 e
INFO  02:21:55,038 - #24 =
INFO  02:21:55,039 - #9 1
INFO  02:21:55,039 - #27 ;
INFO  02:21:55,039 - #31 if
INFO  02:21:55,040 - #29 (
INFO  02:21:55,040 - #8 e
INFO  02:21:55,040 - #42 <=
INFO  02:21:55,040 - #8 d
INFO  02:21:55,042 - #30 )
INFO  02:21:55,042 - #20 {
INFO  02:21:55,042 - #3 print
INFO  02:21:55,042 - #29 (
INFO  02:21:55,043 - #8 e
INFO  02:21:55,043 - #30 )
INFO  02:21:55,043 - #27 ;
INFO  02:21:55,043 - #21 }
INFO  02:21:55,043 - #21 }
INFO  02:21:55,045 - #21 }
INFO  02:21:55,046 - =====================SINTAKSNO_STABLO=========================
INFO  02:21:55,055 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:21:55,056 - ==============================================================
INFO  02:21:55,071 - Pocetak obrade programa Program na liniji 1
INFO  02:21:55,071 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:21:55,072 - Deklarisana konstanta c na liniji 2
INFO  02:21:55,072 - Deklarisana konstanta d na liniji 2
INFO  02:21:55,072 - Deklarisana konstanta g na liniji 2
INFO  02:21:55,072 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:21:55,072 - Deklarisana promenljiva e na liniji 3
INFO  02:21:55,073 - Pocetak obrade metode main na liniji 5
INFO  02:21:55,073 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:21:55,073 - Zavrsetak obrade programa Program na liniji 1
INFO  02:21:55,074 - ======================TABELA_SIMBOLA==========================
INFO  02:21:55,074 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:21:55,074 - ==============================================================
INFO  02:21:55,074 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:21:55,074 - ==============================================================
INFO  02:21:55,075 - ======================GENERISANJE_KODA========================
INFO  02:21:55,081 - Generisanje koda uspesno zavrseno!
INFO  02:21:55,081 - Generisanje izlaznog fajla test\program.obj
INFO  02:21:55,082 - ==============================================================
INFO  02:24:03,460 - Obrada ulaznog fajla test\program.mj
INFO  02:24:03,556 - #2 program
INFO  02:24:03,557 - #8 Program
INFO  02:24:03,557 - #5 const
INFO  02:24:03,557 - #8 int
INFO  02:24:03,558 - #8 c
INFO  02:24:03,558 - #24 =
INFO  02:24:03,559 - #9 10
INFO  02:24:03,559 - #28 ,
INFO  02:24:03,560 - #8 d
INFO  02:24:03,560 - #24 =
INFO  02:24:03,560 - #9 99
INFO  02:24:03,560 - #28 ,
INFO  02:24:03,560 - #8 g
INFO  02:24:03,560 - #24 =
INFO  02:24:03,560 - #9 2
INFO  02:24:03,560 - #27 ;
INFO  02:24:03,561 - #8 int
INFO  02:24:03,562 - #8 e
INFO  02:24:03,562 - #27 ;
INFO  02:24:03,562 - #20 {
INFO  02:24:03,565 - #6 void
INFO  02:24:03,565 - #8 main
INFO  02:24:03,565 - #29 (
INFO  02:24:03,566 - #30 )
INFO  02:24:03,566 - #20 {
INFO  02:24:03,566 - #8 e
INFO  02:24:03,566 - #24 =
INFO  02:24:03,568 - #9 1
INFO  02:24:03,569 - #27 ;
INFO  02:24:03,569 - #31 if
INFO  02:24:03,570 - #29 (
INFO  02:24:03,570 - #12 false
INFO  02:24:03,570 - #30 )
INFO  02:24:03,571 - #20 {
INFO  02:24:03,571 - #3 print
INFO  02:24:03,571 - #29 (
INFO  02:24:03,571 - #8 e
INFO  02:24:03,571 - #30 )
INFO  02:24:03,571 - #27 ;
INFO  02:24:03,571 - #21 }
INFO  02:24:03,571 - #21 }
INFO  02:24:03,573 - #21 }
INFO  02:24:03,573 - =====================SINTAKSNO_STABLO=========================
INFO  02:24:03,575 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:24:03,575 - ==============================================================
INFO  02:24:03,585 - Pocetak obrade programa Program na liniji 1
INFO  02:24:03,585 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:24:03,586 - Deklarisana konstanta c na liniji 2
INFO  02:24:03,586 - Deklarisana konstanta d na liniji 2
INFO  02:24:03,586 - Deklarisana konstanta g na liniji 2
INFO  02:24:03,587 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:24:03,587 - Deklarisana promenljiva e na liniji 3
INFO  02:24:03,587 - Pocetak obrade metode main na liniji 5
INFO  02:24:03,588 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:24:03,588 - Zavrsetak obrade programa Program na liniji 1
INFO  02:24:03,588 - ======================TABELA_SIMBOLA==========================
INFO  02:24:03,589 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:24:03,589 - ==============================================================
INFO  02:24:03,589 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:24:03,589 - ==============================================================
INFO  02:24:03,589 - ======================GENERISANJE_KODA========================
INFO  02:24:03,595 - Generisanje koda uspesno zavrseno!
INFO  02:24:03,597 - Generisanje izlaznog fajla test\program.obj
INFO  02:24:03,597 - ==============================================================
INFO  02:24:16,799 - Obrada ulaznog fajla test\program.mj
INFO  02:24:16,912 - #2 program
INFO  02:24:16,912 - #8 Program
INFO  02:24:16,912 - #5 const
INFO  02:24:16,913 - #8 int
INFO  02:24:16,913 - #8 c
INFO  02:24:16,914 - #24 =
INFO  02:24:16,914 - #9 10
INFO  02:24:16,914 - #28 ,
INFO  02:24:16,915 - #8 d
INFO  02:24:16,915 - #24 =
INFO  02:24:16,915 - #9 99
INFO  02:24:16,915 - #28 ,
INFO  02:24:16,915 - #8 g
INFO  02:24:16,916 - #24 =
INFO  02:24:16,916 - #9 2
INFO  02:24:16,916 - #27 ;
INFO  02:24:16,916 - #8 int
INFO  02:24:16,917 - #8 e
INFO  02:24:16,917 - #27 ;
INFO  02:24:16,918 - #20 {
INFO  02:24:16,919 - #6 void
INFO  02:24:16,919 - #8 main
INFO  02:24:16,919 - #29 (
INFO  02:24:16,920 - #30 )
INFO  02:24:16,920 - #20 {
INFO  02:24:16,920 - #8 e
INFO  02:24:16,920 - #24 =
INFO  02:24:16,921 - #9 1
INFO  02:24:16,921 - #27 ;
INFO  02:24:16,921 - #31 if
INFO  02:24:16,922 - #29 (
INFO  02:24:16,922 - #11 true
INFO  02:24:16,922 - #30 )
INFO  02:24:16,922 - #20 {
INFO  02:24:16,923 - #3 print
INFO  02:24:16,923 - #29 (
INFO  02:24:16,923 - #8 e
INFO  02:24:16,923 - #30 )
INFO  02:24:16,923 - #27 ;
INFO  02:24:16,923 - #21 }
INFO  02:24:16,923 - #21 }
INFO  02:24:16,926 - #21 }
INFO  02:24:16,927 - =====================SINTAKSNO_STABLO=========================
INFO  02:24:16,929 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:24:16,929 - ==============================================================
INFO  02:24:16,947 - Pocetak obrade programa Program na liniji 1
INFO  02:24:16,947 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:24:16,949 - Deklarisana konstanta c na liniji 2
INFO  02:24:16,949 - Deklarisana konstanta d na liniji 2
INFO  02:24:16,949 - Deklarisana konstanta g na liniji 2
INFO  02:24:16,949 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:24:16,950 - Deklarisana promenljiva e na liniji 3
INFO  02:24:16,950 - Pocetak obrade metode main na liniji 5
INFO  02:24:16,951 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:24:16,951 - Zavrsetak obrade programa Program na liniji 1
INFO  02:24:16,951 - ======================TABELA_SIMBOLA==========================
INFO  02:24:16,952 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:24:16,952 - ==============================================================
INFO  02:24:16,952 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:24:16,952 - ==============================================================
INFO  02:24:16,952 - ======================GENERISANJE_KODA========================
INFO  02:24:16,958 - Generisanje koda uspesno zavrseno!
INFO  02:24:16,958 - Generisanje izlaznog fajla test\program.obj
INFO  02:24:16,958 - ==============================================================
INFO  02:35:47,547 - Obrada ulaznog fajla test\program.mj
INFO  02:35:47,672 - #2 program
INFO  02:35:47,672 - #8 Program
INFO  02:35:47,672 - #5 const
INFO  02:35:47,675 - #8 int
INFO  02:35:47,675 - #8 c
INFO  02:35:47,676 - #24 =
INFO  02:35:47,676 - #9 10
INFO  02:35:47,676 - #28 ,
INFO  02:35:47,677 - #8 d
INFO  02:35:47,677 - #24 =
INFO  02:35:47,677 - #9 99
INFO  02:35:47,677 - #28 ,
INFO  02:35:47,678 - #8 g
INFO  02:35:47,678 - #24 =
INFO  02:35:47,678 - #9 2
INFO  02:35:47,678 - #27 ;
INFO  02:35:47,678 - #8 int
INFO  02:35:47,679 - #8 e
INFO  02:35:47,679 - #27 ;
INFO  02:35:47,679 - #20 {
INFO  02:35:47,680 - #6 void
INFO  02:35:47,681 - #8 main
INFO  02:35:47,681 - #29 (
INFO  02:35:47,681 - #30 )
INFO  02:35:47,682 - #20 {
INFO  02:35:47,683 - #8 e
INFO  02:35:47,683 - #24 =
INFO  02:35:47,684 - #9 1
INFO  02:35:47,684 - #27 ;
INFO  02:35:47,684 - #31 if
INFO  02:35:47,684 - #29 (
INFO  02:35:47,685 - #11 true
INFO  02:35:47,685 - #30 )
INFO  02:35:47,685 - #20 {
INFO  02:35:47,685 - #3 print
INFO  02:35:47,685 - #29 (
INFO  02:35:47,685 - #8 e
INFO  02:35:47,686 - #30 )
INFO  02:35:47,686 - #27 ;
INFO  02:35:47,686 - #21 }
INFO  02:35:47,686 - #21 }
INFO  02:35:47,687 - #21 }
INFO  02:35:47,688 - =====================SINTAKSNO_STABLO=========================
INFO  02:35:47,690 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:35:47,690 - ==============================================================
INFO  02:35:47,700 - Pocetak obrade programa Program na liniji 1
INFO  02:35:47,700 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:35:47,701 - Deklarisana konstanta c na liniji 2
INFO  02:35:47,701 - Deklarisana konstanta d na liniji 2
INFO  02:35:47,701 - Deklarisana konstanta g na liniji 2
INFO  02:35:47,701 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:35:47,701 - Deklarisana promenljiva e na liniji 3
INFO  02:35:47,702 - Pocetak obrade metode main na liniji 5
INFO  02:35:47,702 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:35:47,702 - Zavrsetak obrade programa Program na liniji 1
INFO  02:35:47,702 - ======================TABELA_SIMBOLA==========================
INFO  02:35:47,704 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:35:47,704 - ==============================================================
INFO  02:35:47,704 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:35:47,704 - ==============================================================
INFO  02:35:47,704 - ======================GENERISANJE_KODA========================
INFO  02:35:47,710 - Generisanje koda uspesno zavrseno!
INFO  02:35:47,711 - Generisanje izlaznog fajla test\program.obj
INFO  02:35:47,711 - ==============================================================
INFO  02:35:50,757 - Obrada ulaznog fajla test\program.mj
INFO  02:35:50,849 - #2 program
INFO  02:35:50,849 - #8 Program
INFO  02:35:50,849 - #5 const
INFO  02:35:50,850 - #8 int
INFO  02:35:50,850 - #8 c
INFO  02:35:50,851 - #24 =
INFO  02:35:50,851 - #9 10
INFO  02:35:50,851 - #28 ,
INFO  02:35:50,852 - #8 d
INFO  02:35:50,852 - #24 =
INFO  02:35:50,852 - #9 99
INFO  02:35:50,853 - #28 ,
INFO  02:35:50,853 - #8 g
INFO  02:35:50,853 - #24 =
INFO  02:35:50,853 - #9 2
INFO  02:35:50,853 - #27 ;
INFO  02:35:50,853 - #8 int
INFO  02:35:50,854 - #8 e
INFO  02:35:50,854 - #27 ;
INFO  02:35:50,855 - #20 {
INFO  02:35:50,856 - #6 void
INFO  02:35:50,856 - #8 main
INFO  02:35:50,857 - #29 (
INFO  02:35:50,857 - #30 )
INFO  02:35:50,857 - #20 {
INFO  02:35:50,859 - #8 e
INFO  02:35:50,860 - #24 =
INFO  02:35:50,860 - #9 1
INFO  02:35:50,860 - #27 ;
INFO  02:35:50,860 - #31 if
INFO  02:35:50,861 - #29 (
INFO  02:35:50,861 - #11 true
INFO  02:35:50,861 - #30 )
INFO  02:35:50,867 - #20 {
INFO  02:35:50,868 - #3 print
INFO  02:35:50,868 - #29 (
INFO  02:35:50,868 - #8 e
INFO  02:35:50,868 - #30 )
INFO  02:35:50,868 - #27 ;
INFO  02:35:50,868 - #21 }
INFO  02:35:50,868 - #21 }
INFO  02:35:50,870 - #21 }
INFO  02:35:50,871 - =====================SINTAKSNO_STABLO=========================
INFO  02:35:50,873 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:35:50,874 - ==============================================================
INFO  02:35:50,885 - Pocetak obrade programa Program na liniji 1
INFO  02:35:50,885 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:35:50,887 - Deklarisana konstanta c na liniji 2
INFO  02:35:50,887 - Deklarisana konstanta d na liniji 2
INFO  02:35:50,887 - Deklarisana konstanta g na liniji 2
INFO  02:35:50,887 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:35:50,887 - Deklarisana promenljiva e na liniji 3
INFO  02:35:50,888 - Pocetak obrade metode main na liniji 5
INFO  02:35:50,889 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:35:50,889 - Zavrsetak obrade programa Program na liniji 1
INFO  02:35:50,889 - ======================TABELA_SIMBOLA==========================
INFO  02:35:50,889 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:35:50,890 - ==============================================================
INFO  02:35:50,890 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:35:50,890 - ==============================================================
INFO  02:35:50,890 - ======================GENERISANJE_KODA========================
INFO  02:35:50,895 - Generisanje koda uspesno zavrseno!
INFO  02:35:50,895 - Generisanje izlaznog fajla test\program.obj
INFO  02:35:50,896 - ==============================================================
INFO  02:35:55,118 - Obrada ulaznog fajla test\program.mj
INFO  02:35:55,238 - #2 program
INFO  02:35:55,238 - #8 Program
INFO  02:35:55,238 - #5 const
INFO  02:35:55,239 - #8 int
INFO  02:35:55,239 - #8 c
INFO  02:35:55,240 - #24 =
INFO  02:35:55,240 - #9 10
INFO  02:35:55,240 - #28 ,
INFO  02:35:55,243 - #8 d
INFO  02:35:55,243 - #24 =
INFO  02:35:55,243 - #9 99
INFO  02:35:55,243 - #28 ,
INFO  02:35:55,243 - #8 g
INFO  02:35:55,244 - #24 =
INFO  02:35:55,244 - #9 2
INFO  02:35:55,244 - #27 ;
INFO  02:35:55,244 - #8 int
INFO  02:35:55,245 - #8 e
INFO  02:35:55,245 - #27 ;
INFO  02:35:55,246 - #20 {
INFO  02:35:55,247 - #6 void
INFO  02:35:55,247 - #8 main
INFO  02:35:55,247 - #29 (
INFO  02:35:55,248 - #30 )
INFO  02:35:55,248 - #20 {
INFO  02:35:55,248 - #8 e
INFO  02:35:55,248 - #24 =
INFO  02:35:55,249 - #9 1
INFO  02:35:55,249 - #27 ;
INFO  02:35:55,249 - #31 if
INFO  02:35:55,250 - #29 (
INFO  02:35:55,250 - #11 true
INFO  02:35:55,250 - #30 )
INFO  02:35:55,251 - #20 {
INFO  02:35:55,251 - #3 print
INFO  02:35:55,251 - #29 (
INFO  02:35:55,251 - #8 e
INFO  02:35:55,251 - #30 )
INFO  02:35:55,251 - #27 ;
INFO  02:35:55,251 - #21 }
INFO  02:35:55,251 - #21 }
INFO  02:35:55,253 - #21 }
INFO  02:35:55,253 - =====================SINTAKSNO_STABLO=========================
INFO  02:35:55,255 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:35:55,255 - ==============================================================
INFO  02:35:55,266 - Pocetak obrade programa Program na liniji 1
INFO  02:35:55,266 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:35:55,267 - Deklarisana konstanta c na liniji 2
INFO  02:35:55,268 - Deklarisana konstanta d na liniji 2
INFO  02:35:55,268 - Deklarisana konstanta g na liniji 2
INFO  02:35:55,268 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:35:55,269 - Deklarisana promenljiva e na liniji 3
INFO  02:35:55,270 - Pocetak obrade metode main na liniji 5
INFO  02:35:55,271 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:35:55,271 - Zavrsetak obrade programa Program na liniji 1
INFO  02:35:55,271 - ======================TABELA_SIMBOLA==========================
INFO  02:35:55,272 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:35:55,272 - ==============================================================
INFO  02:35:55,272 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:35:55,272 - ==============================================================
INFO  02:35:55,272 - ======================GENERISANJE_KODA========================
INFO  02:35:55,277 - Generisanje koda uspesno zavrseno!
INFO  02:35:55,277 - Generisanje izlaznog fajla test\program.obj
INFO  02:35:55,277 - ==============================================================
INFO  02:36:46,248 - Obrada ulaznog fajla test\program.mj
INFO  02:36:46,365 - #2 program
INFO  02:36:46,365 - #8 Program
INFO  02:36:46,365 - #5 const
INFO  02:36:46,366 - #8 int
INFO  02:36:46,367 - #8 c
INFO  02:36:46,367 - #24 =
INFO  02:36:46,367 - #9 10
INFO  02:36:46,367 - #28 ,
INFO  02:36:46,368 - #8 d
INFO  02:36:46,368 - #24 =
INFO  02:36:46,369 - #9 99
INFO  02:36:46,369 - #28 ,
INFO  02:36:46,369 - #8 g
INFO  02:36:46,369 - #24 =
INFO  02:36:46,369 - #9 2
INFO  02:36:46,369 - #27 ;
INFO  02:36:46,369 - #8 int
INFO  02:36:46,370 - #8 e
INFO  02:36:46,371 - #27 ;
INFO  02:36:46,371 - #20 {
INFO  02:36:46,372 - #6 void
INFO  02:36:46,372 - #8 main
INFO  02:36:46,372 - #29 (
INFO  02:36:46,373 - #30 )
INFO  02:36:46,373 - #20 {
INFO  02:36:46,373 - #8 e
INFO  02:36:46,373 - #24 =
INFO  02:36:46,373 - #9 1
INFO  02:36:46,373 - #27 ;
INFO  02:36:46,374 - #31 if
INFO  02:36:46,374 - #29 (
INFO  02:36:46,374 - #12 false
INFO  02:36:46,374 - #30 )
INFO  02:36:46,375 - #20 {
INFO  02:36:46,375 - #3 print
INFO  02:36:46,375 - #29 (
INFO  02:36:46,375 - #8 e
INFO  02:36:46,375 - #30 )
INFO  02:36:46,376 - #27 ;
INFO  02:36:46,376 - #21 }
INFO  02:36:46,376 - #21 }
INFO  02:36:46,377 - #21 }
INFO  02:36:46,378 - =====================SINTAKSNO_STABLO=========================
INFO  02:36:46,379 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:36:46,381 - ==============================================================
INFO  02:36:46,397 - Pocetak obrade programa Program na liniji 1
INFO  02:36:46,397 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:36:46,398 - Deklarisana konstanta c na liniji 2
INFO  02:36:46,398 - Deklarisana konstanta d na liniji 2
INFO  02:36:46,399 - Deklarisana konstanta g na liniji 2
INFO  02:36:46,399 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:36:46,399 - Deklarisana promenljiva e na liniji 3
INFO  02:36:46,399 - Pocetak obrade metode main na liniji 5
INFO  02:36:46,400 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:36:46,400 - Zavrsetak obrade programa Program na liniji 1
INFO  02:36:46,400 - ======================TABELA_SIMBOLA==========================
INFO  02:36:46,401 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:36:46,401 - ==============================================================
INFO  02:36:46,401 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:36:46,401 - ==============================================================
INFO  02:36:46,401 - ======================GENERISANJE_KODA========================
INFO  02:36:46,407 - Generisanje koda uspesno zavrseno!
INFO  02:36:46,407 - Generisanje izlaznog fajla test\program.obj
INFO  02:36:46,407 - ==============================================================
INFO  02:36:59,438 - Obrada ulaznog fajla test\program.mj
INFO  02:36:59,537 - #2 program
INFO  02:36:59,537 - #8 Program
INFO  02:36:59,537 - #5 const
INFO  02:36:59,538 - #8 int
INFO  02:36:59,539 - #8 c
INFO  02:36:59,541 - #24 =
INFO  02:36:59,541 - #9 10
INFO  02:36:59,542 - #28 ,
INFO  02:36:59,543 - #8 d
INFO  02:36:59,543 - #24 =
INFO  02:36:59,543 - #9 99
INFO  02:36:59,544 - #28 ,
INFO  02:36:59,544 - #8 g
INFO  02:36:59,544 - #24 =
INFO  02:36:59,545 - #9 2
INFO  02:36:59,545 - #27 ;
INFO  02:36:59,545 - #8 int
INFO  02:36:59,548 - #8 e
INFO  02:36:59,548 - #27 ;
INFO  02:36:59,548 - #20 {
INFO  02:36:59,550 - #6 void
INFO  02:36:59,551 - #8 main
INFO  02:36:59,551 - #29 (
INFO  02:36:59,552 - #30 )
INFO  02:36:59,552 - #20 {
INFO  02:36:59,552 - #8 e
INFO  02:36:59,552 - #24 =
INFO  02:36:59,553 - #9 1
INFO  02:36:59,553 - #27 ;
INFO  02:36:59,553 - #31 if
INFO  02:36:59,554 - #29 (
INFO  02:36:59,554 - #8 e
INFO  02:36:59,554 - #38 >
INFO  02:36:59,554 - #9 0
INFO  02:36:59,556 - #30 )
INFO  02:36:59,557 - #20 {
INFO  02:36:59,557 - #3 print
INFO  02:36:59,557 - #29 (
INFO  02:36:59,557 - #8 e
INFO  02:36:59,557 - #30 )
INFO  02:36:59,557 - #27 ;
INFO  02:36:59,557 - #21 }
INFO  02:36:59,559 - #21 }
INFO  02:36:59,561 - #21 }
INFO  02:36:59,562 - =====================SINTAKSNO_STABLO=========================
INFO  02:36:59,564 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:36:59,565 - ==============================================================
INFO  02:36:59,591 - Pocetak obrade programa Program na liniji 1
INFO  02:36:59,591 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:36:59,593 - Deklarisana konstanta c na liniji 2
INFO  02:36:59,596 - Deklarisana konstanta d na liniji 2
INFO  02:36:59,597 - Deklarisana konstanta g na liniji 2
INFO  02:36:59,597 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:36:59,597 - Deklarisana promenljiva e na liniji 3
INFO  02:36:59,598 - Pocetak obrade metode main na liniji 5
INFO  02:36:59,598 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:36:59,598 - Zavrsetak obrade programa Program na liniji 1
INFO  02:36:59,598 - ======================TABELA_SIMBOLA==========================
INFO  02:36:59,599 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:36:59,599 - ==============================================================
INFO  02:36:59,599 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:36:59,599 - ==============================================================
INFO  02:36:59,599 - ======================GENERISANJE_KODA========================
INFO  02:36:59,607 - Generisanje koda uspesno zavrseno!
INFO  02:36:59,607 - Generisanje izlaznog fajla test\program.obj
INFO  02:36:59,608 - ==============================================================
INFO  02:37:10,327 - Obrada ulaznog fajla test\program.mj
INFO  02:37:10,427 - #2 program
INFO  02:37:10,427 - #8 Program
INFO  02:37:10,427 - #5 const
INFO  02:37:10,428 - #8 int
INFO  02:37:10,428 - #8 c
INFO  02:37:10,429 - #24 =
INFO  02:37:10,429 - #9 10
INFO  02:37:10,429 - #28 ,
INFO  02:37:10,430 - #8 d
INFO  02:37:10,430 - #24 =
INFO  02:37:10,430 - #9 99
INFO  02:37:10,430 - #28 ,
INFO  02:37:10,431 - #8 g
INFO  02:37:10,431 - #24 =
INFO  02:37:10,431 - #9 2
INFO  02:37:10,431 - #27 ;
INFO  02:37:10,431 - #8 int
INFO  02:37:10,432 - #8 e
INFO  02:37:10,432 - #27 ;
INFO  02:37:10,433 - #20 {
INFO  02:37:10,434 - #6 void
INFO  02:37:10,434 - #8 main
INFO  02:37:10,434 - #29 (
INFO  02:37:10,435 - #30 )
INFO  02:37:10,435 - #20 {
INFO  02:37:10,435 - #8 e
INFO  02:37:10,435 - #24 =
INFO  02:37:10,436 - #9 1
INFO  02:37:10,436 - #27 ;
INFO  02:37:10,437 - #31 if
INFO  02:37:10,437 - #29 (
INFO  02:37:10,437 - #8 e
INFO  02:37:10,437 - #42 <=
INFO  02:37:10,438 - #9 0
INFO  02:37:10,441 - #30 )
INFO  02:37:10,441 - #20 {
INFO  02:37:10,441 - #3 print
INFO  02:37:10,441 - #29 (
INFO  02:37:10,441 - #8 e
INFO  02:37:10,442 - #30 )
INFO  02:37:10,442 - #27 ;
INFO  02:37:10,442 - #21 }
INFO  02:37:10,442 - #21 }
INFO  02:37:10,444 - #21 }
INFO  02:37:10,445 - =====================SINTAKSNO_STABLO=========================
INFO  02:37:10,447 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:37:10,447 - ==============================================================
INFO  02:37:10,462 - Pocetak obrade programa Program na liniji 1
INFO  02:37:10,462 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:37:10,463 - Deklarisana konstanta c na liniji 2
INFO  02:37:10,463 - Deklarisana konstanta d na liniji 2
INFO  02:37:10,463 - Deklarisana konstanta g na liniji 2
INFO  02:37:10,464 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:37:10,464 - Deklarisana promenljiva e na liniji 3
INFO  02:37:10,465 - Pocetak obrade metode main na liniji 5
INFO  02:37:10,465 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:37:10,465 - Zavrsetak obrade programa Program na liniji 1
INFO  02:37:10,465 - ======================TABELA_SIMBOLA==========================
INFO  02:37:10,466 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:37:10,466 - ==============================================================
INFO  02:37:10,467 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:37:10,467 - ==============================================================
INFO  02:37:10,467 - ======================GENERISANJE_KODA========================
INFO  02:37:10,473 - Generisanje koda uspesno zavrseno!
INFO  02:37:10,473 - Generisanje izlaznog fajla test\program.obj
INFO  02:37:10,473 - ==============================================================
INFO  02:38:16,754 - Obrada ulaznog fajla test\program.mj
INFO  02:38:16,872 - #2 program
INFO  02:38:16,872 - #8 Program
INFO  02:38:16,872 - #5 const
INFO  02:38:16,875 - #8 int
INFO  02:38:16,875 - #8 c
INFO  02:38:16,876 - #24 =
INFO  02:38:16,876 - #9 10
INFO  02:38:16,876 - #28 ,
INFO  02:38:16,877 - #8 d
INFO  02:38:16,877 - #24 =
INFO  02:38:16,877 - #9 99
INFO  02:38:16,877 - #28 ,
INFO  02:38:16,878 - #8 g
INFO  02:38:16,878 - #24 =
INFO  02:38:16,878 - #9 2
INFO  02:38:16,878 - #27 ;
INFO  02:38:16,878 - #8 int
INFO  02:38:16,880 - #8 e
INFO  02:38:16,880 - #27 ;
INFO  02:38:16,880 - #20 {
INFO  02:38:16,882 - #6 void
INFO  02:38:16,882 - #8 main
INFO  02:38:16,882 - #29 (
INFO  02:38:16,882 - #30 )
INFO  02:38:16,883 - #20 {
INFO  02:38:16,884 - #8 e
INFO  02:38:16,884 - #24 =
INFO  02:38:16,884 - #9 1
INFO  02:38:16,884 - #27 ;
INFO  02:38:16,885 - #31 if
INFO  02:38:16,885 - #29 (
INFO  02:38:16,885 - #8 e
INFO  02:38:16,885 - #42 <=
INFO  02:38:16,886 - #9 0
INFO  02:38:16,887 - #30 )
INFO  02:38:16,887 - #20 {
INFO  02:38:16,888 - #3 print
INFO  02:38:16,888 - #29 (
INFO  02:38:16,888 - #8 e
INFO  02:38:16,888 - #30 )
INFO  02:38:16,889 - #27 ;
INFO  02:38:16,889 - #21 }
INFO  02:38:16,889 - #21 }
INFO  02:38:16,890 - #21 }
INFO  02:38:16,891 - =====================SINTAKSNO_STABLO=========================
INFO  02:38:16,893 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:38:16,893 - ==============================================================
INFO  02:38:16,905 - Pocetak obrade programa Program na liniji 1
INFO  02:38:16,905 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:38:16,906 - Deklarisana konstanta c na liniji 2
INFO  02:38:16,906 - Deklarisana konstanta d na liniji 2
INFO  02:38:16,906 - Deklarisana konstanta g na liniji 2
INFO  02:38:16,906 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:38:16,906 - Deklarisana promenljiva e na liniji 3
INFO  02:38:16,907 - Pocetak obrade metode main na liniji 5
INFO  02:38:16,908 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:38:16,908 - Zavrsetak obrade programa Program na liniji 1
INFO  02:38:16,908 - ======================TABELA_SIMBOLA==========================
INFO  02:38:16,909 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:38:16,909 - ==============================================================
INFO  02:38:16,909 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:38:16,909 - ==============================================================
INFO  02:38:16,909 - ======================GENERISANJE_KODA========================
ERROR 02:38:16,913 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 02:38:16,915 - Generisanje koda neuspesno!
INFO  02:38:16,915 - ==============================================================
INFO  02:38:21,238 - Obrada ulaznog fajla test\program.mj
INFO  02:38:21,350 - #2 program
INFO  02:38:21,351 - #8 Program
INFO  02:38:21,351 - #5 const
INFO  02:38:21,352 - #8 int
INFO  02:38:21,352 - #8 c
INFO  02:38:21,353 - #24 =
INFO  02:38:21,353 - #9 10
INFO  02:38:21,353 - #28 ,
INFO  02:38:21,354 - #8 d
INFO  02:38:21,354 - #24 =
INFO  02:38:21,354 - #9 99
INFO  02:38:21,355 - #28 ,
INFO  02:38:21,355 - #8 g
INFO  02:38:21,355 - #24 =
INFO  02:38:21,355 - #9 2
INFO  02:38:21,355 - #27 ;
INFO  02:38:21,355 - #8 int
INFO  02:38:21,357 - #8 e
INFO  02:38:21,357 - #27 ;
INFO  02:38:21,357 - #20 {
INFO  02:38:21,358 - #6 void
INFO  02:38:21,359 - #8 main
INFO  02:38:21,359 - #29 (
INFO  02:38:21,359 - #30 )
INFO  02:38:21,360 - #20 {
INFO  02:38:21,360 - #8 e
INFO  02:38:21,360 - #24 =
INFO  02:38:21,360 - #9 1
INFO  02:38:21,360 - #27 ;
INFO  02:38:21,361 - #31 if
INFO  02:38:21,361 - #29 (
INFO  02:38:21,361 - #8 e
INFO  02:38:21,361 - #42 <=
INFO  02:38:21,362 - #9 0
INFO  02:38:21,363 - #30 )
INFO  02:38:21,364 - #20 {
INFO  02:38:21,364 - #3 print
INFO  02:38:21,364 - #29 (
INFO  02:38:21,364 - #8 e
INFO  02:38:21,364 - #30 )
INFO  02:38:21,364 - #27 ;
INFO  02:38:21,364 - #21 }
INFO  02:38:21,364 - #21 }
INFO  02:38:21,366 - #21 }
INFO  02:38:21,367 - =====================SINTAKSNO_STABLO=========================
INFO  02:38:21,369 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:38:21,369 - ==============================================================
INFO  02:38:21,387 - Pocetak obrade programa Program na liniji 1
INFO  02:38:21,387 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:38:21,388 - Deklarisana konstanta c na liniji 2
INFO  02:38:21,388 - Deklarisana konstanta d na liniji 2
INFO  02:38:21,388 - Deklarisana konstanta g na liniji 2
INFO  02:38:21,388 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:38:21,389 - Deklarisana promenljiva e na liniji 3
INFO  02:38:21,389 - Pocetak obrade metode main na liniji 5
INFO  02:38:21,390 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:38:21,390 - Zavrsetak obrade programa Program na liniji 1
INFO  02:38:21,390 - ======================TABELA_SIMBOLA==========================
INFO  02:38:21,391 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:38:21,391 - ==============================================================
INFO  02:38:21,391 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:38:21,391 - ==============================================================
INFO  02:38:21,391 - ======================GENERISANJE_KODA========================
ERROR 02:38:21,396 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 02:38:21,398 - Generisanje koda neuspesno!
INFO  02:38:21,398 - ==============================================================
INFO  02:39:32,444 - Obrada ulaznog fajla test\program.mj
INFO  02:39:32,532 - #2 program
INFO  02:39:32,533 - #8 Program
INFO  02:39:32,533 - #5 const
INFO  02:39:32,534 - #8 int
INFO  02:39:32,534 - #8 c
INFO  02:39:32,535 - #24 =
INFO  02:39:32,535 - #9 10
INFO  02:39:32,535 - #28 ,
INFO  02:39:32,537 - #8 d
INFO  02:39:32,537 - #24 =
INFO  02:39:32,537 - #9 99
INFO  02:39:32,537 - #28 ,
INFO  02:39:32,537 - #8 g
INFO  02:39:32,537 - #24 =
INFO  02:39:32,538 - #9 2
INFO  02:39:32,538 - #27 ;
INFO  02:39:32,538 - #8 int
INFO  02:39:32,539 - #8 e
INFO  02:39:32,539 - #27 ;
INFO  02:39:32,540 - #20 {
INFO  02:39:32,541 - #6 void
INFO  02:39:32,541 - #8 main
INFO  02:39:32,541 - #29 (
INFO  02:39:32,542 - #30 )
INFO  02:39:32,543 - #20 {
INFO  02:39:32,543 - #8 e
INFO  02:39:32,543 - #24 =
INFO  02:39:32,543 - #9 1
INFO  02:39:32,543 - #27 ;
INFO  02:39:32,544 - #31 if
INFO  02:39:32,544 - #29 (
INFO  02:39:32,544 - #8 e
INFO  02:39:32,544 - #42 <=
INFO  02:39:32,545 - #9 0
INFO  02:39:32,546 - #30 )
INFO  02:39:32,591 - #20 {
INFO  02:39:32,591 - #3 print
INFO  02:39:32,591 - #29 (
INFO  02:39:32,591 - #8 e
INFO  02:39:32,592 - #30 )
INFO  02:39:32,592 - #27 ;
INFO  02:39:32,592 - #21 }
INFO  02:39:32,592 - #21 }
INFO  02:39:32,594 - #21 }
INFO  02:39:32,596 - =====================SINTAKSNO_STABLO=========================
INFO  02:39:32,602 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:39:32,603 - ==============================================================
INFO  02:39:32,620 - Pocetak obrade programa Program na liniji 1
INFO  02:39:32,620 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:39:32,621 - Deklarisana konstanta c na liniji 2
INFO  02:39:32,622 - Deklarisana konstanta d na liniji 2
INFO  02:39:32,622 - Deklarisana konstanta g na liniji 2
INFO  02:39:32,622 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:39:32,622 - Deklarisana promenljiva e na liniji 3
INFO  02:39:32,623 - Pocetak obrade metode main na liniji 5
INFO  02:39:32,624 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:39:32,624 - Zavrsetak obrade programa Program na liniji 1
INFO  02:39:32,624 - ======================TABELA_SIMBOLA==========================
INFO  02:39:32,625 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:39:32,625 - ==============================================================
INFO  02:39:32,625 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:39:32,625 - ==============================================================
INFO  02:39:32,625 - ======================GENERISANJE_KODA========================
INFO  02:39:42,421 - Obrada ulaznog fajla test\program.mj
INFO  02:39:42,533 - #2 program
INFO  02:39:42,533 - #8 Program
INFO  02:39:42,533 - #5 const
INFO  02:39:42,534 - #8 int
INFO  02:39:42,534 - #8 c
INFO  02:39:42,535 - #24 =
INFO  02:39:42,535 - #9 10
INFO  02:39:42,535 - #28 ,
INFO  02:39:42,537 - #8 d
INFO  02:39:42,537 - #24 =
INFO  02:39:42,537 - #9 99
INFO  02:39:42,537 - #28 ,
INFO  02:39:42,538 - #8 g
INFO  02:39:42,538 - #24 =
INFO  02:39:42,538 - #9 2
INFO  02:39:42,538 - #27 ;
INFO  02:39:42,538 - #8 int
INFO  02:39:42,539 - #8 e
INFO  02:39:42,539 - #27 ;
INFO  02:39:42,540 - #20 {
INFO  02:39:42,541 - #6 void
INFO  02:39:42,541 - #8 main
INFO  02:39:42,541 - #29 (
INFO  02:39:42,542 - #30 )
INFO  02:39:42,542 - #20 {
INFO  02:39:42,542 - #8 e
INFO  02:39:42,542 - #24 =
INFO  02:39:42,543 - #9 1
INFO  02:39:42,543 - #27 ;
INFO  02:39:42,543 - #31 if
INFO  02:39:42,544 - #29 (
INFO  02:39:42,544 - #8 e
INFO  02:39:42,544 - #42 <=
INFO  02:39:42,544 - #9 0
INFO  02:39:42,546 - #30 )
INFO  02:39:42,547 - #20 {
INFO  02:39:42,547 - #3 print
INFO  02:39:42,547 - #29 (
INFO  02:39:42,547 - #8 e
INFO  02:39:42,547 - #30 )
INFO  02:39:42,547 - #27 ;
INFO  02:39:42,547 - #21 }
INFO  02:39:42,548 - #21 }
INFO  02:39:42,549 - #21 }
INFO  02:39:42,551 - =====================SINTAKSNO_STABLO=========================
INFO  02:39:42,552 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:39:42,570 - ==============================================================
INFO  02:39:42,590 - Pocetak obrade programa Program na liniji 1
INFO  02:39:42,590 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:39:42,592 - Deklarisana konstanta c na liniji 2
INFO  02:39:42,592 - Deklarisana konstanta d na liniji 2
INFO  02:39:42,592 - Deklarisana konstanta g na liniji 2
INFO  02:39:42,592 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:39:42,592 - Deklarisana promenljiva e na liniji 3
INFO  02:39:42,593 - Pocetak obrade metode main na liniji 5
INFO  02:39:42,594 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:39:42,594 - Zavrsetak obrade programa Program na liniji 1
INFO  02:39:42,594 - ======================TABELA_SIMBOLA==========================
INFO  02:39:42,594 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:39:42,594 - ==============================================================
INFO  02:39:42,595 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:39:42,595 - ==============================================================
INFO  02:39:42,595 - ======================GENERISANJE_KODA========================
INFO  02:40:57,951 - Obrada ulaznog fajla test\program.mj
INFO  02:40:58,075 - #2 program
INFO  02:40:58,075 - #8 Program
INFO  02:40:58,075 - #5 const
INFO  02:40:58,077 - #8 int
INFO  02:40:58,077 - #8 c
INFO  02:40:58,080 - #24 =
INFO  02:40:58,080 - #9 10
INFO  02:40:58,081 - #28 ,
INFO  02:40:58,082 - #8 d
INFO  02:40:58,082 - #24 =
INFO  02:40:58,082 - #9 99
INFO  02:40:58,083 - #28 ,
INFO  02:40:58,083 - #8 g
INFO  02:40:58,083 - #24 =
INFO  02:40:58,083 - #9 2
INFO  02:40:58,083 - #27 ;
INFO  02:40:58,084 - #8 int
INFO  02:40:58,086 - #8 e
INFO  02:40:58,086 - #27 ;
INFO  02:40:58,086 - #20 {
INFO  02:40:58,088 - #6 void
INFO  02:40:58,089 - #8 main
INFO  02:40:58,089 - #29 (
INFO  02:40:58,089 - #30 )
INFO  02:40:58,090 - #20 {
INFO  02:40:58,090 - #8 e
INFO  02:40:58,090 - #24 =
INFO  02:40:58,090 - #9 1
INFO  02:40:58,090 - #27 ;
INFO  02:40:58,091 - #31 if
INFO  02:40:58,091 - #29 (
INFO  02:40:58,091 - #8 e
INFO  02:40:58,092 - #42 <=
INFO  02:40:58,092 - #9 0
INFO  02:40:58,093 - #30 )
INFO  02:40:58,094 - #20 {
INFO  02:40:58,094 - #3 print
INFO  02:40:58,094 - #29 (
INFO  02:40:58,094 - #8 e
INFO  02:40:58,094 - #30 )
INFO  02:40:58,094 - #27 ;
INFO  02:40:58,094 - #21 }
INFO  02:40:58,095 - #21 }
INFO  02:40:58,097 - #21 }
INFO  02:40:58,098 - =====================SINTAKSNO_STABLO=========================
INFO  02:40:58,100 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:40:58,101 - ==============================================================
INFO  02:40:58,125 - Pocetak obrade programa Program na liniji 1
INFO  02:40:58,125 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:40:58,126 - Deklarisana konstanta c na liniji 2
INFO  02:40:58,126 - Deklarisana konstanta d na liniji 2
INFO  02:40:58,126 - Deklarisana konstanta g na liniji 2
INFO  02:40:58,126 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:40:58,127 - Deklarisana promenljiva e na liniji 3
INFO  02:40:58,127 - Pocetak obrade metode main na liniji 5
INFO  02:40:58,128 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:40:58,128 - Zavrsetak obrade programa Program na liniji 1
INFO  02:40:58,128 - ======================TABELA_SIMBOLA==========================
INFO  02:40:58,129 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:40:58,129 - ==============================================================
INFO  02:40:58,129 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:40:58,129 - ==============================================================
INFO  02:40:58,129 - ======================GENERISANJE_KODA========================
INFO  02:40:58,135 - Generisanje koda uspesno zavrseno!
INFO  02:40:58,135 - Generisanje izlaznog fajla test\program.obj
INFO  02:40:58,135 - ==============================================================
INFO  02:42:32,210 - Obrada ulaznog fajla test\program.mj
INFO  02:42:32,300 - #2 program
INFO  02:42:32,300 - #8 Program
INFO  02:42:32,300 - #5 const
INFO  02:42:32,301 - #8 int
INFO  02:42:32,301 - #8 c
INFO  02:42:32,302 - #24 =
INFO  02:42:32,302 - #9 10
INFO  02:42:32,302 - #28 ,
INFO  02:42:32,303 - #8 d
INFO  02:42:32,304 - #24 =
INFO  02:42:32,304 - #9 99
INFO  02:42:32,304 - #28 ,
INFO  02:42:32,304 - #8 g
INFO  02:42:32,304 - #24 =
INFO  02:42:32,304 - #9 2
INFO  02:42:32,304 - #27 ;
INFO  02:42:32,304 - #8 int
INFO  02:42:32,306 - #8 e
INFO  02:42:32,306 - #27 ;
INFO  02:42:32,306 - #20 {
INFO  02:42:32,307 - #6 void
INFO  02:42:32,308 - #8 main
INFO  02:42:32,308 - #29 (
INFO  02:42:32,309 - #30 )
INFO  02:42:32,309 - #20 {
INFO  02:42:32,309 - #8 e
INFO  02:42:32,309 - #24 =
INFO  02:42:32,309 - #9 1
INFO  02:42:32,309 - #27 ;
INFO  02:42:32,310 - #31 if
INFO  02:42:32,310 - #29 (
INFO  02:42:32,311 - #8 e
INFO  02:42:32,311 - #42 <=
INFO  02:42:32,311 - #9 0
INFO  02:42:32,312 - #30 )
INFO  02:42:32,313 - #20 {
INFO  02:42:32,313 - #3 print
INFO  02:42:32,313 - #29 (
INFO  02:42:32,313 - #8 e
INFO  02:42:32,313 - #30 )
INFO  02:42:32,314 - #27 ;
INFO  02:42:32,314 - #21 }
INFO  02:42:32,314 - #21 }
INFO  02:42:32,315 - #21 }
INFO  02:42:32,316 - =====================SINTAKSNO_STABLO=========================
INFO  02:42:32,318 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:42:32,319 - ==============================================================
INFO  02:42:32,334 - Pocetak obrade programa Program na liniji 1
INFO  02:42:32,334 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:42:32,335 - Deklarisana konstanta c na liniji 2
INFO  02:42:32,336 - Deklarisana konstanta d na liniji 2
INFO  02:42:32,336 - Deklarisana konstanta g na liniji 2
INFO  02:42:32,336 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:42:32,336 - Deklarisana promenljiva e na liniji 3
INFO  02:42:32,337 - Pocetak obrade metode main na liniji 5
INFO  02:42:32,337 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:42:32,338 - Zavrsetak obrade programa Program na liniji 1
INFO  02:42:32,338 - ======================TABELA_SIMBOLA==========================
INFO  02:42:32,338 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:42:32,338 - ==============================================================
INFO  02:42:32,338 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:46:36,205 - Obrada ulaznog fajla test\program.mj
INFO  02:46:36,313 - #2 program
INFO  02:46:36,313 - #8 Program
INFO  02:46:36,313 - #5 const
INFO  02:46:36,314 - #8 int
INFO  02:46:36,314 - #8 c
INFO  02:46:36,315 - #24 =
INFO  02:46:36,315 - #9 10
INFO  02:46:36,316 - #28 ,
INFO  02:46:36,317 - #8 d
INFO  02:46:36,317 - #24 =
INFO  02:46:36,318 - #9 99
INFO  02:46:36,318 - #28 ,
INFO  02:46:36,318 - #8 g
INFO  02:46:36,319 - #24 =
INFO  02:46:36,319 - #9 2
INFO  02:46:36,319 - #27 ;
INFO  02:46:36,319 - #8 int
INFO  02:46:36,321 - #8 e
INFO  02:46:36,322 - #27 ;
INFO  02:46:36,322 - #20 {
INFO  02:46:36,324 - #6 void
INFO  02:46:36,325 - #8 main
INFO  02:46:36,325 - #29 (
INFO  02:46:36,326 - #30 )
INFO  02:46:36,326 - #20 {
INFO  02:46:36,326 - #8 e
INFO  02:46:36,326 - #24 =
INFO  02:46:36,327 - #9 1
INFO  02:46:36,327 - #27 ;
INFO  02:46:36,327 - #31 if
INFO  02:46:36,328 - #29 (
INFO  02:46:36,328 - #8 e
INFO  02:46:36,328 - #42 <=
INFO  02:46:36,328 - #9 0
INFO  02:46:36,330 - #30 )
INFO  02:46:36,331 - #20 {
INFO  02:46:36,331 - #3 print
INFO  02:46:36,331 - #29 (
INFO  02:46:36,331 - #8 e
INFO  02:46:36,331 - #30 )
INFO  02:46:36,331 - #27 ;
INFO  02:46:36,331 - #21 }
INFO  02:46:36,333 - #21 }
INFO  02:46:36,334 - #21 }
INFO  02:46:36,336 - =====================SINTAKSNO_STABLO=========================
INFO  02:46:36,337 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:46:36,338 - ==============================================================
INFO  02:46:36,353 - Pocetak obrade programa Program na liniji 1
INFO  02:46:36,353 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:46:36,355 - Deklarisana konstanta c na liniji 2
INFO  02:46:36,355 - Deklarisana konstanta d na liniji 2
INFO  02:46:36,355 - Deklarisana konstanta g na liniji 2
INFO  02:46:36,355 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:46:36,355 - Deklarisana promenljiva e na liniji 3
INFO  02:46:36,356 - Pocetak obrade metode main na liniji 5
INFO  02:46:36,357 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:46:36,357 - Zavrsetak obrade programa Program na liniji 1
INFO  02:46:36,357 - ======================TABELA_SIMBOLA==========================
INFO  02:46:36,358 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:46:36,359 - ==============================================================
INFO  02:46:36,359 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:46:36,359 - ==============================================================
INFO  02:46:36,359 - ======================GENERISANJE_KODA========================
ERROR 02:46:36,365 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 02:46:36,366 - Generisanje koda neuspesno!
INFO  02:46:36,367 - ==============================================================
INFO  02:49:37,787 - Obrada ulaznog fajla test\program.mj
INFO  02:49:37,867 - #2 program
INFO  02:49:37,867 - #8 Program
INFO  02:49:37,867 - #5 const
INFO  02:49:37,868 - #8 int
INFO  02:49:37,868 - #8 c
INFO  02:49:37,869 - #24 =
INFO  02:49:37,869 - #9 10
INFO  02:49:37,869 - #28 ,
INFO  02:49:37,870 - #8 d
INFO  02:49:37,871 - #24 =
INFO  02:49:37,871 - #9 99
INFO  02:49:37,871 - #28 ,
INFO  02:49:37,871 - #8 g
INFO  02:49:37,871 - #24 =
INFO  02:49:37,871 - #9 2
INFO  02:49:37,871 - #27 ;
INFO  02:49:37,871 - #8 int
INFO  02:49:37,873 - #8 e
INFO  02:49:37,873 - #27 ;
INFO  02:49:37,873 - #20 {
INFO  02:49:37,875 - #6 void
INFO  02:49:37,875 - #8 main
INFO  02:49:37,875 - #29 (
INFO  02:49:37,876 - #30 )
INFO  02:49:37,876 - #20 {
INFO  02:49:37,876 - #8 e
INFO  02:49:37,876 - #24 =
INFO  02:49:37,876 - #9 1
INFO  02:49:37,876 - #27 ;
INFO  02:49:37,877 - #31 if
INFO  02:49:37,877 - #29 (
INFO  02:49:37,877 - #8 e
INFO  02:49:37,877 - #42 <=
INFO  02:49:37,878 - #9 0
INFO  02:49:37,879 - #30 )
INFO  02:49:37,880 - #20 {
INFO  02:49:37,880 - #3 print
INFO  02:49:37,880 - #29 (
INFO  02:49:37,881 - #8 e
INFO  02:49:37,881 - #30 )
INFO  02:49:37,881 - #27 ;
INFO  02:49:37,881 - #21 }
INFO  02:49:37,881 - #21 }
INFO  02:49:37,882 - #21 }
INFO  02:49:37,883 - =====================SINTAKSNO_STABLO=========================
INFO  02:49:37,885 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:49:37,905 - ==============================================================
INFO  02:49:37,918 - Pocetak obrade programa Program na liniji 1
INFO  02:49:37,919 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:49:37,920 - Deklarisana konstanta c na liniji 2
INFO  02:49:37,920 - Deklarisana konstanta d na liniji 2
INFO  02:49:37,920 - Deklarisana konstanta g na liniji 2
INFO  02:49:37,920 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:49:37,920 - Deklarisana promenljiva e na liniji 3
INFO  02:49:37,921 - Pocetak obrade metode main na liniji 5
INFO  02:49:37,921 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:49:37,922 - Zavrsetak obrade programa Program na liniji 1
INFO  02:49:37,922 - ======================TABELA_SIMBOLA==========================
INFO  02:49:37,922 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:49:37,922 - ==============================================================
INFO  02:49:37,923 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:49:37,923 - ==============================================================
INFO  02:49:37,923 - ======================GENERISANJE_KODA========================
INFO  02:49:37,930 - Generisanje koda uspesno zavrseno!
INFO  02:49:37,931 - Generisanje izlaznog fajla test\program.obj
INFO  02:49:37,931 - ==============================================================
INFO  02:50:29,149 - Obrada ulaznog fajla test\program.mj
INFO  02:50:29,255 - #2 program
INFO  02:50:29,255 - #8 Program
INFO  02:50:29,255 - #5 const
INFO  02:50:29,257 - #8 int
INFO  02:50:29,257 - #8 c
INFO  02:50:29,259 - #24 =
INFO  02:50:29,259 - #9 10
INFO  02:50:29,260 - #28 ,
INFO  02:50:29,261 - #8 d
INFO  02:50:29,261 - #24 =
INFO  02:50:29,261 - #9 99
INFO  02:50:29,262 - #28 ,
INFO  02:50:29,262 - #8 g
INFO  02:50:29,262 - #24 =
INFO  02:50:29,262 - #9 2
INFO  02:50:29,262 - #27 ;
INFO  02:50:29,262 - #8 int
INFO  02:50:29,270 - #8 e
INFO  02:50:29,270 - #27 ;
INFO  02:50:29,270 - #20 {
INFO  02:50:29,272 - #6 void
INFO  02:50:29,272 - #8 main
INFO  02:50:29,272 - #29 (
INFO  02:50:29,273 - #30 )
INFO  02:50:29,274 - #20 {
INFO  02:50:29,274 - #8 e
INFO  02:50:29,274 - #24 =
INFO  02:50:29,274 - #9 1
INFO  02:50:29,274 - #27 ;
INFO  02:50:29,275 - #31 if
INFO  02:50:29,276 - #29 (
INFO  02:50:29,276 - #8 e
INFO  02:50:29,276 - #42 <=
INFO  02:50:29,276 - #9 0
INFO  02:50:29,278 - #30 )
INFO  02:50:29,278 - #20 {
INFO  02:50:29,278 - #3 print
INFO  02:50:29,278 - #29 (
INFO  02:50:29,279 - #8 e
INFO  02:50:29,279 - #30 )
INFO  02:50:29,279 - #27 ;
INFO  02:50:29,279 - #21 }
INFO  02:50:29,279 - #21 }
INFO  02:50:29,280 - #21 }
INFO  02:50:29,281 - =====================SINTAKSNO_STABLO=========================
INFO  02:50:29,283 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:50:29,284 - ==============================================================
INFO  02:50:29,298 - Pocetak obrade programa Program na liniji 1
INFO  02:50:29,298 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:50:29,300 - Deklarisana konstanta c na liniji 2
INFO  02:50:29,300 - Deklarisana konstanta d na liniji 2
INFO  02:50:29,300 - Deklarisana konstanta g na liniji 2
INFO  02:50:29,300 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:50:29,300 - Deklarisana promenljiva e na liniji 3
INFO  02:50:29,301 - Pocetak obrade metode main na liniji 5
INFO  02:50:29,301 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:50:29,301 - Zavrsetak obrade programa Program na liniji 1
INFO  02:50:29,302 - ======================TABELA_SIMBOLA==========================
INFO  02:50:29,302 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:50:29,302 - ==============================================================
INFO  02:50:29,302 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:50:29,302 - ==============================================================
INFO  02:50:29,302 - ======================GENERISANJE_KODA========================
INFO  02:50:29,309 - Generisanje koda uspesno zavrseno!
INFO  02:50:29,310 - Generisanje izlaznog fajla test\program.obj
INFO  02:50:29,310 - ==============================================================
INFO  02:50:50,368 - Obrada ulaznog fajla test\program.mj
INFO  02:50:50,462 - #2 program
INFO  02:50:50,462 - #8 Program
INFO  02:50:50,462 - #5 const
INFO  02:50:50,463 - #8 int
INFO  02:50:50,463 - #8 c
INFO  02:50:50,464 - #24 =
INFO  02:50:50,464 - #9 10
INFO  02:50:50,464 - #28 ,
INFO  02:50:50,465 - #8 d
INFO  02:50:50,466 - #24 =
INFO  02:50:50,466 - #9 99
INFO  02:50:50,466 - #28 ,
INFO  02:50:50,466 - #8 g
INFO  02:50:50,467 - #24 =
INFO  02:50:50,467 - #9 2
INFO  02:50:50,467 - #27 ;
INFO  02:50:50,467 - #8 int
INFO  02:50:50,469 - #8 e
INFO  02:50:50,469 - #27 ;
INFO  02:50:50,469 - #20 {
INFO  02:50:50,470 - #6 void
INFO  02:50:50,471 - #8 main
INFO  02:50:50,471 - #29 (
INFO  02:50:50,472 - #30 )
INFO  02:50:50,472 - #20 {
INFO  02:50:50,472 - #8 e
INFO  02:50:50,472 - #24 =
INFO  02:50:50,472 - #9 1
INFO  02:50:50,472 - #27 ;
INFO  02:50:50,474 - #31 if
INFO  02:50:50,474 - #29 (
INFO  02:50:50,474 - #8 e
INFO  02:50:50,474 - #42 <=
INFO  02:50:50,475 - #9 0
INFO  02:50:50,476 - #30 )
INFO  02:50:50,477 - #20 {
INFO  02:50:50,477 - #3 print
INFO  02:50:50,477 - #29 (
INFO  02:50:50,477 - #8 e
INFO  02:50:50,477 - #30 )
INFO  02:50:50,477 - #27 ;
INFO  02:50:50,477 - #21 }
INFO  02:50:50,478 - #21 }
INFO  02:50:50,480 - #21 }
INFO  02:50:50,481 - =====================SINTAKSNO_STABLO=========================
INFO  02:50:50,483 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:50:50,494 - ==============================================================
INFO  02:50:50,514 - Pocetak obrade programa Program na liniji 1
INFO  02:50:50,514 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:50:50,515 - Deklarisana konstanta c na liniji 2
INFO  02:50:50,515 - Deklarisana konstanta d na liniji 2
INFO  02:50:50,515 - Deklarisana konstanta g na liniji 2
INFO  02:50:50,515 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:50:50,515 - Deklarisana promenljiva e na liniji 3
INFO  02:50:50,516 - Pocetak obrade metode main na liniji 5
INFO  02:50:50,517 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:50:50,517 - Zavrsetak obrade programa Program na liniji 1
INFO  02:50:50,517 - ======================TABELA_SIMBOLA==========================
INFO  02:50:50,518 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:50:50,518 - ==============================================================
INFO  02:50:50,518 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:57:41,154 - Obrada ulaznog fajla test\program.mj
INFO  02:57:41,242 - #2 program
INFO  02:57:41,242 - #8 Program
INFO  02:57:41,242 - #5 const
INFO  02:57:41,244 - #8 int
INFO  02:57:41,244 - #8 c
INFO  02:57:41,245 - #24 =
INFO  02:57:41,245 - #9 10
INFO  02:57:41,245 - #28 ,
INFO  02:57:41,247 - #8 d
INFO  02:57:41,247 - #24 =
INFO  02:57:41,247 - #9 99
INFO  02:57:41,247 - #28 ,
INFO  02:57:41,247 - #8 g
INFO  02:57:41,248 - #24 =
INFO  02:57:41,248 - #9 2
INFO  02:57:41,248 - #27 ;
INFO  02:57:41,248 - #8 int
INFO  02:57:41,250 - #8 e
INFO  02:57:41,250 - #27 ;
INFO  02:57:41,250 - #20 {
INFO  02:57:41,252 - #6 void
INFO  02:57:41,252 - #8 main
INFO  02:57:41,253 - #29 (
INFO  02:57:41,254 - #30 )
INFO  02:57:41,254 - #20 {
INFO  02:57:41,255 - #8 e
INFO  02:57:41,255 - #24 =
INFO  02:57:41,255 - #9 1
INFO  02:57:41,255 - #27 ;
INFO  02:57:41,256 - #31 if
INFO  02:57:41,256 - #29 (
INFO  02:57:41,256 - #8 e
INFO  02:57:41,256 - #42 <=
INFO  02:57:41,256 - #9 0
INFO  02:57:41,258 - #30 )
INFO  02:57:41,258 - #20 {
INFO  02:57:41,259 - #3 print
INFO  02:57:41,259 - #29 (
INFO  02:57:41,259 - #8 e
INFO  02:57:41,259 - #30 )
INFO  02:57:41,259 - #27 ;
INFO  02:57:41,259 - #21 }
INFO  02:57:41,261 - #21 }
INFO  02:57:41,262 - #21 }
INFO  02:57:41,264 - =====================SINTAKSNO_STABLO=========================
INFO  02:57:41,266 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:57:41,267 - ==============================================================
INFO  02:57:41,285 - Pocetak obrade programa Program na liniji 1
INFO  02:57:41,285 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:57:41,287 - Deklarisana konstanta c na liniji 2
INFO  02:57:41,288 - Deklarisana konstanta d na liniji 2
INFO  02:57:41,288 - Deklarisana konstanta g na liniji 2
INFO  02:57:41,288 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:57:41,288 - Deklarisana promenljiva e na liniji 3
INFO  02:57:41,289 - Pocetak obrade metode main na liniji 5
INFO  02:57:41,290 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:57:41,290 - Zavrsetak obrade programa Program na liniji 1
INFO  02:57:41,290 - ======================TABELA_SIMBOLA==========================
INFO  02:57:41,291 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:57:41,291 - ==============================================================
INFO  02:57:41,291 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:57:41,291 - ==============================================================
INFO  02:57:41,291 - ======================GENERISANJE_KODA========================
INFO  02:57:41,297 - Generisanje koda uspesno zavrseno!
INFO  02:57:41,297 - Generisanje izlaznog fajla test\program.obj
INFO  02:57:41,297 - ==============================================================
INFO  02:58:15,937 - Obrada ulaznog fajla test\program.mj
INFO  02:58:16,034 - #2 program
INFO  02:58:16,035 - #8 Program
INFO  02:58:16,035 - #5 const
INFO  02:58:16,036 - #8 int
INFO  02:58:16,038 - #8 c
INFO  02:58:16,041 - #24 =
INFO  02:58:16,041 - #9 10
INFO  02:58:16,042 - #28 ,
INFO  02:58:16,043 - #8 d
INFO  02:58:16,043 - #24 =
INFO  02:58:16,043 - #9 99
INFO  02:58:16,044 - #28 ,
INFO  02:58:16,044 - #8 g
INFO  02:58:16,044 - #24 =
INFO  02:58:16,044 - #9 2
INFO  02:58:16,045 - #27 ;
INFO  02:58:16,045 - #8 int
INFO  02:58:16,047 - #8 e
INFO  02:58:16,047 - #27 ;
INFO  02:58:16,048 - #20 {
INFO  02:58:16,050 - #6 void
INFO  02:58:16,051 - #8 main
INFO  02:58:16,051 - #29 (
INFO  02:58:16,052 - #30 )
INFO  02:58:16,052 - #20 {
INFO  02:58:16,052 - #8 e
INFO  02:58:16,053 - #24 =
INFO  02:58:16,054 - #9 1
INFO  02:58:16,054 - #27 ;
INFO  02:58:16,054 - #31 if
INFO  02:58:16,055 - #29 (
INFO  02:58:16,055 - #8 e
INFO  02:58:16,055 - #42 <=
INFO  02:58:16,055 - #9 0
INFO  02:58:16,057 - #30 )
INFO  02:58:16,058 - #20 {
INFO  02:58:16,058 - #3 print
INFO  02:58:16,058 - #29 (
INFO  02:58:16,058 - #8 e
INFO  02:58:16,058 - #30 )
INFO  02:58:16,058 - #27 ;
INFO  02:58:16,059 - #21 }
INFO  02:58:16,061 - #21 }
INFO  02:58:16,063 - #21 }
INFO  02:58:16,064 - =====================SINTAKSNO_STABLO=========================
INFO  02:58:16,067 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:58:16,067 - ==============================================================
INFO  02:58:16,089 - Pocetak obrade programa Program na liniji 1
INFO  02:58:16,089 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:58:16,092 - Deklarisana konstanta c na liniji 2
INFO  02:58:16,092 - Deklarisana konstanta d na liniji 2
INFO  02:58:16,092 - Deklarisana konstanta g na liniji 2
INFO  02:58:16,092 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:58:16,093 - Deklarisana promenljiva e na liniji 3
INFO  02:58:16,094 - Pocetak obrade metode main na liniji 5
INFO  02:58:16,094 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:58:16,094 - Zavrsetak obrade programa Program na liniji 1
INFO  02:58:16,094 - ======================TABELA_SIMBOLA==========================
INFO  02:58:16,095 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:58:16,095 - ==============================================================
INFO  02:58:16,095 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:58:16,095 - ==============================================================
INFO  02:58:16,095 - ======================GENERISANJE_KODA========================
INFO  02:58:16,101 - Generisanje koda uspesno zavrseno!
INFO  02:58:16,101 - Generisanje izlaznog fajla test\program.obj
INFO  02:58:16,101 - ==============================================================
INFO  02:59:09,624 - Obrada ulaznog fajla test\program.mj
INFO  02:59:09,732 - #2 program
INFO  02:59:09,732 - #8 Program
INFO  02:59:09,732 - #5 const
INFO  02:59:09,734 - #8 int
INFO  02:59:09,734 - #8 c
INFO  02:59:09,735 - #24 =
INFO  02:59:09,735 - #9 10
INFO  02:59:09,735 - #28 ,
INFO  02:59:09,738 - #8 d
INFO  02:59:09,738 - #24 =
INFO  02:59:09,738 - #9 99
INFO  02:59:09,738 - #28 ,
INFO  02:59:09,739 - #8 g
INFO  02:59:09,739 - #24 =
INFO  02:59:09,739 - #9 2
INFO  02:59:09,739 - #27 ;
INFO  02:59:09,739 - #8 int
INFO  02:59:09,741 - #8 e
INFO  02:59:09,741 - #27 ;
INFO  02:59:09,742 - #20 {
INFO  02:59:09,744 - #6 void
INFO  02:59:09,744 - #8 main
INFO  02:59:09,744 - #29 (
INFO  02:59:09,745 - #30 )
INFO  02:59:09,745 - #20 {
INFO  02:59:09,745 - #8 e
INFO  02:59:09,745 - #24 =
INFO  02:59:09,746 - #9 1
INFO  02:59:09,746 - #27 ;
INFO  02:59:09,746 - #31 if
INFO  02:59:09,747 - #29 (
INFO  02:59:09,747 - #8 e
INFO  02:59:09,747 - #42 <=
INFO  02:59:09,747 - #9 0
INFO  02:59:09,748 - #30 )
INFO  02:59:09,749 - #20 {
INFO  02:59:09,749 - #3 print
INFO  02:59:09,749 - #29 (
INFO  02:59:09,749 - #8 e
INFO  02:59:09,749 - #30 )
INFO  02:59:09,749 - #27 ;
INFO  02:59:09,750 - #21 }
INFO  02:59:09,751 - #21 }
INFO  02:59:09,753 - #21 }
INFO  02:59:09,754 - =====================SINTAKSNO_STABLO=========================
INFO  02:59:09,756 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:59:09,756 - ==============================================================
INFO  02:59:09,780 - Pocetak obrade programa Program na liniji 1
INFO  02:59:09,781 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:59:09,782 - Deklarisana konstanta c na liniji 2
INFO  02:59:09,782 - Deklarisana konstanta d na liniji 2
INFO  02:59:09,782 - Deklarisana konstanta g na liniji 2
INFO  02:59:09,782 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:59:09,782 - Deklarisana promenljiva e na liniji 3
INFO  02:59:09,783 - Pocetak obrade metode main na liniji 5
INFO  02:59:09,783 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:59:09,783 - Zavrsetak obrade programa Program na liniji 1
INFO  02:59:09,783 - ======================TABELA_SIMBOLA==========================
INFO  02:59:09,784 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:59:09,784 - ==============================================================
INFO  02:59:09,784 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:59:09,785 - ==============================================================
INFO  02:59:09,785 - ======================GENERISANJE_KODA========================
ERROR 02:59:09,789 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 02:59:09,791 - Generisanje koda neuspesno!
INFO  02:59:09,791 - ==============================================================
INFO  02:59:15,655 - Obrada ulaznog fajla test\program.mj
INFO  02:59:15,775 - #2 program
INFO  02:59:15,775 - #8 Program
INFO  02:59:15,775 - #5 const
INFO  02:59:15,776 - #8 int
INFO  02:59:15,776 - #8 c
INFO  02:59:15,777 - #24 =
INFO  02:59:15,777 - #9 10
INFO  02:59:15,777 - #28 ,
INFO  02:59:15,778 - #8 d
INFO  02:59:15,779 - #24 =
INFO  02:59:15,779 - #9 99
INFO  02:59:15,779 - #28 ,
INFO  02:59:15,779 - #8 g
INFO  02:59:15,779 - #24 =
INFO  02:59:15,779 - #9 2
INFO  02:59:15,779 - #27 ;
INFO  02:59:15,780 - #8 int
INFO  02:59:15,781 - #8 e
INFO  02:59:15,781 - #27 ;
INFO  02:59:15,782 - #20 {
INFO  02:59:15,783 - #6 void
INFO  02:59:15,783 - #8 main
INFO  02:59:15,783 - #29 (
INFO  02:59:15,784 - #30 )
INFO  02:59:15,784 - #20 {
INFO  02:59:15,784 - #8 e
INFO  02:59:15,785 - #24 =
INFO  02:59:15,785 - #9 1
INFO  02:59:15,785 - #27 ;
INFO  02:59:15,787 - #31 if
INFO  02:59:15,788 - #29 (
INFO  02:59:15,788 - #8 e
INFO  02:59:15,788 - #42 <=
INFO  02:59:15,788 - #9 0
INFO  02:59:15,790 - #30 )
INFO  02:59:15,791 - #20 {
INFO  02:59:15,791 - #3 print
INFO  02:59:15,791 - #29 (
INFO  02:59:15,791 - #8 e
INFO  02:59:15,791 - #30 )
INFO  02:59:15,791 - #27 ;
INFO  02:59:15,792 - #21 }
INFO  02:59:15,792 - #21 }
INFO  02:59:15,793 - #21 }
INFO  02:59:15,795 - =====================SINTAKSNO_STABLO=========================
INFO  02:59:15,797 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:59:15,798 - ==============================================================
INFO  02:59:15,813 - Pocetak obrade programa Program na liniji 1
INFO  02:59:15,813 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:59:15,814 - Deklarisana konstanta c na liniji 2
INFO  02:59:15,814 - Deklarisana konstanta d na liniji 2
INFO  02:59:15,815 - Deklarisana konstanta g na liniji 2
INFO  02:59:15,815 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:59:15,815 - Deklarisana promenljiva e na liniji 3
INFO  02:59:15,816 - Pocetak obrade metode main na liniji 5
INFO  02:59:15,817 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:59:15,817 - Zavrsetak obrade programa Program na liniji 1
INFO  02:59:15,817 - ======================TABELA_SIMBOLA==========================
INFO  02:59:15,818 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:59:15,819 - ==============================================================
INFO  02:59:15,819 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:59:15,819 - ==============================================================
INFO  02:59:15,819 - ======================GENERISANJE_KODA========================
ERROR 02:59:15,824 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 02:59:15,825 - Generisanje koda neuspesno!
INFO  02:59:15,825 - ==============================================================
INFO  03:46:59,963 - Obrada ulaznog fajla test\program.mj
INFO  03:47:00,062 - #2 program
INFO  03:47:00,062 - #8 Program
INFO  03:47:00,062 - #5 const
INFO  03:47:00,063 - #8 int
INFO  03:47:00,063 - #8 c
INFO  03:47:00,064 - #24 =
INFO  03:47:00,064 - #9 10
INFO  03:47:00,064 - #28 ,
INFO  03:47:00,066 - #8 d
INFO  03:47:00,066 - #24 =
INFO  03:47:00,066 - #9 99
INFO  03:47:00,066 - #28 ,
INFO  03:47:00,067 - #8 g
INFO  03:47:00,067 - #24 =
INFO  03:47:00,067 - #9 2
INFO  03:47:00,067 - #27 ;
INFO  03:47:00,067 - #8 int
INFO  03:47:00,069 - #8 e
INFO  03:47:00,069 - #27 ;
INFO  03:47:00,069 - #20 {
INFO  03:47:00,070 - #6 void
INFO  03:47:00,070 - #8 main
INFO  03:47:00,071 - #29 (
INFO  03:47:00,071 - #30 )
INFO  03:47:00,072 - #20 {
INFO  03:47:00,072 - #8 e
INFO  03:47:00,072 - #24 =
INFO  03:47:00,072 - #9 1
INFO  03:47:00,072 - #27 ;
INFO  03:47:00,073 - #31 if
INFO  03:47:00,073 - #29 (
INFO  03:47:00,073 - #8 e
INFO  03:47:00,073 - #42 <=
INFO  03:47:00,073 - #9 0
INFO  03:47:00,075 - #30 )
INFO  03:47:00,076 - #20 {
INFO  03:47:00,076 - #3 print
INFO  03:47:00,076 - #29 (
INFO  03:47:00,076 - #8 e
INFO  03:47:00,076 - #30 )
INFO  03:47:00,076 - #27 ;
INFO  03:47:00,076 - #21 }
INFO  03:47:00,077 - #21 }
INFO  03:47:00,079 - #21 }
INFO  03:47:00,080 - =====================SINTAKSNO_STABLO=========================
INFO  03:47:00,082 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:47:00,083 - ==============================================================
INFO  03:47:00,099 - Pocetak obrade programa Program na liniji 1
INFO  03:47:00,099 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:47:00,100 - Deklarisana konstanta c na liniji 2
INFO  03:47:00,100 - Deklarisana konstanta d na liniji 2
INFO  03:47:00,100 - Deklarisana konstanta g na liniji 2
INFO  03:47:00,100 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:47:00,100 - Deklarisana promenljiva e na liniji 3
INFO  03:47:00,101 - Pocetak obrade metode main na liniji 5
INFO  03:47:00,101 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:47:00,101 - Zavrsetak obrade programa Program na liniji 1
INFO  03:47:00,101 - ======================TABELA_SIMBOLA==========================
INFO  03:47:00,102 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:47:00,102 - ==============================================================
INFO  03:47:00,102 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:47:00,102 - ==============================================================
INFO  03:47:00,102 - ======================GENERISANJE_KODA========================
ERROR 03:47:00,107 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 03:47:00,108 - Generisanje koda neuspesno!
INFO  03:47:00,109 - ==============================================================
INFO  03:47:04,368 - Obrada ulaznog fajla test\program.mj
INFO  03:47:04,481 - #2 program
INFO  03:47:04,481 - #8 Program
INFO  03:47:04,481 - #5 const
INFO  03:47:04,482 - #8 int
INFO  03:47:04,482 - #8 c
INFO  03:47:04,483 - #24 =
INFO  03:47:04,484 - #9 10
INFO  03:47:04,484 - #28 ,
INFO  03:47:04,485 - #8 d
INFO  03:47:04,485 - #24 =
INFO  03:47:04,485 - #9 99
INFO  03:47:04,485 - #28 ,
INFO  03:47:04,486 - #8 g
INFO  03:47:04,486 - #24 =
INFO  03:47:04,486 - #9 2
INFO  03:47:04,486 - #27 ;
INFO  03:47:04,487 - #8 int
INFO  03:47:04,488 - #8 e
INFO  03:47:04,488 - #27 ;
INFO  03:47:04,488 - #20 {
INFO  03:47:04,491 - #6 void
INFO  03:47:04,491 - #8 main
INFO  03:47:04,491 - #29 (
INFO  03:47:04,492 - #30 )
INFO  03:47:04,492 - #20 {
INFO  03:47:04,492 - #8 e
INFO  03:47:04,492 - #24 =
INFO  03:47:04,493 - #9 1
INFO  03:47:04,493 - #27 ;
INFO  03:47:04,493 - #31 if
INFO  03:47:04,494 - #29 (
INFO  03:47:04,494 - #8 e
INFO  03:47:04,494 - #42 <=
INFO  03:47:04,494 - #9 0
INFO  03:47:04,496 - #30 )
INFO  03:47:04,496 - #20 {
INFO  03:47:04,496 - #3 print
INFO  03:47:04,497 - #29 (
INFO  03:47:04,497 - #8 e
INFO  03:47:04,497 - #30 )
INFO  03:47:04,497 - #27 ;
INFO  03:47:04,497 - #21 }
INFO  03:47:04,497 - #21 }
INFO  03:47:04,499 - #21 }
INFO  03:47:04,500 - =====================SINTAKSNO_STABLO=========================
INFO  03:47:04,502 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:47:04,503 - ==============================================================
INFO  03:47:04,520 - Pocetak obrade programa Program na liniji 1
INFO  03:47:04,520 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:47:04,521 - Deklarisana konstanta c na liniji 2
INFO  03:47:04,521 - Deklarisana konstanta d na liniji 2
INFO  03:47:04,521 - Deklarisana konstanta g na liniji 2
INFO  03:47:04,521 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:47:04,521 - Deklarisana promenljiva e na liniji 3
INFO  03:47:04,522 - Pocetak obrade metode main na liniji 5
INFO  03:47:04,523 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:47:04,523 - Zavrsetak obrade programa Program na liniji 1
INFO  03:47:04,523 - ======================TABELA_SIMBOLA==========================
INFO  03:47:04,524 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:47:04,524 - ==============================================================
INFO  03:47:04,524 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:47:04,524 - ==============================================================
INFO  03:47:04,524 - ======================GENERISANJE_KODA========================
ERROR 03:47:04,528 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 03:47:04,530 - Generisanje koda neuspesno!
INFO  03:47:04,530 - ==============================================================
INFO  03:48:05,507 - Obrada ulaznog fajla test\program.mj
INFO  03:48:05,611 - #2 program
INFO  03:48:05,611 - #8 Program
INFO  03:48:05,611 - #5 const
INFO  03:48:05,612 - #8 int
INFO  03:48:05,612 - #8 c
INFO  03:48:05,613 - #24 =
INFO  03:48:05,613 - #9 10
INFO  03:48:05,613 - #28 ,
INFO  03:48:05,614 - #8 d
INFO  03:48:05,615 - #24 =
INFO  03:48:05,615 - #9 99
INFO  03:48:05,615 - #28 ,
INFO  03:48:05,616 - #8 g
INFO  03:48:05,616 - #24 =
INFO  03:48:05,616 - #9 2
INFO  03:48:05,616 - #27 ;
INFO  03:48:05,616 - #8 int
INFO  03:48:05,618 - #8 e
INFO  03:48:05,618 - #27 ;
INFO  03:48:05,618 - #20 {
INFO  03:48:05,619 - #6 void
INFO  03:48:05,619 - #8 main
INFO  03:48:05,619 - #29 (
INFO  03:48:05,620 - #30 )
INFO  03:48:05,620 - #20 {
INFO  03:48:05,620 - #8 e
INFO  03:48:05,620 - #24 =
INFO  03:48:05,621 - #9 1
INFO  03:48:05,621 - #27 ;
INFO  03:48:05,621 - #31 if
INFO  03:48:05,622 - #29 (
INFO  03:48:05,622 - #8 e
INFO  03:48:05,622 - #42 <=
INFO  03:48:05,622 - #9 0
INFO  03:48:05,623 - #30 )
INFO  03:48:05,624 - #20 {
INFO  03:48:05,624 - #3 print
INFO  03:48:05,624 - #29 (
INFO  03:48:05,624 - #8 e
INFO  03:48:05,624 - #30 )
INFO  03:48:05,624 - #27 ;
INFO  03:48:05,624 - #21 }
INFO  03:48:05,625 - #21 }
INFO  03:48:05,626 - #21 }
INFO  03:48:05,627 - =====================SINTAKSNO_STABLO=========================
INFO  03:48:05,628 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:48:05,629 - ==============================================================
INFO  03:48:05,641 - Pocetak obrade programa Program na liniji 1
INFO  03:48:05,642 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:48:05,643 - Deklarisana konstanta c na liniji 2
INFO  03:48:05,643 - Deklarisana konstanta d na liniji 2
INFO  03:48:05,643 - Deklarisana konstanta g na liniji 2
INFO  03:48:05,643 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:48:05,643 - Deklarisana promenljiva e na liniji 3
INFO  03:48:05,644 - Pocetak obrade metode main na liniji 5
INFO  03:48:05,645 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:48:05,645 - Zavrsetak obrade programa Program na liniji 1
INFO  03:48:05,645 - ======================TABELA_SIMBOLA==========================
INFO  03:48:05,645 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:48:05,646 - ==============================================================
INFO  03:48:05,646 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:48:05,646 - ==============================================================
INFO  03:48:05,646 - ======================GENERISANJE_KODA========================
ERROR 03:48:05,649 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 03:48:05,651 - Generisanje koda neuspesno!
INFO  03:48:05,651 - ==============================================================
INFO  03:48:09,920 - Obrada ulaznog fajla test\program.mj
INFO  03:48:10,035 - #2 program
INFO  03:48:10,036 - #8 Program
INFO  03:48:10,036 - #5 const
INFO  03:48:10,038 - #8 int
INFO  03:48:10,038 - #8 c
INFO  03:48:10,039 - #24 =
INFO  03:48:10,039 - #9 10
INFO  03:48:10,039 - #28 ,
INFO  03:48:10,040 - #8 d
INFO  03:48:10,040 - #24 =
INFO  03:48:10,040 - #9 99
INFO  03:48:10,040 - #28 ,
INFO  03:48:10,041 - #8 g
INFO  03:48:10,041 - #24 =
INFO  03:48:10,041 - #9 2
INFO  03:48:10,041 - #27 ;
INFO  03:48:10,041 - #8 int
INFO  03:48:10,043 - #8 e
INFO  03:48:10,043 - #27 ;
INFO  03:48:10,043 - #20 {
INFO  03:48:10,046 - #6 void
INFO  03:48:10,046 - #8 main
INFO  03:48:10,046 - #29 (
INFO  03:48:10,047 - #30 )
INFO  03:48:10,047 - #20 {
INFO  03:48:10,048 - #8 e
INFO  03:48:10,048 - #24 =
INFO  03:48:10,048 - #9 1
INFO  03:48:10,048 - #27 ;
INFO  03:48:10,049 - #31 if
INFO  03:48:10,049 - #29 (
INFO  03:48:10,049 - #8 e
INFO  03:48:10,049 - #42 <=
INFO  03:48:10,049 - #9 0
INFO  03:48:10,051 - #30 )
INFO  03:48:10,052 - #20 {
INFO  03:48:10,052 - #3 print
INFO  03:48:10,052 - #29 (
INFO  03:48:10,052 - #8 e
INFO  03:48:10,052 - #30 )
INFO  03:48:10,052 - #27 ;
INFO  03:48:10,053 - #21 }
INFO  03:48:10,053 - #21 }
INFO  03:48:10,055 - #21 }
INFO  03:48:10,056 - =====================SINTAKSNO_STABLO=========================
INFO  03:48:10,059 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:48:10,060 - ==============================================================
INFO  03:48:10,078 - Pocetak obrade programa Program na liniji 1
INFO  03:48:10,078 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:48:10,079 - Deklarisana konstanta c na liniji 2
INFO  03:48:10,079 - Deklarisana konstanta d na liniji 2
INFO  03:48:10,079 - Deklarisana konstanta g na liniji 2
INFO  03:48:10,080 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:48:10,080 - Deklarisana promenljiva e na liniji 3
INFO  03:48:10,081 - Pocetak obrade metode main na liniji 5
INFO  03:48:10,082 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:48:10,082 - Zavrsetak obrade programa Program na liniji 1
INFO  03:48:10,082 - ======================TABELA_SIMBOLA==========================
INFO  03:48:10,083 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:48:10,083 - ==============================================================
INFO  03:48:10,083 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:48:10,083 - ==============================================================
INFO  03:48:10,083 - ======================GENERISANJE_KODA========================
ERROR 03:48:10,089 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 03:48:10,091 - Generisanje koda neuspesno!
INFO  03:48:10,091 - ==============================================================
INFO  03:54:41,040 - Obrada ulaznog fajla test\program.mj
INFO  03:54:41,130 - #2 program
INFO  03:54:41,130 - #8 Program
INFO  03:54:41,130 - #5 const
INFO  03:54:41,132 - #8 int
INFO  03:54:41,132 - #8 c
INFO  03:54:41,133 - #24 =
INFO  03:54:41,133 - #9 10
INFO  03:54:41,133 - #28 ,
INFO  03:54:41,135 - #8 d
INFO  03:54:41,135 - #24 =
INFO  03:54:41,135 - #9 99
INFO  03:54:41,135 - #28 ,
INFO  03:54:41,135 - #8 g
INFO  03:54:41,135 - #24 =
INFO  03:54:41,135 - #9 2
INFO  03:54:41,135 - #27 ;
INFO  03:54:41,135 - #8 int
INFO  03:54:41,137 - #8 e
INFO  03:54:41,137 - #27 ;
INFO  03:54:41,138 - #20 {
INFO  03:54:41,139 - #6 void
INFO  03:54:41,139 - #8 main
INFO  03:54:41,139 - #29 (
INFO  03:54:41,140 - #30 )
INFO  03:54:41,141 - #20 {
INFO  03:54:41,141 - #8 e
INFO  03:54:41,141 - #24 =
INFO  03:54:41,141 - #9 1
INFO  03:54:41,141 - #27 ;
INFO  03:54:41,142 - #31 if
INFO  03:54:41,142 - #29 (
INFO  03:54:41,142 - #8 e
INFO  03:54:41,143 - #42 <=
INFO  03:54:41,143 - #9 0
INFO  03:54:41,144 - #30 )
INFO  03:54:41,145 - #20 {
INFO  03:54:41,145 - #3 print
INFO  03:54:41,145 - #29 (
INFO  03:54:41,145 - #8 e
INFO  03:54:41,146 - #30 )
INFO  03:54:41,146 - #27 ;
INFO  03:54:41,146 - #21 }
INFO  03:54:41,146 - #21 }
INFO  03:54:41,148 - #21 }
INFO  03:54:41,149 - =====================SINTAKSNO_STABLO=========================
INFO  03:54:41,150 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:54:41,155 - ==============================================================
INFO  03:54:41,171 - Pocetak obrade programa Program na liniji 1
INFO  03:54:41,172 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:54:41,173 - Deklarisana konstanta c na liniji 2
INFO  03:54:41,173 - Deklarisana konstanta d na liniji 2
INFO  03:54:41,173 - Deklarisana konstanta g na liniji 2
INFO  03:54:41,173 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:54:41,174 - Deklarisana promenljiva e na liniji 3
INFO  03:54:41,174 - Pocetak obrade metode main na liniji 5
INFO  03:54:41,175 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:54:41,175 - Zavrsetak obrade programa Program na liniji 1
INFO  03:54:41,175 - ======================TABELA_SIMBOLA==========================
INFO  03:54:41,176 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:54:41,176 - ==============================================================
INFO  03:54:41,176 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:54:41,176 - ==============================================================
INFO  03:54:41,176 - ======================GENERISANJE_KODA========================
INFO  03:54:41,183 - Generisanje koda uspesno zavrseno!
INFO  03:54:41,184 - Generisanje izlaznog fajla test\program.obj
INFO  03:54:41,184 - ==============================================================
INFO  03:55:35,168 - Obrada ulaznog fajla test\program.mj
INFO  03:55:35,243 - #2 program
INFO  03:55:35,244 - #8 Program
INFO  03:55:35,244 - #5 const
INFO  03:55:35,245 - #8 int
INFO  03:55:35,245 - #8 c
INFO  03:55:35,245 - #24 =
INFO  03:55:35,245 - #9 10
INFO  03:55:35,246 - #28 ,
INFO  03:55:35,247 - #8 d
INFO  03:55:35,247 - #24 =
INFO  03:55:35,247 - #9 99
INFO  03:55:35,247 - #28 ,
INFO  03:55:35,247 - #8 g
INFO  03:55:35,247 - #24 =
INFO  03:55:35,247 - #9 2
INFO  03:55:35,247 - #27 ;
INFO  03:55:35,248 - #8 int
INFO  03:55:35,249 - #8 e
INFO  03:55:35,249 - #27 ;
INFO  03:55:35,249 - #20 {
INFO  03:55:35,251 - #6 void
INFO  03:55:35,251 - #8 main
INFO  03:55:35,251 - #29 (
INFO  03:55:35,253 - #30 )
INFO  03:55:35,253 - #20 {
INFO  03:55:35,253 - #8 e
INFO  03:55:35,254 - #24 =
INFO  03:55:35,254 - #9 1
INFO  03:55:35,254 - #27 ;
INFO  03:55:35,255 - #31 if
INFO  03:55:35,255 - #29 (
INFO  03:55:35,255 - #8 e
INFO  03:55:35,255 - #42 <=
INFO  03:55:35,255 - #9 0
INFO  03:55:35,257 - #13 &&
INFO  03:55:35,257 - #8 e
INFO  03:55:35,257 - #42 <=
INFO  03:55:35,258 - #8 d
INFO  03:55:35,258 - #30 )
INFO  03:55:35,258 - #20 {
INFO  03:55:35,258 - #3 print
INFO  03:55:35,258 - #29 (
INFO  03:55:35,259 - #8 e
INFO  03:55:35,259 - #30 )
INFO  03:55:35,260 - #27 ;
INFO  03:55:35,260 - #21 }
INFO  03:55:35,260 - #21 }
INFO  03:55:35,261 - #21 }
INFO  03:55:35,262 - =====================SINTAKSNO_STABLO=========================
INFO  03:55:35,263 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:55:35,264 - ==============================================================
INFO  03:55:35,278 - Pocetak obrade programa Program na liniji 1
INFO  03:55:35,278 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:55:35,280 - Deklarisana konstanta c na liniji 2
INFO  03:55:35,280 - Deklarisana konstanta d na liniji 2
INFO  03:55:35,280 - Deklarisana konstanta g na liniji 2
INFO  03:55:35,280 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:55:35,280 - Deklarisana promenljiva e na liniji 3
INFO  03:55:35,281 - Pocetak obrade metode main na liniji 5
INFO  03:55:35,282 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:55:35,282 - Zavrsetak obrade programa Program na liniji 1
INFO  03:55:35,282 - ======================TABELA_SIMBOLA==========================
INFO  03:55:35,283 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:55:35,283 - ==============================================================
INFO  03:55:35,283 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:55:35,283 - ==============================================================
INFO  03:55:35,283 - ======================GENERISANJE_KODA========================
ERROR 03:55:35,287 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 03:55:35,288 - Generisanje koda neuspesno!
INFO  03:55:35,288 - ==============================================================
INFO  03:55:40,307 - Obrada ulaznog fajla test\program.mj
INFO  03:55:40,414 - #2 program
INFO  03:55:40,415 - #8 Program
INFO  03:55:40,415 - #5 const
INFO  03:55:40,416 - #8 int
INFO  03:55:40,417 - #8 c
INFO  03:55:40,418 - #24 =
INFO  03:55:40,418 - #9 10
INFO  03:55:40,418 - #28 ,
INFO  03:55:40,419 - #8 d
INFO  03:55:40,420 - #24 =
INFO  03:55:40,420 - #9 99
INFO  03:55:40,420 - #28 ,
INFO  03:55:40,420 - #8 g
INFO  03:55:40,420 - #24 =
INFO  03:55:40,420 - #9 2
INFO  03:55:40,420 - #27 ;
INFO  03:55:40,420 - #8 int
INFO  03:55:40,422 - #8 e
INFO  03:55:40,422 - #27 ;
INFO  03:55:40,423 - #20 {
INFO  03:55:40,424 - #6 void
INFO  03:55:40,424 - #8 main
INFO  03:55:40,424 - #29 (
INFO  03:55:40,425 - #30 )
INFO  03:55:40,425 - #20 {
INFO  03:55:40,425 - #8 e
INFO  03:55:40,425 - #24 =
INFO  03:55:40,426 - #9 1
INFO  03:55:40,426 - #27 ;
INFO  03:55:40,426 - #31 if
INFO  03:55:40,427 - #29 (
INFO  03:55:40,427 - #8 e
INFO  03:55:40,427 - #42 <=
INFO  03:55:40,427 - #9 0
INFO  03:55:40,429 - #13 &&
INFO  03:55:40,429 - #8 e
INFO  03:55:40,430 - #42 <=
INFO  03:55:40,430 - #8 d
INFO  03:55:40,430 - #30 )
INFO  03:55:40,432 - #20 {
INFO  03:55:40,432 - #3 print
INFO  03:55:40,432 - #29 (
INFO  03:55:40,432 - #8 e
INFO  03:55:40,432 - #30 )
INFO  03:55:40,433 - #27 ;
INFO  03:55:40,433 - #21 }
INFO  03:55:40,433 - #21 }
INFO  03:55:40,434 - #21 }
INFO  03:55:40,435 - =====================SINTAKSNO_STABLO=========================
INFO  03:55:40,438 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:55:40,440 - ==============================================================
INFO  03:55:40,455 - Pocetak obrade programa Program na liniji 1
INFO  03:55:40,455 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:55:40,456 - Deklarisana konstanta c na liniji 2
INFO  03:55:40,457 - Deklarisana konstanta d na liniji 2
INFO  03:55:40,457 - Deklarisana konstanta g na liniji 2
INFO  03:55:40,457 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:55:40,457 - Deklarisana promenljiva e na liniji 3
INFO  03:55:40,458 - Pocetak obrade metode main na liniji 5
INFO  03:55:40,458 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:55:40,458 - Zavrsetak obrade programa Program na liniji 1
INFO  03:55:40,458 - ======================TABELA_SIMBOLA==========================
INFO  03:55:40,459 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:55:40,459 - ==============================================================
INFO  03:55:40,459 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:55:40,459 - ==============================================================
INFO  03:55:40,459 - ======================GENERISANJE_KODA========================
ERROR 03:55:40,464 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 03:55:40,466 - Generisanje koda neuspesno!
INFO  03:55:40,466 - ==============================================================
INFO  03:57:33,431 - Obrada ulaznog fajla test\program.mj
INFO  03:57:33,517 - #2 program
INFO  03:57:33,517 - #8 Program
INFO  03:57:33,517 - #5 const
INFO  03:57:33,518 - #8 int
INFO  03:57:33,518 - #8 c
INFO  03:57:33,519 - #24 =
INFO  03:57:33,519 - #9 10
INFO  03:57:33,519 - #28 ,
INFO  03:57:33,520 - #8 d
INFO  03:57:33,521 - #24 =
INFO  03:57:33,521 - #9 99
INFO  03:57:33,521 - #28 ,
INFO  03:57:33,521 - #8 g
INFO  03:57:33,521 - #24 =
INFO  03:57:33,521 - #9 2
INFO  03:57:33,521 - #27 ;
INFO  03:57:33,521 - #8 int
INFO  03:57:33,523 - #8 e
INFO  03:57:33,523 - #27 ;
INFO  03:57:33,523 - #20 {
INFO  03:57:33,525 - #6 void
INFO  03:57:33,525 - #8 main
INFO  03:57:33,525 - #29 (
INFO  03:57:33,526 - #30 )
INFO  03:57:33,526 - #20 {
INFO  03:57:33,526 - #8 e
INFO  03:57:33,526 - #24 =
INFO  03:57:33,526 - #9 1
INFO  03:57:33,526 - #27 ;
INFO  03:57:33,527 - #31 if
INFO  03:57:33,527 - #29 (
INFO  03:57:33,527 - #8 e
INFO  03:57:33,527 - #42 <=
INFO  03:57:33,528 - #9 0
INFO  03:57:33,529 - #13 &&
INFO  03:57:33,530 - #8 e
INFO  03:57:33,530 - #42 <=
INFO  03:57:33,530 - #8 d
INFO  03:57:33,530 - #30 )
INFO  03:57:33,531 - #20 {
INFO  03:57:33,531 - #3 print
INFO  03:57:33,531 - #29 (
INFO  03:57:33,531 - #8 e
INFO  03:57:33,532 - #30 )
INFO  03:57:33,532 - #27 ;
INFO  03:57:33,532 - #21 }
INFO  03:57:33,533 - #21 }
INFO  03:57:33,534 - #21 }
INFO  03:57:33,537 - =====================SINTAKSNO_STABLO=========================
INFO  03:57:33,540 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:57:33,542 - ==============================================================
INFO  03:57:33,556 - Pocetak obrade programa Program na liniji 1
INFO  03:57:33,556 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:57:33,557 - Deklarisana konstanta c na liniji 2
INFO  03:57:33,558 - Deklarisana konstanta d na liniji 2
INFO  03:57:33,558 - Deklarisana konstanta g na liniji 2
INFO  03:57:33,558 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:57:33,558 - Deklarisana promenljiva e na liniji 3
INFO  03:57:33,559 - Pocetak obrade metode main na liniji 5
INFO  03:57:33,559 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:57:33,559 - Zavrsetak obrade programa Program na liniji 1
INFO  03:57:33,559 - ======================TABELA_SIMBOLA==========================
INFO  03:57:33,560 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:57:33,560 - ==============================================================
INFO  03:57:33,560 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:57:33,560 - ==============================================================
INFO  03:57:33,560 - ======================GENERISANJE_KODA========================
ERROR 03:57:33,564 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
ERROR 03:57:33,566 - Generisanje koda neuspesno!
INFO  03:57:33,566 - ==============================================================
INFO  03:57:54,125 - Obrada ulaznog fajla test\program.mj
INFO  03:57:54,236 - #2 program
INFO  03:57:54,237 - #8 Program
INFO  03:57:54,237 - #5 const
INFO  03:57:54,238 - #8 int
INFO  03:57:54,238 - #8 c
INFO  03:57:54,239 - #24 =
INFO  03:57:54,239 - #9 10
INFO  03:57:54,239 - #28 ,
INFO  03:57:54,240 - #8 d
INFO  03:57:54,240 - #24 =
INFO  03:57:54,241 - #9 99
INFO  03:57:54,241 - #28 ,
INFO  03:57:54,241 - #8 g
INFO  03:57:54,241 - #24 =
INFO  03:57:54,241 - #9 2
INFO  03:57:54,241 - #27 ;
INFO  03:57:54,241 - #8 int
INFO  03:57:54,243 - #8 e
INFO  03:57:54,243 - #27 ;
INFO  03:57:54,243 - #20 {
INFO  03:57:54,244 - #6 void
INFO  03:57:54,244 - #8 main
INFO  03:57:54,244 - #29 (
INFO  03:57:54,245 - #30 )
INFO  03:57:54,245 - #20 {
INFO  03:57:54,245 - #8 e
INFO  03:57:54,245 - #24 =
INFO  03:57:54,245 - #9 1
INFO  03:57:54,245 - #27 ;
INFO  03:57:54,246 - #31 if
INFO  03:57:54,246 - #29 (
INFO  03:57:54,246 - #8 e
INFO  03:57:54,247 - #42 <=
INFO  03:57:54,247 - #9 0
INFO  03:57:54,249 - #13 &&
INFO  03:57:54,250 - #8 e
INFO  03:57:54,250 - #42 <=
INFO  03:57:54,250 - #8 d
INFO  03:57:54,250 - #30 )
INFO  03:57:54,250 - #20 {
INFO  03:57:54,250 - #3 print
INFO  03:57:54,250 - #29 (
INFO  03:57:54,251 - #8 e
INFO  03:57:54,251 - #30 )
INFO  03:57:54,251 - #27 ;
INFO  03:57:54,251 - #21 }
INFO  03:57:54,251 - #21 }
INFO  03:57:54,253 - #21 }
INFO  03:57:54,253 - =====================SINTAKSNO_STABLO=========================
INFO  03:57:54,255 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:57:54,256 - ==============================================================
INFO  03:57:54,269 - Pocetak obrade programa Program na liniji 1
INFO  03:57:54,269 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:57:54,270 - Deklarisana konstanta c na liniji 2
INFO  03:57:54,270 - Deklarisana konstanta d na liniji 2
INFO  03:57:54,270 - Deklarisana konstanta g na liniji 2
INFO  03:57:54,270 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:57:54,270 - Deklarisana promenljiva e na liniji 3
INFO  03:57:54,271 - Pocetak obrade metode main na liniji 5
INFO  03:57:54,272 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:57:54,272 - Zavrsetak obrade programa Program na liniji 1
INFO  03:57:54,272 - ======================TABELA_SIMBOLA==========================
INFO  03:57:54,273 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:57:54,273 - ==============================================================
INFO  03:57:54,273 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:57:54,273 - ==============================================================
INFO  03:57:54,273 - ======================GENERISANJE_KODA========================
INFO  03:57:54,277 - Generisanje koda uspesno zavrseno!
INFO  03:57:54,278 - Generisanje izlaznog fajla test\program.obj
INFO  03:57:54,278 - ==============================================================
INFO  04:00:05,145 - Obrada ulaznog fajla test\program.mj
INFO  04:00:05,248 - #2 program
INFO  04:00:05,248 - #8 Program
INFO  04:00:05,248 - #5 const
INFO  04:00:05,250 - #8 int
INFO  04:00:05,250 - #8 c
INFO  04:00:05,251 - #24 =
INFO  04:00:05,251 - #9 10
INFO  04:00:05,251 - #28 ,
INFO  04:00:05,252 - #8 d
INFO  04:00:05,253 - #24 =
INFO  04:00:05,253 - #9 99
INFO  04:00:05,253 - #28 ,
INFO  04:00:05,253 - #8 g
INFO  04:00:05,254 - #24 =
INFO  04:00:05,254 - #9 2
INFO  04:00:05,254 - #27 ;
INFO  04:00:05,254 - #8 int
INFO  04:00:05,255 - #8 e
INFO  04:00:05,256 - #27 ;
INFO  04:00:05,256 - #20 {
INFO  04:00:05,258 - #6 void
INFO  04:00:05,258 - #8 main
INFO  04:00:05,258 - #29 (
INFO  04:00:05,259 - #30 )
INFO  04:00:05,259 - #20 {
INFO  04:00:05,259 - #8 e
INFO  04:00:05,260 - #24 =
INFO  04:00:05,260 - #9 1
INFO  04:00:05,260 - #27 ;
INFO  04:00:05,261 - #31 if
INFO  04:00:05,261 - #29 (
INFO  04:00:05,261 - #8 e
INFO  04:00:05,261 - #42 <=
INFO  04:00:05,261 - #9 0
INFO  04:00:05,263 - #13 &&
INFO  04:00:05,263 - #8 e
INFO  04:00:05,263 - #42 <=
INFO  04:00:05,263 - #8 d
INFO  04:00:05,264 - #30 )
INFO  04:00:05,264 - #20 {
INFO  04:00:05,264 - #3 print
INFO  04:00:05,264 - #29 (
INFO  04:00:05,264 - #8 e
INFO  04:00:05,264 - #30 )
INFO  04:00:05,264 - #27 ;
INFO  04:00:05,264 - #21 }
INFO  04:00:05,265 - #21 }
INFO  04:00:05,266 - #21 }
INFO  04:00:05,267 - =====================SINTAKSNO_STABLO=========================
INFO  04:00:05,269 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:00:05,271 - ==============================================================
INFO  04:00:05,285 - Pocetak obrade programa Program na liniji 1
INFO  04:00:05,285 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:00:05,286 - Deklarisana konstanta c na liniji 2
INFO  04:00:05,286 - Deklarisana konstanta d na liniji 2
INFO  04:00:05,286 - Deklarisana konstanta g na liniji 2
INFO  04:00:05,287 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:00:05,287 - Deklarisana promenljiva e na liniji 3
INFO  04:00:05,288 - Pocetak obrade metode main na liniji 5
INFO  04:00:05,288 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:00:05,289 - Zavrsetak obrade programa Program na liniji 1
INFO  04:00:05,289 - ======================TABELA_SIMBOLA==========================
INFO  04:00:05,290 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:00:05,290 - ==============================================================
INFO  04:00:05,290 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:00:05,290 - ==============================================================
INFO  04:00:05,290 - ======================GENERISANJE_KODA========================
INFO  04:00:05,295 - Generisanje koda uspesno zavrseno!
INFO  04:00:05,296 - Generisanje izlaznog fajla test\program.obj
INFO  04:00:05,296 - ==============================================================
INFO  04:00:50,932 - Obrada ulaznog fajla test\program.mj
INFO  04:00:51,010 - #2 program
INFO  04:00:51,010 - #8 Program
INFO  04:00:51,010 - #5 const
INFO  04:00:51,011 - #8 int
INFO  04:00:51,011 - #8 c
INFO  04:00:51,012 - #24 =
INFO  04:00:51,013 - #9 10
INFO  04:00:51,013 - #28 ,
INFO  04:00:51,014 - #8 d
INFO  04:00:51,015 - #24 =
INFO  04:00:51,015 - #9 99
INFO  04:00:51,015 - #28 ,
INFO  04:00:51,015 - #8 g
INFO  04:00:51,015 - #24 =
INFO  04:00:51,016 - #9 2
INFO  04:00:51,016 - #27 ;
INFO  04:00:51,016 - #8 int
INFO  04:00:51,017 - #8 e
INFO  04:00:51,018 - #27 ;
INFO  04:00:51,018 - #20 {
INFO  04:00:51,019 - #6 void
INFO  04:00:51,019 - #8 main
INFO  04:00:51,019 - #29 (
INFO  04:00:51,020 - #30 )
INFO  04:00:51,023 - #20 {
INFO  04:00:51,023 - #8 e
INFO  04:00:51,023 - #24 =
INFO  04:00:51,024 - #9 1
INFO  04:00:51,024 - #27 ;
INFO  04:00:51,025 - #31 if
INFO  04:00:51,025 - #29 (
INFO  04:00:51,025 - #8 e
INFO  04:00:51,025 - #42 <=
INFO  04:00:51,025 - #9 0
INFO  04:00:51,027 - #13 &&
INFO  04:00:51,028 - #8 e
INFO  04:00:51,028 - #42 <=
INFO  04:00:51,028 - #8 d
INFO  04:00:51,028 - #30 )
INFO  04:00:51,028 - #20 {
INFO  04:00:51,029 - #3 print
INFO  04:00:51,029 - #29 (
INFO  04:00:51,029 - #8 e
INFO  04:00:51,029 - #30 )
INFO  04:00:51,029 - #27 ;
INFO  04:00:51,029 - #21 }
INFO  04:00:51,029 - #21 }
INFO  04:00:51,031 - #21 }
INFO  04:00:51,032 - =====================SINTAKSNO_STABLO=========================
INFO  04:00:51,034 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:00:51,035 - ==============================================================
INFO  04:00:51,055 - Pocetak obrade programa Program na liniji 1
INFO  04:00:51,055 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:00:51,056 - Deklarisana konstanta c na liniji 2
INFO  04:00:51,057 - Deklarisana konstanta d na liniji 2
INFO  04:00:51,057 - Deklarisana konstanta g na liniji 2
INFO  04:00:51,057 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:00:51,057 - Deklarisana promenljiva e na liniji 3
INFO  04:00:51,058 - Pocetak obrade metode main na liniji 5
INFO  04:00:51,058 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:00:51,058 - Zavrsetak obrade programa Program na liniji 1
INFO  04:00:51,058 - ======================TABELA_SIMBOLA==========================
INFO  04:00:51,059 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:00:51,059 - ==============================================================
INFO  04:00:51,059 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:00:51,059 - ==============================================================
INFO  04:00:51,060 - ======================GENERISANJE_KODA========================
INFO  04:00:51,066 - Generisanje koda uspesno zavrseno!
INFO  04:00:51,066 - Generisanje izlaznog fajla test\program.obj
INFO  04:00:51,066 - ==============================================================
INFO  04:01:41,091 - Obrada ulaznog fajla test\program.mj
INFO  04:01:41,176 - #2 program
INFO  04:01:41,176 - #8 Program
INFO  04:01:41,176 - #5 const
INFO  04:01:41,177 - #8 int
INFO  04:01:41,177 - #8 c
INFO  04:01:41,178 - #24 =
INFO  04:01:41,178 - #9 10
INFO  04:01:41,178 - #28 ,
INFO  04:01:41,180 - #8 d
INFO  04:01:41,180 - #24 =
INFO  04:01:41,180 - #9 99
INFO  04:01:41,180 - #28 ,
INFO  04:01:41,180 - #8 g
INFO  04:01:41,180 - #24 =
INFO  04:01:41,180 - #9 2
INFO  04:01:41,180 - #27 ;
INFO  04:01:41,180 - #8 int
INFO  04:01:41,182 - #8 e
INFO  04:01:41,182 - #27 ;
INFO  04:01:41,183 - #20 {
INFO  04:01:41,184 - #6 void
INFO  04:01:41,184 - #8 main
INFO  04:01:41,184 - #29 (
INFO  04:01:41,185 - #30 )
INFO  04:01:41,185 - #20 {
INFO  04:01:41,185 - #8 e
INFO  04:01:41,185 - #24 =
INFO  04:01:41,186 - #9 1
INFO  04:01:41,186 - #27 ;
INFO  04:01:41,187 - #31 if
INFO  04:01:41,187 - #29 (
INFO  04:01:41,187 - #8 e
INFO  04:01:41,187 - #42 <=
INFO  04:01:41,187 - #9 0
INFO  04:01:41,189 - #14 ||
INFO  04:01:41,189 - #8 e
INFO  04:01:41,189 - #42 <=
INFO  04:01:41,189 - #8 d
INFO  04:01:41,189 - #30 )
INFO  04:01:41,190 - #20 {
INFO  04:01:41,190 - #3 print
INFO  04:01:41,190 - #29 (
INFO  04:01:41,190 - #8 e
INFO  04:01:41,190 - #30 )
INFO  04:01:41,190 - #27 ;
INFO  04:01:41,190 - #21 }
INFO  04:01:41,190 - #21 }
INFO  04:01:41,192 - #21 }
INFO  04:01:41,193 - =====================SINTAKSNO_STABLO=========================
INFO  04:01:41,194 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:01:41,195 - ==============================================================
INFO  04:01:41,208 - Pocetak obrade programa Program na liniji 1
INFO  04:01:41,208 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:01:41,209 - Deklarisana konstanta c na liniji 2
INFO  04:01:41,209 - Deklarisana konstanta d na liniji 2
INFO  04:01:41,209 - Deklarisana konstanta g na liniji 2
INFO  04:01:41,209 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:01:41,209 - Deklarisana promenljiva e na liniji 3
INFO  04:01:41,210 - Pocetak obrade metode main na liniji 5
INFO  04:01:41,211 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:01:41,211 - Zavrsetak obrade programa Program na liniji 1
INFO  04:01:41,211 - ======================TABELA_SIMBOLA==========================
INFO  04:01:41,211 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:01:41,211 - ==============================================================
INFO  04:01:41,212 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:01:41,212 - ==============================================================
INFO  04:01:41,212 - ======================GENERISANJE_KODA========================
INFO  04:01:41,217 - Generisanje koda uspesno zavrseno!
INFO  04:01:41,218 - Generisanje izlaznog fajla test\program.obj
INFO  04:01:41,218 - ==============================================================
INFO  04:01:54,356 - Obrada ulaznog fajla test\program.mj
INFO  04:01:54,436 - #2 program
INFO  04:01:54,436 - #8 Program
INFO  04:01:54,436 - #5 const
INFO  04:01:54,437 - #8 int
INFO  04:01:54,437 - #8 c
INFO  04:01:54,438 - #24 =
INFO  04:01:54,438 - #9 10
INFO  04:01:54,438 - #28 ,
INFO  04:01:54,440 - #8 d
INFO  04:01:54,440 - #24 =
INFO  04:01:54,440 - #9 99
INFO  04:01:54,440 - #28 ,
INFO  04:01:54,440 - #8 g
INFO  04:01:54,440 - #24 =
INFO  04:01:54,440 - #9 2
INFO  04:01:54,440 - #27 ;
INFO  04:01:54,440 - #8 int
INFO  04:01:54,442 - #8 e
INFO  04:01:54,442 - #27 ;
INFO  04:01:54,442 - #20 {
INFO  04:01:54,443 - #6 void
INFO  04:01:54,444 - #8 main
INFO  04:01:54,444 - #29 (
INFO  04:01:54,444 - #30 )
INFO  04:01:54,444 - #20 {
INFO  04:01:54,444 - #8 e
INFO  04:01:54,445 - #24 =
INFO  04:01:54,445 - #9 1
INFO  04:01:54,445 - #27 ;
INFO  04:01:54,445 - #31 if
INFO  04:01:54,446 - #29 (
INFO  04:01:54,446 - #8 e
INFO  04:01:54,446 - #42 <=
INFO  04:01:54,446 - #9 0
INFO  04:01:54,448 - #14 ||
INFO  04:01:54,448 - #8 e
INFO  04:01:54,448 - #42 <=
INFO  04:01:54,448 - #8 d
INFO  04:01:54,448 - #30 )
INFO  04:01:54,449 - #20 {
INFO  04:01:54,449 - #3 print
INFO  04:01:54,449 - #29 (
INFO  04:01:54,449 - #8 e
INFO  04:01:54,449 - #30 )
INFO  04:01:54,449 - #27 ;
INFO  04:01:54,449 - #21 }
INFO  04:01:54,449 - #21 }
INFO  04:01:54,451 - #21 }
INFO  04:01:54,451 - =====================SINTAKSNO_STABLO=========================
INFO  04:01:54,453 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:01:54,454 - ==============================================================
INFO  04:01:54,469 - Pocetak obrade programa Program na liniji 1
INFO  04:01:54,469 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:01:54,470 - Deklarisana konstanta c na liniji 2
INFO  04:01:54,470 - Deklarisana konstanta d na liniji 2
INFO  04:01:54,471 - Deklarisana konstanta g na liniji 2
INFO  04:01:54,471 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:01:54,471 - Deklarisana promenljiva e na liniji 3
INFO  04:01:54,471 - Pocetak obrade metode main na liniji 5
INFO  04:01:54,472 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:01:54,472 - Zavrsetak obrade programa Program na liniji 1
INFO  04:01:54,472 - ======================TABELA_SIMBOLA==========================
INFO  04:01:54,472 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:01:54,473 - ==============================================================
INFO  04:01:54,473 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:01:54,473 - ==============================================================
INFO  04:01:54,473 - ======================GENERISANJE_KODA========================
INFO  04:01:54,478 - Generisanje koda uspesno zavrseno!
INFO  04:01:54,478 - Generisanje izlaznog fajla test\program.obj
INFO  04:01:54,478 - ==============================================================
INFO  12:36:38,619 - Obrada ulaznog fajla test\program.mj
INFO  12:36:38,719 - #2 program
INFO  12:36:38,719 - #8 Program
INFO  12:36:38,719 - #5 const
INFO  12:36:38,720 - #8 int
INFO  12:36:38,720 - #8 c
INFO  12:36:38,721 - #24 =
INFO  12:36:38,721 - #9 10
INFO  12:36:38,722 - #28 ,
INFO  12:36:38,723 - #8 d
INFO  12:36:38,723 - #24 =
INFO  12:36:38,723 - #9 99
INFO  12:36:38,723 - #28 ,
INFO  12:36:38,723 - #8 g
INFO  12:36:38,724 - #24 =
INFO  12:36:38,724 - #9 2
INFO  12:36:38,724 - #27 ;
INFO  12:36:38,724 - #8 int
INFO  12:36:38,725 - #8 e
INFO  12:36:38,725 - #27 ;
INFO  12:36:38,726 - #20 {
INFO  12:36:38,726 - #6 void
INFO  12:36:38,726 - #8 main
INFO  12:36:38,726 - #29 (
INFO  12:36:38,726 - #30 )
INFO  12:36:38,726 - #20 {
INFO  12:36:38,726 - #8 e
INFO  12:36:38,726 - #24 =
INFO  12:36:38,726 - #9 1
INFO  12:36:38,726 - #27 ;
INFO  12:36:38,726 - #31 if
INFO  12:36:38,726 - #29 (
INFO  12:36:38,726 - #8 e
INFO  12:36:38,731 - #42 <=
INFO  12:36:38,731 - #9 0
INFO  12:36:38,731 - #14 ||
INFO  12:36:38,731 - #8 e
INFO  12:36:38,731 - #42 <=
INFO  12:36:38,731 - #8 d
INFO  12:36:38,731 - #30 )
INFO  12:36:38,731 - #20 {
INFO  12:36:38,731 - #3 print
INFO  12:36:38,731 - #29 (
INFO  12:36:38,731 - #8 e
INFO  12:36:38,731 - #30 )
INFO  12:36:38,731 - #27 ;
INFO  12:36:38,731 - #21 }
INFO  12:36:38,731 - #21 }
INFO  12:36:38,736 - #21 }
INFO  12:36:38,736 - =====================SINTAKSNO_STABLO=========================
INFO  12:36:38,736 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  12:36:38,741 - ==============================================================
INFO  12:36:38,778 - Pocetak obrade programa Program na liniji 1
INFO  12:36:38,778 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  12:36:38,788 - Deklarisana konstanta c na liniji 2
INFO  12:36:38,788 - Deklarisana konstanta d na liniji 2
INFO  12:36:38,788 - Deklarisana konstanta g na liniji 2
INFO  12:36:38,788 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  12:36:38,788 - Deklarisana promenljiva e na liniji 3
INFO  12:36:38,803 - Pocetak obrade metode main na liniji 5
INFO  12:36:38,808 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  12:36:38,808 - Zavrsetak obrade programa Program na liniji 1
INFO  12:36:38,808 - ======================TABELA_SIMBOLA==========================
INFO  12:36:38,808 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  12:36:38,808 - ==============================================================
INFO  12:36:38,808 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  12:36:38,808 - ==============================================================
INFO  12:36:38,808 - ======================GENERISANJE_KODA========================
INFO  12:36:38,813 - Generisanje koda uspesno zavrseno!
INFO  12:36:38,813 - Generisanje izlaznog fajla test\program.obj
INFO  12:36:38,813 - ==============================================================
INFO  12:52:18,527 - Obrada ulaznog fajla test\program.mj
INFO  12:52:18,597 - #2 program
INFO  12:52:18,597 - #8 Program
INFO  12:52:18,597 - #5 const
INFO  12:52:18,597 - #8 int
INFO  12:52:18,597 - #8 c
INFO  12:52:18,602 - #24 =
INFO  12:52:18,602 - #9 10
INFO  12:52:18,602 - #28 ,
INFO  12:52:18,607 - #8 d
INFO  12:52:18,607 - #24 =
INFO  12:52:18,607 - #9 99
INFO  12:52:18,607 - #28 ,
INFO  12:52:18,607 - #8 g
INFO  12:52:18,607 - #24 =
INFO  12:52:18,607 - #9 2
INFO  12:52:18,607 - #27 ;
INFO  12:52:18,607 - #8 int
INFO  12:52:18,607 - #8 e
INFO  12:52:18,607 - #27 ;
INFO  12:52:18,607 - #20 {
INFO  12:52:18,607 - #6 void
INFO  12:52:18,607 - #8 main
INFO  12:52:18,607 - #29 (
INFO  12:52:18,612 - #30 )
INFO  12:52:18,612 - #20 {
INFO  12:52:18,612 - #8 e
INFO  12:52:18,612 - #24 =
INFO  12:52:18,612 - #9 1
INFO  12:52:18,612 - #27 ;
INFO  12:52:18,612 - #31 if
INFO  12:52:18,612 - #29 (
INFO  12:52:18,612 - #8 e
INFO  12:52:18,612 - #42 <=
INFO  12:52:18,612 - #9 0
INFO  12:52:18,612 - #14 ||
INFO  12:52:18,612 - #8 e
INFO  12:52:18,612 - #42 <=
INFO  12:52:18,612 - #8 d
INFO  12:52:18,612 - #30 )
INFO  12:52:18,612 - #20 {
INFO  12:52:18,612 - #3 print
INFO  12:52:18,612 - #29 (
INFO  12:52:18,612 - #8 e
INFO  12:52:18,617 - #30 )
INFO  12:52:18,617 - #27 ;
INFO  12:52:18,617 - #21 }
INFO  12:52:18,617 - #21 }
INFO  12:52:18,617 - #21 }
INFO  12:52:18,617 - =====================SINTAKSNO_STABLO=========================
INFO  12:52:18,617 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  12:52:18,622 - ==============================================================
INFO  12:52:18,632 - Pocetak obrade programa Program na liniji 1
INFO  12:52:18,632 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  12:52:18,637 - Deklarisana konstanta c na liniji 2
INFO  12:52:18,637 - Deklarisana konstanta d na liniji 2
INFO  12:52:18,637 - Deklarisana konstanta g na liniji 2
INFO  12:52:18,637 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  12:52:18,637 - Deklarisana promenljiva e na liniji 3
INFO  12:52:18,637 - Pocetak obrade metode main na liniji 5
INFO  12:52:18,637 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  12:52:18,637 - Zavrsetak obrade programa Program na liniji 1
INFO  12:52:18,637 - ======================TABELA_SIMBOLA==========================
INFO  12:52:18,637 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  12:52:18,637 - ==============================================================
INFO  12:52:18,637 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  13:26:20,138 - Obrada ulaznog fajla test\program.mj
INFO  13:26:20,218 - #2 program
INFO  13:26:20,218 - #8 Program
INFO  13:26:20,218 - #5 const
INFO  13:26:20,218 - #8 int
INFO  13:26:20,218 - #8 c
INFO  13:26:20,223 - #24 =
INFO  13:26:20,223 - #9 10
INFO  13:26:20,223 - #28 ,
INFO  13:26:20,223 - #8 d
INFO  13:26:20,223 - #24 =
INFO  13:26:20,223 - #9 99
INFO  13:26:20,223 - #28 ,
INFO  13:26:20,223 - #8 g
INFO  13:26:20,223 - #24 =
INFO  13:26:20,223 - #9 2
INFO  13:26:20,223 - #27 ;
INFO  13:26:20,223 - #8 int
INFO  13:26:20,223 - #8 e
INFO  13:26:20,223 - #27 ;
INFO  13:26:20,223 - #20 {
INFO  13:26:20,223 - #6 void
INFO  13:26:20,223 - #8 main
INFO  13:26:20,223 - #29 (
INFO  13:26:20,228 - #30 )
INFO  13:26:20,228 - #20 {
INFO  13:26:20,228 - #8 e
INFO  13:26:20,228 - #24 =
INFO  13:26:20,228 - #9 1
INFO  13:26:20,228 - #27 ;
INFO  13:26:20,228 - #31 if
INFO  13:26:20,228 - #29 (
INFO  13:26:20,228 - #8 e
INFO  13:26:20,228 - #42 <=
INFO  13:26:20,228 - #9 0
INFO  13:26:20,233 - #14 ||
INFO  13:26:20,233 - #8 e
INFO  13:26:20,233 - #42 <=
INFO  13:26:20,233 - #8 d
INFO  13:26:20,233 - #30 )
INFO  13:26:20,233 - #20 {
INFO  13:26:20,233 - #3 print
INFO  13:26:20,233 - #29 (
INFO  13:26:20,233 - #8 e
INFO  13:26:20,233 - #30 )
INFO  13:26:20,233 - #27 ;
INFO  13:26:20,233 - #21 }
INFO  13:26:20,233 - #21 }
INFO  13:26:20,233 - #21 }
INFO  13:26:20,233 - =====================SINTAKSNO_STABLO=========================
INFO  13:26:20,238 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  13:26:20,238 - ==============================================================
INFO  13:26:20,248 - Pocetak obrade programa Program na liniji 1
INFO  13:26:20,248 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  13:26:20,253 - Deklarisana konstanta c na liniji 2
INFO  13:26:20,253 - Deklarisana konstanta d na liniji 2
INFO  13:26:20,253 - Deklarisana konstanta g na liniji 2
INFO  13:26:20,253 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  13:26:20,253 - Deklarisana promenljiva e na liniji 3
INFO  13:26:20,253 - Pocetak obrade metode main na liniji 5
INFO  13:26:20,253 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  13:26:20,253 - Zavrsetak obrade programa Program na liniji 1
INFO  13:26:20,253 - ======================TABELA_SIMBOLA==========================
INFO  13:26:20,253 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  13:26:20,253 - ==============================================================
INFO  13:26:20,253 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  13:26:20,253 - ==============================================================
INFO  13:26:20,253 - ======================GENERISANJE_KODA========================
INFO  13:27:08,117 - Obrada ulaznog fajla test\program.mj
INFO  13:27:08,197 - #2 program
INFO  13:27:08,197 - #8 Program
INFO  13:27:08,197 - #5 const
INFO  13:27:08,197 - #8 int
INFO  13:27:08,197 - #8 c
INFO  13:27:08,197 - #24 =
INFO  13:27:08,197 - #9 10
INFO  13:27:08,197 - #28 ,
INFO  13:27:08,197 - #8 d
INFO  13:27:08,197 - #24 =
INFO  13:27:08,197 - #9 99
INFO  13:27:08,197 - #28 ,
INFO  13:27:08,197 - #8 g
INFO  13:27:08,197 - #24 =
INFO  13:27:08,197 - #9 2
INFO  13:27:08,197 - #27 ;
INFO  13:27:08,197 - #8 int
INFO  13:27:08,202 - #8 e
INFO  13:27:08,202 - #27 ;
INFO  13:27:08,202 - #20 {
INFO  13:27:08,202 - #6 void
INFO  13:27:08,202 - #8 main
INFO  13:27:08,202 - #29 (
INFO  13:27:08,202 - #30 )
INFO  13:27:08,202 - #20 {
INFO  13:27:08,202 - #8 e
INFO  13:27:08,202 - #24 =
INFO  13:27:08,202 - #9 1
INFO  13:27:08,202 - #27 ;
INFO  13:27:08,207 - #31 if
INFO  13:27:08,207 - #29 (
INFO  13:27:08,207 - #8 e
INFO  13:27:08,207 - #42 <=
INFO  13:27:08,207 - #9 0
INFO  13:27:08,207 - #14 ||
INFO  13:27:08,207 - #8 e
INFO  13:27:08,207 - #42 <=
INFO  13:27:08,207 - #8 d
INFO  13:27:08,207 - #30 )
INFO  13:27:08,207 - #20 {
INFO  13:27:08,207 - #3 print
INFO  13:27:08,207 - #29 (
INFO  13:27:08,207 - #8 e
INFO  13:27:08,207 - #30 )
INFO  13:27:08,207 - #27 ;
INFO  13:27:08,207 - #21 }
INFO  13:27:08,207 - #21 }
INFO  13:27:08,212 - #21 }
INFO  13:27:08,212 - =====================SINTAKSNO_STABLO=========================
INFO  13:27:08,212 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  13:27:08,212 - ==============================================================
INFO  13:27:08,227 - Pocetak obrade programa Program na liniji 1
INFO  13:27:08,227 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  13:27:08,227 - Deklarisana konstanta c na liniji 2
INFO  13:27:08,227 - Deklarisana konstanta d na liniji 2
INFO  13:27:08,227 - Deklarisana konstanta g na liniji 2
INFO  13:27:08,227 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  13:27:08,227 - Deklarisana promenljiva e na liniji 3
INFO  13:27:08,227 - Pocetak obrade metode main na liniji 5
INFO  13:27:08,227 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  13:27:08,227 - Zavrsetak obrade programa Program na liniji 1
INFO  13:27:08,227 - ======================TABELA_SIMBOLA==========================
INFO  13:27:08,227 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  13:27:08,227 - ==============================================================
INFO  13:27:08,227 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  13:27:08,227 - ==============================================================
INFO  13:27:08,227 - ======================GENERISANJE_KODA========================
INFO  13:27:08,232 - Generisanje koda uspesno zavrseno!
INFO  13:27:08,232 - Generisanje izlaznog fajla test\program.obj
INFO  13:27:08,232 - ==============================================================
INFO  13:27:10,775 - Obrada ulaznog fajla test\program.mj
INFO  13:27:10,855 - #2 program
INFO  13:27:10,855 - #8 Program
INFO  13:27:10,855 - #5 const
INFO  13:27:10,855 - #8 int
INFO  13:27:10,855 - #8 c
INFO  13:27:10,855 - #24 =
INFO  13:27:10,855 - #9 10
INFO  13:27:10,855 - #28 ,
INFO  13:27:10,860 - #8 d
INFO  13:27:10,860 - #24 =
INFO  13:27:10,860 - #9 99
INFO  13:27:10,860 - #28 ,
INFO  13:27:10,860 - #8 g
INFO  13:27:10,860 - #24 =
INFO  13:27:10,860 - #9 2
INFO  13:27:10,860 - #27 ;
INFO  13:27:10,860 - #8 int
INFO  13:27:10,860 - #8 e
INFO  13:27:10,860 - #27 ;
INFO  13:27:10,860 - #20 {
INFO  13:27:10,860 - #6 void
INFO  13:27:10,860 - #8 main
INFO  13:27:10,865 - #29 (
INFO  13:27:10,865 - #30 )
INFO  13:27:10,865 - #20 {
INFO  13:27:10,865 - #8 e
INFO  13:27:10,865 - #24 =
INFO  13:27:10,865 - #9 1
INFO  13:27:10,865 - #27 ;
INFO  13:27:10,865 - #31 if
INFO  13:27:10,865 - #29 (
INFO  13:27:10,865 - #8 e
INFO  13:27:10,865 - #42 <=
INFO  13:27:10,865 - #9 0
INFO  13:27:10,865 - #14 ||
INFO  13:27:10,870 - #8 e
INFO  13:27:10,870 - #42 <=
INFO  13:27:10,870 - #8 d
INFO  13:27:10,870 - #30 )
INFO  13:27:10,870 - #20 {
INFO  13:27:10,870 - #3 print
INFO  13:27:10,870 - #29 (
INFO  13:27:10,870 - #8 e
INFO  13:27:10,870 - #30 )
INFO  13:27:10,870 - #27 ;
INFO  13:27:10,870 - #21 }
INFO  13:27:10,870 - #21 }
INFO  13:27:10,870 - #21 }
INFO  13:27:10,870 - =====================SINTAKSNO_STABLO=========================
INFO  13:27:10,870 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  13:27:10,875 - ==============================================================
INFO  13:27:10,890 - Pocetak obrade programa Program na liniji 1
INFO  13:27:10,890 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  13:27:10,890 - Deklarisana konstanta c na liniji 2
INFO  13:27:10,890 - Deklarisana konstanta d na liniji 2
INFO  13:27:10,890 - Deklarisana konstanta g na liniji 2
INFO  13:27:10,890 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  13:27:10,890 - Deklarisana promenljiva e na liniji 3
INFO  13:27:10,890 - Pocetak obrade metode main na liniji 5
INFO  13:27:10,890 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  13:27:10,890 - Zavrsetak obrade programa Program na liniji 1
INFO  13:27:10,890 - ======================TABELA_SIMBOLA==========================
INFO  13:27:10,895 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  13:27:10,895 - ==============================================================
INFO  13:27:10,895 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  13:27:10,895 - ==============================================================
INFO  13:27:10,895 - ======================GENERISANJE_KODA========================
INFO  13:27:10,900 - Generisanje koda uspesno zavrseno!
INFO  13:27:10,900 - Generisanje izlaznog fajla test\program.obj
INFO  13:27:10,900 - ==============================================================
INFO  15:11:05,648 - Obrada ulaznog fajla test\program.mj
INFO  15:11:05,726 - #2 program
INFO  15:11:05,727 - #8 Program
INFO  15:11:05,727 - #5 const
INFO  15:11:05,728 - #8 int
INFO  15:11:05,728 - #8 c
INFO  15:11:05,729 - #24 =
INFO  15:11:05,729 - #9 10
INFO  15:11:05,729 - #28 ,
INFO  15:11:05,730 - #8 d
INFO  15:11:05,730 - #24 =
INFO  15:11:05,730 - #9 99
INFO  15:11:05,730 - #28 ,
INFO  15:11:05,730 - #8 g
INFO  15:11:05,731 - #24 =
INFO  15:11:05,731 - #9 2
INFO  15:11:05,731 - #27 ;
INFO  15:11:05,731 - #8 int
INFO  15:11:05,732 - #8 e
INFO  15:11:05,732 - #27 ;
INFO  15:11:05,733 - #20 {
INFO  15:11:05,734 - #6 void
INFO  15:11:05,734 - #8 main
INFO  15:11:05,734 - #29 (
INFO  15:11:05,735 - #30 )
INFO  15:11:05,735 - #20 {
INFO  15:11:05,735 - #8 e
INFO  15:11:05,736 - #24 =
INFO  15:11:05,736 - #9 1
INFO  15:11:05,736 - #27 ;
INFO  15:11:05,736 - #31 if
INFO  15:11:05,737 - #29 (
INFO  15:11:05,737 - #8 e
INFO  15:11:05,737 - #42 <=
INFO  15:11:05,737 - #9 0
INFO  15:11:05,738 - #14 ||
INFO  15:11:05,739 - #8 e
INFO  15:11:05,739 - #42 <=
INFO  15:11:05,739 - #8 d
INFO  15:11:05,739 - #30 )
INFO  15:11:05,740 - #20 {
INFO  15:11:05,740 - #3 print
INFO  15:11:05,740 - #29 (
INFO  15:11:05,740 - #8 e
INFO  15:11:05,740 - #30 )
INFO  15:11:05,740 - #27 ;
INFO  15:11:05,740 - #21 }
INFO  15:11:05,740 - #21 }
INFO  15:11:05,742 - #21 }
INFO  15:11:05,743 - =====================SINTAKSNO_STABLO=========================
INFO  15:11:05,744 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:11:05,745 - ==============================================================
INFO  15:11:05,759 - Pocetak obrade programa Program na liniji 1
INFO  15:11:05,759 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:11:05,760 - Deklarisana konstanta c na liniji 2
INFO  15:11:05,760 - Deklarisana konstanta d na liniji 2
INFO  15:11:05,760 - Deklarisana konstanta g na liniji 2
INFO  15:11:05,760 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:11:05,760 - Deklarisana promenljiva e na liniji 3
INFO  15:11:05,761 - Pocetak obrade metode main na liniji 5
INFO  15:11:05,761 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:11:05,761 - Zavrsetak obrade programa Program na liniji 1
INFO  15:11:05,761 - ======================TABELA_SIMBOLA==========================
INFO  15:11:05,762 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  15:11:05,762 - ==============================================================
INFO  15:11:05,762 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:11:05,762 - ==============================================================
INFO  15:11:05,762 - ======================GENERISANJE_KODA========================
INFO  15:11:05,767 - Generisanje koda uspesno zavrseno!
INFO  15:11:05,768 - Generisanje izlaznog fajla test\program.obj
INFO  15:11:05,768 - ==============================================================
INFO  15:29:18,882 - Obrada ulaznog fajla test\program.mj
INFO  15:29:18,957 - #2 program
INFO  15:29:18,957 - #8 Program
INFO  15:29:18,957 - #5 const
INFO  15:29:18,957 - #8 int
INFO  15:29:18,957 - #8 c
INFO  15:29:18,957 - #24 =
INFO  15:29:18,957 - #9 10
INFO  15:29:18,957 - #28 ,
INFO  15:29:18,962 - #8 d
INFO  15:29:18,962 - #24 =
INFO  15:29:18,962 - #9 99
INFO  15:29:18,962 - #28 ,
INFO  15:29:18,962 - #8 g
INFO  15:29:18,962 - #24 =
INFO  15:29:18,962 - #9 2
INFO  15:29:18,962 - #27 ;
INFO  15:29:18,962 - #8 int
INFO  15:29:18,962 - #8 e
INFO  15:29:18,962 - #27 ;
INFO  15:29:18,962 - #20 {
INFO  15:29:18,962 - #6 void
INFO  15:29:18,962 - #8 main
INFO  15:29:18,962 - #29 (
INFO  15:29:18,967 - #30 )
INFO  15:29:18,967 - #20 {
INFO  15:29:18,967 - #8 e
INFO  15:29:18,967 - #24 =
INFO  15:29:18,967 - #9 1
INFO  15:29:18,967 - #27 ;
INFO  15:29:18,967 - #31 if
INFO  15:29:18,967 - #29 (
INFO  15:29:18,967 - #8 e
INFO  15:29:18,967 - #42 <=
INFO  15:29:18,967 - #9 0
INFO  15:29:18,972 - #14 ||
INFO  15:29:18,972 - #8 e
INFO  15:29:18,972 - #42 <=
INFO  15:29:18,972 - #8 d
INFO  15:29:18,972 - #30 )
INFO  15:29:18,972 - #20 {
INFO  15:29:18,972 - #3 print
INFO  15:29:18,972 - #29 (
INFO  15:29:18,972 - #8 e
INFO  15:29:18,972 - #30 )
INFO  15:29:18,972 - #27 ;
INFO  15:29:18,972 - #21 }
INFO  15:29:18,972 - #21 }
INFO  15:29:18,972 - #21 }
INFO  15:29:18,972 - =====================SINTAKSNO_STABLO=========================
INFO  15:29:18,977 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:29:18,977 - ==============================================================
INFO  15:29:18,992 - Pocetak obrade programa Program na liniji 1
INFO  15:29:18,992 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:29:18,992 - Deklarisana konstanta c na liniji 2
INFO  15:29:18,992 - Deklarisana konstanta d na liniji 2
INFO  15:29:18,992 - Deklarisana konstanta g na liniji 2
INFO  15:29:18,992 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:29:18,992 - Deklarisana promenljiva e na liniji 3
INFO  15:29:18,992 - Pocetak obrade metode main na liniji 5
INFO  15:29:18,992 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:29:18,992 - Zavrsetak obrade programa Program na liniji 1
INFO  15:29:18,992 - ======================TABELA_SIMBOLA==========================
INFO  15:29:18,992 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  15:29:18,992 - ==============================================================
INFO  15:29:18,992 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:29:18,992 - ==============================================================
INFO  15:29:18,992 - ======================GENERISANJE_KODA========================
ERROR 15:29:18,997 - Greska u generisanju koda - jumpTrickII, treba da ima relacioni operator na liniji 7!
INFO  15:38:06,435 - Obrada ulaznog fajla test\program.mj
INFO  15:38:06,505 - #2 program
INFO  15:38:06,505 - #8 Program
INFO  15:38:06,505 - #5 const
INFO  15:38:06,510 - #8 int
INFO  15:38:06,510 - #8 c
INFO  15:38:06,510 - #24 =
INFO  15:38:06,510 - #9 10
INFO  15:38:06,510 - #28 ,
INFO  15:38:06,510 - #8 d
INFO  15:38:06,510 - #24 =
INFO  15:38:06,510 - #9 99
INFO  15:38:06,510 - #28 ,
INFO  15:38:06,510 - #8 g
INFO  15:38:06,510 - #24 =
INFO  15:38:06,510 - #9 2
INFO  15:38:06,510 - #27 ;
INFO  15:38:06,510 - #8 int
INFO  15:38:06,515 - #8 e
INFO  15:38:06,515 - #27 ;
INFO  15:38:06,515 - #20 {
INFO  15:38:06,515 - #6 void
INFO  15:38:06,515 - #8 main
INFO  15:38:06,515 - #29 (
INFO  15:38:06,515 - #30 )
INFO  15:38:06,515 - #20 {
INFO  15:38:06,515 - #8 e
INFO  15:38:06,515 - #24 =
INFO  15:38:06,515 - #9 1
INFO  15:38:06,515 - #27 ;
INFO  15:38:06,515 - #31 if
INFO  15:38:06,515 - #29 (
INFO  15:38:06,515 - #8 e
INFO  15:38:06,515 - #42 <=
INFO  15:38:06,515 - #9 0
INFO  15:38:06,520 - #14 ||
INFO  15:38:06,520 - #8 e
INFO  15:38:06,520 - #42 <=
INFO  15:38:06,520 - #8 d
INFO  15:38:06,520 - #30 )
INFO  15:38:06,520 - #20 {
INFO  15:38:06,520 - #3 print
INFO  15:38:06,520 - #29 (
INFO  15:38:06,520 - #8 e
INFO  15:38:06,520 - #30 )
INFO  15:38:06,520 - #27 ;
INFO  15:38:06,520 - #21 }
INFO  15:38:06,520 - #21 }
INFO  15:38:06,520 - #21 }
INFO  15:38:06,520 - =====================SINTAKSNO_STABLO=========================
INFO  15:38:06,525 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:38:06,525 - ==============================================================
INFO  15:38:06,535 - Pocetak obrade programa Program na liniji 1
INFO  15:38:06,535 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:38:06,540 - Deklarisana konstanta c na liniji 2
INFO  15:38:06,540 - Deklarisana konstanta d na liniji 2
INFO  15:38:06,540 - Deklarisana konstanta g na liniji 2
INFO  15:38:06,540 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:38:06,540 - Deklarisana promenljiva e na liniji 3
INFO  15:38:06,540 - Pocetak obrade metode main na liniji 5
INFO  15:38:06,540 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:38:06,540 - Zavrsetak obrade programa Program na liniji 1
INFO  15:38:06,540 - ======================TABELA_SIMBOLA==========================
INFO  15:38:06,540 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  15:38:06,540 - ==============================================================
INFO  15:38:06,540 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:38:06,540 - ==============================================================
INFO  15:38:06,540 - ======================GENERISANJE_KODA========================
INFO  15:39:33,155 - Obrada ulaznog fajla test\program.mj
INFO  15:39:33,225 - #2 program
INFO  15:39:33,225 - #8 Program
INFO  15:39:33,225 - #5 const
INFO  15:39:33,225 - #8 int
INFO  15:39:33,225 - #8 c
INFO  15:39:33,225 - #24 =
INFO  15:39:33,225 - #9 10
INFO  15:39:33,225 - #28 ,
INFO  15:39:33,230 - #8 d
INFO  15:39:33,230 - #24 =
INFO  15:39:33,230 - #9 99
INFO  15:39:33,230 - #28 ,
INFO  15:39:33,230 - #8 g
INFO  15:39:33,230 - #24 =
INFO  15:39:33,230 - #9 2
INFO  15:39:33,230 - #27 ;
INFO  15:39:33,230 - #8 int
INFO  15:39:33,230 - #8 e
INFO  15:39:33,230 - #27 ;
INFO  15:39:33,230 - #20 {
INFO  15:39:33,230 - #6 void
INFO  15:39:33,230 - #8 main
INFO  15:39:33,230 - #29 (
INFO  15:39:33,235 - #30 )
INFO  15:39:33,235 - #20 {
INFO  15:39:33,235 - #8 e
INFO  15:39:33,235 - #24 =
INFO  15:39:33,235 - #9 1
INFO  15:39:33,235 - #27 ;
INFO  15:39:33,235 - #31 if
INFO  15:39:33,235 - #29 (
INFO  15:39:33,235 - #8 e
INFO  15:39:33,235 - #42 <=
INFO  15:39:33,235 - #9 0
INFO  15:39:33,235 - #14 ||
INFO  15:39:33,235 - #8 e
INFO  15:39:33,235 - #42 <=
INFO  15:39:33,235 - #8 d
INFO  15:39:33,235 - #30 )
INFO  15:39:33,235 - #20 {
INFO  15:39:33,235 - #3 print
INFO  15:39:33,235 - #29 (
INFO  15:39:33,235 - #8 e
INFO  15:39:33,235 - #30 )
INFO  15:39:33,235 - #27 ;
INFO  15:39:33,235 - #21 }
INFO  15:39:33,240 - #21 }
INFO  15:39:33,240 - #21 }
INFO  15:39:33,240 - =====================SINTAKSNO_STABLO=========================
INFO  15:39:33,240 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:39:33,240 - ==============================================================
INFO  15:39:33,255 - Pocetak obrade programa Program na liniji 1
INFO  15:39:33,255 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:39:33,255 - Deklarisana konstanta c na liniji 2
INFO  15:39:33,255 - Deklarisana konstanta d na liniji 2
INFO  15:39:33,255 - Deklarisana konstanta g na liniji 2
INFO  15:39:33,255 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:39:33,255 - Deklarisana promenljiva e na liniji 3
INFO  15:39:33,255 - Pocetak obrade metode main na liniji 5
INFO  15:39:33,255 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:39:33,255 - Zavrsetak obrade programa Program na liniji 1
INFO  15:39:33,260 - ======================TABELA_SIMBOLA==========================
INFO  15:39:33,260 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  15:39:33,260 - ==============================================================
INFO  15:39:33,260 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:39:33,260 - ==============================================================
INFO  15:39:33,260 - ======================GENERISANJE_KODA========================
INFO  15:40:23,844 - Obrada ulaznog fajla test\program.mj
INFO  15:40:23,904 - #2 program
INFO  15:40:23,904 - #8 Program
INFO  15:40:23,904 - #5 const
INFO  15:40:23,904 - #8 int
INFO  15:40:23,904 - #8 c
INFO  15:40:23,904 - #24 =
INFO  15:40:23,904 - #9 10
INFO  15:40:23,904 - #28 ,
INFO  15:40:23,904 - #8 d
INFO  15:40:23,904 - #24 =
INFO  15:40:23,904 - #9 99
INFO  15:40:23,904 - #28 ,
INFO  15:40:23,904 - #8 g
INFO  15:40:23,904 - #24 =
INFO  15:40:23,904 - #9 2
INFO  15:40:23,904 - #27 ;
INFO  15:40:23,904 - #8 int
INFO  15:40:23,909 - #8 e
INFO  15:40:23,909 - #27 ;
INFO  15:40:23,909 - #20 {
INFO  15:40:23,909 - #6 void
INFO  15:40:23,909 - #8 main
INFO  15:40:23,909 - #29 (
INFO  15:40:23,909 - #30 )
INFO  15:40:23,909 - #20 {
INFO  15:40:23,909 - #8 e
INFO  15:40:23,909 - #24 =
INFO  15:40:23,909 - #9 1
INFO  15:40:23,909 - #27 ;
INFO  15:40:23,909 - #31 if
INFO  15:40:23,909 - #29 (
INFO  15:40:23,909 - #8 e
INFO  15:40:23,909 - #42 <=
INFO  15:40:23,909 - #9 0
INFO  15:40:23,909 - #14 ||
INFO  15:40:23,914 - #8 e
INFO  15:40:23,914 - #42 <=
INFO  15:40:23,914 - #8 d
INFO  15:40:23,914 - #30 )
INFO  15:40:23,914 - #20 {
INFO  15:40:23,914 - #3 print
INFO  15:40:23,914 - #29 (
INFO  15:40:23,914 - #8 e
INFO  15:40:23,914 - #30 )
INFO  15:40:23,914 - #27 ;
INFO  15:40:23,914 - #21 }
INFO  15:40:23,914 - #21 }
INFO  15:40:23,914 - #21 }
INFO  15:40:23,914 - =====================SINTAKSNO_STABLO=========================
INFO  15:40:23,914 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:40:23,919 - ==============================================================
INFO  15:40:23,934 - Pocetak obrade programa Program na liniji 1
INFO  15:40:23,934 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:40:23,934 - Deklarisana konstanta c na liniji 2
INFO  15:40:23,939 - Deklarisana konstanta d na liniji 2
INFO  15:40:23,939 - Deklarisana konstanta g na liniji 2
INFO  15:40:23,939 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:40:23,939 - Deklarisana promenljiva e na liniji 3
INFO  15:40:23,939 - Pocetak obrade metode main na liniji 5
INFO  15:40:23,939 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:40:23,939 - Zavrsetak obrade programa Program na liniji 1
INFO  15:40:23,939 - ======================TABELA_SIMBOLA==========================
INFO  15:40:23,939 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  15:40:23,939 - ==============================================================
INFO  15:40:23,939 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:40:23,939 - ==============================================================
INFO  15:40:23,939 - ======================GENERISANJE_KODA========================
INFO  15:40:23,944 - Generisanje koda uspesno zavrseno!
INFO  15:40:23,944 - Generisanje izlaznog fajla test\program.obj
INFO  15:40:23,944 - ==============================================================
INFO  15:41:58,819 - Obrada ulaznog fajla test\program.mj
INFO  15:41:58,894 - #2 program
INFO  15:41:58,894 - #8 Program
INFO  15:41:58,894 - #5 const
INFO  15:41:58,899 - #8 int
INFO  15:41:58,899 - #8 c
INFO  15:41:58,899 - #24 =
INFO  15:41:58,899 - #9 10
INFO  15:41:58,899 - #28 ,
INFO  15:41:58,899 - #8 d
INFO  15:41:58,899 - #24 =
INFO  15:41:58,899 - #9 99
INFO  15:41:58,899 - #28 ,
INFO  15:41:58,899 - #8 g
INFO  15:41:58,899 - #24 =
INFO  15:41:58,899 - #9 2
INFO  15:41:58,899 - #27 ;
INFO  15:41:58,899 - #8 int
INFO  15:41:58,899 - #8 e
INFO  15:41:58,904 - #27 ;
INFO  15:41:58,904 - #20 {
INFO  15:41:58,904 - #6 void
INFO  15:41:58,904 - #8 main
INFO  15:41:58,904 - #29 (
INFO  15:41:58,904 - #30 )
INFO  15:41:58,904 - #20 {
INFO  15:41:58,904 - #8 e
INFO  15:41:58,904 - #24 =
INFO  15:41:58,904 - #9 1
INFO  15:41:58,904 - #27 ;
INFO  15:41:58,904 - #31 if
INFO  15:41:58,904 - #29 (
INFO  15:41:58,904 - #8 e
INFO  15:41:58,904 - #42 <=
INFO  15:41:58,904 - #9 0
INFO  15:41:58,909 - #14 ||
INFO  15:41:58,909 - #8 e
INFO  15:41:58,909 - #42 <=
INFO  15:41:58,909 - #8 d
INFO  15:41:58,909 - #30 )
INFO  15:41:58,909 - #20 {
INFO  15:41:58,909 - #3 print
INFO  15:41:58,909 - #29 (
INFO  15:41:58,909 - #8 e
INFO  15:41:58,909 - #30 )
INFO  15:41:58,909 - #27 ;
INFO  15:41:58,909 - #21 }
INFO  15:41:58,909 - #21 }
INFO  15:41:58,909 - #21 }
INFO  15:41:58,914 - =====================SINTAKSNO_STABLO=========================
INFO  15:41:58,914 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  15:41:58,914 - ==============================================================
INFO  15:41:58,929 - Pocetak obrade programa Program na liniji 1
INFO  15:41:58,929 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  15:41:58,929 - Deklarisana konstanta c na liniji 2
INFO  15:41:58,929 - Deklarisana konstanta d na liniji 2
INFO  15:41:58,929 - Deklarisana konstanta g na liniji 2
INFO  15:41:58,929 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  15:41:58,929 - Deklarisana promenljiva e na liniji 3
INFO  15:41:58,934 - Pocetak obrade metode main na liniji 5
INFO  15:41:58,934 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  15:41:58,934 - Zavrsetak obrade programa Program na liniji 1
INFO  15:41:58,934 - ======================TABELA_SIMBOLA==========================
INFO  15:41:58,934 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  15:41:58,934 - ==============================================================
INFO  15:41:58,934 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  15:41:58,934 - ==============================================================
INFO  15:41:58,934 - ======================GENERISANJE_KODA========================
INFO  15:41:58,939 - Generisanje koda uspesno zavrseno!
INFO  15:41:58,939 - Generisanje izlaznog fajla test\program.obj
INFO  15:41:58,939 - ==============================================================
INFO  23:21:20,273 - Obrada ulaznog fajla test\program.mj
INFO  23:21:20,359 - #2 program
INFO  23:21:20,360 - #8 Program
INFO  23:21:20,360 - #5 const
INFO  23:21:20,362 - #8 int
INFO  23:21:20,363 - #8 c
INFO  23:21:20,364 - #24 =
INFO  23:21:20,364 - #9 10
INFO  23:21:20,364 - #28 ,
INFO  23:21:20,366 - #8 d
INFO  23:21:20,366 - #24 =
INFO  23:21:20,367 - #9 99
INFO  23:21:20,367 - #28 ,
INFO  23:21:20,367 - #8 g
INFO  23:21:20,367 - #24 =
INFO  23:21:20,367 - #9 2
INFO  23:21:20,367 - #27 ;
INFO  23:21:20,367 - #8 int
INFO  23:21:20,369 - #8 e
INFO  23:21:20,369 - #27 ;
INFO  23:21:20,369 - #20 {
INFO  23:21:20,370 - #6 void
INFO  23:21:20,371 - #8 main
INFO  23:21:20,371 - #29 (
INFO  23:21:20,372 - #30 )
INFO  23:21:20,372 - #20 {
INFO  23:21:20,372 - #8 e
INFO  23:21:20,372 - #24 =
INFO  23:21:20,373 - #9 1
INFO  23:21:20,373 - #27 ;
INFO  23:21:20,374 - #31 if
INFO  23:21:20,374 - #29 (
INFO  23:21:20,374 - #8 e
INFO  23:21:20,374 - #42 <=
INFO  23:21:20,375 - #9 0
INFO  23:21:20,377 - #14 ||
INFO  23:21:20,378 - #8 e
INFO  23:21:20,378 - #42 <=
INFO  23:21:20,378 - #8 d
INFO  23:21:20,378 - #30 )
INFO  23:21:20,378 - #20 {
INFO  23:21:20,378 - #3 print
INFO  23:21:20,378 - #29 (
INFO  23:21:20,378 - #8 e
INFO  23:21:20,378 - #30 )
INFO  23:21:20,379 - #27 ;
INFO  23:21:20,379 - #21 }
INFO  23:21:20,379 - #21 }
INFO  23:21:20,380 - #21 }
INFO  23:21:20,382 - =====================SINTAKSNO_STABLO=========================
INFO  23:21:20,383 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:21:20,385 - ==============================================================
INFO  23:21:20,405 - Pocetak obrade programa Program na liniji 1
INFO  23:21:20,405 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:21:20,406 - Deklarisana konstanta c na liniji 2
INFO  23:21:20,406 - Deklarisana konstanta d na liniji 2
INFO  23:21:20,406 - Deklarisana konstanta g na liniji 2
INFO  23:21:20,406 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:21:20,406 - Deklarisana promenljiva e na liniji 3
INFO  23:21:20,407 - Pocetak obrade metode main na liniji 5
INFO  23:21:20,407 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:21:20,407 - Zavrsetak obrade programa Program na liniji 1
INFO  23:21:20,407 - ======================TABELA_SIMBOLA==========================
INFO  23:21:20,408 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:21:20,408 - ==============================================================
INFO  23:21:20,408 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:21:20,408 - ==============================================================
INFO  23:21:20,408 - ======================GENERISANJE_KODA========================
INFO  23:23:36,447 - Obrada ulaznog fajla test\program.mj
INFO  23:23:36,550 - #2 program
INFO  23:23:36,551 - #8 Program
INFO  23:23:36,551 - #5 const
INFO  23:23:36,552 - #8 int
INFO  23:23:36,552 - #8 c
INFO  23:23:36,554 - #24 =
INFO  23:23:36,554 - #9 10
INFO  23:23:36,554 - #28 ,
INFO  23:23:36,555 - #8 d
INFO  23:23:36,557 - #24 =
INFO  23:23:36,557 - #9 99
INFO  23:23:36,557 - #28 ,
INFO  23:23:36,557 - #8 g
INFO  23:23:36,558 - #24 =
INFO  23:23:36,558 - #9 2
INFO  23:23:36,558 - #27 ;
INFO  23:23:36,558 - #8 int
INFO  23:23:36,559 - #8 e
INFO  23:23:36,559 - #27 ;
INFO  23:23:36,560 - #20 {
INFO  23:23:36,562 - #6 void
INFO  23:23:36,562 - #8 main
INFO  23:23:36,562 - #29 (
INFO  23:23:36,563 - #30 )
INFO  23:23:36,563 - #20 {
INFO  23:23:36,563 - #8 e
INFO  23:23:36,563 - #24 =
INFO  23:23:36,564 - #9 1
INFO  23:23:36,564 - #27 ;
INFO  23:23:36,564 - #31 if
INFO  23:23:36,565 - #29 (
INFO  23:23:36,565 - #8 e
INFO  23:23:36,565 - #42 <=
INFO  23:23:36,566 - #9 0
INFO  23:23:36,567 - #14 ||
INFO  23:23:36,567 - #8 e
INFO  23:23:36,567 - #42 <=
INFO  23:23:36,568 - #8 d
INFO  23:23:36,568 - #30 )
INFO  23:23:36,568 - #20 {
INFO  23:23:36,568 - #3 print
INFO  23:23:36,568 - #29 (
INFO  23:23:36,568 - #8 e
INFO  23:23:36,568 - #30 )
INFO  23:23:36,568 - #27 ;
INFO  23:23:36,568 - #21 }
INFO  23:23:36,569 - #21 }
INFO  23:23:36,570 - #21 }
INFO  23:23:36,571 - =====================SINTAKSNO_STABLO=========================
INFO  23:23:36,572 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:23:36,573 - ==============================================================
INFO  23:23:36,586 - Pocetak obrade programa Program na liniji 1
INFO  23:23:36,586 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:23:36,587 - Deklarisana konstanta c na liniji 2
INFO  23:23:36,587 - Deklarisana konstanta d na liniji 2
INFO  23:23:36,587 - Deklarisana konstanta g na liniji 2
INFO  23:23:36,587 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:23:36,587 - Deklarisana promenljiva e na liniji 3
INFO  23:23:36,588 - Pocetak obrade metode main na liniji 5
INFO  23:23:36,588 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:23:36,589 - Zavrsetak obrade programa Program na liniji 1
INFO  23:23:36,589 - ======================TABELA_SIMBOLA==========================
INFO  23:23:36,589 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:23:36,589 - ==============================================================
INFO  23:23:36,589 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:23:36,589 - ==============================================================
INFO  23:23:36,589 - ======================GENERISANJE_KODA========================
INFO  23:23:36,594 - Generisanje koda uspesno zavrseno!
INFO  23:23:36,595 - Generisanje izlaznog fajla test\program.obj
INFO  23:23:36,595 - ==============================================================
INFO  23:25:40,674 - Obrada ulaznog fajla test\program.mj
INFO  23:25:40,788 - #2 program
INFO  23:25:40,788 - #8 Program
INFO  23:25:40,789 - #5 const
INFO  23:25:40,791 - #8 int
INFO  23:25:40,791 - #8 c
INFO  23:25:40,792 - #24 =
INFO  23:25:40,793 - #9 10
INFO  23:25:40,793 - #28 ,
INFO  23:25:40,794 - #8 d
INFO  23:25:40,794 - #24 =
INFO  23:25:40,794 - #9 99
INFO  23:25:40,794 - #28 ,
INFO  23:25:40,795 - #8 g
INFO  23:25:40,795 - #24 =
INFO  23:25:40,795 - #9 2
INFO  23:25:40,795 - #27 ;
INFO  23:25:40,795 - #8 int
INFO  23:25:40,798 - #8 e
INFO  23:25:40,799 - #27 ;
INFO  23:25:40,799 - #20 {
INFO  23:25:40,800 - #6 void
INFO  23:25:40,801 - #8 main
INFO  23:25:40,801 - #29 (
INFO  23:25:40,802 - #30 )
INFO  23:25:40,802 - #20 {
INFO  23:25:40,802 - #8 e
INFO  23:25:40,802 - #24 =
INFO  23:25:40,802 - #9 1
INFO  23:25:40,802 - #27 ;
INFO  23:25:40,803 - #31 if
INFO  23:25:40,803 - #29 (
INFO  23:25:40,803 - #8 e
INFO  23:25:40,804 - #42 <=
INFO  23:25:40,804 - #9 0
INFO  23:25:40,807 - #14 ||
INFO  23:25:40,808 - #8 e
INFO  23:25:40,808 - #42 <=
INFO  23:25:40,808 - #8 d
INFO  23:25:40,808 - #30 )
INFO  23:25:40,809 - #20 {
INFO  23:25:40,809 - #3 print
INFO  23:25:40,809 - #29 (
INFO  23:25:40,810 - #8 e
INFO  23:25:40,811 - #30 )
INFO  23:25:40,811 - #27 ;
INFO  23:25:40,811 - #21 }
INFO  23:25:40,811 - #21 }
INFO  23:25:40,813 - #21 }
INFO  23:25:40,813 - =====================SINTAKSNO_STABLO=========================
INFO  23:25:40,815 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:25:40,817 - ==============================================================
INFO  23:25:40,833 - Pocetak obrade programa Program na liniji 1
INFO  23:25:40,833 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:25:40,834 - Deklarisana konstanta c na liniji 2
INFO  23:25:40,834 - Deklarisana konstanta d na liniji 2
INFO  23:25:40,835 - Deklarisana konstanta g na liniji 2
INFO  23:25:40,835 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:25:40,835 - Deklarisana promenljiva e na liniji 3
INFO  23:25:40,836 - Pocetak obrade metode main na liniji 5
INFO  23:25:40,836 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:25:40,836 - Zavrsetak obrade programa Program na liniji 1
INFO  23:25:40,836 - ======================TABELA_SIMBOLA==========================
INFO  23:25:40,837 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:25:40,837 - ==============================================================
INFO  23:25:40,837 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:25:40,837 - ==============================================================
INFO  23:25:40,838 - ======================GENERISANJE_KODA========================
INFO  23:26:12,150 - Obrada ulaznog fajla test\program.mj
INFO  23:26:12,246 - #2 program
INFO  23:26:12,246 - #8 Program
INFO  23:26:12,247 - #5 const
INFO  23:26:12,247 - #8 int
INFO  23:26:12,248 - #8 c
INFO  23:26:12,249 - #24 =
INFO  23:26:12,249 - #9 10
INFO  23:26:12,249 - #28 ,
INFO  23:26:12,250 - #8 d
INFO  23:26:12,251 - #24 =
INFO  23:26:12,251 - #9 99
INFO  23:26:12,252 - #28 ,
INFO  23:26:12,253 - #8 g
INFO  23:26:12,253 - #24 =
INFO  23:26:12,253 - #9 2
INFO  23:26:12,253 - #27 ;
INFO  23:26:12,253 - #8 int
INFO  23:26:12,255 - #8 e
INFO  23:26:12,255 - #27 ;
INFO  23:26:12,256 - #20 {
INFO  23:26:12,258 - #6 void
INFO  23:26:12,259 - #8 main
INFO  23:26:12,259 - #29 (
INFO  23:26:12,260 - #30 )
INFO  23:26:12,260 - #20 {
INFO  23:26:12,260 - #8 e
INFO  23:26:12,260 - #24 =
INFO  23:26:12,261 - #9 1
INFO  23:26:12,261 - #27 ;
INFO  23:26:12,261 - #31 if
INFO  23:26:12,262 - #29 (
INFO  23:26:12,262 - #8 e
INFO  23:26:12,262 - #42 <=
INFO  23:26:12,262 - #9 0
INFO  23:26:12,264 - #14 ||
INFO  23:26:12,264 - #8 e
INFO  23:26:12,265 - #42 <=
INFO  23:26:12,265 - #8 d
INFO  23:26:12,265 - #30 )
INFO  23:26:12,265 - #20 {
INFO  23:26:12,265 - #3 print
INFO  23:26:12,265 - #29 (
INFO  23:26:12,267 - #8 e
INFO  23:26:12,267 - #30 )
INFO  23:26:12,267 - #27 ;
INFO  23:26:12,267 - #21 }
INFO  23:26:12,270 - #21 }
INFO  23:26:12,272 - #21 }
INFO  23:26:12,273 - =====================SINTAKSNO_STABLO=========================
INFO  23:26:12,275 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:26:12,278 - ==============================================================
INFO  23:26:12,293 - Pocetak obrade programa Program na liniji 1
INFO  23:26:12,294 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:26:12,294 - Deklarisana konstanta c na liniji 2
INFO  23:26:12,295 - Deklarisana konstanta d na liniji 2
INFO  23:26:12,295 - Deklarisana konstanta g na liniji 2
INFO  23:26:12,295 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:26:12,295 - Deklarisana promenljiva e na liniji 3
INFO  23:26:12,295 - Pocetak obrade metode main na liniji 5
INFO  23:26:12,296 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:26:12,296 - Zavrsetak obrade programa Program na liniji 1
INFO  23:26:12,296 - ======================TABELA_SIMBOLA==========================
INFO  23:26:12,297 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:26:12,297 - ==============================================================
INFO  23:26:12,297 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:26:12,297 - ==============================================================
INFO  23:26:12,297 - ======================GENERISANJE_KODA========================
INFO  23:26:12,304 - Generisanje koda uspesno zavrseno!
INFO  23:26:12,304 - Generisanje izlaznog fajla test\program.obj
INFO  23:26:12,304 - ==============================================================
INFO  23:26:16,462 - Obrada ulaznog fajla test\program.mj
INFO  23:26:16,541 - #2 program
INFO  23:26:16,541 - #8 Program
INFO  23:26:16,541 - #5 const
INFO  23:26:16,542 - #8 int
INFO  23:26:16,542 - #8 c
INFO  23:26:16,543 - #24 =
INFO  23:26:16,543 - #9 10
INFO  23:26:16,543 - #28 ,
INFO  23:26:16,544 - #8 d
INFO  23:26:16,545 - #24 =
INFO  23:26:16,545 - #9 99
INFO  23:26:16,545 - #28 ,
INFO  23:26:16,545 - #8 g
INFO  23:26:16,545 - #24 =
INFO  23:26:16,545 - #9 2
INFO  23:26:16,545 - #27 ;
INFO  23:26:16,546 - #8 int
INFO  23:26:16,547 - #8 e
INFO  23:26:16,547 - #27 ;
INFO  23:26:16,547 - #20 {
INFO  23:26:16,549 - #6 void
INFO  23:26:16,549 - #8 main
INFO  23:26:16,549 - #29 (
INFO  23:26:16,550 - #30 )
INFO  23:26:16,550 - #20 {
INFO  23:26:16,550 - #8 e
INFO  23:26:16,550 - #24 =
INFO  23:26:16,551 - #9 1
INFO  23:26:16,551 - #27 ;
INFO  23:26:16,551 - #31 if
INFO  23:26:16,552 - #29 (
INFO  23:26:16,552 - #8 e
INFO  23:26:16,552 - #42 <=
INFO  23:26:16,552 - #9 0
INFO  23:26:16,554 - #14 ||
INFO  23:26:16,554 - #8 e
INFO  23:26:16,554 - #42 <=
INFO  23:26:16,554 - #8 d
INFO  23:26:16,555 - #30 )
INFO  23:26:16,555 - #20 {
INFO  23:26:16,555 - #3 print
INFO  23:26:16,555 - #29 (
INFO  23:26:16,555 - #8 e
INFO  23:26:16,555 - #30 )
INFO  23:26:16,556 - #27 ;
INFO  23:26:16,556 - #21 }
INFO  23:26:16,556 - #21 }
INFO  23:26:16,558 - #21 }
INFO  23:26:16,559 - =====================SINTAKSNO_STABLO=========================
INFO  23:26:16,560 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:26:16,563 - ==============================================================
INFO  23:26:16,576 - Pocetak obrade programa Program na liniji 1
INFO  23:26:16,576 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:26:16,577 - Deklarisana konstanta c na liniji 2
INFO  23:26:16,577 - Deklarisana konstanta d na liniji 2
INFO  23:26:16,577 - Deklarisana konstanta g na liniji 2
INFO  23:26:16,578 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:26:16,578 - Deklarisana promenljiva e na liniji 3
INFO  23:26:16,579 - Pocetak obrade metode main na liniji 5
INFO  23:26:16,579 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:26:16,579 - Zavrsetak obrade programa Program na liniji 1
INFO  23:26:16,579 - ======================TABELA_SIMBOLA==========================
INFO  23:26:16,580 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:26:16,580 - ==============================================================
INFO  23:26:16,580 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:26:16,580 - ==============================================================
INFO  23:26:16,580 - ======================GENERISANJE_KODA========================
INFO  23:26:16,585 - Generisanje koda uspesno zavrseno!
INFO  23:26:16,585 - Generisanje izlaznog fajla test\program.obj
INFO  23:26:16,585 - ==============================================================
INFO  23:28:44,585 - Obrada ulaznog fajla test\program.mj
INFO  23:28:44,666 - #2 program
INFO  23:28:44,666 - #8 Program
INFO  23:28:44,666 - #5 const
INFO  23:28:44,667 - #8 int
INFO  23:28:44,667 - #8 c
INFO  23:28:44,668 - #24 =
INFO  23:28:44,669 - #9 10
INFO  23:28:44,669 - #28 ,
INFO  23:28:44,670 - #8 d
INFO  23:28:44,670 - #24 =
INFO  23:28:44,670 - #9 99
INFO  23:28:44,670 - #28 ,
INFO  23:28:44,670 - #8 g
INFO  23:28:44,671 - #24 =
INFO  23:28:44,671 - #9 2
INFO  23:28:44,671 - #27 ;
INFO  23:28:44,671 - #8 int
INFO  23:28:44,672 - #8 e
INFO  23:28:44,672 - #27 ;
INFO  23:28:44,673 - #20 {
INFO  23:28:44,674 - #6 void
INFO  23:28:44,674 - #8 main
INFO  23:28:44,674 - #29 (
INFO  23:28:44,675 - #30 )
INFO  23:28:44,675 - #20 {
INFO  23:28:44,675 - #8 e
INFO  23:28:44,675 - #24 =
INFO  23:28:44,675 - #9 1
INFO  23:28:44,676 - #27 ;
INFO  23:28:44,676 - #31 if
INFO  23:28:44,676 - #29 (
INFO  23:28:44,676 - #8 e
INFO  23:28:44,676 - #42 <=
INFO  23:28:44,677 - #9 0
INFO  23:28:44,678 - #13 &&
INFO  23:28:44,678 - #8 e
INFO  23:28:44,678 - #42 <=
INFO  23:28:44,678 - #8 d
INFO  23:28:44,678 - #30 )
INFO  23:28:44,679 - #20 {
INFO  23:28:44,679 - #3 print
INFO  23:28:44,679 - #29 (
INFO  23:28:44,679 - #8 e
INFO  23:28:44,679 - #30 )
INFO  23:28:44,679 - #27 ;
INFO  23:28:44,679 - #21 }
INFO  23:28:44,680 - #21 }
INFO  23:28:44,681 - #21 }
INFO  23:28:44,682 - =====================SINTAKSNO_STABLO=========================
INFO  23:28:44,683 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:28:44,687 - ==============================================================
INFO  23:28:44,701 - Pocetak obrade programa Program na liniji 1
INFO  23:28:44,702 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:28:44,703 - Deklarisana konstanta c na liniji 2
INFO  23:28:44,703 - Deklarisana konstanta d na liniji 2
INFO  23:28:44,703 - Deklarisana konstanta g na liniji 2
INFO  23:28:44,703 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:28:44,703 - Deklarisana promenljiva e na liniji 3
INFO  23:28:44,704 - Pocetak obrade metode main na liniji 5
INFO  23:28:44,704 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:28:44,704 - Zavrsetak obrade programa Program na liniji 1
INFO  23:28:44,704 - ======================TABELA_SIMBOLA==========================
INFO  23:28:44,705 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:28:44,705 - ==============================================================
INFO  23:28:44,705 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:28:44,705 - ==============================================================
INFO  23:28:44,705 - ======================GENERISANJE_KODA========================
INFO  23:28:44,711 - Generisanje koda uspesno zavrseno!
INFO  23:28:44,711 - Generisanje izlaznog fajla test\program.obj
INFO  23:28:44,711 - ==============================================================
INFO  23:29:27,201 - Obrada ulaznog fajla test\program.mj
INFO  23:29:27,281 - #2 program
INFO  23:29:27,281 - #8 Program
INFO  23:29:27,281 - #5 const
INFO  23:29:27,282 - #8 int
INFO  23:29:27,282 - #8 c
INFO  23:29:27,283 - #24 =
INFO  23:29:27,283 - #9 10
INFO  23:29:27,283 - #28 ,
INFO  23:29:27,284 - #8 d
INFO  23:29:27,284 - #24 =
INFO  23:29:27,284 - #9 99
INFO  23:29:27,284 - #28 ,
INFO  23:29:27,284 - #8 g
INFO  23:29:27,284 - #24 =
INFO  23:29:27,284 - #9 2
INFO  23:29:27,284 - #27 ;
INFO  23:29:27,285 - #8 int
INFO  23:29:27,286 - #8 e
INFO  23:29:27,286 - #27 ;
INFO  23:29:27,286 - #20 {
INFO  23:29:27,289 - #6 void
INFO  23:29:27,289 - #8 main
INFO  23:29:27,289 - #29 (
INFO  23:29:27,290 - #30 )
INFO  23:29:27,290 - #20 {
INFO  23:29:27,290 - #8 e
INFO  23:29:27,291 - #24 =
INFO  23:29:27,291 - #9 1
INFO  23:29:27,291 - #27 ;
INFO  23:29:27,291 - #31 if
INFO  23:29:27,292 - #29 (
INFO  23:29:27,292 - #8 e
INFO  23:29:27,292 - #42 <=
INFO  23:29:27,292 - #9 0
INFO  23:29:27,294 - #30 )
INFO  23:29:27,294 - #20 {
INFO  23:29:27,294 - #3 print
INFO  23:29:27,294 - #29 (
INFO  23:29:27,295 - #8 e
INFO  23:29:27,295 - #30 )
INFO  23:29:27,295 - #27 ;
INFO  23:29:27,295 - #21 }
INFO  23:29:27,295 - #21 }
INFO  23:29:27,296 - #21 }
INFO  23:29:27,297 - =====================SINTAKSNO_STABLO=========================
INFO  23:29:27,299 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:29:27,300 - ==============================================================
INFO  23:29:27,315 - Pocetak obrade programa Program na liniji 1
INFO  23:29:27,315 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:29:27,316 - Deklarisana konstanta c na liniji 2
INFO  23:29:27,316 - Deklarisana konstanta d na liniji 2
INFO  23:29:27,317 - Deklarisana konstanta g na liniji 2
INFO  23:29:27,317 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:29:27,317 - Deklarisana promenljiva e na liniji 3
INFO  23:29:27,317 - Pocetak obrade metode main na liniji 5
INFO  23:29:27,318 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:29:27,318 - Zavrsetak obrade programa Program na liniji 1
INFO  23:29:27,318 - ======================TABELA_SIMBOLA==========================
INFO  23:29:27,318 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:29:27,319 - ==============================================================
INFO  23:29:27,319 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:29:27,319 - ==============================================================
INFO  23:29:27,319 - ======================GENERISANJE_KODA========================
INFO  23:29:27,324 - Generisanje koda uspesno zavrseno!
INFO  23:29:27,324 - Generisanje izlaznog fajla test\program.obj
INFO  23:29:27,324 - ==============================================================
INFO  23:30:05,102 - Obrada ulaznog fajla test\program.mj
INFO  23:30:05,185 - #2 program
INFO  23:30:05,185 - #8 Program
INFO  23:30:05,185 - #5 const
INFO  23:30:05,186 - #8 int
INFO  23:30:05,186 - #8 c
INFO  23:30:05,187 - #24 =
INFO  23:30:05,187 - #9 10
INFO  23:30:05,187 - #28 ,
INFO  23:30:05,189 - #8 d
INFO  23:30:05,189 - #24 =
INFO  23:30:05,189 - #9 99
INFO  23:30:05,189 - #28 ,
INFO  23:30:05,189 - #8 g
INFO  23:30:05,189 - #24 =
INFO  23:30:05,190 - #9 2
INFO  23:30:05,190 - #27 ;
INFO  23:30:05,190 - #8 int
INFO  23:30:05,191 - #8 e
INFO  23:30:05,191 - #27 ;
INFO  23:30:05,191 - #20 {
INFO  23:30:05,193 - #6 void
INFO  23:30:05,193 - #8 main
INFO  23:30:05,193 - #29 (
INFO  23:30:05,194 - #30 )
INFO  23:30:05,194 - #20 {
INFO  23:30:05,194 - #8 e
INFO  23:30:05,194 - #24 =
INFO  23:30:05,194 - #9 1
INFO  23:30:05,195 - #27 ;
INFO  23:30:05,195 - #31 if
INFO  23:30:05,196 - #29 (
INFO  23:30:05,196 - #8 e
INFO  23:30:05,196 - #42 <=
INFO  23:30:05,196 - #9 0
INFO  23:30:05,198 - #30 )
INFO  23:30:05,199 - #20 {
INFO  23:30:05,199 - #3 print
INFO  23:30:05,199 - #29 (
INFO  23:30:05,199 - #8 e
INFO  23:30:05,200 - #30 )
INFO  23:30:05,200 - #27 ;
INFO  23:30:05,200 - #21 }
INFO  23:30:05,201 - #21 }
INFO  23:30:05,203 - #21 }
INFO  23:30:05,204 - =====================SINTAKSNO_STABLO=========================
INFO  23:30:05,205 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:30:05,206 - ==============================================================
INFO  23:30:05,219 - Pocetak obrade programa Program na liniji 1
INFO  23:30:05,219 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:30:05,220 - Deklarisana konstanta c na liniji 2
INFO  23:30:05,220 - Deklarisana konstanta d na liniji 2
INFO  23:30:05,220 - Deklarisana konstanta g na liniji 2
INFO  23:30:05,220 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:30:05,220 - Deklarisana promenljiva e na liniji 3
INFO  23:30:05,221 - Pocetak obrade metode main na liniji 5
INFO  23:30:05,221 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:30:05,221 - Zavrsetak obrade programa Program na liniji 1
INFO  23:30:05,221 - ======================TABELA_SIMBOLA==========================
INFO  23:30:05,222 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:30:05,222 - ==============================================================
INFO  23:30:05,222 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:30:05,222 - ==============================================================
INFO  23:30:05,222 - ======================GENERISANJE_KODA========================
INFO  23:30:05,227 - Generisanje koda uspesno zavrseno!
INFO  23:30:05,228 - Generisanje izlaznog fajla test\program.obj
INFO  23:30:05,228 - ==============================================================
INFO  23:30:14,683 - Obrada ulaznog fajla test\program.mj
INFO  23:30:14,771 - #2 program
INFO  23:30:14,771 - #8 Program
INFO  23:30:14,771 - #5 const
INFO  23:30:14,772 - #8 int
INFO  23:30:14,772 - #8 c
INFO  23:30:14,773 - #24 =
INFO  23:30:14,773 - #9 10
INFO  23:30:14,773 - #28 ,
INFO  23:30:14,774 - #8 d
INFO  23:30:14,774 - #24 =
INFO  23:30:14,775 - #9 99
INFO  23:30:14,775 - #28 ,
INFO  23:30:14,775 - #8 g
INFO  23:30:14,775 - #24 =
INFO  23:30:14,776 - #9 2
INFO  23:30:14,776 - #27 ;
INFO  23:30:14,776 - #8 int
INFO  23:30:14,778 - #8 e
INFO  23:30:14,778 - #27 ;
INFO  23:30:14,779 - #20 {
INFO  23:30:14,780 - #6 void
INFO  23:30:14,780 - #8 main
INFO  23:30:14,780 - #29 (
INFO  23:30:14,781 - #30 )
INFO  23:30:14,781 - #20 {
INFO  23:30:14,781 - #8 e
INFO  23:30:14,782 - #24 =
INFO  23:30:14,782 - #9 1
INFO  23:30:14,782 - #27 ;
INFO  23:30:14,783 - #31 if
INFO  23:30:14,783 - #29 (
INFO  23:30:14,783 - #8 e
INFO  23:30:14,783 - #42 <=
INFO  23:30:14,784 - #9 0
INFO  23:30:14,785 - #30 )
INFO  23:30:14,786 - #20 {
INFO  23:30:14,786 - #3 print
INFO  23:30:14,786 - #29 (
INFO  23:30:14,786 - #8 e
INFO  23:30:14,786 - #30 )
INFO  23:30:14,787 - #27 ;
INFO  23:30:14,787 - #21 }
INFO  23:30:14,787 - #21 }
INFO  23:30:14,788 - #21 }
INFO  23:30:14,789 - =====================SINTAKSNO_STABLO=========================
INFO  23:30:14,791 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:30:14,792 - ==============================================================
INFO  23:30:14,805 - Pocetak obrade programa Program na liniji 1
INFO  23:30:14,805 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:30:14,807 - Deklarisana konstanta c na liniji 2
INFO  23:30:14,807 - Deklarisana konstanta d na liniji 2
INFO  23:30:14,807 - Deklarisana konstanta g na liniji 2
INFO  23:30:14,807 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:30:14,807 - Deklarisana promenljiva e na liniji 3
INFO  23:30:14,808 - Pocetak obrade metode main na liniji 5
INFO  23:30:14,808 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:30:14,809 - Zavrsetak obrade programa Program na liniji 1
INFO  23:30:14,809 - ======================TABELA_SIMBOLA==========================
INFO  23:30:14,809 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:30:14,809 - ==============================================================
INFO  23:30:14,809 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:30:14,810 - ==============================================================
INFO  23:30:14,810 - ======================GENERISANJE_KODA========================
INFO  23:30:14,815 - Generisanje koda uspesno zavrseno!
INFO  23:30:14,815 - Generisanje izlaznog fajla test\program.obj
INFO  23:30:14,816 - ==============================================================
INFO  23:31:25,788 - Obrada ulaznog fajla test\program.mj
INFO  23:31:25,878 - #2 program
INFO  23:31:25,878 - #8 Program
INFO  23:31:25,878 - #5 const
INFO  23:31:25,879 - #8 int
INFO  23:31:25,880 - #8 c
INFO  23:31:25,881 - #24 =
INFO  23:31:25,881 - #9 10
INFO  23:31:25,881 - #28 ,
INFO  23:31:25,883 - #8 d
INFO  23:31:25,883 - #24 =
INFO  23:31:25,883 - #9 99
INFO  23:31:25,883 - #28 ,
INFO  23:31:25,884 - #8 g
INFO  23:31:25,884 - #24 =
INFO  23:31:25,884 - #9 2
INFO  23:31:25,884 - #27 ;
INFO  23:31:25,884 - #8 int
INFO  23:31:25,886 - #8 e
INFO  23:31:25,886 - #27 ;
INFO  23:31:25,886 - #20 {
INFO  23:31:25,888 - #6 void
INFO  23:31:25,888 - #8 main
INFO  23:31:25,888 - #29 (
INFO  23:31:25,889 - #30 )
INFO  23:31:25,889 - #20 {
INFO  23:31:25,889 - #8 e
INFO  23:31:25,889 - #24 =
INFO  23:31:25,889 - #9 1
INFO  23:31:25,889 - #27 ;
INFO  23:31:25,890 - #31 if
INFO  23:31:25,891 - #29 (
INFO  23:31:25,891 - #8 e
INFO  23:31:25,891 - #42 <=
INFO  23:31:25,891 - #9 0
INFO  23:31:25,892 - #30 )
INFO  23:31:25,893 - #20 {
INFO  23:31:25,893 - #3 print
INFO  23:31:25,893 - #29 (
INFO  23:31:25,893 - #8 e
INFO  23:31:25,893 - #30 )
INFO  23:31:25,893 - #27 ;
INFO  23:31:25,893 - #21 }
INFO  23:31:25,893 - #21 }
INFO  23:31:25,895 - #21 }
INFO  23:31:25,897 - =====================SINTAKSNO_STABLO=========================
INFO  23:31:25,900 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:31:25,901 - ==============================================================
INFO  23:31:25,919 - Pocetak obrade programa Program na liniji 1
INFO  23:31:25,920 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:31:25,921 - Deklarisana konstanta c na liniji 2
INFO  23:31:25,921 - Deklarisana konstanta d na liniji 2
INFO  23:31:25,921 - Deklarisana konstanta g na liniji 2
INFO  23:31:25,921 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:31:25,921 - Deklarisana promenljiva e na liniji 3
INFO  23:31:25,922 - Pocetak obrade metode main na liniji 5
INFO  23:31:25,923 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:31:25,923 - Zavrsetak obrade programa Program na liniji 1
INFO  23:31:25,923 - ======================TABELA_SIMBOLA==========================
INFO  23:31:25,923 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:31:25,923 - ==============================================================
INFO  23:31:25,923 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:31:25,924 - ==============================================================
INFO  23:31:25,924 - ======================GENERISANJE_KODA========================
INFO  23:31:25,929 - Generisanje koda uspesno zavrseno!
INFO  23:31:25,929 - Generisanje izlaznog fajla test\program.obj
INFO  23:31:25,930 - ==============================================================
INFO  23:33:41,248 - Obrada ulaznog fajla test\program.mj
INFO  23:33:41,327 - #2 program
INFO  23:33:41,328 - #8 Program
INFO  23:33:41,328 - #5 const
INFO  23:33:41,329 - #8 int
INFO  23:33:41,329 - #8 c
INFO  23:33:41,330 - #24 =
INFO  23:33:41,330 - #9 10
INFO  23:33:41,330 - #28 ,
INFO  23:33:41,331 - #8 d
INFO  23:33:41,332 - #24 =
INFO  23:33:41,332 - #9 99
INFO  23:33:41,332 - #28 ,
INFO  23:33:41,332 - #8 g
INFO  23:33:41,332 - #24 =
INFO  23:33:41,332 - #9 2
INFO  23:33:41,332 - #27 ;
INFO  23:33:41,332 - #8 int
INFO  23:33:41,334 - #8 e
INFO  23:33:41,334 - #27 ;
INFO  23:33:41,334 - #20 {
INFO  23:33:41,336 - #6 void
INFO  23:33:41,336 - #8 main
INFO  23:33:41,336 - #29 (
INFO  23:33:41,337 - #30 )
INFO  23:33:41,337 - #20 {
INFO  23:33:41,337 - #8 e
INFO  23:33:41,337 - #24 =
INFO  23:33:41,337 - #9 1
INFO  23:33:41,338 - #27 ;
INFO  23:33:41,338 - #31 if
INFO  23:33:41,339 - #29 (
INFO  23:33:41,339 - #8 e
INFO  23:33:41,339 - #42 <=
INFO  23:33:41,339 - #9 0
INFO  23:33:41,340 - #30 )
INFO  23:33:41,341 - #20 {
INFO  23:33:41,341 - #3 print
INFO  23:33:41,341 - #29 (
INFO  23:33:41,341 - #8 e
INFO  23:33:41,341 - #30 )
INFO  23:33:41,341 - #27 ;
INFO  23:33:41,342 - #21 }
INFO  23:33:41,342 - #21 }
INFO  23:33:41,343 - #21 }
INFO  23:33:41,344 - =====================SINTAKSNO_STABLO=========================
INFO  23:33:41,345 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:33:41,346 - ==============================================================
INFO  23:33:41,358 - Pocetak obrade programa Program na liniji 1
INFO  23:33:41,359 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:33:41,360 - Deklarisana konstanta c na liniji 2
INFO  23:33:41,360 - Deklarisana konstanta d na liniji 2
INFO  23:33:41,360 - Deklarisana konstanta g na liniji 2
INFO  23:33:41,360 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:33:41,360 - Deklarisana promenljiva e na liniji 3
INFO  23:33:41,361 - Pocetak obrade metode main na liniji 5
INFO  23:33:41,361 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:33:41,361 - Zavrsetak obrade programa Program na liniji 1
INFO  23:33:41,361 - ======================TABELA_SIMBOLA==========================
INFO  23:33:41,362 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:33:41,362 - ==============================================================
INFO  23:33:41,362 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:33:41,362 - ==============================================================
INFO  23:33:41,362 - ======================GENERISANJE_KODA========================
INFO  23:33:41,367 - Generisanje koda uspesno zavrseno!
INFO  23:33:41,368 - Generisanje izlaznog fajla test\program.obj
INFO  23:33:41,368 - ==============================================================
INFO  23:35:27,937 - Obrada ulaznog fajla test\program.mj
INFO  23:35:28,051 - #2 program
INFO  23:35:28,051 - #8 Program
INFO  23:35:28,051 - #5 const
INFO  23:35:28,052 - #8 int
INFO  23:35:28,052 - #8 c
INFO  23:35:28,053 - #24 =
INFO  23:35:28,053 - #9 10
INFO  23:35:28,053 - #28 ,
INFO  23:35:28,054 - #8 d
INFO  23:35:28,054 - #24 =
INFO  23:35:28,054 - #9 99
INFO  23:35:28,055 - #28 ,
INFO  23:35:28,055 - #8 g
INFO  23:35:28,055 - #24 =
INFO  23:35:28,055 - #9 2
INFO  23:35:28,055 - #27 ;
INFO  23:35:28,055 - #8 int
INFO  23:35:28,057 - #8 e
INFO  23:35:28,057 - #27 ;
INFO  23:35:28,057 - #20 {
INFO  23:35:28,058 - #6 void
INFO  23:35:28,058 - #8 main
INFO  23:35:28,058 - #29 (
INFO  23:35:28,059 - #30 )
INFO  23:35:28,059 - #20 {
INFO  23:35:28,059 - #8 e
INFO  23:35:28,060 - #24 =
INFO  23:35:28,060 - #9 1
INFO  23:35:28,060 - #27 ;
INFO  23:35:28,060 - #31 if
INFO  23:35:28,061 - #29 (
INFO  23:35:28,061 - #8 e
INFO  23:35:28,061 - #42 <=
INFO  23:35:28,061 - #9 0
INFO  23:35:28,062 - #13 &&
INFO  23:35:28,063 - #8 e
INFO  23:35:28,063 - #41 >=
INFO  23:35:28,063 - #8 d
INFO  23:35:28,063 - #30 )
INFO  23:35:28,064 - #20 {
INFO  23:35:28,064 - #3 print
INFO  23:35:28,064 - #29 (
INFO  23:35:28,064 - #8 e
INFO  23:35:28,064 - #30 )
INFO  23:35:28,064 - #27 ;
INFO  23:35:28,064 - #21 }
INFO  23:35:28,064 - #21 }
INFO  23:35:28,066 - #21 }
INFO  23:35:28,067 - =====================SINTAKSNO_STABLO=========================
INFO  23:35:28,069 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_ge(
                    ) [Rel_op_ge]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:35:28,069 - ==============================================================
INFO  23:35:28,081 - Pocetak obrade programa Program na liniji 1
INFO  23:35:28,081 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:35:28,082 - Deklarisana konstanta c na liniji 2
INFO  23:35:28,083 - Deklarisana konstanta d na liniji 2
INFO  23:35:28,083 - Deklarisana konstanta g na liniji 2
INFO  23:35:28,083 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:35:28,083 - Deklarisana promenljiva e na liniji 3
INFO  23:35:28,084 - Pocetak obrade metode main na liniji 5
INFO  23:35:28,084 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:35:28,084 - Zavrsetak obrade programa Program na liniji 1
INFO  23:35:28,084 - ======================TABELA_SIMBOLA==========================
INFO  23:35:28,085 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:35:28,085 - ==============================================================
INFO  23:35:28,085 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:35:28,085 - ==============================================================
INFO  23:35:28,085 - ======================GENERISANJE_KODA========================
INFO  23:35:28,090 - Generisanje koda uspesno zavrseno!
INFO  23:35:28,091 - Generisanje izlaznog fajla test\program.obj
INFO  23:35:28,091 - ==============================================================
INFO  23:35:44,080 - Obrada ulaznog fajla test\program.mj
INFO  23:35:44,181 - #2 program
INFO  23:35:44,181 - #8 Program
INFO  23:35:44,181 - #5 const
INFO  23:35:44,182 - #8 int
INFO  23:35:44,183 - #8 c
INFO  23:35:44,184 - #24 =
INFO  23:35:44,184 - #9 10
INFO  23:35:44,184 - #28 ,
INFO  23:35:44,186 - #8 d
INFO  23:35:44,186 - #24 =
INFO  23:35:44,186 - #9 99
INFO  23:35:44,186 - #28 ,
INFO  23:35:44,186 - #8 g
INFO  23:35:44,187 - #24 =
INFO  23:35:44,187 - #9 2
INFO  23:35:44,187 - #27 ;
INFO  23:35:44,187 - #8 int
INFO  23:35:44,189 - #8 e
INFO  23:35:44,189 - #27 ;
INFO  23:35:44,190 - #20 {
INFO  23:35:44,192 - #6 void
INFO  23:35:44,192 - #8 main
INFO  23:35:44,192 - #29 (
INFO  23:35:44,193 - #30 )
INFO  23:35:44,193 - #20 {
INFO  23:35:44,193 - #8 e
INFO  23:35:44,193 - #24 =
INFO  23:35:44,194 - #9 1
INFO  23:35:44,194 - #27 ;
INFO  23:35:44,194 - #31 if
INFO  23:35:44,195 - #29 (
INFO  23:35:44,195 - #8 e
INFO  23:35:44,195 - #42 <=
INFO  23:35:44,195 - #9 0
INFO  23:35:44,197 - #13 &&
INFO  23:35:44,197 - #8 e
INFO  23:35:44,198 - #41 >=
INFO  23:35:44,198 - #8 d
INFO  23:35:44,199 - #30 )
INFO  23:35:44,199 - #20 {
INFO  23:35:44,199 - #3 print
INFO  23:35:44,199 - #29 (
INFO  23:35:44,199 - #8 e
INFO  23:35:44,200 - #30 )
INFO  23:35:44,200 - #27 ;
INFO  23:35:44,200 - #21 }
INFO  23:35:44,200 - #21 }
INFO  23:35:44,202 - #21 }
INFO  23:35:44,203 - =====================SINTAKSNO_STABLO=========================
INFO  23:35:44,205 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_ge(
                    ) [Rel_op_ge]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:35:44,209 - ==============================================================
INFO  23:35:44,224 - Pocetak obrade programa Program na liniji 1
INFO  23:35:44,224 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:35:44,225 - Deklarisana konstanta c na liniji 2
INFO  23:35:44,225 - Deklarisana konstanta d na liniji 2
INFO  23:35:44,226 - Deklarisana konstanta g na liniji 2
INFO  23:35:44,226 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:35:44,226 - Deklarisana promenljiva e na liniji 3
INFO  23:35:44,227 - Pocetak obrade metode main na liniji 5
INFO  23:35:44,227 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:35:44,227 - Zavrsetak obrade programa Program na liniji 1
INFO  23:35:44,227 - ======================TABELA_SIMBOLA==========================
INFO  23:35:44,228 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:35:44,228 - ==============================================================
INFO  23:35:44,228 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:35:44,228 - ==============================================================
INFO  23:35:44,228 - ======================GENERISANJE_KODA========================
INFO  23:35:44,235 - Generisanje koda uspesno zavrseno!
INFO  23:35:44,236 - Generisanje izlaznog fajla test\program.obj
INFO  23:35:44,236 - ==============================================================
INFO  23:36:32,208 - Obrada ulaznog fajla test\program.mj
INFO  23:36:32,284 - #2 program
INFO  23:36:32,284 - #8 Program
INFO  23:36:32,284 - #5 const
INFO  23:36:32,285 - #8 int
INFO  23:36:32,285 - #8 c
INFO  23:36:32,286 - #24 =
INFO  23:36:32,286 - #9 10
INFO  23:36:32,287 - #28 ,
INFO  23:36:32,288 - #8 d
INFO  23:36:32,288 - #24 =
INFO  23:36:32,288 - #9 99
INFO  23:36:32,288 - #28 ,
INFO  23:36:32,289 - #8 g
INFO  23:36:32,289 - #24 =
INFO  23:36:32,289 - #9 2
INFO  23:36:32,289 - #27 ;
INFO  23:36:32,289 - #8 int
INFO  23:36:32,290 - #8 e
INFO  23:36:32,290 - #27 ;
INFO  23:36:32,291 - #20 {
INFO  23:36:32,292 - #6 void
INFO  23:36:32,293 - #8 main
INFO  23:36:32,293 - #29 (
INFO  23:36:32,294 - #30 )
INFO  23:36:32,294 - #20 {
INFO  23:36:32,294 - #8 e
INFO  23:36:32,294 - #24 =
INFO  23:36:32,294 - #9 1
INFO  23:36:32,294 - #27 ;
INFO  23:36:32,295 - #31 if
INFO  23:36:32,295 - #29 (
INFO  23:36:32,295 - #8 e
INFO  23:36:32,295 - #42 <=
INFO  23:36:32,296 - #9 0
INFO  23:36:32,297 - #14 ||
INFO  23:36:32,298 - #8 e
INFO  23:36:32,299 - #42 <=
INFO  23:36:32,299 - #8 d
INFO  23:36:32,299 - #30 )
INFO  23:36:32,299 - #20 {
INFO  23:36:32,299 - #3 print
INFO  23:36:32,299 - #29 (
INFO  23:36:32,299 - #8 e
INFO  23:36:32,299 - #30 )
INFO  23:36:32,299 - #27 ;
INFO  23:36:32,299 - #21 }
INFO  23:36:32,300 - #21 }
INFO  23:36:32,301 - #21 }
INFO  23:36:32,302 - =====================SINTAKSNO_STABLO=========================
INFO  23:36:32,303 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     1
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           d
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:36:32,304 - ==============================================================
INFO  23:36:32,316 - Pocetak obrade programa Program na liniji 1
INFO  23:36:32,317 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:36:32,317 - Deklarisana konstanta c na liniji 2
INFO  23:36:32,317 - Deklarisana konstanta d na liniji 2
INFO  23:36:32,317 - Deklarisana konstanta g na liniji 2
INFO  23:36:32,318 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:36:32,318 - Deklarisana promenljiva e na liniji 3
INFO  23:36:32,318 - Pocetak obrade metode main na liniji 5
INFO  23:36:32,319 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:36:32,319 - Zavrsetak obrade programa Program na liniji 1
INFO  23:36:32,319 - ======================TABELA_SIMBOLA==========================
INFO  23:36:32,319 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:36:32,320 - ==============================================================
INFO  23:36:32,320 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:36:32,320 - ==============================================================
INFO  23:36:32,320 - ======================GENERISANJE_KODA========================
INFO  23:36:32,324 - Generisanje koda uspesno zavrseno!
INFO  23:36:32,325 - Generisanje izlaznog fajla test\program.obj
INFO  23:36:32,325 - ==============================================================
INFO  23:38:43,596 - Obrada ulaznog fajla test\program.mj
INFO  23:38:43,676 - #2 program
INFO  23:38:43,677 - #8 Program
INFO  23:38:43,677 - #5 const
INFO  23:38:43,677 - #8 int
INFO  23:38:43,678 - #8 c
INFO  23:38:43,678 - #24 =
INFO  23:38:43,678 - #9 10
INFO  23:38:43,679 - #28 ,
INFO  23:38:43,681 - #8 d
INFO  23:38:43,681 - #24 =
INFO  23:38:43,681 - #9 99
INFO  23:38:43,681 - #28 ,
INFO  23:38:43,681 - #8 g
INFO  23:38:43,681 - #24 =
INFO  23:38:43,682 - #9 2
INFO  23:38:43,682 - #27 ;
INFO  23:38:43,682 - #8 int
INFO  23:38:43,684 - #8 e
INFO  23:38:43,684 - #27 ;
INFO  23:38:43,684 - #20 {
INFO  23:38:43,685 - #6 void
INFO  23:38:43,686 - #8 main
INFO  23:38:43,686 - #29 (
INFO  23:38:43,687 - #30 )
INFO  23:38:43,687 - #20 {
INFO  23:38:43,687 - #8 e
INFO  23:38:43,687 - #24 =
INFO  23:38:43,688 - #9 10
INFO  23:38:43,688 - #27 ;
INFO  23:38:43,688 - #31 if
INFO  23:38:43,689 - #29 (
INFO  23:38:43,689 - #8 e
INFO  23:38:43,689 - #38 >
INFO  23:38:43,689 - #9 0
INFO  23:38:43,690 - #13 &&
INFO  23:38:43,691 - #8 e
INFO  23:38:43,691 - #39 ==
INFO  23:38:43,691 - #9 5
INFO  23:38:43,692 - #13 &&
INFO  23:38:43,692 - #8 e
INFO  23:38:43,692 - #42 <=
INFO  23:38:43,692 - #9 10
INFO  23:38:43,693 - #30 )
INFO  23:38:43,693 - #20 {
INFO  23:38:43,693 - #3 print
INFO  23:38:43,693 - #29 (
INFO  23:38:43,693 - #8 e
INFO  23:38:43,693 - #30 )
INFO  23:38:43,693 - #27 ;
INFO  23:38:43,694 - #21 }
INFO  23:38:43,694 - #21 }
INFO  23:38:43,695 - #21 }
INFO  23:38:43,696 - =====================SINTAKSNO_STABLO=========================
INFO  23:38:43,698 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           5
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:38:43,701 - ==============================================================
INFO  23:38:43,717 - Pocetak obrade programa Program na liniji 1
INFO  23:38:43,717 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:38:43,718 - Deklarisana konstanta c na liniji 2
INFO  23:38:43,718 - Deklarisana konstanta d na liniji 2
INFO  23:38:43,718 - Deklarisana konstanta g na liniji 2
INFO  23:38:43,718 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:38:43,719 - Deklarisana promenljiva e na liniji 3
INFO  23:38:43,720 - Pocetak obrade metode main na liniji 5
INFO  23:38:43,720 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:38:43,720 - Zavrsetak obrade programa Program na liniji 1
INFO  23:38:43,720 - ======================TABELA_SIMBOLA==========================
INFO  23:38:43,721 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:38:43,721 - ==============================================================
INFO  23:38:43,721 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:38:43,721 - ==============================================================
INFO  23:38:43,721 - ======================GENERISANJE_KODA========================
INFO  23:38:43,731 - Generisanje koda uspesno zavrseno!
INFO  23:38:43,731 - Generisanje izlaznog fajla test\program.obj
INFO  23:38:43,731 - ==============================================================
INFO  23:41:29,624 - Obrada ulaznog fajla test\program.mj
INFO  23:41:29,736 - #2 program
INFO  23:41:29,736 - #8 Program
INFO  23:41:29,736 - #5 const
INFO  23:41:29,738 - #8 int
INFO  23:41:29,738 - #8 c
INFO  23:41:29,739 - #24 =
INFO  23:41:29,739 - #9 10
INFO  23:41:29,739 - #28 ,
INFO  23:41:29,740 - #8 d
INFO  23:41:29,744 - #24 =
INFO  23:41:29,744 - #9 99
INFO  23:41:29,744 - #28 ,
INFO  23:41:29,745 - #8 g
INFO  23:41:29,745 - #24 =
INFO  23:41:29,745 - #9 2
INFO  23:41:29,745 - #27 ;
INFO  23:41:29,745 - #8 int
INFO  23:41:29,746 - #8 e
INFO  23:41:29,747 - #27 ;
INFO  23:41:29,747 - #20 {
INFO  23:41:29,748 - #6 void
INFO  23:41:29,749 - #8 main
INFO  23:41:29,749 - #29 (
INFO  23:41:29,750 - #30 )
INFO  23:41:29,750 - #20 {
INFO  23:41:29,752 - #8 e
INFO  23:41:29,752 - #24 =
INFO  23:41:29,752 - #9 10
INFO  23:41:29,752 - #27 ;
INFO  23:41:29,753 - #31 if
INFO  23:41:29,753 - #29 (
INFO  23:41:29,753 - #8 e
INFO  23:41:29,753 - #38 >
INFO  23:41:29,754 - #9 0
INFO  23:41:29,755 - #13 &&
INFO  23:41:29,756 - #8 e
INFO  23:41:29,756 - #39 ==
INFO  23:41:29,756 - #9 5
INFO  23:41:29,756 - #13 &&
INFO  23:41:29,757 - #8 e
INFO  23:41:29,758 - #42 <=
INFO  23:41:29,758 - #9 10
INFO  23:41:29,759 - #30 )
INFO  23:41:29,759 - #20 {
INFO  23:41:29,759 - #3 print
INFO  23:41:29,760 - #29 (
INFO  23:41:29,760 - #8 e
INFO  23:41:29,760 - #30 )
INFO  23:41:29,760 - #27 ;
INFO  23:41:29,760 - #21 }
INFO  23:41:29,760 - #21 }
INFO  23:41:29,762 - #21 }
INFO  23:41:29,762 - =====================SINTAKSNO_STABLO=========================
INFO  23:41:29,764 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           5
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:41:29,766 - ==============================================================
INFO  23:41:29,781 - Pocetak obrade programa Program na liniji 1
INFO  23:41:29,781 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:41:29,783 - Deklarisana konstanta c na liniji 2
INFO  23:41:29,783 - Deklarisana konstanta d na liniji 2
INFO  23:41:29,783 - Deklarisana konstanta g na liniji 2
INFO  23:41:29,783 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:41:29,783 - Deklarisana promenljiva e na liniji 3
INFO  23:41:29,784 - Pocetak obrade metode main na liniji 5
INFO  23:41:29,785 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:41:29,785 - Zavrsetak obrade programa Program na liniji 1
INFO  23:41:29,785 - ======================TABELA_SIMBOLA==========================
INFO  23:41:29,786 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:41:29,786 - ==============================================================
INFO  23:41:29,786 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:41:29,786 - ==============================================================
INFO  23:41:29,786 - ======================GENERISANJE_KODA========================
INFO  23:41:29,792 - Generisanje koda uspesno zavrseno!
INFO  23:41:29,793 - Generisanje izlaznog fajla test\program.obj
INFO  23:41:29,793 - ==============================================================
INFO  23:59:35,093 - Obrada ulaznog fajla test\program.mj
INFO  23:59:35,178 - #2 program
INFO  23:59:35,178 - #8 Program
INFO  23:59:35,178 - #5 const
INFO  23:59:35,179 - #8 int
INFO  23:59:35,179 - #8 c
INFO  23:59:35,180 - #24 =
INFO  23:59:35,180 - #9 10
INFO  23:59:35,180 - #28 ,
INFO  23:59:35,181 - #8 d
INFO  23:59:35,181 - #24 =
INFO  23:59:35,181 - #9 99
INFO  23:59:35,181 - #28 ,
INFO  23:59:35,182 - #8 g
INFO  23:59:35,182 - #24 =
INFO  23:59:35,182 - #9 2
INFO  23:59:35,182 - #27 ;
INFO  23:59:35,182 - #8 int
INFO  23:59:35,183 - #8 e
INFO  23:59:35,183 - #27 ;
INFO  23:59:35,184 - #20 {
INFO  23:59:35,185 - #6 void
INFO  23:59:35,185 - #8 main
INFO  23:59:35,185 - #29 (
INFO  23:59:35,186 - #30 )
INFO  23:59:35,186 - #20 {
INFO  23:59:35,186 - #8 e
INFO  23:59:35,186 - #24 =
INFO  23:59:35,187 - #9 10
INFO  23:59:35,187 - #27 ;
INFO  23:59:35,187 - #31 if
INFO  23:59:35,188 - #29 (
INFO  23:59:35,188 - #8 e
INFO  23:59:35,188 - #38 >
INFO  23:59:35,188 - #9 0
INFO  23:59:35,189 - #13 &&
INFO  23:59:35,190 - #8 e
INFO  23:59:35,190 - #39 ==
INFO  23:59:35,190 - #9 5
INFO  23:59:35,191 - #13 &&
INFO  23:59:35,191 - #8 e
INFO  23:59:35,191 - #42 <=
INFO  23:59:35,191 - #9 10
INFO  23:59:35,192 - #30 )
INFO  23:59:35,192 - #20 {
INFO  23:59:35,192 - #3 print
INFO  23:59:35,192 - #29 (
INFO  23:59:35,192 - #8 e
INFO  23:59:35,193 - #30 )
INFO  23:59:35,193 - #27 ;
INFO  23:59:35,193 - #21 }
INFO  23:59:35,193 - #21 }
INFO  23:59:35,194 - #21 }
INFO  23:59:35,195 - =====================SINTAKSNO_STABLO=========================
INFO  23:59:35,197 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition_one(
                Cond_term_two(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           5
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                  Cond_fact_two(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         10
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:59:35,199 - ==============================================================
INFO  23:59:35,211 - Pocetak obrade programa Program na liniji 1
INFO  23:59:35,212 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:59:35,213 - Deklarisana konstanta c na liniji 2
INFO  23:59:35,213 - Deklarisana konstanta d na liniji 2
INFO  23:59:35,213 - Deklarisana konstanta g na liniji 2
INFO  23:59:35,213 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:59:35,213 - Deklarisana promenljiva e na liniji 3
INFO  23:59:35,214 - Pocetak obrade metode main na liniji 5
INFO  23:59:35,214 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:59:35,214 - Zavrsetak obrade programa Program na liniji 1
INFO  23:59:35,214 - ======================TABELA_SIMBOLA==========================
INFO  23:59:35,215 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  23:59:35,215 - ==============================================================
INFO  23:59:35,215 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:59:35,215 - ==============================================================
INFO  23:59:35,215 - ======================GENERISANJE_KODA========================
INFO  23:59:35,220 - Generisanje koda uspesno zavrseno!
INFO  23:59:35,221 - Generisanje izlaznog fajla test\program.obj
INFO  23:59:35,221 - ==============================================================
