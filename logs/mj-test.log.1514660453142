INFO  15:25:57,939 - Compiling source file: C:\Users\LjubaS\Desktop\ACA_ETF\IR4PP1\projekat\sa100122dProjekatDX13\workspace\MJCompiler\test\program.mj
INFO  15:25:57,944 - #33 program
INFO  15:25:57,944 - #1 Program
INFO  15:25:57,944 - #29 {
INFO  15:25:57,945 - #34 const
INFO  15:25:57,945 - #1 int
INFO  15:25:57,945 - #1 c
INFO  15:25:57,945 - #7 =
INFO  15:25:57,945 - #2 10
INFO  15:25:57,945 - #6 ;
INFO  15:25:57,945 - #34 const
INFO  15:25:57,945 - #1 int
INFO  15:25:57,946 - #1 d
INFO  15:25:57,946 - #7 =
INFO  15:25:57,946 - #2 99
INFO  15:25:57,946 - #14 ,
INFO  15:25:57,946 - #1 eps
INFO  15:25:57,946 - #7 =
INFO  15:25:57,946 - #2 2
INFO  15:25:57,946 - #6 ;
INFO  15:25:57,946 - #1 int
INFO  15:25:57,946 - #1 e
INFO  15:25:57,946 - #6 ;
INFO  15:25:57,947 - #35 void
INFO  15:25:57,947 - #1 test
INFO  15:25:57,947 - #10 (
INFO  15:25:57,947 - #11 )
INFO  15:25:57,947 - #29 {
INFO  15:25:57,947 - #1 int
INFO  15:25:57,947 - #1 a
INFO  15:25:57,947 - #14 ,
INFO  15:25:57,947 - #1 b
INFO  15:25:57,947 - #14 ,
INFO  15:25:57,947 - #6 ;
INFO  15:25:57,947 - #1 bool
INFO  15:25:57,947 - #1 cond
INFO  15:25:57,948 - #6 ;
INFO  15:25:57,948 - #1 a
INFO  15:25:57,948 - #7 =
INFO  15:25:57,948 - #2 3
INFO  15:25:57,948 - #6 ;
INFO  15:25:57,948 - #1 b
INFO  15:25:57,948 - #7 =
INFO  15:25:57,948 - #2 5
INFO  15:25:57,948 - #6 ;
INFO  15:25:57,948 - #1 cond
INFO  15:25:57,948 - #7 =
INFO  15:25:57,948 - #4 true
INFO  15:25:57,948 - #6 ;
INFO  15:25:57,949 - #23 if
INFO  15:25:57,949 - #10 (
INFO  15:25:57,949 - #2 2
INFO  15:25:57,949 - #18 *
INFO  15:25:57,949 - #10 (
INFO  15:25:57,949 - #1 a
INFO  15:25:57,949 - #17 -
INFO  15:25:57,949 - #1 b
INFO  15:25:57,949 - #17 -
INFO  15:25:57,949 - #2 1
INFO  15:25:57,949 - #11 )
INFO  15:25:57,951 - #17 -
INFO  15:25:57,951 - #2 14
INFO  15:25:57,952 - #40 >
INFO  15:25:57,952 - #2 0
INFO  15:25:57,952 - #31 ||
INFO  15:25:57,952 - #1 cond
INFO  15:25:57,952 - #11 )
INFO  15:25:57,952 - #13 print
INFO  15:25:57,952 - #10 (
INFO  15:25:57,952 - #1 a
INFO  15:25:57,952 - #16 +
INFO  15:25:57,952 - #1 b
INFO  15:25:57,952 - #11 )
INFO  15:25:57,952 - #6 ;
INFO  15:25:57,952 - #30 }
INFO  15:25:57,953 - #1 int
INFO  15:25:57,953 - #1 max
INFO  15:25:57,953 - #10 (
INFO  15:25:57,953 - #1 int
INFO  15:25:57,953 - #1 a
INFO  15:25:57,953 - #6 ;
INFO  15:25:57,953 - #1 int
INFO  15:25:57,953 - #1 b
INFO  15:25:57,953 - #11 )
INFO  15:25:57,953 - #29 {
INFO  15:25:57,953 - #23 if
INFO  15:25:57,953 - #10 (
INFO  15:25:57,954 - #1 a
INFO  15:25:57,954 - #40 >
INFO  15:25:57,954 - #2 0
INFO  15:25:57,954 - #1 b
INFO  15:25:57,954 - #11 )
INFO  15:25:57,954 - #29 {
INFO  15:25:57,954 - #36 return
INFO  15:25:57,954 - #1 a
INFO  15:25:57,954 - #6 ;
INFO  15:25:57,954 - #30 }
INFO  15:25:57,954 - #24 else
INFO  15:25:57,955 - #36 return
INFO  15:25:57,955 - #1 b
INFO  15:25:57,955 - #6 ;
INFO  15:25:57,955 - #30 }
INFO  15:25:57,955 - #1 int
INFO  15:25:57,955 - #1 min
INFO  15:25:57,955 - #10 (
INFO  15:25:57,955 - #1 int
INFO  15:25:57,955 - #1 a
INFO  15:25:57,955 - #14 ,
INFO  15:25:57,956 - #1 int
INFO  15:25:57,956 - #1 b
INFO  15:25:57,956 - #11 )
INFO  15:25:57,956 - #29 {
INFO  15:25:57,956 - #23 if
INFO  15:25:57,956 - #10 (
INFO  15:25:57,956 - #1 a
INFO  15:25:57,956 - #39 <
INFO  15:25:57,956 - #1 b
INFO  15:25:57,956 - #11 )
INFO  15:25:57,956 - #29 {
INFO  15:25:57,957 - #36 return
INFO  15:25:57,957 - #1 a
INFO  15:25:57,957 - #6 ;
INFO  15:25:57,957 - #30 }
INFO  15:25:57,957 - #24 else
INFO  15:25:57,957 - #29 {
INFO  15:25:57,957 - #36 return
INFO  15:25:57,957 - #1 b
INFO  15:25:57,957 - #6 ;
INFO  15:25:57,957 - #30 }
INFO  15:25:57,957 - #30 }
INFO  15:25:57,957 - #35 void
INFO  15:25:57,957 - #1 main
INFO  15:25:57,957 - #10 (
INFO  15:25:57,958 - #11 )
INFO  15:25:57,958 - #29 {
INFO  15:25:57,958 - #1 int
INFO  15:25:57,958 - #1 a
INFO  15:25:57,958 - #21 [
INFO  15:25:57,958 - #22 ]
INFO  15:25:57,958 - #6 ;
INFO  15:25:57,958 - #1 int
INFO  15:25:57,958 - #1 length
INFO  15:25:57,958 - #6 ;
INFO  15:25:57,958 - #1 length
INFO  15:25:57,958 - #7 =
INFO  15:25:57,958 - #1 c
INFO  15:25:57,958 - #6 ;
INFO  15:25:57,958 - #1 test
INFO  15:25:57,959 - #10 (
INFO  15:25:57,959 - #11 )
INFO  15:25:57,959 - #6 ;
INFO  15:25:57,959 - #23 if
INFO  15:25:57,959 - #10 (
INFO  15:25:57,959 - #1 length
INFO  15:25:57,959 - #40 >
INFO  15:25:57,959 - #2 0
INFO  15:25:57,959 - #32 &&
INFO  15:25:57,959 - #1 length
INFO  15:25:57,960 - #41 <=
INFO  15:25:57,960 - #1 d
INFO  15:25:57,960 - #11 )
INFO  15:25:57,960 - #1 a
INFO  15:25:57,960 - #7 =
INFO  15:25:57,960 - #15 new
INFO  15:25:57,960 - #1 int
INFO  15:25:57,960 - #21 [
INFO  15:25:57,960 - #1 length
INFO  15:25:57,960 - #22 ]
INFO  15:25:57,960 - #6 ;
INFO  15:25:57,960 - #24 else
INFO  15:25:57,960 - #1 a
INFO  15:25:57,960 - #7 =
INFO  15:25:57,961 - #15 new
INFO  15:25:57,961 - #1 int
INFO  15:25:57,961 - #21 [
INFO  15:25:57,961 - #2 5
INFO  15:25:57,961 - #22 ]
INFO  15:25:57,961 - #6 ;
INFO  15:25:57,961 - #25 do
INFO  15:25:57,961 - #29 {
INFO  15:25:57,961 - #12 read
INFO  15:25:57,961 - #10 (
INFO  15:25:57,961 - #1 a
INFO  15:25:57,961 - #21 [
INFO  15:25:57,961 - #1 i
INFO  15:25:57,961 - #22 ]
INFO  15:25:57,961 - #11 )
INFO  15:25:57,962 - #6 ;
INFO  15:25:57,962 - #23 if
INFO  15:25:57,962 - #10 (
INFO  15:25:57,962 - #1 a
INFO  15:25:57,962 - #21 [
INFO  15:25:57,962 - #1 i
INFO  15:25:57,962 - #22 ]
INFO  15:25:57,962 - #20 %
INFO  15:25:57,962 - #2 3
INFO  15:25:57,962 - #37 ==
INFO  15:25:57,962 - #2 0
INFO  15:25:57,962 - #11 )
INFO  15:25:57,962 - #13 print
INFO  15:25:57,963 - #10 (
INFO  15:25:57,963 - #1 a
INFO  15:25:57,963 - #21 [
INFO  15:25:57,963 - #1 i
INFO  15:25:57,963 - #22 ]
INFO  15:25:57,963 - #11 )
INFO  15:25:57,963 - #6 ;
INFO  15:25:57,963 - #24 else
INFO  15:25:57,963 - #13 print
INFO  15:25:57,963 - #10 (
INFO  15:25:57,963 - #1 max
INFO  15:25:57,963 - #10 (
INFO  15:25:57,963 - #1 a
INFO  15:25:57,963 - #21 [
INFO  15:25:57,963 - #1 i
INFO  15:25:57,963 - #22 ]
INFO  15:25:57,963 - #14 ,
INFO  15:25:57,963 - #2 0
INFO  15:25:57,963 - #11 )
INFO  15:25:57,964 - #11 )
INFO  15:25:57,964 - #6 ;
INFO  15:25:57,964 - #30 }
INFO  15:25:57,964 - #26 while
INFO  15:25:57,964 - #10 (
INFO  15:25:57,964 - #1 i
INFO  15:25:57,964 - #41 <=
INFO  15:25:57,964 - #1 length
INFO  15:25:57,964 - #17 -
INFO  15:25:57,964 - #2 1
INFO  15:25:57,964 - #11 )
INFO  15:25:57,964 - #6 ;
INFO  15:25:57,964 - #13 print
INFO  15:25:57,964 - #10 (
INFO  15:25:57,964 - #1 d
INFO  15:25:57,964 - #11 )
INFO  15:25:57,964 - #6 ;
INFO  15:25:57,964 - #30 }
INFO  15:25:57,965 - #30 }
