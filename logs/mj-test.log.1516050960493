INFO  22:13:16,459 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatFX_Argon\workspace\MJCompiler\test\program.mj
INFO  22:13:16,466 - #33 program
INFO  22:13:16,466 - #1 Program
INFO  22:13:16,466 - #34 const
INFO  22:13:16,466 - #1 int
INFO  22:13:16,466 - #1 c
INFO  22:13:16,467 - #7 =
INFO  22:13:16,467 - #2 10
INFO  22:13:16,467 - #6 ;
INFO  22:13:16,467 - #34 const
INFO  22:13:16,467 - #1 int
INFO  22:13:16,467 - #1 d
INFO  22:13:16,467 - #7 =
INFO  22:13:16,467 - #2 99
INFO  22:13:16,468 - #14 ,
INFO  22:13:16,468 - #1 eps
INFO  22:13:16,468 - #7 =
INFO  22:13:16,468 - #2 2
INFO  22:13:16,468 - #6 ;
INFO  22:13:16,468 - #1 int
INFO  22:13:16,468 - #1 e
INFO  22:13:16,468 - #6 ;
INFO  22:13:16,468 - #29 {
INFO  22:13:16,468 - #35 void
INFO  22:13:16,468 - #1 test
INFO  22:13:16,469 - #10 (
INFO  22:13:16,469 - #11 )
INFO  22:13:16,469 - #1 int
INFO  22:13:16,469 - #1 a
INFO  22:13:16,469 - #14 ,
INFO  22:13:16,469 - #1 b
INFO  22:13:16,469 - #6 ;
INFO  22:13:16,469 - #1 bool
INFO  22:13:16,469 - #1 cond
INFO  22:13:16,469 - #6 ;
INFO  22:13:16,469 - #29 {
INFO  22:13:16,469 - #1 a
INFO  22:13:16,469 - #7 =
INFO  22:13:16,469 - #2 3
INFO  22:13:16,470 - #6 ;
INFO  22:13:16,470 - #1 b
INFO  22:13:16,470 - #7 =
INFO  22:13:16,470 - #2 5
INFO  22:13:16,470 - #6 ;
INFO  22:13:16,470 - #1 cond
INFO  22:13:16,471 - #7 =
INFO  22:13:16,471 - #4 true
INFO  22:13:16,471 - #6 ;
INFO  22:13:16,471 - #23 if
INFO  22:13:16,472 - #10 (
INFO  22:13:16,472 - #2 2
INFO  22:13:16,472 - #18 *
INFO  22:13:16,472 - #10 (
INFO  22:13:16,472 - #1 a
INFO  22:13:16,472 - #17 -
INFO  22:13:16,472 - #1 b
INFO  22:13:16,472 - #17 -
INFO  22:13:16,473 - #2 1
INFO  22:13:16,473 - #11 )
INFO  22:13:16,473 - #17 -
INFO  22:13:16,476 - #2 14
INFO  22:13:16,476 - #40 >
INFO  22:13:16,476 - #2 0
INFO  22:13:16,476 - #31 ||
INFO  22:13:16,476 - #1 cond
INFO  22:13:16,476 - #11 )
INFO  22:13:16,476 - #13 print
INFO  22:13:16,476 - #10 (
INFO  22:13:16,476 - #1 a
INFO  22:13:16,476 - #16 +
INFO  22:13:16,476 - #1 b
INFO  22:13:16,477 - #11 )
INFO  22:13:16,477 - #6 ;
INFO  22:13:16,477 - #30 }
INFO  22:13:16,477 - #1 int
INFO  22:13:16,477 - #1 max
INFO  22:13:16,477 - #10 (
INFO  22:13:16,477 - #1 int
INFO  22:13:16,477 - #1 a
INFO  22:13:16,477 - #14 ,
INFO  22:13:16,477 - #1 int
INFO  22:13:16,477 - #1 b
INFO  22:13:16,477 - #11 )
INFO  22:13:16,477 - #1 int
INFO  22:13:16,478 - #1 x
INFO  22:13:16,478 - #6 ;
INFO  22:13:16,478 - #29 {
INFO  22:13:16,478 - #23 if
INFO  22:13:16,478 - #10 (
INFO  22:13:16,478 - #1 a
INFO  22:13:16,478 - #40 >
INFO  22:13:16,478 - #1 b
INFO  22:13:16,478 - #11 )
INFO  22:13:16,478 - #29 {
INFO  22:13:16,478 - #36 return
INFO  22:13:16,478 - #1 a
INFO  22:13:16,478 - #6 ;
INFO  22:13:16,478 - #30 }
INFO  22:13:16,479 - #24 else
INFO  22:13:16,479 - #36 return
INFO  22:13:16,479 - #1 b
INFO  22:13:16,479 - #6 ;
INFO  22:13:16,479 - #30 }
INFO  22:13:16,479 - #1 int
INFO  22:13:16,479 - #1 min
INFO  22:13:16,479 - #10 (
INFO  22:13:16,479 - #1 int
INFO  22:13:16,479 - #1 a
INFO  22:13:16,479 - #14 ,
INFO  22:13:16,479 - #1 int
INFO  22:13:16,479 - #1 b
INFO  22:13:16,479 - #11 )
INFO  22:13:16,479 - #29 {
INFO  22:13:16,480 - #23 if
INFO  22:13:16,480 - #10 (
INFO  22:13:16,480 - #1 a
INFO  22:13:16,480 - #39 <
INFO  22:13:16,480 - #1 b
INFO  22:13:16,480 - #11 )
INFO  22:13:16,480 - #29 {
INFO  22:13:16,480 - #36 return
INFO  22:13:16,480 - #1 a
INFO  22:13:16,480 - #6 ;
INFO  22:13:16,481 - #30 }
INFO  22:13:16,481 - #24 else
INFO  22:13:16,481 - #29 {
INFO  22:13:16,481 - #36 return
INFO  22:13:16,481 - #1 b
INFO  22:13:16,481 - #6 ;
INFO  22:13:16,481 - #30 }
INFO  22:13:16,481 - #30 }
INFO  22:13:16,481 - #35 void
INFO  22:13:16,481 - #1 obrada
INFO  22:13:16,481 - #10 (
INFO  22:13:16,481 - #1 int
INFO  22:13:16,481 - #1 a
INFO  22:13:16,481 - #21 [
INFO  22:13:16,482 - #22 ]
INFO  22:13:16,482 - #14 ,
INFO  22:13:16,482 - #1 int
INFO  22:13:16,482 - #1 length
INFO  22:13:16,482 - #11 )
INFO  22:13:16,482 - #1 int
INFO  22:13:16,482 - #1 i
INFO  22:13:16,482 - #6 ;
INFO  22:13:16,482 - #29 {
INFO  22:13:16,483 - #1 i
INFO  22:13:16,483 - #7 =
INFO  22:13:16,483 - #2 0
INFO  22:13:16,483 - #6 ;
INFO  22:13:16,483 - #25 do
INFO  22:13:16,483 - #29 {
INFO  22:13:16,483 - #23 if
INFO  22:13:16,483 - #10 (
INFO  22:13:16,483 - #1 a
INFO  22:13:16,483 - #21 [
INFO  22:13:16,483 - #1 i
INFO  22:13:16,484 - #22 ]
INFO  22:13:16,484 - #20 %
INFO  22:13:16,484 - #2 3
INFO  22:13:16,484 - #37 ==
INFO  22:13:16,484 - #2 0
INFO  22:13:16,484 - #11 )
INFO  22:13:16,484 - #13 print
INFO  22:13:16,484 - #10 (
INFO  22:13:16,484 - #1 a
INFO  22:13:16,484 - #21 [
INFO  22:13:16,484 - #1 i
INFO  22:13:16,484 - #22 ]
INFO  22:13:16,485 - #11 )
INFO  22:13:16,485 - #6 ;
INFO  22:13:16,485 - #24 else
INFO  22:13:16,485 - #13 print
INFO  22:13:16,485 - #10 (
INFO  22:13:16,485 - #1 max
INFO  22:13:16,485 - #10 (
INFO  22:13:16,485 - #1 a
INFO  22:13:16,485 - #21 [
INFO  22:13:16,485 - #1 i
INFO  22:13:16,485 - #22 ]
INFO  22:13:16,485 - #14 ,
INFO  22:13:16,485 - #2 0
INFO  22:13:16,485 - #11 )
INFO  22:13:16,486 - #11 )
INFO  22:13:16,486 - #6 ;
INFO  22:13:16,486 - #1 i
INFO  22:13:16,486 - #8 ++
INFO  22:13:16,486 - #6 ;
INFO  22:13:16,486 - #30 }
INFO  22:13:16,486 - #26 while
INFO  22:13:16,486 - #10 (
INFO  22:13:16,486 - #1 i
INFO  22:13:16,486 - #39 <
INFO  22:13:16,486 - #1 length
INFO  22:13:16,486 - #11 )
INFO  22:13:16,486 - #6 ;
INFO  22:13:16,487 - #30 }
INFO  22:13:16,487 - #35 void
INFO  22:13:16,487 - #1 main
INFO  22:13:16,487 - #10 (
INFO  22:13:16,487 - #11 )
INFO  22:13:16,487 - #1 int
INFO  22:13:16,488 - #1 a
INFO  22:13:16,488 - #21 [
INFO  22:13:16,488 - #22 ]
INFO  22:13:16,488 - #14 ,
INFO  22:13:16,488 - #1 length
INFO  22:13:16,488 - #6 ;
INFO  22:13:16,488 - #1 int
INFO  22:13:16,488 - #1 i
INFO  22:13:16,488 - #6 ;
INFO  22:13:16,488 - #29 {
INFO  22:13:16,488 - #1 length
INFO  22:13:16,488 - #7 =
INFO  22:13:16,488 - #1 min
INFO  22:13:16,488 - #10 (
INFO  22:13:16,488 - #1 c
INFO  22:13:16,488 - #14 ,
INFO  22:13:16,488 - #2 103
INFO  22:13:16,489 - #11 )
INFO  22:13:16,489 - #6 ;
INFO  22:13:16,489 - #1 test
INFO  22:13:16,489 - #10 (
INFO  22:13:16,489 - #11 )
INFO  22:13:16,489 - #6 ;
INFO  22:13:16,489 - #23 if
INFO  22:13:16,489 - #10 (
INFO  22:13:16,489 - #1 length
INFO  22:13:16,489 - #40 >
INFO  22:13:16,489 - #2 0
INFO  22:13:16,489 - #32 &&
INFO  22:13:16,489 - #1 length
INFO  22:13:16,489 - #41 <=
INFO  22:13:16,489 - #1 d
INFO  22:13:16,489 - #11 )
INFO  22:13:16,489 - #1 a
INFO  22:13:16,489 - #7 =
INFO  22:13:16,489 - #15 new
INFO  22:13:16,490 - #1 int
INFO  22:13:16,490 - #21 [
INFO  22:13:16,490 - #1 length
INFO  22:13:16,490 - #22 ]
INFO  22:13:16,490 - #6 ;
INFO  22:13:16,490 - #24 else
INFO  22:13:16,490 - #1 a
INFO  22:13:16,490 - #7 =
INFO  22:13:16,490 - #15 new
INFO  22:13:16,490 - #1 int
INFO  22:13:16,490 - #21 [
INFO  22:13:16,490 - #2 5
INFO  22:13:16,490 - #22 ]
INFO  22:13:16,490 - #6 ;
INFO  22:13:16,491 - #25 do
INFO  22:13:16,491 - #29 {
INFO  22:13:16,491 - #12 read
INFO  22:13:16,491 - #10 (
INFO  22:13:16,491 - #1 a
INFO  22:13:16,491 - #21 [
INFO  22:13:16,491 - #1 i
INFO  22:13:16,491 - #22 ]
INFO  22:13:16,492 - #11 )
INFO  22:13:16,492 - #6 ;
INFO  22:13:16,492 - #30 }
INFO  22:13:16,492 - #26 while
INFO  22:13:16,492 - #10 (
INFO  22:13:16,492 - #1 i
INFO  22:13:16,492 - #41 <=
INFO  22:13:16,492 - #1 length
INFO  22:13:16,492 - #17 -
INFO  22:13:16,492 - #2 1
INFO  22:13:16,492 - #11 )
INFO  22:13:16,492 - #6 ;
INFO  22:13:16,492 - #1 obrada
INFO  22:13:16,492 - #10 (
INFO  22:13:16,493 - #1 a
INFO  22:13:16,493 - #14 ,
INFO  22:13:16,493 - #1 length
INFO  22:13:16,493 - #11 )
INFO  22:13:16,493 - #6 ;
INFO  22:13:16,493 - #13 print
INFO  22:13:16,493 - #10 (
INFO  22:13:16,493 - #1 d
INFO  22:13:16,493 - #11 )
INFO  22:13:16,493 - #6 ;
INFO  22:13:16,494 - #30 }
INFO  22:13:16,494 - #30 }
