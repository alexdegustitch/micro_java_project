INFO  03:21:26,184 - Obrada ulaznog fajla test\program.mj
INFO  03:21:26,310 - #2 program
INFO  03:21:26,310 - #8 Program
INFO  03:21:26,310 - #5 const
INFO  03:21:26,311 - #8 int
INFO  03:21:26,311 - #8 c
INFO  03:21:26,312 - #24 =
INFO  03:21:26,312 - #9 10
INFO  03:21:26,312 - #28 ,
INFO  03:21:26,315 - #8 d
INFO  03:21:26,315 - #24 =
INFO  03:21:26,315 - #9 99
INFO  03:21:26,316 - #27 ;
INFO  03:21:26,316 - #8 int
INFO  03:21:26,317 - #8 e
INFO  03:21:26,318 - #27 ;
INFO  03:21:26,318 - #20 {
INFO  03:21:26,320 - #6 void
INFO  03:21:26,321 - #8 main
INFO  03:21:26,321 - #29 (
INFO  03:21:26,322 - #30 )
INFO  03:21:26,322 - #8 int
INFO  03:21:26,323 - #8 x
INFO  03:21:26,323 - #28 ,
INFO  03:21:26,323 - #8 y
INFO  03:21:26,323 - #27 ;
INFO  03:21:26,323 - #8 char
INFO  03:21:26,323 - #8 z
INFO  03:21:26,323 - #22 [
INFO  03:21:26,324 - #23 ]
INFO  03:21:26,324 - #27 ;
INFO  03:21:26,324 - #20 {
INFO  03:21:26,324 - #8 x
INFO  03:21:26,324 - #24 =
INFO  03:21:26,324 - #9 2
INFO  03:21:26,325 - #27 ;
INFO  03:21:26,325 - #8 y
INFO  03:21:26,326 - #24 =
INFO  03:21:26,326 - #9 5
INFO  03:21:26,326 - #27 ;
INFO  03:21:26,326 - #8 e
INFO  03:21:26,326 - #24 =
INFO  03:21:26,326 - #16 -
INFO  03:21:26,326 - #29 (
INFO  03:21:26,326 - #8 d
INFO  03:21:26,326 - #18 /
INFO  03:21:26,327 - #9 11
INFO  03:21:26,328 - #16 -
INFO  03:21:26,329 - #8 c
INFO  03:21:26,330 - #30 )
INFO  03:21:26,331 - #17 *
INFO  03:21:26,332 - #29 (
INFO  03:21:26,333 - #16 -
INFO  03:21:26,333 - #8 x
INFO  03:21:26,333 - #15 +
INFO  03:21:26,333 - #8 y
INFO  03:21:26,334 - #30 )
INFO  03:21:26,335 - #15 +
INFO  03:21:26,335 - #9 1
INFO  03:21:26,335 - #27 ;
INFO  03:21:26,335 - #8 e
INFO  03:21:26,335 - #25 ++
INFO  03:21:26,335 - #27 ;
INFO  03:21:26,335 - #3 print
INFO  03:21:26,336 - #29 (
INFO  03:21:26,336 - #8 e
INFO  03:21:26,336 - #30 )
INFO  03:21:26,336 - #27 ;
INFO  03:21:26,336 - #8 z
INFO  03:21:26,336 - #24 =
INFO  03:21:26,336 - #7 new
INFO  03:21:26,337 - #8 char
INFO  03:21:26,337 - #22 [
INFO  03:21:26,337 - #9 4
INFO  03:21:26,337 - #23 ]
INFO  03:21:26,337 - #27 ;
INFO  03:21:26,337 - #8 z
INFO  03:21:26,339 - #22 [
INFO  03:21:26,339 - #9 0
INFO  03:21:26,339 - #23 ]
INFO  03:21:26,339 - #24 =
INFO  03:21:26,339 - #8 chr
INFO  03:21:26,340 - #29 (
INFO  03:21:26,340 - #9 72
INFO  03:21:26,340 - #30 )
INFO  03:21:26,340 - #27 ;
INFO  03:21:26,340 - #8 z
INFO  03:21:26,340 - #22 [
INFO  03:21:26,340 - #9 1
INFO  03:21:26,340 - #23 ]
INFO  03:21:26,341 - #24 =
INFO  03:21:26,341 - #10 O
INFO  03:21:26,341 - #27 ;
INFO  03:21:26,341 - #8 z
INFO  03:21:26,341 - #22 [
INFO  03:21:26,341 - #9 2
INFO  03:21:26,341 - #23 ]
INFO  03:21:26,342 - #24 =
INFO  03:21:26,342 - #10 M
INFO  03:21:26,342 - #27 ;
INFO  03:21:26,342 - #8 z
INFO  03:21:26,342 - #22 [
INFO  03:21:26,342 - #9 3
INFO  03:21:26,342 - #23 ]
INFO  03:21:26,342 - #24 =
INFO  03:21:26,342 - #8 chr
INFO  03:21:26,342 - #29 (
INFO  03:21:26,342 - #8 ord
INFO  03:21:26,342 - #29 (
INFO  03:21:26,342 - #10 A
INFO  03:21:26,342 - #30 )
INFO  03:21:26,343 - #15 +
INFO  03:21:26,343 - #9 4
INFO  03:21:26,343 - #30 )
INFO  03:21:26,343 - #27 ;
INFO  03:21:26,343 - #3 print
INFO  03:21:26,343 - #29 (
INFO  03:21:26,343 - #8 z
INFO  03:21:26,343 - #22 [
INFO  03:21:26,343 - #9 0
INFO  03:21:26,343 - #23 ]
INFO  03:21:26,343 - #30 )
INFO  03:21:26,343 - #27 ;
INFO  03:21:26,343 - #3 print
INFO  03:21:26,343 - #29 (
INFO  03:21:26,343 - #8 z
INFO  03:21:26,344 - #22 [
INFO  03:21:26,344 - #9 1
INFO  03:21:26,344 - #23 ]
INFO  03:21:26,344 - #30 )
INFO  03:21:26,344 - #27 ;
INFO  03:21:26,344 - #3 print
INFO  03:21:26,344 - #29 (
INFO  03:21:26,344 - #8 z
INFO  03:21:26,344 - #22 [
INFO  03:21:26,344 - #9 2
INFO  03:21:26,344 - #23 ]
INFO  03:21:26,345 - #30 )
INFO  03:21:26,345 - #27 ;
INFO  03:21:26,345 - #3 print
INFO  03:21:26,345 - #29 (
INFO  03:21:26,345 - #8 z
INFO  03:21:26,345 - #22 [
INFO  03:21:26,345 - #9 3
INFO  03:21:26,345 - #23 ]
INFO  03:21:26,345 - #30 )
INFO  03:21:26,345 - #27 ;
INFO  03:21:26,345 - #3 print
INFO  03:21:26,345 - #29 (
INFO  03:21:26,345 - #8 len
INFO  03:21:26,345 - #29 (
INFO  03:21:26,345 - #8 z
INFO  03:21:26,345 - #30 )
INFO  03:21:26,346 - #30 )
INFO  03:21:26,346 - #27 ;
INFO  03:21:26,346 - #21 }
INFO  03:21:26,346 - #21 }
INFO  03:21:26,346 - =====================SINTAKSNO_STABLO=========================
INFO  03:21:26,350 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           x
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               2
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             5
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_expr(
                                                Expr_neg_term_multi(
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       x
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                  More_term_single(
                                                    More_term_part(
                                                      Add_op_plus(
                                                      ) [Add_op_plus]
                                                      Term_single(
                                                        Factor_designator(
                                                          Designator_1(
                                                           y
                                                          ) [Designator_1]
                                                        ) [Factor_designator]
                                                      ) [Term_single]
                                                    ) [More_term_part]
                                                  ) [More_term_single]
                                                ) [Expr_neg_term_multi]
                                              ) [Factor_expr]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:21:26,352 - ==============================================================
INFO  03:21:26,367 - Pocetak obrade programa Program na liniji 1
INFO  03:21:26,367 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:21:26,368 - Deklarisana konstanta c na liniji 2
INFO  03:21:26,368 - Deklarisana konstanta d na liniji 2
INFO  03:21:26,368 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:21:26,368 - Deklarisana promenljiva e na liniji 3
INFO  03:21:26,381 - Pocetak obrade metode main na liniji 5
INFO  03:21:26,381 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  03:21:26,381 - Deklarisana promenljiva x na liniji 5
INFO  03:21:26,381 - Deklarisana promenljiva y na liniji 5
INFO  03:21:26,381 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  03:21:26,381 - Deklarisan niz z na liniji 5
INFO  03:21:26,382 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  03:21:26,382 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  03:21:26,382 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  03:21:26,382 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  03:21:26,383 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  03:21:26,383 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:21:26,383 - Zavrsetak obrade programa Program na liniji 1
INFO  03:21:26,383 - ======================TABELA_SIMBOLA==========================
INFO  03:21:26,383 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  03:21:26,383 - ==============================================================
INFO  03:21:26,384 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:21:26,384 - ==============================================================
INFO  03:21:26,384 - ======================GENERISANJE_KODA========================
INFO  03:21:26,390 - Generisanje koda uspesno zavrseno!
INFO  03:21:26,390 - Generisanje izlaznog fajla test\program.obj
INFO  03:21:26,390 - ==============================================================
INFO  03:35:33,565 - Obrada ulaznog fajla test\program.mj
INFO  03:35:33,669 - #2 program
INFO  03:35:33,669 - #8 Program
INFO  03:35:33,669 - #5 const
INFO  03:35:33,670 - #8 int
INFO  03:35:33,670 - #8 c
INFO  03:35:33,671 - #24 =
INFO  03:35:33,671 - #9 10
INFO  03:35:33,671 - #28 ,
INFO  03:35:33,672 - #8 d
INFO  03:35:33,672 - #24 =
INFO  03:35:33,672 - #9 99
INFO  03:35:33,672 - #27 ;
INFO  03:35:33,673 - #8 int
INFO  03:35:33,674 - #8 e
INFO  03:35:33,674 - #27 ;
INFO  03:35:33,675 - #20 {
INFO  03:35:33,676 - #6 void
INFO  03:35:33,677 - #8 main
INFO  03:35:33,677 - #29 (
INFO  03:35:33,678 - #30 )
INFO  03:35:33,678 - #20 {
INFO  03:35:33,678 - #31 if
INFO  03:35:33,678 - #29 (
INFO  03:35:33,678 - #11 true
INFO  03:35:33,679 - #30 )
INFO  03:35:33,680 - #20 {
INFO  03:35:33,680 - #3 print
INFO  03:35:33,680 - #29 (
INFO  03:35:33,680 - #8 c
INFO  03:35:33,680 - #30 )
INFO  03:35:33,680 - #27 ;
INFO  03:35:33,680 - #21 }
INFO  03:35:33,681 - #3 print
INFO  03:35:33,681 - #29 (
INFO  03:35:33,681 - #8 d
INFO  03:35:33,681 - #30 )
INFO  03:35:33,682 - #27 ;
INFO  03:35:33,682 - #21 }
INFO  03:35:33,682 - #21 }
INFO  03:35:33,683 - =====================SINTAKSNO_STABLO=========================
INFO  03:35:33,685 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:35:33,686 - ==============================================================
INFO  03:35:33,709 - Pocetak obrade programa Program na liniji 1
INFO  03:35:33,710 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:35:33,711 - Deklarisana konstanta c na liniji 2
INFO  03:35:33,711 - Deklarisana konstanta d na liniji 2
INFO  03:35:33,712 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:35:33,712 - Deklarisana promenljiva e na liniji 3
INFO  03:35:33,713 - Pocetak obrade metode main na liniji 5
INFO  03:35:33,713 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:35:33,713 - Zavrsetak obrade programa Program na liniji 1
INFO  03:35:33,714 - ======================TABELA_SIMBOLA==========================
INFO  03:35:33,716 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  03:35:33,716 - ==============================================================
INFO  03:35:33,716 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:35:33,716 - ==============================================================
INFO  03:35:33,716 - ======================GENERISANJE_KODA========================
INFO  03:35:33,722 - Generisanje koda uspesno zavrseno!
INFO  03:35:33,722 - Generisanje izlaznog fajla test\program.obj
INFO  03:35:33,722 - ==============================================================
INFO  03:35:57,819 - Obrada ulaznog fajla test\program.mj
INFO  03:35:57,903 - #2 program
INFO  03:35:57,903 - #8 Program
INFO  03:35:57,903 - #5 const
INFO  03:35:57,904 - #8 int
INFO  03:35:57,904 - #8 c
INFO  03:35:57,905 - #24 =
INFO  03:35:57,905 - #9 10
INFO  03:35:57,906 - #28 ,
INFO  03:35:57,907 - #8 d
INFO  03:35:57,907 - #24 =
INFO  03:35:57,907 - #9 99
INFO  03:35:57,907 - #27 ;
INFO  03:35:57,907 - #8 int
INFO  03:35:57,909 - #8 e
INFO  03:35:57,910 - #27 ;
INFO  03:35:57,911 - #20 {
INFO  03:35:57,912 - #6 void
INFO  03:35:57,912 - #8 main
INFO  03:35:57,912 - #29 (
INFO  03:35:57,913 - #30 )
INFO  03:35:57,913 - #20 {
INFO  03:35:57,913 - #8 bool
INFO  03:35:57,913 - #8 cond
ERROR 03:35:57,913 - Sintaksna greska na liniji 6, koloni 8 za simbol "cond"!
INFO  03:35:57,913 - #24 =
INFO  03:35:57,914 - #11 true
INFO  03:35:57,914 - #27 ;
INFO  03:35:57,914 - #31 if
INFO  03:35:57,915 - #29 (
INFO  03:35:57,915 - #8 cond
INFO  03:35:57,915 - #30 )
INFO  03:35:57,915 - #20 {
INFO  03:35:57,915 - #3 print
INFO  03:35:57,915 - #29 (
ERROR 03:35:57,915 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 6, koloni 8 za simbol "cond"!
INFO  03:35:57,916 - #8 c
INFO  03:35:57,916 - #30 )
INFO  03:35:57,917 - #27 ;
INFO  03:35:57,917 - #21 }
INFO  03:35:57,918 - #3 print
ERROR 03:35:57,918 - Sintaksna greska na liniji 10, koloni 3 za simbol "print"!
INFO  03:35:57,918 - #29 (
INFO  03:35:57,918 - #8 d
INFO  03:35:57,918 - #30 )
INFO  03:35:57,918 - #27 ;
INFO  03:35:57,918 - #21 }
INFO  03:35:57,918 - #21 }
INFO  03:37:56,024 - Obrada ulaznog fajla test\program.mj
INFO  03:37:56,131 - #2 program
INFO  03:37:56,132 - #8 Program
INFO  03:37:56,132 - #5 const
INFO  03:37:56,133 - #8 int
INFO  03:37:56,133 - #8 c
INFO  03:37:56,134 - #24 =
INFO  03:37:56,134 - #9 10
INFO  03:37:56,135 - #28 ,
INFO  03:37:56,136 - #8 d
INFO  03:37:56,136 - #24 =
INFO  03:37:56,136 - #9 99
INFO  03:37:56,136 - #27 ;
INFO  03:37:56,136 - #8 int
INFO  03:37:56,138 - #8 e
INFO  03:37:56,138 - #27 ;
INFO  03:37:56,138 - #20 {
INFO  03:37:56,140 - #6 void
INFO  03:37:56,140 - #8 main
INFO  03:37:56,140 - #29 (
INFO  03:37:56,141 - #30 )
INFO  03:37:56,141 - #20 {
INFO  03:37:56,141 - #8 bool
INFO  03:37:56,141 - #8 cond
ERROR 03:37:56,141 - Sintaksna greska na liniji 6, koloni 8 za simbol "cond"!
INFO  03:37:56,142 - #24 =
INFO  03:37:56,142 - #11 true
INFO  03:37:56,142 - #27 ;
INFO  03:37:56,143 - #31 if
INFO  03:37:56,143 - #29 (
INFO  03:37:56,143 - #8 cond
INFO  03:37:56,143 - #30 )
INFO  03:37:56,144 - #20 {
INFO  03:37:56,144 - #3 print
INFO  03:37:56,144 - #29 (
ERROR 03:37:56,144 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 6, koloni 8 za simbol "cond"!
INFO  03:37:56,146 - #8 c
INFO  03:37:56,146 - #30 )
INFO  03:37:56,146 - #27 ;
INFO  03:37:56,147 - #21 }
INFO  03:37:56,147 - #3 print
ERROR 03:37:56,147 - Sintaksna greska na liniji 10, koloni 3 za simbol "print"!
INFO  03:37:56,147 - #29 (
INFO  03:37:56,147 - #8 d
INFO  03:37:56,148 - #30 )
INFO  03:37:56,148 - #27 ;
INFO  03:37:56,148 - #21 }
INFO  03:37:56,148 - #21 }
INFO  03:38:17,257 - Obrada ulaznog fajla test\program.mj
INFO  03:38:17,391 - #2 program
INFO  03:38:17,392 - #8 Program
INFO  03:38:17,392 - #5 const
INFO  03:38:17,393 - #8 int
INFO  03:38:17,393 - #8 c
INFO  03:38:17,394 - #24 =
INFO  03:38:17,394 - #9 10
INFO  03:38:17,395 - #28 ,
INFO  03:38:17,396 - #8 d
INFO  03:38:17,396 - #24 =
INFO  03:38:17,396 - #9 99
INFO  03:38:17,396 - #27 ;
INFO  03:38:17,397 - #8 int
INFO  03:38:17,398 - #8 e
INFO  03:38:17,398 - #27 ;
INFO  03:38:17,399 - #20 {
INFO  03:38:17,400 - #6 void
INFO  03:38:17,400 - #8 main
INFO  03:38:17,400 - #29 (
INFO  03:38:17,401 - #30 )
INFO  03:38:17,401 - #20 {
INFO  03:38:17,401 - #8 bool
INFO  03:38:17,401 - #8 cond
ERROR 03:38:32,398 - Sintaksna greska na liniji 6, koloni 8 za simbol "cond"!
INFO  03:38:37,018 - #24 =
INFO  03:38:37,022 - #11 true
INFO  03:38:37,026 - #27 ;
INFO  03:38:37,052 - #31 if
INFO  03:38:37,059 - #29 (
INFO  03:38:37,067 - #8 cond
INFO  03:38:37,078 - #30 )
INFO  03:38:37,086 - #20 {
INFO  03:38:37,096 - #3 print
INFO  03:38:37,105 - #29 (
ERROR 03:38:57,342 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 6, koloni 8 za simbol "cond"!
INFO  03:39:23,746 - #8 c
INFO  03:39:24,076 - #30 )
INFO  03:39:31,965 - #27 ;
INFO  03:39:32,296 - #21 }
INFO  03:39:35,338 - #3 print
ERROR 03:39:35,718 - Sintaksna greska na liniji 10, koloni 3 za simbol "print"!
INFO  03:39:39,436 - #29 (
INFO  03:39:39,455 - #8 d
INFO  03:39:39,459 - #30 )
INFO  03:39:39,468 - #27 ;
INFO  03:39:39,475 - #21 }
INFO  03:39:39,481 - #21 }
INFO  03:41:23,486 - Obrada ulaznog fajla test\program.mj
INFO  03:41:23,586 - #2 program
INFO  03:41:23,586 - #8 Program
INFO  03:41:23,586 - #5 const
INFO  03:41:23,588 - #8 int
INFO  03:41:23,588 - #8 c
INFO  03:41:23,589 - #24 =
INFO  03:41:23,589 - #9 10
INFO  03:41:23,589 - #28 ,
INFO  03:41:23,590 - #8 d
INFO  03:41:23,590 - #24 =
INFO  03:41:23,591 - #9 99
INFO  03:41:23,591 - #27 ;
INFO  03:41:23,591 - #8 int
INFO  03:41:23,592 - #8 e
INFO  03:41:23,593 - #27 ;
INFO  03:41:23,593 - #20 {
INFO  03:41:23,595 - #6 void
INFO  03:41:23,595 - #8 main
INFO  03:41:23,596 - #29 (
INFO  03:41:23,597 - #30 )
INFO  03:41:23,597 - #20 {
INFO  03:41:23,597 - #8 bool
INFO  03:41:23,597 - #8 cond
ERROR 03:41:23,597 - Sintaksna greska na liniji 6, koloni 8 za simbol "cond"!
INFO  03:41:23,597 - #24 =
INFO  03:41:23,598 - #11 true
INFO  03:41:23,598 - #27 ;
INFO  03:41:23,599 - #31 if
INFO  03:41:23,599 - #29 (
INFO  03:41:23,599 - #8 cond
INFO  03:41:23,599 - #30 )
INFO  03:41:23,599 - #20 {
INFO  03:41:23,599 - #3 print
INFO  03:41:23,599 - #29 (
ERROR 03:41:23,600 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 6, koloni 8 za simbol "cond"!
INFO  03:41:23,601 - #8 c
INFO  03:41:23,601 - #30 )
INFO  03:41:23,601 - #27 ;
INFO  03:41:23,601 - #21 }
INFO  03:41:23,602 - #3 print
ERROR 03:41:23,602 - Sintaksna greska na liniji 10, koloni 3 za simbol "print"!
INFO  03:41:23,602 - #29 (
INFO  03:41:23,602 - #8 d
INFO  03:41:23,602 - #30 )
INFO  03:41:23,602 - #27 ;
INFO  03:41:23,602 - #21 }
INFO  03:41:23,602 - #21 }
INFO  03:43:16,068 - Obrada ulaznog fajla test\program.mj
INFO  03:43:16,184 - #2 program
INFO  03:43:16,184 - #8 Program
INFO  03:43:16,184 - #5 const
INFO  03:43:16,186 - #8 int
INFO  03:43:16,186 - #8 c
INFO  03:43:16,187 - #24 =
INFO  03:43:16,188 - #9 10
INFO  03:43:16,188 - #28 ,
INFO  03:43:16,189 - #8 d
INFO  03:43:16,190 - #24 =
INFO  03:43:16,190 - #9 99
INFO  03:43:16,190 - #27 ;
INFO  03:43:16,190 - #8 int
INFO  03:43:16,192 - #8 e
INFO  03:43:16,192 - #27 ;
INFO  03:43:16,192 - #20 {
INFO  03:43:16,195 - #6 void
INFO  03:43:16,195 - #8 main
INFO  03:43:16,195 - #29 (
INFO  03:43:16,196 - #30 )
INFO  03:43:16,197 - #20 {
INFO  03:43:16,197 - #8 bool
INFO  03:43:16,197 - #8 cond
ERROR 03:43:16,197 - Sintaksna greska na liniji 6, koloni 8 za simbol "cond"!
INFO  03:43:16,197 - #24 =
INFO  03:43:16,197 - #11 true
INFO  03:43:16,197 - #27 ;
INFO  03:43:16,198 - #31 if
INFO  03:43:16,198 - #29 (
INFO  03:43:16,198 - #8 cond
INFO  03:43:16,199 - #30 )
INFO  03:43:16,199 - #20 {
INFO  03:43:16,199 - #3 print
INFO  03:43:16,199 - #29 (
ERROR 03:43:16,199 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 6, koloni 8 za simbol "cond"!
INFO  03:43:16,200 - #8 c
INFO  03:43:16,200 - #30 )
INFO  03:43:16,201 - #27 ;
INFO  03:43:16,201 - #21 }
INFO  03:43:16,202 - #3 print
ERROR 03:43:16,202 - Sintaksna greska na liniji 10, koloni 3 za simbol "print"!
INFO  03:43:16,202 - #29 (
INFO  03:43:16,202 - #8 d
INFO  03:43:16,202 - #30 )
INFO  03:43:16,202 - #27 ;
INFO  03:43:16,202 - #21 }
INFO  03:43:16,202 - #21 }
INFO  03:45:21,646 - Obrada ulaznog fajla test\program.mj
INFO  03:45:21,738 - #2 program
INFO  03:45:21,738 - #8 Program
INFO  03:45:21,738 - #5 const
INFO  03:45:21,739 - #8 int
INFO  03:45:21,739 - #8 c
INFO  03:45:21,740 - #24 =
INFO  03:45:21,741 - #9 10
INFO  03:45:21,741 - #28 ,
INFO  03:45:21,742 - #8 d
INFO  03:45:21,742 - #24 =
INFO  03:45:21,742 - #9 99
INFO  03:45:21,743 - #27 ;
INFO  03:45:21,743 - #8 int
INFO  03:45:21,745 - #8 e
INFO  03:45:21,745 - #27 ;
INFO  03:45:21,745 - #20 {
INFO  03:45:21,746 - #6 void
INFO  03:45:21,746 - #8 main
INFO  03:45:21,746 - #29 (
INFO  03:45:21,747 - #30 )
INFO  03:45:21,747 - #20 {
INFO  03:45:21,747 - #8 bool
INFO  03:45:21,747 - #8 cond
ERROR 03:45:21,748 - Sintaksna greska na liniji 6, koloni 8 za simbol "cond"!
INFO  03:45:21,748 - #24 =
INFO  03:45:21,748 - #11 true
INFO  03:45:21,748 - #27 ;
INFO  03:45:21,749 - #31 if
INFO  03:45:21,749 - #29 (
INFO  03:45:21,750 - #8 cond
INFO  03:45:21,750 - #30 )
INFO  03:45:21,750 - #20 {
INFO  03:45:21,750 - #3 print
INFO  03:45:21,750 - #29 (
ERROR 03:45:21,750 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 6, koloni 8 za simbol "cond"!
INFO  03:45:21,751 - #8 c
INFO  03:45:21,751 - #30 )
INFO  03:45:21,752 - #27 ;
INFO  03:45:21,752 - #21 }
INFO  03:45:21,752 - #3 print
ERROR 03:45:21,752 - Sintaksna greska na liniji 10, koloni 3 za simbol "print"!
INFO  03:45:21,752 - #29 (
INFO  03:45:21,752 - #8 d
INFO  03:45:21,753 - #30 )
INFO  03:45:21,753 - #27 ;
INFO  03:45:21,753 - #21 }
INFO  03:45:21,753 - #21 }
INFO  03:45:21,753 - Wait a sec
INFO  03:48:41,744 - Obrada ulaznog fajla test\program.mj
INFO  03:48:41,822 - #2 program
INFO  03:48:41,822 - #8 Program
INFO  03:48:41,822 - #5 const
INFO  03:48:41,824 - #8 int
INFO  03:48:41,824 - #8 c
INFO  03:48:41,825 - #24 =
INFO  03:48:41,825 - #9 10
INFO  03:48:41,825 - #28 ,
INFO  03:48:41,826 - #8 d
INFO  03:48:41,826 - #24 =
INFO  03:48:41,826 - #9 99
INFO  03:48:41,826 - #27 ;
INFO  03:48:41,826 - #8 int
INFO  03:48:41,827 - #8 e
INFO  03:48:41,827 - #27 ;
INFO  03:48:41,828 - #20 {
INFO  03:48:41,829 - #6 void
INFO  03:48:41,829 - #8 main
INFO  03:48:41,829 - #29 (
INFO  03:48:41,830 - #30 )
INFO  03:48:41,830 - #20 {
INFO  03:48:41,830 - #8 bool
INFO  03:48:41,830 - #8 cond
ERROR 03:48:41,830 - Sintaksna greska na liniji 6, koloni 8 za simbol "cond"!
INFO  03:48:41,830 - #24 =
INFO  03:48:41,831 - #11 true
INFO  03:48:41,831 - #27 ;
INFO  03:48:41,832 - #31 if
INFO  03:48:41,832 - #29 (
INFO  03:48:41,832 - #8 cond
INFO  03:48:41,832 - #30 )
INFO  03:48:41,832 - #20 {
INFO  03:48:41,832 - #3 print
INFO  03:48:41,832 - #29 (
ERROR 03:48:41,832 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 6, koloni 8 za simbol "cond"!
INFO  03:48:41,834 - #8 c
INFO  03:48:41,834 - #30 )
INFO  03:48:41,835 - #27 ;
INFO  03:48:41,835 - #21 }
INFO  03:48:41,835 - #3 print
ERROR 03:48:41,835 - Sintaksna greska na liniji 10, koloni 3 za simbol "print"!
INFO  03:48:41,835 - #29 (
INFO  03:48:41,836 - #8 d
INFO  03:48:41,836 - #30 )
INFO  03:48:41,836 - #27 ;
INFO  03:48:41,836 - #21 }
INFO  03:48:41,836 - #21 }
ERROR 03:48:41,836 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1, koloni -1
INFO  03:48:41,836 - Ulazni fajl ima sintaksne greske!
INFO  03:56:51,017 - Obrada ulaznog fajla test\program.mj
INFO  03:56:51,124 - #2 program
INFO  03:56:51,125 - #8 Program
INFO  03:56:51,125 - #5 const
INFO  03:56:51,127 - #8 int
INFO  03:56:51,127 - #8 c
INFO  03:56:51,129 - #24 =
INFO  03:56:51,129 - #9 10
INFO  03:56:51,129 - #28 ,
INFO  03:56:51,131 - #8 d
INFO  03:56:51,131 - #24 =
INFO  03:56:51,132 - #9 99
INFO  03:56:51,132 - #27 ;
INFO  03:56:51,132 - #8 int
INFO  03:56:51,134 - #8 e
INFO  03:56:51,134 - #27 ;
INFO  03:56:51,135 - #20 {
INFO  03:56:51,137 - #6 void
INFO  03:56:51,137 - #8 main
INFO  03:56:51,137 - #29 (
INFO  03:56:51,139 - #30 )
INFO  03:56:51,139 - #20 {
INFO  03:56:51,140 - #8 bool
INFO  03:56:51,140 - #8 cond
ERROR 03:56:51,140 - Sintaksna greska na liniji 6, koloni 8 za simbol "cond"!
INFO  03:56:51,140 - #24 =
INFO  03:56:51,141 - #11 true
INFO  03:56:51,141 - #27 ;
INFO  03:56:51,144 - #31 if
INFO  03:56:51,144 - #29 (
INFO  03:56:51,144 - #8 cond
INFO  03:56:51,144 - #30 )
INFO  03:56:51,144 - #20 {
INFO  03:56:51,144 - #3 print
INFO  03:56:51,144 - #29 (
ERROR 03:56:51,144 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 6, koloni 8 za simbol "cond"!
INFO  03:56:51,146 - #8 c
INFO  03:56:51,146 - #30 )
INFO  03:56:51,147 - #27 ;
INFO  03:56:51,147 - #21 }
INFO  03:56:51,148 - #3 print
ERROR 03:56:51,148 - Sintaksna greska na liniji 10, koloni 3 za simbol "print"!
INFO  03:56:51,148 - #29 (
INFO  03:56:51,148 - #8 d
INFO  03:56:51,148 - #30 )
INFO  03:56:51,148 - #27 ;
INFO  03:56:51,148 - #21 }
INFO  03:56:51,148 - #21 }
ERROR 03:56:51,149 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1, koloni -1!
INFO  03:56:51,149 - Ulazni fajl ima sintaksne greske!
INFO  03:58:02,687 - Obrada ulaznog fajla test\program.mj
INFO  03:58:02,770 - #2 program
INFO  03:58:02,771 - #8 Program
INFO  03:58:02,771 - #5 const
INFO  03:58:02,772 - #8 int
INFO  03:58:02,772 - #8 c
INFO  03:58:02,772 - #24 =
INFO  03:58:02,773 - #9 10
INFO  03:58:02,773 - #28 ,
INFO  03:58:02,774 - #8 d
INFO  03:58:02,774 - #24 =
INFO  03:58:02,774 - #9 99
INFO  03:58:02,774 - #27 ;
INFO  03:58:02,775 - #8 int
INFO  03:58:02,776 - #8 e
INFO  03:58:02,776 - #27 ;
INFO  03:58:02,776 - #20 {
INFO  03:58:02,777 - #6 void
INFO  03:58:02,777 - #8 main
INFO  03:58:02,777 - #29 (
INFO  03:58:02,778 - #30 )
INFO  03:58:02,779 - #8 bool
INFO  03:58:02,779 - #8 cond
INFO  03:58:02,779 - #27 ;
INFO  03:58:02,779 - #20 {
INFO  03:58:02,780 - #8 cond
INFO  03:58:02,780 - #24 =
INFO  03:58:02,780 - #11 true
INFO  03:58:02,780 - #27 ;
INFO  03:58:02,781 - #31 if
INFO  03:58:02,781 - #29 (
INFO  03:58:02,781 - #8 cond
INFO  03:58:02,781 - #30 )
INFO  03:58:02,782 - #20 {
INFO  03:58:02,782 - #3 print
INFO  03:58:02,782 - #29 (
INFO  03:58:02,782 - #8 c
INFO  03:58:02,782 - #30 )
INFO  03:58:02,782 - #27 ;
INFO  03:58:02,782 - #21 }
INFO  03:58:02,783 - #3 print
INFO  03:58:02,783 - #29 (
INFO  03:58:02,783 - #8 d
INFO  03:58:02,783 - #30 )
INFO  03:58:02,783 - #27 ;
INFO  03:58:02,783 - #21 }
INFO  03:58:02,783 - #21 }
INFO  03:58:02,784 - =====================SINTAKSNO_STABLO=========================
INFO  03:58:02,786 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:58:02,787 - ==============================================================
INFO  03:58:02,803 - Pocetak obrade programa Program na liniji 1
INFO  03:58:02,803 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:58:02,804 - Deklarisana konstanta c na liniji 2
INFO  03:58:02,804 - Deklarisana konstanta d na liniji 2
INFO  03:58:02,804 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:58:02,804 - Deklarisana promenljiva e na liniji 3
INFO  03:58:02,805 - Pocetak obrade metode main na liniji 5
INFO  03:58:02,806 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  03:58:02,806 - Deklarisana promenljiva cond na liniji 5
INFO  03:58:02,806 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:58:02,806 - Zavrsetak obrade programa Program na liniji 1
INFO  03:58:02,806 - ======================TABELA_SIMBOLA==========================
INFO  03:58:02,807 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  03:58:02,807 - ==============================================================
INFO  03:58:02,807 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:58:02,807 - ==============================================================
INFO  03:58:02,807 - ======================GENERISANJE_KODA========================
INFO  03:58:02,813 - Generisanje koda uspesno zavrseno!
INFO  03:58:02,814 - Generisanje izlaznog fajla test\program.obj
INFO  03:58:02,814 - ==============================================================
INFO  03:59:06,179 - Obrada ulaznog fajla test\program.mj
INFO  03:59:06,267 - #2 program
INFO  03:59:06,267 - #8 Program
INFO  03:59:06,267 - #5 const
INFO  03:59:06,269 - #8 int
INFO  03:59:06,269 - #8 c
INFO  03:59:06,270 - #24 =
INFO  03:59:06,270 - #9 10
INFO  03:59:06,270 - #28 ,
INFO  03:59:06,271 - #8 d
INFO  03:59:06,271 - #24 =
INFO  03:59:06,271 - #9 99
INFO  03:59:06,272 - #27 ;
INFO  03:59:06,272 - #8 int
INFO  03:59:06,273 - #8 e
INFO  03:59:06,274 - #27 ;
INFO  03:59:06,274 - #20 {
INFO  03:59:06,275 - #6 void
INFO  03:59:06,275 - #8 main
INFO  03:59:06,275 - #29 (
INFO  03:59:06,276 - #30 )
INFO  03:59:06,277 - #8 bool
INFO  03:59:06,277 - #8 cond
INFO  03:59:06,277 - #27 ;
INFO  03:59:06,277 - #20 {
INFO  03:59:06,277 - #8 cond
INFO  03:59:06,277 - #24 =
INFO  03:59:06,278 - #11 true
INFO  03:59:06,278 - #27 ;
INFO  03:59:06,278 - #31 if
INFO  03:59:06,279 - #29 (
INFO  03:59:06,279 - #8 cond
INFO  03:59:06,279 - #30 )
INFO  03:59:06,280 - #20 {
INFO  03:59:06,280 - #3 print
INFO  03:59:06,280 - #29 (
INFO  03:59:06,280 - #8 c
INFO  03:59:06,280 - #30 )
INFO  03:59:06,280 - #27 ;
INFO  03:59:06,280 - #21 }
INFO  03:59:06,280 - #3 print
INFO  03:59:06,281 - #29 (
INFO  03:59:06,281 - #8 d
INFO  03:59:06,281 - #30 )
INFO  03:59:06,281 - #27 ;
INFO  03:59:06,281 - #21 }
INFO  03:59:06,281 - #21 }
INFO  03:59:06,283 - =====================SINTAKSNO_STABLO=========================
INFO  03:59:06,284 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:59:06,285 - ==============================================================
INFO  03:59:06,301 - Pocetak obrade programa Program na liniji 1
INFO  03:59:06,301 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:59:06,303 - Deklarisana konstanta c na liniji 2
INFO  03:59:06,303 - Deklarisana konstanta d na liniji 2
INFO  03:59:06,303 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:59:06,303 - Deklarisana promenljiva e na liniji 3
INFO  03:59:06,304 - Pocetak obrade metode main na liniji 5
INFO  03:59:06,304 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  03:59:06,304 - Deklarisana promenljiva cond na liniji 5
INFO  03:59:06,305 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:59:06,305 - Zavrsetak obrade programa Program na liniji 1
INFO  03:59:06,305 - ======================TABELA_SIMBOLA==========================
INFO  03:59:06,306 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  03:59:06,306 - ==============================================================
INFO  03:59:06,306 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:59:06,306 - ==============================================================
INFO  03:59:06,306 - ======================GENERISANJE_KODA========================
INFO  03:59:06,312 - Generisanje koda uspesno zavrseno!
INFO  03:59:06,312 - Generisanje izlaznog fajla test\program.obj
INFO  03:59:06,312 - ==============================================================
INFO  04:01:08,084 - Obrada ulaznog fajla test\program.mj
INFO  04:01:08,165 - #2 program
INFO  04:01:08,165 - #8 Program
INFO  04:01:08,165 - #5 const
INFO  04:01:08,166 - #8 int
INFO  04:01:08,167 - #8 c
INFO  04:01:08,167 - #24 =
INFO  04:01:08,168 - #9 10
INFO  04:01:08,168 - #28 ,
INFO  04:01:08,169 - #8 d
INFO  04:01:08,170 - #24 =
INFO  04:01:08,170 - #9 99
INFO  04:01:08,170 - #27 ;
INFO  04:01:08,170 - #8 int
INFO  04:01:08,171 - #8 e
INFO  04:01:08,172 - #27 ;
INFO  04:01:08,172 - #20 {
INFO  04:01:08,174 - #6 void
INFO  04:01:08,174 - #8 main
INFO  04:01:08,174 - #29 (
INFO  04:01:08,175 - #30 )
INFO  04:01:08,175 - #8 bool
INFO  04:01:08,175 - #8 cond
INFO  04:01:08,175 - #27 ;
INFO  04:01:08,175 - #20 {
INFO  04:01:08,175 - #8 cond
INFO  04:01:08,176 - #24 =
INFO  04:01:08,176 - #11 true
INFO  04:01:08,176 - #27 ;
INFO  04:01:08,177 - #31 if
INFO  04:01:08,177 - #29 (
INFO  04:01:08,177 - #8 cond
INFO  04:01:08,177 - #30 )
INFO  04:01:08,178 - #20 {
INFO  04:01:08,178 - #3 print
INFO  04:01:08,178 - #29 (
INFO  04:01:08,178 - #8 c
INFO  04:01:08,178 - #30 )
INFO  04:01:08,178 - #27 ;
INFO  04:01:08,178 - #21 }
INFO  04:01:08,178 - #3 print
INFO  04:01:08,179 - #29 (
INFO  04:01:08,179 - #8 d
INFO  04:01:08,179 - #30 )
INFO  04:01:08,179 - #27 ;
INFO  04:01:08,179 - #21 }
INFO  04:01:08,180 - #21 }
INFO  04:01:08,181 - =====================SINTAKSNO_STABLO=========================
INFO  04:01:08,182 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:01:08,183 - ==============================================================
INFO  04:01:08,197 - Pocetak obrade programa Program na liniji 1
INFO  04:01:08,197 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:01:08,198 - Deklarisana konstanta c na liniji 2
INFO  04:01:08,198 - Deklarisana konstanta d na liniji 2
INFO  04:01:08,199 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:01:08,199 - Deklarisana promenljiva e na liniji 3
INFO  04:01:08,199 - Pocetak obrade metode main na liniji 5
INFO  04:01:08,200 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:01:08,200 - Deklarisana promenljiva cond na liniji 5
INFO  04:01:08,201 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:01:08,201 - Zavrsetak obrade programa Program na liniji 1
INFO  04:01:08,201 - ======================TABELA_SIMBOLA==========================
INFO  04:01:08,202 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:01:08,202 - ==============================================================
INFO  04:01:08,202 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:01:08,203 - ==============================================================
INFO  04:01:08,203 - ======================GENERISANJE_KODA========================
INFO  04:01:08,207 - Generisanje koda uspesno zavrseno!
INFO  04:01:08,208 - Generisanje izlaznog fajla test\program.obj
INFO  04:01:08,208 - ==============================================================
INFO  04:02:23,912 - Obrada ulaznog fajla test\program.mj
INFO  04:02:23,990 - #2 program
INFO  04:02:23,990 - #8 Program
INFO  04:02:23,991 - #5 const
INFO  04:02:23,991 - #8 int
INFO  04:02:23,991 - #8 c
INFO  04:02:23,992 - #24 =
INFO  04:02:23,992 - #9 10
INFO  04:02:23,992 - #28 ,
INFO  04:02:23,994 - #8 d
INFO  04:02:23,994 - #24 =
INFO  04:02:23,994 - #9 99
INFO  04:02:23,994 - #27 ;
INFO  04:02:23,994 - #8 int
INFO  04:02:23,995 - #8 e
INFO  04:02:23,996 - #27 ;
INFO  04:02:23,996 - #20 {
INFO  04:02:23,997 - #6 void
INFO  04:02:23,997 - #8 main
INFO  04:02:23,997 - #29 (
INFO  04:02:23,998 - #30 )
INFO  04:02:23,998 - #8 bool
INFO  04:02:23,998 - #8 cond
INFO  04:02:23,998 - #27 ;
INFO  04:02:23,999 - #20 {
INFO  04:02:23,999 - #8 cond
INFO  04:02:23,999 - #24 =
INFO  04:02:23,999 - #11 true
INFO  04:02:23,999 - #27 ;
INFO  04:02:24,000 - #31 if
INFO  04:02:24,001 - #29 (
INFO  04:02:24,001 - #8 cond
INFO  04:02:24,001 - #30 )
INFO  04:02:24,002 - #20 {
INFO  04:02:24,002 - #3 print
INFO  04:02:24,002 - #29 (
INFO  04:02:24,002 - #8 c
INFO  04:02:24,002 - #30 )
INFO  04:02:24,003 - #27 ;
INFO  04:02:24,003 - #21 }
INFO  04:02:24,003 - #3 print
INFO  04:02:24,004 - #29 (
INFO  04:02:24,004 - #8 d
INFO  04:02:24,004 - #30 )
INFO  04:02:24,004 - #27 ;
INFO  04:02:24,004 - #21 }
INFO  04:02:24,005 - #21 }
INFO  04:02:24,006 - =====================SINTAKSNO_STABLO=========================
INFO  04:02:24,007 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:02:24,008 - ==============================================================
INFO  04:02:24,023 - Pocetak obrade programa Program na liniji 1
INFO  04:02:24,024 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:02:24,024 - Deklarisana konstanta c na liniji 2
INFO  04:02:24,025 - Deklarisana konstanta d na liniji 2
INFO  04:02:24,025 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:02:24,025 - Deklarisana promenljiva e na liniji 3
INFO  04:02:24,025 - Pocetak obrade metode main na liniji 5
INFO  04:02:24,026 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:02:24,026 - Deklarisana promenljiva cond na liniji 5
INFO  04:02:24,026 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:02:24,026 - Zavrsetak obrade programa Program na liniji 1
INFO  04:02:24,026 - ======================TABELA_SIMBOLA==========================
INFO  04:02:24,027 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:02:24,027 - ==============================================================
INFO  04:02:24,027 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:02:24,027 - ==============================================================
INFO  04:02:24,027 - ======================GENERISANJE_KODA========================
INFO  04:02:24,032 - Generisanje koda uspesno zavrseno!
INFO  04:02:24,033 - Generisanje izlaznog fajla test\program.obj
INFO  04:02:24,033 - ==============================================================
INFO  04:02:46,404 - Obrada ulaznog fajla test\program.mj
INFO  04:02:46,490 - #2 program
INFO  04:02:46,490 - #8 Program
INFO  04:02:46,490 - #5 const
INFO  04:02:46,491 - #8 int
INFO  04:02:46,491 - #8 c
INFO  04:02:46,492 - #24 =
INFO  04:02:46,492 - #9 10
INFO  04:02:46,492 - #28 ,
INFO  04:02:46,493 - #8 d
INFO  04:02:46,494 - #24 =
INFO  04:02:46,494 - #9 99
INFO  04:02:46,494 - #27 ;
INFO  04:02:46,494 - #8 int
INFO  04:02:46,495 - #8 e
INFO  04:02:46,495 - #27 ;
INFO  04:02:46,495 - #20 {
INFO  04:02:46,496 - #6 void
INFO  04:02:46,497 - #8 main
INFO  04:02:46,497 - #29 (
INFO  04:02:46,497 - #30 )
INFO  04:02:46,498 - #8 bool
INFO  04:02:46,498 - #8 cond
INFO  04:02:46,498 - #27 ;
INFO  04:02:46,498 - #20 {
INFO  04:02:46,499 - #8 cond
INFO  04:02:46,499 - #24 =
INFO  04:02:46,499 - #11 true
INFO  04:02:46,499 - #27 ;
INFO  04:02:46,500 - #31 if
INFO  04:02:46,500 - #29 (
INFO  04:02:46,500 - #8 cond
INFO  04:02:46,500 - #30 )
INFO  04:02:46,501 - #20 {
INFO  04:02:46,501 - #3 print
INFO  04:02:46,501 - #29 (
INFO  04:02:46,501 - #8 c
INFO  04:02:46,501 - #30 )
INFO  04:02:46,501 - #27 ;
INFO  04:02:46,501 - #21 }
INFO  04:02:46,502 - #3 print
INFO  04:02:46,502 - #29 (
INFO  04:02:46,502 - #8 d
INFO  04:02:46,502 - #30 )
INFO  04:02:46,503 - #27 ;
INFO  04:02:46,503 - #21 }
INFO  04:02:46,503 - #21 }
INFO  04:02:46,504 - =====================SINTAKSNO_STABLO=========================
INFO  04:02:46,505 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:02:46,506 - ==============================================================
INFO  04:02:46,524 - Pocetak obrade programa Program na liniji 1
INFO  04:02:46,524 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:02:46,525 - Deklarisana konstanta c na liniji 2
INFO  04:02:46,525 - Deklarisana konstanta d na liniji 2
INFO  04:02:46,525 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:02:46,525 - Deklarisana promenljiva e na liniji 3
INFO  04:02:46,526 - Pocetak obrade metode main na liniji 5
INFO  04:02:46,526 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:02:46,526 - Deklarisana promenljiva cond na liniji 5
INFO  04:02:46,527 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:02:46,527 - Zavrsetak obrade programa Program na liniji 1
INFO  04:02:46,527 - ======================TABELA_SIMBOLA==========================
INFO  04:02:46,527 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:02:46,528 - ==============================================================
INFO  04:02:46,528 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:02:46,528 - ==============================================================
INFO  04:02:46,528 - ======================GENERISANJE_KODA========================
INFO  04:02:46,534 - Generisanje koda uspesno zavrseno!
INFO  04:02:46,534 - Generisanje izlaznog fajla test\program.obj
INFO  04:02:46,534 - ==============================================================
INFO  04:07:06,946 - Obrada ulaznog fajla test\program.mj
INFO  04:07:07,030 - #2 program
INFO  04:07:07,030 - #8 Program
INFO  04:07:07,030 - #5 const
INFO  04:07:07,031 - #8 int
INFO  04:07:07,032 - #8 c
INFO  04:07:07,032 - #24 =
INFO  04:07:07,033 - #9 10
INFO  04:07:07,033 - #28 ,
INFO  04:07:07,034 - #8 d
INFO  04:07:07,034 - #24 =
INFO  04:07:07,034 - #9 99
INFO  04:07:07,034 - #27 ;
INFO  04:07:07,035 - #8 int
INFO  04:07:07,036 - #8 e
INFO  04:07:07,036 - #27 ;
INFO  04:07:07,037 - #20 {
INFO  04:07:07,038 - #6 void
INFO  04:07:07,038 - #8 main
INFO  04:07:07,038 - #29 (
INFO  04:07:07,040 - #30 )
INFO  04:07:07,040 - #8 bool
INFO  04:07:07,040 - #8 cond
INFO  04:07:07,040 - #27 ;
INFO  04:07:07,040 - #20 {
INFO  04:07:07,040 - #8 cond
INFO  04:07:07,040 - #24 =
INFO  04:07:07,041 - #11 true
INFO  04:07:07,041 - #27 ;
INFO  04:07:07,041 - #31 if
INFO  04:07:07,042 - #29 (
INFO  04:07:07,042 - #8 cond
INFO  04:07:07,042 - #30 )
INFO  04:07:07,043 - #20 {
INFO  04:07:07,043 - #3 print
INFO  04:07:07,043 - #29 (
INFO  04:07:07,043 - #8 c
INFO  04:07:07,043 - #30 )
INFO  04:07:07,043 - #27 ;
INFO  04:07:07,043 - #21 }
INFO  04:07:07,043 - #3 print
INFO  04:07:07,044 - #29 (
INFO  04:07:07,044 - #8 d
INFO  04:07:07,044 - #30 )
INFO  04:07:07,044 - #27 ;
INFO  04:07:07,044 - #21 }
INFO  04:07:07,044 - #21 }
INFO  04:07:07,045 - =====================SINTAKSNO_STABLO=========================
INFO  04:07:07,047 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:07:07,048 - ==============================================================
INFO  04:07:07,063 - Pocetak obrade programa Program na liniji 1
INFO  04:07:07,064 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:07:07,065 - Deklarisana konstanta c na liniji 2
INFO  04:07:07,065 - Deklarisana konstanta d na liniji 2
INFO  04:07:07,065 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:07:07,065 - Deklarisana promenljiva e na liniji 3
INFO  04:07:07,066 - Pocetak obrade metode main na liniji 5
INFO  04:07:07,066 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:07:07,066 - Deklarisana promenljiva cond na liniji 5
INFO  04:07:07,067 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:07:07,067 - Zavrsetak obrade programa Program na liniji 1
INFO  04:07:07,067 - ======================TABELA_SIMBOLA==========================
INFO  04:07:07,068 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:07:07,069 - ==============================================================
INFO  04:07:07,069 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:07:07,069 - ==============================================================
INFO  04:07:07,069 - ======================GENERISANJE_KODA========================
INFO  04:07:07,074 - Generisanje koda uspesno zavrseno!
INFO  04:07:07,074 - Generisanje izlaznog fajla test\program.obj
INFO  04:07:07,074 - ==============================================================
INFO  04:07:52,373 - Obrada ulaznog fajla test\program.mj
INFO  04:07:52,465 - #2 program
INFO  04:07:52,465 - #8 Program
INFO  04:07:52,466 - #5 const
INFO  04:07:52,467 - #8 int
INFO  04:07:52,468 - #8 c
INFO  04:07:52,468 - #24 =
INFO  04:07:52,468 - #9 10
INFO  04:07:52,469 - #28 ,
INFO  04:07:52,471 - #8 d
INFO  04:07:52,471 - #24 =
INFO  04:07:52,472 - #9 99
INFO  04:07:52,472 - #27 ;
INFO  04:07:52,472 - #8 int
INFO  04:07:52,474 - #8 e
INFO  04:07:52,474 - #27 ;
INFO  04:07:52,475 - #20 {
INFO  04:07:52,476 - #6 void
INFO  04:07:52,476 - #8 main
INFO  04:07:52,476 - #29 (
INFO  04:07:52,478 - #30 )
INFO  04:07:52,478 - #8 bool
INFO  04:07:52,479 - #8 cond
INFO  04:07:52,479 - #27 ;
INFO  04:07:52,479 - #20 {
INFO  04:07:52,479 - #8 cond
INFO  04:07:52,479 - #24 =
INFO  04:07:52,480 - #11 true
INFO  04:07:52,480 - #27 ;
INFO  04:07:52,481 - #31 if
INFO  04:07:52,481 - #29 (
INFO  04:07:52,481 - #8 cond
INFO  04:07:52,481 - #30 )
INFO  04:07:52,482 - #20 {
INFO  04:07:52,482 - #3 print
INFO  04:07:52,482 - #29 (
INFO  04:07:52,482 - #8 c
INFO  04:07:52,482 - #30 )
INFO  04:07:52,482 - #27 ;
INFO  04:07:52,483 - #21 }
INFO  04:07:52,483 - #3 print
INFO  04:07:52,483 - #29 (
INFO  04:07:52,483 - #8 d
INFO  04:07:52,483 - #30 )
INFO  04:07:52,483 - #27 ;
INFO  04:07:52,483 - #21 }
INFO  04:07:52,484 - #21 }
INFO  04:07:52,485 - =====================SINTAKSNO_STABLO=========================
INFO  04:07:52,486 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:07:52,487 - ==============================================================
INFO  04:07:52,500 - Pocetak obrade programa Program na liniji 1
INFO  04:07:52,500 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:07:52,501 - Deklarisana konstanta c na liniji 2
INFO  04:07:52,501 - Deklarisana konstanta d na liniji 2
INFO  04:07:52,501 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:07:52,501 - Deklarisana promenljiva e na liniji 3
INFO  04:07:52,502 - Pocetak obrade metode main na liniji 5
INFO  04:07:52,502 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:07:52,502 - Deklarisana promenljiva cond na liniji 5
INFO  04:07:52,503 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:07:52,503 - Zavrsetak obrade programa Program na liniji 1
INFO  04:07:52,503 - ======================TABELA_SIMBOLA==========================
INFO  04:07:52,504 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:07:52,504 - ==============================================================
INFO  04:07:52,504 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:07:52,504 - ==============================================================
INFO  04:07:52,504 - ======================GENERISANJE_KODA========================
INFO  04:07:52,509 - Generisanje koda uspesno zavrseno!
INFO  04:07:52,510 - Generisanje izlaznog fajla test\program.obj
INFO  04:07:52,510 - ==============================================================
INFO  04:08:35,748 - Obrada ulaznog fajla test\program.mj
INFO  04:08:35,833 - #2 program
INFO  04:08:35,833 - #8 Program
INFO  04:08:35,833 - #5 const
INFO  04:08:35,834 - #8 int
INFO  04:08:35,834 - #8 c
INFO  04:08:35,835 - #24 =
INFO  04:08:35,835 - #9 10
INFO  04:08:35,835 - #28 ,
INFO  04:08:35,837 - #8 d
INFO  04:08:35,837 - #24 =
INFO  04:08:35,837 - #9 99
INFO  04:08:35,837 - #27 ;
INFO  04:08:35,837 - #8 int
INFO  04:08:35,839 - #8 e
INFO  04:08:35,839 - #27 ;
INFO  04:08:35,839 - #20 {
INFO  04:08:35,841 - #6 void
INFO  04:08:35,841 - #8 main
INFO  04:08:35,841 - #29 (
INFO  04:08:35,842 - #30 )
INFO  04:08:35,842 - #8 bool
INFO  04:08:35,842 - #8 cond
INFO  04:08:35,842 - #27 ;
INFO  04:08:35,842 - #20 {
INFO  04:08:35,842 - #8 cond
INFO  04:08:35,843 - #24 =
INFO  04:08:35,843 - #11 true
INFO  04:08:35,843 - #27 ;
INFO  04:08:35,844 - #31 if
INFO  04:08:35,844 - #29 (
INFO  04:08:35,844 - #8 cond
INFO  04:08:35,844 - #30 )
INFO  04:08:35,845 - #20 {
INFO  04:08:35,845 - #3 print
INFO  04:08:35,845 - #29 (
INFO  04:08:35,845 - #8 c
INFO  04:08:35,845 - #30 )
INFO  04:08:35,845 - #27 ;
INFO  04:08:35,845 - #21 }
INFO  04:08:35,845 - #3 print
INFO  04:08:35,846 - #29 (
INFO  04:08:35,846 - #8 d
INFO  04:08:35,846 - #30 )
INFO  04:08:35,846 - #27 ;
INFO  04:08:35,846 - #21 }
INFO  04:08:35,847 - #21 }
INFO  04:08:35,848 - =====================SINTAKSNO_STABLO=========================
INFO  04:08:35,851 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:08:35,852 - ==============================================================
INFO  04:08:35,872 - Pocetak obrade programa Program na liniji 1
INFO  04:08:35,872 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:08:35,875 - Deklarisana konstanta c na liniji 2
INFO  04:08:35,875 - Deklarisana konstanta d na liniji 2
INFO  04:08:35,875 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:08:35,875 - Deklarisana promenljiva e na liniji 3
INFO  04:08:35,876 - Pocetak obrade metode main na liniji 5
INFO  04:08:35,876 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:08:35,876 - Deklarisana promenljiva cond na liniji 5
INFO  04:08:35,877 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:08:35,877 - Zavrsetak obrade programa Program na liniji 1
INFO  04:08:35,877 - ======================TABELA_SIMBOLA==========================
INFO  04:08:35,878 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:08:35,878 - ==============================================================
INFO  04:08:35,878 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:08:35,878 - ==============================================================
INFO  04:08:35,879 - ======================GENERISANJE_KODA========================
INFO  04:08:35,886 - Generisanje koda uspesno zavrseno!
INFO  04:08:35,887 - Generisanje izlaznog fajla test\program.obj
INFO  04:08:35,887 - ==============================================================
INFO  04:11:38,021 - Obrada ulaznog fajla test\program.mj
INFO  04:11:38,098 - #2 program
INFO  04:11:38,098 - #8 Program
INFO  04:11:38,098 - #5 const
INFO  04:11:38,099 - #8 int
INFO  04:11:38,099 - #8 c
INFO  04:11:38,100 - #24 =
INFO  04:11:38,100 - #9 10
INFO  04:11:38,100 - #28 ,
INFO  04:11:38,101 - #8 d
INFO  04:11:38,102 - #24 =
INFO  04:11:38,102 - #9 99
INFO  04:11:38,102 - #27 ;
INFO  04:11:38,102 - #8 int
INFO  04:11:38,105 - #8 e
INFO  04:11:38,105 - #27 ;
INFO  04:11:38,105 - #20 {
INFO  04:11:38,106 - #6 void
INFO  04:11:38,106 - #8 main
INFO  04:11:38,107 - #29 (
INFO  04:11:38,107 - #30 )
INFO  04:11:38,107 - #8 bool
INFO  04:11:38,107 - #8 cond
INFO  04:11:38,108 - #27 ;
INFO  04:11:38,108 - #20 {
INFO  04:11:38,108 - #8 cond
INFO  04:11:38,108 - #24 =
INFO  04:11:38,108 - #11 true
INFO  04:11:38,108 - #27 ;
INFO  04:11:38,109 - #31 if
INFO  04:11:38,110 - #29 (
INFO  04:11:38,110 - #8 cond
INFO  04:11:38,110 - #30 )
INFO  04:11:38,110 - #20 {
INFO  04:11:38,110 - #3 print
INFO  04:11:38,110 - #29 (
INFO  04:11:38,110 - #8 c
INFO  04:11:38,111 - #30 )
INFO  04:11:38,111 - #27 ;
INFO  04:11:38,111 - #21 }
INFO  04:11:38,111 - #3 print
INFO  04:11:38,111 - #29 (
INFO  04:11:38,111 - #8 d
INFO  04:11:38,111 - #30 )
INFO  04:11:38,112 - #27 ;
INFO  04:11:38,112 - #21 }
INFO  04:11:38,112 - #21 }
INFO  04:11:38,113 - =====================SINTAKSNO_STABLO=========================
INFO  04:11:38,114 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:11:38,115 - ==============================================================
INFO  04:11:38,128 - Pocetak obrade programa Program na liniji 1
INFO  04:11:38,129 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:11:38,130 - Deklarisana konstanta c na liniji 2
INFO  04:11:38,130 - Deklarisana konstanta d na liniji 2
INFO  04:11:38,130 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:11:38,130 - Deklarisana promenljiva e na liniji 3
INFO  04:11:38,131 - Pocetak obrade metode main na liniji 5
INFO  04:11:38,131 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:11:38,131 - Deklarisana promenljiva cond na liniji 5
INFO  04:11:38,132 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:11:38,132 - Zavrsetak obrade programa Program na liniji 1
INFO  04:11:38,132 - ======================TABELA_SIMBOLA==========================
INFO  04:11:38,132 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:11:38,133 - ==============================================================
INFO  04:11:38,133 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:11:38,133 - ==============================================================
INFO  04:11:38,133 - ======================GENERISANJE_KODA========================
INFO  04:11:38,138 - Generisanje koda uspesno zavrseno!
INFO  04:11:38,139 - Generisanje izlaznog fajla test\program.obj
INFO  04:11:38,139 - ==============================================================
INFO  04:12:54,613 - Obrada ulaznog fajla test\program.mj
INFO  04:12:54,696 - #2 program
INFO  04:12:54,696 - #8 Program
INFO  04:12:54,696 - #5 const
INFO  04:12:54,697 - #8 int
INFO  04:12:54,697 - #8 c
INFO  04:12:54,699 - #24 =
INFO  04:12:54,699 - #9 10
INFO  04:12:54,699 - #28 ,
INFO  04:12:54,701 - #8 d
INFO  04:12:54,702 - #24 =
INFO  04:12:54,702 - #9 99
INFO  04:12:54,702 - #27 ;
INFO  04:12:54,702 - #8 int
INFO  04:12:54,704 - #8 e
INFO  04:12:54,704 - #27 ;
INFO  04:12:54,704 - #20 {
INFO  04:12:54,705 - #6 void
INFO  04:12:54,705 - #8 main
INFO  04:12:54,705 - #29 (
INFO  04:12:54,706 - #30 )
INFO  04:12:54,706 - #8 bool
INFO  04:12:54,706 - #8 cond
INFO  04:12:54,706 - #27 ;
INFO  04:12:54,706 - #20 {
INFO  04:12:54,707 - #8 cond
INFO  04:12:54,707 - #24 =
INFO  04:12:54,707 - #11 true
INFO  04:12:54,707 - #27 ;
INFO  04:12:54,708 - #31 if
INFO  04:12:54,708 - #29 (
INFO  04:12:54,708 - #8 cond
INFO  04:12:54,708 - #30 )
INFO  04:12:54,709 - #20 {
INFO  04:12:54,709 - #3 print
INFO  04:12:54,709 - #29 (
INFO  04:12:54,709 - #8 c
INFO  04:12:54,709 - #30 )
INFO  04:12:54,709 - #27 ;
INFO  04:12:54,710 - #21 }
INFO  04:12:54,710 - #3 print
INFO  04:12:54,710 - #29 (
INFO  04:12:54,710 - #8 d
INFO  04:12:54,710 - #30 )
INFO  04:12:54,710 - #27 ;
INFO  04:12:54,710 - #21 }
INFO  04:12:54,711 - #21 }
INFO  04:12:54,711 - =====================SINTAKSNO_STABLO=========================
INFO  04:12:54,713 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:12:54,714 - ==============================================================
INFO  04:12:54,728 - Pocetak obrade programa Program na liniji 1
INFO  04:12:54,728 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:12:54,729 - Deklarisana konstanta c na liniji 2
INFO  04:12:54,729 - Deklarisana konstanta d na liniji 2
INFO  04:12:54,729 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:12:54,730 - Deklarisana promenljiva e na liniji 3
INFO  04:12:54,731 - Pocetak obrade metode main na liniji 5
INFO  04:12:54,731 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:12:54,731 - Deklarisana promenljiva cond na liniji 5
INFO  04:12:54,732 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:12:54,732 - Zavrsetak obrade programa Program na liniji 1
INFO  04:12:54,732 - ======================TABELA_SIMBOLA==========================
INFO  04:12:54,733 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:12:54,733 - ==============================================================
INFO  04:12:54,733 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:12:54,733 - ==============================================================
INFO  04:12:54,733 - ======================GENERISANJE_KODA========================
INFO  04:12:54,738 - Generisanje koda uspesno zavrseno!
INFO  04:12:54,738 - Generisanje izlaznog fajla test\program.obj
INFO  04:12:54,738 - ==============================================================
INFO  04:13:45,743 - Obrada ulaznog fajla test\program.mj
INFO  04:13:45,820 - #2 program
INFO  04:13:45,820 - #8 Program
INFO  04:13:45,820 - #5 const
INFO  04:13:45,821 - #8 int
INFO  04:13:45,821 - #8 c
INFO  04:13:45,822 - #24 =
INFO  04:13:45,822 - #9 10
INFO  04:13:45,822 - #28 ,
INFO  04:13:45,823 - #8 d
INFO  04:13:45,823 - #24 =
INFO  04:13:45,823 - #9 99
INFO  04:13:45,824 - #27 ;
INFO  04:13:45,824 - #8 int
INFO  04:13:45,825 - #8 e
INFO  04:13:45,825 - #27 ;
INFO  04:13:45,825 - #20 {
INFO  04:13:45,826 - #6 void
INFO  04:13:45,826 - #8 main
INFO  04:13:45,827 - #29 (
INFO  04:13:45,827 - #30 )
INFO  04:13:45,827 - #8 bool
INFO  04:13:45,828 - #8 cond
INFO  04:13:45,828 - #27 ;
INFO  04:13:45,828 - #20 {
INFO  04:13:45,828 - #8 cond
INFO  04:13:45,828 - #24 =
INFO  04:13:45,828 - #11 true
INFO  04:13:45,829 - #27 ;
INFO  04:13:45,829 - #31 if
INFO  04:13:45,830 - #29 (
INFO  04:13:45,830 - #8 cond
INFO  04:13:45,830 - #30 )
INFO  04:13:45,830 - #20 {
INFO  04:13:45,830 - #3 print
INFO  04:13:45,831 - #29 (
INFO  04:13:45,831 - #8 c
INFO  04:13:45,831 - #30 )
INFO  04:13:45,831 - #27 ;
INFO  04:13:45,831 - #21 }
INFO  04:13:45,831 - #3 print
INFO  04:13:45,832 - #29 (
INFO  04:13:45,832 - #8 d
INFO  04:13:45,832 - #30 )
INFO  04:13:45,832 - #27 ;
INFO  04:13:45,832 - #21 }
INFO  04:13:45,832 - #21 }
INFO  04:13:45,833 - =====================SINTAKSNO_STABLO=========================
INFO  04:13:45,835 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:13:45,836 - ==============================================================
INFO  04:13:45,849 - Pocetak obrade programa Program na liniji 1
INFO  04:13:45,849 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:13:45,851 - Deklarisana konstanta c na liniji 2
INFO  04:13:45,851 - Deklarisana konstanta d na liniji 2
INFO  04:13:45,851 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:13:45,851 - Deklarisana promenljiva e na liniji 3
INFO  04:13:45,852 - Pocetak obrade metode main na liniji 5
INFO  04:13:45,852 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:13:45,852 - Deklarisana promenljiva cond na liniji 5
INFO  04:13:45,853 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:13:45,853 - Zavrsetak obrade programa Program na liniji 1
INFO  04:13:45,853 - ======================TABELA_SIMBOLA==========================
INFO  04:13:45,854 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:13:45,854 - ==============================================================
INFO  04:13:45,854 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:13:45,854 - ==============================================================
INFO  04:13:45,854 - ======================GENERISANJE_KODA========================
INFO  04:13:45,860 - Generisanje koda uspesno zavrseno!
INFO  04:13:45,860 - Generisanje izlaznog fajla test\program.obj
INFO  04:13:45,860 - ==============================================================
INFO  04:18:53,692 - Obrada ulaznog fajla test\program.mj
INFO  04:18:53,774 - #2 program
INFO  04:18:53,774 - #8 Program
INFO  04:18:53,774 - #5 const
INFO  04:18:53,775 - #8 int
INFO  04:18:53,775 - #8 c
INFO  04:18:53,776 - #24 =
INFO  04:18:53,776 - #9 10
INFO  04:18:53,776 - #28 ,
INFO  04:18:53,777 - #8 d
INFO  04:18:53,777 - #24 =
INFO  04:18:53,777 - #9 99
INFO  04:18:53,778 - #27 ;
INFO  04:18:53,778 - #8 int
INFO  04:18:53,779 - #8 e
INFO  04:18:53,779 - #27 ;
INFO  04:18:53,780 - #20 {
INFO  04:18:53,781 - #6 void
INFO  04:18:53,781 - #8 main
INFO  04:18:53,781 - #29 (
INFO  04:18:53,782 - #30 )
INFO  04:18:53,783 - #8 bool
INFO  04:18:53,783 - #8 cond
INFO  04:18:53,783 - #27 ;
INFO  04:18:53,783 - #20 {
INFO  04:18:53,784 - #8 cond
INFO  04:18:53,784 - #24 =
INFO  04:18:53,784 - #11 true
INFO  04:18:53,784 - #27 ;
INFO  04:18:53,785 - #31 if
INFO  04:18:53,785 - #29 (
INFO  04:18:53,785 - #8 cond
INFO  04:18:53,785 - #30 )
INFO  04:18:53,786 - #20 {
INFO  04:18:53,786 - #3 print
INFO  04:18:53,786 - #29 (
INFO  04:18:53,786 - #8 c
INFO  04:18:53,786 - #30 )
INFO  04:18:53,786 - #27 ;
INFO  04:18:53,787 - #21 }
INFO  04:18:53,787 - #3 print
INFO  04:18:53,787 - #29 (
INFO  04:18:53,787 - #8 d
INFO  04:18:53,787 - #30 )
INFO  04:18:53,787 - #27 ;
INFO  04:18:53,788 - #21 }
INFO  04:18:53,788 - #21 }
INFO  04:18:53,789 - =====================SINTAKSNO_STABLO=========================
INFO  04:18:53,790 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:18:53,791 - ==============================================================
INFO  04:18:53,807 - Pocetak obrade programa Program na liniji 1
INFO  04:18:53,807 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:18:53,808 - Deklarisana konstanta c na liniji 2
INFO  04:18:53,808 - Deklarisana konstanta d na liniji 2
INFO  04:18:53,809 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:18:53,809 - Deklarisana promenljiva e na liniji 3
INFO  04:18:53,809 - Pocetak obrade metode main na liniji 5
INFO  04:18:53,809 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:18:53,810 - Deklarisana promenljiva cond na liniji 5
INFO  04:18:53,810 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:18:53,810 - Zavrsetak obrade programa Program na liniji 1
INFO  04:18:53,810 - ======================TABELA_SIMBOLA==========================
INFO  04:18:53,811 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:18:53,811 - ==============================================================
INFO  04:18:53,811 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:18:53,811 - ==============================================================
INFO  04:18:53,811 - ======================GENERISANJE_KODA========================
INFO  04:18:53,817 - Generisanje koda uspesno zavrseno!
INFO  04:18:53,817 - Generisanje izlaznog fajla test\program.obj
INFO  04:18:53,817 - ==============================================================
INFO  04:20:32,170 - Obrada ulaznog fajla test\program.mj
INFO  04:20:32,254 - #2 program
INFO  04:20:32,255 - #8 Program
INFO  04:20:32,255 - #5 const
INFO  04:20:32,256 - #8 int
INFO  04:20:32,256 - #8 c
INFO  04:20:32,257 - #24 =
INFO  04:20:32,257 - #9 10
INFO  04:20:32,257 - #28 ,
INFO  04:20:32,258 - #8 d
INFO  04:20:32,258 - #24 =
INFO  04:20:32,258 - #9 99
INFO  04:20:32,259 - #27 ;
INFO  04:20:32,259 - #8 int
INFO  04:20:32,260 - #8 e
INFO  04:20:32,260 - #27 ;
INFO  04:20:32,261 - #20 {
INFO  04:20:32,262 - #6 void
INFO  04:20:32,262 - #8 main
INFO  04:20:32,262 - #29 (
INFO  04:20:32,263 - #30 )
INFO  04:20:32,263 - #8 bool
INFO  04:20:32,264 - #8 cond
INFO  04:20:32,264 - #27 ;
INFO  04:20:32,264 - #20 {
INFO  04:20:32,265 - #8 cond
INFO  04:20:32,265 - #24 =
INFO  04:20:32,265 - #11 true
INFO  04:20:32,265 - #27 ;
INFO  04:20:32,266 - #31 if
INFO  04:20:32,267 - #29 (
INFO  04:20:32,267 - #8 cond
INFO  04:20:32,267 - #30 )
INFO  04:20:32,268 - #20 {
INFO  04:20:32,268 - #3 print
INFO  04:20:32,268 - #29 (
INFO  04:20:32,268 - #8 c
INFO  04:20:32,268 - #30 )
INFO  04:20:32,268 - #27 ;
INFO  04:20:32,268 - #21 }
INFO  04:20:32,268 - #3 print
INFO  04:20:32,269 - #29 (
INFO  04:20:32,269 - #8 d
INFO  04:20:32,269 - #30 )
INFO  04:20:32,269 - #27 ;
INFO  04:20:32,269 - #21 }
INFO  04:20:32,269 - #21 }
INFO  04:20:32,270 - =====================SINTAKSNO_STABLO=========================
INFO  04:20:32,272 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:20:32,274 - ==============================================================
INFO  04:20:32,290 - Pocetak obrade programa Program na liniji 1
INFO  04:20:32,290 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:20:32,291 - Deklarisana konstanta c na liniji 2
INFO  04:20:32,292 - Deklarisana konstanta d na liniji 2
INFO  04:20:32,292 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:20:32,292 - Deklarisana promenljiva e na liniji 3
INFO  04:20:32,293 - Pocetak obrade metode main na liniji 5
INFO  04:20:32,293 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:20:32,293 - Deklarisana promenljiva cond na liniji 5
INFO  04:20:32,295 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:20:32,295 - Zavrsetak obrade programa Program na liniji 1
INFO  04:20:32,295 - ======================TABELA_SIMBOLA==========================
INFO  04:20:32,296 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:20:32,296 - ==============================================================
INFO  04:20:32,296 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:20:32,296 - ==============================================================
INFO  04:20:32,296 - ======================GENERISANJE_KODA========================
INFO  04:20:32,303 - Generisanje koda uspesno zavrseno!
INFO  04:20:32,304 - Generisanje izlaznog fajla test\program.obj
INFO  04:20:32,304 - ==============================================================
INFO  04:21:04,632 - Obrada ulaznog fajla test\program.mj
INFO  04:21:04,712 - #2 program
INFO  04:21:04,713 - #8 Program
INFO  04:21:04,713 - #5 const
INFO  04:21:04,715 - #8 int
INFO  04:21:04,715 - #8 c
INFO  04:21:04,716 - #24 =
INFO  04:21:04,716 - #9 10
INFO  04:21:04,716 - #28 ,
INFO  04:21:04,717 - #8 d
INFO  04:21:04,717 - #24 =
INFO  04:21:04,717 - #9 99
INFO  04:21:04,717 - #27 ;
INFO  04:21:04,718 - #8 int
INFO  04:21:04,719 - #8 e
INFO  04:21:04,719 - #27 ;
INFO  04:21:04,719 - #20 {
INFO  04:21:04,720 - #6 void
INFO  04:21:04,721 - #8 main
INFO  04:21:04,721 - #29 (
INFO  04:21:04,722 - #30 )
INFO  04:21:04,722 - #8 bool
INFO  04:21:04,722 - #8 cond
INFO  04:21:04,722 - #27 ;
INFO  04:21:04,722 - #20 {
INFO  04:21:04,722 - #8 cond
INFO  04:21:04,722 - #24 =
INFO  04:21:04,723 - #11 true
INFO  04:21:04,723 - #27 ;
INFO  04:21:04,724 - #31 if
INFO  04:21:04,724 - #29 (
INFO  04:21:04,724 - #8 cond
INFO  04:21:04,724 - #30 )
INFO  04:21:04,725 - #20 {
INFO  04:21:04,725 - #3 print
INFO  04:21:04,725 - #29 (
INFO  04:21:04,725 - #8 c
INFO  04:21:04,725 - #30 )
INFO  04:21:04,725 - #27 ;
INFO  04:21:04,725 - #21 }
INFO  04:21:04,726 - #3 print
INFO  04:21:04,726 - #29 (
INFO  04:21:04,726 - #8 d
INFO  04:21:04,726 - #30 )
INFO  04:21:04,726 - #27 ;
INFO  04:21:04,726 - #21 }
INFO  04:21:04,727 - #21 }
INFO  04:21:04,728 - =====================SINTAKSNO_STABLO=========================
INFO  04:21:04,730 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:21:04,731 - ==============================================================
INFO  04:21:04,742 - Pocetak obrade programa Program na liniji 1
INFO  04:21:04,742 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:21:04,744 - Deklarisana konstanta c na liniji 2
INFO  04:21:04,744 - Deklarisana konstanta d na liniji 2
INFO  04:21:04,744 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:21:04,744 - Deklarisana promenljiva e na liniji 3
INFO  04:21:04,745 - Pocetak obrade metode main na liniji 5
INFO  04:21:04,746 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:21:04,746 - Deklarisana promenljiva cond na liniji 5
INFO  04:21:04,746 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:21:04,746 - Zavrsetak obrade programa Program na liniji 1
INFO  04:21:04,746 - ======================TABELA_SIMBOLA==========================
INFO  04:21:04,747 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:21:04,747 - ==============================================================
INFO  04:21:04,748 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:21:04,748 - ==============================================================
INFO  04:21:04,748 - ======================GENERISANJE_KODA========================
INFO  04:21:04,754 - Generisanje koda uspesno zavrseno!
INFO  04:21:04,754 - Generisanje izlaznog fajla test\program.obj
INFO  04:21:04,754 - ==============================================================
INFO  04:21:26,951 - Obrada ulaznog fajla test\program.mj
INFO  04:21:27,035 - #2 program
INFO  04:21:27,035 - #8 Program
INFO  04:21:27,036 - #5 const
INFO  04:21:27,037 - #8 int
INFO  04:21:27,037 - #8 c
INFO  04:21:27,038 - #24 =
INFO  04:21:27,038 - #9 10
INFO  04:21:27,038 - #28 ,
INFO  04:21:27,039 - #8 d
INFO  04:21:27,039 - #24 =
INFO  04:21:27,039 - #9 99
INFO  04:21:27,039 - #27 ;
INFO  04:21:27,040 - #8 int
INFO  04:21:27,041 - #8 e
INFO  04:21:27,041 - #27 ;
INFO  04:21:27,042 - #20 {
INFO  04:21:27,043 - #6 void
INFO  04:21:27,043 - #8 main
INFO  04:21:27,043 - #29 (
INFO  04:21:27,044 - #30 )
INFO  04:21:27,044 - #8 bool
INFO  04:21:27,044 - #8 cond
INFO  04:21:27,045 - #27 ;
INFO  04:21:27,045 - #20 {
INFO  04:21:27,045 - #8 cond
INFO  04:21:27,045 - #24 =
INFO  04:21:27,045 - #11 true
INFO  04:21:27,045 - #27 ;
INFO  04:21:27,046 - #31 if
INFO  04:21:27,046 - #29 (
INFO  04:21:27,046 - #8 cond
INFO  04:21:27,047 - #30 )
INFO  04:21:27,047 - #20 {
INFO  04:21:27,047 - #3 print
INFO  04:21:27,047 - #29 (
INFO  04:21:27,047 - #8 c
INFO  04:21:27,047 - #30 )
INFO  04:21:27,047 - #27 ;
INFO  04:21:27,048 - #21 }
INFO  04:21:27,048 - #3 print
INFO  04:21:27,048 - #29 (
INFO  04:21:27,048 - #8 d
INFO  04:21:27,048 - #30 )
INFO  04:21:27,048 - #27 ;
INFO  04:21:27,048 - #21 }
INFO  04:21:27,049 - #21 }
INFO  04:21:27,050 - =====================SINTAKSNO_STABLO=========================
INFO  04:21:27,051 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:21:27,052 - ==============================================================
INFO  04:21:27,068 - Pocetak obrade programa Program na liniji 1
INFO  04:21:27,068 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:21:27,070 - Deklarisana konstanta c na liniji 2
INFO  04:21:27,070 - Deklarisana konstanta d na liniji 2
INFO  04:21:27,070 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:21:27,070 - Deklarisana promenljiva e na liniji 3
INFO  04:21:27,071 - Pocetak obrade metode main na liniji 5
INFO  04:21:27,071 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:21:27,071 - Deklarisana promenljiva cond na liniji 5
INFO  04:21:27,072 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:21:27,072 - Zavrsetak obrade programa Program na liniji 1
INFO  04:21:27,072 - ======================TABELA_SIMBOLA==========================
INFO  04:21:27,073 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:21:27,073 - ==============================================================
INFO  04:21:27,073 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:21:27,073 - ==============================================================
INFO  04:21:27,073 - ======================GENERISANJE_KODA========================
INFO  04:21:27,081 - Generisanje koda uspesno zavrseno!
INFO  04:21:27,081 - Generisanje izlaznog fajla test\program.obj
INFO  04:21:27,081 - ==============================================================
INFO  04:21:38,155 - Obrada ulaznog fajla test\program.mj
INFO  04:21:38,295 - #2 program
INFO  04:21:38,295 - #8 Program
INFO  04:21:38,295 - #5 const
INFO  04:21:38,296 - #8 int
INFO  04:21:38,296 - #8 c
INFO  04:21:38,298 - #24 =
INFO  04:21:38,298 - #9 10
INFO  04:21:38,298 - #28 ,
INFO  04:21:38,300 - #8 d
INFO  04:21:38,300 - #24 =
INFO  04:21:38,300 - #9 99
INFO  04:21:38,301 - #27 ;
INFO  04:21:38,301 - #8 int
INFO  04:21:38,302 - #8 e
INFO  04:21:38,302 - #27 ;
INFO  04:21:38,303 - #20 {
INFO  04:21:38,304 - #6 void
INFO  04:21:38,304 - #8 main
INFO  04:21:38,304 - #29 (
INFO  04:21:38,305 - #30 )
INFO  04:21:38,305 - #8 bool
INFO  04:21:38,305 - #8 cond
INFO  04:21:38,305 - #27 ;
INFO  04:21:38,306 - #20 {
INFO  04:21:38,306 - #8 cond
INFO  04:21:38,306 - #24 =
INFO  04:21:38,307 - #11 true
INFO  04:21:38,307 - #27 ;
INFO  04:21:38,307 - #31 if
INFO  04:21:38,308 - #29 (
INFO  04:21:38,308 - #8 cond
INFO  04:21:38,308 - #30 )
INFO  04:21:38,309 - #20 {
INFO  04:21:38,309 - #3 print
INFO  04:21:38,309 - #29 (
INFO  04:21:38,309 - #8 c
INFO  04:21:38,309 - #30 )
INFO  04:21:38,309 - #27 ;
INFO  04:21:38,310 - #21 }
INFO  04:21:38,310 - #3 print
INFO  04:21:38,310 - #29 (
INFO  04:21:38,310 - #8 d
INFO  04:21:38,310 - #30 )
INFO  04:21:38,310 - #27 ;
INFO  04:21:38,311 - #21 }
INFO  04:21:38,311 - #21 }
INFO  04:21:38,312 - =====================SINTAKSNO_STABLO=========================
INFO  04:21:38,313 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:21:38,314 - ==============================================================
INFO  04:21:38,332 - Pocetak obrade programa Program na liniji 1
INFO  04:21:38,333 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:21:38,334 - Deklarisana konstanta c na liniji 2
INFO  04:21:38,334 - Deklarisana konstanta d na liniji 2
INFO  04:21:38,334 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:21:38,334 - Deklarisana promenljiva e na liniji 3
INFO  04:21:38,335 - Pocetak obrade metode main na liniji 5
INFO  04:21:38,335 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:21:38,336 - Deklarisana promenljiva cond na liniji 5
INFO  04:21:38,336 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:21:38,336 - Zavrsetak obrade programa Program na liniji 1
INFO  04:21:38,336 - ======================TABELA_SIMBOLA==========================
INFO  04:21:38,337 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:21:38,337 - ==============================================================
INFO  04:21:38,337 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:21:38,338 - ==============================================================
INFO  04:21:38,338 - ======================GENERISANJE_KODA========================
INFO  04:22:27,438 - Obrada ulaznog fajla test\program.mj
INFO  04:22:27,517 - #2 program
INFO  04:22:27,517 - #8 Program
INFO  04:22:27,517 - #5 const
INFO  04:22:27,518 - #8 int
INFO  04:22:27,518 - #8 c
INFO  04:22:27,519 - #24 =
INFO  04:22:27,520 - #9 10
INFO  04:22:27,520 - #28 ,
INFO  04:22:27,521 - #8 d
INFO  04:22:27,521 - #24 =
INFO  04:22:27,521 - #9 99
INFO  04:22:27,521 - #27 ;
INFO  04:22:27,522 - #8 int
INFO  04:22:27,523 - #8 e
INFO  04:22:27,523 - #27 ;
INFO  04:22:27,523 - #20 {
INFO  04:22:27,524 - #6 void
INFO  04:22:27,524 - #8 main
INFO  04:22:27,524 - #29 (
INFO  04:22:27,525 - #30 )
INFO  04:22:27,525 - #8 bool
INFO  04:22:27,526 - #8 cond
INFO  04:22:27,526 - #27 ;
INFO  04:22:27,526 - #20 {
INFO  04:22:27,526 - #8 cond
INFO  04:22:27,526 - #24 =
INFO  04:22:27,526 - #11 true
INFO  04:22:27,526 - #27 ;
INFO  04:22:27,527 - #31 if
INFO  04:22:27,527 - #29 (
INFO  04:22:27,528 - #8 cond
INFO  04:22:27,528 - #30 )
INFO  04:22:27,528 - #20 {
INFO  04:22:27,528 - #3 print
INFO  04:22:27,528 - #29 (
INFO  04:22:27,528 - #8 c
INFO  04:22:27,528 - #30 )
INFO  04:22:27,528 - #27 ;
INFO  04:22:27,529 - #21 }
INFO  04:22:27,529 - #3 print
INFO  04:22:27,529 - #29 (
INFO  04:22:27,529 - #8 d
INFO  04:22:27,529 - #30 )
INFO  04:22:27,529 - #27 ;
INFO  04:22:27,529 - #21 }
INFO  04:22:27,530 - #21 }
INFO  04:22:27,530 - =====================SINTAKSNO_STABLO=========================
INFO  04:22:27,532 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:22:27,533 - ==============================================================
INFO  04:22:27,550 - Pocetak obrade programa Program na liniji 1
INFO  04:22:27,550 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:22:27,551 - Deklarisana konstanta c na liniji 2
INFO  04:22:27,551 - Deklarisana konstanta d na liniji 2
INFO  04:22:27,551 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:22:27,551 - Deklarisana promenljiva e na liniji 3
INFO  04:22:27,552 - Pocetak obrade metode main na liniji 5
INFO  04:22:27,552 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:22:27,552 - Deklarisana promenljiva cond na liniji 5
INFO  04:22:27,553 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:22:27,553 - Zavrsetak obrade programa Program na liniji 1
INFO  04:22:27,553 - ======================TABELA_SIMBOLA==========================
INFO  04:22:27,554 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:22:27,554 - ==============================================================
INFO  04:22:27,554 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:22:27,554 - ==============================================================
INFO  04:22:27,554 - ======================GENERISANJE_KODA========================
INFO  04:22:27,560 - Generisanje koda uspesno zavrseno!
INFO  04:22:27,560 - Generisanje izlaznog fajla test\program.obj
INFO  04:22:27,561 - ==============================================================
INFO  04:25:39,172 - Obrada ulaznog fajla test\program.mj
INFO  04:25:39,252 - #2 program
INFO  04:25:39,252 - #8 Program
INFO  04:25:39,252 - #5 const
INFO  04:25:39,253 - #8 int
INFO  04:25:39,253 - #8 c
INFO  04:25:39,255 - #24 =
INFO  04:25:39,255 - #9 10
INFO  04:25:39,255 - #28 ,
INFO  04:25:39,256 - #8 d
INFO  04:25:39,257 - #24 =
INFO  04:25:39,257 - #9 99
INFO  04:25:39,257 - #27 ;
INFO  04:25:39,257 - #8 int
INFO  04:25:39,258 - #8 e
INFO  04:25:39,258 - #27 ;
INFO  04:25:39,258 - #20 {
INFO  04:25:39,260 - #6 void
INFO  04:25:39,260 - #8 main
INFO  04:25:39,260 - #29 (
INFO  04:25:39,261 - #30 )
INFO  04:25:39,262 - #8 bool
INFO  04:25:39,262 - #8 cond
INFO  04:25:39,262 - #27 ;
INFO  04:25:39,262 - #20 {
INFO  04:25:39,262 - #8 cond
INFO  04:25:39,262 - #24 =
INFO  04:25:39,263 - #11 true
INFO  04:25:39,263 - #27 ;
INFO  04:25:39,263 - #31 if
INFO  04:25:39,264 - #29 (
INFO  04:25:39,264 - #8 cond
INFO  04:25:39,264 - #30 )
INFO  04:25:39,265 - #20 {
INFO  04:25:39,265 - #3 print
INFO  04:25:39,265 - #29 (
INFO  04:25:39,265 - #8 c
INFO  04:25:39,265 - #30 )
INFO  04:25:39,265 - #27 ;
INFO  04:25:39,265 - #21 }
INFO  04:25:39,266 - #3 print
INFO  04:25:39,266 - #29 (
INFO  04:25:39,266 - #8 d
INFO  04:25:39,266 - #30 )
INFO  04:25:39,266 - #27 ;
INFO  04:25:39,266 - #21 }
INFO  04:25:39,266 - #21 }
INFO  04:25:39,267 - =====================SINTAKSNO_STABLO=========================
INFO  04:25:39,269 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:25:39,270 - ==============================================================
INFO  04:25:39,287 - Pocetak obrade programa Program na liniji 1
INFO  04:25:39,287 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:25:39,288 - Deklarisana konstanta c na liniji 2
INFO  04:25:39,288 - Deklarisana konstanta d na liniji 2
INFO  04:25:39,288 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:25:39,288 - Deklarisana promenljiva e na liniji 3
INFO  04:25:39,289 - Pocetak obrade metode main na liniji 5
INFO  04:25:39,289 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:25:39,289 - Deklarisana promenljiva cond na liniji 5
INFO  04:25:39,290 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:25:39,290 - Zavrsetak obrade programa Program na liniji 1
INFO  04:25:39,290 - ======================TABELA_SIMBOLA==========================
INFO  04:25:39,291 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:25:39,291 - ==============================================================
INFO  04:25:39,291 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:25:39,291 - ==============================================================
INFO  04:25:39,291 - ======================GENERISANJE_KODA========================
INFO  04:25:39,296 - Generisanje koda uspesno zavrseno!
INFO  04:25:39,297 - Generisanje izlaznog fajla test\program.obj
INFO  04:25:39,297 - ==============================================================
INFO  04:25:59,255 - Obrada ulaznog fajla test\program.mj
INFO  04:25:59,339 - #2 program
INFO  04:25:59,339 - #8 Program
INFO  04:25:59,339 - #5 const
INFO  04:25:59,340 - #8 int
INFO  04:25:59,340 - #8 c
INFO  04:25:59,341 - #24 =
INFO  04:25:59,341 - #9 10
INFO  04:25:59,341 - #28 ,
INFO  04:25:59,343 - #8 d
INFO  04:25:59,343 - #24 =
INFO  04:25:59,343 - #9 99
INFO  04:25:59,343 - #27 ;
INFO  04:25:59,343 - #8 int
INFO  04:25:59,345 - #8 e
INFO  04:25:59,345 - #27 ;
INFO  04:25:59,345 - #20 {
INFO  04:25:59,346 - #6 void
INFO  04:25:59,347 - #8 main
INFO  04:25:59,347 - #29 (
INFO  04:25:59,348 - #30 )
INFO  04:25:59,348 - #8 bool
INFO  04:25:59,348 - #8 cond
INFO  04:25:59,348 - #27 ;
INFO  04:25:59,348 - #20 {
INFO  04:25:59,348 - #8 cond
INFO  04:25:59,348 - #24 =
INFO  04:25:59,349 - #11 true
INFO  04:25:59,349 - #27 ;
INFO  04:25:59,350 - #31 if
INFO  04:25:59,350 - #29 (
INFO  04:25:59,350 - #8 cond
INFO  04:25:59,350 - #30 )
INFO  04:25:59,351 - #20 {
INFO  04:25:59,351 - #3 print
INFO  04:25:59,351 - #29 (
INFO  04:25:59,352 - #8 c
INFO  04:25:59,352 - #30 )
INFO  04:25:59,352 - #27 ;
INFO  04:25:59,352 - #21 }
INFO  04:25:59,352 - #3 print
INFO  04:25:59,353 - #29 (
INFO  04:25:59,353 - #8 d
INFO  04:25:59,353 - #30 )
INFO  04:25:59,353 - #27 ;
INFO  04:25:59,353 - #21 }
INFO  04:25:59,353 - #21 }
INFO  04:25:59,355 - =====================SINTAKSNO_STABLO=========================
INFO  04:25:59,356 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:25:59,357 - ==============================================================
INFO  04:25:59,370 - Pocetak obrade programa Program na liniji 1
INFO  04:25:59,370 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:25:59,371 - Deklarisana konstanta c na liniji 2
INFO  04:25:59,372 - Deklarisana konstanta d na liniji 2
INFO  04:25:59,372 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:25:59,372 - Deklarisana promenljiva e na liniji 3
INFO  04:25:59,373 - Pocetak obrade metode main na liniji 5
INFO  04:25:59,373 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:25:59,373 - Deklarisana promenljiva cond na liniji 5
INFO  04:25:59,374 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:25:59,374 - Zavrsetak obrade programa Program na liniji 1
INFO  04:25:59,374 - ======================TABELA_SIMBOLA==========================
INFO  04:25:59,375 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:25:59,375 - ==============================================================
INFO  04:25:59,376 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:25:59,376 - ==============================================================
INFO  04:25:59,376 - ======================GENERISANJE_KODA========================
INFO  04:25:59,382 - Generisanje koda uspesno zavrseno!
INFO  04:25:59,382 - Generisanje izlaznog fajla test\program.obj
INFO  04:25:59,382 - ==============================================================
INFO  04:26:30,509 - Obrada ulaznog fajla test\program.mj
INFO  04:26:30,594 - #2 program
INFO  04:26:30,594 - #8 Program
INFO  04:26:30,595 - #5 const
INFO  04:26:30,595 - #8 int
INFO  04:26:30,595 - #8 c
INFO  04:26:30,596 - #24 =
INFO  04:26:30,596 - #9 10
INFO  04:26:30,596 - #28 ,
INFO  04:26:30,598 - #8 d
INFO  04:26:30,598 - #24 =
INFO  04:26:30,598 - #9 99
INFO  04:26:30,598 - #27 ;
INFO  04:26:30,598 - #8 int
INFO  04:26:30,600 - #8 e
INFO  04:26:30,600 - #27 ;
INFO  04:26:30,600 - #20 {
INFO  04:26:30,601 - #6 void
INFO  04:26:30,602 - #8 main
INFO  04:26:30,602 - #29 (
INFO  04:26:30,603 - #30 )
INFO  04:26:30,603 - #8 bool
INFO  04:26:30,603 - #8 cond
INFO  04:26:30,603 - #27 ;
INFO  04:26:30,603 - #20 {
INFO  04:26:30,603 - #8 cond
INFO  04:26:30,603 - #24 =
INFO  04:26:30,604 - #11 true
INFO  04:26:30,604 - #27 ;
INFO  04:26:30,605 - #31 if
INFO  04:26:30,605 - #29 (
INFO  04:26:30,605 - #8 cond
INFO  04:26:30,605 - #30 )
INFO  04:26:30,606 - #20 {
INFO  04:26:30,606 - #3 print
INFO  04:26:30,606 - #29 (
INFO  04:26:30,606 - #8 c
INFO  04:26:30,606 - #30 )
INFO  04:26:30,606 - #27 ;
INFO  04:26:30,606 - #21 }
INFO  04:26:30,606 - #3 print
INFO  04:26:30,607 - #29 (
INFO  04:26:30,607 - #8 d
INFO  04:26:30,607 - #30 )
INFO  04:26:30,607 - #27 ;
INFO  04:26:30,607 - #21 }
INFO  04:26:30,607 - #21 }
INFO  04:26:30,608 - =====================SINTAKSNO_STABLO=========================
INFO  04:26:30,610 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:26:30,611 - ==============================================================
INFO  04:26:30,627 - Pocetak obrade programa Program na liniji 1
INFO  04:26:30,628 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:26:30,629 - Deklarisana konstanta c na liniji 2
INFO  04:26:30,629 - Deklarisana konstanta d na liniji 2
INFO  04:26:30,629 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:26:30,629 - Deklarisana promenljiva e na liniji 3
INFO  04:26:30,630 - Pocetak obrade metode main na liniji 5
INFO  04:26:30,630 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:26:30,630 - Deklarisana promenljiva cond na liniji 5
INFO  04:26:30,631 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:26:30,631 - Zavrsetak obrade programa Program na liniji 1
INFO  04:26:30,631 - ======================TABELA_SIMBOLA==========================
INFO  04:26:30,632 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:26:30,632 - ==============================================================
INFO  04:26:30,632 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:26:30,632 - ==============================================================
INFO  04:26:30,632 - ======================GENERISANJE_KODA========================
INFO  04:26:30,638 - Generisanje koda uspesno zavrseno!
INFO  04:26:30,638 - Generisanje izlaznog fajla test\program.obj
INFO  04:26:30,638 - ==============================================================
INFO  04:27:34,589 - Obrada ulaznog fajla test\program.mj
INFO  04:27:34,676 - #2 program
INFO  04:27:34,676 - #8 Program
INFO  04:27:34,677 - #5 const
INFO  04:27:34,677 - #8 int
INFO  04:27:34,677 - #8 c
INFO  04:27:34,678 - #24 =
INFO  04:27:34,678 - #9 10
INFO  04:27:34,678 - #28 ,
INFO  04:27:34,679 - #8 d
INFO  04:27:34,679 - #24 =
INFO  04:27:34,679 - #9 99
INFO  04:27:34,679 - #27 ;
INFO  04:27:34,680 - #8 int
INFO  04:27:34,681 - #8 e
INFO  04:27:34,681 - #27 ;
INFO  04:27:34,681 - #20 {
INFO  04:27:34,682 - #6 void
INFO  04:27:34,682 - #8 main
INFO  04:27:34,682 - #29 (
INFO  04:27:34,683 - #30 )
INFO  04:27:34,683 - #8 bool
INFO  04:27:34,683 - #8 cond
INFO  04:27:34,683 - #27 ;
INFO  04:27:34,683 - #20 {
INFO  04:27:34,684 - #8 cond
INFO  04:27:34,684 - #24 =
INFO  04:27:34,684 - #11 true
INFO  04:27:34,684 - #27 ;
INFO  04:27:34,685 - #31 if
INFO  04:27:34,685 - #29 (
INFO  04:27:34,685 - #8 cond
INFO  04:27:34,685 - #30 )
INFO  04:27:34,686 - #20 {
INFO  04:27:34,686 - #3 print
INFO  04:27:34,686 - #29 (
INFO  04:27:34,686 - #8 c
INFO  04:27:34,686 - #30 )
INFO  04:27:34,686 - #27 ;
INFO  04:27:34,686 - #21 }
INFO  04:27:34,687 - #3 print
INFO  04:27:34,687 - #29 (
INFO  04:27:34,687 - #8 d
INFO  04:27:34,687 - #30 )
INFO  04:27:34,687 - #27 ;
INFO  04:27:34,687 - #21 }
INFO  04:27:34,687 - #21 }
INFO  04:27:34,688 - =====================SINTAKSNO_STABLO=========================
INFO  04:27:34,690 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:27:34,690 - ==============================================================
INFO  04:27:34,705 - Pocetak obrade programa Program na liniji 1
INFO  04:27:34,705 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:27:34,706 - Deklarisana konstanta c na liniji 2
INFO  04:27:34,706 - Deklarisana konstanta d na liniji 2
INFO  04:27:34,706 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:27:34,707 - Deklarisana promenljiva e na liniji 3
INFO  04:27:34,708 - Pocetak obrade metode main na liniji 5
INFO  04:27:34,708 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:27:34,708 - Deklarisana promenljiva cond na liniji 5
INFO  04:27:34,708 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:27:34,709 - Zavrsetak obrade programa Program na liniji 1
INFO  04:27:34,709 - ======================TABELA_SIMBOLA==========================
INFO  04:27:34,709 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:27:34,710 - ==============================================================
INFO  04:27:34,710 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:27:34,710 - ==============================================================
INFO  04:27:34,710 - ======================GENERISANJE_KODA========================
INFO  04:27:34,716 - Generisanje koda uspesno zavrseno!
INFO  04:27:34,716 - Generisanje izlaznog fajla test\program.obj
INFO  04:27:34,716 - ==============================================================
INFO  04:28:53,654 - Obrada ulaznog fajla test\program.mj
INFO  04:28:53,744 - #2 program
INFO  04:28:53,744 - #8 Program
INFO  04:28:53,744 - #5 const
INFO  04:28:53,746 - #8 int
INFO  04:28:53,746 - #8 c
INFO  04:28:53,747 - #24 =
INFO  04:28:53,747 - #9 10
INFO  04:28:53,747 - #28 ,
INFO  04:28:53,748 - #8 d
INFO  04:28:53,748 - #24 =
INFO  04:28:53,748 - #9 99
INFO  04:28:53,748 - #27 ;
INFO  04:28:53,749 - #8 int
INFO  04:28:53,750 - #8 e
INFO  04:28:53,750 - #27 ;
INFO  04:28:53,750 - #20 {
INFO  04:28:53,751 - #6 void
INFO  04:28:53,751 - #8 main
INFO  04:28:53,752 - #29 (
INFO  04:28:53,753 - #30 )
INFO  04:28:53,753 - #8 bool
INFO  04:28:53,753 - #8 cond
INFO  04:28:53,753 - #27 ;
INFO  04:28:53,753 - #20 {
INFO  04:28:53,753 - #8 cond
INFO  04:28:53,753 - #24 =
INFO  04:28:53,754 - #11 true
INFO  04:28:53,754 - #27 ;
INFO  04:28:53,755 - #31 if
INFO  04:28:53,756 - #29 (
INFO  04:28:53,756 - #8 cond
INFO  04:28:53,756 - #30 )
INFO  04:28:53,756 - #20 {
INFO  04:28:53,757 - #3 print
INFO  04:28:53,757 - #29 (
INFO  04:28:53,757 - #8 c
INFO  04:28:53,757 - #30 )
INFO  04:28:53,757 - #27 ;
INFO  04:28:53,757 - #21 }
INFO  04:28:53,757 - #3 print
INFO  04:28:53,758 - #29 (
INFO  04:28:53,758 - #8 d
INFO  04:28:53,758 - #30 )
INFO  04:28:53,758 - #27 ;
INFO  04:28:53,758 - #21 }
INFO  04:28:53,758 - #21 }
INFO  04:28:53,759 - =====================SINTAKSNO_STABLO=========================
INFO  04:28:53,762 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:28:53,763 - ==============================================================
INFO  04:28:53,780 - Pocetak obrade programa Program na liniji 1
INFO  04:28:53,780 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:28:53,781 - Deklarisana konstanta c na liniji 2
INFO  04:28:53,781 - Deklarisana konstanta d na liniji 2
INFO  04:28:53,781 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:28:53,781 - Deklarisana promenljiva e na liniji 3
INFO  04:28:53,782 - Pocetak obrade metode main na liniji 5
INFO  04:28:53,782 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:28:53,782 - Deklarisana promenljiva cond na liniji 5
INFO  04:28:53,783 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:28:53,783 - Zavrsetak obrade programa Program na liniji 1
INFO  04:28:53,783 - ======================TABELA_SIMBOLA==========================
INFO  04:28:53,784 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:28:53,784 - ==============================================================
INFO  04:28:53,784 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:28:53,784 - ==============================================================
INFO  04:28:53,784 - ======================GENERISANJE_KODA========================
INFO  04:28:53,789 - Generisanje koda uspesno zavrseno!
INFO  04:28:53,790 - Generisanje izlaznog fajla test\program.obj
INFO  04:28:53,790 - ==============================================================
INFO  04:29:06,211 - Obrada ulaznog fajla test\program.mj
INFO  04:29:06,296 - #2 program
INFO  04:29:06,297 - #8 Program
INFO  04:29:06,297 - #5 const
INFO  04:29:06,298 - #8 int
INFO  04:29:06,298 - #8 c
INFO  04:29:06,298 - #24 =
INFO  04:29:06,299 - #9 10
INFO  04:29:06,299 - #28 ,
INFO  04:29:06,300 - #8 d
INFO  04:29:06,300 - #24 =
INFO  04:29:06,300 - #9 99
INFO  04:29:06,301 - #27 ;
INFO  04:29:06,301 - #8 int
INFO  04:29:06,302 - #8 e
INFO  04:29:06,302 - #27 ;
INFO  04:29:06,303 - #20 {
INFO  04:29:06,304 - #6 void
INFO  04:29:06,304 - #8 main
INFO  04:29:06,304 - #29 (
INFO  04:29:06,305 - #30 )
INFO  04:29:06,305 - #8 bool
INFO  04:29:06,305 - #8 cond
INFO  04:29:06,306 - #27 ;
INFO  04:29:06,306 - #20 {
INFO  04:29:06,306 - #8 cond
INFO  04:29:06,306 - #24 =
INFO  04:29:06,306 - #11 true
INFO  04:29:06,307 - #27 ;
INFO  04:29:06,307 - #31 if
INFO  04:29:06,308 - #29 (
INFO  04:29:06,308 - #8 cond
INFO  04:29:06,308 - #30 )
INFO  04:29:06,308 - #20 {
INFO  04:29:06,309 - #3 print
INFO  04:29:06,309 - #29 (
INFO  04:29:06,309 - #8 c
INFO  04:29:06,309 - #30 )
INFO  04:29:06,309 - #27 ;
INFO  04:29:06,309 - #21 }
INFO  04:29:06,309 - #3 print
INFO  04:29:06,310 - #29 (
INFO  04:29:06,310 - #8 d
INFO  04:29:06,310 - #30 )
INFO  04:29:06,310 - #27 ;
INFO  04:29:06,310 - #21 }
INFO  04:29:06,310 - #21 }
INFO  04:29:06,311 - =====================SINTAKSNO_STABLO=========================
INFO  04:29:06,314 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             bool
            ) [Type]
            Var_single(
              Var_normal(
               cond
              ) [Var_normal]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:29:06,315 - ==============================================================
INFO  04:29:06,327 - Pocetak obrade programa Program na liniji 1
INFO  04:29:06,327 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:29:06,328 - Deklarisana konstanta c na liniji 2
INFO  04:29:06,328 - Deklarisana konstanta d na liniji 2
INFO  04:29:06,329 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:29:06,329 - Deklarisana promenljiva e na liniji 3
INFO  04:29:06,330 - Pocetak obrade metode main na liniji 5
INFO  04:29:06,330 - Pronadjen tip bool u tabeli simbola na liniji 5
INFO  04:29:06,330 - Deklarisana promenljiva cond na liniji 5
INFO  04:29:06,330 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:29:06,331 - Zavrsetak obrade programa Program na liniji 1
INFO  04:29:06,331 - ======================TABELA_SIMBOLA==========================
INFO  04:29:06,331 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var cond: bool

INFO  04:29:06,331 - ==============================================================
INFO  04:29:06,331 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:29:06,331 - ==============================================================
INFO  04:29:06,332 - ======================GENERISANJE_KODA========================
INFO  04:29:06,338 - Generisanje koda uspesno zavrseno!
INFO  04:29:06,338 - Generisanje izlaznog fajla test\program.obj
INFO  04:29:06,338 - ==============================================================
INFO  04:30:53,576 - Obrada ulaznog fajla test\program.mj
INFO  04:30:53,669 - #2 program
INFO  04:30:53,669 - #8 Program
INFO  04:30:53,669 - #5 const
INFO  04:30:53,670 - #8 int
INFO  04:30:53,670 - #8 c
INFO  04:30:53,671 - #24 =
INFO  04:30:53,671 - #9 10
INFO  04:30:53,671 - #28 ,
INFO  04:30:53,672 - #8 d
INFO  04:30:53,673 - #24 =
INFO  04:30:53,673 - #9 99
INFO  04:30:53,673 - #27 ;
INFO  04:30:53,673 - #8 int
INFO  04:30:53,674 - #8 e
INFO  04:30:53,674 - #27 ;
INFO  04:30:53,675 - #8 bool
INFO  04:30:53,676 - #8 cond
INFO  04:30:53,676 - #27 ;
INFO  04:30:53,676 - #20 {
INFO  04:30:53,676 - #6 void
INFO  04:30:53,676 - #8 main
INFO  04:30:53,676 - #29 (
INFO  04:30:53,677 - #30 )
INFO  04:30:53,677 - #20 {
INFO  04:30:53,678 - #8 cond
INFO  04:30:53,678 - #24 =
INFO  04:30:53,678 - #11 true
INFO  04:30:53,678 - #27 ;
INFO  04:30:53,679 - #31 if
INFO  04:30:53,680 - #29 (
INFO  04:30:53,680 - #8 cond
INFO  04:30:53,680 - #30 )
INFO  04:30:53,681 - #20 {
INFO  04:30:53,681 - #3 print
INFO  04:30:53,681 - #29 (
INFO  04:30:53,681 - #8 c
INFO  04:30:53,681 - #30 )
INFO  04:30:53,682 - #27 ;
INFO  04:30:53,682 - #21 }
INFO  04:30:53,682 - #3 print
INFO  04:30:53,682 - #29 (
INFO  04:30:53,682 - #8 d
INFO  04:30:53,682 - #30 )
INFO  04:30:53,683 - #27 ;
INFO  04:30:53,683 - #21 }
INFO  04:30:53,683 - #21 }
INFO  04:30:53,684 - =====================SINTAKSNO_STABLO=========================
INFO  04:30:53,686 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:30:53,687 - ==============================================================
INFO  04:30:53,705 - Pocetak obrade programa Program na liniji 1
INFO  04:30:53,706 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:30:53,706 - Deklarisana konstanta c na liniji 2
INFO  04:30:53,706 - Deklarisana konstanta d na liniji 2
INFO  04:30:53,707 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:30:53,707 - Deklarisana promenljiva e na liniji 3
INFO  04:30:53,707 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  04:30:53,707 - Deklarisana promenljiva cond na liniji 3
INFO  04:30:53,707 - Pocetak obrade metode main na liniji 5
INFO  04:30:53,708 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:30:53,708 - Zavrsetak obrade programa Program na liniji 1
INFO  04:30:53,708 - ======================TABELA_SIMBOLA==========================
INFO  04:30:53,708 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  04:30:53,709 - ==============================================================
INFO  04:30:53,709 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:30:53,709 - ==============================================================
INFO  04:30:53,709 - ======================GENERISANJE_KODA========================
INFO  04:30:53,714 - Generisanje koda uspesno zavrseno!
INFO  04:30:53,714 - Generisanje izlaznog fajla test\program.obj
INFO  04:30:53,714 - ==============================================================
INFO  05:02:22,490 - Obrada ulaznog fajla test\program.mj
INFO  05:02:22,580 - #2 program
INFO  05:02:22,580 - #8 Program
INFO  05:02:22,580 - #5 const
INFO  05:02:22,581 - #8 int
INFO  05:02:22,581 - #8 c
INFO  05:02:22,581 - #24 =
INFO  05:02:22,582 - #9 10
INFO  05:02:22,582 - #28 ,
INFO  05:02:22,583 - #8 d
INFO  05:02:22,583 - #24 =
INFO  05:02:22,583 - #9 99
INFO  05:02:22,583 - #27 ;
INFO  05:02:22,583 - #8 int
INFO  05:02:22,585 - #8 e
INFO  05:02:22,585 - #27 ;
INFO  05:02:22,585 - #8 bool
INFO  05:02:22,587 - #8 cond
INFO  05:02:22,587 - #27 ;
INFO  05:02:22,587 - #20 {
INFO  05:02:22,587 - #6 void
INFO  05:02:22,587 - #8 main
INFO  05:02:22,587 - #29 (
INFO  05:02:22,588 - #30 )
INFO  05:02:22,588 - #20 {
INFO  05:02:22,589 - #8 cond
INFO  05:02:22,589 - #24 =
INFO  05:02:22,589 - #11 true
INFO  05:02:22,589 - #27 ;
INFO  05:02:22,590 - #31 if
INFO  05:02:22,590 - #29 (
INFO  05:02:22,590 - #8 cond
INFO  05:02:22,590 - #30 )
INFO  05:02:22,591 - #20 {
INFO  05:02:22,591 - #3 print
INFO  05:02:22,591 - #29 (
INFO  05:02:22,591 - #8 c
INFO  05:02:22,591 - #30 )
INFO  05:02:22,592 - #27 ;
INFO  05:02:22,592 - #21 }
INFO  05:02:22,592 - #3 print
INFO  05:02:22,593 - #29 (
INFO  05:02:22,593 - #8 d
INFO  05:02:22,593 - #30 )
INFO  05:02:22,593 - #27 ;
INFO  05:02:22,593 - #21 }
INFO  05:02:22,593 - #21 }
INFO  05:02:22,594 - =====================SINTAKSNO_STABLO=========================
INFO  05:02:22,596 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:02:22,597 - ==============================================================
INFO  05:02:22,616 - Pocetak obrade programa Program na liniji 1
INFO  05:02:22,616 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:02:22,618 - Deklarisana konstanta c na liniji 2
INFO  05:02:22,618 - Deklarisana konstanta d na liniji 2
INFO  05:02:22,618 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:02:22,618 - Deklarisana promenljiva e na liniji 3
INFO  05:02:22,619 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:02:22,619 - Deklarisana promenljiva cond na liniji 3
INFO  05:02:22,620 - Pocetak obrade metode main na liniji 5
INFO  05:02:22,620 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:02:22,620 - Zavrsetak obrade programa Program na liniji 1
INFO  05:02:22,620 - ======================TABELA_SIMBOLA==========================
INFO  05:02:22,621 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:02:22,621 - ==============================================================
INFO  05:02:22,622 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:02:22,622 - ==============================================================
INFO  05:02:22,622 - ======================GENERISANJE_KODA========================
INFO  05:02:22,627 - Generisanje koda uspesno zavrseno!
INFO  05:02:22,628 - Generisanje izlaznog fajla test\program.obj
INFO  05:02:22,628 - ==============================================================
INFO  05:03:17,325 - Obrada ulaznog fajla test\program.mj
INFO  05:03:17,402 - #2 program
INFO  05:03:17,402 - #8 Program
INFO  05:03:17,402 - #5 const
INFO  05:03:17,403 - #8 int
INFO  05:03:17,404 - #8 c
INFO  05:03:17,405 - #24 =
INFO  05:03:17,405 - #9 10
INFO  05:03:17,406 - #28 ,
INFO  05:03:17,407 - #8 d
INFO  05:03:17,407 - #24 =
INFO  05:03:17,407 - #9 99
INFO  05:03:17,408 - #27 ;
INFO  05:03:17,408 - #8 int
INFO  05:03:17,410 - #8 e
INFO  05:03:17,410 - #27 ;
INFO  05:03:17,410 - #8 bool
INFO  05:03:17,411 - #8 cond
INFO  05:03:17,411 - #27 ;
INFO  05:03:17,412 - #20 {
INFO  05:03:17,412 - #6 void
INFO  05:03:17,412 - #8 main
INFO  05:03:17,412 - #29 (
INFO  05:03:17,413 - #30 )
INFO  05:03:17,413 - #20 {
INFO  05:03:17,413 - #8 cond
INFO  05:03:17,413 - #24 =
INFO  05:03:17,413 - #12 false
INFO  05:03:17,413 - #27 ;
INFO  05:03:17,414 - #31 if
INFO  05:03:17,414 - #29 (
INFO  05:03:17,414 - #8 cond
INFO  05:03:17,415 - #30 )
INFO  05:03:17,415 - #20 {
INFO  05:03:17,415 - #3 print
INFO  05:03:17,415 - #29 (
INFO  05:03:17,415 - #8 c
INFO  05:03:17,415 - #30 )
INFO  05:03:17,415 - #27 ;
INFO  05:03:17,416 - #21 }
INFO  05:03:17,416 - #3 print
INFO  05:03:17,416 - #29 (
INFO  05:03:17,416 - #8 d
INFO  05:03:17,416 - #30 )
INFO  05:03:17,416 - #27 ;
INFO  05:03:17,416 - #21 }
INFO  05:03:17,417 - #21 }
INFO  05:03:17,417 - =====================SINTAKSNO_STABLO=========================
INFO  05:03:17,419 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:03:17,420 - ==============================================================
INFO  05:03:17,435 - Pocetak obrade programa Program na liniji 1
INFO  05:03:17,435 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:03:17,436 - Deklarisana konstanta c na liniji 2
INFO  05:03:17,437 - Deklarisana konstanta d na liniji 2
INFO  05:03:17,437 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:03:17,437 - Deklarisana promenljiva e na liniji 3
INFO  05:03:17,437 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:03:17,438 - Deklarisana promenljiva cond na liniji 3
INFO  05:03:17,439 - Pocetak obrade metode main na liniji 5
INFO  05:03:17,439 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:03:17,439 - Zavrsetak obrade programa Program na liniji 1
INFO  05:03:17,439 - ======================TABELA_SIMBOLA==========================
INFO  05:03:17,440 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:03:17,440 - ==============================================================
INFO  05:03:17,440 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:03:17,440 - ==============================================================
INFO  05:03:17,440 - ======================GENERISANJE_KODA========================
INFO  05:03:17,445 - Generisanje koda uspesno zavrseno!
INFO  05:03:17,445 - Generisanje izlaznog fajla test\program.obj
INFO  05:03:17,445 - ==============================================================
INFO  05:15:50,878 - Obrada ulaznog fajla test\program.mj
INFO  05:15:50,956 - #2 program
INFO  05:15:50,956 - #8 Program
INFO  05:15:50,956 - #5 const
INFO  05:15:50,957 - #8 int
INFO  05:15:50,958 - #8 c
INFO  05:15:50,958 - #24 =
INFO  05:15:50,959 - #9 10
INFO  05:15:50,959 - #28 ,
INFO  05:15:50,960 - #8 d
INFO  05:15:50,960 - #24 =
INFO  05:15:50,960 - #9 99
INFO  05:15:50,960 - #27 ;
INFO  05:15:50,960 - #8 int
INFO  05:15:50,962 - #8 e
INFO  05:15:50,962 - #27 ;
INFO  05:15:50,962 - #8 bool
INFO  05:15:50,964 - #8 cond
INFO  05:15:50,964 - #27 ;
INFO  05:15:50,964 - #20 {
INFO  05:15:50,964 - #6 void
INFO  05:15:50,964 - #8 main
INFO  05:15:50,964 - #29 (
INFO  05:15:50,965 - #30 )
INFO  05:15:50,965 - #20 {
INFO  05:15:50,966 - #8 cond
INFO  05:15:50,966 - #24 =
INFO  05:15:50,966 - #12 false
INFO  05:15:50,966 - #27 ;
INFO  05:15:50,967 - #31 if
INFO  05:15:50,967 - #29 (
INFO  05:15:50,967 - #8 cond
INFO  05:15:50,968 - #30 )
INFO  05:15:50,968 - #20 {
INFO  05:15:50,968 - #3 print
INFO  05:15:50,968 - #29 (
INFO  05:15:50,969 - #8 c
INFO  05:15:50,969 - #30 )
INFO  05:15:50,969 - #27 ;
INFO  05:15:50,969 - #21 }
INFO  05:15:50,969 - #3 print
INFO  05:15:50,969 - #29 (
INFO  05:15:50,970 - #8 d
INFO  05:15:50,970 - #30 )
INFO  05:15:50,970 - #27 ;
INFO  05:15:50,970 - #21 }
INFO  05:15:50,970 - #21 }
INFO  05:15:50,971 - =====================SINTAKSNO_STABLO=========================
INFO  05:15:50,973 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:15:50,974 - ==============================================================
INFO  05:15:50,989 - Pocetak obrade programa Program na liniji 1
INFO  05:15:50,989 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:15:50,990 - Deklarisana konstanta c na liniji 2
INFO  05:15:50,990 - Deklarisana konstanta d na liniji 2
INFO  05:15:50,990 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:15:50,990 - Deklarisana promenljiva e na liniji 3
INFO  05:15:50,990 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:15:50,991 - Deklarisana promenljiva cond na liniji 3
INFO  05:15:50,992 - Pocetak obrade metode main na liniji 5
INFO  05:15:50,993 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:15:50,993 - Zavrsetak obrade programa Program na liniji 1
INFO  05:15:50,993 - ======================TABELA_SIMBOLA==========================
INFO  05:15:50,994 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:15:50,994 - ==============================================================
INFO  05:15:50,994 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:15:50,994 - ==============================================================
INFO  05:15:50,994 - ======================GENERISANJE_KODA========================
INFO  05:15:50,999 - Generisanje koda uspesno zavrseno!
INFO  05:15:51,000 - Generisanje izlaznog fajla test\program.obj
INFO  05:15:51,000 - ==============================================================
INFO  05:18:12,984 - Obrada ulaznog fajla test\program.mj
INFO  05:18:13,058 - #2 program
INFO  05:18:13,059 - #8 Program
INFO  05:18:13,059 - #5 const
INFO  05:18:13,059 - #8 int
INFO  05:18:13,059 - #8 c
INFO  05:18:13,060 - #24 =
INFO  05:18:13,060 - #9 10
INFO  05:18:13,061 - #28 ,
INFO  05:18:13,062 - #8 d
INFO  05:18:13,062 - #24 =
INFO  05:18:13,062 - #9 99
INFO  05:18:13,062 - #27 ;
INFO  05:18:13,062 - #8 int
INFO  05:18:13,063 - #8 e
INFO  05:18:13,064 - #27 ;
INFO  05:18:13,064 - #8 bool
INFO  05:18:13,065 - #8 cond
INFO  05:18:13,065 - #27 ;
INFO  05:18:13,065 - #20 {
INFO  05:18:13,065 - #6 void
INFO  05:18:13,066 - #8 main
INFO  05:18:13,066 - #29 (
INFO  05:18:13,067 - #30 )
INFO  05:18:13,067 - #20 {
INFO  05:18:13,067 - #8 cond
INFO  05:18:13,067 - #24 =
INFO  05:18:13,067 - #12 false
INFO  05:18:13,067 - #27 ;
INFO  05:18:13,068 - #31 if
INFO  05:18:13,068 - #29 (
INFO  05:18:13,069 - #8 cond
INFO  05:18:13,069 - #30 )
INFO  05:18:13,069 - #20 {
INFO  05:18:13,069 - #3 print
INFO  05:18:13,069 - #29 (
INFO  05:18:13,069 - #8 c
INFO  05:18:13,069 - #30 )
INFO  05:18:13,070 - #27 ;
INFO  05:18:13,070 - #21 }
INFO  05:18:13,070 - #3 print
INFO  05:18:13,070 - #29 (
INFO  05:18:13,071 - #8 d
INFO  05:18:13,071 - #30 )
INFO  05:18:13,071 - #27 ;
INFO  05:18:13,071 - #21 }
INFO  05:18:13,071 - #21 }
INFO  05:18:13,072 - =====================SINTAKSNO_STABLO=========================
INFO  05:18:13,074 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:18:13,074 - ==============================================================
INFO  05:18:13,087 - Pocetak obrade programa Program na liniji 1
INFO  05:18:13,087 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:18:13,088 - Deklarisana konstanta c na liniji 2
INFO  05:18:13,088 - Deklarisana konstanta d na liniji 2
INFO  05:18:13,088 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:18:13,088 - Deklarisana promenljiva e na liniji 3
INFO  05:18:13,089 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:18:13,089 - Deklarisana promenljiva cond na liniji 3
INFO  05:18:13,090 - Pocetak obrade metode main na liniji 5
INFO  05:18:13,090 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:18:13,091 - Zavrsetak obrade programa Program na liniji 1
INFO  05:18:13,091 - ======================TABELA_SIMBOLA==========================
INFO  05:18:13,092 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:18:13,092 - ==============================================================
INFO  05:18:13,092 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:18:13,092 - ==============================================================
INFO  05:18:13,092 - ======================GENERISANJE_KODA========================
INFO  05:18:13,099 - Generisanje koda uspesno zavrseno!
INFO  05:18:13,099 - Generisanje izlaznog fajla test\program.obj
INFO  05:18:13,099 - ==============================================================
INFO  05:19:49,814 - Obrada ulaznog fajla test\program.mj
INFO  05:19:49,879 - #2 program
INFO  05:19:49,880 - #8 Program
INFO  05:19:49,880 - #5 const
INFO  05:19:49,881 - #8 int
INFO  05:19:49,881 - #8 c
INFO  05:19:49,881 - #24 =
INFO  05:19:49,882 - #9 10
INFO  05:19:49,882 - #28 ,
INFO  05:19:49,883 - #8 d
INFO  05:19:49,883 - #24 =
INFO  05:19:49,883 - #9 99
INFO  05:19:49,883 - #27 ;
INFO  05:19:49,883 - #8 int
INFO  05:19:49,884 - #8 e
INFO  05:19:49,884 - #27 ;
INFO  05:19:49,885 - #8 bool
INFO  05:19:49,886 - #8 cond
INFO  05:19:49,886 - #27 ;
INFO  05:19:49,886 - #20 {
INFO  05:19:49,886 - #6 void
INFO  05:19:49,886 - #8 main
INFO  05:19:49,886 - #29 (
INFO  05:19:49,887 - #30 )
INFO  05:19:49,887 - #20 {
INFO  05:19:49,887 - #8 cond
INFO  05:19:49,887 - #24 =
INFO  05:19:49,887 - #12 false
INFO  05:19:49,888 - #27 ;
INFO  05:19:49,888 - #31 if
INFO  05:19:49,889 - #29 (
INFO  05:19:49,889 - #8 cond
INFO  05:19:49,889 - #30 )
INFO  05:19:49,889 - #20 {
INFO  05:19:49,889 - #3 print
INFO  05:19:49,889 - #29 (
INFO  05:19:49,890 - #8 c
INFO  05:19:49,890 - #30 )
INFO  05:19:49,890 - #27 ;
INFO  05:19:49,890 - #21 }
INFO  05:19:49,890 - #3 print
INFO  05:19:49,890 - #29 (
INFO  05:19:49,890 - #8 d
INFO  05:19:49,891 - #30 )
INFO  05:19:49,891 - #27 ;
INFO  05:19:49,891 - #21 }
INFO  05:19:49,891 - #21 }
INFO  05:19:49,892 - =====================SINTAKSNO_STABLO=========================
INFO  05:19:49,893 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:19:49,901 - ==============================================================
INFO  05:19:49,917 - Pocetak obrade programa Program na liniji 1
INFO  05:19:49,918 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:19:49,919 - Deklarisana konstanta c na liniji 2
INFO  05:19:49,919 - Deklarisana konstanta d na liniji 2
INFO  05:19:49,920 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:19:49,920 - Deklarisana promenljiva e na liniji 3
INFO  05:19:49,920 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:19:49,920 - Deklarisana promenljiva cond na liniji 3
INFO  05:19:49,921 - Pocetak obrade metode main na liniji 5
INFO  05:19:49,922 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:19:49,922 - Zavrsetak obrade programa Program na liniji 1
INFO  05:19:49,922 - ======================TABELA_SIMBOLA==========================
INFO  05:19:49,923 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:19:49,923 - ==============================================================
INFO  05:19:49,923 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:19:49,923 - ==============================================================
INFO  05:19:49,923 - ======================GENERISANJE_KODA========================
INFO  05:19:49,928 - Generisanje koda uspesno zavrseno!
INFO  05:19:49,929 - Generisanje izlaznog fajla test\program.obj
INFO  05:19:49,929 - ==============================================================
INFO  05:20:21,322 - Obrada ulaznog fajla test\program.mj
INFO  05:20:21,403 - #2 program
INFO  05:20:21,403 - #8 Program
INFO  05:20:21,403 - #5 const
INFO  05:20:21,405 - #8 int
INFO  05:20:21,405 - #8 c
INFO  05:20:21,406 - #24 =
INFO  05:20:21,406 - #9 10
INFO  05:20:21,406 - #28 ,
INFO  05:20:21,407 - #8 d
INFO  05:20:21,407 - #24 =
INFO  05:20:21,408 - #9 99
INFO  05:20:21,408 - #27 ;
INFO  05:20:21,408 - #8 int
INFO  05:20:21,409 - #8 e
INFO  05:20:21,409 - #27 ;
INFO  05:20:21,410 - #8 bool
INFO  05:20:21,412 - #8 cond
INFO  05:20:21,412 - #27 ;
INFO  05:20:21,413 - #20 {
INFO  05:20:21,413 - #6 void
INFO  05:20:21,413 - #8 main
INFO  05:20:21,413 - #29 (
INFO  05:20:21,414 - #30 )
INFO  05:20:21,414 - #20 {
INFO  05:20:21,414 - #8 cond
INFO  05:20:21,414 - #24 =
INFO  05:20:21,414 - #12 false
INFO  05:20:21,414 - #27 ;
INFO  05:20:21,415 - #31 if
INFO  05:20:21,416 - #29 (
INFO  05:20:21,416 - #8 cond
INFO  05:20:21,416 - #30 )
INFO  05:20:21,416 - #20 {
INFO  05:20:21,416 - #3 print
INFO  05:20:21,417 - #29 (
INFO  05:20:21,417 - #8 c
INFO  05:20:21,417 - #30 )
INFO  05:20:21,417 - #27 ;
INFO  05:20:21,417 - #21 }
INFO  05:20:21,417 - #3 print
INFO  05:20:21,418 - #29 (
INFO  05:20:21,418 - #8 d
INFO  05:20:21,418 - #30 )
INFO  05:20:21,418 - #27 ;
INFO  05:20:21,418 - #21 }
INFO  05:20:21,418 - #21 }
INFO  05:20:21,419 - =====================SINTAKSNO_STABLO=========================
INFO  05:20:21,421 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:20:21,421 - ==============================================================
INFO  05:20:21,438 - Pocetak obrade programa Program na liniji 1
INFO  05:20:21,438 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:20:21,439 - Deklarisana konstanta c na liniji 2
INFO  05:20:21,439 - Deklarisana konstanta d na liniji 2
INFO  05:20:21,439 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:20:21,440 - Deklarisana promenljiva e na liniji 3
INFO  05:20:21,440 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:20:21,440 - Deklarisana promenljiva cond na liniji 3
INFO  05:20:21,441 - Pocetak obrade metode main na liniji 5
INFO  05:20:21,441 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:20:21,442 - Zavrsetak obrade programa Program na liniji 1
INFO  05:20:21,442 - ======================TABELA_SIMBOLA==========================
INFO  05:20:21,442 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:20:21,443 - ==============================================================
INFO  05:20:21,443 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:20:21,443 - ==============================================================
INFO  05:20:21,443 - ======================GENERISANJE_KODA========================
INFO  05:20:21,447 - Generisanje koda uspesno zavrseno!
INFO  05:20:21,448 - Generisanje izlaznog fajla test\program.obj
INFO  05:20:21,448 - ==============================================================
INFO  05:21:19,746 - Obrada ulaznog fajla test\program.mj
INFO  05:21:19,822 - #2 program
INFO  05:21:19,822 - #8 Program
INFO  05:21:19,822 - #5 const
INFO  05:21:19,823 - #8 int
INFO  05:21:19,823 - #8 c
INFO  05:21:19,824 - #24 =
INFO  05:21:19,824 - #9 10
INFO  05:21:19,825 - #28 ,
INFO  05:21:19,826 - #8 d
INFO  05:21:19,826 - #24 =
INFO  05:21:19,826 - #9 99
INFO  05:21:19,826 - #27 ;
INFO  05:21:19,826 - #8 int
INFO  05:21:19,827 - #8 e
INFO  05:21:19,827 - #27 ;
INFO  05:21:19,828 - #8 bool
INFO  05:21:19,829 - #8 cond
INFO  05:21:19,829 - #27 ;
INFO  05:21:19,829 - #20 {
INFO  05:21:19,829 - #6 void
INFO  05:21:19,829 - #8 main
INFO  05:21:19,829 - #29 (
INFO  05:21:19,830 - #30 )
INFO  05:21:19,830 - #20 {
INFO  05:21:19,830 - #8 cond
INFO  05:21:19,830 - #24 =
INFO  05:21:19,830 - #12 false
INFO  05:21:19,831 - #27 ;
INFO  05:21:19,831 - #31 if
INFO  05:21:19,832 - #29 (
INFO  05:21:19,832 - #8 cond
INFO  05:21:19,832 - #30 )
INFO  05:21:19,833 - #20 {
INFO  05:21:19,833 - #3 print
INFO  05:21:19,833 - #29 (
INFO  05:21:19,833 - #8 c
INFO  05:21:19,833 - #30 )
INFO  05:21:19,833 - #27 ;
INFO  05:21:19,833 - #21 }
INFO  05:21:19,833 - #3 print
INFO  05:21:19,834 - #29 (
INFO  05:21:19,834 - #8 d
INFO  05:21:19,834 - #30 )
INFO  05:21:19,834 - #27 ;
INFO  05:21:19,835 - #21 }
INFO  05:21:19,835 - #21 }
INFO  05:21:19,835 - =====================SINTAKSNO_STABLO=========================
INFO  05:21:19,837 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:21:19,838 - ==============================================================
INFO  05:21:19,852 - Pocetak obrade programa Program na liniji 1
INFO  05:21:19,853 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:21:19,853 - Deklarisana konstanta c na liniji 2
INFO  05:21:19,854 - Deklarisana konstanta d na liniji 2
INFO  05:21:19,854 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:21:19,854 - Deklarisana promenljiva e na liniji 3
INFO  05:21:19,854 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:21:19,854 - Deklarisana promenljiva cond na liniji 3
INFO  05:21:19,855 - Pocetak obrade metode main na liniji 5
INFO  05:21:19,856 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:21:19,856 - Zavrsetak obrade programa Program na liniji 1
INFO  05:21:19,856 - ======================TABELA_SIMBOLA==========================
INFO  05:21:19,856 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:21:19,857 - ==============================================================
INFO  05:21:19,857 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:21:19,857 - ==============================================================
INFO  05:21:19,857 - ======================GENERISANJE_KODA========================
INFO  05:21:19,863 - Generisanje koda uspesno zavrseno!
INFO  05:21:19,883 - Generisanje izlaznog fajla test\program.obj
INFO  05:21:19,883 - ==============================================================
INFO  05:21:59,436 - Obrada ulaznog fajla test\program.mj
INFO  05:21:59,515 - #2 program
INFO  05:21:59,515 - #8 Program
INFO  05:21:59,515 - #5 const
INFO  05:21:59,516 - #8 int
INFO  05:21:59,517 - #8 c
INFO  05:21:59,517 - #24 =
INFO  05:21:59,517 - #9 10
INFO  05:21:59,517 - #28 ,
INFO  05:21:59,518 - #8 d
INFO  05:21:59,518 - #24 =
INFO  05:21:59,519 - #9 99
INFO  05:21:59,519 - #27 ;
INFO  05:21:59,519 - #8 int
INFO  05:21:59,520 - #8 e
INFO  05:21:59,520 - #27 ;
INFO  05:21:59,521 - #8 bool
INFO  05:21:59,522 - #8 cond
INFO  05:21:59,522 - #27 ;
INFO  05:21:59,522 - #20 {
INFO  05:21:59,522 - #6 void
INFO  05:21:59,522 - #8 main
INFO  05:21:59,522 - #29 (
INFO  05:21:59,523 - #30 )
INFO  05:21:59,523 - #20 {
INFO  05:21:59,523 - #8 cond
INFO  05:21:59,523 - #24 =
INFO  05:21:59,524 - #12 false
INFO  05:21:59,524 - #27 ;
INFO  05:21:59,524 - #31 if
INFO  05:21:59,525 - #29 (
INFO  05:21:59,525 - #8 cond
INFO  05:21:59,525 - #30 )
INFO  05:21:59,525 - #20 {
INFO  05:21:59,526 - #3 print
INFO  05:21:59,526 - #29 (
INFO  05:21:59,526 - #8 c
INFO  05:21:59,526 - #30 )
INFO  05:21:59,526 - #27 ;
INFO  05:21:59,526 - #21 }
INFO  05:21:59,526 - #3 print
INFO  05:21:59,527 - #29 (
INFO  05:21:59,527 - #8 d
INFO  05:21:59,527 - #30 )
INFO  05:21:59,527 - #27 ;
INFO  05:21:59,527 - #21 }
INFO  05:21:59,527 - #21 }
INFO  05:21:59,528 - =====================SINTAKSNO_STABLO=========================
INFO  05:21:59,530 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:21:59,531 - ==============================================================
INFO  05:21:59,544 - Pocetak obrade programa Program na liniji 1
INFO  05:21:59,545 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:21:59,546 - Deklarisana konstanta c na liniji 2
INFO  05:21:59,546 - Deklarisana konstanta d na liniji 2
INFO  05:21:59,546 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:21:59,546 - Deklarisana promenljiva e na liniji 3
INFO  05:21:59,546 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:21:59,546 - Deklarisana promenljiva cond na liniji 3
INFO  05:21:59,547 - Pocetak obrade metode main na liniji 5
INFO  05:21:59,547 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:21:59,548 - Zavrsetak obrade programa Program na liniji 1
INFO  05:21:59,548 - ======================TABELA_SIMBOLA==========================
INFO  05:21:59,548 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:21:59,548 - ==============================================================
INFO  05:21:59,549 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:21:59,549 - ==============================================================
INFO  05:21:59,549 - ======================GENERISANJE_KODA========================
INFO  05:21:59,554 - Generisanje koda uspesno zavrseno!
INFO  05:21:59,554 - Generisanje izlaznog fajla test\program.obj
INFO  05:21:59,554 - ==============================================================
INFO  05:22:36,169 - Obrada ulaznog fajla test\program.mj
INFO  05:22:36,250 - #2 program
INFO  05:22:36,250 - #8 Program
INFO  05:22:36,250 - #5 const
INFO  05:22:36,252 - #8 int
INFO  05:22:36,252 - #8 c
INFO  05:22:36,253 - #24 =
INFO  05:22:36,253 - #9 10
INFO  05:22:36,253 - #28 ,
INFO  05:22:36,254 - #8 d
INFO  05:22:36,254 - #24 =
INFO  05:22:36,254 - #9 99
INFO  05:22:36,254 - #27 ;
INFO  05:22:36,255 - #8 int
INFO  05:22:36,256 - #8 e
INFO  05:22:36,256 - #27 ;
INFO  05:22:36,256 - #8 bool
INFO  05:22:36,257 - #8 cond
INFO  05:22:36,258 - #27 ;
INFO  05:22:36,258 - #20 {
INFO  05:22:36,258 - #6 void
INFO  05:22:36,258 - #8 main
INFO  05:22:36,258 - #29 (
INFO  05:22:36,259 - #30 )
INFO  05:22:36,259 - #20 {
INFO  05:22:36,259 - #8 cond
INFO  05:22:36,259 - #24 =
INFO  05:22:36,259 - #12 false
INFO  05:22:36,260 - #27 ;
INFO  05:22:36,260 - #31 if
INFO  05:22:36,261 - #29 (
INFO  05:22:36,261 - #8 cond
INFO  05:22:36,261 - #30 )
INFO  05:22:36,261 - #20 {
INFO  05:22:36,261 - #3 print
INFO  05:22:36,261 - #29 (
INFO  05:22:36,262 - #8 c
INFO  05:22:36,262 - #30 )
INFO  05:22:36,262 - #27 ;
INFO  05:22:36,262 - #21 }
INFO  05:22:36,262 - #3 print
INFO  05:22:36,262 - #29 (
INFO  05:22:36,263 - #8 d
INFO  05:22:36,263 - #30 )
INFO  05:22:36,263 - #27 ;
INFO  05:22:36,263 - #21 }
INFO  05:22:36,263 - #21 }
INFO  05:22:36,264 - =====================SINTAKSNO_STABLO=========================
INFO  05:22:36,265 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:22:36,266 - ==============================================================
INFO  05:22:36,283 - Pocetak obrade programa Program na liniji 1
INFO  05:22:36,283 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:22:36,284 - Deklarisana konstanta c na liniji 2
INFO  05:22:36,284 - Deklarisana konstanta d na liniji 2
INFO  05:22:36,284 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:22:36,284 - Deklarisana promenljiva e na liniji 3
INFO  05:22:36,284 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:22:36,285 - Deklarisana promenljiva cond na liniji 3
INFO  05:22:36,285 - Pocetak obrade metode main na liniji 5
INFO  05:22:36,286 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:22:36,286 - Zavrsetak obrade programa Program na liniji 1
INFO  05:22:36,286 - ======================TABELA_SIMBOLA==========================
INFO  05:22:36,287 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:22:36,287 - ==============================================================
INFO  05:22:36,287 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:22:36,287 - ==============================================================
INFO  05:22:36,287 - ======================GENERISANJE_KODA========================
INFO  05:22:36,292 - Generisanje koda uspesno zavrseno!
INFO  05:22:36,293 - Generisanje izlaznog fajla test\program.obj
INFO  05:22:36,293 - ==============================================================
INFO  05:27:46,534 - Obrada ulaznog fajla test\program.mj
INFO  05:27:46,622 - #2 program
INFO  05:27:46,622 - #8 Program
INFO  05:27:46,622 - #5 const
INFO  05:27:46,623 - #8 int
INFO  05:27:46,623 - #8 c
INFO  05:27:46,624 - #24 =
INFO  05:27:46,624 - #9 10
INFO  05:27:46,624 - #28 ,
INFO  05:27:46,626 - #8 d
INFO  05:27:46,626 - #24 =
INFO  05:27:46,626 - #9 99
INFO  05:27:46,626 - #27 ;
INFO  05:27:46,626 - #8 int
INFO  05:27:46,628 - #8 e
INFO  05:27:46,628 - #27 ;
INFO  05:27:46,628 - #8 bool
INFO  05:27:46,629 - #8 cond
INFO  05:27:46,630 - #27 ;
INFO  05:27:46,630 - #20 {
INFO  05:27:46,630 - #6 void
INFO  05:27:46,630 - #8 main
INFO  05:27:46,630 - #29 (
INFO  05:27:46,631 - #30 )
INFO  05:27:46,631 - #20 {
INFO  05:27:46,631 - #8 cond
INFO  05:27:46,631 - #24 =
INFO  05:27:46,632 - #12 false
INFO  05:27:46,632 - #27 ;
INFO  05:27:46,633 - #31 if
INFO  05:27:46,633 - #29 (
INFO  05:27:46,633 - #8 cond
INFO  05:27:46,633 - #30 )
INFO  05:27:46,634 - #20 {
INFO  05:27:46,634 - #3 print
INFO  05:27:46,634 - #29 (
INFO  05:27:46,634 - #8 c
INFO  05:27:46,634 - #30 )
INFO  05:27:46,634 - #27 ;
INFO  05:27:46,634 - #21 }
INFO  05:27:46,634 - #3 print
INFO  05:27:46,635 - #29 (
INFO  05:27:46,635 - #8 d
INFO  05:27:46,635 - #30 )
INFO  05:27:46,635 - #27 ;
INFO  05:27:46,635 - #21 }
INFO  05:27:46,635 - #21 }
INFO  05:27:46,636 - =====================SINTAKSNO_STABLO=========================
INFO  05:27:46,640 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:27:46,641 - ==============================================================
INFO  05:27:46,656 - Pocetak obrade programa Program na liniji 1
INFO  05:27:46,656 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:27:46,657 - Deklarisana konstanta c na liniji 2
INFO  05:27:46,657 - Deklarisana konstanta d na liniji 2
INFO  05:27:46,657 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:27:46,657 - Deklarisana promenljiva e na liniji 3
INFO  05:27:46,658 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:27:46,658 - Deklarisana promenljiva cond na liniji 3
INFO  05:27:46,659 - Pocetak obrade metode main na liniji 5
INFO  05:27:46,659 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:27:46,659 - Zavrsetak obrade programa Program na liniji 1
INFO  05:27:46,659 - ======================TABELA_SIMBOLA==========================
INFO  05:27:46,660 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:27:46,660 - ==============================================================
INFO  05:27:46,660 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:27:46,660 - ==============================================================
INFO  05:27:46,660 - ======================GENERISANJE_KODA========================
INFO  05:27:46,666 - Generisanje koda uspesno zavrseno!
INFO  05:27:46,666 - Generisanje izlaznog fajla test\program.obj
INFO  05:27:46,666 - ==============================================================
INFO  05:28:41,213 - Obrada ulaznog fajla test\program.mj
INFO  05:28:41,293 - #2 program
INFO  05:28:41,293 - #8 Program
INFO  05:28:41,293 - #5 const
INFO  05:28:41,294 - #8 int
INFO  05:28:41,294 - #8 c
INFO  05:28:41,295 - #24 =
INFO  05:28:41,295 - #9 10
INFO  05:28:41,295 - #28 ,
INFO  05:28:41,296 - #8 d
INFO  05:28:41,296 - #24 =
INFO  05:28:41,296 - #9 99
INFO  05:28:41,296 - #27 ;
INFO  05:28:41,296 - #8 int
INFO  05:28:41,297 - #8 e
INFO  05:28:41,298 - #27 ;
INFO  05:28:41,298 - #8 bool
INFO  05:28:41,299 - #8 cond
INFO  05:28:41,299 - #27 ;
INFO  05:28:41,299 - #20 {
INFO  05:28:41,299 - #6 void
INFO  05:28:41,299 - #8 main
INFO  05:28:41,299 - #29 (
INFO  05:28:41,300 - #30 )
INFO  05:28:41,300 - #20 {
INFO  05:28:41,300 - #8 cond
INFO  05:28:41,300 - #24 =
INFO  05:28:41,301 - #12 false
INFO  05:28:41,301 - #27 ;
INFO  05:28:41,302 - #31 if
INFO  05:28:41,302 - #29 (
INFO  05:28:41,303 - #8 cond
INFO  05:28:41,303 - #30 )
INFO  05:28:41,303 - #20 {
INFO  05:28:41,303 - #3 print
INFO  05:28:41,303 - #29 (
INFO  05:28:41,303 - #8 c
INFO  05:28:41,304 - #30 )
INFO  05:28:41,304 - #27 ;
INFO  05:28:41,304 - #21 }
INFO  05:28:41,304 - #3 print
INFO  05:28:41,304 - #29 (
INFO  05:28:41,305 - #8 d
INFO  05:28:41,305 - #30 )
INFO  05:28:41,305 - #27 ;
INFO  05:28:41,305 - #21 }
INFO  05:28:41,305 - #21 }
INFO  05:28:41,306 - =====================SINTAKSNO_STABLO=========================
INFO  05:28:41,308 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:28:41,308 - ==============================================================
INFO  05:28:41,324 - Pocetak obrade programa Program na liniji 1
INFO  05:28:41,325 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:28:41,326 - Deklarisana konstanta c na liniji 2
INFO  05:28:41,326 - Deklarisana konstanta d na liniji 2
INFO  05:28:41,326 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:28:41,326 - Deklarisana promenljiva e na liniji 3
INFO  05:28:41,326 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:28:41,326 - Deklarisana promenljiva cond na liniji 3
INFO  05:28:41,328 - Pocetak obrade metode main na liniji 5
INFO  05:28:41,328 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:28:41,329 - Zavrsetak obrade programa Program na liniji 1
INFO  05:28:41,329 - ======================TABELA_SIMBOLA==========================
INFO  05:28:41,329 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:28:41,330 - ==============================================================
INFO  05:28:41,330 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:28:41,330 - ==============================================================
INFO  05:28:41,330 - ======================GENERISANJE_KODA========================
INFO  05:28:41,335 - Generisanje koda uspesno zavrseno!
INFO  05:28:41,335 - Generisanje izlaznog fajla test\program.obj
INFO  05:28:41,335 - ==============================================================
INFO  05:29:16,344 - Obrada ulaznog fajla test\program.mj
INFO  05:29:16,435 - #2 program
INFO  05:29:16,435 - #8 Program
INFO  05:29:16,435 - #5 const
INFO  05:29:16,436 - #8 int
INFO  05:29:16,436 - #8 c
INFO  05:29:16,436 - #24 =
INFO  05:29:16,436 - #9 10
INFO  05:29:16,437 - #28 ,
INFO  05:29:16,437 - #8 d
INFO  05:29:16,437 - #24 =
INFO  05:29:16,438 - #9 99
INFO  05:29:16,438 - #27 ;
INFO  05:29:16,438 - #8 int
INFO  05:29:16,439 - #8 e
INFO  05:29:16,439 - #27 ;
INFO  05:29:16,439 - #8 bool
INFO  05:29:16,440 - #8 cond
INFO  05:29:16,440 - #27 ;
INFO  05:29:16,441 - #20 {
INFO  05:29:16,441 - #6 void
INFO  05:29:16,441 - #8 main
INFO  05:29:16,441 - #29 (
INFO  05:29:16,442 - #30 )
INFO  05:29:16,442 - #20 {
INFO  05:29:16,442 - #8 cond
INFO  05:29:16,443 - #24 =
INFO  05:29:16,443 - #11 true
INFO  05:29:16,443 - #27 ;
INFO  05:29:16,444 - #31 if
INFO  05:29:16,444 - #29 (
INFO  05:29:16,444 - #8 cond
INFO  05:29:16,445 - #30 )
INFO  05:29:16,445 - #20 {
INFO  05:29:16,445 - #3 print
INFO  05:29:16,445 - #29 (
INFO  05:29:16,445 - #8 c
INFO  05:29:16,445 - #30 )
INFO  05:29:16,445 - #27 ;
INFO  05:29:16,446 - #21 }
INFO  05:29:16,446 - #3 print
INFO  05:29:16,446 - #29 (
INFO  05:29:16,446 - #8 d
INFO  05:29:16,446 - #30 )
INFO  05:29:16,446 - #27 ;
INFO  05:29:16,446 - #21 }
INFO  05:29:16,446 - #21 }
INFO  05:29:16,447 - =====================SINTAKSNO_STABLO=========================
INFO  05:29:16,449 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:29:16,451 - ==============================================================
INFO  05:29:16,468 - Pocetak obrade programa Program na liniji 1
INFO  05:29:16,468 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:29:16,468 - Deklarisana konstanta c na liniji 2
INFO  05:29:16,469 - Deklarisana konstanta d na liniji 2
INFO  05:29:16,469 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:29:16,469 - Deklarisana promenljiva e na liniji 3
INFO  05:29:16,469 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:29:16,469 - Deklarisana promenljiva cond na liniji 3
INFO  05:29:16,470 - Pocetak obrade metode main na liniji 5
INFO  05:29:16,471 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:29:16,471 - Zavrsetak obrade programa Program na liniji 1
INFO  05:29:16,471 - ======================TABELA_SIMBOLA==========================
INFO  05:29:16,472 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:29:16,472 - ==============================================================
INFO  05:29:16,472 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:29:16,472 - ==============================================================
INFO  05:29:16,472 - ======================GENERISANJE_KODA========================
INFO  05:29:16,477 - Generisanje koda uspesno zavrseno!
INFO  05:29:16,477 - Generisanje izlaznog fajla test\program.obj
INFO  05:29:16,477 - ==============================================================
INFO  05:29:50,328 - Obrada ulaznog fajla test\program.mj
INFO  05:29:50,441 - #2 program
INFO  05:29:50,442 - #8 Program
INFO  05:29:50,442 - #5 const
INFO  05:29:50,444 - #8 int
INFO  05:29:50,444 - #8 c
INFO  05:29:50,445 - #24 =
INFO  05:29:50,445 - #9 10
INFO  05:29:50,445 - #28 ,
INFO  05:29:50,447 - #8 d
INFO  05:29:50,447 - #24 =
INFO  05:29:50,447 - #9 99
INFO  05:29:50,447 - #27 ;
INFO  05:29:50,448 - #8 int
INFO  05:29:50,450 - #8 e
INFO  05:29:50,450 - #27 ;
INFO  05:29:50,450 - #8 bool
INFO  05:29:50,452 - #8 cond
INFO  05:29:50,452 - #27 ;
INFO  05:29:50,452 - #20 {
INFO  05:29:50,452 - #6 void
INFO  05:29:50,452 - #8 main
INFO  05:29:50,452 - #29 (
INFO  05:29:50,453 - #30 )
INFO  05:29:50,453 - #20 {
INFO  05:29:50,454 - #8 cond
INFO  05:29:50,454 - #24 =
INFO  05:29:50,454 - #11 true
INFO  05:29:50,454 - #27 ;
INFO  05:29:50,455 - #31 if
INFO  05:29:50,456 - #29 (
INFO  05:29:50,456 - #8 cond
INFO  05:29:50,456 - #30 )
INFO  05:29:50,457 - #20 {
INFO  05:29:50,458 - #3 print
INFO  05:29:50,458 - #29 (
INFO  05:29:50,458 - #8 c
INFO  05:29:50,458 - #30 )
INFO  05:29:50,459 - #27 ;
INFO  05:29:50,459 - #21 }
INFO  05:29:50,459 - #3 print
INFO  05:29:50,460 - #29 (
INFO  05:29:50,460 - #8 d
INFO  05:29:50,461 - #30 )
INFO  05:29:50,461 - #27 ;
INFO  05:29:50,461 - #21 }
INFO  05:29:50,461 - #21 }
INFO  05:29:50,463 - =====================SINTAKSNO_STABLO=========================
INFO  05:29:50,465 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:29:50,466 - ==============================================================
INFO  05:29:50,484 - Pocetak obrade programa Program na liniji 1
INFO  05:29:50,484 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:29:50,486 - Deklarisana konstanta c na liniji 2
INFO  05:29:50,486 - Deklarisana konstanta d na liniji 2
INFO  05:29:50,486 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:29:50,487 - Deklarisana promenljiva e na liniji 3
INFO  05:29:50,487 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:29:50,487 - Deklarisana promenljiva cond na liniji 3
INFO  05:29:50,488 - Pocetak obrade metode main na liniji 5
INFO  05:29:50,489 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:29:50,489 - Zavrsetak obrade programa Program na liniji 1
INFO  05:29:50,489 - ======================TABELA_SIMBOLA==========================
INFO  05:29:50,491 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:29:50,491 - ==============================================================
INFO  05:29:50,491 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:29:50,491 - ==============================================================
INFO  05:29:50,491 - ======================GENERISANJE_KODA========================
INFO  05:29:50,498 - Generisanje koda uspesno zavrseno!
INFO  05:29:50,499 - Generisanje izlaznog fajla test\program.obj
INFO  05:29:50,499 - ==============================================================
INFO  05:30:04,216 - Obrada ulaznog fajla test\program.mj
INFO  05:30:04,295 - #2 program
INFO  05:30:04,295 - #8 Program
INFO  05:30:04,295 - #5 const
INFO  05:30:04,296 - #8 int
INFO  05:30:04,296 - #8 c
INFO  05:30:04,297 - #24 =
INFO  05:30:04,297 - #9 10
INFO  05:30:04,297 - #28 ,
INFO  05:30:04,298 - #8 d
INFO  05:30:04,298 - #24 =
INFO  05:30:04,298 - #9 99
INFO  05:30:04,298 - #27 ;
INFO  05:30:04,298 - #8 int
INFO  05:30:04,299 - #8 e
INFO  05:30:04,300 - #27 ;
INFO  05:30:04,300 - #8 bool
INFO  05:30:04,301 - #8 cond
INFO  05:30:04,301 - #27 ;
INFO  05:30:04,301 - #20 {
INFO  05:30:04,301 - #6 void
INFO  05:30:04,301 - #8 main
INFO  05:30:04,301 - #29 (
INFO  05:30:04,302 - #30 )
INFO  05:30:04,302 - #20 {
INFO  05:30:04,302 - #8 cond
INFO  05:30:04,303 - #24 =
INFO  05:30:04,303 - #11 true
INFO  05:30:04,303 - #27 ;
INFO  05:30:04,304 - #31 if
INFO  05:30:04,304 - #29 (
INFO  05:30:04,304 - #8 cond
INFO  05:30:04,304 - #30 )
INFO  05:30:04,305 - #20 {
INFO  05:30:04,305 - #3 print
INFO  05:30:04,305 - #29 (
INFO  05:30:04,305 - #8 c
INFO  05:30:04,305 - #30 )
INFO  05:30:04,305 - #27 ;
INFO  05:30:04,305 - #21 }
INFO  05:30:04,306 - #3 print
INFO  05:30:04,306 - #29 (
INFO  05:30:04,306 - #8 d
INFO  05:30:04,306 - #30 )
INFO  05:30:04,306 - #27 ;
INFO  05:30:04,306 - #21 }
INFO  05:30:04,306 - #21 }
INFO  05:30:04,307 - =====================SINTAKSNO_STABLO=========================
INFO  05:30:04,309 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:30:04,310 - ==============================================================
INFO  05:30:04,327 - Pocetak obrade programa Program na liniji 1
INFO  05:30:04,327 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:30:04,328 - Deklarisana konstanta c na liniji 2
INFO  05:30:04,328 - Deklarisana konstanta d na liniji 2
INFO  05:30:04,328 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:30:04,329 - Deklarisana promenljiva e na liniji 3
INFO  05:30:04,329 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:30:04,329 - Deklarisana promenljiva cond na liniji 3
INFO  05:30:04,330 - Pocetak obrade metode main na liniji 5
INFO  05:30:04,330 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:30:04,330 - Zavrsetak obrade programa Program na liniji 1
INFO  05:30:04,330 - ======================TABELA_SIMBOLA==========================
INFO  05:30:04,331 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:30:04,331 - ==============================================================
INFO  05:30:04,331 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:30:04,331 - ==============================================================
INFO  05:30:04,331 - ======================GENERISANJE_KODA========================
INFO  05:30:04,336 - Generisanje koda uspesno zavrseno!
INFO  05:30:04,336 - Generisanje izlaznog fajla test\program.obj
INFO  05:30:04,336 - ==============================================================
INFO  05:32:16,197 - Obrada ulaznog fajla test\program.mj
INFO  05:32:16,276 - #2 program
INFO  05:32:16,276 - #8 Program
INFO  05:32:16,276 - #5 const
INFO  05:32:16,277 - #8 int
INFO  05:32:16,277 - #8 c
INFO  05:32:16,278 - #24 =
INFO  05:32:16,278 - #9 10
INFO  05:32:16,278 - #28 ,
INFO  05:32:16,279 - #8 d
INFO  05:32:16,279 - #24 =
INFO  05:32:16,279 - #9 99
INFO  05:32:16,279 - #27 ;
INFO  05:32:16,279 - #8 int
INFO  05:32:16,280 - #8 e
INFO  05:32:16,280 - #27 ;
INFO  05:32:16,281 - #8 bool
INFO  05:32:16,282 - #8 cond
INFO  05:32:16,282 - #27 ;
INFO  05:32:16,282 - #20 {
INFO  05:32:16,282 - #6 void
INFO  05:32:16,282 - #8 main
INFO  05:32:16,282 - #29 (
INFO  05:32:16,283 - #30 )
INFO  05:32:16,283 - #20 {
INFO  05:32:16,283 - #8 cond
INFO  05:32:16,283 - #24 =
INFO  05:32:16,283 - #11 true
INFO  05:32:16,283 - #27 ;
INFO  05:32:16,285 - #31 if
INFO  05:32:16,285 - #29 (
INFO  05:32:16,286 - #8 cond
INFO  05:32:16,286 - #30 )
INFO  05:32:16,286 - #20 {
INFO  05:32:16,287 - #3 print
INFO  05:32:16,287 - #29 (
INFO  05:32:16,287 - #8 c
INFO  05:32:16,287 - #30 )
INFO  05:32:16,287 - #27 ;
INFO  05:32:16,287 - #21 }
INFO  05:32:16,287 - #3 print
INFO  05:32:16,288 - #29 (
INFO  05:32:16,288 - #8 d
INFO  05:32:16,288 - #30 )
INFO  05:32:16,288 - #27 ;
INFO  05:32:16,288 - #21 }
INFO  05:32:16,288 - #21 }
INFO  05:32:16,289 - =====================SINTAKSNO_STABLO=========================
INFO  05:32:16,290 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:32:16,291 - ==============================================================
INFO  05:32:16,305 - Pocetak obrade programa Program na liniji 1
INFO  05:32:16,306 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:32:16,307 - Deklarisana konstanta c na liniji 2
INFO  05:32:16,307 - Deklarisana konstanta d na liniji 2
INFO  05:32:16,308 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:32:16,308 - Deklarisana promenljiva e na liniji 3
INFO  05:32:16,308 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:32:16,308 - Deklarisana promenljiva cond na liniji 3
INFO  05:32:16,309 - Pocetak obrade metode main na liniji 5
INFO  05:32:16,310 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:32:16,310 - Zavrsetak obrade programa Program na liniji 1
INFO  05:32:16,310 - ======================TABELA_SIMBOLA==========================
INFO  05:32:16,310 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:32:16,311 - ==============================================================
INFO  05:32:16,311 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:32:16,311 - ==============================================================
INFO  05:32:16,311 - ======================GENERISANJE_KODA========================
INFO  05:32:16,318 - Generisanje koda uspesno zavrseno!
INFO  05:32:16,319 - Generisanje izlaznog fajla test\program.obj
INFO  05:32:16,319 - ==============================================================
INFO  05:33:36,580 - Obrada ulaznog fajla test\program.mj
INFO  05:33:36,692 - #2 program
INFO  05:33:36,692 - #8 Program
INFO  05:33:36,693 - #5 const
INFO  05:33:36,694 - #8 int
INFO  05:33:36,694 - #8 c
INFO  05:33:36,695 - #24 =
INFO  05:33:36,695 - #9 10
INFO  05:33:36,695 - #28 ,
INFO  05:33:36,697 - #8 d
INFO  05:33:36,697 - #24 =
INFO  05:33:36,697 - #9 99
INFO  05:33:36,697 - #27 ;
INFO  05:33:36,698 - #8 int
INFO  05:33:36,699 - #8 e
INFO  05:33:36,699 - #27 ;
INFO  05:33:36,700 - #8 bool
INFO  05:33:36,701 - #8 cond
INFO  05:33:36,702 - #27 ;
INFO  05:33:36,702 - #20 {
INFO  05:33:36,702 - #6 void
INFO  05:33:36,703 - #8 main
INFO  05:33:36,703 - #29 (
INFO  05:33:36,704 - #30 )
INFO  05:33:36,704 - #20 {
INFO  05:33:36,704 - #8 cond
INFO  05:33:36,705 - #24 =
INFO  05:33:36,705 - #11 true
INFO  05:33:36,705 - #27 ;
INFO  05:33:36,706 - #31 if
INFO  05:33:36,707 - #29 (
INFO  05:33:36,707 - #8 cond
INFO  05:33:36,707 - #30 )
INFO  05:33:36,708 - #20 {
INFO  05:33:36,708 - #3 print
INFO  05:33:36,708 - #29 (
INFO  05:33:36,708 - #8 c
INFO  05:33:36,708 - #30 )
INFO  05:33:36,708 - #27 ;
INFO  05:33:36,708 - #21 }
INFO  05:33:36,709 - #3 print
INFO  05:33:36,709 - #29 (
INFO  05:33:36,709 - #8 d
INFO  05:33:36,709 - #30 )
INFO  05:33:36,710 - #27 ;
INFO  05:33:36,710 - #21 }
INFO  05:33:36,710 - #21 }
INFO  05:33:36,711 - =====================SINTAKSNO_STABLO=========================
INFO  05:33:36,713 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:33:36,713 - ==============================================================
INFO  05:33:36,731 - Pocetak obrade programa Program na liniji 1
INFO  05:33:36,731 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:33:36,733 - Deklarisana konstanta c na liniji 2
INFO  05:33:36,733 - Deklarisana konstanta d na liniji 2
INFO  05:33:36,733 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:33:36,733 - Deklarisana promenljiva e na liniji 3
INFO  05:33:36,733 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:33:36,733 - Deklarisana promenljiva cond na liniji 3
INFO  05:33:36,734 - Pocetak obrade metode main na liniji 5
INFO  05:33:36,735 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:33:36,735 - Zavrsetak obrade programa Program na liniji 1
INFO  05:33:36,735 - ======================TABELA_SIMBOLA==========================
INFO  05:33:36,736 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:33:36,736 - ==============================================================
INFO  05:33:36,736 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:33:36,736 - ==============================================================
INFO  05:33:36,736 - ======================GENERISANJE_KODA========================
INFO  05:33:36,743 - Generisanje koda uspesno zavrseno!
INFO  05:33:36,743 - Generisanje izlaznog fajla test\program.obj
INFO  05:33:36,743 - ==============================================================
INFO  05:34:08,062 - Obrada ulaznog fajla test\program.mj
INFO  05:34:08,157 - #2 program
INFO  05:34:08,157 - #8 Program
INFO  05:34:08,157 - #5 const
INFO  05:34:08,158 - #8 int
INFO  05:34:08,158 - #8 c
INFO  05:34:08,159 - #24 =
INFO  05:34:08,159 - #9 10
INFO  05:34:08,159 - #28 ,
INFO  05:34:08,160 - #8 d
INFO  05:34:08,160 - #24 =
INFO  05:34:08,160 - #9 99
INFO  05:34:08,160 - #27 ;
INFO  05:34:08,160 - #8 int
INFO  05:34:08,162 - #8 e
INFO  05:34:08,162 - #27 ;
INFO  05:34:08,162 - #8 bool
INFO  05:34:08,163 - #8 cond
INFO  05:34:08,163 - #27 ;
INFO  05:34:08,163 - #20 {
INFO  05:34:08,163 - #6 void
INFO  05:34:08,164 - #8 main
INFO  05:34:08,164 - #29 (
INFO  05:34:08,164 - #30 )
INFO  05:34:08,165 - #20 {
INFO  05:34:08,165 - #8 cond
INFO  05:34:08,165 - #24 =
INFO  05:34:08,165 - #11 true
INFO  05:34:08,165 - #27 ;
INFO  05:34:08,166 - #31 if
INFO  05:34:08,166 - #29 (
INFO  05:34:08,166 - #8 cond
INFO  05:34:08,166 - #30 )
INFO  05:34:08,167 - #20 {
INFO  05:34:08,167 - #3 print
INFO  05:34:08,167 - #29 (
INFO  05:34:08,167 - #8 c
INFO  05:34:08,167 - #30 )
INFO  05:34:08,167 - #27 ;
INFO  05:34:08,167 - #21 }
INFO  05:34:08,167 - #3 print
INFO  05:34:08,168 - #29 (
INFO  05:34:08,168 - #8 d
INFO  05:34:08,168 - #30 )
INFO  05:34:08,168 - #27 ;
INFO  05:34:08,168 - #21 }
INFO  05:34:08,168 - #21 }
INFO  05:34:08,169 - =====================SINTAKSNO_STABLO=========================
INFO  05:34:08,170 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:34:08,172 - ==============================================================
INFO  05:34:08,185 - Pocetak obrade programa Program na liniji 1
INFO  05:34:08,186 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:34:08,187 - Deklarisana konstanta c na liniji 2
INFO  05:34:08,187 - Deklarisana konstanta d na liniji 2
INFO  05:34:08,187 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:34:08,187 - Deklarisana promenljiva e na liniji 3
INFO  05:34:08,188 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:34:08,188 - Deklarisana promenljiva cond na liniji 3
INFO  05:34:08,189 - Pocetak obrade metode main na liniji 5
INFO  05:34:08,189 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:34:08,189 - Zavrsetak obrade programa Program na liniji 1
INFO  05:34:08,189 - ======================TABELA_SIMBOLA==========================
INFO  05:34:08,190 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:34:08,190 - ==============================================================
INFO  05:34:08,190 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:34:08,190 - ==============================================================
INFO  05:34:08,190 - ======================GENERISANJE_KODA========================
INFO  05:34:08,195 - Generisanje koda uspesno zavrseno!
INFO  05:34:08,196 - Generisanje izlaznog fajla test\program.obj
INFO  05:34:08,196 - ==============================================================
INFO  05:35:19,198 - Obrada ulaznog fajla test\program.mj
INFO  05:35:19,275 - #2 program
INFO  05:35:19,275 - #8 Program
INFO  05:35:19,275 - #5 const
INFO  05:35:19,276 - #8 int
INFO  05:35:19,276 - #8 c
INFO  05:35:19,277 - #24 =
INFO  05:35:19,277 - #9 10
INFO  05:35:19,277 - #28 ,
INFO  05:35:19,278 - #8 d
INFO  05:35:19,278 - #24 =
INFO  05:35:19,278 - #9 99
INFO  05:35:19,278 - #27 ;
INFO  05:35:19,278 - #8 int
INFO  05:35:19,279 - #8 e
INFO  05:35:19,279 - #27 ;
INFO  05:35:19,280 - #8 bool
INFO  05:35:19,281 - #8 cond
INFO  05:35:19,281 - #27 ;
INFO  05:35:19,281 - #20 {
INFO  05:35:19,281 - #6 void
INFO  05:35:19,281 - #8 main
INFO  05:35:19,281 - #29 (
INFO  05:35:19,282 - #30 )
INFO  05:35:19,282 - #20 {
INFO  05:35:19,282 - #8 cond
INFO  05:35:19,282 - #24 =
INFO  05:35:19,282 - #11 true
INFO  05:35:19,283 - #27 ;
INFO  05:35:19,283 - #31 if
INFO  05:35:19,283 - #29 (
INFO  05:35:19,284 - #8 cond
INFO  05:35:19,284 - #30 )
INFO  05:35:19,284 - #20 {
INFO  05:35:19,284 - #3 print
INFO  05:35:19,284 - #29 (
INFO  05:35:19,284 - #8 c
INFO  05:35:19,284 - #30 )
INFO  05:35:19,285 - #27 ;
INFO  05:35:19,285 - #21 }
INFO  05:35:19,285 - #3 print
INFO  05:35:19,286 - #29 (
INFO  05:35:19,286 - #8 d
INFO  05:35:19,286 - #30 )
INFO  05:35:19,286 - #27 ;
INFO  05:35:19,286 - #21 }
INFO  05:35:19,286 - #21 }
INFO  05:35:19,287 - =====================SINTAKSNO_STABLO=========================
INFO  05:35:19,289 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:35:19,295 - ==============================================================
INFO  05:35:19,310 - Pocetak obrade programa Program na liniji 1
INFO  05:35:19,310 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:35:19,311 - Deklarisana konstanta c na liniji 2
INFO  05:35:19,312 - Deklarisana konstanta d na liniji 2
INFO  05:35:19,312 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:35:19,312 - Deklarisana promenljiva e na liniji 3
INFO  05:35:19,312 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:35:19,312 - Deklarisana promenljiva cond na liniji 3
INFO  05:35:19,313 - Pocetak obrade metode main na liniji 5
INFO  05:35:19,313 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:35:19,313 - Zavrsetak obrade programa Program na liniji 1
INFO  05:35:19,313 - ======================TABELA_SIMBOLA==========================
INFO  05:35:19,314 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:35:19,314 - ==============================================================
INFO  05:35:19,314 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:35:19,314 - ==============================================================
INFO  05:35:19,314 - ======================GENERISANJE_KODA========================
INFO  05:35:19,319 - Generisanje koda uspesno zavrseno!
INFO  05:35:19,320 - Generisanje izlaznog fajla test\program.obj
INFO  05:35:19,320 - ==============================================================
INFO  05:41:14,964 - Obrada ulaznog fajla test\program.mj
INFO  05:41:15,046 - #2 program
INFO  05:41:15,046 - #8 Program
INFO  05:41:15,047 - #5 const
INFO  05:41:15,047 - #8 int
INFO  05:41:15,047 - #8 c
INFO  05:41:15,048 - #24 =
INFO  05:41:15,049 - #9 10
INFO  05:41:15,049 - #28 ,
INFO  05:41:15,050 - #8 d
INFO  05:41:15,050 - #24 =
INFO  05:41:15,050 - #9 99
INFO  05:41:15,050 - #27 ;
INFO  05:41:15,051 - #8 int
INFO  05:41:15,052 - #8 e
INFO  05:41:15,052 - #27 ;
INFO  05:41:15,052 - #8 bool
INFO  05:41:15,053 - #8 cond
INFO  05:41:15,053 - #27 ;
INFO  05:41:15,053 - #20 {
INFO  05:41:15,054 - #6 void
INFO  05:41:15,054 - #8 main
INFO  05:41:15,054 - #29 (
INFO  05:41:15,055 - #30 )
INFO  05:41:15,055 - #20 {
INFO  05:41:15,055 - #8 cond
INFO  05:41:15,055 - #24 =
INFO  05:41:15,055 - #11 true
INFO  05:41:15,055 - #27 ;
INFO  05:41:15,056 - #31 if
INFO  05:41:15,056 - #29 (
INFO  05:41:15,057 - #8 cond
INFO  05:41:15,057 - #30 )
INFO  05:41:15,057 - #20 {
INFO  05:41:15,057 - #3 print
INFO  05:41:15,057 - #29 (
INFO  05:41:15,057 - #8 c
INFO  05:41:15,057 - #30 )
INFO  05:41:15,058 - #27 ;
INFO  05:41:15,058 - #21 }
INFO  05:41:15,058 - #3 print
INFO  05:41:15,058 - #29 (
INFO  05:41:15,058 - #8 d
INFO  05:41:15,058 - #30 )
INFO  05:41:15,059 - #27 ;
INFO  05:41:15,059 - #21 }
INFO  05:41:15,059 - #21 }
INFO  05:41:15,060 - =====================SINTAKSNO_STABLO=========================
INFO  05:41:15,061 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           c
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:41:15,062 - ==============================================================
INFO  05:41:15,076 - Pocetak obrade programa Program na liniji 1
INFO  05:41:15,076 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:41:15,077 - Deklarisana konstanta c na liniji 2
INFO  05:41:15,077 - Deklarisana konstanta d na liniji 2
INFO  05:41:15,078 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:41:15,078 - Deklarisana promenljiva e na liniji 3
INFO  05:41:15,078 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:41:15,078 - Deklarisana promenljiva cond na liniji 3
INFO  05:41:15,079 - Pocetak obrade metode main na liniji 5
INFO  05:41:15,079 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:41:15,079 - Zavrsetak obrade programa Program na liniji 1
INFO  05:41:15,079 - ======================TABELA_SIMBOLA==========================
INFO  05:41:15,080 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:41:15,080 - ==============================================================
INFO  05:41:15,080 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:41:15,080 - ==============================================================
INFO  05:41:15,080 - ======================GENERISANJE_KODA========================
INFO  05:41:15,087 - Generisanje koda uspesno zavrseno!
INFO  05:41:15,088 - Generisanje izlaznog fajla test\program.obj
INFO  05:41:15,088 - ==============================================================
INFO  05:48:52,489 - Obrada ulaznog fajla test\program.mj
INFO  05:48:52,574 - #2 program
INFO  05:48:52,574 - #8 Program
INFO  05:48:52,574 - #5 const
INFO  05:48:52,576 - #8 int
INFO  05:48:52,576 - #8 c
INFO  05:48:52,577 - #24 =
INFO  05:48:52,577 - #9 10
INFO  05:48:52,577 - #28 ,
INFO  05:48:52,578 - #8 d
INFO  05:48:52,578 - #24 =
INFO  05:48:52,578 - #9 99
INFO  05:48:52,578 - #27 ;
INFO  05:48:52,579 - #8 int
INFO  05:48:52,579 - #8 e
INFO  05:48:52,580 - #27 ;
INFO  05:48:52,580 - #8 bool
INFO  05:48:52,581 - #8 cond
INFO  05:48:52,581 - #27 ;
INFO  05:48:52,581 - #20 {
INFO  05:48:52,581 - #6 void
INFO  05:48:52,581 - #8 main
INFO  05:48:52,581 - #29 (
INFO  05:48:52,582 - #30 )
INFO  05:48:52,582 - #20 {
INFO  05:48:52,582 - #8 cond
INFO  05:48:52,583 - #24 =
INFO  05:48:52,583 - #11 true
INFO  05:48:52,583 - #27 ;
INFO  05:48:52,584 - #8 e
INFO  05:48:52,584 - #24 =
INFO  05:48:52,584 - #8 d
INFO  05:48:52,584 - #27 ;
INFO  05:48:52,584 - #31 if
INFO  05:48:52,584 - #29 (
INFO  05:48:52,585 - #8 cond
INFO  05:48:52,585 - #30 )
INFO  05:48:52,585 - #20 {
INFO  05:48:52,585 - #8 e
INFO  05:48:52,585 - #24 =
INFO  05:48:52,585 - #8 c
INFO  05:48:52,586 - #27 ;
INFO  05:48:52,586 - #21 }
INFO  05:48:52,586 - #3 print
INFO  05:48:52,587 - #29 (
INFO  05:48:52,587 - #8 e
INFO  05:48:52,587 - #30 )
INFO  05:48:52,587 - #27 ;
INFO  05:48:52,587 - #21 }
INFO  05:48:52,588 - #21 }
INFO  05:48:52,589 - =====================SINTAKSNO_STABLO=========================
INFO  05:48:52,590 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:48:52,591 - ==============================================================
INFO  05:48:52,606 - Pocetak obrade programa Program na liniji 1
INFO  05:48:52,606 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:48:52,607 - Deklarisana konstanta c na liniji 2
INFO  05:48:52,607 - Deklarisana konstanta d na liniji 2
INFO  05:48:52,607 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:48:52,607 - Deklarisana promenljiva e na liniji 3
INFO  05:48:52,607 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:48:52,607 - Deklarisana promenljiva cond na liniji 3
INFO  05:48:52,608 - Pocetak obrade metode main na liniji 5
INFO  05:48:52,608 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:48:52,608 - Zavrsetak obrade programa Program na liniji 1
INFO  05:48:52,609 - ======================TABELA_SIMBOLA==========================
INFO  05:48:52,609 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:48:52,609 - ==============================================================
INFO  05:48:52,609 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:48:52,609 - ==============================================================
INFO  05:48:52,609 - ======================GENERISANJE_KODA========================
INFO  05:48:52,614 - Generisanje koda uspesno zavrseno!
INFO  05:48:52,615 - Generisanje izlaznog fajla test\program.obj
INFO  05:48:52,615 - ==============================================================
INFO  05:49:37,643 - Obrada ulaznog fajla test\program.mj
INFO  05:49:37,736 - #2 program
INFO  05:49:37,736 - #8 Program
INFO  05:49:37,736 - #5 const
INFO  05:49:37,737 - #8 int
INFO  05:49:37,737 - #8 c
INFO  05:49:37,738 - #24 =
INFO  05:49:37,738 - #9 10
INFO  05:49:37,739 - #28 ,
INFO  05:49:37,740 - #8 d
INFO  05:49:37,740 - #24 =
INFO  05:49:37,740 - #9 99
INFO  05:49:37,740 - #27 ;
INFO  05:49:37,740 - #8 int
INFO  05:49:37,742 - #8 e
INFO  05:49:37,742 - #27 ;
INFO  05:49:37,742 - #8 bool
INFO  05:49:37,744 - #8 cond
INFO  05:49:37,744 - #27 ;
INFO  05:49:37,744 - #20 {
INFO  05:49:37,744 - #6 void
INFO  05:49:37,744 - #8 main
INFO  05:49:37,744 - #29 (
INFO  05:49:37,745 - #30 )
INFO  05:49:37,745 - #20 {
INFO  05:49:37,745 - #8 cond
INFO  05:49:37,746 - #24 =
INFO  05:49:37,746 - #12 false
INFO  05:49:37,746 - #27 ;
INFO  05:49:37,747 - #8 e
INFO  05:49:37,748 - #24 =
INFO  05:49:37,748 - #8 d
INFO  05:49:37,748 - #27 ;
INFO  05:49:37,748 - #31 if
INFO  05:49:37,749 - #29 (
INFO  05:49:37,749 - #8 cond
INFO  05:49:37,749 - #30 )
INFO  05:49:37,749 - #20 {
INFO  05:49:37,749 - #8 e
INFO  05:49:37,749 - #24 =
INFO  05:49:37,750 - #8 c
INFO  05:49:37,750 - #27 ;
INFO  05:49:37,750 - #21 }
INFO  05:49:37,750 - #3 print
INFO  05:49:37,751 - #29 (
INFO  05:49:37,751 - #8 e
INFO  05:49:37,751 - #30 )
INFO  05:49:37,752 - #27 ;
INFO  05:49:37,752 - #21 }
INFO  05:49:37,752 - #21 }
INFO  05:49:37,753 - =====================SINTAKSNO_STABLO=========================
INFO  05:49:37,754 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:49:37,755 - ==============================================================
INFO  05:49:37,771 - Pocetak obrade programa Program na liniji 1
INFO  05:49:37,771 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:49:37,772 - Deklarisana konstanta c na liniji 2
INFO  05:49:37,772 - Deklarisana konstanta d na liniji 2
INFO  05:49:37,772 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:49:37,772 - Deklarisana promenljiva e na liniji 3
INFO  05:49:37,772 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:49:37,773 - Deklarisana promenljiva cond na liniji 3
INFO  05:49:37,773 - Pocetak obrade metode main na liniji 5
INFO  05:49:37,774 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:49:37,774 - Zavrsetak obrade programa Program na liniji 1
INFO  05:49:37,774 - ======================TABELA_SIMBOLA==========================
INFO  05:49:37,774 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:49:37,775 - ==============================================================
INFO  05:49:37,775 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:49:37,775 - ==============================================================
INFO  05:49:37,775 - ======================GENERISANJE_KODA========================
INFO  05:49:37,779 - Generisanje koda uspesno zavrseno!
INFO  05:49:37,780 - Generisanje izlaznog fajla test\program.obj
INFO  05:49:37,780 - ==============================================================
INFO  05:50:44,264 - Obrada ulaznog fajla test\program.mj
INFO  05:50:44,348 - #2 program
INFO  05:50:44,349 - #8 Program
INFO  05:50:44,349 - #5 const
INFO  05:50:44,349 - #8 int
INFO  05:50:44,350 - #8 c
INFO  05:50:44,350 - #24 =
INFO  05:50:44,351 - #9 10
INFO  05:50:44,351 - #28 ,
INFO  05:50:44,352 - #8 d
INFO  05:50:44,352 - #24 =
INFO  05:50:44,352 - #9 99
INFO  05:50:44,352 - #27 ;
INFO  05:50:44,353 - #8 int
INFO  05:50:44,354 - #8 e
INFO  05:50:44,354 - #27 ;
INFO  05:50:44,354 - #8 bool
INFO  05:50:44,355 - #8 cond
INFO  05:50:44,356 - #27 ;
INFO  05:50:44,356 - #20 {
INFO  05:50:44,356 - #6 void
INFO  05:50:44,356 - #8 main
INFO  05:50:44,356 - #29 (
INFO  05:50:44,357 - #30 )
INFO  05:50:44,357 - #20 {
INFO  05:50:44,357 - #8 cond
INFO  05:50:44,357 - #24 =
INFO  05:50:44,357 - #12 false
INFO  05:50:44,357 - #27 ;
INFO  05:50:44,358 - #8 e
INFO  05:50:44,358 - #24 =
INFO  05:50:44,358 - #8 d
INFO  05:50:44,359 - #27 ;
INFO  05:50:44,359 - #31 if
INFO  05:50:44,359 - #29 (
INFO  05:50:44,359 - #8 cond
INFO  05:50:44,359 - #30 )
INFO  05:50:44,359 - #20 {
INFO  05:50:44,360 - #8 e
INFO  05:50:44,360 - #24 =
INFO  05:50:44,360 - #8 c
INFO  05:50:44,360 - #27 ;
INFO  05:50:44,360 - #21 }
INFO  05:50:44,360 - #3 print
INFO  05:50:44,360 - #29 (
INFO  05:50:44,360 - #8 e
INFO  05:50:44,361 - #30 )
INFO  05:50:44,361 - #27 ;
INFO  05:50:44,361 - #21 }
INFO  05:50:44,361 - #21 }
INFO  05:50:44,362 - =====================SINTAKSNO_STABLO=========================
INFO  05:50:44,364 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:50:44,365 - ==============================================================
INFO  05:50:44,377 - Pocetak obrade programa Program na liniji 1
INFO  05:50:44,377 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:50:44,378 - Deklarisana konstanta c na liniji 2
INFO  05:50:44,378 - Deklarisana konstanta d na liniji 2
INFO  05:50:44,378 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:50:44,378 - Deklarisana promenljiva e na liniji 3
INFO  05:50:44,379 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:50:44,379 - Deklarisana promenljiva cond na liniji 3
INFO  05:50:44,379 - Pocetak obrade metode main na liniji 5
INFO  05:50:44,380 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:50:44,380 - Zavrsetak obrade programa Program na liniji 1
INFO  05:50:44,380 - ======================TABELA_SIMBOLA==========================
INFO  05:50:44,380 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:50:44,380 - ==============================================================
INFO  05:50:44,380 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:50:44,381 - ==============================================================
INFO  05:50:44,381 - ======================GENERISANJE_KODA========================
INFO  05:50:44,386 - Generisanje koda uspesno zavrseno!
INFO  05:50:44,386 - Generisanje izlaznog fajla test\program.obj
INFO  05:50:44,386 - ==============================================================
INFO  05:51:12,595 - Obrada ulaznog fajla test\program.mj
INFO  05:51:12,673 - #2 program
INFO  05:51:12,673 - #8 Program
INFO  05:51:12,674 - #5 const
INFO  05:51:12,675 - #8 int
INFO  05:51:12,676 - #8 c
INFO  05:51:12,676 - #24 =
INFO  05:51:12,677 - #9 10
INFO  05:51:12,677 - #28 ,
INFO  05:51:12,678 - #8 d
INFO  05:51:12,678 - #24 =
INFO  05:51:12,678 - #9 99
INFO  05:51:12,678 - #27 ;
INFO  05:51:12,679 - #8 int
INFO  05:51:12,680 - #8 e
INFO  05:51:12,680 - #27 ;
INFO  05:51:12,680 - #8 bool
INFO  05:51:12,682 - #8 cond
INFO  05:51:12,682 - #27 ;
INFO  05:51:12,682 - #20 {
INFO  05:51:12,682 - #6 void
INFO  05:51:12,682 - #8 main
INFO  05:51:12,682 - #29 (
INFO  05:51:12,683 - #30 )
INFO  05:51:12,683 - #20 {
INFO  05:51:12,683 - #8 cond
INFO  05:51:12,683 - #24 =
INFO  05:51:12,683 - #12 false
INFO  05:51:12,683 - #27 ;
INFO  05:51:12,684 - #8 e
INFO  05:51:12,684 - #24 =
INFO  05:51:12,685 - #8 d
INFO  05:51:12,685 - #27 ;
INFO  05:51:12,685 - #31 if
INFO  05:51:12,685 - #29 (
INFO  05:51:12,685 - #8 cond
INFO  05:51:12,685 - #30 )
INFO  05:51:12,686 - #20 {
INFO  05:51:12,686 - #8 e
INFO  05:51:12,686 - #24 =
INFO  05:51:12,686 - #8 c
INFO  05:51:12,686 - #27 ;
INFO  05:51:12,687 - #21 }
INFO  05:51:12,687 - #3 print
INFO  05:51:12,687 - #29 (
INFO  05:51:12,687 - #8 e
INFO  05:51:12,687 - #30 )
INFO  05:51:12,688 - #27 ;
INFO  05:51:12,688 - #21 }
INFO  05:51:12,688 - #21 }
INFO  05:51:12,689 - =====================SINTAKSNO_STABLO=========================
INFO  05:51:12,693 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:51:12,694 - ==============================================================
INFO  05:51:12,711 - Pocetak obrade programa Program na liniji 1
INFO  05:51:12,711 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:51:12,713 - Deklarisana konstanta c na liniji 2
INFO  05:51:12,713 - Deklarisana konstanta d na liniji 2
INFO  05:51:12,713 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:51:12,713 - Deklarisana promenljiva e na liniji 3
INFO  05:51:12,713 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:51:12,713 - Deklarisana promenljiva cond na liniji 3
INFO  05:51:12,714 - Pocetak obrade metode main na liniji 5
INFO  05:51:12,715 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:51:12,715 - Zavrsetak obrade programa Program na liniji 1
INFO  05:51:12,715 - ======================TABELA_SIMBOLA==========================
INFO  05:51:12,716 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:51:12,716 - ==============================================================
INFO  05:51:12,716 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:51:12,716 - ==============================================================
INFO  05:51:12,716 - ======================GENERISANJE_KODA========================
INFO  05:51:12,723 - Generisanje koda uspesno zavrseno!
INFO  05:51:12,723 - Generisanje izlaznog fajla test\program.obj
INFO  05:51:12,723 - ==============================================================
INFO  05:51:41,977 - Obrada ulaznog fajla test\program.mj
INFO  05:51:42,083 - #2 program
INFO  05:51:42,083 - #8 Program
INFO  05:51:42,083 - #5 const
INFO  05:51:42,085 - #8 int
INFO  05:51:42,085 - #8 c
INFO  05:51:42,086 - #24 =
INFO  05:51:42,086 - #9 10
INFO  05:51:42,086 - #28 ,
INFO  05:51:42,087 - #8 d
INFO  05:51:42,088 - #24 =
INFO  05:51:42,088 - #9 99
INFO  05:51:42,088 - #27 ;
INFO  05:51:42,088 - #8 int
INFO  05:51:42,090 - #8 e
INFO  05:51:42,090 - #27 ;
INFO  05:51:42,090 - #8 bool
INFO  05:51:42,093 - #8 cond
INFO  05:51:42,093 - #27 ;
INFO  05:51:42,094 - #20 {
INFO  05:51:42,094 - #6 void
INFO  05:51:42,094 - #8 main
INFO  05:51:42,094 - #29 (
INFO  05:51:42,095 - #30 )
INFO  05:51:42,096 - #20 {
INFO  05:51:42,096 - #8 cond
INFO  05:51:42,096 - #24 =
INFO  05:51:42,097 - #12 false
INFO  05:51:42,097 - #27 ;
INFO  05:51:42,098 - #8 e
INFO  05:51:42,099 - #24 =
INFO  05:51:42,099 - #8 d
INFO  05:51:42,099 - #27 ;
INFO  05:51:42,099 - #31 if
INFO  05:51:42,100 - #29 (
INFO  05:51:42,100 - #8 cond
INFO  05:51:42,100 - #30 )
INFO  05:51:42,101 - #20 {
INFO  05:51:42,101 - #8 e
INFO  05:51:42,101 - #24 =
INFO  05:51:42,101 - #8 c
INFO  05:51:42,102 - #27 ;
INFO  05:51:42,102 - #21 }
INFO  05:51:42,102 - #3 print
INFO  05:51:42,102 - #29 (
INFO  05:51:42,103 - #8 e
INFO  05:51:42,103 - #30 )
INFO  05:51:42,103 - #27 ;
INFO  05:51:42,103 - #21 }
INFO  05:51:42,103 - #21 }
INFO  05:51:42,104 - =====================SINTAKSNO_STABLO=========================
INFO  05:51:42,107 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:51:42,108 - ==============================================================
INFO  05:51:42,129 - Pocetak obrade programa Program na liniji 1
INFO  05:51:42,129 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:51:42,130 - Deklarisana konstanta c na liniji 2
INFO  05:51:42,130 - Deklarisana konstanta d na liniji 2
INFO  05:51:42,130 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:51:42,130 - Deklarisana promenljiva e na liniji 3
INFO  05:51:42,131 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:51:42,131 - Deklarisana promenljiva cond na liniji 3
INFO  05:51:42,132 - Pocetak obrade metode main na liniji 5
INFO  05:51:42,133 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:51:42,133 - Zavrsetak obrade programa Program na liniji 1
INFO  05:51:42,133 - ======================TABELA_SIMBOLA==========================
INFO  05:51:42,134 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:51:42,134 - ==============================================================
INFO  05:51:42,134 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:51:42,134 - ==============================================================
INFO  05:51:42,134 - ======================GENERISANJE_KODA========================
INFO  05:51:42,141 - Generisanje koda uspesno zavrseno!
INFO  05:51:42,141 - Generisanje izlaznog fajla test\program.obj
INFO  05:51:42,141 - ==============================================================
INFO  05:53:00,293 - Obrada ulaznog fajla test\program.mj
INFO  05:53:00,372 - #2 program
INFO  05:53:00,372 - #8 Program
INFO  05:53:00,372 - #5 const
INFO  05:53:00,373 - #8 int
INFO  05:53:00,373 - #8 c
INFO  05:53:00,374 - #24 =
INFO  05:53:00,374 - #9 10
INFO  05:53:00,374 - #28 ,
INFO  05:53:00,375 - #8 d
INFO  05:53:00,375 - #24 =
INFO  05:53:00,375 - #9 99
INFO  05:53:00,375 - #27 ;
INFO  05:53:00,376 - #8 int
INFO  05:53:00,377 - #8 e
INFO  05:53:00,377 - #27 ;
INFO  05:53:00,378 - #8 bool
INFO  05:53:00,379 - #8 cond
INFO  05:53:00,379 - #27 ;
INFO  05:53:00,379 - #20 {
INFO  05:53:00,379 - #6 void
INFO  05:53:00,379 - #8 main
INFO  05:53:00,379 - #29 (
INFO  05:53:00,381 - #30 )
INFO  05:53:00,381 - #20 {
INFO  05:53:00,381 - #8 cond
INFO  05:53:00,381 - #24 =
INFO  05:53:00,381 - #12 false
INFO  05:53:00,381 - #27 ;
INFO  05:53:00,382 - #8 e
INFO  05:53:00,382 - #24 =
INFO  05:53:00,382 - #8 d
INFO  05:53:00,382 - #27 ;
INFO  05:53:00,382 - #31 if
INFO  05:53:00,383 - #29 (
INFO  05:53:00,383 - #8 cond
INFO  05:53:00,383 - #30 )
INFO  05:53:00,383 - #20 {
INFO  05:53:00,383 - #8 e
INFO  05:53:00,383 - #24 =
INFO  05:53:00,383 - #8 c
INFO  05:53:00,384 - #27 ;
INFO  05:53:00,384 - #21 }
INFO  05:53:00,384 - #3 print
INFO  05:53:00,384 - #29 (
INFO  05:53:00,384 - #8 e
INFO  05:53:00,384 - #30 )
INFO  05:53:00,384 - #27 ;
INFO  05:53:00,385 - #21 }
INFO  05:53:00,385 - #21 }
INFO  05:53:00,386 - =====================SINTAKSNO_STABLO=========================
INFO  05:53:00,387 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:53:00,388 - ==============================================================
INFO  05:53:00,403 - Pocetak obrade programa Program na liniji 1
INFO  05:53:00,403 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:53:00,405 - Deklarisana konstanta c na liniji 2
INFO  05:53:00,405 - Deklarisana konstanta d na liniji 2
INFO  05:53:00,405 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:53:00,405 - Deklarisana promenljiva e na liniji 3
INFO  05:53:00,405 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:53:00,405 - Deklarisana promenljiva cond na liniji 3
INFO  05:53:00,406 - Pocetak obrade metode main na liniji 5
INFO  05:53:00,406 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:53:00,406 - Zavrsetak obrade programa Program na liniji 1
INFO  05:53:00,407 - ======================TABELA_SIMBOLA==========================
INFO  05:53:00,407 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:53:00,407 - ==============================================================
INFO  05:53:00,408 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:53:00,408 - ==============================================================
INFO  05:53:00,408 - ======================GENERISANJE_KODA========================
INFO  05:53:00,414 - Generisanje koda uspesno zavrseno!
INFO  05:53:00,415 - Generisanje izlaznog fajla test\program.obj
INFO  05:53:00,415 - ==============================================================
INFO  05:54:57,796 - Obrada ulaznog fajla test\program.mj
INFO  05:54:57,880 - #2 program
INFO  05:54:57,880 - #8 Program
INFO  05:54:57,880 - #5 const
INFO  05:54:57,882 - #8 int
INFO  05:54:57,882 - #8 c
INFO  05:54:57,883 - #24 =
INFO  05:54:57,883 - #9 10
INFO  05:54:57,883 - #28 ,
INFO  05:54:57,884 - #8 d
INFO  05:54:57,884 - #24 =
INFO  05:54:57,884 - #9 99
INFO  05:54:57,884 - #27 ;
INFO  05:54:57,885 - #8 int
INFO  05:54:57,887 - #8 e
INFO  05:54:57,887 - #27 ;
INFO  05:54:57,887 - #8 bool
INFO  05:54:57,889 - #8 cond
INFO  05:54:57,889 - #27 ;
INFO  05:54:57,889 - #20 {
INFO  05:54:57,889 - #6 void
INFO  05:54:57,889 - #8 main
INFO  05:54:57,889 - #29 (
INFO  05:54:57,890 - #30 )
INFO  05:54:57,890 - #20 {
INFO  05:54:57,891 - #8 cond
INFO  05:54:57,891 - #24 =
INFO  05:54:57,891 - #12 false
INFO  05:54:57,891 - #27 ;
INFO  05:54:57,892 - #8 e
INFO  05:54:57,892 - #24 =
INFO  05:54:57,893 - #8 d
INFO  05:54:57,893 - #27 ;
INFO  05:54:57,893 - #31 if
INFO  05:54:57,893 - #29 (
INFO  05:54:57,893 - #8 cond
INFO  05:54:57,893 - #30 )
INFO  05:54:57,894 - #20 {
INFO  05:54:57,894 - #8 e
INFO  05:54:57,894 - #24 =
INFO  05:54:57,894 - #8 c
INFO  05:54:57,894 - #27 ;
INFO  05:54:57,894 - #21 }
INFO  05:54:57,894 - #3 print
INFO  05:54:57,895 - #29 (
INFO  05:54:57,895 - #8 e
INFO  05:54:57,895 - #30 )
INFO  05:54:57,895 - #27 ;
INFO  05:54:57,895 - #21 }
INFO  05:54:57,895 - #21 }
INFO  05:54:57,896 - =====================SINTAKSNO_STABLO=========================
INFO  05:54:57,898 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:54:57,899 - ==============================================================
INFO  05:54:57,916 - Pocetak obrade programa Program na liniji 1
INFO  05:54:57,916 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:54:57,917 - Deklarisana konstanta c na liniji 2
INFO  05:54:57,917 - Deklarisana konstanta d na liniji 2
INFO  05:54:57,917 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:54:57,918 - Deklarisana promenljiva e na liniji 3
INFO  05:54:57,918 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:54:57,918 - Deklarisana promenljiva cond na liniji 3
INFO  05:54:57,918 - Pocetak obrade metode main na liniji 5
INFO  05:54:57,919 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:54:57,919 - Zavrsetak obrade programa Program na liniji 1
INFO  05:54:57,919 - ======================TABELA_SIMBOLA==========================
INFO  05:54:57,920 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:54:57,920 - ==============================================================
INFO  05:54:57,920 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:54:57,920 - ==============================================================
INFO  05:54:57,920 - ======================GENERISANJE_KODA========================
INFO  05:54:57,925 - Generisanje koda uspesno zavrseno!
INFO  05:54:57,925 - Generisanje izlaznog fajla test\program.obj
INFO  05:54:57,926 - ==============================================================
INFO  05:55:26,666 - Obrada ulaznog fajla test\program.mj
INFO  05:55:26,748 - #2 program
INFO  05:55:26,748 - #8 Program
INFO  05:55:26,748 - #5 const
INFO  05:55:26,749 - #8 int
INFO  05:55:26,749 - #8 c
INFO  05:55:26,750 - #24 =
INFO  05:55:26,750 - #9 10
INFO  05:55:26,750 - #28 ,
INFO  05:55:26,751 - #8 d
INFO  05:55:26,751 - #24 =
INFO  05:55:26,751 - #9 99
INFO  05:55:26,751 - #27 ;
INFO  05:55:26,751 - #8 int
INFO  05:55:26,753 - #8 e
INFO  05:55:26,753 - #27 ;
INFO  05:55:26,753 - #8 bool
INFO  05:55:26,754 - #8 cond
INFO  05:55:26,754 - #27 ;
INFO  05:55:26,754 - #20 {
INFO  05:55:26,754 - #6 void
INFO  05:55:26,754 - #8 main
INFO  05:55:26,754 - #29 (
INFO  05:55:26,756 - #30 )
INFO  05:55:26,756 - #20 {
INFO  05:55:26,756 - #8 cond
INFO  05:55:26,756 - #24 =
INFO  05:55:26,757 - #12 false
INFO  05:55:26,757 - #27 ;
INFO  05:55:26,758 - #8 e
INFO  05:55:26,758 - #24 =
INFO  05:55:26,758 - #8 d
INFO  05:55:26,758 - #27 ;
INFO  05:55:26,759 - #31 if
INFO  05:55:26,759 - #29 (
INFO  05:55:26,759 - #8 cond
INFO  05:55:26,759 - #30 )
INFO  05:55:26,760 - #20 {
INFO  05:55:26,760 - #8 e
INFO  05:55:26,760 - #24 =
INFO  05:55:26,760 - #8 c
INFO  05:55:26,760 - #27 ;
INFO  05:55:26,760 - #21 }
INFO  05:55:26,760 - #3 print
INFO  05:55:26,760 - #29 (
INFO  05:55:26,761 - #8 e
INFO  05:55:26,761 - #30 )
INFO  05:55:26,761 - #27 ;
INFO  05:55:26,761 - #21 }
INFO  05:55:26,761 - #21 }
INFO  05:55:26,762 - =====================SINTAKSNO_STABLO=========================
INFO  05:55:26,764 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:55:26,765 - ==============================================================
INFO  05:55:26,781 - Pocetak obrade programa Program na liniji 1
INFO  05:55:26,782 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:55:26,783 - Deklarisana konstanta c na liniji 2
INFO  05:55:26,783 - Deklarisana konstanta d na liniji 2
INFO  05:55:26,783 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:55:26,783 - Deklarisana promenljiva e na liniji 3
INFO  05:55:26,783 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:55:26,783 - Deklarisana promenljiva cond na liniji 3
INFO  05:55:26,784 - Pocetak obrade metode main na liniji 5
INFO  05:55:26,784 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:55:26,784 - Zavrsetak obrade programa Program na liniji 1
INFO  05:55:26,784 - ======================TABELA_SIMBOLA==========================
INFO  05:55:26,786 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:55:26,786 - ==============================================================
INFO  05:55:26,786 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:55:26,786 - ==============================================================
INFO  05:55:26,786 - ======================GENERISANJE_KODA========================
INFO  05:55:26,791 - Generisanje koda uspesno zavrseno!
INFO  05:55:26,792 - Generisanje izlaznog fajla test\program.obj
INFO  05:55:26,792 - ==============================================================
INFO  05:55:39,016 - Obrada ulaznog fajla test\program.mj
INFO  05:55:39,099 - #2 program
INFO  05:55:39,099 - #8 Program
INFO  05:55:39,099 - #5 const
INFO  05:55:39,100 - #8 int
INFO  05:55:39,100 - #8 c
INFO  05:55:39,100 - #24 =
INFO  05:55:39,101 - #9 10
INFO  05:55:39,101 - #28 ,
INFO  05:55:39,102 - #8 d
INFO  05:55:39,102 - #24 =
INFO  05:55:39,102 - #9 99
INFO  05:55:39,102 - #27 ;
INFO  05:55:39,102 - #8 int
INFO  05:55:39,103 - #8 e
INFO  05:55:39,103 - #27 ;
INFO  05:55:39,103 - #8 bool
INFO  05:55:39,104 - #8 cond
INFO  05:55:39,105 - #27 ;
INFO  05:55:39,105 - #20 {
INFO  05:55:39,105 - #6 void
INFO  05:55:39,105 - #8 main
INFO  05:55:39,105 - #29 (
INFO  05:55:39,106 - #30 )
INFO  05:55:39,106 - #20 {
INFO  05:55:39,106 - #8 cond
INFO  05:55:39,106 - #24 =
INFO  05:55:39,106 - #12 false
INFO  05:55:39,106 - #27 ;
INFO  05:55:39,107 - #8 e
INFO  05:55:39,108 - #24 =
INFO  05:55:39,108 - #8 d
INFO  05:55:39,108 - #27 ;
INFO  05:55:39,109 - #31 if
INFO  05:55:39,109 - #29 (
INFO  05:55:39,109 - #8 cond
INFO  05:55:39,109 - #30 )
INFO  05:55:39,110 - #20 {
INFO  05:55:39,110 - #8 e
INFO  05:55:39,110 - #24 =
INFO  05:55:39,110 - #8 c
INFO  05:55:39,110 - #27 ;
INFO  05:55:39,110 - #21 }
INFO  05:55:39,110 - #3 print
INFO  05:55:39,111 - #29 (
INFO  05:55:39,111 - #8 e
INFO  05:55:39,111 - #30 )
INFO  05:55:39,111 - #27 ;
INFO  05:55:39,111 - #21 }
INFO  05:55:39,111 - #21 }
INFO  05:55:39,112 - =====================SINTAKSNO_STABLO=========================
INFO  05:55:39,114 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:55:39,115 - ==============================================================
INFO  05:55:39,127 - Pocetak obrade programa Program na liniji 1
INFO  05:55:39,127 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:55:39,128 - Deklarisana konstanta c na liniji 2
INFO  05:55:39,128 - Deklarisana konstanta d na liniji 2
INFO  05:55:39,129 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:55:39,129 - Deklarisana promenljiva e na liniji 3
INFO  05:55:39,129 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:55:39,129 - Deklarisana promenljiva cond na liniji 3
INFO  05:55:39,130 - Pocetak obrade metode main na liniji 5
INFO  05:55:39,131 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:55:39,131 - Zavrsetak obrade programa Program na liniji 1
INFO  05:55:39,131 - ======================TABELA_SIMBOLA==========================
INFO  05:55:39,132 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:55:39,132 - ==============================================================
INFO  05:55:39,132 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:55:39,132 - ==============================================================
INFO  05:55:39,132 - ======================GENERISANJE_KODA========================
INFO  05:55:39,137 - Generisanje koda uspesno zavrseno!
INFO  05:55:39,137 - Generisanje izlaznog fajla test\program.obj
INFO  05:55:39,137 - ==============================================================
INFO  05:57:37,953 - Obrada ulaznog fajla test\program.mj
INFO  05:57:38,032 - #2 program
INFO  05:57:38,033 - #8 Program
INFO  05:57:38,033 - #5 const
INFO  05:57:38,034 - #8 int
INFO  05:57:38,034 - #8 c
INFO  05:57:38,035 - #24 =
INFO  05:57:38,035 - #9 10
INFO  05:57:38,035 - #28 ,
INFO  05:57:38,036 - #8 d
INFO  05:57:38,036 - #24 =
INFO  05:57:38,036 - #9 99
INFO  05:57:38,036 - #27 ;
INFO  05:57:38,037 - #8 int
INFO  05:57:38,038 - #8 e
INFO  05:57:38,038 - #27 ;
INFO  05:57:38,038 - #8 bool
INFO  05:57:38,040 - #8 cond
INFO  05:57:38,040 - #27 ;
INFO  05:57:38,040 - #20 {
INFO  05:57:38,040 - #6 void
INFO  05:57:38,040 - #8 main
INFO  05:57:38,041 - #29 (
INFO  05:57:38,041 - #30 )
INFO  05:57:38,041 - #20 {
INFO  05:57:38,042 - #8 cond
INFO  05:57:38,042 - #24 =
INFO  05:57:38,042 - #12 false
INFO  05:57:38,042 - #27 ;
INFO  05:57:38,044 - #8 e
INFO  05:57:38,044 - #24 =
INFO  05:57:38,044 - #8 d
INFO  05:57:38,044 - #27 ;
INFO  05:57:38,045 - #31 if
INFO  05:57:38,045 - #29 (
INFO  05:57:38,045 - #8 cond
INFO  05:57:38,045 - #30 )
INFO  05:57:38,046 - #20 {
INFO  05:57:38,046 - #8 e
INFO  05:57:38,046 - #24 =
INFO  05:57:38,046 - #8 c
INFO  05:57:38,046 - #27 ;
INFO  05:57:38,046 - #21 }
INFO  05:57:38,046 - #3 print
INFO  05:57:38,047 - #29 (
INFO  05:57:38,047 - #8 e
INFO  05:57:38,047 - #30 )
INFO  05:57:38,047 - #27 ;
INFO  05:57:38,047 - #21 }
INFO  05:57:38,047 - #21 }
INFO  05:57:38,048 - =====================SINTAKSNO_STABLO=========================
INFO  05:57:38,050 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:57:38,051 - ==============================================================
INFO  05:57:38,065 - Pocetak obrade programa Program na liniji 1
INFO  05:57:38,066 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:57:38,067 - Deklarisana konstanta c na liniji 2
INFO  05:57:38,067 - Deklarisana konstanta d na liniji 2
INFO  05:57:38,067 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:57:38,067 - Deklarisana promenljiva e na liniji 3
INFO  05:57:38,067 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:57:38,067 - Deklarisana promenljiva cond na liniji 3
INFO  05:57:38,068 - Pocetak obrade metode main na liniji 5
INFO  05:57:38,068 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:57:38,068 - Zavrsetak obrade programa Program na liniji 1
INFO  05:57:38,068 - ======================TABELA_SIMBOLA==========================
INFO  05:57:38,069 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:57:38,069 - ==============================================================
INFO  05:57:38,069 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:57:38,069 - ==============================================================
INFO  05:57:38,069 - ======================GENERISANJE_KODA========================
INFO  05:57:38,073 - Generisanje koda uspesno zavrseno!
INFO  05:57:38,074 - Generisanje izlaznog fajla test\program.obj
INFO  05:57:38,074 - ==============================================================
INFO  05:58:24,623 - Obrada ulaznog fajla test\program.mj
INFO  05:58:24,709 - #2 program
INFO  05:58:24,709 - #8 Program
INFO  05:58:24,709 - #5 const
INFO  05:58:24,711 - #8 int
INFO  05:58:24,711 - #8 c
INFO  05:58:24,712 - #24 =
INFO  05:58:24,712 - #9 10
INFO  05:58:24,713 - #28 ,
INFO  05:58:24,714 - #8 d
INFO  05:58:24,714 - #24 =
INFO  05:58:24,714 - #9 99
INFO  05:58:24,715 - #27 ;
INFO  05:58:24,715 - #8 int
INFO  05:58:24,717 - #8 e
INFO  05:58:24,717 - #27 ;
INFO  05:58:24,717 - #8 bool
INFO  05:58:24,719 - #8 cond
INFO  05:58:24,719 - #27 ;
INFO  05:58:24,719 - #20 {
INFO  05:58:24,719 - #6 void
INFO  05:58:24,719 - #8 main
INFO  05:58:24,719 - #29 (
INFO  05:58:24,721 - #30 )
INFO  05:58:24,721 - #20 {
INFO  05:58:24,721 - #8 cond
INFO  05:58:24,721 - #24 =
INFO  05:58:24,722 - #12 false
INFO  05:58:24,722 - #27 ;
INFO  05:58:24,723 - #8 e
INFO  05:58:24,724 - #24 =
INFO  05:58:24,724 - #8 d
INFO  05:58:24,724 - #27 ;
INFO  05:58:24,724 - #31 if
INFO  05:58:24,724 - #29 (
INFO  05:58:24,725 - #8 cond
INFO  05:58:24,725 - #30 )
INFO  05:58:24,725 - #20 {
INFO  05:58:24,726 - #8 e
INFO  05:58:24,726 - #24 =
INFO  05:58:24,726 - #8 c
INFO  05:58:24,726 - #27 ;
INFO  05:58:24,726 - #21 }
INFO  05:58:24,726 - #3 print
INFO  05:58:24,727 - #29 (
INFO  05:58:24,727 - #8 e
INFO  05:58:24,727 - #30 )
INFO  05:58:24,727 - #27 ;
INFO  05:58:24,727 - #21 }
INFO  05:58:24,728 - #21 }
INFO  05:58:24,729 - =====================SINTAKSNO_STABLO=========================
INFO  05:58:24,730 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:58:24,732 - ==============================================================
INFO  05:58:24,747 - Pocetak obrade programa Program na liniji 1
INFO  05:58:24,748 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:58:24,749 - Deklarisana konstanta c na liniji 2
INFO  05:58:24,749 - Deklarisana konstanta d na liniji 2
INFO  05:58:24,749 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:58:24,749 - Deklarisana promenljiva e na liniji 3
INFO  05:58:24,749 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:58:24,749 - Deklarisana promenljiva cond na liniji 3
INFO  05:58:24,750 - Pocetak obrade metode main na liniji 5
INFO  05:58:24,751 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:58:24,751 - Zavrsetak obrade programa Program na liniji 1
INFO  05:58:24,751 - ======================TABELA_SIMBOLA==========================
INFO  05:58:24,752 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:58:24,752 - ==============================================================
INFO  05:58:24,752 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:58:24,753 - ==============================================================
INFO  05:58:24,753 - ======================GENERISANJE_KODA========================
INFO  05:58:24,761 - Generisanje koda uspesno zavrseno!
INFO  05:58:24,762 - Generisanje izlaznog fajla test\program.obj
INFO  05:58:24,762 - ==============================================================
INFO  05:59:24,683 - Obrada ulaznog fajla test\program.mj
INFO  05:59:24,768 - #2 program
INFO  05:59:24,768 - #8 Program
INFO  05:59:24,768 - #5 const
INFO  05:59:24,769 - #8 int
INFO  05:59:24,769 - #8 c
INFO  05:59:24,770 - #24 =
INFO  05:59:24,770 - #9 10
INFO  05:59:24,770 - #28 ,
INFO  05:59:24,771 - #8 d
INFO  05:59:24,771 - #24 =
INFO  05:59:24,771 - #9 99
INFO  05:59:24,771 - #27 ;
INFO  05:59:24,772 - #8 int
INFO  05:59:24,773 - #8 e
INFO  05:59:24,773 - #27 ;
INFO  05:59:24,773 - #8 bool
INFO  05:59:24,774 - #8 cond
INFO  05:59:24,774 - #27 ;
INFO  05:59:24,774 - #20 {
INFO  05:59:24,774 - #6 void
INFO  05:59:24,774 - #8 main
INFO  05:59:24,774 - #29 (
INFO  05:59:24,775 - #30 )
INFO  05:59:24,776 - #20 {
INFO  05:59:24,776 - #8 cond
INFO  05:59:24,776 - #24 =
INFO  05:59:24,776 - #12 false
INFO  05:59:24,776 - #27 ;
INFO  05:59:24,777 - #8 e
INFO  05:59:24,777 - #24 =
INFO  05:59:24,777 - #8 d
INFO  05:59:24,777 - #27 ;
INFO  05:59:24,778 - #31 if
INFO  05:59:24,778 - #29 (
INFO  05:59:24,778 - #8 cond
INFO  05:59:24,778 - #30 )
INFO  05:59:24,778 - #20 {
INFO  05:59:24,779 - #8 e
INFO  05:59:24,779 - #24 =
INFO  05:59:24,779 - #8 c
INFO  05:59:24,779 - #27 ;
INFO  05:59:24,779 - #21 }
INFO  05:59:24,779 - #3 print
INFO  05:59:24,779 - #29 (
INFO  05:59:24,779 - #8 e
INFO  05:59:24,779 - #30 )
INFO  05:59:24,780 - #27 ;
INFO  05:59:24,780 - #21 }
INFO  05:59:24,781 - #21 }
INFO  05:59:24,783 - =====================SINTAKSNO_STABLO=========================
INFO  05:59:24,785 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  05:59:24,786 - ==============================================================
INFO  05:59:24,798 - Pocetak obrade programa Program na liniji 1
INFO  05:59:24,798 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  05:59:24,799 - Deklarisana konstanta c na liniji 2
INFO  05:59:24,799 - Deklarisana konstanta d na liniji 2
INFO  05:59:24,799 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  05:59:24,799 - Deklarisana promenljiva e na liniji 3
INFO  05:59:24,799 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  05:59:24,799 - Deklarisana promenljiva cond na liniji 3
INFO  05:59:24,800 - Pocetak obrade metode main na liniji 5
INFO  05:59:24,801 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  05:59:24,801 - Zavrsetak obrade programa Program na liniji 1
INFO  05:59:24,801 - ======================TABELA_SIMBOLA==========================
INFO  05:59:24,802 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  05:59:24,802 - ==============================================================
INFO  05:59:24,802 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  05:59:24,802 - ==============================================================
INFO  05:59:24,802 - ======================GENERISANJE_KODA========================
INFO  05:59:24,808 - Generisanje koda uspesno zavrseno!
INFO  05:59:24,808 - Generisanje izlaznog fajla test\program.obj
INFO  05:59:24,808 - ==============================================================
INFO  06:00:38,991 - Obrada ulaznog fajla test\program.mj
INFO  06:00:39,064 - #2 program
INFO  06:00:39,065 - #8 Program
INFO  06:00:39,065 - #5 const
INFO  06:00:39,066 - #8 int
INFO  06:00:39,066 - #8 c
INFO  06:00:39,067 - #24 =
INFO  06:00:39,067 - #9 10
INFO  06:00:39,067 - #28 ,
INFO  06:00:39,068 - #8 d
INFO  06:00:39,069 - #24 =
INFO  06:00:39,069 - #9 99
INFO  06:00:39,069 - #27 ;
INFO  06:00:39,070 - #8 int
INFO  06:00:39,072 - #8 e
INFO  06:00:39,072 - #27 ;
INFO  06:00:39,072 - #8 bool
INFO  06:00:39,074 - #8 cond
INFO  06:00:39,074 - #27 ;
INFO  06:00:39,074 - #20 {
INFO  06:00:39,074 - #6 void
INFO  06:00:39,074 - #8 main
INFO  06:00:39,074 - #29 (
INFO  06:00:39,075 - #30 )
INFO  06:00:39,076 - #20 {
INFO  06:00:39,076 - #8 cond
INFO  06:00:39,076 - #24 =
INFO  06:00:39,076 - #12 false
INFO  06:00:39,076 - #27 ;
INFO  06:00:39,077 - #8 e
INFO  06:00:39,078 - #24 =
INFO  06:00:39,078 - #8 d
INFO  06:00:39,078 - #27 ;
INFO  06:00:39,078 - #31 if
INFO  06:00:39,078 - #29 (
INFO  06:00:39,078 - #8 cond
INFO  06:00:39,079 - #30 )
INFO  06:00:39,079 - #20 {
INFO  06:00:39,079 - #8 e
INFO  06:00:39,079 - #24 =
INFO  06:00:39,079 - #8 c
INFO  06:00:39,079 - #27 ;
INFO  06:00:39,079 - #21 }
INFO  06:00:39,080 - #3 print
INFO  06:00:39,080 - #29 (
INFO  06:00:39,080 - #8 e
INFO  06:00:39,080 - #30 )
INFO  06:00:39,080 - #27 ;
INFO  06:00:39,080 - #21 }
INFO  06:00:39,080 - #21 }
INFO  06:00:39,081 - =====================SINTAKSNO_STABLO=========================
INFO  06:00:39,083 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:00:39,084 - ==============================================================
INFO  06:00:39,098 - Pocetak obrade programa Program na liniji 1
INFO  06:00:39,098 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:00:39,099 - Deklarisana konstanta c na liniji 2
INFO  06:00:39,100 - Deklarisana konstanta d na liniji 2
INFO  06:00:39,100 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:00:39,100 - Deklarisana promenljiva e na liniji 3
INFO  06:00:39,101 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:00:39,101 - Deklarisana promenljiva cond na liniji 3
INFO  06:00:39,102 - Pocetak obrade metode main na liniji 5
INFO  06:00:39,102 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:00:39,102 - Zavrsetak obrade programa Program na liniji 1
INFO  06:00:39,102 - ======================TABELA_SIMBOLA==========================
INFO  06:00:39,103 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:00:39,103 - ==============================================================
INFO  06:00:39,103 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:00:39,103 - ==============================================================
INFO  06:00:39,103 - ======================GENERISANJE_KODA========================
INFO  06:00:39,108 - Generisanje koda uspesno zavrseno!
INFO  06:00:39,109 - Generisanje izlaznog fajla test\program.obj
INFO  06:00:39,109 - ==============================================================
INFO  06:00:56,498 - Obrada ulaznog fajla test\program.mj
INFO  06:00:56,580 - #2 program
INFO  06:00:56,580 - #8 Program
INFO  06:00:56,580 - #5 const
INFO  06:00:56,581 - #8 int
INFO  06:00:56,582 - #8 c
INFO  06:00:56,582 - #24 =
INFO  06:00:56,583 - #9 10
INFO  06:00:56,583 - #28 ,
INFO  06:00:56,584 - #8 d
INFO  06:00:56,584 - #24 =
INFO  06:00:56,584 - #9 99
INFO  06:00:56,584 - #27 ;
INFO  06:00:56,584 - #8 int
INFO  06:00:56,585 - #8 e
INFO  06:00:56,586 - #27 ;
INFO  06:00:56,586 - #8 bool
INFO  06:00:56,587 - #8 cond
INFO  06:00:56,587 - #27 ;
INFO  06:00:56,588 - #20 {
INFO  06:00:56,588 - #6 void
INFO  06:00:56,588 - #8 main
INFO  06:00:56,588 - #29 (
INFO  06:00:56,589 - #30 )
INFO  06:00:56,589 - #20 {
INFO  06:00:56,589 - #8 cond
INFO  06:00:56,589 - #24 =
INFO  06:00:56,589 - #12 false
INFO  06:00:56,589 - #27 ;
INFO  06:00:56,590 - #8 e
INFO  06:00:56,591 - #24 =
INFO  06:00:56,591 - #8 d
INFO  06:00:56,591 - #27 ;
INFO  06:00:56,591 - #31 if
INFO  06:00:56,591 - #29 (
INFO  06:00:56,591 - #8 cond
INFO  06:00:56,591 - #30 )
INFO  06:00:56,592 - #20 {
INFO  06:00:56,592 - #8 e
INFO  06:00:56,592 - #24 =
INFO  06:00:56,592 - #8 c
INFO  06:00:56,592 - #27 ;
INFO  06:00:56,592 - #21 }
INFO  06:00:56,592 - #3 print
INFO  06:00:56,593 - #29 (
INFO  06:00:56,593 - #8 e
INFO  06:00:56,593 - #30 )
INFO  06:00:56,593 - #27 ;
INFO  06:00:56,593 - #21 }
INFO  06:00:56,593 - #21 }
INFO  06:00:56,594 - =====================SINTAKSNO_STABLO=========================
INFO  06:00:56,596 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:00:56,597 - ==============================================================
INFO  06:00:56,612 - Pocetak obrade programa Program na liniji 1
INFO  06:00:56,612 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:00:56,613 - Deklarisana konstanta c na liniji 2
INFO  06:00:56,613 - Deklarisana konstanta d na liniji 2
INFO  06:00:56,614 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:00:56,614 - Deklarisana promenljiva e na liniji 3
INFO  06:00:56,614 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:00:56,614 - Deklarisana promenljiva cond na liniji 3
INFO  06:00:56,614 - Pocetak obrade metode main na liniji 5
INFO  06:00:56,615 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:00:56,615 - Zavrsetak obrade programa Program na liniji 1
INFO  06:00:56,615 - ======================TABELA_SIMBOLA==========================
INFO  06:00:56,616 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:00:56,616 - ==============================================================
INFO  06:00:56,616 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:00:56,616 - ==============================================================
INFO  06:00:56,616 - ======================GENERISANJE_KODA========================
INFO  06:00:56,621 - Generisanje koda uspesno zavrseno!
INFO  06:00:56,621 - Generisanje izlaznog fajla test\program.obj
INFO  06:00:56,621 - ==============================================================
INFO  06:01:23,857 - Obrada ulaznog fajla test\program.mj
INFO  06:01:23,935 - #2 program
INFO  06:01:23,935 - #8 Program
INFO  06:01:23,935 - #5 const
INFO  06:01:23,936 - #8 int
INFO  06:01:23,936 - #8 c
INFO  06:01:23,937 - #24 =
INFO  06:01:23,937 - #9 10
INFO  06:01:23,937 - #28 ,
INFO  06:01:23,939 - #8 d
INFO  06:01:23,939 - #24 =
INFO  06:01:23,939 - #9 99
INFO  06:01:23,939 - #27 ;
INFO  06:01:23,941 - #8 int
INFO  06:01:23,943 - #8 e
INFO  06:01:23,943 - #27 ;
INFO  06:01:23,943 - #8 bool
INFO  06:01:23,945 - #8 cond
INFO  06:01:23,945 - #27 ;
INFO  06:01:23,945 - #20 {
INFO  06:01:23,945 - #6 void
INFO  06:01:23,945 - #8 main
INFO  06:01:23,945 - #29 (
INFO  06:01:23,946 - #30 )
INFO  06:01:23,946 - #20 {
INFO  06:01:23,946 - #8 cond
INFO  06:01:23,947 - #24 =
INFO  06:01:23,947 - #12 false
INFO  06:01:23,947 - #27 ;
INFO  06:01:23,948 - #8 e
INFO  06:01:23,948 - #24 =
INFO  06:01:23,948 - #8 d
INFO  06:01:23,948 - #27 ;
INFO  06:01:23,949 - #31 if
INFO  06:01:23,949 - #29 (
INFO  06:01:23,949 - #8 cond
INFO  06:01:23,949 - #30 )
INFO  06:01:23,950 - #20 {
INFO  06:01:23,950 - #8 e
INFO  06:01:23,950 - #24 =
INFO  06:01:23,950 - #8 c
INFO  06:01:23,950 - #27 ;
INFO  06:01:23,950 - #21 }
INFO  06:01:23,951 - #3 print
INFO  06:01:23,951 - #29 (
INFO  06:01:23,951 - #8 e
INFO  06:01:23,951 - #30 )
INFO  06:01:23,951 - #27 ;
INFO  06:01:23,951 - #21 }
INFO  06:01:23,952 - #21 }
INFO  06:01:23,953 - =====================SINTAKSNO_STABLO=========================
INFO  06:01:23,955 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:01:23,956 - ==============================================================
INFO  06:01:23,972 - Pocetak obrade programa Program na liniji 1
INFO  06:01:23,972 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:01:23,973 - Deklarisana konstanta c na liniji 2
INFO  06:01:23,973 - Deklarisana konstanta d na liniji 2
INFO  06:01:23,973 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:01:23,973 - Deklarisana promenljiva e na liniji 3
INFO  06:01:23,973 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:01:23,973 - Deklarisana promenljiva cond na liniji 3
INFO  06:01:23,974 - Pocetak obrade metode main na liniji 5
INFO  06:01:23,974 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:01:23,975 - Zavrsetak obrade programa Program na liniji 1
INFO  06:01:23,975 - ======================TABELA_SIMBOLA==========================
INFO  06:01:23,975 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:01:23,975 - ==============================================================
INFO  06:01:23,975 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:01:23,975 - ==============================================================
INFO  06:01:23,975 - ======================GENERISANJE_KODA========================
INFO  06:01:23,980 - Generisanje koda uspesno zavrseno!
INFO  06:01:23,980 - Generisanje izlaznog fajla test\program.obj
INFO  06:01:23,981 - ==============================================================
INFO  06:04:22,286 - Obrada ulaznog fajla test\program.mj
INFO  06:04:22,367 - #2 program
INFO  06:04:22,367 - #8 Program
INFO  06:04:22,367 - #5 const
INFO  06:04:22,368 - #8 int
INFO  06:04:22,368 - #8 c
INFO  06:04:22,368 - #24 =
INFO  06:04:22,368 - #9 10
INFO  06:04:22,368 - #28 ,
INFO  06:04:22,369 - #8 d
INFO  06:04:22,369 - #24 =
INFO  06:04:22,369 - #9 99
INFO  06:04:22,370 - #27 ;
INFO  06:04:22,370 - #8 int
INFO  06:04:22,371 - #8 e
INFO  06:04:22,371 - #27 ;
INFO  06:04:22,372 - #8 bool
INFO  06:04:22,373 - #8 cond
INFO  06:04:22,373 - #27 ;
INFO  06:04:22,373 - #20 {
INFO  06:04:22,373 - #6 void
INFO  06:04:22,373 - #8 main
INFO  06:04:22,373 - #29 (
INFO  06:04:22,374 - #30 )
INFO  06:04:22,374 - #20 {
INFO  06:04:22,374 - #8 cond
INFO  06:04:22,375 - #24 =
INFO  06:04:22,375 - #12 false
INFO  06:04:22,375 - #27 ;
INFO  06:04:22,376 - #8 e
INFO  06:04:22,376 - #24 =
INFO  06:04:22,376 - #8 d
INFO  06:04:22,376 - #27 ;
INFO  06:04:22,376 - #31 if
INFO  06:04:22,377 - #29 (
INFO  06:04:22,377 - #8 cond
INFO  06:04:22,377 - #30 )
INFO  06:04:22,377 - #20 {
INFO  06:04:22,377 - #8 e
INFO  06:04:22,377 - #24 =
INFO  06:04:22,377 - #8 c
INFO  06:04:22,378 - #27 ;
INFO  06:04:22,378 - #21 }
INFO  06:04:22,378 - #3 print
INFO  06:04:22,378 - #29 (
INFO  06:04:22,378 - #8 e
INFO  06:04:22,378 - #30 )
INFO  06:04:22,379 - #27 ;
INFO  06:04:22,379 - #21 }
INFO  06:04:22,379 - #21 }
INFO  06:04:22,380 - =====================SINTAKSNO_STABLO=========================
INFO  06:04:22,382 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:04:22,385 - ==============================================================
INFO  06:04:22,397 - Pocetak obrade programa Program na liniji 1
INFO  06:04:22,397 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:04:22,400 - Deklarisana konstanta c na liniji 2
INFO  06:04:22,400 - Deklarisana konstanta d na liniji 2
INFO  06:04:22,400 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:04:22,401 - Deklarisana promenljiva e na liniji 3
INFO  06:04:22,401 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:04:22,401 - Deklarisana promenljiva cond na liniji 3
INFO  06:04:22,402 - Pocetak obrade metode main na liniji 5
INFO  06:04:22,403 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:04:22,403 - Zavrsetak obrade programa Program na liniji 1
INFO  06:04:22,403 - ======================TABELA_SIMBOLA==========================
INFO  06:04:22,404 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:04:22,404 - ==============================================================
INFO  06:04:22,404 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:04:22,405 - ==============================================================
INFO  06:04:22,405 - ======================GENERISANJE_KODA========================
INFO  06:04:22,411 - Generisanje koda uspesno zavrseno!
INFO  06:04:22,412 - Generisanje izlaznog fajla test\program.obj
INFO  06:04:22,412 - ==============================================================
INFO  06:05:40,733 - Obrada ulaznog fajla test\program.mj
INFO  06:05:40,811 - #2 program
INFO  06:05:40,811 - #8 Program
INFO  06:05:40,811 - #5 const
INFO  06:05:40,812 - #8 int
INFO  06:05:40,812 - #8 c
INFO  06:05:40,813 - #24 =
INFO  06:05:40,813 - #9 10
INFO  06:05:40,813 - #28 ,
INFO  06:05:40,814 - #8 d
INFO  06:05:40,814 - #24 =
INFO  06:05:40,814 - #9 99
INFO  06:05:40,814 - #27 ;
INFO  06:05:40,814 - #8 int
INFO  06:05:40,815 - #8 e
INFO  06:05:40,816 - #27 ;
INFO  06:05:40,816 - #8 bool
INFO  06:05:40,817 - #8 cond
INFO  06:05:40,817 - #27 ;
INFO  06:05:40,817 - #20 {
INFO  06:05:40,817 - #6 void
INFO  06:05:40,818 - #8 main
INFO  06:05:40,818 - #29 (
INFO  06:05:40,818 - #30 )
INFO  06:05:40,819 - #20 {
INFO  06:05:40,819 - #8 cond
INFO  06:05:40,819 - #24 =
INFO  06:05:40,819 - #12 false
INFO  06:05:40,819 - #27 ;
INFO  06:05:40,820 - #8 e
INFO  06:05:40,820 - #24 =
INFO  06:05:40,820 - #8 d
INFO  06:05:40,820 - #27 ;
INFO  06:05:40,821 - #31 if
INFO  06:05:40,821 - #29 (
INFO  06:05:40,821 - #8 cond
INFO  06:05:40,821 - #30 )
INFO  06:05:40,821 - #20 {
INFO  06:05:40,822 - #8 e
INFO  06:05:40,822 - #24 =
INFO  06:05:40,822 - #8 c
INFO  06:05:40,822 - #27 ;
INFO  06:05:40,822 - #21 }
INFO  06:05:40,822 - #3 print
INFO  06:05:40,822 - #29 (
INFO  06:05:40,822 - #8 e
INFO  06:05:40,822 - #30 )
INFO  06:05:40,822 - #27 ;
INFO  06:05:40,823 - #21 }
INFO  06:05:40,823 - #21 }
INFO  06:05:40,823 - =====================SINTAKSNO_STABLO=========================
INFO  06:05:40,825 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:05:40,826 - ==============================================================
INFO  06:05:40,842 - Pocetak obrade programa Program na liniji 1
INFO  06:05:40,842 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:05:40,843 - Deklarisana konstanta c na liniji 2
INFO  06:05:40,843 - Deklarisana konstanta d na liniji 2
INFO  06:05:40,844 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:05:40,844 - Deklarisana promenljiva e na liniji 3
INFO  06:05:40,844 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:05:40,844 - Deklarisana promenljiva cond na liniji 3
INFO  06:05:40,845 - Pocetak obrade metode main na liniji 5
INFO  06:05:40,846 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:05:40,846 - Zavrsetak obrade programa Program na liniji 1
INFO  06:05:40,846 - ======================TABELA_SIMBOLA==========================
INFO  06:05:40,846 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:05:40,846 - ==============================================================
INFO  06:05:40,846 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:05:40,847 - ==============================================================
INFO  06:05:40,847 - ======================GENERISANJE_KODA========================
INFO  06:05:40,852 - Generisanje koda uspesno zavrseno!
INFO  06:05:40,853 - Generisanje izlaznog fajla test\program.obj
INFO  06:05:40,853 - ==============================================================
INFO  06:07:26,558 - Obrada ulaznog fajla test\program.mj
INFO  06:07:26,636 - #2 program
INFO  06:07:26,637 - #8 Program
INFO  06:07:26,637 - #5 const
INFO  06:07:26,639 - #8 int
INFO  06:07:26,639 - #8 c
INFO  06:07:26,640 - #24 =
INFO  06:07:26,640 - #9 10
INFO  06:07:26,640 - #28 ,
INFO  06:07:26,641 - #8 d
INFO  06:07:26,641 - #24 =
INFO  06:07:26,641 - #9 99
INFO  06:07:26,641 - #27 ;
INFO  06:07:26,642 - #8 int
INFO  06:07:26,643 - #8 e
INFO  06:07:26,643 - #27 ;
INFO  06:07:26,643 - #8 bool
INFO  06:07:26,644 - #8 cond
INFO  06:07:26,644 - #27 ;
INFO  06:07:26,644 - #20 {
INFO  06:07:26,644 - #6 void
INFO  06:07:26,644 - #8 main
INFO  06:07:26,645 - #29 (
INFO  06:07:26,645 - #30 )
INFO  06:07:26,646 - #20 {
INFO  06:07:26,646 - #8 cond
INFO  06:07:26,646 - #24 =
INFO  06:07:26,646 - #12 false
INFO  06:07:26,646 - #27 ;
INFO  06:07:26,647 - #8 e
INFO  06:07:26,647 - #24 =
INFO  06:07:26,647 - #8 d
INFO  06:07:26,648 - #27 ;
INFO  06:07:26,648 - #31 if
INFO  06:07:26,648 - #29 (
INFO  06:07:26,648 - #8 cond
INFO  06:07:26,648 - #30 )
INFO  06:07:26,649 - #20 {
INFO  06:07:26,649 - #8 e
INFO  06:07:26,649 - #24 =
INFO  06:07:26,649 - #8 c
INFO  06:07:26,649 - #27 ;
INFO  06:07:26,649 - #21 }
INFO  06:07:26,649 - #3 print
INFO  06:07:26,650 - #29 (
INFO  06:07:26,650 - #8 e
INFO  06:07:26,650 - #30 )
INFO  06:07:26,650 - #27 ;
INFO  06:07:26,650 - #21 }
INFO  06:07:26,650 - #21 }
INFO  06:07:26,652 - =====================SINTAKSNO_STABLO=========================
INFO  06:07:26,654 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:07:26,655 - ==============================================================
INFO  06:07:26,668 - Pocetak obrade programa Program na liniji 1
INFO  06:07:26,669 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:07:26,670 - Deklarisana konstanta c na liniji 2
INFO  06:07:26,670 - Deklarisana konstanta d na liniji 2
INFO  06:07:26,670 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:07:26,670 - Deklarisana promenljiva e na liniji 3
INFO  06:07:26,670 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:07:26,670 - Deklarisana promenljiva cond na liniji 3
INFO  06:07:26,671 - Pocetak obrade metode main na liniji 5
INFO  06:07:26,672 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:07:26,672 - Zavrsetak obrade programa Program na liniji 1
INFO  06:07:26,672 - ======================TABELA_SIMBOLA==========================
INFO  06:07:26,672 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:07:26,672 - ==============================================================
INFO  06:07:26,672 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:07:26,673 - ==============================================================
INFO  06:07:26,673 - ======================GENERISANJE_KODA========================
INFO  06:07:26,677 - Generisanje koda uspesno zavrseno!
INFO  06:07:26,677 - Generisanje izlaznog fajla test\program.obj
INFO  06:07:26,677 - ==============================================================
INFO  06:12:29,899 - Obrada ulaznog fajla test\program.mj
INFO  06:12:29,982 - #2 program
INFO  06:12:29,983 - #8 Program
INFO  06:12:29,983 - #5 const
INFO  06:12:29,983 - #8 int
INFO  06:12:29,983 - #8 c
INFO  06:12:29,984 - #24 =
INFO  06:12:29,984 - #9 10
INFO  06:12:29,984 - #28 ,
INFO  06:12:29,986 - #8 d
INFO  06:12:29,986 - #24 =
INFO  06:12:29,986 - #9 99
INFO  06:12:29,986 - #27 ;
INFO  06:12:29,986 - #8 int
INFO  06:12:29,987 - #8 e
INFO  06:12:29,988 - #27 ;
INFO  06:12:29,988 - #8 bool
INFO  06:12:29,989 - #8 cond
INFO  06:12:29,989 - #27 ;
INFO  06:12:29,989 - #20 {
INFO  06:12:29,990 - #6 void
INFO  06:12:29,990 - #8 main
INFO  06:12:29,990 - #29 (
INFO  06:12:29,991 - #30 )
INFO  06:12:29,991 - #20 {
INFO  06:12:29,991 - #8 cond
INFO  06:12:29,991 - #24 =
INFO  06:12:29,991 - #12 false
INFO  06:12:29,991 - #27 ;
INFO  06:12:29,992 - #8 e
INFO  06:12:29,992 - #24 =
INFO  06:12:29,993 - #8 d
INFO  06:12:29,993 - #27 ;
INFO  06:12:29,993 - #31 if
INFO  06:12:29,993 - #29 (
INFO  06:12:29,993 - #8 cond
INFO  06:12:29,993 - #30 )
INFO  06:12:29,994 - #20 {
INFO  06:12:29,994 - #8 e
INFO  06:12:29,994 - #24 =
INFO  06:12:29,994 - #8 c
INFO  06:12:29,994 - #27 ;
INFO  06:12:29,994 - #21 }
INFO  06:12:29,994 - #3 print
INFO  06:12:29,995 - #29 (
INFO  06:12:29,995 - #8 e
INFO  06:12:29,995 - #30 )
INFO  06:12:29,995 - #27 ;
INFO  06:12:29,995 - #21 }
INFO  06:12:29,995 - #21 }
INFO  06:12:29,996 - =====================SINTAKSNO_STABLO=========================
INFO  06:12:29,998 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:12:30,000 - ==============================================================
INFO  06:12:30,017 - Pocetak obrade programa Program na liniji 1
INFO  06:12:30,017 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:12:30,018 - Deklarisana konstanta c na liniji 2
INFO  06:12:30,018 - Deklarisana konstanta d na liniji 2
INFO  06:12:30,018 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:12:30,018 - Deklarisana promenljiva e na liniji 3
INFO  06:12:30,018 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:12:30,018 - Deklarisana promenljiva cond na liniji 3
INFO  06:12:30,019 - Pocetak obrade metode main na liniji 5
INFO  06:12:30,019 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:12:30,019 - Zavrsetak obrade programa Program na liniji 1
INFO  06:12:30,019 - ======================TABELA_SIMBOLA==========================
INFO  06:12:30,020 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:12:30,020 - ==============================================================
INFO  06:12:30,020 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:12:30,020 - ==============================================================
INFO  06:12:30,021 - ======================GENERISANJE_KODA========================
INFO  06:12:30,025 - Generisanje koda uspesno zavrseno!
INFO  06:12:30,026 - Generisanje izlaznog fajla test\program.obj
INFO  06:12:30,026 - ==============================================================
INFO  06:13:15,509 - Obrada ulaznog fajla test\program.mj
INFO  06:13:15,595 - #2 program
INFO  06:13:15,595 - #8 Program
INFO  06:13:15,595 - #5 const
INFO  06:13:15,596 - #8 int
INFO  06:13:15,596 - #8 c
INFO  06:13:15,597 - #24 =
INFO  06:13:15,597 - #9 10
INFO  06:13:15,597 - #28 ,
INFO  06:13:15,598 - #8 d
INFO  06:13:15,598 - #24 =
INFO  06:13:15,598 - #9 99
INFO  06:13:15,598 - #27 ;
INFO  06:13:15,599 - #8 int
INFO  06:13:15,600 - #8 e
INFO  06:13:15,600 - #27 ;
INFO  06:13:15,600 - #8 bool
INFO  06:13:15,601 - #8 cond
INFO  06:13:15,601 - #27 ;
INFO  06:13:15,601 - #20 {
INFO  06:13:15,601 - #6 void
INFO  06:13:15,602 - #8 main
INFO  06:13:15,602 - #29 (
INFO  06:13:15,603 - #30 )
INFO  06:13:15,603 - #20 {
INFO  06:13:15,603 - #8 cond
INFO  06:13:15,603 - #24 =
INFO  06:13:15,603 - #12 false
INFO  06:13:15,603 - #27 ;
INFO  06:13:15,604 - #8 e
INFO  06:13:15,604 - #24 =
INFO  06:13:15,604 - #8 d
INFO  06:13:15,604 - #27 ;
INFO  06:13:15,604 - #31 if
INFO  06:13:15,605 - #29 (
INFO  06:13:15,605 - #8 cond
INFO  06:13:15,605 - #30 )
INFO  06:13:15,605 - #20 {
INFO  06:13:15,605 - #8 e
INFO  06:13:15,605 - #24 =
INFO  06:13:15,606 - #8 c
INFO  06:13:15,606 - #27 ;
INFO  06:13:15,606 - #21 }
INFO  06:13:15,606 - #3 print
INFO  06:13:15,606 - #29 (
INFO  06:13:15,606 - #8 e
INFO  06:13:15,607 - #30 )
INFO  06:13:15,607 - #27 ;
INFO  06:13:15,607 - #21 }
INFO  06:13:15,607 - #21 }
INFO  06:13:15,608 - =====================SINTAKSNO_STABLO=========================
INFO  06:13:15,610 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:13:15,613 - ==============================================================
INFO  06:13:15,628 - Pocetak obrade programa Program na liniji 1
INFO  06:13:15,628 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:13:15,630 - Deklarisana konstanta c na liniji 2
INFO  06:13:15,630 - Deklarisana konstanta d na liniji 2
INFO  06:13:15,630 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:13:15,630 - Deklarisana promenljiva e na liniji 3
INFO  06:13:15,630 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:13:15,630 - Deklarisana promenljiva cond na liniji 3
INFO  06:13:15,631 - Pocetak obrade metode main na liniji 5
INFO  06:13:15,632 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:13:15,632 - Zavrsetak obrade programa Program na liniji 1
INFO  06:13:15,632 - ======================TABELA_SIMBOLA==========================
INFO  06:13:15,632 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:13:15,633 - ==============================================================
INFO  06:13:15,633 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:13:15,633 - ==============================================================
INFO  06:13:15,633 - ======================GENERISANJE_KODA========================
INFO  06:13:15,637 - Generisanje koda uspesno zavrseno!
INFO  06:13:15,638 - Generisanje izlaznog fajla test\program.obj
INFO  06:13:15,638 - ==============================================================
INFO  06:15:13,717 - Obrada ulaznog fajla test\program.mj
INFO  06:15:13,815 - #2 program
INFO  06:15:13,815 - #8 Program
INFO  06:15:13,815 - #5 const
INFO  06:15:13,816 - #8 int
INFO  06:15:13,816 - #8 c
INFO  06:15:13,817 - #24 =
INFO  06:15:13,817 - #9 10
INFO  06:15:13,817 - #28 ,
INFO  06:15:13,818 - #8 d
INFO  06:15:13,818 - #24 =
INFO  06:15:13,818 - #9 99
INFO  06:15:13,818 - #27 ;
INFO  06:15:13,818 - #8 int
INFO  06:15:13,820 - #8 e
INFO  06:15:13,820 - #27 ;
INFO  06:15:13,820 - #8 bool
INFO  06:15:13,821 - #8 cond
INFO  06:15:13,822 - #27 ;
INFO  06:15:13,822 - #20 {
INFO  06:15:13,822 - #6 void
INFO  06:15:13,822 - #8 main
INFO  06:15:13,822 - #29 (
INFO  06:15:13,823 - #30 )
INFO  06:15:13,823 - #20 {
INFO  06:15:13,823 - #8 cond
INFO  06:15:13,823 - #24 =
INFO  06:15:13,823 - #12 false
INFO  06:15:13,823 - #27 ;
INFO  06:15:13,824 - #31 if
INFO  06:15:13,824 - #29 (
INFO  06:15:13,824 - #8 cond
INFO  06:15:13,824 - #30 )
INFO  06:15:13,825 - #20 {
INFO  06:15:13,825 - #8 e
INFO  06:15:13,825 - #24 =
INFO  06:15:13,825 - #8 c
INFO  06:15:13,825 - #27 ;
INFO  06:15:13,825 - #21 }
INFO  06:15:13,826 - #3 print
INFO  06:15:13,826 - #29 (
INFO  06:15:13,826 - #8 e
INFO  06:15:13,826 - #30 )
INFO  06:15:13,826 - #27 ;
INFO  06:15:13,826 - #21 }
INFO  06:15:13,826 - #21 }
INFO  06:15:13,827 - =====================SINTAKSNO_STABLO=========================
INFO  06:15:13,829 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:15:13,830 - ==============================================================
INFO  06:15:13,843 - Pocetak obrade programa Program na liniji 1
INFO  06:15:13,843 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:15:13,844 - Deklarisana konstanta c na liniji 2
INFO  06:15:13,844 - Deklarisana konstanta d na liniji 2
INFO  06:15:13,844 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:15:13,844 - Deklarisana promenljiva e na liniji 3
INFO  06:15:13,844 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:15:13,844 - Deklarisana promenljiva cond na liniji 3
INFO  06:15:13,845 - Pocetak obrade metode main na liniji 5
INFO  06:15:13,846 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:15:13,846 - Zavrsetak obrade programa Program na liniji 1
INFO  06:15:13,846 - ======================TABELA_SIMBOLA==========================
INFO  06:15:13,847 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:15:13,847 - ==============================================================
INFO  06:15:13,847 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:15:13,847 - ==============================================================
INFO  06:15:13,848 - ======================GENERISANJE_KODA========================
INFO  06:15:13,852 - Generisanje koda uspesno zavrseno!
INFO  06:15:13,852 - Generisanje izlaznog fajla test\program.obj
INFO  06:15:13,852 - ==============================================================
INFO  06:16:14,238 - Obrada ulaznog fajla test\program.mj
INFO  06:16:14,323 - #2 program
INFO  06:16:14,323 - #8 Program
INFO  06:16:14,323 - #5 const
INFO  06:16:14,324 - #8 int
INFO  06:16:14,324 - #8 c
INFO  06:16:14,326 - #24 =
INFO  06:16:14,326 - #9 10
INFO  06:16:14,326 - #28 ,
INFO  06:16:14,328 - #8 d
INFO  06:16:14,328 - #24 =
INFO  06:16:14,328 - #9 99
INFO  06:16:14,328 - #27 ;
INFO  06:16:14,328 - #8 int
INFO  06:16:14,330 - #8 e
INFO  06:16:14,330 - #27 ;
INFO  06:16:14,330 - #8 bool
INFO  06:16:14,332 - #8 cond
INFO  06:16:14,332 - #27 ;
INFO  06:16:14,332 - #20 {
INFO  06:16:14,332 - #6 void
INFO  06:16:14,332 - #8 main
INFO  06:16:14,332 - #29 (
INFO  06:16:14,333 - #30 )
INFO  06:16:14,333 - #20 {
INFO  06:16:14,333 - #8 cond
INFO  06:16:14,333 - #24 =
INFO  06:16:14,333 - #12 false
INFO  06:16:14,333 - #27 ;
INFO  06:16:14,334 - #31 if
INFO  06:16:14,334 - #29 (
INFO  06:16:14,334 - #8 cond
INFO  06:16:14,335 - #30 )
INFO  06:16:14,335 - #20 {
INFO  06:16:14,335 - #8 e
INFO  06:16:14,335 - #24 =
INFO  06:16:14,335 - #8 c
INFO  06:16:14,335 - #27 ;
INFO  06:16:14,335 - #21 }
INFO  06:16:14,336 - #3 print
INFO  06:16:14,336 - #29 (
INFO  06:16:14,336 - #8 e
INFO  06:16:14,336 - #30 )
INFO  06:16:14,336 - #27 ;
INFO  06:16:14,337 - #21 }
INFO  06:16:14,337 - #21 }
INFO  06:16:14,337 - =====================SINTAKSNO_STABLO=========================
INFO  06:16:14,339 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:16:14,340 - ==============================================================
INFO  06:16:14,350 - Pocetak obrade programa Program na liniji 1
INFO  06:16:14,351 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:16:14,352 - Deklarisana konstanta c na liniji 2
INFO  06:16:14,352 - Deklarisana konstanta d na liniji 2
INFO  06:16:14,352 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:16:14,352 - Deklarisana promenljiva e na liniji 3
INFO  06:16:14,352 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:16:14,353 - Deklarisana promenljiva cond na liniji 3
INFO  06:16:14,353 - Pocetak obrade metode main na liniji 5
INFO  06:16:14,354 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:16:14,354 - Zavrsetak obrade programa Program na liniji 1
INFO  06:16:14,354 - ======================TABELA_SIMBOLA==========================
INFO  06:16:14,355 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:16:14,355 - ==============================================================
INFO  06:16:14,355 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:16:14,355 - ==============================================================
INFO  06:16:14,355 - ======================GENERISANJE_KODA========================
INFO  06:16:14,360 - Generisanje koda uspesno zavrseno!
INFO  06:16:14,361 - Generisanje izlaznog fajla test\program.obj
INFO  06:16:14,361 - ==============================================================
INFO  06:17:12,291 - Obrada ulaznog fajla test\program.mj
INFO  06:17:12,373 - #2 program
INFO  06:17:12,373 - #8 Program
INFO  06:17:12,373 - #5 const
INFO  06:17:12,374 - #8 int
INFO  06:17:12,374 - #8 c
INFO  06:17:12,375 - #24 =
INFO  06:17:12,375 - #9 10
INFO  06:17:12,376 - #28 ,
INFO  06:17:12,377 - #8 d
INFO  06:17:12,377 - #24 =
INFO  06:17:12,377 - #9 99
INFO  06:17:12,377 - #27 ;
INFO  06:17:12,377 - #8 int
INFO  06:17:12,379 - #8 e
INFO  06:17:12,379 - #27 ;
INFO  06:17:12,379 - #8 bool
INFO  06:17:12,381 - #8 cond
INFO  06:17:12,381 - #27 ;
INFO  06:17:12,381 - #20 {
INFO  06:17:12,381 - #6 void
INFO  06:17:12,381 - #8 main
INFO  06:17:12,381 - #29 (
INFO  06:17:12,382 - #30 )
INFO  06:17:12,382 - #20 {
INFO  06:17:12,382 - #8 cond
INFO  06:17:12,382 - #24 =
INFO  06:17:12,383 - #12 false
INFO  06:17:12,383 - #27 ;
INFO  06:17:12,384 - #31 if
INFO  06:17:12,384 - #29 (
INFO  06:17:12,384 - #8 cond
INFO  06:17:12,384 - #30 )
INFO  06:17:12,385 - #20 {
INFO  06:17:12,385 - #8 e
INFO  06:17:12,385 - #24 =
INFO  06:17:12,385 - #8 c
INFO  06:17:12,385 - #27 ;
INFO  06:17:12,385 - #21 }
INFO  06:17:12,385 - #3 print
INFO  06:17:12,386 - #29 (
INFO  06:17:12,386 - #8 e
INFO  06:17:12,386 - #30 )
INFO  06:17:12,386 - #27 ;
INFO  06:17:12,386 - #21 }
INFO  06:17:12,386 - #21 }
INFO  06:17:12,387 - =====================SINTAKSNO_STABLO=========================
INFO  06:17:12,389 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:17:12,390 - ==============================================================
INFO  06:17:12,402 - Pocetak obrade programa Program na liniji 1
INFO  06:17:12,402 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:17:12,403 - Deklarisana konstanta c na liniji 2
INFO  06:17:12,403 - Deklarisana konstanta d na liniji 2
INFO  06:17:12,405 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:17:12,405 - Deklarisana promenljiva e na liniji 3
INFO  06:17:12,405 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:17:12,406 - Deklarisana promenljiva cond na liniji 3
INFO  06:17:12,408 - Pocetak obrade metode main na liniji 5
INFO  06:17:12,408 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:17:12,408 - Zavrsetak obrade programa Program na liniji 1
INFO  06:17:12,408 - ======================TABELA_SIMBOLA==========================
INFO  06:17:12,409 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:17:12,409 - ==============================================================
INFO  06:17:12,409 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:17:12,409 - ==============================================================
INFO  06:17:12,409 - ======================GENERISANJE_KODA========================
INFO  06:17:12,415 - Generisanje koda uspesno zavrseno!
INFO  06:17:12,415 - Generisanje izlaznog fajla test\program.obj
INFO  06:17:12,415 - ==============================================================
INFO  06:19:10,330 - Obrada ulaznog fajla test\program.mj
INFO  06:19:10,404 - #2 program
INFO  06:19:10,404 - #8 Program
INFO  06:19:10,404 - #5 const
INFO  06:19:10,406 - #8 int
INFO  06:19:10,406 - #8 c
INFO  06:19:10,407 - #24 =
INFO  06:19:10,407 - #9 10
INFO  06:19:10,407 - #28 ,
INFO  06:19:10,408 - #8 d
INFO  06:19:10,408 - #24 =
INFO  06:19:10,408 - #9 99
INFO  06:19:10,408 - #27 ;
INFO  06:19:10,409 - #8 int
INFO  06:19:10,410 - #8 e
INFO  06:19:10,410 - #27 ;
INFO  06:19:10,411 - #8 bool
INFO  06:19:10,412 - #8 cond
INFO  06:19:10,412 - #27 ;
INFO  06:19:10,412 - #20 {
INFO  06:19:10,412 - #6 void
INFO  06:19:10,413 - #8 main
INFO  06:19:10,413 - #29 (
INFO  06:19:10,414 - #30 )
INFO  06:19:10,414 - #20 {
INFO  06:19:10,414 - #8 cond
INFO  06:19:10,414 - #24 =
INFO  06:19:10,414 - #11 true
INFO  06:19:10,414 - #27 ;
INFO  06:19:10,415 - #31 if
INFO  06:19:10,416 - #29 (
INFO  06:19:10,416 - #8 cond
INFO  06:19:10,416 - #30 )
INFO  06:19:10,417 - #20 {
INFO  06:19:10,417 - #8 e
INFO  06:19:10,417 - #24 =
INFO  06:19:10,417 - #8 c
INFO  06:19:10,417 - #27 ;
INFO  06:19:10,417 - #21 }
INFO  06:19:10,417 - #3 print
INFO  06:19:10,418 - #29 (
INFO  06:19:10,418 - #8 e
INFO  06:19:10,418 - #30 )
INFO  06:19:10,419 - #27 ;
INFO  06:19:10,419 - #21 }
INFO  06:19:10,419 - #21 }
INFO  06:19:10,420 - =====================SINTAKSNO_STABLO=========================
INFO  06:19:10,422 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_true(
                         true
                        ) [Bool_const_true]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:19:10,423 - ==============================================================
INFO  06:19:10,438 - Pocetak obrade programa Program na liniji 1
INFO  06:19:10,438 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:19:10,439 - Deklarisana konstanta c na liniji 2
INFO  06:19:10,439 - Deklarisana konstanta d na liniji 2
INFO  06:19:10,440 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:19:10,440 - Deklarisana promenljiva e na liniji 3
INFO  06:19:10,440 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:19:10,440 - Deklarisana promenljiva cond na liniji 3
INFO  06:19:10,441 - Pocetak obrade metode main na liniji 5
INFO  06:19:10,441 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:19:10,441 - Zavrsetak obrade programa Program na liniji 1
INFO  06:19:10,441 - ======================TABELA_SIMBOLA==========================
INFO  06:19:10,442 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:19:10,442 - ==============================================================
INFO  06:19:10,442 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:19:10,443 - ==============================================================
INFO  06:19:10,443 - ======================GENERISANJE_KODA========================
INFO  06:19:10,448 - Generisanje koda uspesno zavrseno!
INFO  06:19:10,448 - Generisanje izlaznog fajla test\program.obj
INFO  06:19:10,448 - ==============================================================
INFO  06:19:35,388 - Obrada ulaznog fajla test\program.mj
INFO  06:19:35,476 - #2 program
INFO  06:19:35,476 - #8 Program
INFO  06:19:35,476 - #5 const
INFO  06:19:35,477 - #8 int
INFO  06:19:35,477 - #8 c
INFO  06:19:35,478 - #24 =
INFO  06:19:35,478 - #9 10
INFO  06:19:35,478 - #28 ,
INFO  06:19:35,480 - #8 d
INFO  06:19:35,480 - #24 =
INFO  06:19:35,480 - #9 99
INFO  06:19:35,480 - #27 ;
INFO  06:19:35,480 - #8 int
INFO  06:19:35,482 - #8 e
INFO  06:19:35,482 - #27 ;
INFO  06:19:35,482 - #8 bool
INFO  06:19:35,483 - #8 cond
INFO  06:19:35,483 - #27 ;
INFO  06:19:35,483 - #20 {
INFO  06:19:35,484 - #6 void
INFO  06:19:35,484 - #8 main
INFO  06:19:35,484 - #29 (
INFO  06:19:35,485 - #30 )
INFO  06:19:35,485 - #20 {
INFO  06:19:35,485 - #8 cond
INFO  06:19:35,485 - #24 =
INFO  06:19:35,485 - #12 false
INFO  06:19:35,485 - #27 ;
INFO  06:19:35,486 - #31 if
INFO  06:19:35,487 - #29 (
INFO  06:19:35,487 - #8 cond
INFO  06:19:35,487 - #30 )
INFO  06:19:35,487 - #20 {
INFO  06:19:35,487 - #8 e
INFO  06:19:35,487 - #24 =
INFO  06:19:35,488 - #8 c
INFO  06:19:35,488 - #27 ;
INFO  06:19:35,488 - #21 }
INFO  06:19:35,488 - #3 print
INFO  06:19:35,488 - #29 (
INFO  06:19:35,489 - #8 e
INFO  06:19:35,489 - #30 )
INFO  06:19:35,489 - #27 ;
INFO  06:19:35,489 - #21 }
INFO  06:19:35,489 - #21 }
INFO  06:19:35,490 - =====================SINTAKSNO_STABLO=========================
INFO  06:19:35,492 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:19:35,493 - ==============================================================
INFO  06:19:35,505 - Pocetak obrade programa Program na liniji 1
INFO  06:19:35,506 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:19:35,507 - Deklarisana konstanta c na liniji 2
INFO  06:19:35,507 - Deklarisana konstanta d na liniji 2
INFO  06:19:35,507 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:19:35,507 - Deklarisana promenljiva e na liniji 3
INFO  06:19:35,507 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:19:35,507 - Deklarisana promenljiva cond na liniji 3
INFO  06:19:35,508 - Pocetak obrade metode main na liniji 5
INFO  06:19:35,508 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:19:35,508 - Zavrsetak obrade programa Program na liniji 1
INFO  06:19:35,508 - ======================TABELA_SIMBOLA==========================
INFO  06:19:35,509 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:19:35,509 - ==============================================================
INFO  06:19:35,509 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:19:35,509 - ==============================================================
INFO  06:19:35,509 - ======================GENERISANJE_KODA========================
INFO  06:19:35,514 - Generisanje koda uspesno zavrseno!
INFO  06:19:35,514 - Generisanje izlaznog fajla test\program.obj
INFO  06:19:35,514 - ==============================================================
INFO  06:20:36,979 - Obrada ulaznog fajla test\program.mj
INFO  06:20:37,060 - #2 program
INFO  06:20:37,060 - #8 Program
INFO  06:20:37,060 - #5 const
INFO  06:20:37,061 - #8 int
INFO  06:20:37,062 - #8 c
INFO  06:20:37,062 - #24 =
INFO  06:20:37,063 - #9 10
INFO  06:20:37,063 - #28 ,
INFO  06:20:37,064 - #8 d
INFO  06:20:37,064 - #24 =
INFO  06:20:37,064 - #9 99
INFO  06:20:37,064 - #27 ;
INFO  06:20:37,065 - #8 int
INFO  06:20:37,066 - #8 e
INFO  06:20:37,066 - #27 ;
INFO  06:20:37,066 - #8 bool
INFO  06:20:37,067 - #8 cond
INFO  06:20:37,067 - #27 ;
INFO  06:20:37,068 - #20 {
INFO  06:20:37,068 - #6 void
INFO  06:20:37,068 - #8 main
INFO  06:20:37,068 - #29 (
INFO  06:20:37,069 - #30 )
INFO  06:20:37,069 - #20 {
INFO  06:20:37,069 - #8 cond
INFO  06:20:37,069 - #24 =
INFO  06:20:37,069 - #12 false
INFO  06:20:37,069 - #27 ;
INFO  06:20:37,070 - #31 if
INFO  06:20:37,070 - #29 (
INFO  06:20:37,070 - #8 cond
INFO  06:20:37,071 - #30 )
INFO  06:20:37,071 - #20 {
INFO  06:20:37,071 - #8 e
INFO  06:20:37,071 - #24 =
INFO  06:20:37,071 - #8 c
INFO  06:20:37,072 - #27 ;
INFO  06:20:37,072 - #21 }
INFO  06:20:37,072 - #3 print
INFO  06:20:37,072 - #29 (
INFO  06:20:37,072 - #8 e
INFO  06:20:37,072 - #30 )
INFO  06:20:37,073 - #27 ;
INFO  06:20:37,073 - #21 }
INFO  06:20:37,073 - #21 }
INFO  06:20:37,074 - =====================SINTAKSNO_STABLO=========================
INFO  06:20:37,075 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:20:37,076 - ==============================================================
INFO  06:20:37,092 - Pocetak obrade programa Program na liniji 1
INFO  06:20:37,093 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:20:37,094 - Deklarisana konstanta c na liniji 2
INFO  06:20:37,094 - Deklarisana konstanta d na liniji 2
INFO  06:20:37,094 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:20:37,094 - Deklarisana promenljiva e na liniji 3
INFO  06:20:37,094 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:20:37,095 - Deklarisana promenljiva cond na liniji 3
INFO  06:20:37,096 - Pocetak obrade metode main na liniji 5
INFO  06:20:37,096 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:20:37,096 - Zavrsetak obrade programa Program na liniji 1
INFO  06:20:37,096 - ======================TABELA_SIMBOLA==========================
INFO  06:20:37,097 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:20:37,097 - ==============================================================
INFO  06:20:37,097 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:20:37,098 - ==============================================================
INFO  06:20:37,098 - ======================GENERISANJE_KODA========================
INFO  06:20:37,102 - Generisanje koda uspesno zavrseno!
INFO  06:20:37,103 - Generisanje izlaznog fajla test\program.obj
INFO  06:20:37,103 - ==============================================================
INFO  06:30:45,379 - Obrada ulaznog fajla test\program.mj
INFO  06:30:45,461 - #2 program
INFO  06:30:45,461 - #8 Program
INFO  06:30:45,461 - #5 const
INFO  06:30:45,462 - #8 int
INFO  06:30:45,462 - #8 c
INFO  06:30:45,463 - #24 =
INFO  06:30:45,463 - #9 10
INFO  06:30:45,463 - #28 ,
INFO  06:30:45,464 - #8 d
INFO  06:30:45,465 - #24 =
INFO  06:30:45,465 - #9 99
INFO  06:30:45,465 - #27 ;
INFO  06:30:45,465 - #8 int
INFO  06:30:45,467 - #8 e
INFO  06:30:45,467 - #27 ;
INFO  06:30:45,467 - #8 bool
INFO  06:30:45,468 - #8 cond
INFO  06:30:45,468 - #27 ;
INFO  06:30:45,468 - #20 {
INFO  06:30:45,468 - #6 void
INFO  06:30:45,468 - #8 main
INFO  06:30:45,468 - #29 (
INFO  06:30:45,470 - #30 )
INFO  06:30:45,470 - #20 {
INFO  06:30:45,470 - #8 cond
INFO  06:30:45,471 - #24 =
INFO  06:30:45,472 - #12 false
INFO  06:30:45,472 - #27 ;
INFO  06:30:45,473 - #31 if
INFO  06:30:45,473 - #29 (
INFO  06:30:45,473 - #8 cond
INFO  06:30:45,473 - #30 )
INFO  06:30:45,474 - #20 {
INFO  06:30:45,474 - #8 e
INFO  06:30:45,474 - #24 =
INFO  06:30:45,474 - #8 c
INFO  06:30:45,474 - #27 ;
INFO  06:30:45,474 - #21 }
INFO  06:30:45,474 - #3 print
INFO  06:30:45,474 - #29 (
INFO  06:30:45,475 - #8 e
INFO  06:30:45,475 - #30 )
INFO  06:30:45,475 - #27 ;
INFO  06:30:45,475 - #21 }
INFO  06:30:45,475 - #21 }
INFO  06:30:45,476 - =====================SINTAKSNO_STABLO=========================
INFO  06:30:45,478 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:30:45,479 - ==============================================================
INFO  06:30:45,497 - Pocetak obrade programa Program na liniji 1
INFO  06:30:45,497 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:30:45,498 - Deklarisana konstanta c na liniji 2
INFO  06:30:45,498 - Deklarisana konstanta d na liniji 2
INFO  06:30:45,499 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:30:45,499 - Deklarisana promenljiva e na liniji 3
INFO  06:30:45,499 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:30:45,499 - Deklarisana promenljiva cond na liniji 3
INFO  06:30:45,500 - Pocetak obrade metode main na liniji 5
INFO  06:30:45,500 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:30:45,500 - Zavrsetak obrade programa Program na liniji 1
INFO  06:30:45,500 - ======================TABELA_SIMBOLA==========================
INFO  06:30:45,501 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:30:45,501 - ==============================================================
INFO  06:30:45,501 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:30:45,501 - ==============================================================
INFO  06:30:45,501 - ======================GENERISANJE_KODA========================
INFO  06:30:45,506 - Generisanje koda uspesno zavrseno!
INFO  06:30:45,506 - Generisanje izlaznog fajla test\program.obj
INFO  06:30:45,506 - ==============================================================
INFO  06:31:24,926 - Obrada ulaznog fajla test\program.mj
INFO  06:31:25,003 - #2 program
INFO  06:31:25,003 - #8 Program
INFO  06:31:25,003 - #5 const
INFO  06:31:25,004 - #8 int
INFO  06:31:25,004 - #8 c
INFO  06:31:25,005 - #24 =
INFO  06:31:25,005 - #9 10
INFO  06:31:25,005 - #28 ,
INFO  06:31:25,006 - #8 d
INFO  06:31:25,006 - #24 =
INFO  06:31:25,006 - #9 99
INFO  06:31:25,007 - #27 ;
INFO  06:31:25,007 - #8 int
INFO  06:31:25,008 - #8 e
INFO  06:31:25,008 - #27 ;
INFO  06:31:25,008 - #8 bool
INFO  06:31:25,009 - #8 cond
INFO  06:31:25,010 - #27 ;
INFO  06:31:25,010 - #20 {
INFO  06:31:25,010 - #6 void
INFO  06:31:25,010 - #8 main
INFO  06:31:25,010 - #29 (
INFO  06:31:25,012 - #30 )
INFO  06:31:25,012 - #20 {
INFO  06:31:25,012 - #8 cond
INFO  06:31:25,012 - #24 =
INFO  06:31:25,012 - #12 false
INFO  06:31:25,012 - #27 ;
INFO  06:31:25,013 - #31 if
INFO  06:31:25,014 - #29 (
INFO  06:31:25,014 - #8 cond
INFO  06:31:25,014 - #30 )
INFO  06:31:25,015 - #20 {
INFO  06:31:25,015 - #8 e
INFO  06:31:25,015 - #24 =
INFO  06:31:25,015 - #8 c
INFO  06:31:25,015 - #27 ;
INFO  06:31:25,015 - #21 }
INFO  06:31:25,015 - #3 print
INFO  06:31:25,016 - #29 (
INFO  06:31:25,016 - #8 e
INFO  06:31:25,016 - #30 )
INFO  06:31:25,016 - #27 ;
INFO  06:31:25,016 - #21 }
INFO  06:31:25,016 - #21 }
INFO  06:31:25,017 - =====================SINTAKSNO_STABLO=========================
INFO  06:31:25,018 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:31:25,019 - ==============================================================
INFO  06:31:25,033 - Pocetak obrade programa Program na liniji 1
INFO  06:31:25,033 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:31:25,034 - Deklarisana konstanta c na liniji 2
INFO  06:31:25,035 - Deklarisana konstanta d na liniji 2
INFO  06:31:25,035 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:31:25,035 - Deklarisana promenljiva e na liniji 3
INFO  06:31:25,035 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:31:25,035 - Deklarisana promenljiva cond na liniji 3
INFO  06:31:25,036 - Pocetak obrade metode main na liniji 5
INFO  06:31:25,036 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:31:25,037 - Zavrsetak obrade programa Program na liniji 1
INFO  06:31:25,037 - ======================TABELA_SIMBOLA==========================
INFO  06:31:25,037 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:31:25,038 - ==============================================================
INFO  06:31:25,038 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:31:25,038 - ==============================================================
INFO  06:31:25,038 - ======================GENERISANJE_KODA========================
INFO  06:31:25,043 - Generisanje koda uspesno zavrseno!
INFO  06:31:25,043 - Generisanje izlaznog fajla test\program.obj
INFO  06:31:25,043 - ==============================================================
INFO  06:32:52,225 - Obrada ulaznog fajla test\program.mj
INFO  06:32:52,304 - #2 program
INFO  06:32:52,304 - #8 Program
INFO  06:32:52,305 - #5 const
INFO  06:32:52,305 - #8 int
INFO  06:32:52,305 - #8 c
INFO  06:32:52,307 - #24 =
INFO  06:32:52,307 - #9 10
INFO  06:32:52,307 - #28 ,
INFO  06:32:52,308 - #8 d
INFO  06:32:52,308 - #24 =
INFO  06:32:52,308 - #9 99
INFO  06:32:52,308 - #27 ;
INFO  06:32:52,309 - #8 int
INFO  06:32:52,310 - #8 e
INFO  06:32:52,311 - #27 ;
INFO  06:32:52,311 - #8 bool
INFO  06:32:52,312 - #8 cond
INFO  06:32:52,312 - #27 ;
INFO  06:32:52,313 - #20 {
INFO  06:32:52,313 - #6 void
INFO  06:32:52,313 - #8 main
INFO  06:32:52,313 - #29 (
INFO  06:32:52,314 - #30 )
INFO  06:32:52,314 - #20 {
INFO  06:32:52,314 - #8 cond
INFO  06:32:52,314 - #24 =
INFO  06:32:52,314 - #12 false
INFO  06:32:52,314 - #27 ;
INFO  06:32:52,315 - #31 if
INFO  06:32:52,316 - #29 (
INFO  06:32:52,316 - #8 cond
INFO  06:32:52,316 - #30 )
INFO  06:32:52,316 - #20 {
INFO  06:32:52,316 - #8 e
INFO  06:32:52,317 - #24 =
INFO  06:32:52,317 - #8 c
INFO  06:32:52,317 - #27 ;
INFO  06:32:52,317 - #21 }
INFO  06:32:52,317 - #3 print
INFO  06:32:52,317 - #29 (
INFO  06:32:52,317 - #8 e
INFO  06:32:52,317 - #30 )
INFO  06:32:52,318 - #27 ;
INFO  06:32:52,318 - #21 }
INFO  06:32:52,318 - #21 }
INFO  06:32:52,319 - =====================SINTAKSNO_STABLO=========================
INFO  06:32:52,320 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   cond
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_bool_const(
                        Bool_const_false(
                         false
                        ) [Bool_const_false]
                      ) [Factor_bool_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:32:52,321 - ==============================================================
INFO  06:32:52,335 - Pocetak obrade programa Program na liniji 1
INFO  06:32:52,336 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:32:52,337 - Deklarisana konstanta c na liniji 2
INFO  06:32:52,337 - Deklarisana konstanta d na liniji 2
INFO  06:32:52,337 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:32:52,337 - Deklarisana promenljiva e na liniji 3
INFO  06:32:52,337 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:32:52,337 - Deklarisana promenljiva cond na liniji 3
INFO  06:32:52,338 - Pocetak obrade metode main na liniji 5
INFO  06:32:52,339 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:32:52,339 - Zavrsetak obrade programa Program na liniji 1
INFO  06:32:52,339 - ======================TABELA_SIMBOLA==========================
INFO  06:32:52,340 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:32:52,341 - ==============================================================
INFO  06:32:52,341 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:32:52,341 - ==============================================================
INFO  06:32:52,341 - ======================GENERISANJE_KODA========================
INFO  06:32:52,347 - Generisanje koda uspesno zavrseno!
INFO  06:32:52,347 - Generisanje izlaznog fajla test\program.obj
INFO  06:32:52,347 - ==============================================================
INFO  06:33:15,735 - Obrada ulaznog fajla test\program.mj
INFO  06:33:15,816 - #2 program
INFO  06:33:15,816 - #8 Program
INFO  06:33:15,816 - #5 const
INFO  06:33:15,817 - #8 int
INFO  06:33:15,817 - #8 c
INFO  06:33:15,818 - #24 =
INFO  06:33:15,818 - #9 10
INFO  06:33:15,818 - #28 ,
INFO  06:33:15,820 - #8 d
INFO  06:33:15,820 - #24 =
INFO  06:33:15,820 - #9 99
INFO  06:33:15,820 - #27 ;
INFO  06:33:15,820 - #8 int
INFO  06:33:15,822 - #8 e
INFO  06:33:15,822 - #27 ;
INFO  06:33:15,822 - #8 bool
INFO  06:33:15,823 - #8 cond
INFO  06:33:15,824 - #27 ;
INFO  06:33:15,824 - #20 {
INFO  06:33:15,824 - #6 void
INFO  06:33:15,824 - #8 main
INFO  06:33:15,824 - #29 (
INFO  06:33:15,825 - #30 )
INFO  06:33:15,825 - #20 {
INFO  06:33:15,826 - #8 cond
INFO  06:33:15,826 - #24 =
INFO  06:33:15,826 - #12 false
INFO  06:33:15,826 - #27 ;
INFO  06:33:15,827 - #8 e
INFO  06:33:15,827 - #24 =
INFO  06:33:15,827 - #8 d
INFO  06:33:15,827 - #27 ;
INFO  06:33:15,828 - #31 if
INFO  06:33:15,828 - #29 (
INFO  06:33:15,828 - #8 cond
INFO  06:33:15,828 - #30 )
INFO  06:33:15,828 - #20 {
INFO  06:33:15,829 - #8 e
INFO  06:33:15,829 - #24 =
INFO  06:33:15,829 - #8 c
INFO  06:33:15,829 - #27 ;
INFO  06:33:15,829 - #21 }
INFO  06:33:15,829 - #3 print
INFO  06:33:15,829 - #29 (
INFO  06:33:15,830 - #8 e
INFO  06:33:15,830 - #30 )
INFO  06:33:15,830 - #27 ;
INFO  06:33:15,830 - #21 }
INFO  06:33:15,830 - #21 }
INFO  06:33:15,832 - =====================SINTAKSNO_STABLO=========================
INFO  06:33:15,840 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         bool
        ) [Type]
        Var_single(
          Var_normal(
           cond
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     cond
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           cond
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:33:15,841 - ==============================================================
INFO  06:33:15,855 - Pocetak obrade programa Program na liniji 1
INFO  06:33:15,855 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:33:15,856 - Deklarisana konstanta c na liniji 2
INFO  06:33:15,856 - Deklarisana konstanta d na liniji 2
INFO  06:33:15,856 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:33:15,856 - Deklarisana promenljiva e na liniji 3
INFO  06:33:15,856 - Pronadjen tip bool u tabeli simbola na liniji 3
INFO  06:33:15,856 - Deklarisana promenljiva cond na liniji 3
INFO  06:33:15,857 - Pocetak obrade metode main na liniji 5
INFO  06:33:15,857 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:33:15,858 - Zavrsetak obrade programa Program na liniji 1
INFO  06:33:15,858 - ======================TABELA_SIMBOLA==========================
INFO  06:33:15,858 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var cond: bool
Meth main: none

INFO  06:33:15,858 - ==============================================================
INFO  06:33:15,859 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:33:15,859 - ==============================================================
INFO  06:33:15,859 - ======================GENERISANJE_KODA========================
INFO  06:33:15,865 - Generisanje koda uspesno zavrseno!
INFO  06:33:15,865 - Generisanje izlaznog fajla test\program.obj
INFO  06:33:15,865 - ==============================================================
INFO  06:35:21,257 - Obrada ulaznog fajla test\program.mj
INFO  06:35:21,341 - #2 program
INFO  06:35:21,341 - #8 Program
INFO  06:35:21,342 - #5 const
INFO  06:35:21,343 - #8 int
INFO  06:35:21,343 - #8 c
INFO  06:35:21,343 - #24 =
INFO  06:35:21,344 - #9 10
INFO  06:35:21,344 - #28 ,
INFO  06:35:21,345 - #8 d
INFO  06:35:21,345 - #24 =
INFO  06:35:21,345 - #9 99
INFO  06:35:21,345 - #27 ;
INFO  06:35:21,346 - #8 int
INFO  06:35:21,347 - #8 e
INFO  06:35:21,347 - #27 ;
INFO  06:35:21,348 - #20 {
INFO  06:35:21,349 - #6 void
INFO  06:35:21,349 - #8 main
INFO  06:35:21,349 - #29 (
INFO  06:35:21,350 - #30 )
INFO  06:35:21,350 - #20 {
INFO  06:35:21,350 - #31 if
INFO  06:35:21,350 - #29 (
INFO  06:35:21,350 - #12 false
INFO  06:35:21,351 - #30 )
INFO  06:35:21,352 - #20 {
INFO  06:35:21,352 - #8 e
INFO  06:35:21,352 - #24 =
INFO  06:35:21,352 - #8 c
INFO  06:35:21,352 - #27 ;
INFO  06:35:21,353 - #21 }
INFO  06:35:21,353 - #3 print
INFO  06:35:21,354 - #29 (
INFO  06:35:21,354 - #8 e
INFO  06:35:21,354 - #30 )
INFO  06:35:21,354 - #27 ;
INFO  06:35:21,354 - #21 }
INFO  06:35:21,355 - #21 }
INFO  06:35:21,356 - =====================SINTAKSNO_STABLO=========================
INFO  06:35:21,358 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:35:21,358 - ==============================================================
INFO  06:35:21,374 - Pocetak obrade programa Program na liniji 1
INFO  06:35:21,374 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:35:21,375 - Deklarisana konstanta c na liniji 2
INFO  06:35:21,375 - Deklarisana konstanta d na liniji 2
INFO  06:35:21,375 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:35:21,375 - Deklarisana promenljiva e na liniji 3
INFO  06:35:21,376 - Pocetak obrade metode main na liniji 5
INFO  06:35:21,377 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:35:21,377 - Zavrsetak obrade programa Program na liniji 1
INFO  06:35:21,377 - ======================TABELA_SIMBOLA==========================
INFO  06:35:21,377 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:35:21,378 - ==============================================================
INFO  06:35:21,378 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:35:21,378 - ==============================================================
INFO  06:35:21,378 - ======================GENERISANJE_KODA========================
INFO  06:35:21,383 - Generisanje koda uspesno zavrseno!
INFO  06:35:21,384 - Generisanje izlaznog fajla test\program.obj
INFO  06:35:21,384 - ==============================================================
INFO  06:38:29,709 - Obrada ulaznog fajla test\program.mj
INFO  06:38:29,784 - #2 program
INFO  06:38:29,784 - #8 Program
INFO  06:38:29,785 - #5 const
INFO  06:38:29,786 - #8 int
INFO  06:38:29,786 - #8 c
INFO  06:38:29,787 - #24 =
INFO  06:38:29,788 - #9 10
INFO  06:38:29,788 - #28 ,
INFO  06:38:29,789 - #8 d
INFO  06:38:29,789 - #24 =
INFO  06:38:29,790 - #9 99
INFO  06:38:29,790 - #27 ;
INFO  06:38:29,790 - #8 int
INFO  06:38:29,791 - #8 e
INFO  06:38:29,792 - #27 ;
INFO  06:38:29,792 - #20 {
INFO  06:38:29,793 - #6 void
INFO  06:38:29,793 - #8 main
INFO  06:38:29,793 - #29 (
INFO  06:38:29,794 - #30 )
INFO  06:38:29,794 - #20 {
INFO  06:38:29,794 - #8 e
INFO  06:38:29,794 - #24 =
INFO  06:38:29,795 - #8 d
INFO  06:38:29,795 - #27 ;
INFO  06:38:29,795 - #31 if
INFO  06:38:29,796 - #29 (
INFO  06:38:29,796 - #12 false
INFO  06:38:29,796 - #30 )
INFO  06:38:29,797 - #20 {
INFO  06:38:29,797 - #8 e
INFO  06:38:29,797 - #24 =
INFO  06:38:29,797 - #8 c
INFO  06:38:29,797 - #27 ;
INFO  06:38:29,797 - #21 }
INFO  06:38:29,797 - #3 print
INFO  06:38:29,798 - #29 (
INFO  06:38:29,798 - #8 e
INFO  06:38:29,798 - #30 )
INFO  06:38:29,798 - #27 ;
INFO  06:38:29,798 - #21 }
INFO  06:38:29,798 - #21 }
INFO  06:38:29,799 - =====================SINTAKSNO_STABLO=========================
INFO  06:38:29,800 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         d
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:38:29,801 - ==============================================================
INFO  06:38:29,814 - Pocetak obrade programa Program na liniji 1
INFO  06:38:29,814 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:38:29,815 - Deklarisana konstanta c na liniji 2
INFO  06:38:29,815 - Deklarisana konstanta d na liniji 2
INFO  06:38:29,815 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:38:29,815 - Deklarisana promenljiva e na liniji 3
INFO  06:38:29,816 - Pocetak obrade metode main na liniji 5
INFO  06:38:29,816 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:38:29,816 - Zavrsetak obrade programa Program na liniji 1
INFO  06:38:29,816 - ======================TABELA_SIMBOLA==========================
INFO  06:38:29,817 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:38:29,817 - ==============================================================
INFO  06:38:29,817 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:38:29,817 - ==============================================================
INFO  06:38:29,817 - ======================GENERISANJE_KODA========================
INFO  06:38:29,822 - Generisanje koda uspesno zavrseno!
INFO  06:38:29,823 - Generisanje izlaznog fajla test\program.obj
INFO  06:38:29,823 - ==============================================================
INFO  06:39:08,372 - Obrada ulaznog fajla test\program.mj
INFO  06:39:08,462 - #2 program
INFO  06:39:08,462 - #8 Program
INFO  06:39:08,462 - #5 const
INFO  06:39:08,463 - #8 int
INFO  06:39:08,464 - #8 c
INFO  06:39:08,464 - #24 =
INFO  06:39:08,465 - #9 10
INFO  06:39:08,465 - #28 ,
INFO  06:39:08,466 - #8 d
INFO  06:39:08,466 - #24 =
INFO  06:39:08,466 - #9 99
INFO  06:39:08,466 - #27 ;
INFO  06:39:08,467 - #8 int
INFO  06:39:08,468 - #8 e
INFO  06:39:08,468 - #27 ;
INFO  06:39:08,469 - #20 {
INFO  06:39:08,470 - #6 void
INFO  06:39:08,470 - #8 main
INFO  06:39:08,470 - #29 (
INFO  06:39:08,471 - #30 )
INFO  06:39:08,471 - #20 {
INFO  06:39:08,471 - #31 if
INFO  06:39:08,471 - #29 (
INFO  06:39:08,471 - #12 false
INFO  06:39:08,472 - #30 )
INFO  06:39:08,472 - #20 {
INFO  06:39:08,472 - #8 e
INFO  06:39:08,473 - #24 =
INFO  06:39:08,473 - #8 c
INFO  06:39:08,473 - #27 ;
INFO  06:39:08,473 - #21 }
INFO  06:39:08,473 - #3 print
INFO  06:39:08,474 - #29 (
INFO  06:39:08,474 - #8 e
INFO  06:39:08,474 - #30 )
INFO  06:39:08,474 - #27 ;
INFO  06:39:08,474 - #21 }
INFO  06:39:08,474 - #21 }
INFO  06:39:08,475 - =====================SINTAKSNO_STABLO=========================
INFO  06:39:08,477 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:39:08,477 - ==============================================================
INFO  06:39:08,493 - Pocetak obrade programa Program na liniji 1
INFO  06:39:08,493 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:39:08,494 - Deklarisana konstanta c na liniji 2
INFO  06:39:08,494 - Deklarisana konstanta d na liniji 2
INFO  06:39:08,494 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:39:08,494 - Deklarisana promenljiva e na liniji 3
INFO  06:39:08,495 - Pocetak obrade metode main na liniji 5
INFO  06:39:08,495 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:39:08,496 - Zavrsetak obrade programa Program na liniji 1
INFO  06:39:08,496 - ======================TABELA_SIMBOLA==========================
INFO  06:39:08,496 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:39:08,496 - ==============================================================
INFO  06:39:08,496 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:39:08,496 - ==============================================================
INFO  06:39:08,497 - ======================GENERISANJE_KODA========================
INFO  06:39:08,501 - Generisanje koda uspesno zavrseno!
INFO  06:39:08,501 - Generisanje izlaznog fajla test\program.obj
INFO  06:39:08,501 - ==============================================================
INFO  06:43:56,413 - Obrada ulaznog fajla test\program.mj
INFO  06:43:56,492 - #2 program
INFO  06:43:56,492 - #8 Program
INFO  06:43:56,492 - #5 const
INFO  06:43:56,493 - #8 int
INFO  06:43:56,493 - #8 c
INFO  06:43:56,493 - #24 =
INFO  06:43:56,494 - #9 10
INFO  06:43:56,494 - #28 ,
INFO  06:43:56,495 - #8 d
INFO  06:43:56,495 - #24 =
INFO  06:43:56,495 - #9 99
INFO  06:43:56,495 - #27 ;
INFO  06:43:56,496 - #8 int
INFO  06:43:56,497 - #8 e
INFO  06:43:56,497 - #27 ;
INFO  06:43:56,498 - #20 {
INFO  06:43:56,499 - #6 void
INFO  06:43:56,499 - #8 main
INFO  06:43:56,499 - #29 (
INFO  06:43:56,500 - #30 )
INFO  06:43:56,500 - #20 {
INFO  06:43:56,500 - #31 if
INFO  06:43:56,500 - #29 (
INFO  06:43:56,500 - #12 false
INFO  06:43:56,501 - #30 )
INFO  06:43:56,502 - #20 {
INFO  06:43:56,502 - #8 e
INFO  06:43:56,502 - #24 =
INFO  06:43:56,502 - #8 c
INFO  06:43:56,502 - #27 ;
INFO  06:43:56,503 - #21 }
INFO  06:43:56,503 - #3 print
INFO  06:43:56,503 - #29 (
INFO  06:43:56,503 - #8 e
INFO  06:43:56,503 - #30 )
INFO  06:43:56,503 - #27 ;
INFO  06:43:56,504 - #21 }
INFO  06:43:56,504 - #21 }
INFO  06:43:56,505 - =====================SINTAKSNO_STABLO=========================
INFO  06:43:56,506 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:43:56,507 - ==============================================================
INFO  06:43:56,522 - Pocetak obrade programa Program na liniji 1
INFO  06:43:56,522 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:43:56,523 - Deklarisana konstanta c na liniji 2
INFO  06:43:56,524 - Deklarisana konstanta d na liniji 2
INFO  06:43:56,524 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:43:56,524 - Deklarisana promenljiva e na liniji 3
INFO  06:43:56,525 - Pocetak obrade metode main na liniji 5
INFO  06:43:56,525 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:43:56,525 - Zavrsetak obrade programa Program na liniji 1
INFO  06:43:56,525 - ======================TABELA_SIMBOLA==========================
INFO  06:43:56,526 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:43:56,526 - ==============================================================
INFO  06:43:56,526 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:43:56,527 - ==============================================================
INFO  06:43:56,527 - ======================GENERISANJE_KODA========================
INFO  06:43:56,532 - Generisanje koda uspesno zavrseno!
INFO  06:43:56,533 - Generisanje izlaznog fajla test\program.obj
INFO  06:43:56,533 - ==============================================================
INFO  06:52:37,457 - Obrada ulaznog fajla test\program.mj
INFO  06:52:37,537 - #2 program
INFO  06:52:37,538 - #8 Program
INFO  06:52:37,538 - #5 const
INFO  06:52:37,539 - #8 int
INFO  06:52:37,539 - #8 c
INFO  06:52:37,540 - #24 =
INFO  06:52:37,540 - #9 10
INFO  06:52:37,540 - #28 ,
INFO  06:52:37,541 - #8 d
INFO  06:52:37,541 - #24 =
INFO  06:52:37,542 - #9 99
INFO  06:52:37,542 - #27 ;
INFO  06:52:37,542 - #8 int
INFO  06:52:37,543 - #8 e
INFO  06:52:37,543 - #27 ;
INFO  06:52:37,544 - #20 {
INFO  06:52:37,545 - #6 void
INFO  06:52:37,546 - #8 main
INFO  06:52:37,546 - #29 (
INFO  06:52:37,546 - #30 )
INFO  06:52:37,547 - #20 {
INFO  06:52:37,547 - #31 if
INFO  06:52:37,547 - #29 (
INFO  06:52:37,547 - #12 false
INFO  06:52:37,547 - #30 )
INFO  06:52:37,548 - #20 {
INFO  06:52:37,548 - #8 e
INFO  06:52:37,548 - #24 =
INFO  06:52:37,548 - #8 c
INFO  06:52:37,548 - #27 ;
INFO  06:52:37,549 - #21 }
INFO  06:52:37,549 - #3 print
INFO  06:52:37,549 - #29 (
INFO  06:52:37,549 - #8 e
INFO  06:52:37,549 - #30 )
INFO  06:52:37,550 - #27 ;
INFO  06:52:37,550 - #21 }
INFO  06:52:37,550 - #21 }
INFO  06:52:37,551 - =====================SINTAKSNO_STABLO=========================
INFO  06:52:37,552 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:52:37,553 - ==============================================================
INFO  06:52:37,567 - Pocetak obrade programa Program na liniji 1
INFO  06:52:37,567 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:52:37,568 - Deklarisana konstanta c na liniji 2
INFO  06:52:37,568 - Deklarisana konstanta d na liniji 2
INFO  06:52:37,569 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:52:37,569 - Deklarisana promenljiva e na liniji 3
INFO  06:52:37,569 - Pocetak obrade metode main na liniji 5
INFO  06:52:37,570 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:52:37,570 - Zavrsetak obrade programa Program na liniji 1
INFO  06:52:37,570 - ======================TABELA_SIMBOLA==========================
INFO  06:52:37,571 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:52:37,571 - ==============================================================
INFO  06:52:37,571 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:52:37,571 - ==============================================================
INFO  06:52:37,571 - ======================GENERISANJE_KODA========================
INFO  06:52:37,578 - Generisanje koda uspesno zavrseno!
INFO  06:52:37,578 - Generisanje izlaznog fajla test\program.obj
INFO  06:52:37,578 - ==============================================================
INFO  06:53:25,668 - Obrada ulaznog fajla test\program.mj
INFO  06:53:25,756 - #2 program
INFO  06:53:25,757 - #8 Program
INFO  06:53:25,757 - #5 const
INFO  06:53:25,757 - #8 int
INFO  06:53:25,757 - #8 c
INFO  06:53:25,758 - #24 =
INFO  06:53:25,758 - #9 10
INFO  06:53:25,758 - #28 ,
INFO  06:53:25,759 - #8 d
INFO  06:53:25,759 - #24 =
INFO  06:53:25,760 - #9 99
INFO  06:53:25,760 - #27 ;
INFO  06:53:25,760 - #8 int
INFO  06:53:25,761 - #8 e
INFO  06:53:25,761 - #27 ;
INFO  06:53:25,761 - #20 {
INFO  06:53:25,762 - #6 void
INFO  06:53:25,763 - #8 main
INFO  06:53:25,763 - #29 (
INFO  06:53:25,763 - #30 )
INFO  06:53:25,763 - #20 {
INFO  06:53:25,763 - #31 if
INFO  06:53:25,764 - #29 (
INFO  06:53:25,764 - #12 false
INFO  06:53:25,764 - #30 )
INFO  06:53:25,765 - #20 {
INFO  06:53:25,765 - #8 e
INFO  06:53:25,765 - #24 =
INFO  06:53:25,765 - #8 c
INFO  06:53:25,765 - #27 ;
INFO  06:53:25,766 - #21 }
INFO  06:53:25,766 - #3 print
INFO  06:53:25,766 - #29 (
INFO  06:53:25,766 - #8 e
INFO  06:53:25,766 - #30 )
INFO  06:53:25,766 - #27 ;
INFO  06:53:25,766 - #21 }
INFO  06:53:25,767 - #21 }
INFO  06:53:25,768 - =====================SINTAKSNO_STABLO=========================
INFO  06:53:25,769 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:53:25,769 - ==============================================================
INFO  06:53:25,782 - Pocetak obrade programa Program na liniji 1
INFO  06:53:25,782 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:53:25,783 - Deklarisana konstanta c na liniji 2
INFO  06:53:25,783 - Deklarisana konstanta d na liniji 2
INFO  06:53:25,783 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:53:25,784 - Deklarisana promenljiva e na liniji 3
INFO  06:53:25,785 - Pocetak obrade metode main na liniji 5
INFO  06:53:25,785 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:53:25,785 - Zavrsetak obrade programa Program na liniji 1
INFO  06:53:25,786 - ======================TABELA_SIMBOLA==========================
INFO  06:53:25,786 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:53:25,786 - ==============================================================
INFO  06:53:25,787 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:53:25,787 - ==============================================================
INFO  06:53:25,787 - ======================GENERISANJE_KODA========================
INFO  06:53:25,792 - Generisanje koda uspesno zavrseno!
INFO  06:53:25,792 - Generisanje izlaznog fajla test\program.obj
INFO  06:53:25,792 - ==============================================================
INFO  06:54:33,817 - Obrada ulaznog fajla test\program.mj
INFO  06:54:33,912 - #2 program
INFO  06:54:33,912 - #8 Program
INFO  06:54:33,912 - #5 const
INFO  06:54:33,913 - #8 int
INFO  06:54:33,913 - #8 c
INFO  06:54:33,914 - #24 =
INFO  06:54:33,914 - #9 10
INFO  06:54:33,914 - #28 ,
INFO  06:54:33,915 - #8 d
INFO  06:54:33,915 - #24 =
INFO  06:54:33,915 - #9 99
INFO  06:54:33,915 - #27 ;
INFO  06:54:33,916 - #8 int
INFO  06:54:33,917 - #8 e
INFO  06:54:33,917 - #27 ;
INFO  06:54:33,917 - #20 {
INFO  06:54:33,918 - #6 void
INFO  06:54:33,918 - #8 main
INFO  06:54:33,918 - #29 (
INFO  06:54:33,919 - #30 )
INFO  06:54:33,919 - #20 {
INFO  06:54:33,919 - #8 e
INFO  06:54:33,919 - #24 =
INFO  06:54:33,920 - #9 11
INFO  06:54:33,920 - #27 ;
INFO  06:54:33,920 - #31 if
INFO  06:54:33,921 - #29 (
INFO  06:54:33,921 - #12 false
INFO  06:54:33,921 - #30 )
INFO  06:54:33,922 - #20 {
INFO  06:54:33,922 - #8 e
INFO  06:54:33,922 - #24 =
INFO  06:54:33,922 - #9 99
INFO  06:54:33,922 - #27 ;
INFO  06:54:33,922 - #21 }
INFO  06:54:33,922 - #3 print
INFO  06:54:33,923 - #29 (
INFO  06:54:33,923 - #8 e
INFO  06:54:33,923 - #30 )
INFO  06:54:33,924 - #27 ;
INFO  06:54:33,924 - #21 }
INFO  06:54:33,924 - #21 }
INFO  06:54:33,925 - =====================SINTAKSNO_STABLO=========================
INFO  06:54:33,926 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_num_const(
                       11
                      ) [Factor_num_const]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           99
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:54:33,927 - ==============================================================
INFO  06:54:33,940 - Pocetak obrade programa Program na liniji 1
INFO  06:54:33,941 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:54:33,942 - Deklarisana konstanta c na liniji 2
INFO  06:54:33,942 - Deklarisana konstanta d na liniji 2
INFO  06:54:33,942 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:54:33,942 - Deklarisana promenljiva e na liniji 3
INFO  06:54:33,943 - Pocetak obrade metode main na liniji 5
INFO  06:54:33,943 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:54:33,943 - Zavrsetak obrade programa Program na liniji 1
INFO  06:54:33,943 - ======================TABELA_SIMBOLA==========================
INFO  06:54:33,944 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:54:33,944 - ==============================================================
INFO  06:54:33,944 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:54:33,944 - ==============================================================
INFO  06:54:33,944 - ======================GENERISANJE_KODA========================
INFO  06:54:33,949 - Generisanje koda uspesno zavrseno!
INFO  06:54:33,949 - Generisanje izlaznog fajla test\program.obj
INFO  06:54:33,949 - ==============================================================
INFO  06:55:01,066 - Obrada ulaznog fajla test\program.mj
INFO  06:55:01,154 - #2 program
INFO  06:55:01,154 - #8 Program
INFO  06:55:01,154 - #5 const
INFO  06:55:01,155 - #8 int
INFO  06:55:01,155 - #8 c
INFO  06:55:01,156 - #24 =
INFO  06:55:01,156 - #9 13
INFO  06:55:01,156 - #28 ,
INFO  06:55:01,157 - #8 d
INFO  06:55:01,158 - #24 =
INFO  06:55:01,158 - #9 99
INFO  06:55:01,158 - #27 ;
INFO  06:55:01,158 - #8 int
INFO  06:55:01,160 - #8 e
INFO  06:55:01,160 - #27 ;
INFO  06:55:01,161 - #20 {
INFO  06:55:01,162 - #6 void
INFO  06:55:01,162 - #8 main
INFO  06:55:01,162 - #29 (
INFO  06:55:01,163 - #30 )
INFO  06:55:01,163 - #20 {
INFO  06:55:01,163 - #8 e
INFO  06:55:01,163 - #24 =
INFO  06:55:01,164 - #8 c
INFO  06:55:01,164 - #27 ;
INFO  06:55:01,164 - #31 if
INFO  06:55:01,165 - #29 (
INFO  06:55:01,165 - #12 false
INFO  06:55:01,165 - #30 )
INFO  06:55:01,166 - #20 {
INFO  06:55:01,166 - #8 e
INFO  06:55:01,166 - #24 =
INFO  06:55:01,166 - #8 d
INFO  06:55:01,166 - #27 ;
INFO  06:55:01,166 - #21 }
INFO  06:55:01,166 - #3 print
INFO  06:55:01,167 - #29 (
INFO  06:55:01,167 - #8 e
INFO  06:55:01,167 - #30 )
INFO  06:55:01,167 - #27 ;
INFO  06:55:01,167 - #21 }
INFO  06:55:01,167 - #21 }
INFO  06:55:01,168 - =====================SINTAKSNO_STABLO=========================
INFO  06:55:01,169 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         c
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:55:01,170 - ==============================================================
INFO  06:55:01,185 - Pocetak obrade programa Program na liniji 1
INFO  06:55:01,185 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:55:01,186 - Deklarisana konstanta c na liniji 2
INFO  06:55:01,186 - Deklarisana konstanta d na liniji 2
INFO  06:55:01,186 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:55:01,187 - Deklarisana promenljiva e na liniji 3
INFO  06:55:01,188 - Pocetak obrade metode main na liniji 5
INFO  06:55:01,188 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:55:01,188 - Zavrsetak obrade programa Program na liniji 1
INFO  06:55:01,188 - ======================TABELA_SIMBOLA==========================
INFO  06:55:01,189 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:55:01,189 - ==============================================================
INFO  06:55:01,189 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:55:01,189 - ==============================================================
INFO  06:55:01,190 - ======================GENERISANJE_KODA========================
INFO  06:55:01,196 - Generisanje koda uspesno zavrseno!
INFO  06:55:01,196 - Generisanje izlaznog fajla test\program.obj
INFO  06:55:01,196 - ==============================================================
INFO  06:55:30,688 - Obrada ulaznog fajla test\program.mj
INFO  06:55:30,769 - #2 program
INFO  06:55:30,770 - #8 Program
INFO  06:55:30,770 - #5 const
INFO  06:55:30,771 - #8 int
INFO  06:55:30,771 - #8 c
INFO  06:55:30,772 - #24 =
INFO  06:55:30,772 - #9 13
INFO  06:55:30,772 - #28 ,
INFO  06:55:30,773 - #8 d
INFO  06:55:30,773 - #24 =
INFO  06:55:30,773 - #9 99
INFO  06:55:30,773 - #27 ;
INFO  06:55:30,774 - #8 int
INFO  06:55:30,775 - #8 e
INFO  06:55:30,776 - #27 ;
INFO  06:55:30,777 - #20 {
INFO  06:55:30,778 - #6 void
INFO  06:55:30,778 - #8 main
INFO  06:55:30,778 - #29 (
INFO  06:55:30,779 - #30 )
INFO  06:55:30,779 - #20 {
INFO  06:55:30,780 - #8 e
INFO  06:55:30,780 - #24 =
INFO  06:55:30,780 - #8 c
INFO  06:55:30,780 - #27 ;
INFO  06:55:30,782 - #31 if
INFO  06:55:30,782 - #29 (
INFO  06:55:30,782 - #12 false
INFO  06:55:30,782 - #30 )
INFO  06:55:30,783 - #20 {
INFO  06:55:30,784 - #8 e
INFO  06:55:30,784 - #24 =
INFO  06:55:30,784 - #8 d
INFO  06:55:30,784 - #27 ;
INFO  06:55:30,784 - #21 }
INFO  06:55:30,784 - #3 print
INFO  06:55:30,785 - #29 (
INFO  06:55:30,785 - #8 e
INFO  06:55:30,785 - #30 )
INFO  06:55:30,785 - #27 ;
INFO  06:55:30,785 - #21 }
INFO  06:55:30,785 - #21 }
INFO  06:55:30,786 - =====================SINTAKSNO_STABLO=========================
INFO  06:55:30,788 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         c
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:55:30,789 - ==============================================================
INFO  06:55:30,803 - Pocetak obrade programa Program na liniji 1
INFO  06:55:30,803 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:55:30,805 - Deklarisana konstanta c na liniji 2
INFO  06:55:30,805 - Deklarisana konstanta d na liniji 2
INFO  06:55:30,805 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:55:30,806 - Deklarisana promenljiva e na liniji 3
INFO  06:55:30,807 - Pocetak obrade metode main na liniji 5
INFO  06:55:30,807 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:55:30,807 - Zavrsetak obrade programa Program na liniji 1
INFO  06:55:30,807 - ======================TABELA_SIMBOLA==========================
INFO  06:55:30,808 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:55:30,808 - ==============================================================
INFO  06:55:30,808 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:55:30,808 - ==============================================================
INFO  06:55:30,808 - ======================GENERISANJE_KODA========================
INFO  06:55:30,813 - Generisanje koda uspesno zavrseno!
INFO  06:55:30,813 - Generisanje izlaznog fajla test\program.obj
INFO  06:55:30,813 - ==============================================================
INFO  06:56:15,928 - Obrada ulaznog fajla test\program.mj
INFO  06:56:16,010 - #2 program
INFO  06:56:16,010 - #8 Program
INFO  06:56:16,010 - #5 const
INFO  06:56:16,010 - #8 int
INFO  06:56:16,011 - #8 c
INFO  06:56:16,011 - #24 =
INFO  06:56:16,011 - #9 13
INFO  06:56:16,011 - #28 ,
INFO  06:56:16,012 - #8 d
INFO  06:56:16,012 - #24 =
INFO  06:56:16,013 - #9 99
INFO  06:56:16,013 - #27 ;
INFO  06:56:16,013 - #8 int
INFO  06:56:16,014 - #8 e
INFO  06:56:16,014 - #27 ;
INFO  06:56:16,015 - #20 {
INFO  06:56:16,015 - #6 void
INFO  06:56:16,015 - #8 main
INFO  06:56:16,016 - #29 (
INFO  06:56:16,016 - #30 )
INFO  06:56:16,016 - #20 {
INFO  06:56:16,016 - #8 e
INFO  06:56:16,016 - #24 =
INFO  06:56:16,017 - #8 c
INFO  06:56:16,017 - #27 ;
INFO  06:56:16,017 - #31 if
INFO  06:56:16,018 - #29 (
INFO  06:56:16,018 - #12 false
INFO  06:56:16,018 - #30 )
INFO  06:56:16,019 - #20 {
INFO  06:56:16,019 - #8 e
INFO  06:56:16,019 - #24 =
INFO  06:56:16,019 - #8 d
INFO  06:56:16,019 - #27 ;
INFO  06:56:16,019 - #21 }
INFO  06:56:16,019 - #3 print
INFO  06:56:16,019 - #29 (
INFO  06:56:16,020 - #8 e
INFO  06:56:16,020 - #30 )
INFO  06:56:16,020 - #27 ;
INFO  06:56:16,020 - #21 }
INFO  06:56:16,020 - #21 }
INFO  06:56:16,021 - =====================SINTAKSNO_STABLO=========================
INFO  06:56:16,022 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         c
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:56:16,023 - ==============================================================
INFO  06:56:16,036 - Pocetak obrade programa Program na liniji 1
INFO  06:56:16,036 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:56:16,037 - Deklarisana konstanta c na liniji 2
INFO  06:56:16,037 - Deklarisana konstanta d na liniji 2
INFO  06:56:16,037 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:56:16,037 - Deklarisana promenljiva e na liniji 3
INFO  06:56:16,039 - Pocetak obrade metode main na liniji 5
INFO  06:56:16,039 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:56:16,039 - Zavrsetak obrade programa Program na liniji 1
INFO  06:56:16,039 - ======================TABELA_SIMBOLA==========================
INFO  06:56:16,040 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:56:16,040 - ==============================================================
INFO  06:56:16,040 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:56:16,040 - ==============================================================
INFO  06:56:16,040 - ======================GENERISANJE_KODA========================
INFO  06:56:16,047 - Generisanje koda uspesno zavrseno!
INFO  06:56:16,047 - Generisanje izlaznog fajla test\program.obj
INFO  06:56:16,047 - ==============================================================
INFO  06:56:49,058 - Obrada ulaznog fajla test\program.mj
INFO  06:56:49,175 - #2 program
INFO  06:56:49,175 - #8 Program
INFO  06:56:49,175 - #5 const
INFO  06:56:49,176 - #8 int
INFO  06:56:49,176 - #8 c
INFO  06:56:49,177 - #24 =
INFO  06:56:49,177 - #9 13
INFO  06:56:49,178 - #28 ,
INFO  06:56:49,179 - #8 d
INFO  06:56:49,179 - #24 =
INFO  06:56:49,179 - #9 99
INFO  06:56:49,179 - #27 ;
INFO  06:56:49,180 - #8 int
INFO  06:56:49,181 - #8 e
INFO  06:56:49,182 - #27 ;
INFO  06:56:49,182 - #20 {
INFO  06:56:49,184 - #6 void
INFO  06:56:49,184 - #8 main
INFO  06:56:49,184 - #29 (
INFO  06:56:49,185 - #30 )
INFO  06:56:49,185 - #20 {
INFO  06:56:49,185 - #8 e
INFO  06:56:49,186 - #24 =
INFO  06:56:49,186 - #8 c
INFO  06:56:49,186 - #27 ;
INFO  06:56:49,187 - #31 if
INFO  06:56:49,188 - #29 (
INFO  06:56:49,188 - #12 false
INFO  06:56:49,188 - #30 )
INFO  06:56:49,189 - #20 {
INFO  06:56:49,189 - #8 e
INFO  06:56:49,189 - #24 =
INFO  06:56:49,190 - #8 d
INFO  06:56:49,190 - #27 ;
INFO  06:56:49,190 - #21 }
INFO  06:56:49,190 - #3 print
INFO  06:56:49,190 - #29 (
INFO  06:56:49,191 - #8 e
INFO  06:56:49,191 - #30 )
INFO  06:56:49,191 - #27 ;
INFO  06:56:49,191 - #21 }
INFO  06:56:49,191 - #21 }
INFO  06:56:49,192 - =====================SINTAKSNO_STABLO=========================
INFO  06:56:49,194 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         c
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:56:49,195 - ==============================================================
INFO  06:56:49,214 - Pocetak obrade programa Program na liniji 1
INFO  06:56:49,215 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:56:49,216 - Deklarisana konstanta c na liniji 2
INFO  06:56:49,216 - Deklarisana konstanta d na liniji 2
INFO  06:56:49,217 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:56:49,217 - Deklarisana promenljiva e na liniji 3
INFO  06:56:49,218 - Pocetak obrade metode main na liniji 5
INFO  06:56:49,219 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:56:49,219 - Zavrsetak obrade programa Program na liniji 1
INFO  06:56:49,219 - ======================TABELA_SIMBOLA==========================
INFO  06:56:49,220 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:56:49,220 - ==============================================================
INFO  06:56:49,220 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:56:49,220 - ==============================================================
INFO  06:56:49,220 - ======================GENERISANJE_KODA========================
INFO  06:56:49,227 - Generisanje koda uspesno zavrseno!
INFO  06:56:49,227 - Generisanje izlaznog fajla test\program.obj
INFO  06:56:49,228 - ==============================================================
INFO  06:57:15,036 - Obrada ulaznog fajla test\program.mj
INFO  06:57:15,113 - #2 program
INFO  06:57:15,113 - #8 Program
INFO  06:57:15,114 - #5 const
INFO  06:57:15,115 - #8 int
INFO  06:57:15,115 - #8 c
INFO  06:57:15,116 - #24 =
INFO  06:57:15,117 - #9 13
INFO  06:57:15,117 - #28 ,
INFO  06:57:15,118 - #8 d
INFO  06:57:15,118 - #24 =
INFO  06:57:15,118 - #9 99
INFO  06:57:15,118 - #27 ;
INFO  06:57:15,119 - #8 int
INFO  06:57:15,120 - #8 e
INFO  06:57:15,120 - #27 ;
INFO  06:57:15,120 - #20 {
INFO  06:57:15,121 - #6 void
INFO  06:57:15,122 - #8 main
INFO  06:57:15,122 - #29 (
INFO  06:57:15,122 - #30 )
INFO  06:57:15,122 - #20 {
INFO  06:57:15,123 - #8 e
INFO  06:57:15,123 - #24 =
INFO  06:57:15,123 - #8 c
INFO  06:57:15,123 - #27 ;
INFO  06:57:15,124 - #31 if
INFO  06:57:15,124 - #29 (
INFO  06:57:15,124 - #12 false
INFO  06:57:15,124 - #30 )
INFO  06:57:15,125 - #20 {
INFO  06:57:15,125 - #8 e
INFO  06:57:15,125 - #24 =
INFO  06:57:15,125 - #8 d
INFO  06:57:15,125 - #27 ;
INFO  06:57:15,125 - #21 }
INFO  06:57:15,125 - #3 print
INFO  06:57:15,126 - #29 (
INFO  06:57:15,126 - #8 e
INFO  06:57:15,126 - #30 )
INFO  06:57:15,126 - #27 ;
INFO  06:57:15,126 - #21 }
INFO  06:57:15,126 - #21 }
INFO  06:57:15,127 - =====================SINTAKSNO_STABLO=========================
INFO  06:57:15,129 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         c
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:57:15,130 - ==============================================================
INFO  06:57:15,144 - Pocetak obrade programa Program na liniji 1
INFO  06:57:15,144 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:57:15,145 - Deklarisana konstanta c na liniji 2
INFO  06:57:15,145 - Deklarisana konstanta d na liniji 2
INFO  06:57:15,145 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:57:15,145 - Deklarisana promenljiva e na liniji 3
INFO  06:57:15,146 - Pocetak obrade metode main na liniji 5
INFO  06:57:15,146 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:57:15,147 - Zavrsetak obrade programa Program na liniji 1
INFO  06:57:15,147 - ======================TABELA_SIMBOLA==========================
INFO  06:57:15,147 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:57:15,147 - ==============================================================
INFO  06:57:15,147 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:57:15,147 - ==============================================================
INFO  06:57:15,148 - ======================GENERISANJE_KODA========================
INFO  06:57:15,153 - Generisanje koda uspesno zavrseno!
INFO  06:57:15,154 - Generisanje izlaznog fajla test\program.obj
INFO  06:57:15,154 - ==============================================================
INFO  06:58:36,524 - Obrada ulaznog fajla test\program.mj
INFO  06:58:36,606 - #2 program
INFO  06:58:36,607 - #8 Program
INFO  06:58:36,607 - #5 const
INFO  06:58:36,607 - #8 int
INFO  06:58:36,608 - #8 c
INFO  06:58:36,608 - #24 =
INFO  06:58:36,608 - #9 13
INFO  06:58:36,608 - #28 ,
INFO  06:58:36,609 - #8 d
INFO  06:58:36,610 - #24 =
INFO  06:58:36,610 - #9 99
INFO  06:58:36,610 - #27 ;
INFO  06:58:36,610 - #8 int
INFO  06:58:36,612 - #8 e
INFO  06:58:36,612 - #27 ;
INFO  06:58:36,612 - #20 {
INFO  06:58:36,614 - #6 void
INFO  06:58:36,614 - #8 main
INFO  06:58:36,614 - #29 (
INFO  06:58:36,615 - #30 )
INFO  06:58:36,615 - #20 {
INFO  06:58:36,615 - #8 e
INFO  06:58:36,615 - #24 =
INFO  06:58:36,615 - #8 c
INFO  06:58:36,615 - #27 ;
INFO  06:58:36,616 - #31 if
INFO  06:58:36,616 - #29 (
INFO  06:58:36,617 - #12 false
INFO  06:58:36,617 - #30 )
INFO  06:58:36,617 - #20 {
INFO  06:58:36,617 - #8 e
INFO  06:58:36,618 - #24 =
INFO  06:58:36,618 - #8 d
INFO  06:58:36,618 - #27 ;
INFO  06:58:36,618 - #21 }
INFO  06:58:36,618 - #3 print
INFO  06:58:36,618 - #29 (
INFO  06:58:36,619 - #8 e
INFO  06:58:36,619 - #30 )
INFO  06:58:36,619 - #27 ;
INFO  06:58:36,619 - #21 }
INFO  06:58:36,619 - #21 }
INFO  06:58:36,620 - =====================SINTAKSNO_STABLO=========================
INFO  06:58:36,621 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         c
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:58:36,622 - ==============================================================
INFO  06:58:36,638 - Pocetak obrade programa Program na liniji 1
INFO  06:58:36,638 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:58:36,639 - Deklarisana konstanta c na liniji 2
INFO  06:58:36,639 - Deklarisana konstanta d na liniji 2
INFO  06:58:36,639 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:58:36,639 - Deklarisana promenljiva e na liniji 3
INFO  06:58:36,640 - Pocetak obrade metode main na liniji 5
INFO  06:58:36,640 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:58:36,640 - Zavrsetak obrade programa Program na liniji 1
INFO  06:58:36,640 - ======================TABELA_SIMBOLA==========================
INFO  06:58:36,641 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:58:36,641 - ==============================================================
INFO  06:58:36,641 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:58:36,641 - ==============================================================
INFO  06:58:36,641 - ======================GENERISANJE_KODA========================
INFO  06:58:36,647 - Generisanje koda uspesno zavrseno!
INFO  06:58:36,647 - Generisanje izlaznog fajla test\program.obj
INFO  06:58:36,647 - ==============================================================
INFO  06:59:16,110 - Obrada ulaznog fajla test\program.mj
INFO  06:59:16,192 - #2 program
INFO  06:59:16,192 - #8 Program
INFO  06:59:16,192 - #5 const
INFO  06:59:16,193 - #8 int
INFO  06:59:16,194 - #8 c
INFO  06:59:16,194 - #24 =
INFO  06:59:16,195 - #9 13
INFO  06:59:16,195 - #28 ,
INFO  06:59:16,196 - #8 d
INFO  06:59:16,196 - #24 =
INFO  06:59:16,196 - #9 99
INFO  06:59:16,197 - #27 ;
INFO  06:59:16,197 - #8 int
INFO  06:59:16,198 - #8 e
INFO  06:59:16,199 - #27 ;
INFO  06:59:16,199 - #20 {
INFO  06:59:16,201 - #6 void
INFO  06:59:16,201 - #8 main
INFO  06:59:16,201 - #29 (
INFO  06:59:16,202 - #30 )
INFO  06:59:16,202 - #20 {
INFO  06:59:16,202 - #8 e
INFO  06:59:16,203 - #24 =
INFO  06:59:16,203 - #8 c
INFO  06:59:16,203 - #27 ;
INFO  06:59:16,204 - #31 if
INFO  06:59:16,205 - #29 (
INFO  06:59:16,205 - #12 false
INFO  06:59:16,205 - #30 )
INFO  06:59:16,206 - #20 {
INFO  06:59:16,206 - #8 e
INFO  06:59:16,206 - #24 =
INFO  06:59:16,206 - #8 d
INFO  06:59:16,206 - #27 ;
INFO  06:59:16,207 - #21 }
INFO  06:59:16,207 - #3 print
INFO  06:59:16,207 - #29 (
INFO  06:59:16,207 - #8 e
INFO  06:59:16,207 - #30 )
INFO  06:59:16,208 - #27 ;
INFO  06:59:16,208 - #21 }
INFO  06:59:16,208 - #21 }
INFO  06:59:16,209 - =====================SINTAKSNO_STABLO=========================
INFO  06:59:16,211 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         c
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:59:16,212 - ==============================================================
INFO  06:59:16,224 - Pocetak obrade programa Program na liniji 1
INFO  06:59:16,224 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:59:16,226 - Deklarisana konstanta c na liniji 2
INFO  06:59:16,226 - Deklarisana konstanta d na liniji 2
INFO  06:59:16,226 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:59:16,226 - Deklarisana promenljiva e na liniji 3
INFO  06:59:16,227 - Pocetak obrade metode main na liniji 5
INFO  06:59:16,227 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:59:16,228 - Zavrsetak obrade programa Program na liniji 1
INFO  06:59:16,228 - ======================TABELA_SIMBOLA==========================
INFO  06:59:16,228 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:59:16,228 - ==============================================================
INFO  06:59:16,228 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:59:16,228 - ==============================================================
INFO  06:59:16,229 - ======================GENERISANJE_KODA========================
INFO  06:59:16,234 - Generisanje koda uspesno zavrseno!
INFO  06:59:16,235 - Generisanje izlaznog fajla test\program.obj
INFO  06:59:16,235 - ==============================================================
INFO  06:59:59,054 - Obrada ulaznog fajla test\program.mj
INFO  06:59:59,134 - #2 program
INFO  06:59:59,135 - #8 Program
INFO  06:59:59,135 - #5 const
INFO  06:59:59,136 - #8 int
INFO  06:59:59,137 - #8 c
INFO  06:59:59,137 - #24 =
INFO  06:59:59,138 - #9 13
INFO  06:59:59,138 - #28 ,
INFO  06:59:59,139 - #8 d
INFO  06:59:59,139 - #24 =
INFO  06:59:59,139 - #9 99
INFO  06:59:59,139 - #27 ;
INFO  06:59:59,140 - #8 int
INFO  06:59:59,141 - #8 e
INFO  06:59:59,141 - #27 ;
INFO  06:59:59,142 - #20 {
INFO  06:59:59,143 - #6 void
INFO  06:59:59,143 - #8 main
INFO  06:59:59,143 - #29 (
INFO  06:59:59,144 - #30 )
INFO  06:59:59,144 - #20 {
INFO  06:59:59,144 - #8 e
INFO  06:59:59,144 - #24 =
INFO  06:59:59,145 - #8 c
INFO  06:59:59,145 - #27 ;
INFO  06:59:59,146 - #31 if
INFO  06:59:59,146 - #29 (
INFO  06:59:59,146 - #12 false
INFO  06:59:59,146 - #30 )
INFO  06:59:59,147 - #20 {
INFO  06:59:59,147 - #8 e
INFO  06:59:59,147 - #24 =
INFO  06:59:59,147 - #8 d
INFO  06:59:59,147 - #27 ;
INFO  06:59:59,147 - #21 }
INFO  06:59:59,147 - #3 print
INFO  06:59:59,148 - #29 (
INFO  06:59:59,148 - #8 e
INFO  06:59:59,148 - #30 )
INFO  06:59:59,148 - #27 ;
INFO  06:59:59,148 - #21 }
INFO  06:59:59,149 - #21 }
INFO  06:59:59,150 - =====================SINTAKSNO_STABLO=========================
INFO  06:59:59,152 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         c
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:59:59,153 - ==============================================================
INFO  06:59:59,166 - Pocetak obrade programa Program na liniji 1
INFO  06:59:59,166 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:59:59,167 - Deklarisana konstanta c na liniji 2
INFO  06:59:59,167 - Deklarisana konstanta d na liniji 2
INFO  06:59:59,167 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:59:59,167 - Deklarisana promenljiva e na liniji 3
INFO  06:59:59,168 - Pocetak obrade metode main na liniji 5
INFO  06:59:59,168 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:59:59,168 - Zavrsetak obrade programa Program na liniji 1
INFO  06:59:59,169 - ======================TABELA_SIMBOLA==========================
INFO  06:59:59,169 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  06:59:59,169 - ==============================================================
INFO  06:59:59,169 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:59:59,170 - ==============================================================
INFO  06:59:59,170 - ======================GENERISANJE_KODA========================
INFO  06:59:59,175 - Generisanje koda uspesno zavrseno!
INFO  06:59:59,176 - Generisanje izlaznog fajla test\program.obj
INFO  06:59:59,176 - ==============================================================
INFO  07:01:27,474 - Obrada ulaznog fajla test\program.mj
INFO  07:01:27,556 - #2 program
INFO  07:01:27,557 - #8 Program
INFO  07:01:27,557 - #5 const
INFO  07:01:27,558 - #8 int
INFO  07:01:27,558 - #8 c
INFO  07:01:27,559 - #24 =
INFO  07:01:27,559 - #9 13
INFO  07:01:27,559 - #28 ,
INFO  07:01:27,560 - #8 d
INFO  07:01:27,560 - #24 =
INFO  07:01:27,560 - #9 99
INFO  07:01:27,560 - #27 ;
INFO  07:01:27,561 - #8 int
INFO  07:01:27,562 - #8 e
INFO  07:01:27,562 - #27 ;
INFO  07:01:27,562 - #20 {
INFO  07:01:27,563 - #6 void
INFO  07:01:27,563 - #8 main
INFO  07:01:27,564 - #29 (
INFO  07:01:27,564 - #30 )
INFO  07:01:27,564 - #20 {
INFO  07:01:27,564 - #8 e
INFO  07:01:27,565 - #24 =
INFO  07:01:27,565 - #8 c
INFO  07:01:27,565 - #27 ;
INFO  07:01:27,566 - #31 if
INFO  07:01:27,566 - #29 (
INFO  07:01:27,566 - #12 false
INFO  07:01:27,566 - #30 )
INFO  07:01:27,567 - #20 {
INFO  07:01:27,567 - #8 e
INFO  07:01:27,567 - #24 =
INFO  07:01:27,567 - #8 d
INFO  07:01:27,568 - #27 ;
INFO  07:01:27,568 - #21 }
INFO  07:01:27,568 - #3 print
INFO  07:01:27,568 - #29 (
INFO  07:01:27,568 - #8 e
INFO  07:01:27,568 - #30 )
INFO  07:01:27,569 - #27 ;
INFO  07:01:27,569 - #21 }
INFO  07:01:27,569 - #21 }
INFO  07:01:27,570 - =====================SINTAKSNO_STABLO=========================
INFO  07:01:27,572 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         c
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:01:27,572 - ==============================================================
INFO  07:01:27,584 - Pocetak obrade programa Program na liniji 1
INFO  07:01:27,585 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:01:27,586 - Deklarisana konstanta c na liniji 2
INFO  07:01:27,586 - Deklarisana konstanta d na liniji 2
INFO  07:01:27,586 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:01:27,586 - Deklarisana promenljiva e na liniji 3
INFO  07:01:27,587 - Pocetak obrade metode main na liniji 5
INFO  07:01:27,588 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:01:27,588 - Zavrsetak obrade programa Program na liniji 1
INFO  07:01:27,588 - ======================TABELA_SIMBOLA==========================
INFO  07:01:27,589 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:01:27,589 - ==============================================================
INFO  07:01:27,589 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:01:27,589 - ==============================================================
INFO  07:01:27,589 - ======================GENERISANJE_KODA========================
INFO  07:01:27,594 - Generisanje koda uspesno zavrseno!
INFO  07:01:27,595 - Generisanje izlaznog fajla test\program.obj
INFO  07:01:27,595 - ==============================================================
INFO  07:02:07,588 - Obrada ulaznog fajla test\program.mj
INFO  07:02:07,670 - #2 program
INFO  07:02:07,670 - #8 Program
INFO  07:02:07,671 - #5 const
INFO  07:02:07,672 - #8 int
INFO  07:02:07,672 - #8 c
INFO  07:02:07,673 - #24 =
INFO  07:02:07,673 - #9 13
INFO  07:02:07,673 - #28 ,
INFO  07:02:07,674 - #8 d
INFO  07:02:07,674 - #24 =
INFO  07:02:07,674 - #9 99
INFO  07:02:07,674 - #27 ;
INFO  07:02:07,674 - #8 int
INFO  07:02:07,675 - #8 e
INFO  07:02:07,676 - #27 ;
INFO  07:02:07,676 - #20 {
INFO  07:02:07,677 - #6 void
INFO  07:02:07,677 - #8 main
INFO  07:02:07,677 - #29 (
INFO  07:02:07,678 - #30 )
INFO  07:02:07,678 - #20 {
INFO  07:02:07,678 - #8 e
INFO  07:02:07,678 - #24 =
INFO  07:02:07,679 - #8 c
INFO  07:02:07,679 - #27 ;
INFO  07:02:07,680 - #31 if
INFO  07:02:07,680 - #29 (
INFO  07:02:07,680 - #12 false
INFO  07:02:07,680 - #30 )
INFO  07:02:07,681 - #20 {
INFO  07:02:07,681 - #8 e
INFO  07:02:07,681 - #24 =
INFO  07:02:07,681 - #8 d
INFO  07:02:07,682 - #27 ;
INFO  07:02:07,682 - #21 }
INFO  07:02:07,682 - #3 print
INFO  07:02:07,683 - #29 (
INFO  07:02:07,683 - #8 e
INFO  07:02:07,683 - #30 )
INFO  07:02:07,683 - #27 ;
INFO  07:02:07,683 - #21 }
INFO  07:02:07,683 - #21 }
INFO  07:02:07,684 - =====================SINTAKSNO_STABLO=========================
INFO  07:02:07,686 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         c
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:02:07,687 - ==============================================================
INFO  07:02:07,703 - Pocetak obrade programa Program na liniji 1
INFO  07:02:07,703 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:02:07,704 - Deklarisana konstanta c na liniji 2
INFO  07:02:07,704 - Deklarisana konstanta d na liniji 2
INFO  07:02:07,704 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:02:07,704 - Deklarisana promenljiva e na liniji 3
INFO  07:02:07,705 - Pocetak obrade metode main na liniji 5
INFO  07:02:07,705 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:02:07,705 - Zavrsetak obrade programa Program na liniji 1
INFO  07:02:07,705 - ======================TABELA_SIMBOLA==========================
INFO  07:02:07,706 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:02:07,706 - ==============================================================
INFO  07:02:07,706 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:02:07,706 - ==============================================================
INFO  07:02:07,706 - ======================GENERISANJE_KODA========================
INFO  07:02:07,712 - Generisanje koda uspesno zavrseno!
INFO  07:02:07,712 - Generisanje izlaznog fajla test\program.obj
INFO  07:02:07,712 - ==============================================================
INFO  07:02:31,325 - Obrada ulaznog fajla test\program.mj
INFO  07:02:31,408 - #2 program
INFO  07:02:31,408 - #8 Program
INFO  07:02:31,408 - #5 const
INFO  07:02:31,409 - #8 int
INFO  07:02:31,409 - #8 c
INFO  07:02:31,410 - #24 =
INFO  07:02:31,410 - #9 13
INFO  07:02:31,410 - #28 ,
INFO  07:02:31,411 - #8 d
INFO  07:02:31,411 - #24 =
INFO  07:02:31,411 - #9 99
INFO  07:02:31,411 - #27 ;
INFO  07:02:31,411 - #8 int
INFO  07:02:31,413 - #8 e
INFO  07:02:31,413 - #27 ;
INFO  07:02:31,413 - #20 {
INFO  07:02:31,414 - #6 void
INFO  07:02:31,415 - #8 main
INFO  07:02:31,415 - #29 (
INFO  07:02:31,416 - #30 )
INFO  07:02:31,416 - #20 {
INFO  07:02:31,416 - #8 e
INFO  07:02:31,416 - #24 =
INFO  07:02:31,416 - #8 c
INFO  07:02:31,416 - #27 ;
INFO  07:02:31,417 - #31 if
INFO  07:02:31,417 - #29 (
INFO  07:02:31,417 - #12 false
INFO  07:02:31,417 - #30 )
INFO  07:02:31,418 - #20 {
INFO  07:02:31,418 - #8 e
INFO  07:02:31,418 - #24 =
INFO  07:02:31,418 - #8 d
INFO  07:02:31,418 - #27 ;
INFO  07:02:31,419 - #21 }
INFO  07:02:31,419 - #3 print
INFO  07:02:31,419 - #29 (
INFO  07:02:31,419 - #8 e
INFO  07:02:31,419 - #30 )
INFO  07:02:31,419 - #27 ;
INFO  07:02:31,419 - #21 }
INFO  07:02:31,420 - #21 }
INFO  07:02:31,420 - =====================SINTAKSNO_STABLO=========================
INFO  07:02:31,422 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         c
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:02:31,423 - ==============================================================
INFO  07:02:31,436 - Pocetak obrade programa Program na liniji 1
INFO  07:02:31,437 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:02:31,438 - Deklarisana konstanta c na liniji 2
INFO  07:02:31,438 - Deklarisana konstanta d na liniji 2
INFO  07:02:31,438 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:02:31,439 - Deklarisana promenljiva e na liniji 3
INFO  07:02:31,440 - Pocetak obrade metode main na liniji 5
INFO  07:02:31,440 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:02:31,440 - Zavrsetak obrade programa Program na liniji 1
INFO  07:02:31,440 - ======================TABELA_SIMBOLA==========================
INFO  07:02:31,441 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:02:31,441 - ==============================================================
INFO  07:02:31,442 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:02:31,442 - ==============================================================
INFO  07:02:31,442 - ======================GENERISANJE_KODA========================
INFO  07:02:31,447 - Generisanje koda uspesno zavrseno!
INFO  07:02:31,447 - Generisanje izlaznog fajla test\program.obj
INFO  07:02:31,447 - ==============================================================
INFO  07:03:44,418 - Obrada ulaznog fajla test\program.mj
INFO  07:03:44,503 - #2 program
INFO  07:03:44,503 - #8 Program
INFO  07:03:44,503 - #5 const
INFO  07:03:44,504 - #8 int
INFO  07:03:44,504 - #8 c
INFO  07:03:44,505 - #24 =
INFO  07:03:44,505 - #9 13
INFO  07:03:44,505 - #28 ,
INFO  07:03:44,506 - #8 d
INFO  07:03:44,507 - #24 =
INFO  07:03:44,507 - #9 99
INFO  07:03:44,507 - #27 ;
INFO  07:03:44,507 - #8 int
INFO  07:03:44,508 - #8 e
INFO  07:03:44,508 - #27 ;
INFO  07:03:44,508 - #20 {
INFO  07:03:44,509 - #6 void
INFO  07:03:44,510 - #8 main
INFO  07:03:44,510 - #29 (
INFO  07:03:44,510 - #30 )
INFO  07:03:44,510 - #20 {
INFO  07:03:44,510 - #8 e
INFO  07:03:44,511 - #24 =
INFO  07:03:44,511 - #8 c
INFO  07:03:44,511 - #27 ;
INFO  07:03:44,513 - #31 if
INFO  07:03:44,513 - #29 (
INFO  07:03:44,513 - #12 false
INFO  07:03:44,513 - #30 )
INFO  07:03:44,514 - #20 {
INFO  07:03:44,514 - #8 e
INFO  07:03:44,514 - #24 =
INFO  07:03:44,514 - #8 d
INFO  07:03:44,514 - #27 ;
INFO  07:03:44,515 - #21 }
INFO  07:03:44,515 - #3 print
INFO  07:03:44,515 - #29 (
INFO  07:03:44,515 - #8 e
INFO  07:03:44,515 - #30 )
INFO  07:03:44,515 - #27 ;
INFO  07:03:44,515 - #21 }
INFO  07:03:44,516 - #21 }
INFO  07:03:44,517 - =====================SINTAKSNO_STABLO=========================
INFO  07:03:44,518 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         c
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:03:44,519 - ==============================================================
INFO  07:03:44,535 - Pocetak obrade programa Program na liniji 1
INFO  07:03:44,536 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:03:44,537 - Deklarisana konstanta c na liniji 2
INFO  07:03:44,537 - Deklarisana konstanta d na liniji 2
INFO  07:03:44,537 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:03:44,537 - Deklarisana promenljiva e na liniji 3
INFO  07:03:44,538 - Pocetak obrade metode main na liniji 5
INFO  07:03:44,539 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:03:44,539 - Zavrsetak obrade programa Program na liniji 1
INFO  07:03:44,539 - ======================TABELA_SIMBOLA==========================
INFO  07:03:44,540 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:03:44,540 - ==============================================================
INFO  07:03:44,540 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:03:44,540 - ==============================================================
INFO  07:03:44,540 - ======================GENERISANJE_KODA========================
INFO  07:03:44,547 - Generisanje koda uspesno zavrseno!
INFO  07:03:44,547 - Generisanje izlaznog fajla test\program.obj
INFO  07:03:44,547 - ==============================================================
INFO  07:05:30,337 - Obrada ulaznog fajla test\program.mj
INFO  07:05:30,415 - #2 program
INFO  07:05:30,415 - #8 Program
INFO  07:05:30,416 - #5 const
INFO  07:05:30,417 - #8 int
INFO  07:05:30,417 - #8 c
INFO  07:05:30,418 - #24 =
INFO  07:05:30,418 - #9 13
INFO  07:05:30,418 - #28 ,
INFO  07:05:30,419 - #8 d
INFO  07:05:30,420 - #24 =
INFO  07:05:30,420 - #9 99
INFO  07:05:30,420 - #27 ;
INFO  07:05:30,420 - #8 int
INFO  07:05:30,422 - #8 e
INFO  07:05:30,422 - #27 ;
INFO  07:05:30,422 - #20 {
INFO  07:05:30,423 - #6 void
INFO  07:05:30,423 - #8 main
INFO  07:05:30,423 - #29 (
INFO  07:05:30,424 - #30 )
INFO  07:05:30,424 - #20 {
INFO  07:05:30,424 - #8 e
INFO  07:05:30,424 - #24 =
INFO  07:05:30,424 - #8 c
INFO  07:05:30,424 - #27 ;
INFO  07:05:30,425 - #31 if
INFO  07:05:30,425 - #29 (
INFO  07:05:30,426 - #12 false
INFO  07:05:30,426 - #30 )
INFO  07:05:30,426 - #20 {
INFO  07:05:30,426 - #8 e
INFO  07:05:30,426 - #24 =
INFO  07:05:30,427 - #8 d
INFO  07:05:30,427 - #27 ;
INFO  07:05:30,427 - #21 }
INFO  07:05:30,427 - #3 print
INFO  07:05:30,427 - #29 (
INFO  07:05:30,427 - #8 e
INFO  07:05:30,427 - #30 )
INFO  07:05:30,427 - #27 ;
INFO  07:05:30,428 - #21 }
INFO  07:05:30,428 - #21 }
INFO  07:05:30,429 - =====================SINTAKSNO_STABLO=========================
INFO  07:05:30,430 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         c
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_single]
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:05:30,431 - ==============================================================
INFO  07:05:30,446 - Pocetak obrade programa Program na liniji 1
INFO  07:05:30,447 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:05:30,448 - Deklarisana konstanta c na liniji 2
INFO  07:05:30,448 - Deklarisana konstanta d na liniji 2
INFO  07:05:30,448 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:05:30,448 - Deklarisana promenljiva e na liniji 3
INFO  07:05:30,449 - Pocetak obrade metode main na liniji 5
INFO  07:05:30,450 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:05:30,450 - Zavrsetak obrade programa Program na liniji 1
INFO  07:05:30,450 - ======================TABELA_SIMBOLA==========================
INFO  07:05:30,451 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:05:30,451 - ==============================================================
INFO  07:05:30,451 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:05:30,451 - ==============================================================
INFO  07:05:30,451 - ======================GENERISANJE_KODA========================
INFO  07:05:30,456 - Generisanje koda uspesno zavrseno!
INFO  07:05:30,457 - Generisanje izlaznog fajla test\program.obj
INFO  07:05:30,457 - ==============================================================
INFO  07:06:31,739 - Obrada ulaznog fajla test\program.mj
INFO  07:06:31,834 - #2 program
INFO  07:06:31,835 - #8 Program
INFO  07:06:31,835 - #5 const
INFO  07:06:31,835 - #8 int
INFO  07:06:31,835 - #8 c
INFO  07:06:31,836 - #24 =
INFO  07:06:31,836 - #9 13
INFO  07:06:31,836 - #28 ,
INFO  07:06:31,838 - #8 d
INFO  07:06:31,838 - #24 =
INFO  07:06:31,838 - #9 99
INFO  07:06:31,838 - #27 ;
INFO  07:06:31,838 - #8 int
INFO  07:06:31,839 - #8 e
INFO  07:06:31,840 - #27 ;
INFO  07:06:31,840 - #20 {
INFO  07:06:31,841 - #6 void
INFO  07:06:31,841 - #8 main
INFO  07:06:31,841 - #29 (
INFO  07:06:31,842 - #30 )
INFO  07:06:31,842 - #20 {
INFO  07:06:31,842 - #31 if
INFO  07:06:31,842 - #29 (
INFO  07:06:31,842 - #12 false
INFO  07:06:31,843 - #30 )
INFO  07:06:31,844 - #20 {
INFO  07:06:31,844 - #3 print
INFO  07:06:31,844 - #29 (
INFO  07:06:31,844 - #9 65
INFO  07:06:31,844 - #30 )
INFO  07:06:31,844 - #27 ;
INFO  07:06:31,844 - #21 }
INFO  07:06:31,844 - #3 print
INFO  07:06:31,845 - #29 (
INFO  07:06:31,845 - #9 77
INFO  07:06:31,845 - #30 )
INFO  07:06:31,845 - #27 ;
INFO  07:06:31,845 - #21 }
INFO  07:06:31,845 - #21 }
INFO  07:06:31,846 - =====================SINTAKSNO_STABLO=========================
INFO  07:06:31,847 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:06:31,848 - ==============================================================
INFO  07:06:31,860 - Pocetak obrade programa Program na liniji 1
INFO  07:06:31,860 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:06:31,861 - Deklarisana konstanta c na liniji 2
INFO  07:06:31,862 - Deklarisana konstanta d na liniji 2
INFO  07:06:31,863 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:06:31,863 - Deklarisana promenljiva e na liniji 3
INFO  07:06:31,863 - Pocetak obrade metode main na liniji 5
INFO  07:06:31,864 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:06:31,864 - Zavrsetak obrade programa Program na liniji 1
INFO  07:06:31,864 - ======================TABELA_SIMBOLA==========================
INFO  07:06:31,865 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:06:31,865 - ==============================================================
INFO  07:06:31,865 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:06:31,865 - ==============================================================
INFO  07:06:31,865 - ======================GENERISANJE_KODA========================
INFO  07:06:31,870 - Generisanje koda uspesno zavrseno!
INFO  07:06:31,871 - Generisanje izlaznog fajla test\program.obj
INFO  07:06:31,871 - ==============================================================
INFO  07:39:10,841 - Obrada ulaznog fajla test\program.mj
INFO  07:39:10,917 - #2 program
INFO  07:39:10,917 - #8 Program
INFO  07:39:10,917 - #5 const
INFO  07:39:10,918 - #8 int
INFO  07:39:10,918 - #8 c
INFO  07:39:10,920 - #24 =
INFO  07:39:10,921 - #9 13
INFO  07:39:10,921 - #28 ,
INFO  07:39:10,925 - #8 d
INFO  07:39:10,926 - #24 =
INFO  07:39:10,926 - #9 99
INFO  07:39:10,927 - #27 ;
INFO  07:39:10,928 - #8 int
INFO  07:39:10,929 - #8 e
INFO  07:39:10,929 - #27 ;
INFO  07:39:10,930 - #20 {
INFO  07:39:10,931 - #6 void
INFO  07:39:10,931 - #8 main
INFO  07:39:10,931 - #29 (
INFO  07:39:10,932 - #30 )
INFO  07:39:10,932 - #20 {
INFO  07:39:10,932 - #31 if
INFO  07:39:10,933 - #29 (
INFO  07:39:10,933 - #12 false
INFO  07:39:10,933 - #30 )
INFO  07:39:10,934 - #20 {
INFO  07:39:10,934 - #3 print
INFO  07:39:10,934 - #29 (
INFO  07:39:10,934 - #9 65
INFO  07:39:10,934 - #30 )
INFO  07:39:10,934 - #27 ;
INFO  07:39:10,934 - #21 }
INFO  07:39:10,934 - #3 print
INFO  07:39:10,935 - #29 (
INFO  07:39:10,935 - #9 77
INFO  07:39:10,935 - #30 )
INFO  07:39:10,935 - #27 ;
INFO  07:39:10,935 - #21 }
INFO  07:39:10,935 - #21 }
INFO  07:39:10,937 - =====================SINTAKSNO_STABLO=========================
INFO  07:39:10,938 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:39:10,939 - ==============================================================
INFO  07:39:10,959 - Pocetak obrade programa Program na liniji 1
INFO  07:39:10,959 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:39:10,960 - Deklarisana konstanta c na liniji 2
INFO  07:39:10,960 - Deklarisana konstanta d na liniji 2
INFO  07:39:10,960 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:39:10,961 - Deklarisana promenljiva e na liniji 3
INFO  07:39:10,961 - Pocetak obrade metode main na liniji 5
INFO  07:39:10,961 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:39:10,962 - Zavrsetak obrade programa Program na liniji 1
INFO  07:39:10,962 - ======================TABELA_SIMBOLA==========================
INFO  07:39:10,962 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:39:10,962 - ==============================================================
INFO  07:39:10,962 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:39:10,963 - ==============================================================
INFO  07:39:10,963 - ======================GENERISANJE_KODA========================
INFO  07:39:10,968 - Generisanje koda uspesno zavrseno!
INFO  07:39:10,969 - Generisanje izlaznog fajla test\program.obj
INFO  07:39:10,969 - ==============================================================
INFO  07:39:31,835 - Obrada ulaznog fajla test\program.mj
INFO  07:39:31,914 - #2 program
INFO  07:39:31,914 - #8 Program
INFO  07:39:31,915 - #5 const
INFO  07:39:31,916 - #8 int
INFO  07:39:31,916 - #8 c
INFO  07:39:31,917 - #24 =
INFO  07:39:31,917 - #9 13
INFO  07:39:31,917 - #28 ,
INFO  07:39:31,919 - #8 d
INFO  07:39:31,919 - #24 =
INFO  07:39:31,919 - #9 99
INFO  07:39:31,919 - #27 ;
INFO  07:39:31,919 - #8 int
INFO  07:39:31,921 - #8 e
INFO  07:39:31,921 - #27 ;
INFO  07:39:31,921 - #20 {
INFO  07:39:31,923 - #6 void
INFO  07:39:31,923 - #8 main
INFO  07:39:31,923 - #29 (
INFO  07:39:31,924 - #30 )
INFO  07:39:31,924 - #20 {
INFO  07:39:31,924 - #31 if
INFO  07:39:31,925 - #29 (
INFO  07:39:31,925 - #12 false
INFO  07:39:31,925 - #30 )
INFO  07:39:31,926 - #20 {
INFO  07:39:31,927 - #3 print
INFO  07:39:31,927 - #29 (
INFO  07:39:31,927 - #9 65
INFO  07:39:31,927 - #30 )
INFO  07:39:31,927 - #27 ;
INFO  07:39:31,927 - #21 }
INFO  07:39:31,928 - #3 print
INFO  07:39:31,928 - #29 (
INFO  07:39:31,928 - #9 77
INFO  07:39:31,928 - #30 )
INFO  07:39:31,928 - #27 ;
INFO  07:39:31,929 - #21 }
INFO  07:39:31,929 - #21 }
INFO  07:39:31,930 - =====================SINTAKSNO_STABLO=========================
INFO  07:39:31,931 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:39:31,931 - ==============================================================
INFO  07:39:31,949 - Pocetak obrade programa Program na liniji 1
INFO  07:39:31,949 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:39:31,950 - Deklarisana konstanta c na liniji 2
INFO  07:39:31,950 - Deklarisana konstanta d na liniji 2
INFO  07:39:31,950 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:39:31,950 - Deklarisana promenljiva e na liniji 3
INFO  07:39:31,952 - Pocetak obrade metode main na liniji 5
INFO  07:39:31,952 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:39:31,952 - Zavrsetak obrade programa Program na liniji 1
INFO  07:39:31,952 - ======================TABELA_SIMBOLA==========================
INFO  07:39:31,953 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:39:31,953 - ==============================================================
INFO  07:39:31,953 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:39:31,953 - ==============================================================
INFO  07:39:31,953 - ======================GENERISANJE_KODA========================
INFO  07:39:31,959 - Generisanje koda uspesno zavrseno!
INFO  07:39:31,959 - Generisanje izlaznog fajla test\program.obj
INFO  07:39:31,959 - ==============================================================
INFO  07:41:01,119 - Obrada ulaznog fajla test\program.mj
INFO  07:41:01,231 - #2 program
INFO  07:41:01,232 - #8 Program
INFO  07:41:01,232 - #5 const
INFO  07:41:01,233 - #8 int
INFO  07:41:01,233 - #8 c
INFO  07:41:01,234 - #24 =
INFO  07:41:01,234 - #9 13
INFO  07:41:01,234 - #28 ,
INFO  07:41:01,235 - #8 d
INFO  07:41:01,235 - #24 =
INFO  07:41:01,235 - #9 99
INFO  07:41:01,235 - #27 ;
INFO  07:41:01,235 - #8 int
INFO  07:41:01,237 - #8 e
INFO  07:41:01,237 - #27 ;
INFO  07:41:01,237 - #20 {
INFO  07:41:01,239 - #6 void
INFO  07:41:01,239 - #8 main
INFO  07:41:01,239 - #29 (
INFO  07:41:01,240 - #30 )
INFO  07:41:01,240 - #20 {
INFO  07:41:01,240 - #31 if
INFO  07:41:01,241 - #29 (
INFO  07:41:01,241 - #12 false
INFO  07:41:01,241 - #30 )
INFO  07:41:01,242 - #20 {
INFO  07:41:01,242 - #3 print
INFO  07:41:01,242 - #29 (
INFO  07:41:01,242 - #9 65
INFO  07:41:01,242 - #30 )
INFO  07:41:01,243 - #27 ;
INFO  07:41:01,243 - #21 }
INFO  07:41:01,243 - #3 print
INFO  07:41:01,243 - #29 (
INFO  07:41:01,244 - #9 77
INFO  07:41:01,244 - #30 )
INFO  07:41:01,244 - #27 ;
INFO  07:41:01,244 - #21 }
INFO  07:41:01,244 - #21 }
INFO  07:41:01,245 - =====================SINTAKSNO_STABLO=========================
INFO  07:41:01,247 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:41:01,248 - ==============================================================
INFO  07:41:01,262 - Pocetak obrade programa Program na liniji 1
INFO  07:41:01,262 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:41:01,263 - Deklarisana konstanta c na liniji 2
INFO  07:41:01,263 - Deklarisana konstanta d na liniji 2
INFO  07:41:01,263 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:41:01,263 - Deklarisana promenljiva e na liniji 3
INFO  07:41:01,264 - Pocetak obrade metode main na liniji 5
INFO  07:41:01,265 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:41:01,265 - Zavrsetak obrade programa Program na liniji 1
INFO  07:41:01,265 - ======================TABELA_SIMBOLA==========================
INFO  07:41:01,265 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:41:01,266 - ==============================================================
INFO  07:41:01,266 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:41:01,266 - ==============================================================
INFO  07:41:01,266 - ======================GENERISANJE_KODA========================
INFO  07:41:01,271 - Generisanje koda uspesno zavrseno!
INFO  07:41:01,272 - Generisanje izlaznog fajla test\program.obj
INFO  07:41:01,272 - ==============================================================
INFO  07:42:36,780 - Obrada ulaznog fajla test\program.mj
INFO  07:42:36,867 - #2 program
INFO  07:42:36,867 - #8 Program
INFO  07:42:36,867 - #5 const
INFO  07:42:36,868 - #8 int
INFO  07:42:36,869 - #8 c
INFO  07:42:36,869 - #24 =
INFO  07:42:36,870 - #9 13
INFO  07:42:36,870 - #28 ,
INFO  07:42:36,871 - #8 d
INFO  07:42:36,871 - #24 =
INFO  07:42:36,871 - #9 99
INFO  07:42:36,871 - #27 ;
INFO  07:42:36,871 - #8 int
INFO  07:42:36,873 - #8 e
INFO  07:42:36,873 - #27 ;
INFO  07:42:36,873 - #20 {
INFO  07:42:36,874 - #6 void
INFO  07:42:36,874 - #8 main
INFO  07:42:36,874 - #29 (
INFO  07:42:36,875 - #30 )
INFO  07:42:36,875 - #20 {
INFO  07:42:36,875 - #31 if
INFO  07:42:36,875 - #29 (
INFO  07:42:36,875 - #12 false
INFO  07:42:36,876 - #30 )
INFO  07:42:36,877 - #20 {
INFO  07:42:36,877 - #3 print
INFO  07:42:36,877 - #29 (
INFO  07:42:36,877 - #9 65
INFO  07:42:36,877 - #30 )
INFO  07:42:36,877 - #27 ;
INFO  07:42:36,877 - #21 }
INFO  07:42:36,878 - #3 print
INFO  07:42:36,878 - #29 (
INFO  07:42:36,878 - #9 77
INFO  07:42:36,878 - #30 )
INFO  07:42:36,878 - #27 ;
INFO  07:42:36,878 - #21 }
INFO  07:42:36,878 - #21 }
INFO  07:42:36,879 - =====================SINTAKSNO_STABLO=========================
INFO  07:42:36,881 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:42:36,882 - ==============================================================
INFO  07:42:36,896 - Pocetak obrade programa Program na liniji 1
INFO  07:42:36,896 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:42:36,897 - Deklarisana konstanta c na liniji 2
INFO  07:42:36,897 - Deklarisana konstanta d na liniji 2
INFO  07:42:36,897 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:42:36,897 - Deklarisana promenljiva e na liniji 3
INFO  07:42:36,898 - Pocetak obrade metode main na liniji 5
INFO  07:42:36,899 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:42:36,899 - Zavrsetak obrade programa Program na liniji 1
INFO  07:42:36,899 - ======================TABELA_SIMBOLA==========================
INFO  07:42:36,899 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:42:36,899 - ==============================================================
INFO  07:42:36,899 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:42:36,899 - ==============================================================
INFO  07:42:36,900 - ======================GENERISANJE_KODA========================
INFO  07:42:36,905 - Generisanje koda uspesno zavrseno!
INFO  07:42:36,906 - Generisanje izlaznog fajla test\program.obj
INFO  07:42:36,906 - ==============================================================
INFO  07:43:25,549 - Obrada ulaznog fajla test\program.mj
INFO  07:43:25,628 - #2 program
INFO  07:43:25,629 - #8 Program
INFO  07:43:25,629 - #5 const
INFO  07:43:25,630 - #8 int
INFO  07:43:25,630 - #8 c
INFO  07:43:25,630 - #24 =
INFO  07:43:25,630 - #9 13
INFO  07:43:25,631 - #28 ,
INFO  07:43:25,632 - #8 d
INFO  07:43:25,633 - #24 =
INFO  07:43:25,633 - #9 99
INFO  07:43:25,633 - #27 ;
INFO  07:43:25,633 - #8 int
INFO  07:43:25,635 - #8 e
INFO  07:43:25,635 - #27 ;
INFO  07:43:25,635 - #20 {
INFO  07:43:25,636 - #6 void
INFO  07:43:25,637 - #8 main
INFO  07:43:25,637 - #29 (
INFO  07:43:25,638 - #30 )
INFO  07:43:25,638 - #20 {
INFO  07:43:25,638 - #31 if
INFO  07:43:25,638 - #29 (
INFO  07:43:25,638 - #12 false
INFO  07:43:25,638 - #30 )
INFO  07:43:25,639 - #20 {
INFO  07:43:25,639 - #3 print
INFO  07:43:25,639 - #29 (
INFO  07:43:25,640 - #9 65
INFO  07:43:25,640 - #30 )
INFO  07:43:25,640 - #27 ;
INFO  07:43:25,640 - #21 }
INFO  07:43:25,640 - #3 print
INFO  07:43:25,641 - #29 (
INFO  07:43:25,641 - #9 77
INFO  07:43:25,641 - #30 )
INFO  07:43:25,641 - #27 ;
INFO  07:43:25,641 - #21 }
INFO  07:43:25,641 - #21 }
INFO  07:43:25,642 - =====================SINTAKSNO_STABLO=========================
INFO  07:43:25,643 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:43:25,644 - ==============================================================
INFO  07:43:25,662 - Pocetak obrade programa Program na liniji 1
INFO  07:43:25,663 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:43:25,664 - Deklarisana konstanta c na liniji 2
INFO  07:43:25,664 - Deklarisana konstanta d na liniji 2
INFO  07:43:25,664 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:43:25,664 - Deklarisana promenljiva e na liniji 3
INFO  07:43:25,665 - Pocetak obrade metode main na liniji 5
INFO  07:43:25,666 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:43:25,666 - Zavrsetak obrade programa Program na liniji 1
INFO  07:43:25,666 - ======================TABELA_SIMBOLA==========================
INFO  07:43:25,666 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:43:25,667 - ==============================================================
INFO  07:43:25,667 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:43:25,667 - ==============================================================
INFO  07:43:25,667 - ======================GENERISANJE_KODA========================
INFO  07:43:25,672 - Generisanje koda uspesno zavrseno!
INFO  07:43:25,672 - Generisanje izlaznog fajla test\program.obj
INFO  07:43:25,672 - ==============================================================
INFO  07:43:27,778 - Obrada ulaznog fajla test\program.mj
INFO  07:43:28,033 - #2 program
INFO  07:43:28,033 - #8 Program
INFO  07:43:28,033 - #5 const
INFO  07:43:28,036 - #8 int
INFO  07:43:28,037 - #8 c
INFO  07:43:28,038 - #24 =
INFO  07:43:28,039 - #9 13
INFO  07:43:28,039 - #28 ,
INFO  07:43:28,041 - #8 d
INFO  07:43:28,041 - #24 =
INFO  07:43:28,041 - #9 99
INFO  07:43:28,042 - #27 ;
INFO  07:43:28,042 - #8 int
INFO  07:43:28,045 - #8 e
INFO  07:43:28,045 - #27 ;
INFO  07:43:28,045 - #20 {
INFO  07:43:28,047 - #6 void
INFO  07:43:28,047 - #8 main
INFO  07:43:28,047 - #29 (
INFO  07:43:28,049 - #30 )
INFO  07:43:28,049 - #20 {
INFO  07:43:28,049 - #31 if
INFO  07:43:28,049 - #29 (
INFO  07:43:28,049 - #12 false
INFO  07:43:28,049 - #30 )
INFO  07:43:28,052 - #20 {
INFO  07:43:28,052 - #3 print
INFO  07:43:28,053 - #29 (
INFO  07:43:28,053 - #9 65
INFO  07:43:28,053 - #30 )
INFO  07:43:28,053 - #27 ;
INFO  07:43:28,053 - #21 }
INFO  07:43:28,054 - #3 print
INFO  07:43:28,054 - #29 (
INFO  07:43:28,054 - #9 77
INFO  07:43:28,054 - #30 )
INFO  07:43:28,055 - #27 ;
INFO  07:43:28,055 - #21 }
INFO  07:43:28,055 - #21 }
INFO  07:43:28,058 - =====================SINTAKSNO_STABLO=========================
INFO  07:43:28,060 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:43:28,060 - ==============================================================
INFO  07:43:28,083 - Pocetak obrade programa Program na liniji 1
INFO  07:43:28,084 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:43:28,085 - Deklarisana konstanta c na liniji 2
INFO  07:43:28,085 - Deklarisana konstanta d na liniji 2
INFO  07:43:28,086 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:43:28,086 - Deklarisana promenljiva e na liniji 3
INFO  07:43:28,087 - Pocetak obrade metode main na liniji 5
INFO  07:43:28,088 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:43:28,088 - Zavrsetak obrade programa Program na liniji 1
INFO  07:43:28,088 - ======================TABELA_SIMBOLA==========================
INFO  07:43:28,089 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:43:28,089 - ==============================================================
INFO  07:43:28,089 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:43:28,089 - ==============================================================
INFO  07:43:28,089 - ======================GENERISANJE_KODA========================
INFO  07:43:28,100 - Generisanje koda uspesno zavrseno!
INFO  07:43:28,100 - Generisanje izlaznog fajla test\program.obj
INFO  07:43:28,100 - ==============================================================
INFO  07:43:32,466 - Obrada ulaznog fajla test\program.mj
INFO  07:43:32,547 - #2 program
INFO  07:43:32,547 - #8 Program
INFO  07:43:32,547 - #5 const
INFO  07:43:32,548 - #8 int
INFO  07:43:32,548 - #8 c
INFO  07:43:32,549 - #24 =
INFO  07:43:32,549 - #9 13
INFO  07:43:32,549 - #28 ,
INFO  07:43:32,550 - #8 d
INFO  07:43:32,550 - #24 =
INFO  07:43:32,550 - #9 99
INFO  07:43:32,551 - #27 ;
INFO  07:43:32,551 - #8 int
INFO  07:43:32,552 - #8 e
INFO  07:43:32,552 - #27 ;
INFO  07:43:32,553 - #20 {
INFO  07:43:32,554 - #6 void
INFO  07:43:32,554 - #8 main
INFO  07:43:32,554 - #29 (
INFO  07:43:32,555 - #30 )
INFO  07:43:32,555 - #20 {
INFO  07:43:32,555 - #31 if
INFO  07:43:32,555 - #29 (
INFO  07:43:32,555 - #12 false
INFO  07:43:32,555 - #30 )
INFO  07:43:32,556 - #20 {
INFO  07:43:32,556 - #3 print
INFO  07:43:32,557 - #29 (
INFO  07:43:32,557 - #9 65
INFO  07:43:32,557 - #30 )
INFO  07:43:32,557 - #27 ;
INFO  07:43:32,557 - #21 }
INFO  07:43:32,557 - #3 print
INFO  07:43:32,558 - #29 (
INFO  07:43:32,558 - #9 77
INFO  07:43:32,558 - #30 )
INFO  07:43:32,558 - #27 ;
INFO  07:43:32,558 - #21 }
INFO  07:43:32,558 - #21 }
INFO  07:43:32,559 - =====================SINTAKSNO_STABLO=========================
INFO  07:43:32,561 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:43:32,561 - ==============================================================
INFO  07:43:32,576 - Pocetak obrade programa Program na liniji 1
INFO  07:43:32,576 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:43:32,577 - Deklarisana konstanta c na liniji 2
INFO  07:43:32,577 - Deklarisana konstanta d na liniji 2
INFO  07:43:32,578 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:43:32,578 - Deklarisana promenljiva e na liniji 3
INFO  07:43:32,579 - Pocetak obrade metode main na liniji 5
INFO  07:43:32,579 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:43:32,579 - Zavrsetak obrade programa Program na liniji 1
INFO  07:43:32,579 - ======================TABELA_SIMBOLA==========================
INFO  07:43:32,580 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:43:32,580 - ==============================================================
INFO  07:43:32,580 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:43:32,581 - ==============================================================
INFO  07:43:32,581 - ======================GENERISANJE_KODA========================
INFO  07:43:32,586 - Generisanje koda uspesno zavrseno!
INFO  07:43:32,587 - Generisanje izlaznog fajla test\program.obj
INFO  07:43:32,587 - ==============================================================
INFO  07:44:28,234 - Obrada ulaznog fajla test\program.mj
INFO  07:44:28,318 - #2 program
INFO  07:44:28,318 - #8 Program
INFO  07:44:28,318 - #5 const
INFO  07:44:28,319 - #8 int
INFO  07:44:28,319 - #8 c
INFO  07:44:28,320 - #24 =
INFO  07:44:28,320 - #9 13
INFO  07:44:28,320 - #28 ,
INFO  07:44:28,321 - #8 d
INFO  07:44:28,321 - #24 =
INFO  07:44:28,321 - #9 99
INFO  07:44:28,321 - #27 ;
INFO  07:44:28,321 - #8 int
INFO  07:44:28,323 - #8 e
INFO  07:44:28,323 - #27 ;
INFO  07:44:28,323 - #20 {
INFO  07:44:28,324 - #6 void
INFO  07:44:28,324 - #8 main
INFO  07:44:28,324 - #29 (
INFO  07:44:28,325 - #30 )
INFO  07:44:28,325 - #20 {
INFO  07:44:28,325 - #31 if
INFO  07:44:28,325 - #29 (
INFO  07:44:28,326 - #12 false
INFO  07:44:28,326 - #30 )
INFO  07:44:28,327 - #20 {
INFO  07:44:28,327 - #3 print
INFO  07:44:28,327 - #29 (
INFO  07:44:28,327 - #9 65
INFO  07:44:28,327 - #30 )
INFO  07:44:28,327 - #27 ;
INFO  07:44:28,327 - #21 }
INFO  07:44:28,328 - #3 print
INFO  07:44:28,328 - #29 (
INFO  07:44:28,328 - #9 77
INFO  07:44:28,328 - #30 )
INFO  07:44:28,328 - #27 ;
INFO  07:44:28,329 - #21 }
INFO  07:44:28,329 - #21 }
INFO  07:44:28,330 - =====================SINTAKSNO_STABLO=========================
INFO  07:44:28,331 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:44:28,332 - ==============================================================
INFO  07:44:28,348 - Pocetak obrade programa Program na liniji 1
INFO  07:44:28,348 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:44:28,349 - Deklarisana konstanta c na liniji 2
INFO  07:44:28,349 - Deklarisana konstanta d na liniji 2
INFO  07:44:28,349 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:44:28,350 - Deklarisana promenljiva e na liniji 3
INFO  07:44:28,350 - Pocetak obrade metode main na liniji 5
INFO  07:44:28,351 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:44:28,351 - Zavrsetak obrade programa Program na liniji 1
INFO  07:44:28,351 - ======================TABELA_SIMBOLA==========================
INFO  07:44:28,351 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:44:28,351 - ==============================================================
INFO  07:44:28,351 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:44:28,352 - ==============================================================
INFO  07:44:28,352 - ======================GENERISANJE_KODA========================
INFO  07:44:28,356 - Generisanje koda uspesno zavrseno!
INFO  07:44:28,357 - Generisanje izlaznog fajla test\program.obj
INFO  07:44:28,357 - ==============================================================
INFO  07:48:50,370 - Obrada ulaznog fajla test\program.mj
INFO  07:48:50,445 - #2 program
INFO  07:48:50,445 - #8 Program
INFO  07:48:50,445 - #5 const
INFO  07:48:50,446 - #8 int
INFO  07:48:50,446 - #8 c
INFO  07:48:50,447 - #24 =
INFO  07:48:50,448 - #9 13
INFO  07:48:50,448 - #28 ,
INFO  07:48:50,449 - #8 d
INFO  07:48:50,449 - #24 =
INFO  07:48:50,449 - #9 99
INFO  07:48:50,449 - #27 ;
INFO  07:48:50,450 - #8 int
INFO  07:48:50,451 - #8 e
INFO  07:48:50,451 - #27 ;
INFO  07:48:50,452 - #20 {
INFO  07:48:50,453 - #6 void
INFO  07:48:50,453 - #8 main
INFO  07:48:50,453 - #29 (
INFO  07:48:50,454 - #30 )
INFO  07:48:50,454 - #20 {
INFO  07:48:50,454 - #31 if
INFO  07:48:50,454 - #29 (
INFO  07:48:50,454 - #12 false
INFO  07:48:50,454 - #30 )
INFO  07:48:50,455 - #20 {
INFO  07:48:50,455 - #3 print
INFO  07:48:50,455 - #29 (
INFO  07:48:50,456 - #9 65
INFO  07:48:50,456 - #30 )
INFO  07:48:50,456 - #27 ;
INFO  07:48:50,456 - #21 }
INFO  07:48:50,456 - #3 print
INFO  07:48:50,457 - #29 (
INFO  07:48:50,457 - #9 77
INFO  07:48:50,457 - #30 )
INFO  07:48:50,457 - #27 ;
INFO  07:48:50,457 - #21 }
INFO  07:48:50,457 - #21 }
INFO  07:48:50,458 - =====================SINTAKSNO_STABLO=========================
INFO  07:48:50,460 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:48:50,461 - ==============================================================
INFO  07:48:50,471 - Pocetak obrade programa Program na liniji 1
INFO  07:48:50,472 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:48:50,473 - Deklarisana konstanta c na liniji 2
INFO  07:48:50,474 - Deklarisana konstanta d na liniji 2
INFO  07:48:50,474 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:48:50,474 - Deklarisana promenljiva e na liniji 3
INFO  07:48:50,475 - Pocetak obrade metode main na liniji 5
INFO  07:48:50,475 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:48:50,475 - Zavrsetak obrade programa Program na liniji 1
INFO  07:48:50,476 - ======================TABELA_SIMBOLA==========================
INFO  07:48:50,476 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:48:50,476 - ==============================================================
INFO  07:48:50,476 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:48:50,476 - ==============================================================
INFO  07:48:50,477 - ======================GENERISANJE_KODA========================
INFO  07:48:50,483 - Generisanje koda uspesno zavrseno!
INFO  07:48:50,483 - Generisanje izlaznog fajla test\program.obj
INFO  07:48:50,484 - ==============================================================
INFO  07:49:17,718 - Obrada ulaznog fajla test\program.mj
INFO  07:49:17,799 - #2 program
INFO  07:49:17,799 - #8 Program
INFO  07:49:17,799 - #5 const
INFO  07:49:17,800 - #8 int
INFO  07:49:17,800 - #8 c
INFO  07:49:17,801 - #24 =
INFO  07:49:17,801 - #9 13
INFO  07:49:17,801 - #28 ,
INFO  07:49:17,803 - #8 d
INFO  07:49:17,803 - #24 =
INFO  07:49:17,803 - #9 99
INFO  07:49:17,803 - #27 ;
INFO  07:49:17,803 - #8 int
INFO  07:49:17,805 - #8 e
INFO  07:49:17,805 - #27 ;
INFO  07:49:17,805 - #20 {
INFO  07:49:17,806 - #6 void
INFO  07:49:17,806 - #8 main
INFO  07:49:17,806 - #29 (
INFO  07:49:17,807 - #30 )
INFO  07:49:17,807 - #20 {
INFO  07:49:17,807 - #31 if
INFO  07:49:17,808 - #29 (
INFO  07:49:17,808 - #12 false
INFO  07:49:17,808 - #30 )
INFO  07:49:17,809 - #20 {
INFO  07:49:17,809 - #3 print
INFO  07:49:17,809 - #29 (
INFO  07:49:17,809 - #9 65
INFO  07:49:17,809 - #30 )
INFO  07:49:17,809 - #27 ;
INFO  07:49:17,809 - #21 }
INFO  07:49:17,810 - #3 print
INFO  07:49:17,810 - #29 (
INFO  07:49:17,810 - #9 77
INFO  07:49:17,810 - #30 )
INFO  07:49:17,810 - #27 ;
INFO  07:49:17,810 - #21 }
INFO  07:49:17,811 - #21 }
INFO  07:49:17,811 - =====================SINTAKSNO_STABLO=========================
INFO  07:49:17,813 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:49:17,813 - ==============================================================
INFO  07:49:17,829 - Pocetak obrade programa Program na liniji 1
INFO  07:49:17,829 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:49:17,830 - Deklarisana konstanta c na liniji 2
INFO  07:49:17,830 - Deklarisana konstanta d na liniji 2
INFO  07:49:17,830 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:49:17,830 - Deklarisana promenljiva e na liniji 3
INFO  07:49:17,831 - Pocetak obrade metode main na liniji 5
INFO  07:49:17,831 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:49:17,832 - Zavrsetak obrade programa Program na liniji 1
INFO  07:49:17,832 - ======================TABELA_SIMBOLA==========================
INFO  07:49:17,832 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:49:17,833 - ==============================================================
INFO  07:49:17,833 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:49:17,833 - ==============================================================
INFO  07:49:17,833 - ======================GENERISANJE_KODA========================
INFO  07:49:17,838 - Generisanje koda uspesno zavrseno!
INFO  07:49:17,838 - Generisanje izlaznog fajla test\program.obj
INFO  07:49:17,838 - ==============================================================
INFO  07:50:29,117 - Obrada ulaznog fajla test\program.mj
INFO  07:50:29,236 - #2 program
INFO  07:50:29,236 - #8 Program
INFO  07:50:29,237 - #5 const
INFO  07:50:29,238 - #8 int
INFO  07:50:29,238 - #8 c
INFO  07:50:29,240 - #24 =
INFO  07:50:29,240 - #9 13
INFO  07:50:29,240 - #28 ,
INFO  07:50:29,243 - #8 d
INFO  07:50:29,243 - #24 =
INFO  07:50:29,244 - #9 99
INFO  07:50:29,244 - #27 ;
INFO  07:50:29,245 - #8 int
INFO  07:50:29,247 - #8 e
INFO  07:50:29,247 - #27 ;
INFO  07:50:29,248 - #20 {
INFO  07:50:29,250 - #6 void
INFO  07:50:29,251 - #8 main
INFO  07:50:29,251 - #29 (
INFO  07:50:29,253 - #30 )
INFO  07:50:29,253 - #20 {
INFO  07:50:29,253 - #31 if
INFO  07:50:29,253 - #29 (
INFO  07:50:29,254 - #12 false
INFO  07:50:29,254 - #30 )
INFO  07:50:29,255 - #20 {
INFO  07:50:29,255 - #3 print
INFO  07:50:29,255 - #29 (
INFO  07:50:29,255 - #9 65
INFO  07:50:29,256 - #30 )
INFO  07:50:29,256 - #27 ;
INFO  07:50:29,256 - #21 }
INFO  07:50:29,256 - #3 print
INFO  07:50:29,257 - #29 (
INFO  07:50:29,257 - #9 77
INFO  07:50:29,257 - #30 )
INFO  07:50:29,257 - #27 ;
INFO  07:50:29,257 - #21 }
INFO  07:50:29,258 - #21 }
INFO  07:50:29,259 - =====================SINTAKSNO_STABLO=========================
INFO  07:50:29,261 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:50:29,262 - ==============================================================
INFO  07:50:29,275 - Pocetak obrade programa Program na liniji 1
INFO  07:50:29,276 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:50:29,278 - Deklarisana konstanta c na liniji 2
INFO  07:50:29,278 - Deklarisana konstanta d na liniji 2
INFO  07:50:29,279 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:50:29,279 - Deklarisana promenljiva e na liniji 3
INFO  07:50:29,280 - Pocetak obrade metode main na liniji 5
INFO  07:50:29,281 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:50:29,281 - Zavrsetak obrade programa Program na liniji 1
INFO  07:50:29,281 - ======================TABELA_SIMBOLA==========================
INFO  07:50:29,282 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:50:29,283 - ==============================================================
INFO  07:50:29,283 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:50:29,283 - ==============================================================
INFO  07:50:29,283 - ======================GENERISANJE_KODA========================
INFO  07:50:29,290 - Generisanje koda uspesno zavrseno!
INFO  07:50:29,290 - Generisanje izlaznog fajla test\program.obj
INFO  07:50:29,290 - ==============================================================
INFO  07:51:05,137 - Obrada ulaznog fajla test\program.mj
INFO  07:51:05,216 - #2 program
INFO  07:51:05,216 - #8 Program
INFO  07:51:05,216 - #5 const
INFO  07:51:05,217 - #8 int
INFO  07:51:05,218 - #8 c
INFO  07:51:05,218 - #24 =
INFO  07:51:05,219 - #9 13
INFO  07:51:05,219 - #28 ,
INFO  07:51:05,220 - #8 d
INFO  07:51:05,220 - #24 =
INFO  07:51:05,220 - #9 99
INFO  07:51:05,220 - #27 ;
INFO  07:51:05,221 - #8 int
INFO  07:51:05,222 - #8 e
INFO  07:51:05,222 - #27 ;
INFO  07:51:05,222 - #20 {
INFO  07:51:05,224 - #6 void
INFO  07:51:05,224 - #8 main
INFO  07:51:05,224 - #29 (
INFO  07:51:05,225 - #30 )
INFO  07:51:05,225 - #20 {
INFO  07:51:05,225 - #31 if
INFO  07:51:05,225 - #29 (
INFO  07:51:05,225 - #12 false
INFO  07:51:05,225 - #30 )
INFO  07:51:05,227 - #20 {
INFO  07:51:05,227 - #3 print
INFO  07:51:05,227 - #29 (
INFO  07:51:05,227 - #9 65
INFO  07:51:05,227 - #30 )
INFO  07:51:05,227 - #27 ;
INFO  07:51:05,228 - #21 }
INFO  07:51:05,228 - #3 print
INFO  07:51:05,228 - #29 (
INFO  07:51:05,228 - #9 77
INFO  07:51:05,229 - #30 )
INFO  07:51:05,229 - #27 ;
INFO  07:51:05,229 - #21 }
INFO  07:51:05,229 - #21 }
INFO  07:51:05,230 - =====================SINTAKSNO_STABLO=========================
INFO  07:51:05,231 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:51:05,231 - ==============================================================
INFO  07:51:05,247 - Pocetak obrade programa Program na liniji 1
INFO  07:51:05,247 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:51:05,248 - Deklarisana konstanta c na liniji 2
INFO  07:51:05,248 - Deklarisana konstanta d na liniji 2
INFO  07:51:05,249 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:51:05,249 - Deklarisana promenljiva e na liniji 3
INFO  07:51:05,249 - Pocetak obrade metode main na liniji 5
INFO  07:51:05,250 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:51:05,250 - Zavrsetak obrade programa Program na liniji 1
INFO  07:51:05,250 - ======================TABELA_SIMBOLA==========================
INFO  07:51:05,251 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:51:05,251 - ==============================================================
INFO  07:51:05,251 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:51:05,251 - ==============================================================
INFO  07:51:05,251 - ======================GENERISANJE_KODA========================
INFO  07:51:05,258 - Generisanje koda uspesno zavrseno!
INFO  07:51:05,258 - Generisanje izlaznog fajla test\program.obj
INFO  07:51:05,258 - ==============================================================
INFO  07:51:39,280 - Obrada ulaznog fajla test\program.mj
INFO  07:51:39,388 - #2 program
INFO  07:51:39,388 - #8 Program
INFO  07:51:39,388 - #5 const
INFO  07:51:39,390 - #8 int
INFO  07:51:39,390 - #8 c
INFO  07:51:39,391 - #24 =
INFO  07:51:39,391 - #9 13
INFO  07:51:39,392 - #28 ,
INFO  07:51:39,393 - #8 d
INFO  07:51:39,393 - #24 =
INFO  07:51:39,394 - #9 99
INFO  07:51:39,394 - #27 ;
INFO  07:51:39,395 - #8 int
INFO  07:51:39,397 - #8 e
INFO  07:51:39,397 - #27 ;
INFO  07:51:39,397 - #20 {
INFO  07:51:39,399 - #6 void
INFO  07:51:39,399 - #8 main
INFO  07:51:39,399 - #29 (
INFO  07:51:39,400 - #30 )
INFO  07:51:39,400 - #20 {
INFO  07:51:39,400 - #31 if
INFO  07:51:39,400 - #29 (
INFO  07:51:39,400 - #12 false
INFO  07:51:39,400 - #30 )
INFO  07:51:39,401 - #20 {
INFO  07:51:39,402 - #3 print
INFO  07:51:39,402 - #29 (
INFO  07:51:39,402 - #9 65
INFO  07:51:39,402 - #30 )
INFO  07:51:39,402 - #27 ;
INFO  07:51:39,402 - #21 }
INFO  07:51:39,402 - #3 print
INFO  07:51:39,403 - #29 (
INFO  07:51:39,403 - #9 77
INFO  07:51:39,403 - #30 )
INFO  07:51:39,403 - #27 ;
INFO  07:51:39,403 - #21 }
INFO  07:51:39,404 - #21 }
INFO  07:51:39,404 - =====================SINTAKSNO_STABLO=========================
INFO  07:51:39,405 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:51:39,406 - ==============================================================
INFO  07:51:39,419 - Pocetak obrade programa Program na liniji 1
INFO  07:51:39,420 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:51:39,421 - Deklarisana konstanta c na liniji 2
INFO  07:51:39,421 - Deklarisana konstanta d na liniji 2
INFO  07:51:39,421 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:51:39,421 - Deklarisana promenljiva e na liniji 3
INFO  07:51:39,422 - Pocetak obrade metode main na liniji 5
INFO  07:51:39,423 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:51:39,423 - Zavrsetak obrade programa Program na liniji 1
INFO  07:51:39,423 - ======================TABELA_SIMBOLA==========================
INFO  07:51:39,424 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:51:39,424 - ==============================================================
INFO  07:51:39,424 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:51:39,424 - ==============================================================
INFO  07:51:39,424 - ======================GENERISANJE_KODA========================
INFO  07:51:39,429 - Generisanje koda uspesno zavrseno!
INFO  07:51:39,429 - Generisanje izlaznog fajla test\program.obj
INFO  07:51:39,429 - ==============================================================
INFO  07:51:56,564 - Obrada ulaznog fajla test\program.mj
INFO  07:51:56,667 - #2 program
INFO  07:51:56,667 - #8 Program
INFO  07:51:56,667 - #5 const
INFO  07:51:56,668 - #8 int
INFO  07:51:56,669 - #8 c
INFO  07:51:56,669 - #24 =
INFO  07:51:56,669 - #9 13
INFO  07:51:56,670 - #28 ,
INFO  07:51:56,671 - #8 d
INFO  07:51:56,671 - #24 =
INFO  07:51:56,671 - #9 99
INFO  07:51:56,671 - #27 ;
INFO  07:51:56,671 - #8 int
INFO  07:51:56,673 - #8 e
INFO  07:51:56,673 - #27 ;
INFO  07:51:56,673 - #20 {
INFO  07:51:56,675 - #6 void
INFO  07:51:56,675 - #8 main
INFO  07:51:56,675 - #29 (
INFO  07:51:56,677 - #30 )
INFO  07:51:56,677 - #20 {
INFO  07:51:56,677 - #31 if
INFO  07:51:56,677 - #29 (
INFO  07:51:56,678 - #12 false
INFO  07:51:56,678 - #30 )
INFO  07:51:56,679 - #20 {
INFO  07:51:56,679 - #3 print
INFO  07:51:56,679 - #29 (
INFO  07:51:56,679 - #9 65
INFO  07:51:56,679 - #30 )
INFO  07:51:56,679 - #27 ;
INFO  07:51:56,679 - #21 }
INFO  07:51:56,680 - #3 print
INFO  07:51:56,680 - #29 (
INFO  07:51:56,680 - #9 77
INFO  07:51:56,680 - #30 )
INFO  07:51:56,680 - #27 ;
INFO  07:51:56,680 - #21 }
INFO  07:51:56,681 - #21 }
INFO  07:51:56,681 - =====================SINTAKSNO_STABLO=========================
INFO  07:51:56,683 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:51:56,683 - ==============================================================
INFO  07:51:56,698 - Pocetak obrade programa Program na liniji 1
INFO  07:51:56,699 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:51:56,700 - Deklarisana konstanta c na liniji 2
INFO  07:51:56,700 - Deklarisana konstanta d na liniji 2
INFO  07:51:56,700 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:51:56,700 - Deklarisana promenljiva e na liniji 3
INFO  07:51:56,701 - Pocetak obrade metode main na liniji 5
INFO  07:51:56,701 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:51:56,702 - Zavrsetak obrade programa Program na liniji 1
INFO  07:51:56,702 - ======================TABELA_SIMBOLA==========================
INFO  07:51:56,702 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:51:56,702 - ==============================================================
INFO  07:51:56,702 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:51:56,703 - ==============================================================
INFO  07:51:56,703 - ======================GENERISANJE_KODA========================
INFO  07:52:09,835 - Obrada ulaznog fajla test\program.mj
INFO  07:52:09,968 - #2 program
INFO  07:52:09,968 - #8 Program
INFO  07:52:09,968 - #5 const
INFO  07:52:09,970 - #8 int
INFO  07:52:09,970 - #8 c
INFO  07:52:09,971 - #24 =
INFO  07:52:09,971 - #9 13
INFO  07:52:09,972 - #28 ,
INFO  07:52:09,974 - #8 d
INFO  07:52:09,974 - #24 =
INFO  07:52:09,974 - #9 99
INFO  07:52:09,974 - #27 ;
INFO  07:52:09,974 - #8 int
INFO  07:52:09,976 - #8 e
INFO  07:52:09,976 - #27 ;
INFO  07:52:09,977 - #20 {
INFO  07:52:09,979 - #6 void
INFO  07:52:09,979 - #8 main
INFO  07:52:09,979 - #29 (
INFO  07:52:09,980 - #30 )
INFO  07:52:09,981 - #20 {
INFO  07:52:09,981 - #31 if
INFO  07:52:09,981 - #29 (
INFO  07:52:09,981 - #12 false
INFO  07:52:09,981 - #30 )
INFO  07:52:09,983 - #20 {
INFO  07:52:09,983 - #3 print
INFO  07:52:09,983 - #29 (
INFO  07:52:09,983 - #9 65
INFO  07:52:09,983 - #30 )
INFO  07:52:09,983 - #27 ;
INFO  07:52:09,983 - #21 }
INFO  07:52:09,984 - #3 print
INFO  07:52:09,984 - #29 (
INFO  07:52:09,985 - #9 77
INFO  07:52:09,985 - #30 )
INFO  07:52:09,985 - #27 ;
INFO  07:52:09,985 - #21 }
INFO  07:52:09,985 - #21 }
INFO  07:52:09,986 - =====================SINTAKSNO_STABLO=========================
INFO  07:52:09,988 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:52:09,988 - ==============================================================
INFO  07:52:10,010 - Pocetak obrade programa Program na liniji 1
INFO  07:52:10,011 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:52:10,012 - Deklarisana konstanta c na liniji 2
INFO  07:52:10,012 - Deklarisana konstanta d na liniji 2
INFO  07:52:10,013 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:52:10,013 - Deklarisana promenljiva e na liniji 3
INFO  07:52:10,014 - Pocetak obrade metode main na liniji 5
INFO  07:52:10,014 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:52:10,015 - Zavrsetak obrade programa Program na liniji 1
INFO  07:52:10,015 - ======================TABELA_SIMBOLA==========================
INFO  07:52:10,016 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:52:10,016 - ==============================================================
INFO  07:52:10,016 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:52:10,016 - ==============================================================
INFO  07:52:10,016 - ======================GENERISANJE_KODA========================
INFO  07:52:57,227 - Obrada ulaznog fajla test\program.mj
INFO  07:52:57,327 - #2 program
INFO  07:52:57,327 - #8 Program
INFO  07:52:57,327 - #5 const
INFO  07:52:57,328 - #8 int
INFO  07:52:57,328 - #8 c
INFO  07:52:57,330 - #24 =
INFO  07:52:57,330 - #9 13
INFO  07:52:57,330 - #28 ,
INFO  07:52:57,333 - #8 d
INFO  07:52:57,333 - #24 =
INFO  07:52:57,333 - #9 99
INFO  07:52:57,334 - #27 ;
INFO  07:52:57,334 - #8 int
INFO  07:52:57,337 - #8 e
INFO  07:52:57,337 - #27 ;
INFO  07:52:57,337 - #20 {
INFO  07:52:57,339 - #6 void
INFO  07:52:57,339 - #8 main
INFO  07:52:57,339 - #29 (
INFO  07:52:57,341 - #30 )
INFO  07:52:57,341 - #20 {
INFO  07:52:57,341 - #31 if
INFO  07:52:57,341 - #29 (
INFO  07:52:57,341 - #12 false
INFO  07:52:57,342 - #30 )
INFO  07:52:57,343 - #20 {
INFO  07:52:57,344 - #3 print
INFO  07:52:57,344 - #29 (
INFO  07:52:57,344 - #9 65
INFO  07:52:57,344 - #30 )
INFO  07:52:57,344 - #27 ;
INFO  07:52:57,344 - #21 }
INFO  07:52:57,345 - #3 print
INFO  07:52:57,345 - #29 (
INFO  07:52:57,345 - #9 77
INFO  07:52:57,345 - #30 )
INFO  07:52:57,346 - #27 ;
INFO  07:52:57,346 - #21 }
INFO  07:52:57,346 - #21 }
INFO  07:52:57,347 - =====================SINTAKSNO_STABLO=========================
INFO  07:52:57,349 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:52:57,351 - ==============================================================
INFO  07:52:57,371 - Pocetak obrade programa Program na liniji 1
INFO  07:52:57,371 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:52:57,372 - Deklarisana konstanta c na liniji 2
INFO  07:52:57,373 - Deklarisana konstanta d na liniji 2
INFO  07:52:57,373 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:52:57,373 - Deklarisana promenljiva e na liniji 3
INFO  07:52:57,374 - Pocetak obrade metode main na liniji 5
INFO  07:52:57,375 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:52:57,375 - Zavrsetak obrade programa Program na liniji 1
INFO  07:52:57,376 - ======================TABELA_SIMBOLA==========================
INFO  07:52:57,377 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:52:57,377 - ==============================================================
INFO  07:52:57,377 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:52:57,377 - ==============================================================
INFO  07:52:57,377 - ======================GENERISANJE_KODA========================
INFO  07:52:57,382 - Generisanje koda uspesno zavrseno!
INFO  07:52:57,383 - Generisanje izlaznog fajla test\program.obj
INFO  07:52:57,383 - ==============================================================
INFO  07:54:55,643 - Obrada ulaznog fajla test\program.mj
INFO  07:54:55,725 - #2 program
INFO  07:54:55,726 - #8 Program
INFO  07:54:55,726 - #5 const
INFO  07:54:55,728 - #8 int
INFO  07:54:55,728 - #8 c
INFO  07:54:55,729 - #24 =
INFO  07:54:55,729 - #9 13
INFO  07:54:55,729 - #28 ,
INFO  07:54:55,731 - #8 d
INFO  07:54:55,731 - #24 =
INFO  07:54:55,731 - #9 99
INFO  07:54:55,731 - #27 ;
INFO  07:54:55,732 - #8 int
INFO  07:54:55,733 - #8 e
INFO  07:54:55,733 - #27 ;
INFO  07:54:55,733 - #20 {
INFO  07:54:55,735 - #6 void
INFO  07:54:55,735 - #8 main
INFO  07:54:55,735 - #29 (
INFO  07:54:55,736 - #30 )
INFO  07:54:55,736 - #20 {
INFO  07:54:55,736 - #31 if
INFO  07:54:55,736 - #29 (
INFO  07:54:55,737 - #12 false
INFO  07:54:55,737 - #30 )
INFO  07:54:55,738 - #20 {
INFO  07:54:55,739 - #3 print
INFO  07:54:55,739 - #29 (
INFO  07:54:55,739 - #9 65
INFO  07:54:55,739 - #30 )
INFO  07:54:55,739 - #27 ;
INFO  07:54:55,739 - #21 }
INFO  07:54:55,740 - #3 print
INFO  07:54:55,740 - #29 (
INFO  07:54:55,740 - #9 77
INFO  07:54:55,741 - #30 )
INFO  07:54:55,741 - #27 ;
INFO  07:54:55,741 - #21 }
INFO  07:54:55,741 - #21 }
INFO  07:54:55,743 - =====================SINTAKSNO_STABLO=========================
INFO  07:54:55,745 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:54:55,745 - ==============================================================
INFO  07:54:55,764 - Pocetak obrade programa Program na liniji 1
INFO  07:54:55,765 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:54:55,766 - Deklarisana konstanta c na liniji 2
INFO  07:54:55,766 - Deklarisana konstanta d na liniji 2
INFO  07:54:55,766 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:54:55,766 - Deklarisana promenljiva e na liniji 3
INFO  07:54:55,768 - Pocetak obrade metode main na liniji 5
INFO  07:54:55,769 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:54:55,769 - Zavrsetak obrade programa Program na liniji 1
INFO  07:54:55,770 - ======================TABELA_SIMBOLA==========================
INFO  07:54:55,770 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:54:55,771 - ==============================================================
INFO  07:54:55,771 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:54:55,771 - ==============================================================
INFO  07:54:55,771 - ======================GENERISANJE_KODA========================
INFO  07:54:55,776 - Generisanje koda uspesno zavrseno!
INFO  07:54:55,777 - Generisanje izlaznog fajla test\program.obj
INFO  07:54:55,777 - ==============================================================
INFO  07:55:16,161 - Obrada ulaznog fajla test\program.mj
INFO  07:55:16,254 - #2 program
INFO  07:55:16,254 - #8 Program
INFO  07:55:16,254 - #5 const
INFO  07:55:16,255 - #8 int
INFO  07:55:16,255 - #8 c
INFO  07:55:16,256 - #24 =
INFO  07:55:16,256 - #9 13
INFO  07:55:16,256 - #28 ,
INFO  07:55:16,258 - #8 d
INFO  07:55:16,258 - #24 =
INFO  07:55:16,258 - #9 99
INFO  07:55:16,258 - #27 ;
INFO  07:55:16,258 - #8 int
INFO  07:55:16,259 - #8 e
INFO  07:55:16,259 - #27 ;
INFO  07:55:16,260 - #20 {
INFO  07:55:16,261 - #6 void
INFO  07:55:16,261 - #8 main
INFO  07:55:16,261 - #29 (
INFO  07:55:16,262 - #30 )
INFO  07:55:16,262 - #20 {
INFO  07:55:16,262 - #31 if
INFO  07:55:16,262 - #29 (
INFO  07:55:16,263 - #12 false
INFO  07:55:16,263 - #30 )
INFO  07:55:16,265 - #20 {
INFO  07:55:16,265 - #3 print
INFO  07:55:16,265 - #29 (
INFO  07:55:16,265 - #9 65
INFO  07:55:16,265 - #30 )
INFO  07:55:16,265 - #27 ;
INFO  07:55:16,265 - #21 }
INFO  07:55:16,266 - #3 print
INFO  07:55:16,266 - #29 (
INFO  07:55:16,266 - #9 77
INFO  07:55:16,266 - #30 )
INFO  07:55:16,266 - #27 ;
INFO  07:55:16,267 - #21 }
INFO  07:55:16,267 - #21 }
INFO  07:55:16,267 - =====================SINTAKSNO_STABLO=========================
INFO  07:55:16,269 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:55:16,269 - ==============================================================
INFO  07:55:16,283 - Pocetak obrade programa Program na liniji 1
INFO  07:55:16,283 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:55:16,284 - Deklarisana konstanta c na liniji 2
INFO  07:55:16,284 - Deklarisana konstanta d na liniji 2
INFO  07:55:16,284 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:55:16,284 - Deklarisana promenljiva e na liniji 3
INFO  07:55:16,285 - Pocetak obrade metode main na liniji 5
INFO  07:55:16,285 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:55:16,285 - Zavrsetak obrade programa Program na liniji 1
INFO  07:55:16,285 - ======================TABELA_SIMBOLA==========================
INFO  07:55:16,286 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:55:16,286 - ==============================================================
INFO  07:55:16,286 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:55:16,286 - ==============================================================
INFO  07:55:16,286 - ======================GENERISANJE_KODA========================
INFO  07:55:16,290 - Generisanje koda uspesno zavrseno!
INFO  07:55:16,291 - Generisanje izlaznog fajla test\program.obj
INFO  07:55:16,291 - ==============================================================
INFO  07:55:45,957 - Obrada ulaznog fajla test\program.mj
INFO  07:55:46,049 - #2 program
INFO  07:55:46,049 - #8 Program
INFO  07:55:46,049 - #5 const
INFO  07:55:46,050 - #8 int
INFO  07:55:46,050 - #8 c
INFO  07:55:46,051 - #24 =
INFO  07:55:46,051 - #9 13
INFO  07:55:46,051 - #28 ,
INFO  07:55:46,052 - #8 d
INFO  07:55:46,052 - #24 =
INFO  07:55:46,052 - #9 99
INFO  07:55:46,052 - #27 ;
INFO  07:55:46,053 - #8 int
INFO  07:55:46,054 - #8 e
INFO  07:55:46,054 - #27 ;
INFO  07:55:46,054 - #20 {
INFO  07:55:46,055 - #6 void
INFO  07:55:46,055 - #8 main
INFO  07:55:46,055 - #29 (
INFO  07:55:46,056 - #30 )
INFO  07:55:46,056 - #20 {
INFO  07:55:46,056 - #31 if
INFO  07:55:46,056 - #29 (
INFO  07:55:46,057 - #12 false
INFO  07:55:46,057 - #30 )
INFO  07:55:46,058 - #20 {
INFO  07:55:46,058 - #3 print
INFO  07:55:46,058 - #29 (
INFO  07:55:46,058 - #9 65
INFO  07:55:46,058 - #30 )
INFO  07:55:46,058 - #27 ;
INFO  07:55:46,058 - #21 }
INFO  07:55:46,059 - #3 print
INFO  07:55:46,060 - #29 (
INFO  07:55:46,060 - #9 77
INFO  07:55:46,060 - #30 )
INFO  07:55:46,060 - #27 ;
INFO  07:55:46,060 - #21 }
INFO  07:55:46,060 - #21 }
INFO  07:55:46,061 - =====================SINTAKSNO_STABLO=========================
INFO  07:55:46,062 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:55:46,063 - ==============================================================
INFO  07:55:46,079 - Pocetak obrade programa Program na liniji 1
INFO  07:55:46,080 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:55:46,080 - Deklarisana konstanta c na liniji 2
INFO  07:55:46,081 - Deklarisana konstanta d na liniji 2
INFO  07:55:46,081 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:55:46,081 - Deklarisana promenljiva e na liniji 3
INFO  07:55:46,081 - Pocetak obrade metode main na liniji 5
INFO  07:55:46,082 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:55:46,082 - Zavrsetak obrade programa Program na liniji 1
INFO  07:55:46,082 - ======================TABELA_SIMBOLA==========================
INFO  07:55:46,083 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:55:46,083 - ==============================================================
INFO  07:55:46,083 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:55:46,083 - ==============================================================
INFO  07:55:46,083 - ======================GENERISANJE_KODA========================
INFO  07:55:46,088 - Generisanje koda uspesno zavrseno!
INFO  07:55:46,088 - Generisanje izlaznog fajla test\program.obj
INFO  07:55:46,088 - ==============================================================
INFO  07:57:35,299 - Obrada ulaznog fajla test\program.mj
INFO  07:57:35,389 - #2 program
INFO  07:57:35,389 - #8 Program
INFO  07:57:35,389 - #5 const
INFO  07:57:35,390 - #8 int
INFO  07:57:35,390 - #8 c
INFO  07:57:35,391 - #24 =
INFO  07:57:35,391 - #9 13
INFO  07:57:35,391 - #28 ,
INFO  07:57:35,393 - #8 d
INFO  07:57:35,394 - #24 =
INFO  07:57:35,394 - #9 99
INFO  07:57:35,394 - #27 ;
INFO  07:57:35,394 - #8 int
INFO  07:57:35,395 - #8 e
INFO  07:57:35,396 - #27 ;
INFO  07:57:35,396 - #20 {
INFO  07:57:35,397 - #6 void
INFO  07:57:35,397 - #8 main
INFO  07:57:35,397 - #29 (
INFO  07:57:35,398 - #30 )
INFO  07:57:35,398 - #20 {
INFO  07:57:35,398 - #31 if
INFO  07:57:35,398 - #29 (
INFO  07:57:35,401 - #12 false
INFO  07:57:35,401 - #30 )
INFO  07:57:35,402 - #20 {
INFO  07:57:35,403 - #3 print
INFO  07:57:35,403 - #29 (
INFO  07:57:35,403 - #9 65
INFO  07:57:35,403 - #30 )
INFO  07:57:35,404 - #27 ;
INFO  07:57:35,404 - #21 }
INFO  07:57:35,404 - #3 print
INFO  07:57:35,404 - #29 (
INFO  07:57:35,404 - #9 77
INFO  07:57:35,405 - #30 )
INFO  07:57:35,405 - #27 ;
INFO  07:57:35,405 - #21 }
INFO  07:57:35,405 - #21 }
INFO  07:57:35,406 - =====================SINTAKSNO_STABLO=========================
INFO  07:57:35,407 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:57:35,408 - ==============================================================
INFO  07:57:35,420 - Pocetak obrade programa Program na liniji 1
INFO  07:57:35,421 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:57:35,421 - Deklarisana konstanta c na liniji 2
INFO  07:57:35,421 - Deklarisana konstanta d na liniji 2
INFO  07:57:35,422 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:57:35,422 - Deklarisana promenljiva e na liniji 3
INFO  07:57:35,422 - Pocetak obrade metode main na liniji 5
INFO  07:57:35,423 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:57:35,423 - Zavrsetak obrade programa Program na liniji 1
INFO  07:57:35,423 - ======================TABELA_SIMBOLA==========================
INFO  07:57:35,424 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:57:35,424 - ==============================================================
INFO  07:57:35,424 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:57:35,424 - ==============================================================
INFO  07:57:35,424 - ======================GENERISANJE_KODA========================
INFO  07:57:35,429 - Generisanje koda uspesno zavrseno!
INFO  07:57:35,429 - Generisanje izlaznog fajla test\program.obj
INFO  07:57:35,429 - ==============================================================
INFO  07:57:38,175 - Obrada ulaznog fajla test\program.mj
INFO  07:57:38,270 - #2 program
INFO  07:57:38,270 - #8 Program
INFO  07:57:38,270 - #5 const
INFO  07:57:38,271 - #8 int
INFO  07:57:38,272 - #8 c
INFO  07:57:38,273 - #24 =
INFO  07:57:38,274 - #9 13
INFO  07:57:38,274 - #28 ,
INFO  07:57:38,275 - #8 d
INFO  07:57:38,276 - #24 =
INFO  07:57:38,276 - #9 99
INFO  07:57:38,276 - #27 ;
INFO  07:57:38,276 - #8 int
INFO  07:57:38,278 - #8 e
INFO  07:57:38,278 - #27 ;
INFO  07:57:38,278 - #20 {
INFO  07:57:38,280 - #6 void
INFO  07:57:38,280 - #8 main
INFO  07:57:38,280 - #29 (
INFO  07:57:38,282 - #30 )
INFO  07:57:38,282 - #20 {
INFO  07:57:38,282 - #31 if
INFO  07:57:38,282 - #29 (
INFO  07:57:38,282 - #12 false
INFO  07:57:38,282 - #30 )
INFO  07:57:38,284 - #20 {
INFO  07:57:38,284 - #3 print
INFO  07:57:38,284 - #29 (
INFO  07:57:38,284 - #9 65
INFO  07:57:38,284 - #30 )
INFO  07:57:38,284 - #27 ;
INFO  07:57:38,284 - #21 }
INFO  07:57:38,285 - #3 print
INFO  07:57:38,285 - #29 (
INFO  07:57:38,285 - #9 77
INFO  07:57:38,285 - #30 )
INFO  07:57:38,286 - #27 ;
INFO  07:57:38,286 - #21 }
INFO  07:57:38,286 - #21 }
INFO  07:57:38,287 - =====================SINTAKSNO_STABLO=========================
INFO  07:57:38,288 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:57:38,289 - ==============================================================
INFO  07:57:38,305 - Pocetak obrade programa Program na liniji 1
INFO  07:57:38,305 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:57:38,306 - Deklarisana konstanta c na liniji 2
INFO  07:57:38,306 - Deklarisana konstanta d na liniji 2
INFO  07:57:38,306 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:57:38,307 - Deklarisana promenljiva e na liniji 3
INFO  07:57:38,308 - Pocetak obrade metode main na liniji 5
INFO  07:57:38,308 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:57:38,308 - Zavrsetak obrade programa Program na liniji 1
INFO  07:57:38,308 - ======================TABELA_SIMBOLA==========================
INFO  07:57:38,309 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:57:38,309 - ==============================================================
INFO  07:57:38,309 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:57:38,309 - ==============================================================
INFO  07:57:38,309 - ======================GENERISANJE_KODA========================
INFO  07:59:42,043 - Obrada ulaznog fajla test\program.mj
INFO  07:59:42,124 - #2 program
INFO  07:59:42,124 - #8 Program
INFO  07:59:42,124 - #5 const
INFO  07:59:42,126 - #8 int
INFO  07:59:42,126 - #8 c
INFO  07:59:42,127 - #24 =
INFO  07:59:42,127 - #9 13
INFO  07:59:42,127 - #28 ,
INFO  07:59:42,128 - #8 d
INFO  07:59:42,129 - #24 =
INFO  07:59:42,129 - #9 99
INFO  07:59:42,129 - #27 ;
INFO  07:59:42,129 - #8 int
INFO  07:59:42,130 - #8 e
INFO  07:59:42,131 - #27 ;
INFO  07:59:42,131 - #20 {
INFO  07:59:42,132 - #6 void
INFO  07:59:42,132 - #8 main
INFO  07:59:42,133 - #29 (
INFO  07:59:42,133 - #30 )
INFO  07:59:42,134 - #20 {
INFO  07:59:42,134 - #31 if
INFO  07:59:42,134 - #29 (
INFO  07:59:42,134 - #12 false
INFO  07:59:42,134 - #30 )
INFO  07:59:42,135 - #20 {
INFO  07:59:42,136 - #3 print
INFO  07:59:42,136 - #29 (
INFO  07:59:42,136 - #9 65
INFO  07:59:42,136 - #30 )
INFO  07:59:42,136 - #27 ;
INFO  07:59:42,136 - #21 }
INFO  07:59:42,137 - #3 print
INFO  07:59:42,137 - #29 (
INFO  07:59:42,137 - #9 77
INFO  07:59:42,137 - #30 )
INFO  07:59:42,138 - #27 ;
INFO  07:59:42,138 - #21 }
INFO  07:59:42,138 - #21 }
INFO  07:59:42,139 - =====================SINTAKSNO_STABLO=========================
INFO  07:59:42,140 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  07:59:42,140 - ==============================================================
INFO  07:59:42,157 - Pocetak obrade programa Program na liniji 1
INFO  07:59:42,157 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  07:59:42,158 - Deklarisana konstanta c na liniji 2
INFO  07:59:42,158 - Deklarisana konstanta d na liniji 2
INFO  07:59:42,158 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  07:59:42,158 - Deklarisana promenljiva e na liniji 3
INFO  07:59:42,159 - Pocetak obrade metode main na liniji 5
INFO  07:59:42,160 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  07:59:42,160 - Zavrsetak obrade programa Program na liniji 1
INFO  07:59:42,160 - ======================TABELA_SIMBOLA==========================
INFO  07:59:42,161 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  07:59:42,161 - ==============================================================
INFO  07:59:42,161 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  07:59:42,161 - ==============================================================
INFO  07:59:42,161 - ======================GENERISANJE_KODA========================
INFO  07:59:42,167 - Generisanje koda uspesno zavrseno!
INFO  07:59:42,167 - Generisanje izlaznog fajla test\program.obj
INFO  07:59:42,168 - ==============================================================
INFO  08:00:58,829 - Obrada ulaznog fajla test\program.mj
INFO  08:00:58,915 - #2 program
INFO  08:00:58,916 - #8 Program
INFO  08:00:58,916 - #5 const
INFO  08:00:58,917 - #8 int
INFO  08:00:58,917 - #8 c
INFO  08:00:58,918 - #24 =
INFO  08:00:58,918 - #9 13
INFO  08:00:58,918 - #28 ,
INFO  08:00:58,920 - #8 d
INFO  08:00:58,920 - #24 =
INFO  08:00:58,920 - #9 99
INFO  08:00:58,920 - #27 ;
INFO  08:00:58,921 - #8 int
INFO  08:00:58,922 - #8 e
INFO  08:00:58,922 - #27 ;
INFO  08:00:58,923 - #20 {
INFO  08:00:58,924 - #6 void
INFO  08:00:58,924 - #8 main
INFO  08:00:58,924 - #29 (
INFO  08:00:58,925 - #30 )
INFO  08:00:58,925 - #20 {
INFO  08:00:58,925 - #31 if
INFO  08:00:58,926 - #29 (
INFO  08:00:58,926 - #12 false
INFO  08:00:58,926 - #30 )
INFO  08:00:58,927 - #20 {
INFO  08:00:58,927 - #3 print
INFO  08:00:58,927 - #29 (
INFO  08:00:58,927 - #9 65
INFO  08:00:58,928 - #30 )
INFO  08:00:58,928 - #27 ;
INFO  08:00:58,928 - #21 }
INFO  08:00:58,928 - #3 print
INFO  08:00:58,929 - #29 (
INFO  08:00:58,929 - #9 77
INFO  08:00:58,929 - #30 )
INFO  08:00:58,929 - #27 ;
INFO  08:00:58,929 - #21 }
INFO  08:00:58,929 - #21 }
INFO  08:00:58,930 - =====================SINTAKSNO_STABLO=========================
INFO  08:00:58,932 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:00:58,932 - ==============================================================
INFO  08:00:58,949 - Pocetak obrade programa Program na liniji 1
INFO  08:00:58,949 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:00:58,951 - Deklarisana konstanta c na liniji 2
INFO  08:00:58,951 - Deklarisana konstanta d na liniji 2
INFO  08:00:58,951 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:00:58,952 - Deklarisana promenljiva e na liniji 3
INFO  08:00:58,953 - Pocetak obrade metode main na liniji 5
INFO  08:00:58,953 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:00:58,953 - Zavrsetak obrade programa Program na liniji 1
INFO  08:00:58,953 - ======================TABELA_SIMBOLA==========================
INFO  08:00:58,954 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:00:58,954 - ==============================================================
INFO  08:00:58,955 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:00:58,955 - ==============================================================
INFO  08:00:58,955 - ======================GENERISANJE_KODA========================
INFO  08:00:58,961 - Generisanje koda uspesno zavrseno!
INFO  08:00:58,961 - Generisanje izlaznog fajla test\program.obj
INFO  08:00:58,961 - ==============================================================
INFO  08:05:32,079 - Obrada ulaznog fajla test\program.mj
INFO  08:05:32,191 - #2 program
INFO  08:05:32,192 - #8 Program
INFO  08:05:32,192 - #5 const
INFO  08:05:32,193 - #8 int
INFO  08:05:32,193 - #8 c
INFO  08:05:32,194 - #24 =
INFO  08:05:32,195 - #9 13
INFO  08:05:32,195 - #28 ,
INFO  08:05:32,197 - #8 d
INFO  08:05:32,198 - #24 =
INFO  08:05:32,198 - #9 99
INFO  08:05:32,198 - #27 ;
INFO  08:05:32,198 - #8 int
INFO  08:05:32,200 - #8 e
INFO  08:05:32,200 - #27 ;
INFO  08:05:32,201 - #20 {
INFO  08:05:32,203 - #6 void
INFO  08:05:32,203 - #8 main
INFO  08:05:32,203 - #29 (
INFO  08:05:32,205 - #30 )
INFO  08:05:32,205 - #20 {
INFO  08:05:32,205 - #31 if
INFO  08:05:32,205 - #29 (
INFO  08:05:32,205 - #12 false
INFO  08:05:32,206 - #30 )
INFO  08:05:32,209 - #20 {
INFO  08:05:32,209 - #3 print
INFO  08:05:32,209 - #29 (
INFO  08:05:32,209 - #9 65
INFO  08:05:32,209 - #30 )
INFO  08:05:32,209 - #27 ;
INFO  08:05:32,209 - #21 }
INFO  08:05:32,210 - #3 print
INFO  08:05:32,210 - #29 (
INFO  08:05:32,210 - #9 77
INFO  08:05:32,210 - #30 )
INFO  08:05:32,210 - #27 ;
INFO  08:05:32,211 - #21 }
INFO  08:05:32,211 - #21 }
INFO  08:05:32,212 - =====================SINTAKSNO_STABLO=========================
INFO  08:05:32,214 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:05:32,215 - ==============================================================
INFO  08:05:32,234 - Pocetak obrade programa Program na liniji 1
INFO  08:05:32,234 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:05:32,235 - Deklarisana konstanta c na liniji 2
INFO  08:05:32,235 - Deklarisana konstanta d na liniji 2
INFO  08:05:32,235 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:05:32,236 - Deklarisana promenljiva e na liniji 3
INFO  08:05:32,237 - Pocetak obrade metode main na liniji 5
INFO  08:05:32,237 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:05:32,237 - Zavrsetak obrade programa Program na liniji 1
INFO  08:05:32,237 - ======================TABELA_SIMBOLA==========================
INFO  08:05:32,238 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:05:32,238 - ==============================================================
INFO  08:05:32,238 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:05:32,238 - ==============================================================
INFO  08:05:32,239 - ======================GENERISANJE_KODA========================
INFO  08:05:32,245 - Generisanje koda uspesno zavrseno!
INFO  08:05:32,245 - Generisanje izlaznog fajla test\program.obj
INFO  08:05:32,246 - ==============================================================
INFO  08:12:53,152 - Obrada ulaznog fajla test\program.mj
INFO  08:12:53,244 - #2 program
INFO  08:12:53,244 - #8 Program
INFO  08:12:53,244 - #5 const
INFO  08:12:53,245 - #8 int
INFO  08:12:53,245 - #8 c
INFO  08:12:53,247 - #24 =
INFO  08:12:53,247 - #9 13
INFO  08:12:53,247 - #28 ,
INFO  08:12:53,249 - #8 d
INFO  08:12:53,249 - #24 =
INFO  08:12:53,249 - #9 99
INFO  08:12:53,249 - #27 ;
INFO  08:12:53,249 - #8 int
INFO  08:12:53,251 - #8 e
INFO  08:12:53,251 - #27 ;
INFO  08:12:53,251 - #20 {
INFO  08:12:53,253 - #6 void
INFO  08:12:53,253 - #8 main
INFO  08:12:53,253 - #29 (
INFO  08:12:53,254 - #30 )
INFO  08:12:53,254 - #20 {
INFO  08:12:53,254 - #31 if
INFO  08:12:53,254 - #29 (
INFO  08:12:53,254 - #12 false
INFO  08:12:53,254 - #30 )
INFO  08:12:53,256 - #20 {
INFO  08:12:53,256 - #3 print
INFO  08:12:53,256 - #29 (
INFO  08:12:53,256 - #9 65
INFO  08:12:53,256 - #30 )
INFO  08:12:53,256 - #27 ;
INFO  08:12:53,257 - #21 }
INFO  08:12:53,257 - #3 print
INFO  08:12:53,257 - #29 (
INFO  08:12:53,257 - #9 77
INFO  08:12:53,257 - #30 )
INFO  08:12:53,258 - #27 ;
INFO  08:12:53,258 - #21 }
INFO  08:12:53,258 - #21 }
INFO  08:12:53,260 - =====================SINTAKSNO_STABLO=========================
INFO  08:12:53,261 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:12:53,262 - ==============================================================
INFO  08:12:53,274 - Pocetak obrade programa Program na liniji 1
INFO  08:12:53,274 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:12:53,275 - Deklarisana konstanta c na liniji 2
INFO  08:12:53,275 - Deklarisana konstanta d na liniji 2
INFO  08:12:53,275 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:12:53,276 - Deklarisana promenljiva e na liniji 3
INFO  08:12:53,277 - Pocetak obrade metode main na liniji 5
INFO  08:12:53,277 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:12:53,277 - Zavrsetak obrade programa Program na liniji 1
INFO  08:12:53,277 - ======================TABELA_SIMBOLA==========================
INFO  08:12:53,278 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:12:53,278 - ==============================================================
INFO  08:12:53,278 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:12:53,278 - ==============================================================
INFO  08:12:53,279 - ======================GENERISANJE_KODA========================
INFO  08:12:53,283 - Generisanje koda uspesno zavrseno!
INFO  08:12:53,284 - Generisanje izlaznog fajla test\program.obj
INFO  08:12:53,284 - ==============================================================
INFO  08:13:32,511 - Obrada ulaznog fajla test\program.mj
INFO  08:13:32,593 - #2 program
INFO  08:13:32,593 - #8 Program
INFO  08:13:32,593 - #5 const
INFO  08:13:32,594 - #8 int
INFO  08:13:32,594 - #8 c
INFO  08:13:32,595 - #24 =
INFO  08:13:32,595 - #9 13
INFO  08:13:32,595 - #28 ,
INFO  08:13:32,596 - #8 d
INFO  08:13:32,596 - #24 =
INFO  08:13:32,596 - #9 99
INFO  08:13:32,597 - #27 ;
INFO  08:13:32,597 - #8 int
INFO  08:13:32,598 - #8 e
INFO  08:13:32,598 - #27 ;
INFO  08:13:32,598 - #20 {
INFO  08:13:32,599 - #6 void
INFO  08:13:32,599 - #8 main
INFO  08:13:32,600 - #29 (
INFO  08:13:32,600 - #30 )
INFO  08:13:32,600 - #20 {
INFO  08:13:32,600 - #31 if
INFO  08:13:32,600 - #29 (
INFO  08:13:32,601 - #12 false
INFO  08:13:32,601 - #30 )
INFO  08:13:32,601 - #20 {
INFO  08:13:32,602 - #3 print
INFO  08:13:32,602 - #29 (
INFO  08:13:32,602 - #9 65
INFO  08:13:32,602 - #30 )
INFO  08:13:32,602 - #27 ;
INFO  08:13:32,602 - #21 }
INFO  08:13:32,602 - #3 print
INFO  08:13:32,603 - #29 (
INFO  08:13:32,603 - #9 77
INFO  08:13:32,603 - #30 )
INFO  08:13:32,603 - #27 ;
INFO  08:13:32,603 - #21 }
INFO  08:13:32,603 - #21 }
INFO  08:13:32,604 - =====================SINTAKSNO_STABLO=========================
INFO  08:13:32,605 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:13:32,606 - ==============================================================
INFO  08:13:32,616 - Pocetak obrade programa Program na liniji 1
INFO  08:13:32,616 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:13:32,617 - Deklarisana konstanta c na liniji 2
INFO  08:13:32,618 - Deklarisana konstanta d na liniji 2
INFO  08:13:32,618 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:13:32,618 - Deklarisana promenljiva e na liniji 3
INFO  08:13:32,619 - Pocetak obrade metode main na liniji 5
INFO  08:13:32,621 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:13:32,621 - Zavrsetak obrade programa Program na liniji 1
INFO  08:13:32,621 - ======================TABELA_SIMBOLA==========================
INFO  08:13:32,621 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:13:32,622 - ==============================================================
INFO  08:13:32,622 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:13:32,622 - ==============================================================
INFO  08:13:32,622 - ======================GENERISANJE_KODA========================
INFO  08:13:32,627 - Generisanje koda uspesno zavrseno!
INFO  08:13:32,628 - Generisanje izlaznog fajla test\program.obj
INFO  08:13:32,628 - ==============================================================
INFO  08:14:44,577 - Obrada ulaznog fajla test\program.mj
INFO  08:14:44,668 - #2 program
INFO  08:14:44,668 - #8 Program
INFO  08:14:44,668 - #5 const
INFO  08:14:44,669 - #8 int
INFO  08:14:44,670 - #8 c
INFO  08:14:44,671 - #24 =
INFO  08:14:44,671 - #9 13
INFO  08:14:44,671 - #28 ,
INFO  08:14:44,672 - #8 d
INFO  08:14:44,672 - #24 =
INFO  08:14:44,672 - #9 99
INFO  08:14:44,673 - #27 ;
INFO  08:14:44,674 - #8 int
INFO  08:14:44,675 - #8 e
INFO  08:14:44,675 - #27 ;
INFO  08:14:44,676 - #20 {
INFO  08:14:44,678 - #6 void
INFO  08:14:44,678 - #8 main
INFO  08:14:44,678 - #29 (
INFO  08:14:44,679 - #30 )
INFO  08:14:44,679 - #20 {
INFO  08:14:44,679 - #31 if
INFO  08:14:44,679 - #29 (
INFO  08:14:44,679 - #12 false
INFO  08:14:44,679 - #30 )
INFO  08:14:44,681 - #20 {
INFO  08:14:44,681 - #3 print
INFO  08:14:44,682 - #29 (
INFO  08:14:44,682 - #9 65
INFO  08:14:44,682 - #30 )
INFO  08:14:44,682 - #27 ;
INFO  08:14:44,682 - #21 }
INFO  08:14:44,683 - #3 print
INFO  08:14:44,684 - #29 (
INFO  08:14:44,684 - #9 77
INFO  08:14:44,684 - #30 )
INFO  08:14:44,684 - #27 ;
INFO  08:14:44,685 - #21 }
INFO  08:14:44,685 - #21 }
INFO  08:14:44,686 - =====================SINTAKSNO_STABLO=========================
INFO  08:14:44,688 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:14:44,688 - ==============================================================
INFO  08:14:44,707 - Pocetak obrade programa Program na liniji 1
INFO  08:14:44,707 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:14:44,708 - Deklarisana konstanta c na liniji 2
INFO  08:14:44,708 - Deklarisana konstanta d na liniji 2
INFO  08:14:44,709 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:14:44,709 - Deklarisana promenljiva e na liniji 3
INFO  08:14:44,709 - Pocetak obrade metode main na liniji 5
INFO  08:14:44,710 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:14:44,710 - Zavrsetak obrade programa Program na liniji 1
INFO  08:14:44,710 - ======================TABELA_SIMBOLA==========================
INFO  08:14:44,711 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:14:44,711 - ==============================================================
INFO  08:14:44,711 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:14:44,711 - ==============================================================
INFO  08:14:44,712 - ======================GENERISANJE_KODA========================
INFO  08:14:44,716 - Generisanje koda uspesno zavrseno!
INFO  08:14:44,717 - Generisanje izlaznog fajla test\program.obj
INFO  08:14:44,717 - ==============================================================
INFO  08:23:44,913 - Obrada ulaznog fajla test\program.mj
INFO  08:23:44,986 - #2 program
INFO  08:23:44,986 - #8 Program
INFO  08:23:44,987 - #5 const
INFO  08:23:44,988 - #8 int
INFO  08:23:44,988 - #8 c
INFO  08:23:44,989 - #24 =
INFO  08:23:44,990 - #9 13
INFO  08:23:44,990 - #28 ,
INFO  08:23:44,991 - #8 d
INFO  08:23:44,991 - #24 =
INFO  08:23:44,992 - #9 99
INFO  08:23:44,992 - #27 ;
INFO  08:23:44,992 - #8 int
INFO  08:23:44,993 - #8 e
INFO  08:23:44,994 - #27 ;
INFO  08:23:44,994 - #20 {
INFO  08:23:44,995 - #6 void
INFO  08:23:44,995 - #8 main
INFO  08:23:44,995 - #29 (
INFO  08:23:44,996 - #30 )
INFO  08:23:44,996 - #20 {
INFO  08:23:44,996 - #31 if
INFO  08:23:44,997 - #29 (
INFO  08:23:44,997 - #12 false
INFO  08:23:44,997 - #30 )
INFO  08:23:44,998 - #20 {
INFO  08:23:44,998 - #3 print
INFO  08:23:44,998 - #29 (
INFO  08:23:44,998 - #9 65
INFO  08:23:44,998 - #30 )
INFO  08:23:44,998 - #27 ;
INFO  08:23:44,998 - #21 }
INFO  08:23:44,999 - #3 print
INFO  08:23:44,999 - #29 (
INFO  08:23:44,999 - #9 77
INFO  08:23:44,999 - #30 )
INFO  08:23:44,999 - #27 ;
INFO  08:23:44,999 - #21 }
INFO  08:23:45,000 - #21 }
INFO  08:23:45,001 - =====================SINTAKSNO_STABLO=========================
INFO  08:23:45,002 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:23:45,003 - ==============================================================
INFO  08:23:45,018 - Pocetak obrade programa Program na liniji 1
INFO  08:23:45,019 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:23:45,021 - Deklarisana konstanta c na liniji 2
INFO  08:23:45,021 - Deklarisana konstanta d na liniji 2
INFO  08:23:45,021 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:23:45,021 - Deklarisana promenljiva e na liniji 3
INFO  08:23:45,022 - Pocetak obrade metode main na liniji 5
INFO  08:23:45,022 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:23:45,022 - Zavrsetak obrade programa Program na liniji 1
INFO  08:23:45,022 - ======================TABELA_SIMBOLA==========================
INFO  08:23:45,023 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:23:45,023 - ==============================================================
INFO  08:23:45,023 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:23:45,023 - ==============================================================
INFO  08:23:45,023 - ======================GENERISANJE_KODA========================
INFO  08:23:45,028 - Generisanje koda uspesno zavrseno!
INFO  08:23:45,029 - Generisanje izlaznog fajla test\program.obj
INFO  08:23:45,029 - ==============================================================
INFO  08:24:45,820 - Obrada ulaznog fajla test\program.mj
INFO  08:24:45,903 - #2 program
INFO  08:24:45,903 - #8 Program
INFO  08:24:45,903 - #5 const
INFO  08:24:45,904 - #8 int
INFO  08:24:45,904 - #8 c
INFO  08:24:45,905 - #24 =
INFO  08:24:45,905 - #9 13
INFO  08:24:45,905 - #28 ,
INFO  08:24:45,906 - #8 d
INFO  08:24:45,906 - #24 =
INFO  08:24:45,906 - #9 99
INFO  08:24:45,906 - #27 ;
INFO  08:24:45,907 - #8 int
INFO  08:24:45,908 - #8 e
INFO  08:24:45,908 - #27 ;
INFO  08:24:45,909 - #20 {
INFO  08:24:45,910 - #6 void
INFO  08:24:45,910 - #8 main
INFO  08:24:45,910 - #29 (
INFO  08:24:45,911 - #30 )
INFO  08:24:45,911 - #20 {
INFO  08:24:45,911 - #31 if
INFO  08:24:45,911 - #29 (
INFO  08:24:45,911 - #12 false
INFO  08:24:45,911 - #30 )
INFO  08:24:45,912 - #20 {
INFO  08:24:45,912 - #3 print
INFO  08:24:45,912 - #29 (
INFO  08:24:45,913 - #9 65
INFO  08:24:45,913 - #30 )
INFO  08:24:45,913 - #27 ;
INFO  08:24:45,913 - #21 }
INFO  08:24:45,914 - #3 print
INFO  08:24:45,914 - #29 (
INFO  08:24:45,914 - #9 77
INFO  08:24:45,914 - #30 )
INFO  08:24:45,914 - #27 ;
INFO  08:24:45,914 - #21 }
INFO  08:24:45,914 - #21 }
INFO  08:24:45,915 - =====================SINTAKSNO_STABLO=========================
INFO  08:24:45,917 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:24:45,917 - ==============================================================
INFO  08:24:45,932 - Pocetak obrade programa Program na liniji 1
INFO  08:24:45,932 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:24:45,933 - Deklarisana konstanta c na liniji 2
INFO  08:24:45,933 - Deklarisana konstanta d na liniji 2
INFO  08:24:45,933 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:24:45,934 - Deklarisana promenljiva e na liniji 3
INFO  08:24:45,935 - Pocetak obrade metode main na liniji 5
INFO  08:24:45,935 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:24:45,935 - Zavrsetak obrade programa Program na liniji 1
INFO  08:24:45,935 - ======================TABELA_SIMBOLA==========================
INFO  08:24:45,936 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:24:45,936 - ==============================================================
INFO  08:24:45,936 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:24:45,936 - ==============================================================
INFO  08:24:45,936 - ======================GENERISANJE_KODA========================
INFO  08:24:45,943 - Generisanje koda uspesno zavrseno!
INFO  08:24:45,943 - Generisanje izlaznog fajla test\program.obj
INFO  08:24:45,944 - ==============================================================
INFO  08:25:12,481 - Obrada ulaznog fajla test\program.mj
INFO  08:25:12,565 - #2 program
INFO  08:25:12,565 - #8 Program
INFO  08:25:12,565 - #5 const
INFO  08:25:12,566 - #8 int
INFO  08:25:12,566 - #8 c
INFO  08:25:12,568 - #24 =
INFO  08:25:12,568 - #9 13
INFO  08:25:12,568 - #28 ,
INFO  08:25:12,569 - #8 d
INFO  08:25:12,569 - #24 =
INFO  08:25:12,569 - #9 99
INFO  08:25:12,569 - #27 ;
INFO  08:25:12,570 - #8 int
INFO  08:25:12,571 - #8 e
INFO  08:25:12,571 - #27 ;
INFO  08:25:12,571 - #20 {
INFO  08:25:12,572 - #6 void
INFO  08:25:12,573 - #8 main
INFO  08:25:12,573 - #29 (
INFO  08:25:12,574 - #30 )
INFO  08:25:12,574 - #20 {
INFO  08:25:12,574 - #31 if
INFO  08:25:12,574 - #29 (
INFO  08:25:12,574 - #12 false
INFO  08:25:12,574 - #30 )
INFO  08:25:12,575 - #20 {
INFO  08:25:12,575 - #3 print
INFO  08:25:12,575 - #29 (
INFO  08:25:12,576 - #9 65
INFO  08:25:12,576 - #30 )
INFO  08:25:12,576 - #27 ;
INFO  08:25:12,576 - #21 }
INFO  08:25:12,576 - #3 print
INFO  08:25:12,576 - #29 (
INFO  08:25:12,577 - #9 77
INFO  08:25:12,577 - #30 )
INFO  08:25:12,577 - #27 ;
INFO  08:25:12,577 - #21 }
INFO  08:25:12,577 - #21 }
INFO  08:25:12,578 - =====================SINTAKSNO_STABLO=========================
INFO  08:25:12,579 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:25:12,579 - ==============================================================
INFO  08:25:12,596 - Pocetak obrade programa Program na liniji 1
INFO  08:25:12,596 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:25:12,598 - Deklarisana konstanta c na liniji 2
INFO  08:25:12,598 - Deklarisana konstanta d na liniji 2
INFO  08:25:12,598 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:25:12,598 - Deklarisana promenljiva e na liniji 3
INFO  08:25:12,599 - Pocetak obrade metode main na liniji 5
INFO  08:25:12,599 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:25:12,600 - Zavrsetak obrade programa Program na liniji 1
INFO  08:25:12,600 - ======================TABELA_SIMBOLA==========================
INFO  08:25:12,600 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:25:12,601 - ==============================================================
INFO  08:25:12,601 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:25:12,602 - ==============================================================
INFO  08:25:12,602 - ======================GENERISANJE_KODA========================
INFO  08:25:12,606 - 4
INFO  08:25:12,608 - Generisanje koda uspesno zavrseno!
INFO  08:25:12,608 - Generisanje izlaznog fajla test\program.obj
INFO  08:25:12,608 - ==============================================================
INFO  08:25:20,212 - Obrada ulaznog fajla test\program.mj
INFO  08:25:20,307 - #2 program
INFO  08:25:20,307 - #8 Program
INFO  08:25:20,307 - #5 const
INFO  08:25:20,308 - #8 int
INFO  08:25:20,308 - #8 c
INFO  08:25:20,309 - #24 =
INFO  08:25:20,309 - #9 13
INFO  08:25:20,309 - #28 ,
INFO  08:25:20,310 - #8 d
INFO  08:25:20,310 - #24 =
INFO  08:25:20,310 - #9 99
INFO  08:25:20,311 - #27 ;
INFO  08:25:20,311 - #8 int
INFO  08:25:20,312 - #8 e
INFO  08:25:20,312 - #27 ;
INFO  08:25:20,313 - #20 {
INFO  08:25:20,314 - #6 void
INFO  08:25:20,314 - #8 main
INFO  08:25:20,314 - #29 (
INFO  08:25:20,315 - #30 )
INFO  08:25:20,315 - #20 {
INFO  08:25:20,315 - #31 if
INFO  08:25:20,316 - #29 (
INFO  08:25:20,316 - #12 false
INFO  08:25:20,316 - #30 )
INFO  08:25:20,318 - #20 {
INFO  08:25:20,318 - #3 print
INFO  08:25:20,318 - #29 (
INFO  08:25:20,318 - #9 65
INFO  08:25:20,318 - #30 )
INFO  08:25:20,318 - #27 ;
INFO  08:25:20,318 - #21 }
INFO  08:25:20,319 - #3 print
INFO  08:25:20,320 - #29 (
INFO  08:25:20,320 - #9 77
INFO  08:25:20,320 - #30 )
INFO  08:25:20,320 - #27 ;
INFO  08:25:20,320 - #21 }
INFO  08:25:20,321 - #21 }
INFO  08:25:20,322 - =====================SINTAKSNO_STABLO=========================
INFO  08:25:20,323 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:25:20,325 - ==============================================================
INFO  08:25:20,343 - Pocetak obrade programa Program na liniji 1
INFO  08:25:20,343 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:25:20,344 - Deklarisana konstanta c na liniji 2
INFO  08:25:20,344 - Deklarisana konstanta d na liniji 2
INFO  08:25:20,345 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:25:20,345 - Deklarisana promenljiva e na liniji 3
INFO  08:25:20,346 - Pocetak obrade metode main na liniji 5
INFO  08:25:20,346 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:25:20,347 - Zavrsetak obrade programa Program na liniji 1
INFO  08:25:20,347 - ======================TABELA_SIMBOLA==========================
INFO  08:25:20,348 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:25:20,348 - ==============================================================
INFO  08:25:20,349 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:25:20,349 - ==============================================================
INFO  08:25:20,349 - ======================GENERISANJE_KODA========================
INFO  08:25:20,354 - 4
INFO  08:25:20,357 - Generisanje koda uspesno zavrseno!
INFO  08:25:20,357 - Generisanje izlaznog fajla test\program.obj
INFO  08:25:20,357 - ==============================================================
INFO  08:27:01,738 - Obrada ulaznog fajla test\program.mj
INFO  08:27:01,833 - #2 program
INFO  08:27:01,833 - #8 Program
INFO  08:27:01,833 - #5 const
INFO  08:27:01,834 - #8 int
INFO  08:27:01,834 - #8 c
INFO  08:27:01,835 - #24 =
INFO  08:27:01,835 - #9 13
INFO  08:27:01,835 - #28 ,
INFO  08:27:01,837 - #8 d
INFO  08:27:01,837 - #24 =
INFO  08:27:01,837 - #9 99
INFO  08:27:01,837 - #27 ;
INFO  08:27:01,837 - #8 int
INFO  08:27:01,839 - #8 e
INFO  08:27:01,839 - #27 ;
INFO  08:27:01,840 - #20 {
INFO  08:27:01,841 - #6 void
INFO  08:27:01,841 - #8 main
INFO  08:27:01,841 - #29 (
INFO  08:27:01,842 - #30 )
INFO  08:27:01,842 - #20 {
INFO  08:27:01,842 - #31 if
INFO  08:27:01,843 - #29 (
INFO  08:27:01,843 - #12 false
INFO  08:27:01,844 - #30 )
INFO  08:27:01,845 - #20 {
INFO  08:27:01,846 - #3 print
INFO  08:27:01,846 - #29 (
INFO  08:27:01,846 - #9 65
INFO  08:27:01,846 - #30 )
INFO  08:27:01,846 - #27 ;
INFO  08:27:01,846 - #21 }
INFO  08:27:01,847 - #3 print
INFO  08:27:01,848 - #29 (
INFO  08:27:01,848 - #9 77
INFO  08:27:01,849 - #30 )
INFO  08:27:01,849 - #27 ;
INFO  08:27:01,849 - #21 }
INFO  08:27:01,849 - #21 }
INFO  08:27:01,850 - =====================SINTAKSNO_STABLO=========================
INFO  08:27:01,852 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:27:01,853 - ==============================================================
INFO  08:27:01,867 - Pocetak obrade programa Program na liniji 1
INFO  08:27:01,868 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:27:01,869 - Deklarisana konstanta c na liniji 2
INFO  08:27:01,869 - Deklarisana konstanta d na liniji 2
INFO  08:27:01,869 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:27:01,869 - Deklarisana promenljiva e na liniji 3
INFO  08:27:01,870 - Pocetak obrade metode main na liniji 5
INFO  08:27:01,870 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:27:01,870 - Zavrsetak obrade programa Program na liniji 1
INFO  08:27:01,870 - ======================TABELA_SIMBOLA==========================
INFO  08:27:01,871 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:27:01,871 - ==============================================================
INFO  08:27:01,871 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:27:01,871 - ==============================================================
INFO  08:27:01,871 - ======================GENERISANJE_KODA========================
INFO  08:37:17,313 - Obrada ulaznog fajla test\program.mj
INFO  08:37:17,411 - #2 program
INFO  08:37:17,412 - #8 Program
INFO  08:37:17,412 - #5 const
INFO  08:37:17,414 - #8 int
INFO  08:37:17,414 - #8 c
INFO  08:37:17,415 - #24 =
INFO  08:37:17,415 - #9 13
INFO  08:37:17,415 - #28 ,
INFO  08:37:17,417 - #8 d
INFO  08:37:17,417 - #24 =
INFO  08:37:17,417 - #9 99
INFO  08:37:17,417 - #27 ;
INFO  08:37:17,417 - #8 int
INFO  08:37:17,419 - #8 e
INFO  08:37:17,419 - #27 ;
INFO  08:37:17,419 - #20 {
INFO  08:37:17,421 - #6 void
INFO  08:37:17,421 - #8 main
INFO  08:37:17,421 - #29 (
INFO  08:37:17,422 - #30 )
INFO  08:37:17,422 - #20 {
INFO  08:37:17,422 - #31 if
INFO  08:37:17,423 - #29 (
INFO  08:37:17,423 - #12 false
INFO  08:37:17,423 - #30 )
INFO  08:37:17,424 - #20 {
INFO  08:37:17,424 - #3 print
INFO  08:37:17,424 - #29 (
INFO  08:37:17,424 - #9 65
INFO  08:37:17,424 - #30 )
INFO  08:37:17,424 - #27 ;
INFO  08:37:17,425 - #21 }
INFO  08:37:17,425 - #3 print
INFO  08:37:17,425 - #29 (
INFO  08:37:17,425 - #9 77
INFO  08:37:17,425 - #30 )
INFO  08:37:17,425 - #27 ;
INFO  08:37:17,426 - #21 }
INFO  08:37:17,426 - #21 }
INFO  08:37:17,427 - =====================SINTAKSNO_STABLO=========================
INFO  08:37:17,428 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:37:17,430 - ==============================================================
INFO  08:37:17,444 - Pocetak obrade programa Program na liniji 1
INFO  08:37:17,444 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:37:17,445 - Deklarisana konstanta c na liniji 2
INFO  08:37:17,445 - Deklarisana konstanta d na liniji 2
INFO  08:37:17,446 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:37:17,446 - Deklarisana promenljiva e na liniji 3
INFO  08:37:17,446 - Pocetak obrade metode main na liniji 5
INFO  08:37:17,447 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:37:17,447 - Zavrsetak obrade programa Program na liniji 1
INFO  08:37:17,447 - ======================TABELA_SIMBOLA==========================
INFO  08:37:17,447 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:37:17,448 - ==============================================================
INFO  08:37:17,448 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:37:17,448 - ==============================================================
INFO  08:37:17,448 - ======================GENERISANJE_KODA========================
INFO  08:37:17,451 - 9
INFO  08:37:17,453 - Generisanje koda uspesno zavrseno!
INFO  08:37:17,454 - Generisanje izlaznog fajla test\program.obj
INFO  08:37:17,454 - ==============================================================
INFO  08:37:41,257 - Obrada ulaznog fajla test\program.mj
INFO  08:37:41,345 - #2 program
INFO  08:37:41,345 - #8 Program
INFO  08:37:41,345 - #5 const
INFO  08:37:41,346 - #8 int
INFO  08:37:41,346 - #8 c
INFO  08:37:41,347 - #24 =
INFO  08:37:41,347 - #9 13
INFO  08:37:41,347 - #28 ,
INFO  08:37:41,349 - #8 d
INFO  08:37:41,349 - #24 =
INFO  08:37:41,349 - #9 99
INFO  08:37:41,349 - #27 ;
INFO  08:37:41,349 - #8 int
INFO  08:37:41,350 - #8 e
INFO  08:37:41,351 - #27 ;
INFO  08:37:41,351 - #20 {
INFO  08:37:41,352 - #6 void
INFO  08:37:41,353 - #8 main
INFO  08:37:41,353 - #29 (
INFO  08:37:41,353 - #30 )
INFO  08:37:41,353 - #20 {
INFO  08:37:41,354 - #31 if
INFO  08:37:41,354 - #29 (
INFO  08:37:41,354 - #12 false
INFO  08:37:41,354 - #30 )
INFO  08:37:41,355 - #20 {
INFO  08:37:41,355 - #3 print
INFO  08:37:41,355 - #29 (
INFO  08:37:41,355 - #9 65
INFO  08:37:41,355 - #30 )
INFO  08:37:41,355 - #27 ;
INFO  08:37:41,355 - #21 }
INFO  08:37:41,356 - #3 print
INFO  08:37:41,357 - #29 (
INFO  08:37:41,357 - #9 77
INFO  08:37:41,357 - #30 )
INFO  08:37:41,357 - #27 ;
INFO  08:37:41,357 - #21 }
INFO  08:37:41,357 - #21 }
INFO  08:37:41,358 - =====================SINTAKSNO_STABLO=========================
INFO  08:37:41,360 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:37:41,361 - ==============================================================
INFO  08:37:41,377 - Pocetak obrade programa Program na liniji 1
INFO  08:37:41,378 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:37:41,378 - Deklarisana konstanta c na liniji 2
INFO  08:37:41,379 - Deklarisana konstanta d na liniji 2
INFO  08:37:41,379 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:37:41,379 - Deklarisana promenljiva e na liniji 3
INFO  08:37:41,379 - Pocetak obrade metode main na liniji 5
INFO  08:37:41,380 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:37:41,380 - Zavrsetak obrade programa Program na liniji 1
INFO  08:37:41,380 - ======================TABELA_SIMBOLA==========================
INFO  08:37:41,381 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:37:41,381 - ==============================================================
INFO  08:37:41,381 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:37:41,381 - ==============================================================
INFO  08:37:41,381 - ======================GENERISANJE_KODA========================
INFO  08:37:41,385 - 9
INFO  08:37:41,386 - Generisanje koda uspesno zavrseno!
INFO  08:37:41,387 - Generisanje izlaznog fajla test\program.obj
INFO  08:37:41,387 - ==============================================================
INFO  08:38:24,833 - Obrada ulaznog fajla test\program.mj
INFO  08:38:24,922 - #2 program
INFO  08:38:24,922 - #8 Program
INFO  08:38:24,922 - #5 const
INFO  08:38:24,923 - #8 int
INFO  08:38:24,923 - #8 c
INFO  08:38:24,924 - #24 =
INFO  08:38:24,924 - #9 13
INFO  08:38:24,924 - #28 ,
INFO  08:38:24,925 - #8 d
INFO  08:38:24,925 - #24 =
INFO  08:38:24,925 - #9 99
INFO  08:38:24,926 - #27 ;
INFO  08:38:24,926 - #8 int
INFO  08:38:24,927 - #8 e
INFO  08:38:24,927 - #27 ;
INFO  08:38:24,927 - #20 {
INFO  08:38:24,928 - #6 void
INFO  08:38:24,929 - #8 main
INFO  08:38:24,929 - #29 (
INFO  08:38:24,929 - #30 )
INFO  08:38:24,929 - #20 {
INFO  08:38:24,929 - #31 if
INFO  08:38:24,930 - #29 (
INFO  08:38:24,930 - #12 false
INFO  08:38:24,930 - #30 )
INFO  08:38:24,931 - #20 {
INFO  08:38:24,931 - #3 print
INFO  08:38:24,931 - #29 (
INFO  08:38:24,931 - #9 65
INFO  08:38:24,931 - #30 )
INFO  08:38:24,932 - #27 ;
INFO  08:38:24,932 - #21 }
INFO  08:38:24,932 - #3 print
INFO  08:38:24,933 - #29 (
INFO  08:38:24,933 - #9 77
INFO  08:38:24,933 - #30 )
INFO  08:38:24,933 - #27 ;
INFO  08:38:24,933 - #21 }
INFO  08:38:24,934 - #21 }
INFO  08:38:24,934 - =====================SINTAKSNO_STABLO=========================
INFO  08:38:24,935 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:38:24,936 - ==============================================================
INFO  08:38:24,950 - Pocetak obrade programa Program na liniji 1
INFO  08:38:24,950 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:38:24,951 - Deklarisana konstanta c na liniji 2
INFO  08:38:24,952 - Deklarisana konstanta d na liniji 2
INFO  08:38:24,952 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:38:24,952 - Deklarisana promenljiva e na liniji 3
INFO  08:38:24,952 - Pocetak obrade metode main na liniji 5
INFO  08:38:24,953 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:38:24,953 - Zavrsetak obrade programa Program na liniji 1
INFO  08:38:24,953 - ======================TABELA_SIMBOLA==========================
INFO  08:38:24,954 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:38:24,954 - ==============================================================
INFO  08:38:24,954 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:38:24,954 - ==============================================================
INFO  08:38:24,954 - ======================GENERISANJE_KODA========================
INFO  08:38:24,958 - 9
INFO  08:38:24,960 - Generisanje koda uspesno zavrseno!
INFO  08:38:24,960 - Generisanje izlaznog fajla test\program.obj
INFO  08:38:24,960 - ==============================================================
INFO  08:39:11,955 - Obrada ulaznog fajla test\program.mj
INFO  08:39:12,037 - #2 program
INFO  08:39:12,037 - #8 Program
INFO  08:39:12,037 - #5 const
INFO  08:39:12,038 - #8 int
INFO  08:39:12,038 - #8 c
INFO  08:39:12,039 - #24 =
INFO  08:39:12,039 - #9 13
INFO  08:39:12,039 - #28 ,
INFO  08:39:12,040 - #8 d
INFO  08:39:12,040 - #24 =
INFO  08:39:12,040 - #9 99
INFO  08:39:12,041 - #27 ;
INFO  08:39:12,041 - #8 int
INFO  08:39:12,042 - #8 e
INFO  08:39:12,042 - #27 ;
INFO  08:39:12,042 - #20 {
INFO  08:39:12,046 - #6 void
INFO  08:39:12,047 - #8 main
INFO  08:39:12,047 - #29 (
INFO  08:39:12,048 - #30 )
INFO  08:39:12,048 - #20 {
INFO  08:39:12,048 - #31 if
INFO  08:39:12,048 - #29 (
INFO  08:39:12,048 - #12 false
INFO  08:39:12,048 - #30 )
INFO  08:39:12,050 - #20 {
INFO  08:39:12,050 - #3 print
INFO  08:39:12,050 - #29 (
INFO  08:39:12,050 - #9 65
INFO  08:39:12,050 - #30 )
INFO  08:39:12,050 - #27 ;
INFO  08:39:12,050 - #21 }
INFO  08:39:12,051 - #3 print
INFO  08:39:12,051 - #29 (
INFO  08:39:12,051 - #9 77
INFO  08:39:12,051 - #30 )
INFO  08:39:12,051 - #27 ;
INFO  08:39:12,051 - #21 }
INFO  08:39:12,051 - #21 }
INFO  08:39:12,052 - =====================SINTAKSNO_STABLO=========================
INFO  08:39:12,053 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:39:12,054 - ==============================================================
INFO  08:39:12,069 - Pocetak obrade programa Program na liniji 1
INFO  08:39:12,069 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:39:12,070 - Deklarisana konstanta c na liniji 2
INFO  08:39:12,070 - Deklarisana konstanta d na liniji 2
INFO  08:39:12,070 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:39:12,070 - Deklarisana promenljiva e na liniji 3
INFO  08:39:12,071 - Pocetak obrade metode main na liniji 5
INFO  08:39:12,072 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:39:12,072 - Zavrsetak obrade programa Program na liniji 1
INFO  08:39:12,072 - ======================TABELA_SIMBOLA==========================
INFO  08:39:12,072 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:39:12,073 - ==============================================================
INFO  08:39:12,073 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:39:12,073 - ==============================================================
INFO  08:39:12,073 - ======================GENERISANJE_KODA========================
INFO  08:39:12,076 - 9
INFO  08:39:12,078 - Generisanje koda uspesno zavrseno!
INFO  08:39:12,078 - Generisanje izlaznog fajla test\program.obj
INFO  08:39:12,078 - ==============================================================
INFO  08:40:33,907 - Obrada ulaznog fajla test\program.mj
INFO  08:40:33,995 - #2 program
INFO  08:40:33,995 - #8 Program
INFO  08:40:33,995 - #5 const
INFO  08:40:33,996 - #8 int
INFO  08:40:33,996 - #8 c
INFO  08:40:33,997 - #24 =
INFO  08:40:33,997 - #9 13
INFO  08:40:33,997 - #28 ,
INFO  08:40:33,998 - #8 d
INFO  08:40:33,998 - #24 =
INFO  08:40:33,998 - #9 99
INFO  08:40:33,998 - #27 ;
INFO  08:40:33,998 - #8 int
INFO  08:40:33,999 - #8 e
INFO  08:40:33,999 - #27 ;
INFO  08:40:34,000 - #20 {
INFO  08:40:34,001 - #6 void
INFO  08:40:34,001 - #8 main
INFO  08:40:34,001 - #29 (
INFO  08:40:34,002 - #30 )
INFO  08:40:34,002 - #20 {
INFO  08:40:34,002 - #31 if
INFO  08:40:34,003 - #29 (
INFO  08:40:34,003 - #12 false
INFO  08:40:34,003 - #30 )
INFO  08:40:34,004 - #20 {
INFO  08:40:34,004 - #3 print
INFO  08:40:34,004 - #29 (
INFO  08:40:34,004 - #9 65
INFO  08:40:34,004 - #30 )
INFO  08:40:34,005 - #27 ;
INFO  08:40:34,005 - #21 }
INFO  08:40:34,005 - #3 print
INFO  08:40:34,005 - #29 (
INFO  08:40:34,005 - #9 77
INFO  08:40:34,005 - #30 )
INFO  08:40:34,006 - #27 ;
INFO  08:40:34,006 - #21 }
INFO  08:40:34,006 - #21 }
INFO  08:40:34,006 - =====================SINTAKSNO_STABLO=========================
INFO  08:40:34,008 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:40:34,008 - ==============================================================
INFO  08:40:34,024 - Pocetak obrade programa Program na liniji 1
INFO  08:40:34,024 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:40:34,025 - Deklarisana konstanta c na liniji 2
INFO  08:40:34,025 - Deklarisana konstanta d na liniji 2
INFO  08:40:34,025 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:40:34,026 - Deklarisana promenljiva e na liniji 3
INFO  08:40:34,026 - Pocetak obrade metode main na liniji 5
INFO  08:40:34,026 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:40:34,027 - Zavrsetak obrade programa Program na liniji 1
INFO  08:40:34,027 - ======================TABELA_SIMBOLA==========================
INFO  08:40:34,027 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:40:34,027 - ==============================================================
INFO  08:40:34,027 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:40:34,028 - ==============================================================
INFO  08:40:34,028 - ======================GENERISANJE_KODA========================
INFO  08:40:34,031 - 7
INFO  08:40:34,032 - Generisanje koda uspesno zavrseno!
INFO  08:40:34,062 - Generisanje izlaznog fajla test\program.obj
INFO  08:40:34,062 - ==============================================================
INFO  08:42:15,723 - Obrada ulaznog fajla test\program.mj
INFO  08:42:15,811 - #2 program
INFO  08:42:15,811 - #8 Program
INFO  08:42:15,811 - #5 const
INFO  08:42:15,812 - #8 int
INFO  08:42:15,812 - #8 c
INFO  08:42:15,813 - #24 =
INFO  08:42:15,813 - #9 13
INFO  08:42:15,813 - #28 ,
INFO  08:42:15,814 - #8 d
INFO  08:42:15,814 - #24 =
INFO  08:42:15,814 - #9 99
INFO  08:42:15,814 - #27 ;
INFO  08:42:15,814 - #8 int
INFO  08:42:15,815 - #8 e
INFO  08:42:15,815 - #27 ;
INFO  08:42:15,816 - #20 {
INFO  08:42:15,817 - #6 void
INFO  08:42:15,817 - #8 main
INFO  08:42:15,817 - #29 (
INFO  08:42:15,818 - #30 )
INFO  08:42:15,818 - #20 {
INFO  08:42:15,818 - #31 if
INFO  08:42:15,818 - #29 (
INFO  08:42:15,818 - #12 false
INFO  08:42:15,818 - #30 )
INFO  08:42:15,820 - #20 {
INFO  08:42:15,821 - #3 print
INFO  08:42:15,821 - #29 (
INFO  08:42:15,821 - #9 65
INFO  08:42:15,821 - #30 )
INFO  08:42:15,821 - #27 ;
INFO  08:42:15,821 - #21 }
INFO  08:42:15,821 - #3 print
INFO  08:42:15,822 - #29 (
INFO  08:42:15,822 - #9 77
INFO  08:42:15,822 - #30 )
INFO  08:42:15,822 - #27 ;
INFO  08:42:15,822 - #21 }
INFO  08:42:15,822 - #21 }
INFO  08:42:15,823 - =====================SINTAKSNO_STABLO=========================
INFO  08:42:15,827 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:42:15,827 - ==============================================================
INFO  08:42:15,837 - Pocetak obrade programa Program na liniji 1
INFO  08:42:15,837 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:42:15,839 - Deklarisana konstanta c na liniji 2
INFO  08:42:15,839 - Deklarisana konstanta d na liniji 2
INFO  08:42:15,839 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:42:15,839 - Deklarisana promenljiva e na liniji 3
INFO  08:42:15,840 - Pocetak obrade metode main na liniji 5
INFO  08:42:15,840 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:42:15,840 - Zavrsetak obrade programa Program na liniji 1
INFO  08:42:15,840 - ======================TABELA_SIMBOLA==========================
INFO  08:42:15,842 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:42:15,843 - ==============================================================
INFO  08:42:15,843 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:42:15,843 - ==============================================================
INFO  08:42:15,843 - ======================GENERISANJE_KODA========================
INFO  08:42:15,847 - 9
INFO  08:42:15,848 - Generisanje koda uspesno zavrseno!
INFO  08:42:15,849 - Generisanje izlaznog fajla test\program.obj
INFO  08:42:15,849 - ==============================================================
INFO  08:43:07,439 - Obrada ulaznog fajla test\program.mj
INFO  08:43:07,521 - #2 program
INFO  08:43:07,521 - #8 Program
INFO  08:43:07,521 - #5 const
INFO  08:43:07,522 - #8 int
INFO  08:43:07,522 - #8 c
INFO  08:43:07,523 - #24 =
INFO  08:43:07,523 - #9 13
INFO  08:43:07,523 - #28 ,
INFO  08:43:07,526 - #8 d
INFO  08:43:07,526 - #24 =
INFO  08:43:07,527 - #9 99
INFO  08:43:07,527 - #27 ;
INFO  08:43:07,527 - #8 int
INFO  08:43:07,529 - #8 e
INFO  08:43:07,529 - #27 ;
INFO  08:43:07,529 - #20 {
INFO  08:43:07,530 - #6 void
INFO  08:43:07,530 - #8 main
INFO  08:43:07,530 - #29 (
INFO  08:43:07,531 - #30 )
INFO  08:43:07,531 - #20 {
INFO  08:43:07,531 - #31 if
INFO  08:43:07,531 - #29 (
INFO  08:43:07,531 - #12 false
INFO  08:43:07,532 - #30 )
INFO  08:43:07,533 - #20 {
INFO  08:43:07,533 - #3 print
INFO  08:43:07,533 - #29 (
INFO  08:43:07,533 - #9 65
INFO  08:43:07,533 - #30 )
INFO  08:43:07,533 - #27 ;
INFO  08:43:07,533 - #21 }
INFO  08:43:07,534 - #3 print
INFO  08:43:07,534 - #29 (
INFO  08:43:07,534 - #9 77
INFO  08:43:07,534 - #30 )
INFO  08:43:07,535 - #27 ;
INFO  08:43:07,535 - #21 }
INFO  08:43:07,535 - #21 }
INFO  08:43:07,536 - =====================SINTAKSNO_STABLO=========================
INFO  08:43:07,537 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:43:07,537 - ==============================================================
INFO  08:43:07,554 - Pocetak obrade programa Program na liniji 1
INFO  08:43:07,554 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:43:07,555 - Deklarisana konstanta c na liniji 2
INFO  08:43:07,555 - Deklarisana konstanta d na liniji 2
INFO  08:43:07,555 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:43:07,555 - Deklarisana promenljiva e na liniji 3
INFO  08:43:07,556 - Pocetak obrade metode main na liniji 5
INFO  08:43:07,556 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:43:07,556 - Zavrsetak obrade programa Program na liniji 1
INFO  08:43:07,556 - ======================TABELA_SIMBOLA==========================
INFO  08:43:07,557 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:43:07,557 - ==============================================================
INFO  08:43:07,557 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:43:07,557 - ==============================================================
INFO  08:43:07,557 - ======================GENERISANJE_KODA========================
INFO  08:43:07,561 - 9
INFO  08:43:07,563 - Generisanje koda uspesno zavrseno!
INFO  08:43:07,563 - Generisanje izlaznog fajla test\program.obj
INFO  08:43:07,563 - ==============================================================
INFO  08:43:13,829 - Obrada ulaznog fajla test\program.mj
INFO  08:43:13,949 - #2 program
INFO  08:43:13,950 - #8 Program
INFO  08:43:13,950 - #5 const
INFO  08:43:13,952 - #8 int
INFO  08:43:13,952 - #8 c
INFO  08:43:13,953 - #24 =
INFO  08:43:13,953 - #9 13
INFO  08:43:13,953 - #28 ,
INFO  08:43:13,955 - #8 d
INFO  08:43:13,955 - #24 =
INFO  08:43:13,955 - #9 99
INFO  08:43:13,955 - #27 ;
INFO  08:43:13,956 - #8 int
INFO  08:43:13,958 - #8 e
INFO  08:43:13,958 - #27 ;
INFO  08:43:13,959 - #20 {
INFO  08:43:13,960 - #6 void
INFO  08:43:13,960 - #8 main
INFO  08:43:13,961 - #29 (
INFO  08:43:13,962 - #30 )
INFO  08:43:13,962 - #20 {
INFO  08:43:13,963 - #31 if
INFO  08:43:13,963 - #29 (
INFO  08:43:13,963 - #12 false
INFO  08:43:13,963 - #30 )
INFO  08:43:13,965 - #20 {
INFO  08:43:13,965 - #3 print
INFO  08:43:13,965 - #29 (
INFO  08:43:13,965 - #9 65
INFO  08:43:13,965 - #30 )
INFO  08:43:13,966 - #27 ;
INFO  08:43:13,966 - #21 }
INFO  08:43:13,967 - #3 print
INFO  08:43:13,967 - #29 (
INFO  08:43:13,967 - #9 77
INFO  08:43:13,968 - #30 )
INFO  08:43:13,968 - #27 ;
INFO  08:43:13,968 - #21 }
INFO  08:43:13,968 - #21 }
INFO  08:43:13,969 - =====================SINTAKSNO_STABLO=========================
INFO  08:43:13,971 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:43:13,972 - ==============================================================
INFO  08:43:13,993 - Pocetak obrade programa Program na liniji 1
INFO  08:43:13,993 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:43:13,994 - Deklarisana konstanta c na liniji 2
INFO  08:43:13,994 - Deklarisana konstanta d na liniji 2
INFO  08:43:13,994 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:43:13,994 - Deklarisana promenljiva e na liniji 3
INFO  08:43:13,996 - Pocetak obrade metode main na liniji 5
INFO  08:43:13,996 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:43:13,996 - Zavrsetak obrade programa Program na liniji 1
INFO  08:43:13,996 - ======================TABELA_SIMBOLA==========================
INFO  08:43:13,997 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:43:13,998 - ==============================================================
INFO  08:43:13,998 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:43:13,998 - ==============================================================
INFO  08:43:13,998 - ======================GENERISANJE_KODA========================
INFO  08:43:14,003 - 9
INFO  08:43:14,005 - Generisanje koda uspesno zavrseno!
INFO  08:43:14,006 - Generisanje izlaznog fajla test\program.obj
INFO  08:43:14,006 - ==============================================================
INFO  08:43:43,684 - Obrada ulaznog fajla test\program.mj
INFO  08:43:43,801 - #2 program
INFO  08:43:43,802 - #8 Program
INFO  08:43:43,802 - #5 const
INFO  08:43:43,803 - #8 int
INFO  08:43:43,803 - #8 c
INFO  08:43:43,804 - #24 =
INFO  08:43:43,804 - #9 13
INFO  08:43:43,804 - #28 ,
INFO  08:43:43,805 - #8 d
INFO  08:43:43,805 - #24 =
INFO  08:43:43,805 - #9 99
INFO  08:43:43,805 - #27 ;
INFO  08:43:43,806 - #8 int
INFO  08:43:43,807 - #8 e
INFO  08:43:43,807 - #27 ;
INFO  08:43:43,807 - #20 {
INFO  08:43:43,809 - #6 void
INFO  08:43:43,810 - #8 main
INFO  08:43:43,810 - #29 (
INFO  08:43:43,811 - #30 )
INFO  08:43:43,811 - #20 {
INFO  08:43:43,811 - #31 if
INFO  08:43:43,811 - #29 (
INFO  08:43:43,811 - #12 false
INFO  08:43:43,812 - #30 )
INFO  08:43:43,813 - #20 {
INFO  08:43:43,813 - #3 print
INFO  08:43:43,814 - #29 (
INFO  08:43:43,814 - #9 65
INFO  08:43:43,814 - #30 )
INFO  08:43:43,814 - #27 ;
INFO  08:43:43,815 - #21 }
INFO  08:43:43,815 - #3 print
INFO  08:43:43,815 - #29 (
INFO  08:43:43,816 - #9 77
INFO  08:43:43,816 - #30 )
INFO  08:43:43,816 - #27 ;
INFO  08:43:43,816 - #21 }
INFO  08:43:43,816 - #21 }
INFO  08:43:43,817 - =====================SINTAKSNO_STABLO=========================
INFO  08:43:43,819 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:43:43,819 - ==============================================================
INFO  08:43:43,835 - Pocetak obrade programa Program na liniji 1
INFO  08:43:43,836 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:43:43,837 - Deklarisana konstanta c na liniji 2
INFO  08:43:43,837 - Deklarisana konstanta d na liniji 2
INFO  08:43:43,837 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:43:43,837 - Deklarisana promenljiva e na liniji 3
INFO  08:43:43,838 - Pocetak obrade metode main na liniji 5
INFO  08:43:43,838 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:43:43,838 - Zavrsetak obrade programa Program na liniji 1
INFO  08:43:43,838 - ======================TABELA_SIMBOLA==========================
INFO  08:43:43,840 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:43:43,840 - ==============================================================
INFO  08:43:43,840 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:43:43,840 - ==============================================================
INFO  08:43:43,841 - ======================GENERISANJE_KODA========================
INFO  08:43:43,846 - 9
INFO  08:43:43,848 - Generisanje koda uspesno zavrseno!
INFO  08:43:43,849 - Generisanje izlaznog fajla test\program.obj
INFO  08:43:43,849 - ==============================================================
INFO  08:44:47,045 - Obrada ulaznog fajla test\program.mj
INFO  08:44:47,130 - #2 program
INFO  08:44:47,131 - #8 Program
INFO  08:44:47,131 - #5 const
INFO  08:44:47,132 - #8 int
INFO  08:44:47,132 - #8 c
INFO  08:44:47,133 - #24 =
INFO  08:44:47,133 - #9 13
INFO  08:44:47,133 - #28 ,
INFO  08:44:47,134 - #8 d
INFO  08:44:47,134 - #24 =
INFO  08:44:47,134 - #9 99
INFO  08:44:47,135 - #27 ;
INFO  08:44:47,135 - #8 int
INFO  08:44:47,137 - #8 e
INFO  08:44:47,137 - #27 ;
INFO  08:44:47,137 - #20 {
INFO  08:44:47,138 - #6 void
INFO  08:44:47,138 - #8 main
INFO  08:44:47,138 - #29 (
INFO  08:44:47,139 - #30 )
INFO  08:44:47,139 - #20 {
INFO  08:44:47,139 - #31 if
INFO  08:44:47,139 - #29 (
INFO  08:44:47,139 - #12 false
INFO  08:44:47,139 - #30 )
INFO  08:44:47,140 - #20 {
INFO  08:44:47,141 - #3 print
INFO  08:44:47,141 - #29 (
INFO  08:44:47,141 - #9 65
INFO  08:44:47,141 - #30 )
INFO  08:44:47,141 - #27 ;
INFO  08:44:47,141 - #21 }
INFO  08:44:47,141 - #3 print
INFO  08:44:47,142 - #29 (
INFO  08:44:47,142 - #9 77
INFO  08:44:47,142 - #30 )
INFO  08:44:47,142 - #27 ;
INFO  08:44:47,142 - #21 }
INFO  08:44:47,142 - #21 }
INFO  08:44:47,143 - =====================SINTAKSNO_STABLO=========================
INFO  08:44:47,144 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:44:47,145 - ==============================================================
INFO  08:44:47,159 - Pocetak obrade programa Program na liniji 1
INFO  08:44:47,160 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:44:47,160 - Deklarisana konstanta c na liniji 2
INFO  08:44:47,160 - Deklarisana konstanta d na liniji 2
INFO  08:44:47,161 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:44:47,161 - Deklarisana promenljiva e na liniji 3
INFO  08:44:47,162 - Pocetak obrade metode main na liniji 5
INFO  08:44:47,162 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:44:47,163 - Zavrsetak obrade programa Program na liniji 1
INFO  08:44:47,163 - ======================TABELA_SIMBOLA==========================
INFO  08:44:47,164 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:44:47,164 - ==============================================================
INFO  08:44:47,164 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:44:47,164 - ==============================================================
INFO  08:44:47,164 - ======================GENERISANJE_KODA========================
INFO  08:44:47,168 - 9
INFO  08:44:47,169 - Generisanje koda uspesno zavrseno!
INFO  08:44:47,170 - Generisanje izlaznog fajla test\program.obj
INFO  08:44:47,170 - ==============================================================
INFO  08:45:59,479 - Obrada ulaznog fajla test\program.mj
INFO  08:45:59,576 - #2 program
INFO  08:45:59,577 - #8 Program
INFO  08:45:59,577 - #5 const
INFO  08:45:59,579 - #8 int
INFO  08:45:59,579 - #8 c
INFO  08:45:59,580 - #24 =
INFO  08:45:59,580 - #9 13
INFO  08:45:59,580 - #28 ,
INFO  08:45:59,582 - #8 d
INFO  08:45:59,582 - #24 =
INFO  08:45:59,582 - #9 99
INFO  08:45:59,582 - #27 ;
INFO  08:45:59,583 - #8 int
INFO  08:45:59,584 - #8 e
INFO  08:45:59,584 - #27 ;
INFO  08:45:59,585 - #20 {
INFO  08:45:59,586 - #6 void
INFO  08:45:59,587 - #8 main
INFO  08:45:59,587 - #29 (
INFO  08:45:59,588 - #30 )
INFO  08:45:59,588 - #20 {
INFO  08:45:59,588 - #31 if
INFO  08:45:59,588 - #29 (
INFO  08:45:59,589 - #12 false
INFO  08:45:59,589 - #30 )
INFO  08:45:59,590 - #20 {
INFO  08:45:59,590 - #3 print
INFO  08:45:59,590 - #29 (
INFO  08:45:59,590 - #9 65
INFO  08:45:59,590 - #30 )
INFO  08:45:59,591 - #27 ;
INFO  08:45:59,591 - #21 }
INFO  08:45:59,591 - #3 print
INFO  08:45:59,592 - #29 (
INFO  08:45:59,592 - #9 77
INFO  08:45:59,592 - #30 )
INFO  08:45:59,592 - #27 ;
INFO  08:45:59,592 - #21 }
INFO  08:45:59,592 - #21 }
INFO  08:45:59,593 - =====================SINTAKSNO_STABLO=========================
INFO  08:45:59,595 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:45:59,596 - ==============================================================
INFO  08:45:59,615 - Pocetak obrade programa Program na liniji 1
INFO  08:45:59,616 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:45:59,617 - Deklarisana konstanta c na liniji 2
INFO  08:45:59,617 - Deklarisana konstanta d na liniji 2
INFO  08:45:59,617 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:45:59,618 - Deklarisana promenljiva e na liniji 3
INFO  08:45:59,619 - Pocetak obrade metode main na liniji 5
INFO  08:45:59,619 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:45:59,619 - Zavrsetak obrade programa Program na liniji 1
INFO  08:45:59,620 - ======================TABELA_SIMBOLA==========================
INFO  08:45:59,620 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:45:59,621 - ==============================================================
INFO  08:45:59,621 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:45:59,621 - ==============================================================
INFO  08:45:59,621 - ======================GENERISANJE_KODA========================
INFO  08:45:59,626 - 9
INFO  08:45:59,629 - Generisanje koda uspesno zavrseno!
INFO  08:45:59,629 - Generisanje izlaznog fajla test\program.obj
INFO  08:45:59,629 - ==============================================================
INFO  08:50:34,458 - Obrada ulaznog fajla test\program.mj
INFO  08:50:34,573 - #2 program
INFO  08:50:34,573 - #8 Program
INFO  08:50:34,573 - #5 const
INFO  08:50:34,575 - #8 int
INFO  08:50:34,575 - #8 c
INFO  08:50:34,576 - #24 =
INFO  08:50:34,576 - #9 13
INFO  08:50:34,577 - #28 ,
INFO  08:50:34,579 - #8 d
INFO  08:50:34,579 - #24 =
INFO  08:50:34,579 - #9 99
INFO  08:50:34,580 - #27 ;
INFO  08:50:34,580 - #8 int
INFO  08:50:34,582 - #8 e
INFO  08:50:34,582 - #27 ;
INFO  08:50:34,583 - #20 {
INFO  08:50:34,584 - #6 void
INFO  08:50:34,584 - #8 main
INFO  08:50:34,584 - #29 (
INFO  08:50:34,585 - #30 )
INFO  08:50:34,586 - #20 {
INFO  08:50:34,586 - #31 if
INFO  08:50:34,586 - #29 (
INFO  08:50:34,586 - #12 false
INFO  08:50:34,586 - #30 )
INFO  08:50:34,587 - #20 {
INFO  08:50:34,587 - #3 print
INFO  08:50:34,587 - #29 (
INFO  08:50:34,588 - #9 65
INFO  08:50:34,588 - #30 )
INFO  08:50:34,588 - #27 ;
INFO  08:50:34,588 - #21 }
INFO  08:50:34,588 - #3 print
INFO  08:50:34,589 - #29 (
INFO  08:50:34,589 - #9 77
INFO  08:50:34,589 - #30 )
INFO  08:50:34,589 - #27 ;
INFO  08:50:34,589 - #21 }
INFO  08:50:34,590 - #21 }
INFO  08:50:34,591 - =====================SINTAKSNO_STABLO=========================
INFO  08:50:34,593 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:50:34,593 - ==============================================================
INFO  08:50:34,612 - Pocetak obrade programa Program na liniji 1
INFO  08:50:34,612 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:50:34,613 - Deklarisana konstanta c na liniji 2
INFO  08:50:34,613 - Deklarisana konstanta d na liniji 2
INFO  08:50:34,614 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:50:34,614 - Deklarisana promenljiva e na liniji 3
INFO  08:50:34,615 - Pocetak obrade metode main na liniji 5
INFO  08:50:34,615 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:50:34,615 - Zavrsetak obrade programa Program na liniji 1
INFO  08:50:34,615 - ======================TABELA_SIMBOLA==========================
INFO  08:50:34,616 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:50:34,617 - ==============================================================
INFO  08:50:34,617 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:50:34,617 - ==============================================================
INFO  08:50:34,617 - ======================GENERISANJE_KODA========================
INFO  08:50:34,623 - Generisanje koda uspesno zavrseno!
INFO  08:50:34,623 - Generisanje izlaznog fajla test\program.obj
INFO  08:50:34,623 - ==============================================================
INFO  08:51:12,662 - Obrada ulaznog fajla test\program.mj
INFO  08:51:12,745 - #2 program
INFO  08:51:12,746 - #8 Program
INFO  08:51:12,746 - #5 const
INFO  08:51:12,746 - #8 int
INFO  08:51:12,746 - #8 c
INFO  08:51:12,747 - #24 =
INFO  08:51:12,747 - #9 13
INFO  08:51:12,747 - #28 ,
INFO  08:51:12,748 - #8 d
INFO  08:51:12,748 - #24 =
INFO  08:51:12,748 - #9 99
INFO  08:51:12,748 - #27 ;
INFO  08:51:12,749 - #8 int
INFO  08:51:12,751 - #8 e
INFO  08:51:12,752 - #27 ;
INFO  08:51:12,752 - #20 {
INFO  08:51:12,753 - #6 void
INFO  08:51:12,753 - #8 main
INFO  08:51:12,753 - #29 (
INFO  08:51:12,754 - #30 )
INFO  08:51:12,755 - #20 {
INFO  08:51:12,755 - #31 if
INFO  08:51:12,755 - #29 (
INFO  08:51:12,755 - #12 false
INFO  08:51:12,755 - #30 )
INFO  08:51:12,756 - #20 {
INFO  08:51:12,756 - #3 print
INFO  08:51:12,756 - #29 (
INFO  08:51:12,756 - #9 65
INFO  08:51:12,756 - #30 )
INFO  08:51:12,757 - #27 ;
INFO  08:51:12,757 - #21 }
INFO  08:51:12,757 - #3 print
INFO  08:51:12,757 - #29 (
INFO  08:51:12,758 - #9 77
INFO  08:51:12,758 - #30 )
INFO  08:51:12,758 - #27 ;
INFO  08:51:12,758 - #21 }
INFO  08:51:12,758 - #21 }
INFO  08:51:12,759 - =====================SINTAKSNO_STABLO=========================
INFO  08:51:12,760 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  08:51:12,761 - ==============================================================
INFO  08:51:12,778 - Pocetak obrade programa Program na liniji 1
INFO  08:51:12,778 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  08:51:12,779 - Deklarisana konstanta c na liniji 2
INFO  08:51:12,779 - Deklarisana konstanta d na liniji 2
INFO  08:51:12,779 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  08:51:12,779 - Deklarisana promenljiva e na liniji 3
INFO  08:51:12,780 - Pocetak obrade metode main na liniji 5
INFO  08:51:12,780 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  08:51:12,780 - Zavrsetak obrade programa Program na liniji 1
INFO  08:51:12,780 - ======================TABELA_SIMBOLA==========================
INFO  08:51:12,781 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  08:51:12,781 - ==============================================================
INFO  08:51:12,781 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  08:51:12,781 - ==============================================================
INFO  08:51:12,781 - ======================GENERISANJE_KODA========================
INFO  08:51:12,786 - Generisanje koda uspesno zavrseno!
INFO  08:51:12,786 - Generisanje izlaznog fajla test\program.obj
INFO  08:51:12,786 - ==============================================================
INFO  09:03:08,017 - Obrada ulaznog fajla test\program.mj
INFO  09:03:08,099 - #2 program
INFO  09:03:08,099 - #8 Program
INFO  09:03:08,100 - #5 const
INFO  09:03:08,101 - #8 int
INFO  09:03:08,101 - #8 c
INFO  09:03:08,103 - #24 =
INFO  09:03:08,103 - #9 13
INFO  09:03:08,103 - #28 ,
INFO  09:03:08,104 - #8 d
INFO  09:03:08,105 - #24 =
INFO  09:03:08,105 - #9 99
INFO  09:03:08,105 - #27 ;
INFO  09:03:08,105 - #8 int
INFO  09:03:08,106 - #8 e
INFO  09:03:08,107 - #27 ;
INFO  09:03:08,107 - #20 {
INFO  09:03:08,108 - #6 void
INFO  09:03:08,108 - #8 main
INFO  09:03:08,109 - #29 (
INFO  09:03:08,109 - #30 )
INFO  09:03:08,110 - #20 {
INFO  09:03:08,110 - #31 if
INFO  09:03:08,110 - #29 (
INFO  09:03:08,110 - #12 false
INFO  09:03:08,110 - #30 )
INFO  09:03:08,111 - #20 {
INFO  09:03:08,111 - #3 print
INFO  09:03:08,111 - #29 (
INFO  09:03:08,111 - #9 65
INFO  09:03:08,112 - #30 )
INFO  09:03:08,112 - #27 ;
INFO  09:03:08,112 - #21 }
INFO  09:03:08,113 - #3 print
INFO  09:03:08,113 - #29 (
INFO  09:03:08,113 - #9 77
INFO  09:03:08,113 - #30 )
INFO  09:03:08,113 - #27 ;
INFO  09:03:08,114 - #21 }
INFO  09:03:08,114 - #21 }
INFO  09:03:08,115 - =====================SINTAKSNO_STABLO=========================
INFO  09:03:08,116 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:03:08,117 - ==============================================================
INFO  09:03:08,128 - Pocetak obrade programa Program na liniji 1
INFO  09:03:08,128 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:03:08,130 - Deklarisana konstanta c na liniji 2
INFO  09:03:08,130 - Deklarisana konstanta d na liniji 2
INFO  09:03:08,130 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:03:08,130 - Deklarisana promenljiva e na liniji 3
INFO  09:03:08,131 - Pocetak obrade metode main na liniji 5
INFO  09:03:08,131 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:03:08,131 - Zavrsetak obrade programa Program na liniji 1
INFO  09:03:08,131 - ======================TABELA_SIMBOLA==========================
INFO  09:03:08,132 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:03:08,132 - ==============================================================
INFO  09:03:08,132 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:03:08,132 - ==============================================================
INFO  09:03:08,133 - ======================GENERISANJE_KODA========================
INFO  09:03:08,138 - Generisanje koda uspesno zavrseno!
INFO  09:03:08,139 - Generisanje izlaznog fajla test\program.obj
INFO  09:03:08,139 - ==============================================================
INFO  09:03:44,924 - Obrada ulaznog fajla test\program.mj
INFO  09:03:45,007 - #2 program
INFO  09:03:45,007 - #8 Program
INFO  09:03:45,007 - #5 const
INFO  09:03:45,008 - #8 int
INFO  09:03:45,008 - #8 c
INFO  09:03:45,009 - #24 =
INFO  09:03:45,009 - #9 13
INFO  09:03:45,009 - #28 ,
INFO  09:03:45,010 - #8 d
INFO  09:03:45,010 - #24 =
INFO  09:03:45,010 - #9 99
INFO  09:03:45,010 - #27 ;
INFO  09:03:45,011 - #8 int
INFO  09:03:45,012 - #8 e
INFO  09:03:45,012 - #27 ;
INFO  09:03:45,012 - #20 {
INFO  09:03:45,014 - #6 void
INFO  09:03:45,014 - #8 main
INFO  09:03:45,014 - #29 (
INFO  09:03:45,015 - #30 )
INFO  09:03:45,015 - #20 {
INFO  09:03:45,015 - #31 if
INFO  09:03:45,015 - #29 (
INFO  09:03:45,015 - #12 false
INFO  09:03:45,016 - #30 )
INFO  09:03:45,017 - #20 {
INFO  09:03:45,018 - #3 print
INFO  09:03:45,018 - #29 (
INFO  09:03:45,018 - #9 65
INFO  09:03:45,018 - #30 )
INFO  09:03:45,018 - #27 ;
INFO  09:03:45,018 - #21 }
INFO  09:03:45,019 - #3 print
INFO  09:03:45,019 - #29 (
INFO  09:03:45,019 - #9 77
INFO  09:03:45,019 - #30 )
INFO  09:03:45,019 - #27 ;
INFO  09:03:45,019 - #21 }
INFO  09:03:45,020 - #21 }
INFO  09:03:45,020 - =====================SINTAKSNO_STABLO=========================
INFO  09:03:45,022 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:03:45,022 - ==============================================================
INFO  09:03:45,041 - Pocetak obrade programa Program na liniji 1
INFO  09:03:45,041 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:03:45,042 - Deklarisana konstanta c na liniji 2
INFO  09:03:45,042 - Deklarisana konstanta d na liniji 2
INFO  09:03:45,042 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:03:45,043 - Deklarisana promenljiva e na liniji 3
INFO  09:03:45,043 - Pocetak obrade metode main na liniji 5
INFO  09:03:45,043 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:03:45,044 - Zavrsetak obrade programa Program na liniji 1
INFO  09:03:45,044 - ======================TABELA_SIMBOLA==========================
INFO  09:03:45,044 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:03:45,044 - ==============================================================
INFO  09:03:45,045 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:03:45,045 - ==============================================================
INFO  09:03:45,045 - ======================GENERISANJE_KODA========================
INFO  09:03:45,048 - 9
INFO  09:03:45,049 - Generisanje koda uspesno zavrseno!
INFO  09:03:45,050 - Generisanje izlaznog fajla test\program.obj
INFO  09:03:45,050 - ==============================================================
INFO  09:04:51,526 - Obrada ulaznog fajla test\program.mj
INFO  09:04:51,658 - #2 program
INFO  09:04:51,659 - #8 Program
INFO  09:04:51,659 - #5 const
INFO  09:04:51,661 - #8 int
INFO  09:04:51,661 - #8 c
INFO  09:04:51,663 - #24 =
INFO  09:04:51,663 - #9 13
INFO  09:04:51,663 - #28 ,
INFO  09:04:51,665 - #8 d
INFO  09:04:51,665 - #24 =
INFO  09:04:51,665 - #9 99
INFO  09:04:51,666 - #27 ;
INFO  09:04:51,666 - #8 int
INFO  09:04:51,668 - #8 e
INFO  09:04:51,668 - #27 ;
INFO  09:04:51,669 - #20 {
INFO  09:04:51,671 - #6 void
INFO  09:04:51,672 - #8 main
INFO  09:04:51,672 - #29 (
INFO  09:04:51,673 - #30 )
INFO  09:04:51,674 - #20 {
INFO  09:04:51,674 - #31 if
INFO  09:04:51,674 - #29 (
INFO  09:04:51,674 - #12 false
INFO  09:04:51,674 - #30 )
INFO  09:04:51,676 - #20 {
INFO  09:04:51,677 - #3 print
INFO  09:04:51,677 - #29 (
INFO  09:04:51,677 - #9 65
INFO  09:04:51,677 - #30 )
INFO  09:04:51,677 - #27 ;
INFO  09:04:51,677 - #21 }
INFO  09:04:51,678 - #3 print
INFO  09:04:51,678 - #29 (
INFO  09:04:51,678 - #9 77
INFO  09:04:51,679 - #30 )
INFO  09:04:51,679 - #27 ;
INFO  09:04:51,679 - #21 }
INFO  09:04:51,679 - #21 }
INFO  09:04:51,680 - =====================SINTAKSNO_STABLO=========================
INFO  09:04:51,682 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:04:51,683 - ==============================================================
INFO  09:04:51,705 - Pocetak obrade programa Program na liniji 1
INFO  09:04:51,705 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:04:51,707 - Deklarisana konstanta c na liniji 2
INFO  09:04:51,707 - Deklarisana konstanta d na liniji 2
INFO  09:04:51,707 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:04:51,708 - Deklarisana promenljiva e na liniji 3
INFO  09:04:51,709 - Pocetak obrade metode main na liniji 5
INFO  09:04:51,710 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:04:51,711 - Zavrsetak obrade programa Program na liniji 1
INFO  09:04:51,711 - ======================TABELA_SIMBOLA==========================
INFO  09:04:51,713 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:04:51,713 - ==============================================================
INFO  09:04:51,713 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:04:51,713 - ==============================================================
INFO  09:04:51,713 - ======================GENERISANJE_KODA========================
INFO  09:06:35,282 - Obrada ulaznog fajla test\program.mj
INFO  09:06:35,367 - #2 program
INFO  09:06:35,367 - #8 Program
INFO  09:06:35,367 - #5 const
INFO  09:06:35,368 - #8 int
INFO  09:06:35,368 - #8 c
INFO  09:06:35,369 - #24 =
INFO  09:06:35,369 - #9 13
INFO  09:06:35,369 - #28 ,
INFO  09:06:35,371 - #8 d
INFO  09:06:35,371 - #24 =
INFO  09:06:35,371 - #9 99
INFO  09:06:35,371 - #27 ;
INFO  09:06:35,372 - #8 int
INFO  09:06:35,373 - #8 e
INFO  09:06:35,373 - #27 ;
INFO  09:06:35,374 - #20 {
INFO  09:06:35,375 - #6 void
INFO  09:06:35,375 - #8 main
INFO  09:06:35,375 - #29 (
INFO  09:06:35,376 - #30 )
INFO  09:06:35,376 - #20 {
INFO  09:06:35,376 - #31 if
INFO  09:06:35,376 - #29 (
INFO  09:06:35,376 - #12 false
INFO  09:06:35,376 - #30 )
INFO  09:06:35,377 - #20 {
INFO  09:06:35,377 - #3 print
INFO  09:06:35,377 - #29 (
INFO  09:06:35,378 - #9 65
INFO  09:06:35,378 - #30 )
INFO  09:06:35,378 - #27 ;
INFO  09:06:35,378 - #21 }
INFO  09:06:35,378 - #3 print
INFO  09:06:35,379 - #29 (
INFO  09:06:35,379 - #9 77
INFO  09:06:35,379 - #30 )
INFO  09:06:35,379 - #27 ;
INFO  09:06:35,379 - #21 }
INFO  09:06:35,379 - #21 }
INFO  09:06:35,380 - =====================SINTAKSNO_STABLO=========================
INFO  09:06:35,382 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:06:35,382 - ==============================================================
INFO  09:06:35,398 - Pocetak obrade programa Program na liniji 1
INFO  09:06:35,399 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:06:35,400 - Deklarisana konstanta c na liniji 2
INFO  09:06:35,400 - Deklarisana konstanta d na liniji 2
INFO  09:06:35,400 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:06:35,400 - Deklarisana promenljiva e na liniji 3
INFO  09:06:35,402 - Pocetak obrade metode main na liniji 5
INFO  09:06:35,402 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:06:35,402 - Zavrsetak obrade programa Program na liniji 1
INFO  09:06:35,403 - ======================TABELA_SIMBOLA==========================
INFO  09:06:35,403 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:06:35,403 - ==============================================================
INFO  09:06:35,404 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:06:35,404 - ==============================================================
INFO  09:06:35,404 - ======================GENERISANJE_KODA========================
INFO  09:06:35,409 - class rs.ac.bg.etf.pp1.ast.Statement_single
INFO  09:06:35,409 - class rs.ac.bg.etf.pp1.ast.Stmt_list
INFO  09:06:35,410 - class rs.ac.bg.etf.pp1.ast.Stmt_if
INFO  09:06:35,410 - 9
INFO  09:06:35,410 - class rs.ac.bg.etf.pp1.ast.Statement_multi
INFO  09:06:35,410 - class rs.ac.bg.etf.pp1.ast.Meth_void_6
INFO  09:06:35,410 - class rs.ac.bg.etf.pp1.ast.Meth_void_decl
INFO  09:06:35,413 - Generisanje koda uspesno zavrseno!
INFO  09:06:35,413 - Generisanje izlaznog fajla test\program.obj
INFO  09:06:35,413 - ==============================================================
INFO  09:06:39,554 - Obrada ulaznog fajla test\program.mj
INFO  09:06:39,670 - #2 program
INFO  09:06:39,670 - #8 Program
INFO  09:06:39,670 - #5 const
INFO  09:06:39,672 - #8 int
INFO  09:06:39,672 - #8 c
INFO  09:06:39,673 - #24 =
INFO  09:06:39,673 - #9 13
INFO  09:06:39,673 - #28 ,
INFO  09:06:39,675 - #8 d
INFO  09:06:39,675 - #24 =
INFO  09:06:39,675 - #9 99
INFO  09:06:39,675 - #27 ;
INFO  09:06:39,675 - #8 int
INFO  09:06:39,677 - #8 e
INFO  09:06:39,677 - #27 ;
INFO  09:06:39,678 - #20 {
INFO  09:06:39,679 - #6 void
INFO  09:06:39,680 - #8 main
INFO  09:06:39,680 - #29 (
INFO  09:06:39,681 - #30 )
INFO  09:06:39,681 - #20 {
INFO  09:06:39,681 - #31 if
INFO  09:06:39,681 - #29 (
INFO  09:06:39,682 - #12 false
INFO  09:06:39,682 - #30 )
INFO  09:06:39,684 - #20 {
INFO  09:06:39,684 - #3 print
INFO  09:06:39,684 - #29 (
INFO  09:06:39,684 - #9 65
INFO  09:06:39,685 - #30 )
INFO  09:06:39,685 - #27 ;
INFO  09:06:39,685 - #21 }
INFO  09:06:39,685 - #3 print
INFO  09:06:39,686 - #29 (
INFO  09:06:39,686 - #9 77
INFO  09:06:39,686 - #30 )
INFO  09:06:39,686 - #27 ;
INFO  09:06:39,686 - #21 }
INFO  09:06:39,686 - #21 }
INFO  09:06:39,687 - =====================SINTAKSNO_STABLO=========================
INFO  09:06:39,689 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:06:39,690 - ==============================================================
INFO  09:06:39,709 - Pocetak obrade programa Program na liniji 1
INFO  09:06:39,709 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:06:39,710 - Deklarisana konstanta c na liniji 2
INFO  09:06:39,711 - Deklarisana konstanta d na liniji 2
INFO  09:06:39,711 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:06:39,711 - Deklarisana promenljiva e na liniji 3
INFO  09:06:39,712 - Pocetak obrade metode main na liniji 5
INFO  09:06:39,712 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:06:39,713 - Zavrsetak obrade programa Program na liniji 1
INFO  09:06:39,713 - ======================TABELA_SIMBOLA==========================
INFO  09:06:39,714 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:06:39,714 - ==============================================================
INFO  09:06:39,714 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:06:39,714 - ==============================================================
INFO  09:06:39,714 - ======================GENERISANJE_KODA========================
INFO  09:06:39,719 - class rs.ac.bg.etf.pp1.ast.Statement_single
INFO  09:06:39,719 - class rs.ac.bg.etf.pp1.ast.Stmt_list
INFO  09:06:39,719 - class rs.ac.bg.etf.pp1.ast.Stmt_if
INFO  09:06:39,719 - 9
INFO  09:06:39,719 - class rs.ac.bg.etf.pp1.ast.Statement_multi
INFO  09:06:39,719 - class rs.ac.bg.etf.pp1.ast.Meth_void_6
INFO  09:06:39,720 - class rs.ac.bg.etf.pp1.ast.Meth_void_decl
INFO  09:06:39,721 - Generisanje koda uspesno zavrseno!
INFO  09:06:39,722 - Generisanje izlaznog fajla test\program.obj
INFO  09:06:39,722 - ==============================================================
INFO  09:08:50,708 - Obrada ulaznog fajla test\program.mj
INFO  09:08:50,815 - #2 program
INFO  09:08:50,816 - #8 Program
INFO  09:08:50,816 - #5 const
INFO  09:08:50,817 - #8 int
INFO  09:08:50,817 - #8 c
INFO  09:08:50,818 - #24 =
INFO  09:08:50,818 - #9 13
INFO  09:08:50,818 - #28 ,
INFO  09:08:50,820 - #8 d
INFO  09:08:50,820 - #24 =
INFO  09:08:50,820 - #9 99
INFO  09:08:50,820 - #27 ;
INFO  09:08:50,821 - #8 int
INFO  09:08:50,822 - #8 e
INFO  09:08:50,823 - #27 ;
INFO  09:08:50,823 - #20 {
INFO  09:08:50,825 - #6 void
INFO  09:08:50,825 - #8 main
INFO  09:08:50,826 - #29 (
INFO  09:08:50,828 - #30 )
INFO  09:08:50,828 - #20 {
INFO  09:08:50,828 - #31 if
INFO  09:08:50,828 - #29 (
INFO  09:08:50,828 - #12 false
INFO  09:08:50,828 - #30 )
INFO  09:08:50,830 - #20 {
INFO  09:08:50,830 - #3 print
INFO  09:08:50,830 - #29 (
INFO  09:08:50,830 - #9 65
INFO  09:08:50,830 - #30 )
INFO  09:08:50,830 - #27 ;
INFO  09:08:50,830 - #21 }
INFO  09:08:50,831 - #3 print
INFO  09:08:50,831 - #29 (
INFO  09:08:50,832 - #9 77
INFO  09:08:50,832 - #30 )
INFO  09:08:50,832 - #27 ;
INFO  09:08:50,832 - #21 }
INFO  09:08:50,832 - #21 }
INFO  09:08:50,833 - =====================SINTAKSNO_STABLO=========================
INFO  09:08:50,835 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:08:50,836 - ==============================================================
INFO  09:08:50,852 - Pocetak obrade programa Program na liniji 1
INFO  09:08:50,853 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:08:50,854 - Deklarisana konstanta c na liniji 2
INFO  09:08:50,854 - Deklarisana konstanta d na liniji 2
INFO  09:08:50,854 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:08:50,855 - Deklarisana promenljiva e na liniji 3
INFO  09:08:50,856 - Pocetak obrade metode main na liniji 5
INFO  09:08:50,856 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:08:50,856 - Zavrsetak obrade programa Program na liniji 1
INFO  09:08:50,856 - ======================TABELA_SIMBOLA==========================
INFO  09:08:50,857 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:08:50,857 - ==============================================================
INFO  09:08:50,857 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:08:50,858 - ==============================================================
INFO  09:08:50,858 - ======================GENERISANJE_KODA========================
INFO  09:08:50,863 - 9
INFO  09:08:50,865 - Generisanje koda uspesno zavrseno!
INFO  09:08:50,865 - Generisanje izlaznog fajla test\program.obj
INFO  09:08:50,865 - ==============================================================
INFO  09:10:13,519 - Obrada ulaznog fajla test\program.mj
INFO  09:10:13,601 - #2 program
INFO  09:10:13,602 - #8 Program
INFO  09:10:13,602 - #5 const
INFO  09:10:13,603 - #8 int
INFO  09:10:13,603 - #8 c
INFO  09:10:13,604 - #24 =
INFO  09:10:13,604 - #9 13
INFO  09:10:13,605 - #28 ,
INFO  09:10:13,606 - #8 d
INFO  09:10:13,606 - #24 =
INFO  09:10:13,606 - #9 99
INFO  09:10:13,606 - #27 ;
INFO  09:10:13,606 - #8 int
INFO  09:10:13,607 - #8 e
INFO  09:10:13,607 - #27 ;
INFO  09:10:13,608 - #20 {
INFO  09:10:13,609 - #6 void
INFO  09:10:13,609 - #8 main
INFO  09:10:13,609 - #29 (
INFO  09:10:13,610 - #30 )
INFO  09:10:13,610 - #20 {
INFO  09:10:13,611 - #31 if
INFO  09:10:13,611 - #29 (
INFO  09:10:13,611 - #12 false
INFO  09:10:13,611 - #30 )
INFO  09:10:13,612 - #20 {
INFO  09:10:13,612 - #3 print
INFO  09:10:13,612 - #29 (
INFO  09:10:13,612 - #9 65
INFO  09:10:13,612 - #30 )
INFO  09:10:13,613 - #27 ;
INFO  09:10:13,613 - #21 }
INFO  09:10:13,613 - #3 print
INFO  09:10:13,613 - #29 (
INFO  09:10:13,613 - #9 77
INFO  09:10:13,614 - #30 )
INFO  09:10:13,614 - #27 ;
INFO  09:10:13,614 - #21 }
INFO  09:10:13,614 - #21 }
INFO  09:10:13,615 - =====================SINTAKSNO_STABLO=========================
INFO  09:10:13,617 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:10:13,618 - ==============================================================
INFO  09:10:13,633 - Pocetak obrade programa Program na liniji 1
INFO  09:10:13,633 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:10:13,635 - Deklarisana konstanta c na liniji 2
INFO  09:10:13,635 - Deklarisana konstanta d na liniji 2
INFO  09:10:13,635 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:10:13,635 - Deklarisana promenljiva e na liniji 3
INFO  09:10:13,636 - Pocetak obrade metode main na liniji 5
INFO  09:10:13,636 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:10:13,636 - Zavrsetak obrade programa Program na liniji 1
INFO  09:10:13,636 - ======================TABELA_SIMBOLA==========================
INFO  09:10:13,637 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:10:13,637 - ==============================================================
INFO  09:10:13,637 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:10:13,637 - ==============================================================
INFO  09:10:13,637 - ======================GENERISANJE_KODA========================
INFO  09:10:13,641 - 9
INFO  09:10:13,643 - Generisanje koda uspesno zavrseno!
INFO  09:10:13,643 - Generisanje izlaznog fajla test\program.obj
INFO  09:10:13,643 - ==============================================================
INFO  09:11:19,890 - Obrada ulaznog fajla test\program.mj
INFO  09:11:19,971 - #2 program
INFO  09:11:19,971 - #8 Program
INFO  09:11:19,971 - #5 const
INFO  09:11:19,972 - #8 int
INFO  09:11:19,972 - #8 c
INFO  09:11:19,973 - #24 =
INFO  09:11:19,973 - #9 13
INFO  09:11:19,973 - #28 ,
INFO  09:11:19,975 - #8 d
INFO  09:11:19,975 - #24 =
INFO  09:11:19,975 - #9 99
INFO  09:11:19,975 - #27 ;
INFO  09:11:19,975 - #8 int
INFO  09:11:19,976 - #8 e
INFO  09:11:19,977 - #27 ;
INFO  09:11:19,977 - #20 {
INFO  09:11:19,979 - #6 void
INFO  09:11:19,979 - #8 main
INFO  09:11:19,979 - #29 (
INFO  09:11:19,980 - #30 )
INFO  09:11:19,980 - #20 {
INFO  09:11:19,980 - #31 if
INFO  09:11:19,980 - #29 (
INFO  09:11:19,980 - #12 false
INFO  09:11:19,980 - #30 )
INFO  09:11:19,981 - #20 {
INFO  09:11:19,982 - #3 print
INFO  09:11:19,982 - #29 (
INFO  09:11:19,982 - #9 65
INFO  09:11:19,982 - #30 )
INFO  09:11:19,982 - #27 ;
INFO  09:11:19,982 - #21 }
INFO  09:11:19,982 - #3 print
INFO  09:11:19,983 - #29 (
INFO  09:11:19,983 - #9 77
INFO  09:11:19,983 - #30 )
INFO  09:11:19,983 - #27 ;
INFO  09:11:19,983 - #21 }
INFO  09:11:19,983 - #21 }
INFO  09:11:19,984 - =====================SINTAKSNO_STABLO=========================
INFO  09:11:19,985 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:11:19,986 - ==============================================================
INFO  09:11:20,002 - Pocetak obrade programa Program na liniji 1
INFO  09:11:20,002 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:11:20,003 - Deklarisana konstanta c na liniji 2
INFO  09:11:20,003 - Deklarisana konstanta d na liniji 2
INFO  09:11:20,004 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:11:20,004 - Deklarisana promenljiva e na liniji 3
INFO  09:11:20,005 - Pocetak obrade metode main na liniji 5
INFO  09:11:20,005 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:11:20,005 - Zavrsetak obrade programa Program na liniji 1
INFO  09:11:20,005 - ======================TABELA_SIMBOLA==========================
INFO  09:11:20,006 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:11:20,006 - ==============================================================
INFO  09:11:20,006 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:11:20,006 - ==============================================================
INFO  09:11:20,006 - ======================GENERISANJE_KODA========================
INFO  09:11:20,011 - 9
INFO  09:11:20,012 - Generisanje koda uspesno zavrseno!
INFO  09:11:20,013 - Generisanje izlaznog fajla test\program.obj
INFO  09:11:20,013 - ==============================================================
INFO  09:12:00,260 - Obrada ulaznog fajla test\program.mj
INFO  09:12:00,336 - #2 program
INFO  09:12:00,336 - #8 Program
INFO  09:12:00,336 - #5 const
INFO  09:12:00,345 - #8 int
INFO  09:12:00,345 - #8 c
INFO  09:12:00,346 - #24 =
INFO  09:12:00,346 - #9 13
INFO  09:12:00,347 - #28 ,
INFO  09:12:00,348 - #8 d
INFO  09:12:00,348 - #24 =
INFO  09:12:00,348 - #9 99
INFO  09:12:00,349 - #27 ;
INFO  09:12:00,349 - #8 int
INFO  09:12:00,351 - #8 e
INFO  09:12:00,351 - #27 ;
INFO  09:12:00,351 - #20 {
INFO  09:12:00,353 - #6 void
INFO  09:12:00,353 - #8 main
INFO  09:12:00,353 - #29 (
INFO  09:12:00,355 - #30 )
INFO  09:12:00,355 - #20 {
INFO  09:12:00,356 - #31 if
INFO  09:12:00,356 - #29 (
INFO  09:12:00,356 - #12 false
INFO  09:12:00,356 - #30 )
INFO  09:12:00,357 - #20 {
INFO  09:12:00,357 - #3 print
INFO  09:12:00,357 - #29 (
INFO  09:12:00,357 - #9 65
INFO  09:12:00,357 - #30 )
INFO  09:12:00,357 - #27 ;
INFO  09:12:00,357 - #21 }
INFO  09:12:00,358 - #3 print
INFO  09:12:00,358 - #29 (
INFO  09:12:00,358 - #9 77
INFO  09:12:00,358 - #30 )
INFO  09:12:00,358 - #27 ;
INFO  09:12:00,359 - #21 }
INFO  09:12:00,359 - #21 }
INFO  09:12:00,360 - =====================SINTAKSNO_STABLO=========================
INFO  09:12:00,361 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:12:00,362 - ==============================================================
INFO  09:12:00,386 - Pocetak obrade programa Program na liniji 1
INFO  09:12:00,386 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:12:00,388 - Deklarisana konstanta c na liniji 2
INFO  09:12:00,388 - Deklarisana konstanta d na liniji 2
INFO  09:12:00,388 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:12:00,388 - Deklarisana promenljiva e na liniji 3
INFO  09:12:00,389 - Pocetak obrade metode main na liniji 5
INFO  09:12:00,390 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:12:00,390 - Zavrsetak obrade programa Program na liniji 1
INFO  09:12:00,390 - ======================TABELA_SIMBOLA==========================
INFO  09:12:00,390 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:12:00,391 - ==============================================================
INFO  09:12:00,391 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:12:00,391 - ==============================================================
INFO  09:12:00,391 - ======================GENERISANJE_KODA========================
INFO  09:12:00,395 - class rs.ac.bg.etf.pp1.ast.Stmt_if
INFO  09:12:00,395 - 9
INFO  09:12:00,395 - class rs.ac.bg.etf.pp1.ast.Meth_void_decl
INFO  09:12:00,397 - Generisanje koda uspesno zavrseno!
INFO  09:12:00,397 - Generisanje izlaznog fajla test\program.obj
INFO  09:12:00,398 - ==============================================================
INFO  09:12:50,916 - Obrada ulaznog fajla test\program.mj
INFO  09:12:51,000 - #2 program
INFO  09:12:51,000 - #8 Program
INFO  09:12:51,000 - #5 const
INFO  09:12:51,001 - #8 int
INFO  09:12:51,001 - #8 c
INFO  09:12:51,002 - #24 =
INFO  09:12:51,002 - #9 13
INFO  09:12:51,002 - #28 ,
INFO  09:12:51,003 - #8 d
INFO  09:12:51,003 - #24 =
INFO  09:12:51,003 - #9 99
INFO  09:12:51,003 - #27 ;
INFO  09:12:51,003 - #8 int
INFO  09:12:51,005 - #8 e
INFO  09:12:51,005 - #27 ;
INFO  09:12:51,006 - #20 {
INFO  09:12:51,008 - #6 void
INFO  09:12:51,008 - #8 main
INFO  09:12:51,008 - #29 (
INFO  09:12:51,009 - #30 )
INFO  09:12:51,009 - #20 {
INFO  09:12:51,009 - #31 if
INFO  09:12:51,009 - #29 (
INFO  09:12:51,009 - #12 false
INFO  09:12:51,009 - #30 )
INFO  09:12:51,011 - #20 {
INFO  09:12:51,011 - #3 print
INFO  09:12:51,011 - #29 (
INFO  09:12:51,011 - #9 65
INFO  09:12:51,011 - #30 )
INFO  09:12:51,011 - #27 ;
INFO  09:12:51,011 - #21 }
INFO  09:12:51,012 - #3 print
INFO  09:12:51,012 - #29 (
INFO  09:12:51,012 - #9 77
INFO  09:12:51,012 - #30 )
INFO  09:12:51,012 - #27 ;
INFO  09:12:51,012 - #21 }
INFO  09:12:51,013 - #21 }
INFO  09:12:51,013 - =====================SINTAKSNO_STABLO=========================
INFO  09:12:51,014 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:12:51,015 - ==============================================================
INFO  09:12:51,032 - Pocetak obrade programa Program na liniji 1
INFO  09:12:51,032 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:12:51,033 - Deklarisana konstanta c na liniji 2
INFO  09:12:51,034 - Deklarisana konstanta d na liniji 2
INFO  09:12:51,034 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:12:51,034 - Deklarisana promenljiva e na liniji 3
INFO  09:12:51,035 - Pocetak obrade metode main na liniji 5
INFO  09:12:51,035 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:12:51,035 - Zavrsetak obrade programa Program na liniji 1
INFO  09:12:51,036 - ======================TABELA_SIMBOLA==========================
INFO  09:12:51,036 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:12:51,036 - ==============================================================
INFO  09:12:51,036 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:12:51,037 - ==============================================================
INFO  09:12:51,037 - ======================GENERISANJE_KODA========================
INFO  09:12:51,041 - class rs.ac.bg.etf.pp1.ast.Stmt_if
INFO  09:12:51,041 - 9
INFO  09:12:51,041 - class rs.ac.bg.etf.pp1.ast.Meth_void_decl
INFO  09:12:51,043 - Generisanje koda uspesno zavrseno!
INFO  09:12:51,043 - Generisanje izlaznog fajla test\program.obj
INFO  09:12:51,043 - ==============================================================
INFO  09:12:52,764 - Obrada ulaznog fajla test\program.mj
INFO  09:12:52,901 - #2 program
INFO  09:12:52,901 - #8 Program
INFO  09:12:52,901 - #5 const
INFO  09:12:52,903 - #8 int
INFO  09:12:52,903 - #8 c
INFO  09:12:52,904 - #24 =
INFO  09:12:52,905 - #9 13
INFO  09:12:52,905 - #28 ,
INFO  09:12:52,907 - #8 d
INFO  09:12:52,907 - #24 =
INFO  09:12:52,907 - #9 99
INFO  09:12:52,907 - #27 ;
INFO  09:12:52,908 - #8 int
INFO  09:12:52,910 - #8 e
INFO  09:12:52,910 - #27 ;
INFO  09:12:52,910 - #20 {
INFO  09:12:52,912 - #6 void
INFO  09:12:52,912 - #8 main
INFO  09:12:52,912 - #29 (
INFO  09:12:52,914 - #30 )
INFO  09:12:52,914 - #20 {
INFO  09:12:52,914 - #31 if
INFO  09:12:52,915 - #29 (
INFO  09:12:52,915 - #12 false
INFO  09:12:52,915 - #30 )
INFO  09:12:52,916 - #20 {
INFO  09:12:52,917 - #3 print
INFO  09:12:52,917 - #29 (
INFO  09:12:52,917 - #9 65
INFO  09:12:52,917 - #30 )
INFO  09:12:52,917 - #27 ;
INFO  09:12:52,917 - #21 }
INFO  09:12:52,918 - #3 print
INFO  09:12:52,918 - #29 (
INFO  09:12:52,918 - #9 77
INFO  09:12:52,918 - #30 )
INFO  09:12:52,918 - #27 ;
INFO  09:12:52,919 - #21 }
INFO  09:12:52,919 - #21 }
INFO  09:12:52,920 - =====================SINTAKSNO_STABLO=========================
INFO  09:12:52,922 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:12:52,923 - ==============================================================
INFO  09:12:52,945 - Pocetak obrade programa Program na liniji 1
INFO  09:12:52,946 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:12:52,947 - Deklarisana konstanta c na liniji 2
INFO  09:12:52,947 - Deklarisana konstanta d na liniji 2
INFO  09:12:52,948 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:12:52,948 - Deklarisana promenljiva e na liniji 3
INFO  09:12:52,949 - Pocetak obrade metode main na liniji 5
INFO  09:12:52,949 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:12:52,950 - Zavrsetak obrade programa Program na liniji 1
INFO  09:12:52,950 - ======================TABELA_SIMBOLA==========================
INFO  09:12:52,950 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:12:52,951 - ==============================================================
INFO  09:12:52,951 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:12:52,951 - ==============================================================
INFO  09:12:52,951 - ======================GENERISANJE_KODA========================
INFO  09:12:52,976 - class rs.ac.bg.etf.pp1.ast.Stmt_if
INFO  09:13:19,278 - 9
INFO  09:13:37,666 - class rs.ac.bg.etf.pp1.ast.Meth_void_decl
INFO  09:13:51,468 - Obrada ulaznog fajla test\program.mj
INFO  09:13:51,565 - #2 program
INFO  09:13:51,565 - #8 Program
INFO  09:13:51,565 - #5 const
INFO  09:13:51,566 - #8 int
INFO  09:13:51,566 - #8 c
INFO  09:13:51,568 - #24 =
INFO  09:13:51,568 - #9 13
INFO  09:13:51,568 - #28 ,
INFO  09:13:51,570 - #8 d
INFO  09:13:51,570 - #24 =
INFO  09:13:51,570 - #9 99
INFO  09:13:51,570 - #27 ;
INFO  09:13:51,570 - #8 int
INFO  09:13:51,572 - #8 e
INFO  09:13:51,572 - #27 ;
INFO  09:13:51,572 - #20 {
INFO  09:13:51,573 - #6 void
INFO  09:13:51,574 - #8 main
INFO  09:13:51,574 - #29 (
INFO  09:13:51,575 - #30 )
INFO  09:13:51,575 - #20 {
INFO  09:13:51,575 - #31 if
INFO  09:13:51,575 - #29 (
INFO  09:13:51,575 - #12 false
INFO  09:13:51,575 - #30 )
INFO  09:13:51,576 - #20 {
INFO  09:13:51,576 - #3 print
INFO  09:13:51,576 - #29 (
INFO  09:13:51,576 - #9 65
INFO  09:13:51,577 - #30 )
INFO  09:13:51,577 - #27 ;
INFO  09:13:51,577 - #21 }
INFO  09:13:51,577 - #3 print
INFO  09:13:51,578 - #29 (
INFO  09:13:51,578 - #9 77
INFO  09:13:51,578 - #30 )
INFO  09:13:51,578 - #27 ;
INFO  09:13:51,578 - #21 }
INFO  09:13:51,578 - #21 }
INFO  09:13:51,579 - =====================SINTAKSNO_STABLO=========================
INFO  09:13:51,582 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:13:51,584 - ==============================================================
INFO  09:13:51,600 - Pocetak obrade programa Program na liniji 1
INFO  09:13:51,601 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:13:51,602 - Deklarisana konstanta c na liniji 2
INFO  09:13:51,602 - Deklarisana konstanta d na liniji 2
INFO  09:13:51,602 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:13:51,602 - Deklarisana promenljiva e na liniji 3
INFO  09:13:51,604 - Pocetak obrade metode main na liniji 5
INFO  09:13:51,604 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:13:51,604 - Zavrsetak obrade programa Program na liniji 1
INFO  09:13:51,604 - ======================TABELA_SIMBOLA==========================
INFO  09:13:51,605 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:13:51,605 - ==============================================================
INFO  09:13:51,605 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:13:51,605 - ==============================================================
INFO  09:13:51,605 - ======================GENERISANJE_KODA========================
INFO  09:13:51,610 - class rs.ac.bg.etf.pp1.ast.Stmt_if
INFO  09:13:51,610 - 9
INFO  09:13:51,610 - class rs.ac.bg.etf.pp1.ast.Meth_void_decl
INFO  09:13:51,613 - Generisanje koda uspesno zavrseno!
INFO  09:13:51,614 - Generisanje izlaznog fajla test\program.obj
INFO  09:13:51,614 - ==============================================================
INFO  09:14:42,580 - Obrada ulaznog fajla test\program.mj
INFO  09:14:42,663 - #2 program
INFO  09:14:42,663 - #8 Program
INFO  09:14:42,663 - #5 const
INFO  09:14:42,664 - #8 int
INFO  09:14:42,664 - #8 c
INFO  09:14:42,665 - #24 =
INFO  09:14:42,665 - #9 13
INFO  09:14:42,665 - #28 ,
INFO  09:14:42,666 - #8 d
INFO  09:14:42,666 - #24 =
INFO  09:14:42,666 - #9 99
INFO  09:14:42,666 - #27 ;
INFO  09:14:42,667 - #8 int
INFO  09:14:42,668 - #8 e
INFO  09:14:42,668 - #27 ;
INFO  09:14:42,668 - #20 {
INFO  09:14:42,669 - #6 void
INFO  09:14:42,669 - #8 main
INFO  09:14:42,669 - #29 (
INFO  09:14:42,670 - #30 )
INFO  09:14:42,670 - #20 {
INFO  09:14:42,670 - #31 if
INFO  09:14:42,671 - #29 (
INFO  09:14:42,671 - #12 false
INFO  09:14:42,671 - #30 )
INFO  09:14:42,673 - #20 {
INFO  09:14:42,673 - #3 print
INFO  09:14:42,673 - #29 (
INFO  09:14:42,673 - #9 65
INFO  09:14:42,674 - #30 )
INFO  09:14:42,674 - #27 ;
INFO  09:14:42,674 - #21 }
INFO  09:14:42,675 - #3 print
INFO  09:14:42,675 - #29 (
INFO  09:14:42,675 - #9 77
INFO  09:14:42,675 - #30 )
INFO  09:14:42,675 - #27 ;
INFO  09:14:42,675 - #21 }
INFO  09:14:42,675 - #21 }
INFO  09:14:42,676 - =====================SINTAKSNO_STABLO=========================
INFO  09:14:42,677 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:14:42,678 - ==============================================================
INFO  09:14:42,692 - Pocetak obrade programa Program na liniji 1
INFO  09:14:42,692 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:14:42,693 - Deklarisana konstanta c na liniji 2
INFO  09:14:42,694 - Deklarisana konstanta d na liniji 2
INFO  09:14:42,694 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:14:42,694 - Deklarisana promenljiva e na liniji 3
INFO  09:14:42,695 - Pocetak obrade metode main na liniji 5
INFO  09:14:42,695 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:14:42,695 - Zavrsetak obrade programa Program na liniji 1
INFO  09:14:42,695 - ======================TABELA_SIMBOLA==========================
INFO  09:14:42,696 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:14:42,696 - ==============================================================
INFO  09:14:42,696 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:14:42,696 - ==============================================================
INFO  09:14:42,697 - ======================GENERISANJE_KODA========================
INFO  09:14:42,701 - class rs.ac.bg.etf.pp1.ast.Stmt_if
INFO  09:14:42,701 - 9
INFO  09:14:42,701 - class rs.ac.bg.etf.pp1.ast.Meth_void_decl
INFO  09:14:42,702 - Generisanje koda uspesno zavrseno!
INFO  09:14:42,703 - Generisanje izlaznog fajla test\program.obj
INFO  09:14:42,703 - ==============================================================
INFO  09:16:31,434 - Obrada ulaznog fajla test\program.mj
INFO  09:16:31,522 - #2 program
INFO  09:16:31,522 - #8 Program
INFO  09:16:31,522 - #5 const
INFO  09:16:31,523 - #8 int
INFO  09:16:31,523 - #8 c
INFO  09:16:31,524 - #24 =
INFO  09:16:31,524 - #9 13
INFO  09:16:31,524 - #28 ,
INFO  09:16:31,525 - #8 d
INFO  09:16:31,526 - #24 =
INFO  09:16:31,526 - #9 99
INFO  09:16:31,526 - #27 ;
INFO  09:16:31,526 - #8 int
INFO  09:16:31,527 - #8 e
INFO  09:16:31,527 - #27 ;
INFO  09:16:31,528 - #20 {
INFO  09:16:31,530 - #6 void
INFO  09:16:31,530 - #8 main
INFO  09:16:31,531 - #29 (
INFO  09:16:31,532 - #30 )
INFO  09:16:31,532 - #20 {
INFO  09:16:31,532 - #31 if
INFO  09:16:31,532 - #29 (
INFO  09:16:31,533 - #12 false
INFO  09:16:31,533 - #30 )
INFO  09:16:31,534 - #20 {
INFO  09:16:31,534 - #3 print
INFO  09:16:31,534 - #29 (
INFO  09:16:31,534 - #9 65
INFO  09:16:31,535 - #30 )
INFO  09:16:31,535 - #27 ;
INFO  09:16:31,535 - #21 }
INFO  09:16:31,535 - #3 print
INFO  09:16:31,536 - #29 (
INFO  09:16:31,536 - #9 77
INFO  09:16:31,536 - #30 )
INFO  09:16:31,536 - #27 ;
INFO  09:16:31,536 - #21 }
INFO  09:16:31,536 - #21 }
INFO  09:16:31,537 - =====================SINTAKSNO_STABLO=========================
INFO  09:16:31,539 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:16:31,540 - ==============================================================
INFO  09:16:31,558 - Pocetak obrade programa Program na liniji 1
INFO  09:16:31,558 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:16:31,559 - Deklarisana konstanta c na liniji 2
INFO  09:16:31,560 - Deklarisana konstanta d na liniji 2
INFO  09:16:31,560 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:16:31,560 - Deklarisana promenljiva e na liniji 3
INFO  09:16:31,561 - Pocetak obrade metode main na liniji 5
INFO  09:16:31,561 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:16:31,561 - Zavrsetak obrade programa Program na liniji 1
INFO  09:16:31,562 - ======================TABELA_SIMBOLA==========================
INFO  09:16:31,562 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:16:31,563 - ==============================================================
INFO  09:16:31,563 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:16:31,563 - ==============================================================
INFO  09:16:31,563 - ======================GENERISANJE_KODA========================
INFO  09:16:31,567 - class rs.ac.bg.etf.pp1.ast.Stmt_if
INFO  09:16:31,567 - 9
INFO  09:16:31,567 - class rs.ac.bg.etf.pp1.ast.Meth_void_decl
INFO  09:16:31,569 - Generisanje koda uspesno zavrseno!
INFO  09:16:31,570 - Generisanje izlaznog fajla test\program.obj
INFO  09:16:31,570 - ==============================================================
INFO  09:16:59,999 - Obrada ulaznog fajla test\program.mj
INFO  09:17:00,079 - #2 program
INFO  09:17:00,079 - #8 Program
INFO  09:17:00,080 - #5 const
INFO  09:17:00,081 - #8 int
INFO  09:17:00,081 - #8 c
INFO  09:17:00,082 - #24 =
INFO  09:17:00,082 - #9 13
INFO  09:17:00,082 - #28 ,
INFO  09:17:00,083 - #8 d
INFO  09:17:00,083 - #24 =
INFO  09:17:00,083 - #9 99
INFO  09:17:00,083 - #27 ;
INFO  09:17:00,084 - #8 int
INFO  09:17:00,085 - #8 e
INFO  09:17:00,085 - #27 ;
INFO  09:17:00,085 - #20 {
INFO  09:17:00,087 - #6 void
INFO  09:17:00,087 - #8 main
INFO  09:17:00,087 - #29 (
INFO  09:17:00,088 - #30 )
INFO  09:17:00,088 - #20 {
INFO  09:17:00,088 - #31 if
INFO  09:17:00,088 - #29 (
INFO  09:17:00,089 - #12 false
INFO  09:17:00,089 - #30 )
INFO  09:17:00,091 - #20 {
INFO  09:17:00,091 - #3 print
INFO  09:17:00,091 - #29 (
INFO  09:17:00,091 - #9 65
INFO  09:17:00,091 - #30 )
INFO  09:17:00,092 - #27 ;
INFO  09:17:00,092 - #21 }
INFO  09:17:00,093 - #3 print
INFO  09:17:00,093 - #29 (
INFO  09:17:00,093 - #9 77
INFO  09:17:00,094 - #30 )
INFO  09:17:00,094 - #27 ;
INFO  09:17:00,094 - #21 }
INFO  09:17:00,094 - #21 }
INFO  09:17:00,095 - =====================SINTAKSNO_STABLO=========================
INFO  09:17:00,097 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:17:00,097 - ==============================================================
INFO  09:17:00,112 - Pocetak obrade programa Program na liniji 1
INFO  09:17:00,112 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:17:00,113 - Deklarisana konstanta c na liniji 2
INFO  09:17:00,113 - Deklarisana konstanta d na liniji 2
INFO  09:17:00,113 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:17:00,114 - Deklarisana promenljiva e na liniji 3
INFO  09:17:00,114 - Pocetak obrade metode main na liniji 5
INFO  09:17:00,115 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:17:00,115 - Zavrsetak obrade programa Program na liniji 1
INFO  09:17:00,115 - ======================TABELA_SIMBOLA==========================
INFO  09:17:00,115 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:17:00,115 - ==============================================================
INFO  09:17:00,116 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:17:00,116 - ==============================================================
INFO  09:17:00,116 - ======================GENERISANJE_KODA========================
INFO  09:17:00,119 - class rs.ac.bg.etf.pp1.ast.Stmt_if
INFO  09:17:00,119 - 9
INFO  09:17:00,119 - class rs.ac.bg.etf.pp1.ast.Meth_void_decl
INFO  09:17:00,121 - Generisanje koda uspesno zavrseno!
INFO  09:17:00,122 - Generisanje izlaznog fajla test\program.obj
INFO  09:17:00,122 - ==============================================================
INFO  09:18:29,712 - Obrada ulaznog fajla test\program.mj
INFO  09:18:29,798 - #2 program
INFO  09:18:29,798 - #8 Program
INFO  09:18:29,798 - #5 const
INFO  09:18:29,800 - #8 int
INFO  09:18:29,800 - #8 c
INFO  09:18:29,801 - #24 =
INFO  09:18:29,802 - #9 13
INFO  09:18:29,802 - #28 ,
INFO  09:18:29,803 - #8 d
INFO  09:18:29,803 - #24 =
INFO  09:18:29,803 - #9 99
INFO  09:18:29,803 - #27 ;
INFO  09:18:29,803 - #8 int
INFO  09:18:29,806 - #8 e
INFO  09:18:29,806 - #27 ;
INFO  09:18:29,806 - #20 {
INFO  09:18:29,809 - #6 void
INFO  09:18:29,809 - #8 main
INFO  09:18:29,809 - #29 (
INFO  09:18:29,810 - #30 )
INFO  09:18:29,810 - #20 {
INFO  09:18:29,811 - #31 if
INFO  09:18:29,811 - #29 (
INFO  09:18:29,811 - #12 false
INFO  09:18:29,811 - #30 )
INFO  09:18:29,815 - #20 {
INFO  09:18:29,815 - #3 print
INFO  09:18:29,815 - #29 (
INFO  09:18:29,815 - #9 65
INFO  09:18:29,815 - #30 )
INFO  09:18:29,816 - #27 ;
INFO  09:18:29,816 - #21 }
INFO  09:18:29,816 - #3 print
INFO  09:18:29,816 - #29 (
INFO  09:18:29,816 - #9 77
INFO  09:18:29,816 - #30 )
INFO  09:18:29,817 - #27 ;
INFO  09:18:29,817 - #21 }
INFO  09:18:29,817 - #21 }
INFO  09:18:29,818 - =====================SINTAKSNO_STABLO=========================
INFO  09:18:29,819 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:18:29,820 - ==============================================================
INFO  09:18:29,834 - Pocetak obrade programa Program na liniji 1
INFO  09:18:29,834 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:18:29,835 - Deklarisana konstanta c na liniji 2
INFO  09:18:29,835 - Deklarisana konstanta d na liniji 2
INFO  09:18:29,835 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:18:29,835 - Deklarisana promenljiva e na liniji 3
INFO  09:18:29,836 - Pocetak obrade metode main na liniji 5
INFO  09:18:29,836 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:18:29,836 - Zavrsetak obrade programa Program na liniji 1
INFO  09:18:29,837 - ======================TABELA_SIMBOLA==========================
INFO  09:18:29,837 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:18:29,837 - ==============================================================
INFO  09:18:29,837 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:18:29,837 - ==============================================================
INFO  09:18:29,838 - ======================GENERISANJE_KODA========================
INFO  09:18:29,841 - class rs.ac.bg.etf.pp1.ast.Stmt_if
INFO  09:18:29,841 - 9
INFO  09:18:29,841 - class rs.ac.bg.etf.pp1.ast.Meth_void_decl
INFO  09:18:29,842 - Generisanje koda uspesno zavrseno!
INFO  09:18:29,843 - Generisanje izlaznog fajla test\program.obj
INFO  09:18:29,843 - ==============================================================
INFO  09:19:33,302 - Obrada ulaznog fajla test\program.mj
INFO  09:19:33,385 - #2 program
INFO  09:19:33,385 - #8 Program
INFO  09:19:33,386 - #5 const
INFO  09:19:33,387 - #8 int
INFO  09:19:33,387 - #8 c
INFO  09:19:33,388 - #24 =
INFO  09:19:33,388 - #9 13
INFO  09:19:33,388 - #28 ,
INFO  09:19:33,389 - #8 d
INFO  09:19:33,389 - #24 =
INFO  09:19:33,389 - #9 99
INFO  09:19:33,389 - #27 ;
INFO  09:19:33,390 - #8 int
INFO  09:19:33,391 - #8 e
INFO  09:19:33,391 - #27 ;
INFO  09:19:33,391 - #20 {
INFO  09:19:33,392 - #6 void
INFO  09:19:33,392 - #8 main
INFO  09:19:33,392 - #29 (
INFO  09:19:33,393 - #30 )
INFO  09:19:33,393 - #20 {
INFO  09:19:33,393 - #31 if
INFO  09:19:33,393 - #29 (
INFO  09:19:33,393 - #12 false
INFO  09:19:33,394 - #30 )
INFO  09:19:33,395 - #20 {
INFO  09:19:33,395 - #3 print
INFO  09:19:33,395 - #29 (
INFO  09:19:33,395 - #9 65
INFO  09:19:33,395 - #30 )
INFO  09:19:33,395 - #27 ;
INFO  09:19:33,395 - #21 }
INFO  09:19:33,396 - #3 print
INFO  09:19:33,396 - #29 (
INFO  09:19:33,396 - #9 77
INFO  09:19:33,396 - #30 )
INFO  09:19:33,396 - #27 ;
INFO  09:19:33,396 - #21 }
INFO  09:19:33,396 - #21 }
INFO  09:19:33,397 - =====================SINTAKSNO_STABLO=========================
INFO  09:19:33,399 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:19:33,400 - ==============================================================
INFO  09:19:33,417 - Pocetak obrade programa Program na liniji 1
INFO  09:19:33,417 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:19:33,418 - Deklarisana konstanta c na liniji 2
INFO  09:19:33,418 - Deklarisana konstanta d na liniji 2
INFO  09:19:33,418 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:19:33,419 - Deklarisana promenljiva e na liniji 3
INFO  09:19:33,419 - Pocetak obrade metode main na liniji 5
INFO  09:19:33,420 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:19:33,420 - Zavrsetak obrade programa Program na liniji 1
INFO  09:19:33,420 - ======================TABELA_SIMBOLA==========================
INFO  09:19:33,421 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:19:33,421 - ==============================================================
INFO  09:19:33,421 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:19:33,421 - ==============================================================
INFO  09:19:33,421 - ======================GENERISANJE_KODA========================
INFO  09:19:33,425 - 9
INFO  09:19:33,425 - 7
INFO  09:19:33,427 - Generisanje koda uspesno zavrseno!
INFO  09:19:33,427 - Generisanje izlaznog fajla test\program.obj
INFO  09:19:33,427 - ==============================================================
INFO  09:21:38,700 - Obrada ulaznog fajla test\program.mj
INFO  09:21:38,784 - #2 program
INFO  09:21:38,784 - #8 Program
INFO  09:21:38,785 - #5 const
INFO  09:21:38,786 - #8 int
INFO  09:21:38,786 - #8 c
INFO  09:21:38,787 - #24 =
INFO  09:21:38,787 - #9 13
INFO  09:21:38,787 - #28 ,
INFO  09:21:38,789 - #8 d
INFO  09:21:38,789 - #24 =
INFO  09:21:38,789 - #9 99
INFO  09:21:38,789 - #27 ;
INFO  09:21:38,789 - #8 int
INFO  09:21:38,791 - #8 e
INFO  09:21:38,791 - #27 ;
INFO  09:21:38,791 - #20 {
INFO  09:21:38,793 - #6 void
INFO  09:21:38,793 - #8 main
INFO  09:21:38,793 - #29 (
INFO  09:21:38,794 - #30 )
INFO  09:21:38,795 - #20 {
INFO  09:21:38,795 - #31 if
INFO  09:21:38,795 - #29 (
INFO  09:21:38,795 - #12 false
INFO  09:21:38,795 - #30 )
INFO  09:21:38,796 - #20 {
INFO  09:21:38,796 - #3 print
INFO  09:21:38,796 - #29 (
INFO  09:21:38,796 - #9 65
INFO  09:21:38,796 - #30 )
INFO  09:21:38,797 - #27 ;
INFO  09:21:38,797 - #21 }
INFO  09:21:38,797 - #3 print
INFO  09:21:38,797 - #29 (
INFO  09:21:38,798 - #9 77
INFO  09:21:38,798 - #30 )
INFO  09:21:38,798 - #27 ;
INFO  09:21:38,798 - #21 }
INFO  09:21:38,798 - #21 }
INFO  09:21:38,799 - =====================SINTAKSNO_STABLO=========================
INFO  09:21:38,800 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:21:38,801 - ==============================================================
INFO  09:21:38,820 - Pocetak obrade programa Program na liniji 1
INFO  09:21:38,821 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:21:38,822 - Deklarisana konstanta c na liniji 2
INFO  09:21:38,822 - Deklarisana konstanta d na liniji 2
INFO  09:21:38,822 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:21:38,822 - Deklarisana promenljiva e na liniji 3
INFO  09:21:38,822 - Pocetak obrade metode main na liniji 5
INFO  09:21:38,823 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:21:38,823 - Zavrsetak obrade programa Program na liniji 1
INFO  09:21:38,823 - ======================TABELA_SIMBOLA==========================
INFO  09:21:38,823 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:21:38,824 - ==============================================================
INFO  09:21:38,824 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:21:38,824 - ==============================================================
INFO  09:21:38,824 - ======================GENERISANJE_KODA========================
INFO  09:21:38,827 - 9
INFO  09:21:38,827 - 7
INFO  09:21:38,829 - Generisanje koda uspesno zavrseno!
INFO  09:21:38,829 - Generisanje izlaznog fajla test\program.obj
INFO  09:21:38,829 - ==============================================================
INFO  09:22:08,924 - Obrada ulaznog fajla test\program.mj
INFO  09:22:09,037 - #2 program
INFO  09:22:09,038 - #8 Program
INFO  09:22:09,038 - #5 const
INFO  09:22:09,039 - #8 int
INFO  09:22:09,039 - #8 c
INFO  09:22:09,040 - #24 =
INFO  09:22:09,040 - #9 13
INFO  09:22:09,040 - #28 ,
INFO  09:22:09,042 - #8 d
INFO  09:22:09,042 - #24 =
INFO  09:22:09,042 - #9 99
INFO  09:22:09,042 - #27 ;
INFO  09:22:09,043 - #8 int
INFO  09:22:09,044 - #8 e
INFO  09:22:09,044 - #27 ;
INFO  09:22:09,045 - #20 {
INFO  09:22:09,046 - #6 void
INFO  09:22:09,046 - #8 main
INFO  09:22:09,046 - #29 (
INFO  09:22:09,047 - #30 )
INFO  09:22:09,047 - #20 {
INFO  09:22:09,047 - #31 if
INFO  09:22:09,048 - #29 (
INFO  09:22:09,048 - #12 false
INFO  09:22:09,048 - #30 )
INFO  09:22:09,049 - #20 {
INFO  09:22:09,049 - #3 print
INFO  09:22:09,049 - #29 (
INFO  09:22:09,049 - #9 65
INFO  09:22:09,050 - #30 )
INFO  09:22:09,050 - #27 ;
INFO  09:22:09,050 - #21 }
INFO  09:22:09,050 - #3 print
INFO  09:22:09,051 - #29 (
INFO  09:22:09,051 - #9 77
INFO  09:22:09,051 - #30 )
INFO  09:22:09,051 - #27 ;
INFO  09:22:09,051 - #21 }
INFO  09:22:09,051 - #21 }
INFO  09:22:09,054 - =====================SINTAKSNO_STABLO=========================
INFO  09:22:09,055 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:22:09,056 - ==============================================================
INFO  09:22:09,073 - Pocetak obrade programa Program na liniji 1
INFO  09:22:09,073 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:22:09,074 - Deklarisana konstanta c na liniji 2
INFO  09:22:09,074 - Deklarisana konstanta d na liniji 2
INFO  09:22:09,074 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:22:09,074 - Deklarisana promenljiva e na liniji 3
INFO  09:22:09,075 - Pocetak obrade metode main na liniji 5
INFO  09:22:09,076 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:22:09,076 - Zavrsetak obrade programa Program na liniji 1
INFO  09:22:09,076 - ======================TABELA_SIMBOLA==========================
INFO  09:22:09,077 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:22:09,077 - ==============================================================
INFO  09:22:09,077 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:22:09,078 - ==============================================================
INFO  09:22:09,078 - ======================GENERISANJE_KODA========================
INFO  09:22:09,082 - class rs.ac.bg.etf.pp1.ast.Stmt_if
INFO  09:22:09,082 - 9
INFO  09:22:09,082 - class rs.ac.bg.etf.pp1.ast.Meth_void_decl
INFO  09:22:09,084 - Generisanje koda uspesno zavrseno!
INFO  09:22:09,084 - Generisanje izlaznog fajla test\program.obj
INFO  09:22:09,084 - ==============================================================
INFO  09:23:39,235 - Obrada ulaznog fajla test\program.mj
INFO  09:23:39,318 - #2 program
INFO  09:23:39,318 - #8 Program
INFO  09:23:39,318 - #5 const
INFO  09:23:39,319 - #8 int
INFO  09:23:39,319 - #8 c
INFO  09:23:39,319 - #24 =
INFO  09:23:39,320 - #9 13
INFO  09:23:39,320 - #28 ,
INFO  09:23:39,321 - #8 d
INFO  09:23:39,321 - #24 =
INFO  09:23:39,321 - #9 99
INFO  09:23:39,321 - #27 ;
INFO  09:23:39,321 - #8 int
INFO  09:23:39,323 - #8 e
INFO  09:23:39,323 - #27 ;
INFO  09:23:39,324 - #20 {
INFO  09:23:39,325 - #6 void
INFO  09:23:39,325 - #8 main
INFO  09:23:39,325 - #29 (
INFO  09:23:39,326 - #30 )
INFO  09:23:39,326 - #20 {
INFO  09:23:39,326 - #31 if
INFO  09:23:39,327 - #29 (
INFO  09:23:39,327 - #12 false
INFO  09:23:39,327 - #30 )
INFO  09:23:39,329 - #20 {
INFO  09:23:39,329 - #3 print
INFO  09:23:39,329 - #29 (
INFO  09:23:39,329 - #9 65
INFO  09:23:39,329 - #30 )
INFO  09:23:39,329 - #27 ;
INFO  09:23:39,329 - #21 }
INFO  09:23:39,330 - #3 print
INFO  09:23:39,330 - #29 (
INFO  09:23:39,330 - #9 77
INFO  09:23:39,330 - #30 )
INFO  09:23:39,330 - #27 ;
INFO  09:23:39,331 - #21 }
INFO  09:23:39,331 - #21 }
INFO  09:23:39,332 - =====================SINTAKSNO_STABLO=========================
INFO  09:23:39,333 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:23:39,334 - ==============================================================
INFO  09:23:39,351 - Pocetak obrade programa Program na liniji 1
INFO  09:23:39,351 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:23:39,352 - Deklarisana konstanta c na liniji 2
INFO  09:23:39,352 - Deklarisana konstanta d na liniji 2
INFO  09:23:39,352 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:23:39,352 - Deklarisana promenljiva e na liniji 3
INFO  09:23:39,353 - Pocetak obrade metode main na liniji 5
INFO  09:23:39,353 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:23:39,353 - Zavrsetak obrade programa Program na liniji 1
INFO  09:23:39,353 - ======================TABELA_SIMBOLA==========================
INFO  09:23:39,354 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:23:39,354 - ==============================================================
INFO  09:23:39,354 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:23:39,354 - ==============================================================
INFO  09:23:39,354 - ======================GENERISANJE_KODA========================
INFO  09:23:39,358 - class rs.ac.bg.etf.pp1.ast.Stmt_if
INFO  09:23:39,358 - 9
INFO  09:23:39,358 - class rs.ac.bg.etf.pp1.ast.Meth_void_decl
INFO  09:23:39,360 - Generisanje koda uspesno zavrseno!
INFO  09:23:39,360 - Generisanje izlaznog fajla test\program.obj
INFO  09:23:39,360 - ==============================================================
INFO  09:27:01,167 - Obrada ulaznog fajla test\program.mj
INFO  09:27:01,261 - #2 program
INFO  09:27:01,261 - #8 Program
INFO  09:27:01,261 - #5 const
INFO  09:27:01,262 - #8 int
INFO  09:27:01,262 - #8 c
INFO  09:27:01,263 - #24 =
INFO  09:27:01,263 - #9 13
INFO  09:27:01,263 - #28 ,
INFO  09:27:01,264 - #8 d
INFO  09:27:01,265 - #24 =
INFO  09:27:01,265 - #9 99
INFO  09:27:01,265 - #27 ;
INFO  09:27:01,265 - #8 int
INFO  09:27:01,266 - #8 e
INFO  09:27:01,267 - #27 ;
INFO  09:27:01,267 - #20 {
INFO  09:27:01,268 - #6 void
INFO  09:27:01,268 - #8 main
INFO  09:27:01,269 - #29 (
INFO  09:27:01,269 - #30 )
INFO  09:27:01,270 - #20 {
INFO  09:27:01,270 - #31 if
INFO  09:27:01,270 - #29 (
INFO  09:27:01,270 - #12 false
INFO  09:27:01,270 - #30 )
INFO  09:27:01,271 - #20 {
INFO  09:27:01,271 - #3 print
INFO  09:27:01,271 - #29 (
INFO  09:27:01,272 - #9 65
INFO  09:27:01,273 - #30 )
INFO  09:27:01,273 - #27 ;
INFO  09:27:01,274 - #21 }
INFO  09:27:01,275 - #3 print
INFO  09:27:01,275 - #29 (
INFO  09:27:01,275 - #9 77
INFO  09:27:01,275 - #30 )
INFO  09:27:01,275 - #27 ;
INFO  09:27:01,276 - #21 }
INFO  09:27:01,276 - #21 }
INFO  09:27:01,277 - =====================SINTAKSNO_STABLO=========================
INFO  09:27:01,280 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:27:01,280 - ==============================================================
INFO  09:27:01,297 - Pocetak obrade programa Program na liniji 1
INFO  09:27:01,297 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:27:01,298 - Deklarisana konstanta c na liniji 2
INFO  09:27:01,298 - Deklarisana konstanta d na liniji 2
INFO  09:27:01,298 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:27:01,298 - Deklarisana promenljiva e na liniji 3
INFO  09:27:01,299 - Pocetak obrade metode main na liniji 5
INFO  09:27:01,300 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:27:01,300 - Zavrsetak obrade programa Program na liniji 1
INFO  09:27:01,300 - ======================TABELA_SIMBOLA==========================
INFO  09:27:01,300 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:27:01,301 - ==============================================================
INFO  09:27:01,301 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:27:01,301 - ==============================================================
INFO  09:27:01,301 - ======================GENERISANJE_KODA========================
INFO  09:27:01,304 - class rs.ac.bg.etf.pp1.ast.Stmt_if
INFO  09:27:01,305 - 9
INFO  09:27:01,305 - class rs.ac.bg.etf.pp1.ast.Meth_void_decl
INFO  09:27:01,307 - Generisanje koda uspesno zavrseno!
INFO  09:27:01,307 - Generisanje izlaznog fajla test\program.obj
INFO  09:27:01,307 - ==============================================================
INFO  09:27:28,472 - Obrada ulaznog fajla test\program.mj
INFO  09:27:28,554 - #2 program
INFO  09:27:28,554 - #8 Program
INFO  09:27:28,554 - #5 const
INFO  09:27:28,555 - #8 int
INFO  09:27:28,555 - #8 c
INFO  09:27:28,557 - #24 =
INFO  09:27:28,557 - #9 13
INFO  09:27:28,557 - #28 ,
INFO  09:27:28,560 - #8 d
INFO  09:27:28,560 - #24 =
INFO  09:27:28,560 - #9 99
INFO  09:27:28,560 - #27 ;
INFO  09:27:28,560 - #8 int
INFO  09:27:28,561 - #8 e
INFO  09:27:28,561 - #27 ;
INFO  09:27:28,562 - #20 {
INFO  09:27:28,563 - #6 void
INFO  09:27:28,563 - #8 main
INFO  09:27:28,563 - #29 (
INFO  09:27:28,564 - #30 )
INFO  09:27:28,564 - #20 {
INFO  09:27:28,564 - #31 if
INFO  09:27:28,564 - #29 (
INFO  09:27:28,564 - #12 false
INFO  09:27:28,564 - #30 )
INFO  09:27:28,565 - #20 {
INFO  09:27:28,566 - #3 print
INFO  09:27:28,566 - #29 (
INFO  09:27:28,566 - #9 65
INFO  09:27:28,566 - #30 )
INFO  09:27:28,566 - #27 ;
INFO  09:27:28,566 - #21 }
INFO  09:27:28,566 - #3 print
INFO  09:27:28,567 - #29 (
INFO  09:27:28,567 - #9 77
INFO  09:27:28,567 - #30 )
INFO  09:27:28,567 - #27 ;
INFO  09:27:28,567 - #21 }
INFO  09:27:28,567 - #21 }
INFO  09:27:28,568 - =====================SINTAKSNO_STABLO=========================
INFO  09:27:28,570 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:27:28,570 - ==============================================================
INFO  09:27:28,587 - Pocetak obrade programa Program na liniji 1
INFO  09:27:28,587 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:27:28,589 - Deklarisana konstanta c na liniji 2
INFO  09:27:28,590 - Deklarisana konstanta d na liniji 2
INFO  09:27:28,590 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:27:28,590 - Deklarisana promenljiva e na liniji 3
INFO  09:27:28,591 - Pocetak obrade metode main na liniji 5
INFO  09:27:28,591 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:27:28,591 - Zavrsetak obrade programa Program na liniji 1
INFO  09:27:28,592 - ======================TABELA_SIMBOLA==========================
INFO  09:27:28,592 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:27:28,592 - ==============================================================
INFO  09:27:28,593 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:27:28,593 - ==============================================================
INFO  09:27:28,593 - ======================GENERISANJE_KODA========================
INFO  09:27:28,596 - class rs.ac.bg.etf.pp1.ast.Stmt_if
INFO  09:27:28,597 - 9
INFO  09:27:28,597 - class rs.ac.bg.etf.pp1.ast.Meth_void_decl
INFO  09:27:28,598 - Generisanje koda uspesno zavrseno!
INFO  09:27:28,598 - Generisanje izlaznog fajla test\program.obj
INFO  09:27:28,598 - ==============================================================
INFO  09:28:52,550 - Obrada ulaznog fajla test\program.mj
INFO  09:28:52,638 - #2 program
INFO  09:28:52,638 - #8 Program
INFO  09:28:52,638 - #5 const
INFO  09:28:52,639 - #8 int
INFO  09:28:52,639 - #8 c
INFO  09:28:52,641 - #24 =
INFO  09:28:52,641 - #9 13
INFO  09:28:52,641 - #28 ,
INFO  09:28:52,642 - #8 d
INFO  09:28:52,642 - #24 =
INFO  09:28:52,643 - #9 99
INFO  09:28:52,643 - #27 ;
INFO  09:28:52,643 - #8 int
INFO  09:28:52,644 - #8 e
INFO  09:28:52,645 - #27 ;
INFO  09:28:52,646 - #20 {
INFO  09:28:52,648 - #6 void
INFO  09:28:52,649 - #8 main
INFO  09:28:52,649 - #29 (
INFO  09:28:52,650 - #30 )
INFO  09:28:52,650 - #20 {
INFO  09:28:52,651 - #31 if
INFO  09:28:52,651 - #29 (
INFO  09:28:52,651 - #12 false
INFO  09:28:52,651 - #30 )
INFO  09:28:52,654 - #20 {
INFO  09:28:52,654 - #3 print
INFO  09:28:52,655 - #29 (
INFO  09:28:52,655 - #9 65
INFO  09:28:52,655 - #30 )
INFO  09:28:52,655 - #27 ;
INFO  09:28:52,655 - #21 }
INFO  09:28:52,656 - #3 print
INFO  09:28:52,656 - #29 (
INFO  09:28:52,656 - #9 77
INFO  09:28:52,656 - #30 )
INFO  09:28:52,656 - #27 ;
INFO  09:28:52,656 - #21 }
INFO  09:28:52,657 - #21 }
INFO  09:28:52,658 - =====================SINTAKSNO_STABLO=========================
INFO  09:28:52,662 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:28:52,670 - ==============================================================
INFO  09:28:52,694 - Pocetak obrade programa Program na liniji 1
INFO  09:28:52,694 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:28:52,695 - Deklarisana konstanta c na liniji 2
INFO  09:28:52,695 - Deklarisana konstanta d na liniji 2
INFO  09:28:52,696 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:28:52,696 - Deklarisana promenljiva e na liniji 3
INFO  09:28:52,697 - Pocetak obrade metode main na liniji 5
INFO  09:28:52,697 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:28:52,697 - Zavrsetak obrade programa Program na liniji 1
INFO  09:28:52,697 - ======================TABELA_SIMBOLA==========================
INFO  09:28:52,698 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:28:52,698 - ==============================================================
INFO  09:28:52,698 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:28:52,698 - ==============================================================
INFO  09:28:52,698 - ======================GENERISANJE_KODA========================
INFO  09:28:52,703 - 4
INFO  09:28:52,705 - Generisanje koda uspesno zavrseno!
INFO  09:28:52,705 - Generisanje izlaznog fajla test\program.obj
INFO  09:28:52,705 - ==============================================================
INFO  09:35:34,097 - Obrada ulaznog fajla test\program.mj
INFO  09:35:34,181 - #2 program
INFO  09:35:34,181 - #8 Program
INFO  09:35:34,181 - #5 const
INFO  09:35:34,182 - #8 int
INFO  09:35:34,182 - #8 c
INFO  09:35:34,183 - #24 =
INFO  09:35:34,183 - #9 13
INFO  09:35:34,184 - #28 ,
INFO  09:35:34,185 - #8 d
INFO  09:35:34,185 - #24 =
INFO  09:35:34,185 - #9 99
INFO  09:35:34,185 - #27 ;
INFO  09:35:34,185 - #8 int
INFO  09:35:34,186 - #8 e
INFO  09:35:34,186 - #27 ;
INFO  09:35:34,187 - #20 {
INFO  09:35:34,189 - #6 void
INFO  09:35:34,189 - #8 main
INFO  09:35:34,189 - #29 (
INFO  09:35:34,190 - #30 )
INFO  09:35:34,190 - #20 {
INFO  09:35:34,190 - #31 if
INFO  09:35:34,190 - #29 (
INFO  09:35:34,190 - #12 false
INFO  09:35:34,191 - #30 )
INFO  09:35:34,192 - #20 {
INFO  09:35:34,192 - #3 print
INFO  09:35:34,192 - #29 (
INFO  09:35:34,192 - #9 65
INFO  09:35:34,193 - #30 )
INFO  09:35:34,193 - #27 ;
INFO  09:35:34,193 - #21 }
INFO  09:35:34,193 - #3 print
INFO  09:35:34,193 - #29 (
INFO  09:35:34,194 - #9 77
INFO  09:35:34,194 - #30 )
INFO  09:35:34,194 - #27 ;
INFO  09:35:34,194 - #21 }
INFO  09:35:34,194 - #21 }
INFO  09:35:34,195 - =====================SINTAKSNO_STABLO=========================
INFO  09:35:34,196 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:35:34,197 - ==============================================================
INFO  09:35:34,217 - Pocetak obrade programa Program na liniji 1
INFO  09:35:34,217 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:35:34,219 - Deklarisana konstanta c na liniji 2
INFO  09:35:34,219 - Deklarisana konstanta d na liniji 2
INFO  09:35:34,219 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:35:34,219 - Deklarisana promenljiva e na liniji 3
INFO  09:35:34,221 - Pocetak obrade metode main na liniji 5
INFO  09:35:34,221 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:35:34,221 - Zavrsetak obrade programa Program na liniji 1
INFO  09:35:34,221 - ======================TABELA_SIMBOLA==========================
INFO  09:35:34,222 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:35:34,222 - ==============================================================
INFO  09:35:34,222 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:35:34,222 - ==============================================================
INFO  09:35:34,222 - ======================GENERISANJE_KODA========================
INFO  09:35:34,227 - 4
INFO  09:35:34,227 - 0
INFO  09:35:34,227 - 0
INFO  09:35:34,229 - Generisanje koda uspesno zavrseno!
INFO  09:35:34,230 - Generisanje izlaznog fajla test\program.obj
INFO  09:35:34,230 - ==============================================================
INFO  09:36:24,831 - Obrada ulaznog fajla test\program.mj
INFO  09:36:24,987 - #2 program
INFO  09:36:24,987 - #8 Program
INFO  09:36:24,987 - #5 const
INFO  09:36:24,988 - #8 int
INFO  09:36:24,988 - #8 c
INFO  09:36:24,990 - #24 =
INFO  09:36:24,990 - #9 13
INFO  09:36:24,990 - #28 ,
INFO  09:36:24,992 - #8 d
INFO  09:36:24,992 - #24 =
INFO  09:36:24,992 - #9 99
INFO  09:36:24,992 - #27 ;
INFO  09:36:24,993 - #8 int
INFO  09:36:24,995 - #8 e
INFO  09:36:24,995 - #27 ;
INFO  09:36:24,996 - #20 {
INFO  09:36:24,997 - #6 void
INFO  09:36:24,997 - #8 main
INFO  09:36:24,997 - #29 (
INFO  09:36:24,998 - #30 )
INFO  09:36:24,998 - #20 {
INFO  09:36:24,998 - #31 if
INFO  09:36:24,998 - #29 (
INFO  09:36:24,998 - #12 false
INFO  09:36:24,999 - #30 )
INFO  09:36:25,000 - #20 {
INFO  09:36:25,000 - #3 print
INFO  09:36:25,000 - #29 (
INFO  09:36:25,000 - #9 65
INFO  09:36:25,000 - #30 )
INFO  09:36:25,000 - #27 ;
INFO  09:36:25,000 - #21 }
INFO  09:36:25,001 - #3 print
INFO  09:36:25,001 - #29 (
INFO  09:36:25,001 - #9 77
INFO  09:36:25,001 - #30 )
INFO  09:36:25,001 - #27 ;
INFO  09:36:25,001 - #21 }
INFO  09:36:25,002 - #21 }
INFO  09:36:25,003 - =====================SINTAKSNO_STABLO=========================
INFO  09:36:25,005 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:36:25,006 - ==============================================================
INFO  09:36:25,031 - Pocetak obrade programa Program na liniji 1
INFO  09:36:25,032 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:36:25,034 - Deklarisana konstanta c na liniji 2
INFO  09:36:25,034 - Deklarisana konstanta d na liniji 2
INFO  09:36:25,034 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:36:25,034 - Deklarisana promenljiva e na liniji 3
INFO  09:36:25,035 - Pocetak obrade metode main na liniji 5
INFO  09:36:25,036 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:36:25,036 - Zavrsetak obrade programa Program na liniji 1
INFO  09:36:25,036 - ======================TABELA_SIMBOLA==========================
INFO  09:36:25,036 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:36:25,037 - ==============================================================
INFO  09:36:25,037 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:36:25,037 - ==============================================================
INFO  09:36:25,037 - ======================GENERISANJE_KODA========================
INFO  09:36:25,042 - Generisanje koda uspesno zavrseno!
INFO  09:36:25,042 - Generisanje izlaznog fajla test\program.obj
INFO  09:36:25,043 - ==============================================================
INFO  09:37:15,066 - Obrada ulaznog fajla test\program.mj
INFO  09:37:15,148 - #2 program
INFO  09:37:15,148 - #8 Program
INFO  09:37:15,148 - #5 const
INFO  09:37:15,149 - #8 int
INFO  09:37:15,149 - #8 c
INFO  09:37:15,150 - #24 =
INFO  09:37:15,151 - #9 13
INFO  09:37:15,151 - #28 ,
INFO  09:37:15,152 - #8 d
INFO  09:37:15,152 - #24 =
INFO  09:37:15,152 - #9 99
INFO  09:37:15,152 - #27 ;
INFO  09:37:15,153 - #8 int
INFO  09:37:15,154 - #8 e
INFO  09:37:15,154 - #27 ;
INFO  09:37:15,155 - #20 {
INFO  09:37:15,156 - #6 void
INFO  09:37:15,156 - #8 main
INFO  09:37:15,156 - #29 (
INFO  09:37:15,157 - #30 )
INFO  09:37:15,157 - #20 {
INFO  09:37:15,157 - #31 if
INFO  09:37:15,157 - #29 (
INFO  09:37:15,158 - #12 false
INFO  09:37:15,158 - #30 )
INFO  09:37:15,159 - #20 {
INFO  09:37:15,159 - #3 print
INFO  09:37:15,159 - #29 (
INFO  09:37:15,159 - #9 65
INFO  09:37:15,159 - #30 )
INFO  09:37:15,159 - #27 ;
INFO  09:37:15,159 - #21 }
INFO  09:37:15,160 - #3 print
INFO  09:37:15,160 - #29 (
INFO  09:37:15,160 - #9 77
INFO  09:37:15,160 - #30 )
INFO  09:37:15,160 - #27 ;
INFO  09:37:15,160 - #21 }
INFO  09:37:15,160 - #21 }
INFO  09:37:15,161 - =====================SINTAKSNO_STABLO=========================
INFO  09:37:15,162 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:37:15,163 - ==============================================================
INFO  09:37:15,179 - Pocetak obrade programa Program na liniji 1
INFO  09:37:15,179 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:37:15,180 - Deklarisana konstanta c na liniji 2
INFO  09:37:15,180 - Deklarisana konstanta d na liniji 2
INFO  09:37:15,180 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:37:15,180 - Deklarisana promenljiva e na liniji 3
INFO  09:37:15,181 - Pocetak obrade metode main na liniji 5
INFO  09:37:15,181 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:37:15,182 - Zavrsetak obrade programa Program na liniji 1
INFO  09:37:15,182 - ======================TABELA_SIMBOLA==========================
INFO  09:37:15,182 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:37:15,182 - ==============================================================
INFO  09:37:15,182 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:37:15,182 - ==============================================================
INFO  09:37:15,182 - ======================GENERISANJE_KODA========================
INFO  09:37:15,188 - Generisanje koda uspesno zavrseno!
INFO  09:37:15,188 - Generisanje izlaznog fajla test\program.obj
INFO  09:37:15,188 - ==============================================================
INFO  09:37:54,412 - Obrada ulaznog fajla test\program.mj
INFO  09:37:54,501 - #2 program
INFO  09:37:54,501 - #8 Program
INFO  09:37:54,501 - #5 const
INFO  09:37:54,502 - #8 int
INFO  09:37:54,502 - #8 c
INFO  09:37:54,503 - #24 =
INFO  09:37:54,503 - #9 13
INFO  09:37:54,503 - #28 ,
INFO  09:37:54,505 - #8 d
INFO  09:37:54,505 - #24 =
INFO  09:37:54,505 - #9 99
INFO  09:37:54,505 - #27 ;
INFO  09:37:54,505 - #8 int
INFO  09:37:54,507 - #8 e
INFO  09:37:54,507 - #27 ;
INFO  09:37:54,508 - #20 {
INFO  09:37:54,509 - #6 void
INFO  09:37:54,509 - #8 main
INFO  09:37:54,509 - #29 (
INFO  09:37:54,510 - #30 )
INFO  09:37:54,510 - #20 {
INFO  09:37:54,510 - #31 if
INFO  09:37:54,510 - #29 (
INFO  09:37:54,510 - #12 false
INFO  09:37:54,510 - #30 )
INFO  09:37:54,512 - #20 {
INFO  09:37:54,512 - #3 print
INFO  09:37:54,512 - #29 (
INFO  09:37:54,512 - #9 65
INFO  09:37:54,512 - #30 )
INFO  09:37:54,512 - #27 ;
INFO  09:37:54,513 - #21 }
INFO  09:37:54,513 - #3 print
INFO  09:37:54,514 - #29 (
INFO  09:37:54,514 - #9 77
INFO  09:37:54,514 - #30 )
INFO  09:37:54,514 - #27 ;
INFO  09:37:54,514 - #21 }
INFO  09:37:54,515 - #21 }
INFO  09:37:54,516 - =====================SINTAKSNO_STABLO=========================
INFO  09:37:54,518 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:37:54,519 - ==============================================================
INFO  09:37:54,537 - Pocetak obrade programa Program na liniji 1
INFO  09:37:54,537 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:37:54,538 - Deklarisana konstanta c na liniji 2
INFO  09:37:54,538 - Deklarisana konstanta d na liniji 2
INFO  09:37:54,538 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:37:54,539 - Deklarisana promenljiva e na liniji 3
INFO  09:37:54,540 - Pocetak obrade metode main na liniji 5
INFO  09:37:54,540 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:37:54,540 - Zavrsetak obrade programa Program na liniji 1
INFO  09:37:54,540 - ======================TABELA_SIMBOLA==========================
INFO  09:37:54,541 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:37:54,541 - ==============================================================
INFO  09:37:54,541 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:37:54,542 - ==============================================================
INFO  09:37:54,542 - ======================GENERISANJE_KODA========================
INFO  09:37:54,548 - Generisanje koda uspesno zavrseno!
INFO  09:37:54,549 - Generisanje izlaznog fajla test\program.obj
INFO  09:37:54,549 - ==============================================================
INFO  09:40:24,812 - Obrada ulaznog fajla test\program.mj
INFO  09:40:24,898 - #2 program
INFO  09:40:24,898 - #8 Program
INFO  09:40:24,898 - #5 const
INFO  09:40:24,899 - #8 int
INFO  09:40:24,899 - #8 c
INFO  09:40:24,900 - #24 =
INFO  09:40:24,901 - #9 13
INFO  09:40:24,901 - #28 ,
INFO  09:40:24,902 - #8 d
INFO  09:40:24,902 - #24 =
INFO  09:40:24,902 - #9 99
INFO  09:40:24,902 - #27 ;
INFO  09:40:24,903 - #8 int
INFO  09:40:24,904 - #8 e
INFO  09:40:24,904 - #27 ;
INFO  09:40:24,905 - #20 {
INFO  09:40:24,906 - #6 void
INFO  09:40:24,906 - #8 main
INFO  09:40:24,906 - #29 (
INFO  09:40:24,907 - #30 )
INFO  09:40:24,907 - #20 {
INFO  09:40:24,907 - #31 if
INFO  09:40:24,908 - #29 (
INFO  09:40:24,908 - #12 false
INFO  09:40:24,908 - #30 )
INFO  09:40:24,909 - #20 {
INFO  09:40:24,909 - #3 print
INFO  09:40:24,909 - #29 (
INFO  09:40:24,909 - #9 65
INFO  09:40:24,909 - #30 )
INFO  09:40:24,909 - #27 ;
INFO  09:40:24,909 - #21 }
INFO  09:40:24,910 - #3 print
INFO  09:40:24,910 - #29 (
INFO  09:40:24,910 - #9 77
INFO  09:40:24,910 - #30 )
INFO  09:40:24,910 - #27 ;
INFO  09:40:24,910 - #21 }
INFO  09:40:24,911 - #21 }
INFO  09:40:24,912 - =====================SINTAKSNO_STABLO=========================
INFO  09:40:24,913 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:40:24,914 - ==============================================================
INFO  09:40:24,929 - Pocetak obrade programa Program na liniji 1
INFO  09:40:24,929 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:40:24,930 - Deklarisana konstanta c na liniji 2
INFO  09:40:24,930 - Deklarisana konstanta d na liniji 2
INFO  09:40:24,930 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:40:24,931 - Deklarisana promenljiva e na liniji 3
INFO  09:40:24,931 - Pocetak obrade metode main na liniji 5
INFO  09:40:24,932 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:40:24,932 - Zavrsetak obrade programa Program na liniji 1
INFO  09:40:24,932 - ======================TABELA_SIMBOLA==========================
INFO  09:40:24,933 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:40:24,933 - ==============================================================
INFO  09:40:24,933 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:40:24,933 - ==============================================================
INFO  09:40:24,933 - ======================GENERISANJE_KODA========================
INFO  09:40:24,938 - Generisanje koda uspesno zavrseno!
INFO  09:40:24,939 - Generisanje izlaznog fajla test\program.obj
INFO  09:40:24,939 - ==============================================================
INFO  09:41:15,119 - Obrada ulaznog fajla test\program.mj
INFO  09:41:15,205 - #2 program
INFO  09:41:15,205 - #8 Program
INFO  09:41:15,205 - #5 const
INFO  09:41:15,206 - #8 int
INFO  09:41:15,206 - #8 c
INFO  09:41:15,207 - #24 =
INFO  09:41:15,207 - #9 13
INFO  09:41:15,207 - #28 ,
INFO  09:41:15,209 - #8 d
INFO  09:41:15,209 - #24 =
INFO  09:41:15,209 - #9 99
INFO  09:41:15,209 - #27 ;
INFO  09:41:15,210 - #8 int
INFO  09:41:15,211 - #8 e
INFO  09:41:15,211 - #27 ;
INFO  09:41:15,211 - #20 {
INFO  09:41:15,212 - #6 void
INFO  09:41:15,212 - #8 main
INFO  09:41:15,212 - #29 (
INFO  09:41:15,213 - #30 )
INFO  09:41:15,213 - #20 {
INFO  09:41:15,213 - #31 if
INFO  09:41:15,213 - #29 (
INFO  09:41:15,213 - #12 false
INFO  09:41:15,213 - #30 )
INFO  09:41:15,214 - #20 {
INFO  09:41:15,214 - #3 print
INFO  09:41:15,215 - #29 (
INFO  09:41:15,215 - #9 65
INFO  09:41:15,215 - #30 )
INFO  09:41:15,215 - #27 ;
INFO  09:41:15,215 - #21 }
INFO  09:41:15,215 - #3 print
INFO  09:41:15,216 - #29 (
INFO  09:41:15,216 - #9 77
INFO  09:41:15,216 - #30 )
INFO  09:41:15,216 - #27 ;
INFO  09:41:15,216 - #21 }
INFO  09:41:15,216 - #21 }
INFO  09:41:15,217 - =====================SINTAKSNO_STABLO=========================
INFO  09:41:15,218 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:41:15,219 - ==============================================================
INFO  09:41:15,236 - Pocetak obrade programa Program na liniji 1
INFO  09:41:15,236 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:41:15,237 - Deklarisana konstanta c na liniji 2
INFO  09:41:15,237 - Deklarisana konstanta d na liniji 2
INFO  09:41:15,237 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:41:15,238 - Deklarisana promenljiva e na liniji 3
INFO  09:41:15,239 - Pocetak obrade metode main na liniji 5
INFO  09:41:15,239 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:41:15,239 - Zavrsetak obrade programa Program na liniji 1
INFO  09:41:15,239 - ======================TABELA_SIMBOLA==========================
INFO  09:41:15,240 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:41:15,241 - ==============================================================
INFO  09:41:15,241 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:41:15,241 - ==============================================================
INFO  09:41:15,241 - ======================GENERISANJE_KODA========================
INFO  09:41:15,246 - Generisanje koda uspesno zavrseno!
INFO  09:41:15,247 - Generisanje izlaznog fajla test\program.obj
INFO  09:41:15,247 - ==============================================================
INFO  09:42:15,632 - Obrada ulaznog fajla test\program.mj
INFO  09:42:15,716 - #2 program
INFO  09:42:15,716 - #8 Program
INFO  09:42:15,717 - #5 const
INFO  09:42:15,718 - #8 int
INFO  09:42:15,718 - #8 c
INFO  09:42:15,719 - #24 =
INFO  09:42:15,719 - #9 13
INFO  09:42:15,719 - #28 ,
INFO  09:42:15,720 - #8 d
INFO  09:42:15,721 - #24 =
INFO  09:42:15,721 - #9 99
INFO  09:42:15,721 - #27 ;
INFO  09:42:15,721 - #8 int
INFO  09:42:15,724 - #8 e
INFO  09:42:15,724 - #27 ;
INFO  09:42:15,724 - #20 {
INFO  09:42:15,726 - #6 void
INFO  09:42:15,726 - #8 main
INFO  09:42:15,726 - #29 (
INFO  09:42:15,727 - #30 )
INFO  09:42:15,727 - #20 {
INFO  09:42:15,727 - #31 if
INFO  09:42:15,727 - #29 (
INFO  09:42:15,727 - #12 false
INFO  09:42:15,728 - #30 )
INFO  09:42:15,729 - #20 {
INFO  09:42:15,729 - #3 print
INFO  09:42:15,729 - #29 (
INFO  09:42:15,729 - #9 65
INFO  09:42:15,729 - #30 )
INFO  09:42:15,729 - #27 ;
INFO  09:42:15,729 - #21 }
INFO  09:42:15,730 - #3 print
INFO  09:42:15,730 - #29 (
INFO  09:42:15,730 - #9 77
INFO  09:42:15,730 - #30 )
INFO  09:42:15,730 - #27 ;
INFO  09:42:15,730 - #21 }
INFO  09:42:15,731 - #21 }
INFO  09:42:15,731 - =====================SINTAKSNO_STABLO=========================
INFO  09:42:15,733 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:42:15,733 - ==============================================================
INFO  09:42:15,754 - Pocetak obrade programa Program na liniji 1
INFO  09:42:15,754 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:42:15,755 - Deklarisana konstanta c na liniji 2
INFO  09:42:15,755 - Deklarisana konstanta d na liniji 2
INFO  09:42:15,755 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:42:15,756 - Deklarisana promenljiva e na liniji 3
INFO  09:42:15,757 - Pocetak obrade metode main na liniji 5
INFO  09:42:15,757 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:42:15,757 - Zavrsetak obrade programa Program na liniji 1
INFO  09:42:15,757 - ======================TABELA_SIMBOLA==========================
INFO  09:42:15,761 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:42:15,761 - ==============================================================
INFO  09:42:15,761 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:42:15,761 - ==============================================================
INFO  09:42:15,761 - ======================GENERISANJE_KODA========================
INFO  09:42:15,768 - Generisanje koda uspesno zavrseno!
INFO  09:42:15,769 - Generisanje izlaznog fajla test\program.obj
INFO  09:42:15,769 - ==============================================================
INFO  09:49:17,148 - Obrada ulaznog fajla test\program.mj
INFO  09:49:17,232 - #2 program
INFO  09:49:17,232 - #8 Program
INFO  09:49:17,232 - #5 const
INFO  09:49:17,233 - #8 int
INFO  09:49:17,233 - #8 c
INFO  09:49:17,235 - #24 =
INFO  09:49:17,235 - #9 13
INFO  09:49:17,235 - #28 ,
INFO  09:49:17,238 - #8 d
INFO  09:49:17,238 - #24 =
INFO  09:49:17,239 - #9 99
INFO  09:49:17,239 - #27 ;
INFO  09:49:17,239 - #8 int
INFO  09:49:17,240 - #8 e
INFO  09:49:17,241 - #27 ;
INFO  09:49:17,241 - #20 {
INFO  09:49:17,242 - #6 void
INFO  09:49:17,242 - #8 main
INFO  09:49:17,242 - #29 (
INFO  09:49:17,243 - #30 )
INFO  09:49:17,243 - #20 {
INFO  09:49:17,244 - #31 if
INFO  09:49:17,244 - #29 (
INFO  09:49:17,244 - #12 false
INFO  09:49:17,244 - #30 )
INFO  09:49:17,245 - #20 {
INFO  09:49:17,245 - #3 print
INFO  09:49:17,245 - #29 (
INFO  09:49:17,245 - #9 65
INFO  09:49:17,245 - #30 )
INFO  09:49:17,245 - #27 ;
INFO  09:49:17,246 - #21 }
INFO  09:49:17,246 - #3 print
INFO  09:49:17,246 - #29 (
INFO  09:49:17,246 - #9 77
INFO  09:49:17,246 - #30 )
INFO  09:49:17,247 - #27 ;
INFO  09:49:17,247 - #21 }
INFO  09:49:17,247 - #21 }
INFO  09:49:17,248 - =====================SINTAKSNO_STABLO=========================
INFO  09:49:17,249 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:49:17,250 - ==============================================================
INFO  09:49:17,270 - Pocetak obrade programa Program na liniji 1
INFO  09:49:17,271 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:49:17,272 - Deklarisana konstanta c na liniji 2
INFO  09:49:17,272 - Deklarisana konstanta d na liniji 2
INFO  09:49:17,272 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:49:17,272 - Deklarisana promenljiva e na liniji 3
INFO  09:49:17,273 - Pocetak obrade metode main na liniji 5
INFO  09:49:17,274 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:49:17,274 - Zavrsetak obrade programa Program na liniji 1
INFO  09:49:17,274 - ======================TABELA_SIMBOLA==========================
INFO  09:49:17,275 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:49:17,275 - ==============================================================
INFO  09:49:17,275 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:49:17,275 - ==============================================================
INFO  09:49:17,275 - ======================GENERISANJE_KODA========================
INFO  09:49:17,283 - Generisanje koda uspesno zavrseno!
INFO  09:49:17,284 - Generisanje izlaznog fajla test\program.obj
INFO  09:49:17,284 - ==============================================================
INFO  09:49:57,663 - Obrada ulaznog fajla test\program.mj
INFO  09:49:57,743 - #2 program
INFO  09:49:57,743 - #8 Program
INFO  09:49:57,743 - #5 const
INFO  09:49:57,744 - #8 int
INFO  09:49:57,744 - #8 c
INFO  09:49:57,745 - #24 =
INFO  09:49:57,745 - #9 13
INFO  09:49:57,745 - #28 ,
INFO  09:49:57,746 - #8 d
INFO  09:49:57,746 - #24 =
INFO  09:49:57,746 - #9 99
INFO  09:49:57,747 - #27 ;
INFO  09:49:57,747 - #8 int
INFO  09:49:57,750 - #8 e
INFO  09:49:57,750 - #27 ;
INFO  09:49:57,750 - #20 {
INFO  09:49:57,752 - #6 void
INFO  09:49:57,752 - #8 main
INFO  09:49:57,752 - #29 (
INFO  09:49:57,753 - #30 )
INFO  09:49:57,753 - #20 {
INFO  09:49:57,753 - #31 if
INFO  09:49:57,753 - #29 (
INFO  09:49:57,753 - #12 false
INFO  09:49:57,753 - #30 )
INFO  09:49:57,754 - #20 {
INFO  09:49:57,754 - #3 print
INFO  09:49:57,755 - #29 (
INFO  09:49:57,755 - #9 65
INFO  09:49:57,755 - #30 )
INFO  09:49:57,755 - #27 ;
INFO  09:49:57,755 - #21 }
INFO  09:49:57,755 - #3 print
INFO  09:49:57,756 - #29 (
INFO  09:49:57,756 - #9 77
INFO  09:49:57,756 - #30 )
INFO  09:49:57,756 - #27 ;
INFO  09:49:57,756 - #21 }
INFO  09:49:57,756 - #21 }
INFO  09:49:57,757 - =====================SINTAKSNO_STABLO=========================
INFO  09:49:57,758 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  09:49:57,759 - ==============================================================
INFO  09:49:57,775 - Pocetak obrade programa Program na liniji 1
INFO  09:49:57,776 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  09:49:57,777 - Deklarisana konstanta c na liniji 2
INFO  09:49:57,777 - Deklarisana konstanta d na liniji 2
INFO  09:49:57,777 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  09:49:57,777 - Deklarisana promenljiva e na liniji 3
INFO  09:49:57,779 - Pocetak obrade metode main na liniji 5
INFO  09:49:57,779 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  09:49:57,779 - Zavrsetak obrade programa Program na liniji 1
INFO  09:49:57,780 - ======================TABELA_SIMBOLA==========================
INFO  09:49:57,781 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  09:49:57,781 - ==============================================================
INFO  09:49:57,781 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  09:49:57,781 - ==============================================================
INFO  09:49:57,781 - ======================GENERISANJE_KODA========================
INFO  09:49:57,788 - Generisanje koda uspesno zavrseno!
INFO  09:49:57,788 - Generisanje izlaznog fajla test\program.obj
INFO  09:49:57,788 - ==============================================================
INFO  10:02:19,528 - Obrada ulaznog fajla test\program.mj
INFO  10:02:19,610 - #2 program
INFO  10:02:19,610 - #8 Program
INFO  10:02:19,610 - #5 const
INFO  10:02:19,612 - #8 int
INFO  10:02:19,612 - #8 c
INFO  10:02:19,614 - #24 =
INFO  10:02:19,616 - #9 13
INFO  10:02:19,616 - #28 ,
INFO  10:02:19,617 - #8 d
INFO  10:02:19,618 - #24 =
INFO  10:02:19,618 - #9 99
INFO  10:02:19,618 - #27 ;
INFO  10:02:19,618 - #8 int
INFO  10:02:19,620 - #8 e
INFO  10:02:19,620 - #27 ;
INFO  10:02:19,620 - #20 {
INFO  10:02:19,621 - #6 void
INFO  10:02:19,621 - #8 main
INFO  10:02:19,621 - #29 (
INFO  10:02:19,622 - #30 )
INFO  10:02:19,622 - #20 {
INFO  10:02:19,622 - #31 if
INFO  10:02:19,622 - #29 (
INFO  10:02:19,622 - #12 false
INFO  10:02:19,622 - #30 )
INFO  10:02:19,623 - #20 {
INFO  10:02:19,624 - #3 print
INFO  10:02:19,624 - #29 (
INFO  10:02:19,624 - #9 65
INFO  10:02:19,624 - #30 )
INFO  10:02:19,624 - #27 ;
INFO  10:02:19,624 - #21 }
INFO  10:02:19,624 - #3 print
INFO  10:02:19,625 - #29 (
INFO  10:02:19,625 - #9 77
INFO  10:02:19,625 - #30 )
INFO  10:02:19,625 - #27 ;
INFO  10:02:19,625 - #21 }
INFO  10:02:19,625 - #21 }
INFO  10:02:19,626 - =====================SINTAKSNO_STABLO=========================
INFO  10:02:19,628 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  10:02:19,628 - ==============================================================
INFO  10:02:19,650 - Pocetak obrade programa Program na liniji 1
INFO  10:02:19,651 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  10:02:19,652 - Deklarisana konstanta c na liniji 2
INFO  10:02:19,652 - Deklarisana konstanta d na liniji 2
INFO  10:02:19,652 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  10:02:19,652 - Deklarisana promenljiva e na liniji 3
INFO  10:02:19,653 - Pocetak obrade metode main na liniji 5
INFO  10:02:19,653 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  10:02:19,654 - Zavrsetak obrade programa Program na liniji 1
INFO  10:02:19,654 - ======================TABELA_SIMBOLA==========================
INFO  10:02:19,654 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  10:02:19,654 - ==============================================================
INFO  10:02:19,655 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  10:02:19,655 - ==============================================================
INFO  10:02:19,655 - ======================GENERISANJE_KODA========================
INFO  10:02:19,662 - Generisanje koda uspesno zavrseno!
INFO  10:02:19,663 - Generisanje izlaznog fajla test\program.obj
INFO  10:02:19,663 - ==============================================================
INFO  10:03:44,161 - Obrada ulaznog fajla test\program.mj
INFO  10:03:44,289 - #2 program
INFO  10:03:44,290 - #8 Program
INFO  10:03:44,290 - #5 const
INFO  10:03:44,291 - #8 int
INFO  10:03:44,291 - #8 c
INFO  10:03:44,292 - #24 =
INFO  10:03:44,292 - #9 13
INFO  10:03:44,292 - #28 ,
INFO  10:03:44,293 - #8 d
INFO  10:03:44,293 - #24 =
INFO  10:03:44,293 - #9 99
INFO  10:03:44,293 - #27 ;
INFO  10:03:44,293 - #8 int
INFO  10:03:44,294 - #8 e
INFO  10:03:44,294 - #27 ;
INFO  10:03:44,295 - #20 {
INFO  10:03:44,296 - #6 void
INFO  10:03:44,296 - #8 main
INFO  10:03:44,296 - #29 (
INFO  10:03:44,297 - #30 )
INFO  10:03:44,297 - #20 {
INFO  10:03:44,297 - #31 if
INFO  10:03:44,297 - #29 (
INFO  10:03:44,297 - #12 false
INFO  10:03:44,297 - #30 )
INFO  10:03:44,298 - #20 {
INFO  10:03:44,298 - #3 print
INFO  10:03:44,298 - #29 (
INFO  10:03:44,298 - #9 65
INFO  10:03:44,298 - #30 )
INFO  10:03:44,299 - #27 ;
INFO  10:03:44,299 - #21 }
INFO  10:03:44,299 - #3 print
INFO  10:03:44,299 - #29 (
INFO  10:03:44,299 - #9 77
INFO  10:03:44,299 - #30 )
INFO  10:03:44,300 - #27 ;
INFO  10:03:44,300 - #21 }
INFO  10:03:44,300 - #21 }
INFO  10:03:44,300 - =====================SINTAKSNO_STABLO=========================
INFO  10:03:44,302 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 13
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_list(
                Statement_single(
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         65
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_single]
              ) [Stmt_list]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  10:03:44,302 - ==============================================================
INFO  10:03:44,316 - Pocetak obrade programa Program na liniji 1
INFO  10:03:44,316 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  10:03:44,317 - Deklarisana konstanta c na liniji 2
INFO  10:03:44,317 - Deklarisana konstanta d na liniji 2
INFO  10:03:44,317 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  10:03:44,318 - Deklarisana promenljiva e na liniji 3
INFO  10:03:44,319 - Pocetak obrade metode main na liniji 5
INFO  10:03:44,319 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  10:03:44,319 - Zavrsetak obrade programa Program na liniji 1
INFO  10:03:44,320 - ======================TABELA_SIMBOLA==========================
INFO  10:03:44,320 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  10:03:44,320 - ==============================================================
INFO  10:03:44,320 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  10:03:44,321 - ==============================================================
INFO  10:03:44,321 - ======================GENERISANJE_KODA========================
INFO  10:03:44,327 - Generisanje koda uspesno zavrseno!
INFO  10:03:44,327 - Generisanje izlaznog fajla test\program.obj
INFO  10:03:44,327 - ==============================================================
INFO  10:04:15,153 - Obrada ulaznog fajla test\program.mj
INFO  10:04:15,237 - #2 program
INFO  10:04:15,237 - #8 Program
INFO  10:04:15,237 - #5 const
INFO  10:04:15,238 - #8 int
INFO  10:04:15,238 - #8 c
INFO  10:04:15,239 - #24 =
INFO  10:04:15,239 - #9 10
INFO  10:04:15,239 - #28 ,
INFO  10:04:15,242 - #8 d
INFO  10:04:15,242 - #24 =
INFO  10:04:15,242 - #9 99
INFO  10:04:15,242 - #27 ;
INFO  10:04:15,242 - #8 int
INFO  10:04:15,244 - #8 e
INFO  10:04:15,244 - #27 ;
INFO  10:04:15,245 - #20 {
INFO  10:04:15,246 - #6 void
INFO  10:04:15,246 - #8 main
INFO  10:04:15,246 - #29 (
INFO  10:04:15,247 - #30 )
INFO  10:04:15,247 - #8 int
INFO  10:04:15,247 - #8 x
INFO  10:04:15,247 - #28 ,
INFO  10:04:15,247 - #8 y
INFO  10:04:15,248 - #27 ;
INFO  10:04:15,248 - #8 char
INFO  10:04:15,248 - #8 z
INFO  10:04:15,248 - #22 [
INFO  10:04:15,248 - #23 ]
INFO  10:04:15,249 - #27 ;
INFO  10:04:15,249 - #20 {
INFO  10:04:15,249 - #8 x
INFO  10:04:15,249 - #24 =
INFO  10:04:15,249 - #9 2
INFO  10:04:15,249 - #27 ;
INFO  10:04:15,250 - #8 y
INFO  10:04:15,250 - #24 =
INFO  10:04:15,250 - #9 5
INFO  10:04:15,250 - #27 ;
INFO  10:04:15,250 - #8 e
INFO  10:04:15,251 - #24 =
INFO  10:04:15,251 - #16 -
INFO  10:04:15,251 - #29 (
INFO  10:04:15,251 - #8 d
INFO  10:04:15,251 - #18 /
INFO  10:04:15,251 - #9 11
INFO  10:04:15,253 - #16 -
INFO  10:04:15,254 - #8 c
INFO  10:04:15,256 - #30 )
INFO  10:04:15,257 - #17 *
INFO  10:04:15,257 - #29 (
INFO  10:04:15,258 - #16 -
INFO  10:04:15,259 - #8 x
INFO  10:04:15,259 - #15 +
INFO  10:04:15,259 - #8 y
INFO  10:04:15,260 - #30 )
INFO  10:04:15,260 - #15 +
INFO  10:04:15,260 - #9 1
INFO  10:04:15,260 - #27 ;
INFO  10:04:15,260 - #8 e
INFO  10:04:15,260 - #25 ++
INFO  10:04:15,261 - #27 ;
INFO  10:04:15,261 - #3 print
INFO  10:04:15,261 - #29 (
INFO  10:04:15,261 - #8 e
INFO  10:04:15,261 - #30 )
INFO  10:04:15,261 - #27 ;
INFO  10:04:15,261 - #8 z
INFO  10:04:15,262 - #24 =
INFO  10:04:15,262 - #7 new
INFO  10:04:15,262 - #8 char
INFO  10:04:15,262 - #22 [
INFO  10:04:15,262 - #9 4
INFO  10:04:15,262 - #23 ]
INFO  10:04:15,262 - #27 ;
INFO  10:04:15,262 - #8 z
INFO  10:04:15,264 - #22 [
INFO  10:04:15,264 - #9 0
INFO  10:04:15,264 - #23 ]
INFO  10:04:15,264 - #24 =
INFO  10:04:15,264 - #8 chr
INFO  10:04:15,264 - #29 (
INFO  10:04:15,264 - #9 72
INFO  10:04:15,264 - #30 )
INFO  10:04:15,265 - #27 ;
INFO  10:04:15,265 - #8 z
INFO  10:04:15,265 - #22 [
INFO  10:04:15,265 - #9 1
INFO  10:04:15,265 - #23 ]
INFO  10:04:15,265 - #24 =
INFO  10:04:15,265 - #10 O
INFO  10:04:15,265 - #27 ;
INFO  10:04:15,266 - #8 z
INFO  10:04:15,266 - #22 [
INFO  10:04:15,266 - #9 2
INFO  10:04:15,266 - #23 ]
INFO  10:04:15,266 - #24 =
INFO  10:04:15,266 - #10 M
INFO  10:04:15,266 - #27 ;
INFO  10:04:15,266 - #8 z
INFO  10:04:15,266 - #22 [
INFO  10:04:15,267 - #9 3
INFO  10:04:15,267 - #23 ]
INFO  10:04:15,267 - #24 =
INFO  10:04:15,267 - #8 chr
INFO  10:04:15,267 - #29 (
INFO  10:04:15,267 - #8 ord
INFO  10:04:15,267 - #29 (
INFO  10:04:15,267 - #10 A
INFO  10:04:15,267 - #30 )
INFO  10:04:15,267 - #15 +
INFO  10:04:15,267 - #9 4
INFO  10:04:15,267 - #30 )
INFO  10:04:15,268 - #27 ;
INFO  10:04:15,268 - #3 print
INFO  10:04:15,268 - #29 (
INFO  10:04:15,268 - #8 z
INFO  10:04:15,268 - #22 [
INFO  10:04:15,268 - #9 0
INFO  10:04:15,268 - #23 ]
INFO  10:04:15,268 - #30 )
INFO  10:04:15,268 - #27 ;
INFO  10:04:15,268 - #3 print
INFO  10:04:15,268 - #29 (
INFO  10:04:15,268 - #8 z
INFO  10:04:15,269 - #22 [
INFO  10:04:15,269 - #9 1
INFO  10:04:15,269 - #23 ]
INFO  10:04:15,269 - #30 )
INFO  10:04:15,269 - #27 ;
INFO  10:04:15,269 - #3 print
INFO  10:04:15,270 - #29 (
INFO  10:04:15,270 - #8 z
INFO  10:04:15,270 - #22 [
INFO  10:04:15,270 - #9 2
INFO  10:04:15,270 - #23 ]
INFO  10:04:15,270 - #30 )
INFO  10:04:15,270 - #27 ;
INFO  10:04:15,270 - #3 print
INFO  10:04:15,271 - #29 (
INFO  10:04:15,271 - #8 z
INFO  10:04:15,271 - #22 [
INFO  10:04:15,271 - #9 3
INFO  10:04:15,271 - #23 ]
INFO  10:04:15,271 - #30 )
INFO  10:04:15,271 - #27 ;
INFO  10:04:15,271 - #3 print
INFO  10:04:15,271 - #29 (
INFO  10:04:15,271 - #8 len
INFO  10:04:15,271 - #29 (
INFO  10:04:15,271 - #8 z
INFO  10:04:15,271 - #30 )
INFO  10:04:15,271 - #30 )
INFO  10:04:15,272 - #27 ;
INFO  10:04:15,272 - #21 }
INFO  10:04:15,272 - #21 }
INFO  10:04:15,272 - =====================SINTAKSNO_STABLO=========================
INFO  10:04:15,276 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           x
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               2
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             5
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_expr(
                                                Expr_neg_term_multi(
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       x
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                  More_term_single(
                                                    More_term_part(
                                                      Add_op_plus(
                                                      ) [Add_op_plus]
                                                      Term_single(
                                                        Factor_designator(
                                                          Designator_1(
                                                           y
                                                          ) [Designator_1]
                                                        ) [Factor_designator]
                                                      ) [Term_single]
                                                    ) [More_term_part]
                                                  ) [More_term_single]
                                                ) [Expr_neg_term_multi]
                                              ) [Factor_expr]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  10:04:15,278 - ==============================================================
INFO  10:04:15,291 - Pocetak obrade programa Program na liniji 1
INFO  10:04:15,292 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  10:04:15,293 - Deklarisana konstanta c na liniji 2
INFO  10:04:15,293 - Deklarisana konstanta d na liniji 2
INFO  10:04:15,293 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  10:04:15,293 - Deklarisana promenljiva e na liniji 3
INFO  10:04:15,294 - Pocetak obrade metode main na liniji 5
INFO  10:04:15,294 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  10:04:15,294 - Deklarisana promenljiva x na liniji 5
INFO  10:04:15,294 - Deklarisana promenljiva y na liniji 5
INFO  10:04:15,294 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  10:04:15,294 - Deklarisan niz z na liniji 5
INFO  10:04:15,295 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  10:04:15,295 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  10:04:15,295 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  10:04:15,296 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  10:04:15,296 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  10:04:15,296 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  10:04:15,296 - Zavrsetak obrade programa Program na liniji 1
INFO  10:04:15,296 - ======================TABELA_SIMBOLA==========================
INFO  10:04:15,297 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  10:04:15,297 - ==============================================================
INFO  10:04:15,297 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  10:04:15,297 - ==============================================================
INFO  10:04:15,297 - ======================GENERISANJE_KODA========================
INFO  10:04:15,304 - Generisanje koda uspesno zavrseno!
INFO  10:04:15,305 - Generisanje izlaznog fajla test\program.obj
INFO  10:04:15,305 - ==============================================================
INFO  10:06:01,336 - Obrada ulaznog fajla test\program.mj
INFO  10:06:01,421 - #2 program
INFO  10:06:01,421 - #8 Program
INFO  10:06:01,421 - #5 const
INFO  10:06:01,422 - #8 int
INFO  10:06:01,422 - #8 c
INFO  10:06:01,423 - #24 =
INFO  10:06:01,423 - #9 10
INFO  10:06:01,423 - #28 ,
INFO  10:06:01,424 - #8 d
INFO  10:06:01,424 - #24 =
INFO  10:06:01,424 - #9 99
INFO  10:06:01,425 - #27 ;
INFO  10:06:01,425 - #8 int
INFO  10:06:01,426 - #8 e
INFO  10:06:01,427 - #27 ;
INFO  10:06:01,427 - #20 {
INFO  10:06:01,428 - #6 void
INFO  10:06:01,428 - #8 main
INFO  10:06:01,428 - #29 (
INFO  10:06:01,429 - #30 )
INFO  10:06:01,429 - #8 int
INFO  10:06:01,430 - #8 x
INFO  10:06:01,430 - #28 ,
INFO  10:06:01,430 - #8 y
INFO  10:06:01,430 - #27 ;
INFO  10:06:01,430 - #8 char
INFO  10:06:01,430 - #8 z
INFO  10:06:01,430 - #22 [
INFO  10:06:01,431 - #23 ]
INFO  10:06:01,431 - #27 ;
INFO  10:06:01,431 - #20 {
INFO  10:06:01,431 - #8 x
INFO  10:06:01,431 - #24 =
INFO  10:06:01,431 - #9 2
INFO  10:06:01,431 - #27 ;
INFO  10:06:01,432 - #8 y
INFO  10:06:01,432 - #24 =
INFO  10:06:01,432 - #9 5
INFO  10:06:01,432 - #27 ;
INFO  10:06:01,433 - #8 e
INFO  10:06:01,433 - #24 =
INFO  10:06:01,433 - #16 -
INFO  10:06:01,433 - #29 (
INFO  10:06:01,433 - #8 d
INFO  10:06:01,433 - #18 /
INFO  10:06:01,433 - #9 11
INFO  10:06:01,434 - #16 -
INFO  10:06:01,436 - #8 c
INFO  10:06:01,437 - #30 )
INFO  10:06:01,438 - #17 *
INFO  10:06:01,438 - #29 (
INFO  10:06:01,439 - #16 -
INFO  10:06:01,439 - #8 x
INFO  10:06:01,439 - #15 +
INFO  10:06:01,440 - #8 y
INFO  10:06:01,440 - #30 )
INFO  10:06:01,440 - #15 +
INFO  10:06:01,441 - #9 1
INFO  10:06:01,441 - #27 ;
INFO  10:06:01,441 - #8 e
INFO  10:06:01,441 - #25 ++
INFO  10:06:01,441 - #27 ;
INFO  10:06:01,441 - #3 print
INFO  10:06:01,441 - #29 (
INFO  10:06:01,441 - #8 e
INFO  10:06:01,442 - #30 )
INFO  10:06:01,442 - #27 ;
INFO  10:06:01,442 - #8 z
INFO  10:06:01,442 - #24 =
INFO  10:06:01,442 - #7 new
INFO  10:06:01,442 - #8 char
INFO  10:06:01,442 - #22 [
INFO  10:06:01,442 - #9 4
INFO  10:06:01,442 - #23 ]
INFO  10:06:01,443 - #27 ;
INFO  10:06:01,443 - #8 z
INFO  10:06:01,444 - #22 [
INFO  10:06:01,444 - #9 0
INFO  10:06:01,444 - #23 ]
INFO  10:06:01,444 - #24 =
INFO  10:06:01,445 - #8 chr
INFO  10:06:01,445 - #29 (
INFO  10:06:01,445 - #9 72
INFO  10:06:01,445 - #30 )
INFO  10:06:01,446 - #27 ;
INFO  10:06:01,446 - #8 z
INFO  10:06:01,446 - #22 [
INFO  10:06:01,446 - #9 1
INFO  10:06:01,447 - #23 ]
INFO  10:06:01,447 - #24 =
INFO  10:06:01,447 - #10 O
INFO  10:06:01,447 - #27 ;
INFO  10:06:01,447 - #8 z
INFO  10:06:01,447 - #22 [
INFO  10:06:01,448 - #9 2
INFO  10:06:01,448 - #23 ]
INFO  10:06:01,448 - #24 =
INFO  10:06:01,448 - #10 M
INFO  10:06:01,448 - #27 ;
INFO  10:06:01,448 - #8 z
INFO  10:06:01,448 - #22 [
INFO  10:06:01,448 - #9 3
INFO  10:06:01,448 - #23 ]
INFO  10:06:01,449 - #24 =
INFO  10:06:01,449 - #8 chr
INFO  10:06:01,449 - #29 (
INFO  10:06:01,449 - #8 ord
INFO  10:06:01,449 - #29 (
INFO  10:06:01,449 - #10 A
INFO  10:06:01,449 - #30 )
INFO  10:06:01,449 - #15 +
INFO  10:06:01,449 - #9 4
INFO  10:06:01,449 - #30 )
INFO  10:06:01,449 - #27 ;
INFO  10:06:01,450 - #3 print
INFO  10:06:01,450 - #29 (
INFO  10:06:01,450 - #8 z
INFO  10:06:01,450 - #22 [
INFO  10:06:01,450 - #9 0
INFO  10:06:01,450 - #23 ]
INFO  10:06:01,450 - #30 )
INFO  10:06:01,450 - #27 ;
INFO  10:06:01,450 - #3 print
INFO  10:06:01,450 - #29 (
INFO  10:06:01,450 - #8 z
INFO  10:06:01,450 - #22 [
INFO  10:06:01,450 - #9 1
INFO  10:06:01,451 - #23 ]
INFO  10:06:01,451 - #30 )
INFO  10:06:01,451 - #27 ;
INFO  10:06:01,451 - #3 print
INFO  10:06:01,451 - #29 (
INFO  10:06:01,451 - #8 z
INFO  10:06:01,451 - #22 [
INFO  10:06:01,451 - #9 2
INFO  10:06:01,451 - #23 ]
INFO  10:06:01,451 - #30 )
INFO  10:06:01,451 - #27 ;
INFO  10:06:01,451 - #3 print
INFO  10:06:01,451 - #29 (
INFO  10:06:01,452 - #8 z
INFO  10:06:01,452 - #22 [
INFO  10:06:01,452 - #9 3
INFO  10:06:01,452 - #23 ]
INFO  10:06:01,452 - #30 )
INFO  10:06:01,452 - #27 ;
INFO  10:06:01,452 - #3 print
INFO  10:06:01,452 - #29 (
INFO  10:06:01,452 - #8 len
INFO  10:06:01,452 - #29 (
INFO  10:06:01,452 - #8 z
INFO  10:06:01,452 - #30 )
INFO  10:06:01,452 - #30 )
INFO  10:06:01,452 - #27 ;
INFO  10:06:01,452 - #21 }
INFO  10:06:01,452 - #21 }
INFO  10:06:01,453 - =====================SINTAKSNO_STABLO=========================
INFO  10:06:01,457 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           x
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               2
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             5
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_expr(
                                                Expr_neg_term_multi(
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       x
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                  More_term_single(
                                                    More_term_part(
                                                      Add_op_plus(
                                                      ) [Add_op_plus]
                                                      Term_single(
                                                        Factor_designator(
                                                          Designator_1(
                                                           y
                                                          ) [Designator_1]
                                                        ) [Factor_designator]
                                                      ) [Term_single]
                                                    ) [More_term_part]
                                                  ) [More_term_single]
                                                ) [Expr_neg_term_multi]
                                              ) [Factor_expr]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  10:06:01,458 - ==============================================================
INFO  10:06:01,471 - Pocetak obrade programa Program na liniji 1
INFO  10:06:01,472 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  10:06:01,472 - Deklarisana konstanta c na liniji 2
INFO  10:06:01,472 - Deklarisana konstanta d na liniji 2
INFO  10:06:01,473 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  10:06:01,473 - Deklarisana promenljiva e na liniji 3
INFO  10:06:01,474 - Pocetak obrade metode main na liniji 5
INFO  10:06:01,474 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  10:06:01,474 - Deklarisana promenljiva x na liniji 5
INFO  10:06:01,474 - Deklarisana promenljiva y na liniji 5
INFO  10:06:01,474 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  10:06:01,474 - Deklarisan niz z na liniji 5
INFO  10:06:01,474 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  10:06:01,475 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  10:06:01,475 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  10:06:01,475 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  10:06:01,475 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  10:06:01,476 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  10:06:01,476 - Zavrsetak obrade programa Program na liniji 1
INFO  10:06:01,476 - ======================TABELA_SIMBOLA==========================
INFO  10:06:01,477 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  10:06:01,477 - ==============================================================
INFO  10:06:01,477 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  10:06:01,477 - ==============================================================
INFO  10:06:01,477 - ======================GENERISANJE_KODA========================
INFO  10:06:20,335 - Obrada ulaznog fajla test\program.mj
INFO  10:06:20,441 - #2 program
INFO  10:06:20,441 - #8 Program
INFO  10:06:20,441 - #5 const
INFO  10:06:20,442 - #8 int
INFO  10:06:20,442 - #8 c
INFO  10:06:20,443 - #24 =
INFO  10:06:20,443 - #9 10
INFO  10:06:20,443 - #28 ,
INFO  10:06:20,446 - #8 d
INFO  10:06:20,446 - #24 =
INFO  10:06:20,446 - #9 99
INFO  10:06:20,447 - #27 ;
INFO  10:06:20,447 - #8 int
INFO  10:06:20,448 - #8 e
INFO  10:06:20,448 - #27 ;
INFO  10:06:20,449 - #20 {
INFO  10:06:20,450 - #6 void
INFO  10:06:20,450 - #8 main
INFO  10:06:20,450 - #29 (
INFO  10:06:20,451 - #30 )
INFO  10:06:20,451 - #8 int
INFO  10:06:20,451 - #8 x
INFO  10:06:20,451 - #28 ,
INFO  10:06:20,451 - #8 y
INFO  10:06:20,452 - #27 ;
INFO  10:06:20,452 - #8 char
INFO  10:06:20,452 - #8 z
INFO  10:06:20,452 - #22 [
INFO  10:06:20,452 - #23 ]
INFO  10:06:20,452 - #27 ;
INFO  10:06:20,452 - #20 {
INFO  10:06:20,453 - #8 x
INFO  10:06:20,453 - #24 =
INFO  10:06:20,453 - #9 2
INFO  10:06:20,453 - #27 ;
INFO  10:06:20,454 - #8 y
INFO  10:06:20,454 - #24 =
INFO  10:06:20,454 - #9 5
INFO  10:06:20,454 - #27 ;
INFO  10:06:20,455 - #8 e
INFO  10:06:20,455 - #24 =
INFO  10:06:20,455 - #16 -
INFO  10:06:20,455 - #29 (
INFO  10:06:20,456 - #8 d
INFO  10:06:20,456 - #18 /
INFO  10:06:20,456 - #9 11
INFO  10:06:20,457 - #16 -
INFO  10:06:20,459 - #8 c
INFO  10:06:20,460 - #30 )
INFO  10:06:20,462 - #17 *
INFO  10:06:20,462 - #29 (
INFO  10:06:20,463 - #16 -
INFO  10:06:20,463 - #8 x
INFO  10:06:20,463 - #15 +
INFO  10:06:20,463 - #8 y
INFO  10:06:20,464 - #30 )
INFO  10:06:20,464 - #15 +
INFO  10:06:20,464 - #9 1
INFO  10:06:20,464 - #27 ;
INFO  10:06:20,465 - #8 e
INFO  10:06:20,465 - #25 ++
INFO  10:06:20,465 - #27 ;
INFO  10:06:20,466 - #3 print
INFO  10:06:20,466 - #29 (
INFO  10:06:20,466 - #8 e
INFO  10:06:20,466 - #30 )
INFO  10:06:20,466 - #27 ;
INFO  10:06:20,466 - #8 z
INFO  10:06:20,466 - #24 =
INFO  10:06:20,466 - #7 new
INFO  10:06:20,467 - #8 char
INFO  10:06:20,467 - #22 [
INFO  10:06:20,467 - #9 4
INFO  10:06:20,467 - #23 ]
INFO  10:06:20,467 - #27 ;
INFO  10:06:20,467 - #8 z
INFO  10:06:20,469 - #22 [
INFO  10:06:20,469 - #9 0
INFO  10:06:20,469 - #23 ]
INFO  10:06:20,469 - #24 =
INFO  10:06:20,469 - #8 chr
INFO  10:06:20,469 - #29 (
INFO  10:06:20,470 - #9 72
INFO  10:06:20,470 - #30 )
INFO  10:06:20,470 - #27 ;
INFO  10:06:20,470 - #8 z
INFO  10:06:20,470 - #22 [
INFO  10:06:20,470 - #9 1
INFO  10:06:20,470 - #23 ]
INFO  10:06:20,471 - #24 =
INFO  10:06:20,471 - #10 O
INFO  10:06:20,471 - #27 ;
INFO  10:06:20,471 - #8 z
INFO  10:06:20,471 - #22 [
INFO  10:06:20,471 - #9 2
INFO  10:06:20,471 - #23 ]
INFO  10:06:20,472 - #24 =
INFO  10:06:20,472 - #10 M
INFO  10:06:20,472 - #27 ;
INFO  10:06:20,472 - #8 z
INFO  10:06:20,472 - #22 [
INFO  10:06:20,472 - #9 3
INFO  10:06:20,472 - #23 ]
INFO  10:06:20,472 - #24 =
INFO  10:06:20,472 - #8 chr
INFO  10:06:20,472 - #29 (
INFO  10:06:20,472 - #8 ord
INFO  10:06:20,473 - #29 (
INFO  10:06:20,473 - #10 A
INFO  10:06:20,473 - #30 )
INFO  10:06:20,473 - #15 +
INFO  10:06:20,473 - #9 4
INFO  10:06:20,473 - #30 )
INFO  10:06:20,473 - #27 ;
INFO  10:06:20,473 - #3 print
INFO  10:06:20,473 - #29 (
INFO  10:06:20,473 - #8 z
INFO  10:06:20,473 - #22 [
INFO  10:06:20,473 - #9 0
INFO  10:06:20,473 - #23 ]
INFO  10:06:20,474 - #30 )
INFO  10:06:20,474 - #27 ;
INFO  10:06:20,474 - #3 print
INFO  10:06:20,474 - #29 (
INFO  10:06:20,474 - #8 z
INFO  10:06:20,474 - #22 [
INFO  10:06:20,474 - #9 1
INFO  10:06:20,474 - #23 ]
INFO  10:06:20,475 - #30 )
INFO  10:06:20,475 - #27 ;
INFO  10:06:20,475 - #3 print
INFO  10:06:20,475 - #29 (
INFO  10:06:20,475 - #8 z
INFO  10:06:20,475 - #22 [
INFO  10:06:20,475 - #9 2
INFO  10:06:20,475 - #23 ]
INFO  10:06:20,475 - #30 )
INFO  10:06:20,475 - #27 ;
INFO  10:06:20,475 - #3 print
INFO  10:06:20,475 - #29 (
INFO  10:06:20,476 - #8 z
INFO  10:06:20,476 - #22 [
INFO  10:06:20,476 - #9 3
INFO  10:06:20,476 - #23 ]
INFO  10:06:20,476 - #30 )
INFO  10:06:20,476 - #27 ;
INFO  10:06:20,476 - #3 print
INFO  10:06:20,476 - #29 (
INFO  10:06:20,476 - #8 len
INFO  10:06:20,476 - #29 (
INFO  10:06:20,476 - #8 z
INFO  10:06:20,476 - #30 )
INFO  10:06:20,476 - #30 )
INFO  10:06:20,476 - #27 ;
INFO  10:06:20,477 - #21 }
INFO  10:06:20,477 - #21 }
INFO  10:06:20,477 - =====================SINTAKSNO_STABLO=========================
INFO  10:06:20,482 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           x
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               2
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             5
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_expr(
                                                Expr_neg_term_multi(
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       x
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                  More_term_single(
                                                    More_term_part(
                                                      Add_op_plus(
                                                      ) [Add_op_plus]
                                                      Term_single(
                                                        Factor_designator(
                                                          Designator_1(
                                                           y
                                                          ) [Designator_1]
                                                        ) [Factor_designator]
                                                      ) [Term_single]
                                                    ) [More_term_part]
                                                  ) [More_term_single]
                                                ) [Expr_neg_term_multi]
                                              ) [Factor_expr]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  10:06:20,483 - ==============================================================
INFO  10:06:20,497 - Pocetak obrade programa Program na liniji 1
INFO  10:06:20,498 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  10:06:20,499 - Deklarisana konstanta c na liniji 2
INFO  10:06:20,499 - Deklarisana konstanta d na liniji 2
INFO  10:06:20,499 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  10:06:20,499 - Deklarisana promenljiva e na liniji 3
INFO  10:06:20,500 - Pocetak obrade metode main na liniji 5
INFO  10:06:20,500 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  10:06:20,500 - Deklarisana promenljiva x na liniji 5
INFO  10:06:20,501 - Deklarisana promenljiva y na liniji 5
INFO  10:06:20,501 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  10:06:20,501 - Deklarisan niz z na liniji 5
INFO  10:06:20,501 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  10:06:20,501 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  10:06:20,502 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  10:06:20,502 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  10:06:20,502 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  10:06:20,502 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  10:06:20,502 - Zavrsetak obrade programa Program na liniji 1
INFO  10:06:20,502 - ======================TABELA_SIMBOLA==========================
INFO  10:06:20,503 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  10:06:20,503 - ==============================================================
INFO  10:06:20,503 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  10:06:20,503 - ==============================================================
INFO  10:06:20,503 - ======================GENERISANJE_KODA========================
INFO  10:06:45,760 - Obrada ulaznog fajla test\program.mj
INFO  10:06:45,843 - #2 program
INFO  10:06:45,843 - #8 Program
INFO  10:06:45,843 - #5 const
INFO  10:06:45,845 - #8 int
INFO  10:06:45,845 - #8 c
INFO  10:06:45,846 - #24 =
INFO  10:06:45,846 - #9 10
INFO  10:06:45,846 - #28 ,
INFO  10:06:45,847 - #8 d
INFO  10:06:45,847 - #24 =
INFO  10:06:45,847 - #9 99
INFO  10:06:45,847 - #27 ;
INFO  10:06:45,848 - #8 int
INFO  10:06:45,849 - #8 e
INFO  10:06:45,849 - #27 ;
INFO  10:06:45,849 - #20 {
INFO  10:06:45,850 - #6 void
INFO  10:06:45,850 - #8 main
INFO  10:06:45,850 - #29 (
INFO  10:06:45,851 - #30 )
INFO  10:06:45,851 - #8 int
INFO  10:06:45,851 - #8 x
INFO  10:06:45,851 - #28 ,
INFO  10:06:45,851 - #8 y
INFO  10:06:45,852 - #27 ;
INFO  10:06:45,852 - #8 char
INFO  10:06:45,852 - #8 z
INFO  10:06:45,852 - #22 [
INFO  10:06:45,852 - #23 ]
INFO  10:06:45,852 - #27 ;
INFO  10:06:45,853 - #20 {
INFO  10:06:45,853 - #8 x
INFO  10:06:45,853 - #24 =
INFO  10:06:45,853 - #9 2
INFO  10:06:45,853 - #27 ;
INFO  10:06:45,854 - #8 y
INFO  10:06:45,854 - #24 =
INFO  10:06:45,854 - #9 5
INFO  10:06:45,855 - #27 ;
INFO  10:06:45,855 - #8 e
INFO  10:06:45,855 - #24 =
INFO  10:06:45,855 - #16 -
INFO  10:06:45,855 - #29 (
INFO  10:06:45,855 - #8 d
INFO  10:06:45,855 - #18 /
INFO  10:06:45,855 - #9 11
INFO  10:06:45,857 - #16 -
INFO  10:06:45,858 - #8 c
INFO  10:06:45,859 - #30 )
INFO  10:06:45,861 - #17 *
INFO  10:06:45,861 - #29 (
INFO  10:06:45,865 - #16 -
INFO  10:06:45,865 - #8 x
INFO  10:06:45,865 - #15 +
INFO  10:06:45,865 - #8 y
INFO  10:06:45,866 - #30 )
INFO  10:06:45,866 - #15 +
INFO  10:06:45,867 - #9 1
INFO  10:06:45,867 - #27 ;
INFO  10:06:45,867 - #8 e
INFO  10:06:45,867 - #25 ++
INFO  10:06:45,867 - #27 ;
INFO  10:06:45,867 - #3 print
INFO  10:06:45,867 - #29 (
INFO  10:06:45,867 - #8 e
INFO  10:06:45,868 - #30 )
INFO  10:06:45,868 - #27 ;
INFO  10:06:45,868 - #8 z
INFO  10:06:45,868 - #24 =
INFO  10:06:45,868 - #7 new
INFO  10:06:45,868 - #8 char
INFO  10:06:45,868 - #22 [
INFO  10:06:45,868 - #9 4
INFO  10:06:45,868 - #23 ]
INFO  10:06:45,868 - #27 ;
INFO  10:06:45,869 - #8 z
INFO  10:06:45,870 - #22 [
INFO  10:06:45,870 - #9 0
INFO  10:06:45,870 - #23 ]
INFO  10:06:45,870 - #24 =
INFO  10:06:45,871 - #8 chr
INFO  10:06:45,871 - #29 (
INFO  10:06:45,871 - #9 72
INFO  10:06:45,871 - #30 )
INFO  10:06:45,871 - #27 ;
INFO  10:06:45,871 - #8 z
INFO  10:06:45,872 - #22 [
INFO  10:06:45,872 - #9 1
INFO  10:06:45,872 - #23 ]
INFO  10:06:45,872 - #24 =
INFO  10:06:45,873 - #10 O
INFO  10:06:45,873 - #27 ;
INFO  10:06:45,873 - #8 z
INFO  10:06:45,873 - #22 [
INFO  10:06:45,873 - #9 2
INFO  10:06:45,873 - #23 ]
INFO  10:06:45,873 - #24 =
INFO  10:06:45,873 - #10 M
INFO  10:06:45,874 - #27 ;
INFO  10:06:45,874 - #8 z
INFO  10:06:45,874 - #22 [
INFO  10:06:45,874 - #9 3
INFO  10:06:45,874 - #23 ]
INFO  10:06:45,874 - #24 =
INFO  10:06:45,874 - #8 chr
INFO  10:06:45,874 - #29 (
INFO  10:06:45,874 - #8 ord
INFO  10:06:45,874 - #29 (
INFO  10:06:45,875 - #10 A
INFO  10:06:45,875 - #30 )
INFO  10:06:45,875 - #15 +
INFO  10:06:45,875 - #9 4
INFO  10:06:45,875 - #30 )
INFO  10:06:45,875 - #27 ;
INFO  10:06:45,875 - #3 print
INFO  10:06:45,875 - #29 (
INFO  10:06:45,876 - #8 z
INFO  10:06:45,876 - #22 [
INFO  10:06:45,876 - #9 0
INFO  10:06:45,876 - #23 ]
INFO  10:06:45,876 - #30 )
INFO  10:06:45,876 - #27 ;
INFO  10:06:45,876 - #3 print
INFO  10:06:45,876 - #29 (
INFO  10:06:45,876 - #8 z
INFO  10:06:45,876 - #22 [
INFO  10:06:45,876 - #9 1
INFO  10:06:45,876 - #23 ]
INFO  10:06:45,877 - #30 )
INFO  10:06:45,877 - #27 ;
INFO  10:06:45,877 - #3 print
INFO  10:06:45,877 - #29 (
INFO  10:06:45,877 - #8 z
INFO  10:06:45,877 - #22 [
INFO  10:06:45,877 - #9 2
INFO  10:06:45,877 - #23 ]
INFO  10:06:45,877 - #30 )
INFO  10:06:45,877 - #27 ;
INFO  10:06:45,877 - #3 print
INFO  10:06:45,877 - #29 (
INFO  10:06:45,877 - #8 z
INFO  10:06:45,877 - #22 [
INFO  10:06:45,877 - #9 3
INFO  10:06:45,877 - #23 ]
INFO  10:06:45,878 - #30 )
INFO  10:06:45,878 - #27 ;
INFO  10:06:45,878 - #3 print
INFO  10:06:45,878 - #29 (
INFO  10:06:45,878 - #8 len
INFO  10:06:45,878 - #29 (
INFO  10:06:45,878 - #8 z
INFO  10:06:45,878 - #30 )
INFO  10:06:45,878 - #30 )
INFO  10:06:45,878 - #27 ;
INFO  10:06:45,878 - #21 }
INFO  10:06:45,878 - #21 }
INFO  10:06:45,879 - =====================SINTAKSNO_STABLO=========================
INFO  10:06:45,882 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           x
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               2
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             5
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_expr(
                                                Expr_neg_term_multi(
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       x
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                  More_term_single(
                                                    More_term_part(
                                                      Add_op_plus(
                                                      ) [Add_op_plus]
                                                      Term_single(
                                                        Factor_designator(
                                                          Designator_1(
                                                           y
                                                          ) [Designator_1]
                                                        ) [Factor_designator]
                                                      ) [Term_single]
                                                    ) [More_term_part]
                                                  ) [More_term_single]
                                                ) [Expr_neg_term_multi]
                                              ) [Factor_expr]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  10:06:45,885 - ==============================================================
INFO  10:06:45,898 - Pocetak obrade programa Program na liniji 1
INFO  10:06:45,898 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  10:06:45,900 - Deklarisana konstanta c na liniji 2
INFO  10:06:45,900 - Deklarisana konstanta d na liniji 2
INFO  10:06:45,900 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  10:06:45,900 - Deklarisana promenljiva e na liniji 3
INFO  10:06:45,901 - Pocetak obrade metode main na liniji 5
INFO  10:06:45,901 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  10:06:45,901 - Deklarisana promenljiva x na liniji 5
INFO  10:06:45,901 - Deklarisana promenljiva y na liniji 5
INFO  10:06:45,901 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  10:06:45,901 - Deklarisan niz z na liniji 5
INFO  10:06:45,902 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  10:06:45,902 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  10:06:45,902 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  10:06:45,902 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  10:06:45,902 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  10:06:45,902 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  10:06:45,902 - Zavrsetak obrade programa Program na liniji 1
INFO  10:06:45,903 - ======================TABELA_SIMBOLA==========================
INFO  10:06:45,903 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  10:06:45,903 - ==============================================================
INFO  10:06:45,903 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  10:06:45,903 - ==============================================================
INFO  10:06:45,904 - ======================GENERISANJE_KODA========================
INFO  10:06:45,910 - Generisanje koda uspesno zavrseno!
INFO  10:06:45,911 - Generisanje izlaznog fajla test\program.obj
INFO  10:06:45,911 - ==============================================================
INFO  10:06:50,143 - Obrada ulaznog fajla test\program.mj
INFO  10:06:50,220 - #2 program
INFO  10:06:50,221 - #8 Program
INFO  10:06:50,221 - #5 const
INFO  10:06:50,222 - #8 int
INFO  10:06:50,222 - #8 c
INFO  10:06:50,222 - #24 =
INFO  10:06:50,222 - #9 10
INFO  10:06:50,222 - #28 ,
INFO  10:06:50,223 - #8 d
INFO  10:06:50,223 - #24 =
INFO  10:06:50,223 - #9 99
INFO  10:06:50,224 - #27 ;
INFO  10:06:50,224 - #8 int
INFO  10:06:50,225 - #8 e
INFO  10:06:50,225 - #27 ;
INFO  10:06:50,225 - #20 {
INFO  10:06:50,227 - #6 void
INFO  10:06:50,227 - #8 main
INFO  10:06:50,227 - #29 (
INFO  10:06:50,228 - #30 )
INFO  10:06:50,228 - #8 int
INFO  10:06:50,228 - #8 x
INFO  10:06:50,228 - #28 ,
INFO  10:06:50,228 - #8 y
INFO  10:06:50,228 - #27 ;
INFO  10:06:50,229 - #8 char
INFO  10:06:50,229 - #8 z
INFO  10:06:50,229 - #22 [
INFO  10:06:50,229 - #23 ]
INFO  10:06:50,229 - #27 ;
INFO  10:06:50,229 - #20 {
INFO  10:06:50,230 - #8 x
INFO  10:06:50,230 - #24 =
INFO  10:06:50,230 - #9 2
INFO  10:06:50,230 - #27 ;
INFO  10:06:50,231 - #8 y
INFO  10:06:50,231 - #24 =
INFO  10:06:50,231 - #9 5
INFO  10:06:50,231 - #27 ;
INFO  10:06:50,231 - #8 e
INFO  10:06:50,232 - #24 =
INFO  10:06:50,232 - #16 -
INFO  10:06:50,232 - #29 (
INFO  10:06:50,232 - #8 d
INFO  10:06:50,232 - #18 /
INFO  10:06:50,232 - #9 11
INFO  10:06:50,233 - #16 -
INFO  10:06:50,234 - #8 c
INFO  10:06:50,236 - #30 )
INFO  10:06:50,237 - #17 *
INFO  10:06:50,238 - #29 (
INFO  10:06:50,238 - #16 -
INFO  10:06:50,239 - #8 x
INFO  10:06:50,239 - #15 +
INFO  10:06:50,239 - #8 y
INFO  10:06:50,240 - #30 )
INFO  10:06:50,241 - #15 +
INFO  10:06:50,241 - #9 1
INFO  10:06:50,241 - #27 ;
INFO  10:06:50,241 - #8 e
INFO  10:06:50,241 - #25 ++
INFO  10:06:50,241 - #27 ;
INFO  10:06:50,241 - #3 print
INFO  10:06:50,242 - #29 (
INFO  10:06:50,242 - #8 e
INFO  10:06:50,242 - #30 )
INFO  10:06:50,243 - #27 ;
INFO  10:06:50,243 - #8 z
INFO  10:06:50,243 - #24 =
INFO  10:06:50,243 - #7 new
INFO  10:06:50,243 - #8 char
INFO  10:06:50,243 - #22 [
INFO  10:06:50,243 - #9 4
INFO  10:06:50,243 - #23 ]
INFO  10:06:50,243 - #27 ;
INFO  10:06:50,244 - #8 z
INFO  10:06:50,245 - #22 [
INFO  10:06:50,245 - #9 0
INFO  10:06:50,245 - #23 ]
INFO  10:06:50,246 - #24 =
INFO  10:06:50,246 - #8 chr
INFO  10:06:50,246 - #29 (
INFO  10:06:50,246 - #9 72
INFO  10:06:50,246 - #30 )
INFO  10:06:50,247 - #27 ;
INFO  10:06:50,247 - #8 z
INFO  10:06:50,247 - #22 [
INFO  10:06:50,247 - #9 1
INFO  10:06:50,247 - #23 ]
INFO  10:06:50,247 - #24 =
INFO  10:06:50,247 - #10 O
INFO  10:06:50,247 - #27 ;
INFO  10:06:50,248 - #8 z
INFO  10:06:50,248 - #22 [
INFO  10:06:50,248 - #9 2
INFO  10:06:50,248 - #23 ]
INFO  10:06:50,248 - #24 =
INFO  10:06:50,248 - #10 M
INFO  10:06:50,248 - #27 ;
INFO  10:06:50,248 - #8 z
INFO  10:06:50,248 - #22 [
INFO  10:06:50,248 - #9 3
INFO  10:06:50,248 - #23 ]
INFO  10:06:50,248 - #24 =
INFO  10:06:50,248 - #8 chr
INFO  10:06:50,249 - #29 (
INFO  10:06:50,249 - #8 ord
INFO  10:06:50,249 - #29 (
INFO  10:06:50,249 - #10 A
INFO  10:06:50,249 - #30 )
INFO  10:06:50,249 - #15 +
INFO  10:06:50,249 - #9 4
INFO  10:06:50,249 - #30 )
INFO  10:06:50,249 - #27 ;
INFO  10:06:50,249 - #3 print
INFO  10:06:50,249 - #29 (
INFO  10:06:50,249 - #8 z
INFO  10:06:50,250 - #22 [
INFO  10:06:50,250 - #9 0
INFO  10:06:50,250 - #23 ]
INFO  10:06:50,250 - #30 )
INFO  10:06:50,250 - #27 ;
INFO  10:06:50,250 - #3 print
INFO  10:06:50,250 - #29 (
INFO  10:06:50,250 - #8 z
INFO  10:06:50,250 - #22 [
INFO  10:06:50,250 - #9 1
INFO  10:06:50,250 - #23 ]
INFO  10:06:50,251 - #30 )
INFO  10:06:50,251 - #27 ;
INFO  10:06:50,251 - #3 print
INFO  10:06:50,251 - #29 (
INFO  10:06:50,251 - #8 z
INFO  10:06:50,251 - #22 [
INFO  10:06:50,251 - #9 2
INFO  10:06:50,251 - #23 ]
INFO  10:06:50,251 - #30 )
INFO  10:06:50,251 - #27 ;
INFO  10:06:50,251 - #3 print
INFO  10:06:50,251 - #29 (
INFO  10:06:50,251 - #8 z
INFO  10:06:50,252 - #22 [
INFO  10:06:50,252 - #9 3
INFO  10:06:50,252 - #23 ]
INFO  10:06:50,252 - #30 )
INFO  10:06:50,252 - #27 ;
INFO  10:06:50,252 - #3 print
INFO  10:06:50,252 - #29 (
INFO  10:06:50,252 - #8 len
INFO  10:06:50,252 - #29 (
INFO  10:06:50,252 - #8 z
INFO  10:06:50,252 - #30 )
INFO  10:06:50,252 - #30 )
INFO  10:06:50,252 - #27 ;
INFO  10:06:50,252 - #21 }
INFO  10:06:50,252 - #21 }
INFO  10:06:50,253 - =====================SINTAKSNO_STABLO=========================
INFO  10:06:50,258 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           x
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               2
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             5
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_expr(
                                                Expr_neg_term_multi(
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       x
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                  More_term_single(
                                                    More_term_part(
                                                      Add_op_plus(
                                                      ) [Add_op_plus]
                                                      Term_single(
                                                        Factor_designator(
                                                          Designator_1(
                                                           y
                                                          ) [Designator_1]
                                                        ) [Factor_designator]
                                                      ) [Term_single]
                                                    ) [More_term_part]
                                                  ) [More_term_single]
                                                ) [Expr_neg_term_multi]
                                              ) [Factor_expr]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  10:06:50,259 - ==============================================================
INFO  10:06:50,272 - Pocetak obrade programa Program na liniji 1
INFO  10:06:50,272 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  10:06:50,273 - Deklarisana konstanta c na liniji 2
INFO  10:06:50,274 - Deklarisana konstanta d na liniji 2
INFO  10:06:50,274 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  10:06:50,274 - Deklarisana promenljiva e na liniji 3
INFO  10:06:50,274 - Pocetak obrade metode main na liniji 5
INFO  10:06:50,274 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  10:06:50,275 - Deklarisana promenljiva x na liniji 5
INFO  10:06:50,275 - Deklarisana promenljiva y na liniji 5
INFO  10:06:50,275 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  10:06:50,275 - Deklarisan niz z na liniji 5
INFO  10:06:50,275 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  10:06:50,276 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  10:06:50,276 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  10:06:50,276 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  10:06:50,276 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  10:06:50,276 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  10:06:50,276 - Zavrsetak obrade programa Program na liniji 1
INFO  10:06:50,276 - ======================TABELA_SIMBOLA==========================
INFO  10:06:50,277 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  10:06:50,277 - ==============================================================
INFO  10:06:50,277 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  10:06:50,277 - ==============================================================
INFO  10:06:50,277 - ======================GENERISANJE_KODA========================
INFO  10:06:50,283 - Generisanje koda uspesno zavrseno!
INFO  10:06:50,283 - Generisanje izlaznog fajla test\program.obj
INFO  10:06:50,283 - ==============================================================
INFO  10:09:57,245 - Obrada ulaznog fajla test\program.mj
INFO  10:09:57,329 - #2 program
INFO  10:09:57,329 - #8 Program
INFO  10:09:57,329 - #5 const
INFO  10:09:57,330 - #8 int
INFO  10:09:57,330 - #8 c
INFO  10:09:57,331 - #24 =
INFO  10:09:57,331 - #9 10
INFO  10:09:57,331 - #28 ,
INFO  10:09:57,332 - #8 d
INFO  10:09:57,332 - #24 =
INFO  10:09:57,332 - #9 99
INFO  10:09:57,332 - #27 ;
INFO  10:09:57,332 - #8 int
INFO  10:09:57,333 - #8 e
INFO  10:09:57,333 - #27 ;
INFO  10:09:57,334 - #20 {
INFO  10:09:57,335 - #6 void
INFO  10:09:57,335 - #8 main
INFO  10:09:57,335 - #29 (
INFO  10:09:57,336 - #30 )
INFO  10:09:57,336 - #8 int
INFO  10:09:57,336 - #8 x
INFO  10:09:57,336 - #28 ,
INFO  10:09:57,337 - #8 y
INFO  10:09:57,337 - #27 ;
INFO  10:09:57,337 - #8 char
INFO  10:09:57,337 - #8 z
INFO  10:09:57,337 - #22 [
INFO  10:09:57,338 - #23 ]
INFO  10:09:57,338 - #27 ;
INFO  10:09:57,338 - #20 {
INFO  10:09:57,338 - #8 x
INFO  10:09:57,339 - #24 =
INFO  10:09:57,339 - #9 2
INFO  10:09:57,339 - #27 ;
INFO  10:09:57,339 - #8 y
INFO  10:09:57,340 - #24 =
INFO  10:09:57,340 - #9 5
INFO  10:09:57,340 - #27 ;
INFO  10:09:57,340 - #8 e
INFO  10:09:57,340 - #24 =
INFO  10:09:57,340 - #16 -
INFO  10:09:57,340 - #29 (
INFO  10:09:57,340 - #8 d
INFO  10:09:57,340 - #18 /
INFO  10:09:57,341 - #9 11
INFO  10:09:57,342 - #16 -
INFO  10:09:57,343 - #8 c
INFO  10:09:57,344 - #30 )
INFO  10:09:57,345 - #17 *
INFO  10:09:57,345 - #29 (
INFO  10:09:57,346 - #16 -
INFO  10:09:57,346 - #8 x
INFO  10:09:57,346 - #15 +
INFO  10:09:57,346 - #8 y
INFO  10:09:57,347 - #30 )
INFO  10:09:57,347 - #15 +
INFO  10:09:57,348 - #9 1
INFO  10:09:57,348 - #27 ;
INFO  10:09:57,348 - #8 e
INFO  10:09:57,348 - #25 ++
INFO  10:09:57,351 - #27 ;
INFO  10:09:57,351 - #3 print
INFO  10:09:57,351 - #29 (
INFO  10:09:57,351 - #8 e
INFO  10:09:57,351 - #30 )
INFO  10:09:57,351 - #27 ;
INFO  10:09:57,351 - #8 z
INFO  10:09:57,352 - #24 =
INFO  10:09:57,352 - #7 new
INFO  10:09:57,352 - #8 char
INFO  10:09:57,352 - #22 [
INFO  10:09:57,352 - #9 4
INFO  10:09:57,352 - #23 ]
INFO  10:09:57,352 - #27 ;
INFO  10:09:57,353 - #8 z
INFO  10:09:57,355 - #22 [
INFO  10:09:57,355 - #9 0
INFO  10:09:57,355 - #23 ]
INFO  10:09:57,355 - #24 =
INFO  10:09:57,355 - #8 chr
INFO  10:09:57,355 - #29 (
INFO  10:09:57,355 - #9 72
INFO  10:09:57,355 - #30 )
INFO  10:09:57,356 - #27 ;
INFO  10:09:57,356 - #8 z
INFO  10:09:57,356 - #22 [
INFO  10:09:57,356 - #9 1
INFO  10:09:57,356 - #23 ]
INFO  10:09:57,356 - #24 =
INFO  10:09:57,356 - #10 O
INFO  10:09:57,356 - #27 ;
INFO  10:09:57,357 - #8 z
INFO  10:09:57,357 - #22 [
INFO  10:09:57,357 - #9 2
INFO  10:09:57,357 - #23 ]
INFO  10:09:57,357 - #24 =
INFO  10:09:57,357 - #10 M
INFO  10:09:57,357 - #27 ;
INFO  10:09:57,357 - #8 z
INFO  10:09:57,357 - #22 [
INFO  10:09:57,357 - #9 3
INFO  10:09:57,357 - #23 ]
INFO  10:09:57,357 - #24 =
INFO  10:09:57,357 - #8 chr
INFO  10:09:57,358 - #29 (
INFO  10:09:57,358 - #8 ord
INFO  10:09:57,358 - #29 (
INFO  10:09:57,358 - #10 A
INFO  10:09:57,358 - #30 )
INFO  10:09:57,358 - #15 +
INFO  10:09:57,358 - #9 4
INFO  10:09:57,358 - #30 )
INFO  10:09:57,358 - #27 ;
INFO  10:09:57,358 - #3 print
INFO  10:09:57,358 - #29 (
INFO  10:09:57,358 - #8 z
INFO  10:09:57,359 - #22 [
INFO  10:09:57,359 - #9 0
INFO  10:09:57,359 - #23 ]
INFO  10:09:57,359 - #30 )
INFO  10:09:57,359 - #27 ;
INFO  10:09:57,359 - #3 print
INFO  10:09:57,359 - #29 (
INFO  10:09:57,359 - #8 z
INFO  10:09:57,359 - #22 [
INFO  10:09:57,359 - #9 1
INFO  10:09:57,359 - #23 ]
INFO  10:09:57,360 - #30 )
INFO  10:09:57,360 - #27 ;
INFO  10:09:57,360 - #3 print
INFO  10:09:57,360 - #29 (
INFO  10:09:57,360 - #8 z
INFO  10:09:57,360 - #22 [
INFO  10:09:57,360 - #9 2
INFO  10:09:57,360 - #23 ]
INFO  10:09:57,360 - #30 )
INFO  10:09:57,361 - #27 ;
INFO  10:09:57,361 - #3 print
INFO  10:09:57,361 - #29 (
INFO  10:09:57,361 - #8 z
INFO  10:09:57,361 - #22 [
INFO  10:09:57,361 - #9 3
INFO  10:09:57,361 - #23 ]
INFO  10:09:57,361 - #30 )
INFO  10:09:57,361 - #27 ;
INFO  10:09:57,361 - #3 print
INFO  10:09:57,361 - #29 (
INFO  10:09:57,361 - #8 len
INFO  10:09:57,362 - #29 (
INFO  10:09:57,362 - #8 z
INFO  10:09:57,362 - #30 )
INFO  10:09:57,362 - #30 )
INFO  10:09:57,362 - #27 ;
INFO  10:09:57,362 - #21 }
INFO  10:09:57,362 - #21 }
INFO  10:09:57,363 - =====================SINTAKSNO_STABLO=========================
INFO  10:09:57,366 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           x
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               2
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             5
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_expr(
                                                Expr_neg_term_multi(
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       x
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                  More_term_single(
                                                    More_term_part(
                                                      Add_op_plus(
                                                      ) [Add_op_plus]
                                                      Term_single(
                                                        Factor_designator(
                                                          Designator_1(
                                                           y
                                                          ) [Designator_1]
                                                        ) [Factor_designator]
                                                      ) [Term_single]
                                                    ) [More_term_part]
                                                  ) [More_term_single]
                                                ) [Expr_neg_term_multi]
                                              ) [Factor_expr]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  10:09:57,368 - ==============================================================
INFO  10:09:57,382 - Pocetak obrade programa Program na liniji 1
INFO  10:09:57,382 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  10:09:57,383 - Deklarisana konstanta c na liniji 2
INFO  10:09:57,383 - Deklarisana konstanta d na liniji 2
INFO  10:09:57,384 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  10:09:57,384 - Deklarisana promenljiva e na liniji 3
INFO  10:09:57,385 - Pocetak obrade metode main na liniji 5
INFO  10:09:57,385 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  10:09:57,385 - Deklarisana promenljiva x na liniji 5
INFO  10:09:57,385 - Deklarisana promenljiva y na liniji 5
INFO  10:09:57,385 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  10:09:57,385 - Deklarisan niz z na liniji 5
INFO  10:09:57,386 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  10:09:57,386 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  10:09:57,386 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  10:09:57,386 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  10:09:57,386 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  10:09:57,386 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  10:09:57,386 - Zavrsetak obrade programa Program na liniji 1
INFO  10:09:57,386 - ======================TABELA_SIMBOLA==========================
INFO  10:09:57,387 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  10:09:57,387 - ==============================================================
INFO  10:09:57,387 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  10:09:57,387 - ==============================================================
INFO  10:09:57,387 - ======================GENERISANJE_KODA========================
INFO  10:10:15,433 - Obrada ulaznog fajla test\program.mj
INFO  10:10:15,523 - #2 program
INFO  10:10:15,523 - #8 Program
INFO  10:10:15,523 - #5 const
INFO  10:10:15,525 - #8 int
INFO  10:10:15,526 - #8 c
INFO  10:10:15,527 - #24 =
INFO  10:10:15,527 - #9 10
INFO  10:10:15,527 - #28 ,
INFO  10:10:15,529 - #8 d
INFO  10:10:15,529 - #24 =
INFO  10:10:15,529 - #9 99
INFO  10:10:15,529 - #27 ;
INFO  10:10:15,529 - #8 int
INFO  10:10:15,531 - #8 e
INFO  10:10:15,531 - #27 ;
INFO  10:10:15,531 - #20 {
INFO  10:10:15,532 - #6 void
INFO  10:10:15,532 - #8 main
INFO  10:10:15,532 - #29 (
INFO  10:10:15,533 - #30 )
INFO  10:10:15,534 - #8 int
INFO  10:10:15,534 - #8 x
INFO  10:10:15,534 - #28 ,
INFO  10:10:15,534 - #8 y
INFO  10:10:15,535 - #27 ;
INFO  10:10:15,535 - #8 char
INFO  10:10:15,535 - #8 z
INFO  10:10:15,535 - #22 [
INFO  10:10:15,535 - #23 ]
INFO  10:10:15,536 - #27 ;
INFO  10:10:15,536 - #20 {
INFO  10:10:15,536 - #8 x
INFO  10:10:15,536 - #24 =
INFO  10:10:15,536 - #9 2
INFO  10:10:15,536 - #27 ;
INFO  10:10:15,537 - #8 y
INFO  10:10:15,537 - #24 =
INFO  10:10:15,538 - #9 5
INFO  10:10:15,538 - #27 ;
INFO  10:10:15,538 - #8 e
INFO  10:10:15,539 - #24 =
INFO  10:10:15,539 - #16 -
INFO  10:10:15,539 - #29 (
INFO  10:10:15,539 - #8 d
INFO  10:10:15,539 - #18 /
INFO  10:10:15,539 - #9 11
INFO  10:10:15,542 - #16 -
INFO  10:10:15,544 - #8 c
INFO  10:10:15,545 - #30 )
INFO  10:10:15,546 - #17 *
INFO  10:10:15,547 - #29 (
INFO  10:10:15,547 - #16 -
INFO  10:10:15,547 - #8 x
INFO  10:10:15,548 - #15 +
INFO  10:10:15,548 - #8 y
INFO  10:10:15,548 - #30 )
INFO  10:10:15,549 - #15 +
INFO  10:10:15,549 - #9 1
INFO  10:10:15,549 - #27 ;
INFO  10:10:15,549 - #8 e
INFO  10:10:15,549 - #25 ++
INFO  10:10:15,549 - #27 ;
INFO  10:10:15,549 - #3 print
INFO  10:10:15,550 - #29 (
INFO  10:10:15,550 - #8 e
INFO  10:10:15,550 - #30 )
INFO  10:10:15,550 - #27 ;
INFO  10:10:15,550 - #8 z
INFO  10:10:15,550 - #24 =
INFO  10:10:15,550 - #7 new
INFO  10:10:15,550 - #8 char
INFO  10:10:15,550 - #22 [
INFO  10:10:15,550 - #9 4
INFO  10:10:15,551 - #23 ]
INFO  10:10:15,551 - #27 ;
INFO  10:10:15,551 - #8 z
INFO  10:10:15,553 - #22 [
INFO  10:10:15,553 - #9 0
INFO  10:10:15,553 - #23 ]
INFO  10:10:15,554 - #24 =
INFO  10:10:15,554 - #8 chr
INFO  10:10:15,554 - #29 (
INFO  10:10:15,554 - #9 72
INFO  10:10:15,554 - #30 )
INFO  10:10:15,555 - #27 ;
INFO  10:10:15,555 - #8 z
INFO  10:10:15,555 - #22 [
INFO  10:10:15,555 - #9 1
INFO  10:10:15,555 - #23 ]
INFO  10:10:15,555 - #24 =
INFO  10:10:15,556 - #10 O
INFO  10:10:15,556 - #27 ;
INFO  10:10:15,556 - #8 z
INFO  10:10:15,556 - #22 [
INFO  10:10:15,556 - #9 2
INFO  10:10:15,556 - #23 ]
INFO  10:10:15,556 - #24 =
INFO  10:10:15,556 - #10 M
INFO  10:10:15,557 - #27 ;
INFO  10:10:15,557 - #8 z
INFO  10:10:15,557 - #22 [
INFO  10:10:15,557 - #9 3
INFO  10:10:15,557 - #23 ]
INFO  10:10:15,557 - #24 =
INFO  10:10:15,557 - #8 chr
INFO  10:10:15,557 - #29 (
INFO  10:10:15,557 - #8 ord
INFO  10:10:15,557 - #29 (
INFO  10:10:15,557 - #10 A
INFO  10:10:15,558 - #30 )
INFO  10:10:15,558 - #15 +
INFO  10:10:15,558 - #9 4
INFO  10:10:15,558 - #30 )
INFO  10:10:15,558 - #27 ;
INFO  10:10:15,558 - #3 print
INFO  10:10:15,558 - #29 (
INFO  10:10:15,558 - #8 z
INFO  10:10:15,558 - #22 [
INFO  10:10:15,558 - #9 0
INFO  10:10:15,558 - #23 ]
INFO  10:10:15,559 - #30 )
INFO  10:10:15,559 - #27 ;
INFO  10:10:15,559 - #3 print
INFO  10:10:15,559 - #29 (
INFO  10:10:15,559 - #8 z
INFO  10:10:15,559 - #22 [
INFO  10:10:15,559 - #9 1
INFO  10:10:15,559 - #23 ]
INFO  10:10:15,559 - #30 )
INFO  10:10:15,559 - #27 ;
INFO  10:10:15,559 - #3 print
INFO  10:10:15,559 - #29 (
INFO  10:10:15,559 - #8 z
INFO  10:10:15,560 - #22 [
INFO  10:10:15,560 - #9 2
INFO  10:10:15,560 - #23 ]
INFO  10:10:15,560 - #30 )
INFO  10:10:15,560 - #27 ;
INFO  10:10:15,560 - #3 print
INFO  10:10:15,560 - #29 (
INFO  10:10:15,560 - #8 z
INFO  10:10:15,560 - #22 [
INFO  10:10:15,560 - #9 3
INFO  10:10:15,560 - #23 ]
INFO  10:10:15,561 - #30 )
INFO  10:10:15,561 - #27 ;
INFO  10:10:15,561 - #3 print
INFO  10:10:15,561 - #29 (
INFO  10:10:15,561 - #8 len
INFO  10:10:15,561 - #29 (
INFO  10:10:15,561 - #8 z
INFO  10:10:15,561 - #30 )
INFO  10:10:15,561 - #30 )
INFO  10:10:15,561 - #27 ;
INFO  10:10:15,561 - #21 }
INFO  10:10:15,562 - #21 }
INFO  10:10:15,563 - =====================SINTAKSNO_STABLO=========================
INFO  10:10:15,566 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           x
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               2
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             5
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_expr(
                                                Expr_neg_term_multi(
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       x
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                  More_term_single(
                                                    More_term_part(
                                                      Add_op_plus(
                                                      ) [Add_op_plus]
                                                      Term_single(
                                                        Factor_designator(
                                                          Designator_1(
                                                           y
                                                          ) [Designator_1]
                                                        ) [Factor_designator]
                                                      ) [Term_single]
                                                    ) [More_term_part]
                                                  ) [More_term_single]
                                                ) [Expr_neg_term_multi]
                                              ) [Factor_expr]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  10:10:15,568 - ==============================================================
INFO  10:10:15,583 - Pocetak obrade programa Program na liniji 1
INFO  10:10:15,583 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  10:10:15,585 - Deklarisana konstanta c na liniji 2
INFO  10:10:15,586 - Deklarisana konstanta d na liniji 2
INFO  10:10:15,586 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  10:10:15,586 - Deklarisana promenljiva e na liniji 3
INFO  10:10:15,587 - Pocetak obrade metode main na liniji 5
INFO  10:10:15,587 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  10:10:15,587 - Deklarisana promenljiva x na liniji 5
INFO  10:10:15,587 - Deklarisana promenljiva y na liniji 5
INFO  10:10:15,587 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  10:10:15,587 - Deklarisan niz z na liniji 5
INFO  10:10:15,588 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  10:10:15,588 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  10:10:15,588 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  10:10:15,588 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  10:10:15,588 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  10:10:15,588 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  10:10:15,589 - Zavrsetak obrade programa Program na liniji 1
INFO  10:10:15,589 - ======================TABELA_SIMBOLA==========================
INFO  10:10:15,589 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  10:10:15,589 - ==============================================================
INFO  10:10:15,589 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  10:10:15,590 - ==============================================================
INFO  10:10:15,590 - ======================GENERISANJE_KODA========================
INFO  10:10:15,597 - Generisanje koda uspesno zavrseno!
INFO  10:10:15,598 - Generisanje izlaznog fajla test\program.obj
INFO  10:10:15,598 - ==============================================================
INFO  10:12:48,726 - Obrada ulaznog fajla test\program.mj
INFO  10:12:48,812 - #2 program
INFO  10:12:48,812 - #8 Program
INFO  10:12:48,812 - #5 const
INFO  10:12:48,813 - #8 int
INFO  10:12:48,813 - #8 c
INFO  10:12:48,813 - #24 =
INFO  10:12:48,814 - #9 10
INFO  10:12:48,814 - #28 ,
INFO  10:12:48,815 - #8 d
INFO  10:12:48,815 - #24 =
INFO  10:12:48,816 - #9 99
INFO  10:12:48,816 - #27 ;
INFO  10:12:48,816 - #8 int
INFO  10:12:48,817 - #8 e
INFO  10:12:48,817 - #27 ;
INFO  10:12:48,817 - #20 {
INFO  10:12:48,818 - #6 void
INFO  10:12:48,819 - #8 main
INFO  10:12:48,819 - #29 (
INFO  10:12:48,819 - #30 )
INFO  10:12:48,820 - #20 {
INFO  10:12:48,820 - #8 e
INFO  10:12:48,820 - #24 =
INFO  10:12:48,820 - #8 d
INFO  10:12:48,820 - #27 ;
INFO  10:12:48,821 - #3 print
INFO  10:12:48,821 - #29 (
INFO  10:12:48,821 - #8 d
INFO  10:12:48,821 - #30 )
INFO  10:12:48,821 - #27 ;
INFO  10:12:48,821 - #21 }
INFO  10:12:48,822 - #21 }
INFO  10:12:48,822 - =====================SINTAKSNO_STABLO=========================
INFO  10:12:48,823 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_1(
                       d
                      ) [Designator_1]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  10:12:48,824 - ==============================================================
INFO  10:12:48,840 - Pocetak obrade programa Program na liniji 1
INFO  10:12:48,840 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  10:12:48,842 - Deklarisana konstanta c na liniji 2
INFO  10:12:48,842 - Deklarisana konstanta d na liniji 2
INFO  10:12:48,842 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  10:12:48,842 - Deklarisana promenljiva e na liniji 3
INFO  10:12:48,843 - Pocetak obrade metode main na liniji 5
INFO  10:12:48,843 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  10:12:48,843 - Zavrsetak obrade programa Program na liniji 1
INFO  10:12:48,843 - ======================TABELA_SIMBOLA==========================
INFO  10:12:48,844 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  10:12:48,844 - ==============================================================
INFO  10:12:48,844 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  10:12:48,844 - ==============================================================
INFO  10:12:48,845 - ======================GENERISANJE_KODA========================
INFO  10:14:42,892 - Obrada ulaznog fajla test\program.mj
INFO  10:14:42,972 - #2 program
INFO  10:14:42,972 - #8 Program
INFO  10:14:42,972 - #5 const
INFO  10:14:42,973 - #8 int
INFO  10:14:42,974 - #8 c
INFO  10:14:42,974 - #24 =
INFO  10:14:42,974 - #9 10
INFO  10:14:42,974 - #28 ,
INFO  10:14:42,976 - #8 d
INFO  10:14:42,976 - #24 =
INFO  10:14:42,976 - #9 99
INFO  10:14:42,976 - #27 ;
INFO  10:14:42,976 - #8 int
INFO  10:14:42,978 - #8 e
INFO  10:14:42,978 - #27 ;
INFO  10:14:42,978 - #20 {
INFO  10:14:42,979 - #6 void
INFO  10:14:42,979 - #8 main
INFO  10:14:42,979 - #29 (
INFO  10:14:42,980 - #30 )
INFO  10:14:42,980 - #20 {
INFO  10:14:42,980 - #8 e
INFO  10:14:42,980 - #24 =
INFO  10:14:42,981 - #8 d
INFO  10:14:42,981 - #27 ;
INFO  10:14:42,982 - #3 print
INFO  10:14:42,982 - #29 (
INFO  10:14:42,982 - #8 d
INFO  10:14:42,982 - #30 )
INFO  10:14:42,982 - #27 ;
INFO  10:14:42,982 - #21 }
INFO  10:14:42,983 - #21 }
INFO  10:14:42,984 - =====================SINTAKSNO_STABLO=========================
INFO  10:14:42,985 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_1(
                       d
                      ) [Designator_1]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  10:14:42,985 - ==============================================================
INFO  10:14:43,001 - Pocetak obrade programa Program na liniji 1
INFO  10:14:43,001 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  10:14:43,002 - Deklarisana konstanta c na liniji 2
INFO  10:14:43,002 - Deklarisana konstanta d na liniji 2
INFO  10:14:43,002 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  10:14:43,003 - Deklarisana promenljiva e na liniji 3
INFO  10:14:43,003 - Pocetak obrade metode main na liniji 5
INFO  10:14:43,006 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  10:14:43,006 - Zavrsetak obrade programa Program na liniji 1
INFO  10:14:43,006 - ======================TABELA_SIMBOLA==========================
INFO  10:14:43,007 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  10:14:43,007 - ==============================================================
INFO  10:14:43,007 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  10:14:43,007 - ==============================================================
INFO  10:14:43,007 - ======================GENERISANJE_KODA========================
INFO  10:16:09,946 - Obrada ulaznog fajla test\program.mj
INFO  10:16:10,031 - #2 program
INFO  10:16:10,031 - #8 Program
INFO  10:16:10,031 - #5 const
INFO  10:16:10,032 - #8 int
INFO  10:16:10,032 - #8 c
INFO  10:16:10,033 - #24 =
INFO  10:16:10,033 - #9 10
INFO  10:16:10,033 - #28 ,
INFO  10:16:10,034 - #8 d
INFO  10:16:10,035 - #24 =
INFO  10:16:10,035 - #9 99
INFO  10:16:10,035 - #27 ;
INFO  10:16:10,035 - #8 int
INFO  10:16:10,037 - #8 e
INFO  10:16:10,037 - #27 ;
INFO  10:16:10,037 - #20 {
INFO  10:16:10,039 - #6 void
INFO  10:16:10,039 - #8 main
INFO  10:16:10,039 - #29 (
INFO  10:16:10,040 - #30 )
INFO  10:16:10,040 - #20 {
INFO  10:16:10,040 - #8 e
INFO  10:16:10,040 - #24 =
INFO  10:16:10,041 - #8 d
INFO  10:16:10,041 - #27 ;
INFO  10:16:10,041 - #3 print
INFO  10:16:10,042 - #29 (
INFO  10:16:10,042 - #8 d
INFO  10:16:10,042 - #30 )
INFO  10:16:10,042 - #27 ;
INFO  10:16:10,042 - #21 }
INFO  10:16:10,042 - #21 }
INFO  10:16:10,043 - =====================SINTAKSNO_STABLO=========================
INFO  10:16:10,044 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_1(
                       d
                      ) [Designator_1]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   d
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  10:16:10,045 - ==============================================================
INFO  10:16:10,059 - Pocetak obrade programa Program na liniji 1
INFO  10:16:10,059 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  10:16:10,061 - Deklarisana konstanta c na liniji 2
INFO  10:16:10,061 - Deklarisana konstanta d na liniji 2
INFO  10:16:10,061 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  10:16:10,061 - Deklarisana promenljiva e na liniji 3
INFO  10:16:10,062 - Pocetak obrade metode main na liniji 5
INFO  10:16:10,063 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  10:16:10,063 - Zavrsetak obrade programa Program na liniji 1
INFO  10:16:10,063 - ======================TABELA_SIMBOLA==========================
INFO  10:16:10,063 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  10:16:10,064 - ==============================================================
INFO  10:16:10,064 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  10:16:10,064 - ==============================================================
INFO  10:16:10,064 - ======================GENERISANJE_KODA========================
INFO  10:16:10,070 - Generisanje koda uspesno zavrseno!
INFO  10:16:10,070 - Generisanje izlaznog fajla test\program.obj
INFO  10:16:10,070 - ==============================================================
INFO  10:16:42,540 - Obrada ulaznog fajla test\program.mj
INFO  10:16:42,623 - #2 program
INFO  10:16:42,623 - #8 Program
INFO  10:16:42,623 - #5 const
INFO  10:16:42,624 - #8 int
INFO  10:16:42,624 - #8 c
INFO  10:16:42,625 - #24 =
INFO  10:16:42,625 - #9 10
INFO  10:16:42,625 - #28 ,
INFO  10:16:42,626 - #8 d
INFO  10:16:42,626 - #24 =
INFO  10:16:42,626 - #9 99
INFO  10:16:42,627 - #27 ;
INFO  10:16:42,627 - #8 int
INFO  10:16:42,628 - #8 e
INFO  10:16:42,628 - #27 ;
INFO  10:16:42,628 - #20 {
INFO  10:16:42,629 - #6 void
INFO  10:16:42,629 - #8 main
INFO  10:16:42,629 - #29 (
INFO  10:16:42,630 - #30 )
INFO  10:16:42,630 - #8 int
INFO  10:16:42,631 - #8 x
INFO  10:16:42,631 - #28 ,
INFO  10:16:42,631 - #8 y
INFO  10:16:42,631 - #27 ;
INFO  10:16:42,631 - #8 char
INFO  10:16:42,631 - #8 z
INFO  10:16:42,631 - #22 [
INFO  10:16:42,632 - #23 ]
INFO  10:16:42,632 - #27 ;
INFO  10:16:42,632 - #20 {
INFO  10:16:42,632 - #8 x
INFO  10:16:42,632 - #24 =
INFO  10:16:42,632 - #9 2
INFO  10:16:42,632 - #27 ;
INFO  10:16:42,633 - #8 y
INFO  10:16:42,633 - #24 =
INFO  10:16:42,633 - #9 5
INFO  10:16:42,633 - #27 ;
INFO  10:16:42,633 - #8 e
INFO  10:16:42,634 - #24 =
INFO  10:16:42,634 - #16 -
INFO  10:16:42,634 - #29 (
INFO  10:16:42,634 - #8 d
INFO  10:16:42,634 - #18 /
INFO  10:16:42,634 - #9 11
INFO  10:16:42,635 - #16 -
INFO  10:16:42,636 - #8 c
INFO  10:16:42,637 - #30 )
INFO  10:16:42,639 - #17 *
INFO  10:16:42,639 - #29 (
INFO  10:16:42,640 - #16 -
INFO  10:16:42,640 - #8 x
INFO  10:16:42,640 - #15 +
INFO  10:16:42,641 - #8 y
INFO  10:16:42,641 - #30 )
INFO  10:16:42,642 - #15 +
INFO  10:16:42,642 - #9 1
INFO  10:16:42,642 - #27 ;
INFO  10:16:42,642 - #8 e
INFO  10:16:42,642 - #25 ++
INFO  10:16:42,642 - #27 ;
INFO  10:16:42,643 - #3 print
INFO  10:16:42,644 - #29 (
INFO  10:16:42,644 - #8 e
INFO  10:16:42,644 - #30 )
INFO  10:16:42,644 - #27 ;
INFO  10:16:42,644 - #8 z
INFO  10:16:42,644 - #24 =
INFO  10:16:42,644 - #7 new
INFO  10:16:42,645 - #8 char
INFO  10:16:42,645 - #22 [
INFO  10:16:42,645 - #9 4
INFO  10:16:42,645 - #23 ]
INFO  10:16:42,645 - #27 ;
INFO  10:16:42,645 - #8 z
INFO  10:16:42,647 - #22 [
INFO  10:16:42,647 - #9 0
INFO  10:16:42,647 - #23 ]
INFO  10:16:42,647 - #24 =
INFO  10:16:42,647 - #8 chr
INFO  10:16:42,647 - #29 (
INFO  10:16:42,647 - #9 72
INFO  10:16:42,647 - #30 )
INFO  10:16:42,648 - #27 ;
INFO  10:16:42,648 - #8 z
INFO  10:16:42,648 - #22 [
INFO  10:16:42,648 - #9 1
INFO  10:16:42,648 - #23 ]
INFO  10:16:42,648 - #24 =
INFO  10:16:42,648 - #10 O
INFO  10:16:42,648 - #27 ;
INFO  10:16:42,649 - #8 z
INFO  10:16:42,649 - #22 [
INFO  10:16:42,649 - #9 2
INFO  10:16:42,649 - #23 ]
INFO  10:16:42,649 - #24 =
INFO  10:16:42,649 - #10 M
INFO  10:16:42,649 - #27 ;
INFO  10:16:42,649 - #8 z
INFO  10:16:42,649 - #22 [
INFO  10:16:42,649 - #9 3
INFO  10:16:42,649 - #23 ]
INFO  10:16:42,649 - #24 =
INFO  10:16:42,650 - #8 chr
INFO  10:16:42,650 - #29 (
INFO  10:16:42,650 - #8 ord
INFO  10:16:42,650 - #29 (
INFO  10:16:42,650 - #10 A
INFO  10:16:42,650 - #30 )
INFO  10:16:42,650 - #15 +
INFO  10:16:42,650 - #9 4
INFO  10:16:42,650 - #30 )
INFO  10:16:42,650 - #27 ;
INFO  10:16:42,650 - #3 print
INFO  10:16:42,650 - #29 (
INFO  10:16:42,651 - #8 z
INFO  10:16:42,651 - #22 [
INFO  10:16:42,651 - #9 0
INFO  10:16:42,651 - #23 ]
INFO  10:16:42,651 - #30 )
INFO  10:16:42,651 - #27 ;
INFO  10:16:42,651 - #3 print
INFO  10:16:42,651 - #29 (
INFO  10:16:42,651 - #8 z
INFO  10:16:42,651 - #22 [
INFO  10:16:42,651 - #9 1
INFO  10:16:42,651 - #23 ]
INFO  10:16:42,651 - #30 )
INFO  10:16:42,652 - #27 ;
INFO  10:16:42,652 - #3 print
INFO  10:16:42,652 - #29 (
INFO  10:16:42,652 - #8 z
INFO  10:16:42,652 - #22 [
INFO  10:16:42,652 - #9 2
INFO  10:16:42,652 - #23 ]
INFO  10:16:42,652 - #30 )
INFO  10:16:42,652 - #27 ;
INFO  10:16:42,652 - #3 print
INFO  10:16:42,652 - #29 (
INFO  10:16:42,652 - #8 z
INFO  10:16:42,652 - #22 [
INFO  10:16:42,652 - #9 3
INFO  10:16:42,652 - #23 ]
INFO  10:16:42,653 - #30 )
INFO  10:16:42,653 - #27 ;
INFO  10:16:42,653 - #3 print
INFO  10:16:42,653 - #29 (
INFO  10:16:42,653 - #8 len
INFO  10:16:42,653 - #29 (
INFO  10:16:42,653 - #8 z
INFO  10:16:42,653 - #30 )
INFO  10:16:42,653 - #30 )
INFO  10:16:42,653 - #27 ;
INFO  10:16:42,653 - #21 }
INFO  10:16:42,654 - #21 }
INFO  10:16:42,655 - =====================SINTAKSNO_STABLO=========================
INFO  10:16:42,658 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           x
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               2
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             5
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_expr(
                                                Expr_neg_term_multi(
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       x
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                  More_term_single(
                                                    More_term_part(
                                                      Add_op_plus(
                                                      ) [Add_op_plus]
                                                      Term_single(
                                                        Factor_designator(
                                                          Designator_1(
                                                           y
                                                          ) [Designator_1]
                                                        ) [Factor_designator]
                                                      ) [Term_single]
                                                    ) [More_term_part]
                                                  ) [More_term_single]
                                                ) [Expr_neg_term_multi]
                                              ) [Factor_expr]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  10:16:42,659 - ==============================================================
INFO  10:16:42,671 - Pocetak obrade programa Program na liniji 1
INFO  10:16:42,671 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  10:16:42,672 - Deklarisana konstanta c na liniji 2
INFO  10:16:42,672 - Deklarisana konstanta d na liniji 2
INFO  10:16:42,672 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  10:16:42,673 - Deklarisana promenljiva e na liniji 3
INFO  10:16:42,674 - Pocetak obrade metode main na liniji 5
INFO  10:16:42,674 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  10:16:42,674 - Deklarisana promenljiva x na liniji 5
INFO  10:16:42,675 - Deklarisana promenljiva y na liniji 5
INFO  10:16:42,675 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  10:16:42,675 - Deklarisan niz z na liniji 5
INFO  10:16:42,675 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  10:16:42,675 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  10:16:42,675 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  10:16:42,676 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  10:16:42,676 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  10:16:42,676 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  10:16:42,676 - Zavrsetak obrade programa Program na liniji 1
INFO  10:16:42,676 - ======================TABELA_SIMBOLA==========================
INFO  10:16:42,677 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  10:16:42,677 - ==============================================================
INFO  10:16:42,677 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  10:16:42,677 - ==============================================================
INFO  10:16:42,677 - ======================GENERISANJE_KODA========================
INFO  10:16:42,683 - Generisanje koda uspesno zavrseno!
INFO  10:16:42,684 - Generisanje izlaznog fajla test\program.obj
INFO  10:16:42,684 - ==============================================================
INFO  10:18:50,421 - Obrada ulaznog fajla test\program.mj
INFO  10:18:50,502 - #2 program
INFO  10:18:50,503 - #8 Program
INFO  10:18:50,503 - #5 const
INFO  10:18:50,504 - #8 int
INFO  10:18:50,504 - #8 c
INFO  10:18:50,505 - #24 =
INFO  10:18:50,505 - #9 10
INFO  10:18:50,505 - #28 ,
INFO  10:18:50,506 - #8 d
INFO  10:18:50,506 - #24 =
INFO  10:18:50,506 - #9 99
INFO  10:18:50,507 - #27 ;
INFO  10:18:50,507 - #8 int
INFO  10:18:50,508 - #8 e
INFO  10:18:50,508 - #27 ;
INFO  10:18:50,509 - #20 {
INFO  10:18:50,510 - #6 void
INFO  10:18:50,510 - #8 main
INFO  10:18:50,510 - #29 (
INFO  10:18:50,511 - #30 )
INFO  10:18:50,511 - #8 int
INFO  10:18:50,511 - #8 x
INFO  10:18:50,511 - #28 ,
INFO  10:18:50,512 - #8 y
INFO  10:18:50,512 - #27 ;
INFO  10:18:50,514 - #8 char
INFO  10:18:50,514 - #8 z
INFO  10:18:50,515 - #22 [
INFO  10:18:50,515 - #23 ]
INFO  10:18:50,515 - #27 ;
INFO  10:18:50,515 - #20 {
INFO  10:18:50,515 - #8 x
INFO  10:18:50,515 - #24 =
INFO  10:18:50,516 - #9 2
INFO  10:18:50,516 - #27 ;
INFO  10:18:50,516 - #8 y
INFO  10:18:50,517 - #24 =
INFO  10:18:50,517 - #9 5
INFO  10:18:50,517 - #27 ;
INFO  10:18:50,517 - #8 e
INFO  10:18:50,517 - #24 =
INFO  10:18:50,517 - #16 -
INFO  10:18:50,517 - #29 (
INFO  10:18:50,518 - #8 d
INFO  10:18:50,518 - #18 /
INFO  10:18:50,518 - #9 11
INFO  10:18:50,519 - #16 -
INFO  10:18:50,521 - #8 c
INFO  10:18:50,522 - #30 )
INFO  10:18:50,523 - #17 *
INFO  10:18:50,524 - #29 (
INFO  10:18:50,524 - #16 -
INFO  10:18:50,525 - #8 x
INFO  10:18:50,525 - #15 +
INFO  10:18:50,525 - #8 y
INFO  10:18:50,526 - #30 )
INFO  10:18:50,526 - #15 +
INFO  10:18:50,526 - #9 1
INFO  10:18:50,527 - #27 ;
INFO  10:18:50,527 - #8 e
INFO  10:18:50,527 - #25 ++
INFO  10:18:50,527 - #27 ;
INFO  10:18:50,527 - #3 print
INFO  10:18:50,528 - #29 (
INFO  10:18:50,528 - #8 e
INFO  10:18:50,528 - #30 )
INFO  10:18:50,528 - #27 ;
INFO  10:18:50,528 - #8 z
INFO  10:18:50,529 - #24 =
INFO  10:18:50,529 - #7 new
INFO  10:18:50,529 - #8 char
INFO  10:18:50,529 - #22 [
INFO  10:18:50,529 - #9 4
INFO  10:18:50,529 - #23 ]
INFO  10:18:50,529 - #27 ;
INFO  10:18:50,530 - #8 z
INFO  10:18:50,532 - #22 [
INFO  10:18:50,532 - #9 0
INFO  10:18:50,532 - #23 ]
INFO  10:18:50,532 - #24 =
INFO  10:18:50,532 - #8 chr
INFO  10:18:50,532 - #29 (
INFO  10:18:50,532 - #9 72
INFO  10:18:50,532 - #30 )
INFO  10:18:50,533 - #27 ;
INFO  10:18:50,533 - #8 z
INFO  10:18:50,533 - #22 [
INFO  10:18:50,533 - #9 1
INFO  10:18:50,533 - #23 ]
INFO  10:18:50,533 - #24 =
INFO  10:18:50,534 - #10 O
INFO  10:18:50,534 - #27 ;
INFO  10:18:50,534 - #8 z
INFO  10:18:50,534 - #22 [
INFO  10:18:50,534 - #9 2
INFO  10:18:50,534 - #23 ]
INFO  10:18:50,534 - #24 =
INFO  10:18:50,534 - #10 M
INFO  10:18:50,535 - #27 ;
INFO  10:18:50,535 - #8 z
INFO  10:18:50,535 - #22 [
INFO  10:18:50,535 - #9 3
INFO  10:18:50,535 - #23 ]
INFO  10:18:50,535 - #24 =
INFO  10:18:50,535 - #8 chr
INFO  10:18:50,535 - #29 (
INFO  10:18:50,535 - #8 ord
INFO  10:18:50,536 - #29 (
INFO  10:18:50,536 - #10 A
INFO  10:18:50,536 - #30 )
INFO  10:18:50,536 - #15 +
INFO  10:18:50,536 - #9 4
INFO  10:18:50,536 - #30 )
INFO  10:18:50,536 - #27 ;
INFO  10:18:50,536 - #3 print
INFO  10:18:50,537 - #29 (
INFO  10:18:50,537 - #8 z
INFO  10:18:50,537 - #22 [
INFO  10:18:50,537 - #9 0
INFO  10:18:50,537 - #23 ]
INFO  10:18:50,537 - #30 )
INFO  10:18:50,537 - #27 ;
INFO  10:18:50,537 - #3 print
INFO  10:18:50,537 - #29 (
INFO  10:18:50,537 - #8 z
INFO  10:18:50,537 - #22 [
INFO  10:18:50,538 - #9 1
INFO  10:18:50,538 - #23 ]
INFO  10:18:50,538 - #30 )
INFO  10:18:50,538 - #27 ;
INFO  10:18:50,538 - #3 print
INFO  10:18:50,538 - #29 (
INFO  10:18:50,538 - #8 z
INFO  10:18:50,538 - #22 [
INFO  10:18:50,538 - #9 2
INFO  10:18:50,538 - #23 ]
INFO  10:18:50,538 - #30 )
INFO  10:18:50,539 - #27 ;
INFO  10:18:50,539 - #3 print
INFO  10:18:50,539 - #29 (
INFO  10:18:50,539 - #8 z
INFO  10:18:50,539 - #22 [
INFO  10:18:50,539 - #9 3
INFO  10:18:50,539 - #23 ]
INFO  10:18:50,539 - #30 )
INFO  10:18:50,539 - #27 ;
INFO  10:18:50,539 - #3 print
INFO  10:18:50,539 - #29 (
INFO  10:18:50,539 - #8 len
INFO  10:18:50,539 - #29 (
INFO  10:18:50,539 - #8 z
INFO  10:18:50,539 - #30 )
INFO  10:18:50,540 - #30 )
INFO  10:18:50,540 - #27 ;
INFO  10:18:50,540 - #21 }
INFO  10:18:50,540 - #21 }
INFO  10:18:50,541 - =====================SINTAKSNO_STABLO=========================
INFO  10:18:50,544 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           x
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               2
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             5
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_expr(
                                                Expr_neg_term_multi(
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       x
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                  More_term_single(
                                                    More_term_part(
                                                      Add_op_plus(
                                                      ) [Add_op_plus]
                                                      Term_single(
                                                        Factor_designator(
                                                          Designator_1(
                                                           y
                                                          ) [Designator_1]
                                                        ) [Factor_designator]
                                                      ) [Term_single]
                                                    ) [More_term_part]
                                                  ) [More_term_single]
                                                ) [Expr_neg_term_multi]
                                              ) [Factor_expr]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  10:18:50,547 - ==============================================================
INFO  10:18:50,560 - Pocetak obrade programa Program na liniji 1
INFO  10:18:50,560 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  10:18:50,561 - Deklarisana konstanta c na liniji 2
INFO  10:18:50,561 - Deklarisana konstanta d na liniji 2
INFO  10:18:50,561 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  10:18:50,561 - Deklarisana promenljiva e na liniji 3
INFO  10:18:50,562 - Pocetak obrade metode main na liniji 5
INFO  10:18:50,562 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  10:18:50,562 - Deklarisana promenljiva x na liniji 5
INFO  10:18:50,562 - Deklarisana promenljiva y na liniji 5
INFO  10:18:50,562 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  10:18:50,562 - Deklarisan niz z na liniji 5
INFO  10:18:50,563 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  10:18:50,563 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  10:18:50,563 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  10:18:50,564 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  10:18:50,564 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  10:18:50,564 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  10:18:50,564 - Zavrsetak obrade programa Program na liniji 1
INFO  10:18:50,564 - ======================TABELA_SIMBOLA==========================
INFO  10:18:50,565 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  10:18:50,565 - ==============================================================
INFO  10:18:50,565 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  10:18:50,565 - ==============================================================
INFO  10:18:50,565 - ======================GENERISANJE_KODA========================
INFO  10:18:50,572 - Generisanje koda uspesno zavrseno!
INFO  10:18:50,572 - Generisanje izlaznog fajla test\program.obj
INFO  10:18:50,573 - ==============================================================
INFO  16:48:12,240 - Obrada ulaznog fajla test\program.mj
INFO  16:48:12,365 - #2 program
INFO  16:48:12,365 - #8 Program
INFO  16:48:12,365 - #5 const
INFO  16:48:12,366 - #8 int
INFO  16:48:12,366 - #8 c
INFO  16:48:12,368 - #24 =
INFO  16:48:12,368 - #9 10
INFO  16:48:12,368 - #28 ,
INFO  16:48:12,369 - #8 d
INFO  16:48:12,369 - #24 =
INFO  16:48:12,369 - #9 99
INFO  16:48:12,369 - #27 ;
INFO  16:48:12,369 - #8 int
INFO  16:48:12,370 - #8 e
INFO  16:48:12,370 - #27 ;
INFO  16:48:12,371 - #20 {
INFO  16:48:12,372 - #6 void
INFO  16:48:12,372 - #8 main
INFO  16:48:12,372 - #29 (
INFO  16:48:12,373 - #30 )
INFO  16:48:12,373 - #8 int
INFO  16:48:12,373 - #8 x
INFO  16:48:12,373 - #28 ,
INFO  16:48:12,373 - #8 y
INFO  16:48:12,373 - #27 ;
INFO  16:48:12,373 - #8 char
INFO  16:48:12,374 - #8 z
INFO  16:48:12,374 - #22 [
INFO  16:48:12,374 - #23 ]
INFO  16:48:12,374 - #27 ;
INFO  16:48:12,374 - #20 {
INFO  16:48:12,374 - #8 x
INFO  16:48:12,374 - #24 =
INFO  16:48:12,374 - #9 2
INFO  16:48:12,374 - #27 ;
INFO  16:48:12,375 - #8 y
INFO  16:48:12,375 - #24 =
INFO  16:48:12,375 - #9 5
INFO  16:48:12,375 - #27 ;
INFO  16:48:12,376 - #8 e
INFO  16:48:12,376 - #24 =
INFO  16:48:12,376 - #16 -
INFO  16:48:12,376 - #29 (
INFO  16:48:12,376 - #8 d
INFO  16:48:12,376 - #18 /
INFO  16:48:12,376 - #9 11
INFO  16:48:12,377 - #16 -
INFO  16:48:12,378 - #8 c
INFO  16:48:12,379 - #30 )
INFO  16:48:12,380 - #17 *
INFO  16:48:12,380 - #29 (
INFO  16:48:12,381 - #16 -
INFO  16:48:12,381 - #8 x
INFO  16:48:12,381 - #15 +
INFO  16:48:12,381 - #8 y
INFO  16:48:12,382 - #30 )
INFO  16:48:12,382 - #15 +
INFO  16:48:12,382 - #9 1
INFO  16:48:12,382 - #27 ;
INFO  16:48:12,382 - #8 e
INFO  16:48:12,382 - #25 ++
INFO  16:48:12,382 - #27 ;
INFO  16:48:12,382 - #3 print
INFO  16:48:12,383 - #29 (
INFO  16:48:12,383 - #8 e
INFO  16:48:12,383 - #30 )
INFO  16:48:12,383 - #27 ;
INFO  16:48:12,383 - #8 z
INFO  16:48:12,383 - #24 =
INFO  16:48:12,383 - #7 new
INFO  16:48:12,383 - #8 char
INFO  16:48:12,383 - #22 [
INFO  16:48:12,383 - #9 4
INFO  16:48:12,383 - #23 ]
INFO  16:48:12,383 - #27 ;
INFO  16:48:12,384 - #8 z
INFO  16:48:12,384 - #22 [
INFO  16:48:12,384 - #9 0
INFO  16:48:12,384 - #23 ]
INFO  16:48:12,384 - #24 =
INFO  16:48:12,384 - #8 chr
INFO  16:48:12,384 - #29 (
INFO  16:48:12,384 - #9 72
INFO  16:48:12,384 - #30 )
INFO  16:48:12,384 - #27 ;
INFO  16:48:12,385 - #8 z
INFO  16:48:12,385 - #22 [
INFO  16:48:12,385 - #9 1
INFO  16:48:12,385 - #23 ]
INFO  16:48:12,385 - #24 =
INFO  16:48:12,385 - #10 O
INFO  16:48:12,385 - #27 ;
INFO  16:48:12,385 - #8 z
INFO  16:48:12,385 - #22 [
INFO  16:48:12,385 - #9 2
INFO  16:48:12,386 - #23 ]
INFO  16:48:12,386 - #24 =
INFO  16:48:12,386 - #10 M
INFO  16:48:12,386 - #27 ;
INFO  16:48:12,386 - #8 z
INFO  16:48:12,386 - #22 [
INFO  16:48:12,386 - #9 3
INFO  16:48:12,386 - #23 ]
INFO  16:48:12,386 - #24 =
INFO  16:48:12,386 - #8 chr
INFO  16:48:12,386 - #29 (
INFO  16:48:12,386 - #8 ord
INFO  16:48:12,386 - #29 (
INFO  16:48:12,386 - #10 A
INFO  16:48:12,386 - #30 )
INFO  16:48:12,386 - #15 +
INFO  16:48:12,386 - #9 4
INFO  16:48:12,387 - #30 )
INFO  16:48:12,387 - #27 ;
INFO  16:48:12,387 - #3 print
INFO  16:48:12,387 - #29 (
INFO  16:48:12,387 - #8 z
INFO  16:48:12,387 - #22 [
INFO  16:48:12,387 - #9 0
INFO  16:48:12,387 - #23 ]
INFO  16:48:12,387 - #30 )
INFO  16:48:12,387 - #27 ;
INFO  16:48:12,387 - #3 print
INFO  16:48:12,387 - #29 (
INFO  16:48:12,388 - #8 z
INFO  16:48:12,388 - #22 [
INFO  16:48:12,388 - #9 1
INFO  16:48:12,388 - #23 ]
INFO  16:48:12,388 - #30 )
INFO  16:48:12,388 - #27 ;
INFO  16:48:12,388 - #3 print
INFO  16:48:12,388 - #29 (
INFO  16:48:12,388 - #8 z
INFO  16:48:12,388 - #22 [
INFO  16:48:12,388 - #9 2
INFO  16:48:12,388 - #23 ]
INFO  16:48:12,388 - #30 )
INFO  16:48:12,388 - #27 ;
INFO  16:48:12,389 - #3 print
INFO  16:48:12,389 - #29 (
INFO  16:48:12,389 - #8 z
INFO  16:48:12,389 - #22 [
INFO  16:48:12,389 - #9 3
INFO  16:48:12,389 - #23 ]
INFO  16:48:12,389 - #30 )
INFO  16:48:12,389 - #27 ;
INFO  16:48:12,389 - #3 print
INFO  16:48:12,389 - #29 (
INFO  16:48:12,389 - #8 len
INFO  16:48:12,389 - #29 (
INFO  16:48:12,389 - #8 z
INFO  16:48:12,389 - #30 )
INFO  16:48:12,389 - #30 )
INFO  16:48:12,389 - #27 ;
INFO  16:48:12,389 - #21 }
INFO  16:48:12,390 - #21 }
INFO  16:48:12,390 - =====================SINTAKSNO_STABLO=========================
INFO  16:48:12,394 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           x
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               2
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             5
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_expr(
                                                Expr_neg_term_multi(
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       x
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                  More_term_single(
                                                    More_term_part(
                                                      Add_op_plus(
                                                      ) [Add_op_plus]
                                                      Term_single(
                                                        Factor_designator(
                                                          Designator_1(
                                                           y
                                                          ) [Designator_1]
                                                        ) [Factor_designator]
                                                      ) [Term_single]
                                                    ) [More_term_part]
                                                  ) [More_term_single]
                                                ) [Expr_neg_term_multi]
                                              ) [Factor_expr]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  16:48:12,395 - ==============================================================
INFO  16:48:12,429 - Pocetak obrade programa Program na liniji 1
INFO  16:48:12,429 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  16:48:12,429 - Deklarisana konstanta c na liniji 2
INFO  16:48:12,430 - Deklarisana konstanta d na liniji 2
INFO  16:48:12,430 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  16:48:12,430 - Deklarisana promenljiva e na liniji 3
INFO  16:48:12,430 - Pocetak obrade metode main na liniji 5
INFO  16:48:12,431 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  16:48:12,431 - Deklarisana promenljiva x na liniji 5
INFO  16:48:12,431 - Deklarisana promenljiva y na liniji 5
INFO  16:48:12,431 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  16:48:12,432 - Deklarisan niz z na liniji 5
INFO  16:48:12,432 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  16:48:12,433 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  16:48:12,434 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  16:48:12,434 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  16:48:12,434 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  16:48:12,434 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  16:48:12,434 - Zavrsetak obrade programa Program na liniji 1
INFO  16:48:12,434 - ======================TABELA_SIMBOLA==========================
INFO  16:48:12,435 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  16:48:12,435 - ==============================================================
INFO  16:48:12,435 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  16:48:12,435 - ==============================================================
INFO  16:48:12,435 - ======================GENERISANJE_KODA========================
ERROR 16:48:12,441 - Generisanje koda neuspesno!
INFO  16:48:12,441 - ==============================================================
INFO  16:48:19,516 - Obrada ulaznog fajla test\program.mj
INFO  16:48:19,597 - #2 program
INFO  16:48:19,597 - #8 Program
INFO  16:48:19,597 - #5 const
INFO  16:48:19,599 - #8 int
INFO  16:48:19,599 - #8 c
INFO  16:48:19,600 - #24 =
INFO  16:48:19,600 - #9 10
INFO  16:48:19,600 - #28 ,
INFO  16:48:19,601 - #8 d
INFO  16:48:19,601 - #24 =
INFO  16:48:19,602 - #9 99
INFO  16:48:19,602 - #27 ;
INFO  16:48:19,602 - #8 int
INFO  16:48:19,603 - #8 e
INFO  16:48:19,603 - #27 ;
INFO  16:48:19,604 - #20 {
INFO  16:48:19,605 - #6 void
INFO  16:48:19,605 - #8 main
INFO  16:48:19,605 - #29 (
INFO  16:48:19,606 - #30 )
INFO  16:48:19,606 - #8 int
INFO  16:48:19,606 - #8 x
INFO  16:48:19,606 - #28 ,
INFO  16:48:19,607 - #8 y
INFO  16:48:19,607 - #27 ;
INFO  16:48:19,607 - #8 char
INFO  16:48:19,607 - #8 z
INFO  16:48:19,607 - #22 [
INFO  16:48:19,607 - #23 ]
INFO  16:48:19,608 - #27 ;
INFO  16:48:19,608 - #20 {
INFO  16:48:19,608 - #8 x
INFO  16:48:19,608 - #24 =
INFO  16:48:19,608 - #9 2
INFO  16:48:19,608 - #27 ;
INFO  16:48:19,609 - #8 y
INFO  16:48:19,609 - #24 =
INFO  16:48:19,610 - #9 5
INFO  16:48:19,610 - #27 ;
INFO  16:48:19,610 - #8 e
INFO  16:48:19,610 - #24 =
INFO  16:48:19,610 - #16 -
INFO  16:48:19,610 - #29 (
INFO  16:48:19,610 - #8 d
INFO  16:48:19,611 - #18 /
INFO  16:48:19,611 - #9 11
INFO  16:48:19,612 - #16 -
INFO  16:48:19,614 - #8 c
INFO  16:48:19,615 - #30 )
INFO  16:48:19,616 - #17 *
INFO  16:48:19,617 - #29 (
INFO  16:48:19,617 - #16 -
INFO  16:48:19,618 - #8 x
INFO  16:48:19,618 - #15 +
INFO  16:48:19,618 - #8 y
INFO  16:48:19,619 - #30 )
INFO  16:48:19,619 - #15 +
INFO  16:48:19,619 - #9 1
INFO  16:48:19,620 - #27 ;
INFO  16:48:19,620 - #8 e
INFO  16:48:19,620 - #25 ++
INFO  16:48:19,620 - #27 ;
INFO  16:48:19,620 - #3 print
INFO  16:48:19,620 - #29 (
INFO  16:48:19,621 - #8 e
INFO  16:48:19,621 - #30 )
INFO  16:48:19,621 - #27 ;
INFO  16:48:19,621 - #8 z
INFO  16:48:19,621 - #24 =
INFO  16:48:19,621 - #7 new
INFO  16:48:19,621 - #8 char
INFO  16:48:19,621 - #22 [
INFO  16:48:19,621 - #9 4
INFO  16:48:19,622 - #23 ]
INFO  16:48:19,622 - #27 ;
INFO  16:48:19,622 - #8 z
INFO  16:48:19,624 - #22 [
INFO  16:48:19,624 - #9 0
INFO  16:48:19,624 - #23 ]
INFO  16:48:19,624 - #24 =
INFO  16:48:19,625 - #8 chr
INFO  16:48:19,625 - #29 (
INFO  16:48:19,625 - #9 72
INFO  16:48:19,625 - #30 )
INFO  16:48:19,625 - #27 ;
INFO  16:48:19,625 - #8 z
INFO  16:48:19,625 - #22 [
INFO  16:48:19,626 - #9 1
INFO  16:48:19,626 - #23 ]
INFO  16:48:19,626 - #24 =
INFO  16:48:19,626 - #10 O
INFO  16:48:19,626 - #27 ;
INFO  16:48:19,626 - #8 z
INFO  16:48:19,626 - #22 [
INFO  16:48:19,627 - #9 2
INFO  16:48:19,627 - #23 ]
INFO  16:48:19,627 - #24 =
INFO  16:48:19,627 - #10 M
INFO  16:48:19,627 - #27 ;
INFO  16:48:19,627 - #8 z
INFO  16:48:19,627 - #22 [
INFO  16:48:19,627 - #9 3
INFO  16:48:19,627 - #23 ]
INFO  16:48:19,627 - #24 =
INFO  16:48:19,627 - #8 chr
INFO  16:48:19,628 - #29 (
INFO  16:48:19,628 - #8 ord
INFO  16:48:19,628 - #29 (
INFO  16:48:19,628 - #10 A
INFO  16:48:19,628 - #30 )
INFO  16:48:19,628 - #15 +
INFO  16:48:19,628 - #9 4
INFO  16:48:19,628 - #30 )
INFO  16:48:19,628 - #27 ;
INFO  16:48:19,628 - #3 print
INFO  16:48:19,628 - #29 (
INFO  16:48:19,628 - #8 z
INFO  16:48:19,629 - #22 [
INFO  16:48:19,629 - #9 0
INFO  16:48:19,629 - #23 ]
INFO  16:48:19,629 - #30 )
INFO  16:48:19,629 - #27 ;
INFO  16:48:19,629 - #3 print
INFO  16:48:19,629 - #29 (
INFO  16:48:19,629 - #8 z
INFO  16:48:19,629 - #22 [
INFO  16:48:19,629 - #9 1
INFO  16:48:19,629 - #23 ]
INFO  16:48:19,629 - #30 )
INFO  16:48:19,630 - #27 ;
INFO  16:48:19,630 - #3 print
INFO  16:48:19,630 - #29 (
INFO  16:48:19,630 - #8 z
INFO  16:48:19,630 - #22 [
INFO  16:48:19,630 - #9 2
INFO  16:48:19,630 - #23 ]
INFO  16:48:19,630 - #30 )
INFO  16:48:19,630 - #27 ;
INFO  16:48:19,630 - #3 print
INFO  16:48:19,630 - #29 (
INFO  16:48:19,630 - #8 z
INFO  16:48:19,630 - #22 [
INFO  16:48:19,630 - #9 3
INFO  16:48:19,631 - #23 ]
INFO  16:48:19,631 - #30 )
INFO  16:48:19,631 - #27 ;
INFO  16:48:19,631 - #3 print
INFO  16:48:19,631 - #29 (
INFO  16:48:19,631 - #8 len
INFO  16:48:19,631 - #29 (
INFO  16:48:19,631 - #8 z
INFO  16:48:19,631 - #30 )
INFO  16:48:19,631 - #30 )
INFO  16:48:19,631 - #27 ;
INFO  16:48:19,631 - #21 }
INFO  16:48:19,631 - #21 }
INFO  16:48:19,632 - =====================SINTAKSNO_STABLO=========================
INFO  16:48:19,636 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           x
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               2
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             5
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_expr(
                                                Expr_neg_term_multi(
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       x
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                  More_term_single(
                                                    More_term_part(
                                                      Add_op_plus(
                                                      ) [Add_op_plus]
                                                      Term_single(
                                                        Factor_designator(
                                                          Designator_1(
                                                           y
                                                          ) [Designator_1]
                                                        ) [Factor_designator]
                                                      ) [Term_single]
                                                    ) [More_term_part]
                                                  ) [More_term_single]
                                                ) [Expr_neg_term_multi]
                                              ) [Factor_expr]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  16:48:19,637 - ==============================================================
INFO  16:48:19,650 - Pocetak obrade programa Program na liniji 1
INFO  16:48:19,651 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  16:48:19,651 - Deklarisana konstanta c na liniji 2
INFO  16:48:19,652 - Deklarisana konstanta d na liniji 2
INFO  16:48:19,652 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  16:48:19,652 - Deklarisana promenljiva e na liniji 3
INFO  16:48:19,653 - Pocetak obrade metode main na liniji 5
INFO  16:48:19,653 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  16:48:19,653 - Deklarisana promenljiva x na liniji 5
INFO  16:48:19,653 - Deklarisana promenljiva y na liniji 5
INFO  16:48:19,654 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  16:48:19,654 - Deklarisan niz z na liniji 5
INFO  16:48:19,654 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  16:48:19,655 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  16:48:19,655 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  16:48:19,655 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  16:48:19,655 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  16:48:19,655 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  16:48:19,655 - Zavrsetak obrade programa Program na liniji 1
INFO  16:48:19,656 - ======================TABELA_SIMBOLA==========================
INFO  16:48:19,656 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  16:48:19,656 - ==============================================================
INFO  16:48:19,656 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  16:48:19,657 - ==============================================================
INFO  16:48:19,657 - ======================GENERISANJE_KODA========================
ERROR 16:48:19,664 - Generisanje koda neuspesno!
INFO  16:48:19,664 - ==============================================================
INFO  16:49:30,404 - Obrada ulaznog fajla test\program.mj
INFO  16:49:30,477 - #2 program
INFO  16:49:30,477 - #8 Program
INFO  16:49:30,478 - #5 const
INFO  16:49:30,479 - #8 int
INFO  16:49:30,479 - #8 c
INFO  16:49:30,480 - #24 =
INFO  16:49:30,480 - #9 10
INFO  16:49:30,480 - #28 ,
INFO  16:49:30,481 - #8 d
INFO  16:49:30,481 - #24 =
INFO  16:49:30,481 - #9 99
INFO  16:49:30,481 - #27 ;
INFO  16:49:30,482 - #8 int
INFO  16:49:30,483 - #8 e
INFO  16:49:30,483 - #27 ;
INFO  16:49:30,483 - #20 {
INFO  16:49:30,484 - #6 void
INFO  16:49:30,484 - #8 main
INFO  16:49:30,484 - #29 (
INFO  16:49:30,485 - #30 )
INFO  16:49:30,485 - #8 int
INFO  16:49:30,485 - #8 x
INFO  16:49:30,485 - #28 ,
INFO  16:49:30,486 - #8 y
INFO  16:49:30,486 - #27 ;
INFO  16:49:30,486 - #8 char
INFO  16:49:30,486 - #8 z
INFO  16:49:30,486 - #22 [
INFO  16:49:30,486 - #23 ]
INFO  16:49:30,487 - #27 ;
INFO  16:49:30,487 - #20 {
INFO  16:49:30,487 - #8 x
INFO  16:49:30,487 - #24 =
INFO  16:49:30,487 - #9 2
INFO  16:49:30,487 - #27 ;
INFO  16:49:30,488 - #8 y
INFO  16:49:30,488 - #24 =
INFO  16:49:30,488 - #9 5
INFO  16:49:30,488 - #27 ;
INFO  16:49:30,489 - #8 e
INFO  16:49:30,489 - #24 =
INFO  16:49:30,489 - #16 -
INFO  16:49:30,489 - #29 (
INFO  16:49:30,489 - #8 d
INFO  16:49:30,489 - #18 /
INFO  16:49:30,489 - #9 11
INFO  16:49:30,491 - #16 -
INFO  16:49:30,492 - #8 c
INFO  16:49:30,493 - #30 )
INFO  16:49:30,495 - #17 *
INFO  16:49:30,496 - #29 (
INFO  16:49:30,497 - #16 -
INFO  16:49:30,497 - #8 x
INFO  16:49:30,497 - #15 +
INFO  16:49:30,497 - #8 y
INFO  16:49:30,498 - #30 )
INFO  16:49:30,498 - #15 +
INFO  16:49:30,498 - #9 1
INFO  16:49:30,498 - #27 ;
INFO  16:49:30,498 - #8 e
INFO  16:49:30,499 - #25 ++
INFO  16:49:30,499 - #27 ;
INFO  16:49:30,499 - #3 print
INFO  16:49:30,499 - #29 (
INFO  16:49:30,499 - #8 e
INFO  16:49:30,499 - #30 )
INFO  16:49:30,499 - #27 ;
INFO  16:49:30,499 - #8 z
INFO  16:49:30,500 - #24 =
INFO  16:49:30,500 - #7 new
INFO  16:49:30,500 - #8 char
INFO  16:49:30,500 - #22 [
INFO  16:49:30,500 - #9 4
INFO  16:49:30,500 - #23 ]
INFO  16:49:30,500 - #27 ;
INFO  16:49:30,500 - #8 z
INFO  16:49:30,502 - #22 [
INFO  16:49:30,502 - #9 0
INFO  16:49:30,502 - #23 ]
INFO  16:49:30,503 - #24 =
INFO  16:49:30,503 - #8 chr
INFO  16:49:30,503 - #29 (
INFO  16:49:30,503 - #9 72
INFO  16:49:30,503 - #30 )
INFO  16:49:30,503 - #27 ;
INFO  16:49:30,504 - #8 z
INFO  16:49:30,504 - #22 [
INFO  16:49:30,504 - #9 1
INFO  16:49:30,504 - #23 ]
INFO  16:49:30,504 - #24 =
INFO  16:49:30,504 - #10 O
INFO  16:49:30,504 - #27 ;
INFO  16:49:30,505 - #8 z
INFO  16:49:30,505 - #22 [
INFO  16:49:30,505 - #9 2
INFO  16:49:30,505 - #23 ]
INFO  16:49:30,505 - #24 =
INFO  16:49:30,505 - #10 M
INFO  16:49:30,505 - #27 ;
INFO  16:49:30,505 - #8 z
INFO  16:49:30,505 - #22 [
INFO  16:49:30,505 - #9 3
INFO  16:49:30,506 - #23 ]
INFO  16:49:30,506 - #24 =
INFO  16:49:30,506 - #8 chr
INFO  16:49:30,506 - #29 (
INFO  16:49:30,506 - #8 ord
INFO  16:49:30,506 - #29 (
INFO  16:49:30,506 - #10 A
INFO  16:49:30,506 - #30 )
INFO  16:49:30,506 - #15 +
INFO  16:49:30,506 - #9 4
INFO  16:49:30,506 - #30 )
INFO  16:49:30,507 - #27 ;
INFO  16:49:30,507 - #3 print
INFO  16:49:30,507 - #29 (
INFO  16:49:30,507 - #8 z
INFO  16:49:30,507 - #22 [
INFO  16:49:30,507 - #9 0
INFO  16:49:30,507 - #23 ]
INFO  16:49:30,507 - #30 )
INFO  16:49:30,507 - #27 ;
INFO  16:49:30,507 - #3 print
INFO  16:49:30,507 - #29 (
INFO  16:49:30,508 - #8 z
INFO  16:49:30,508 - #22 [
INFO  16:49:30,508 - #9 1
INFO  16:49:30,508 - #23 ]
INFO  16:49:30,508 - #30 )
INFO  16:49:30,508 - #27 ;
INFO  16:49:30,508 - #3 print
INFO  16:49:30,508 - #29 (
INFO  16:49:30,508 - #8 z
INFO  16:49:30,508 - #22 [
INFO  16:49:30,508 - #9 2
INFO  16:49:30,508 - #23 ]
INFO  16:49:30,508 - #30 )
INFO  16:49:30,509 - #27 ;
INFO  16:49:30,509 - #3 print
INFO  16:49:30,509 - #29 (
INFO  16:49:30,509 - #8 z
INFO  16:49:30,509 - #22 [
INFO  16:49:30,509 - #9 3
INFO  16:49:30,509 - #23 ]
INFO  16:49:30,509 - #30 )
INFO  16:49:30,509 - #27 ;
INFO  16:49:30,509 - #3 print
INFO  16:49:30,509 - #29 (
INFO  16:49:30,509 - #8 len
INFO  16:49:30,509 - #29 (
INFO  16:49:30,510 - #8 z
INFO  16:49:30,510 - #30 )
INFO  16:49:30,510 - #30 )
INFO  16:49:30,510 - #27 ;
INFO  16:49:30,510 - #21 }
INFO  16:49:30,510 - #21 }
INFO  16:49:30,511 - =====================SINTAKSNO_STABLO=========================
INFO  16:49:30,515 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           x
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               2
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             5
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_expr(
                                                Expr_neg_term_multi(
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       x
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                  More_term_single(
                                                    More_term_part(
                                                      Add_op_plus(
                                                      ) [Add_op_plus]
                                                      Term_single(
                                                        Factor_designator(
                                                          Designator_1(
                                                           y
                                                          ) [Designator_1]
                                                        ) [Factor_designator]
                                                      ) [Term_single]
                                                    ) [More_term_part]
                                                  ) [More_term_single]
                                                ) [Expr_neg_term_multi]
                                              ) [Factor_expr]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  16:49:30,517 - ==============================================================
INFO  16:49:30,529 - Pocetak obrade programa Program na liniji 1
INFO  16:49:30,530 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  16:49:30,531 - Deklarisana konstanta c na liniji 2
INFO  16:49:30,531 - Deklarisana konstanta d na liniji 2
INFO  16:49:30,531 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  16:49:30,531 - Deklarisana promenljiva e na liniji 3
INFO  16:49:30,532 - Pocetak obrade metode main na liniji 5
INFO  16:49:30,532 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  16:49:30,532 - Deklarisana promenljiva x na liniji 5
INFO  16:49:30,532 - Deklarisana promenljiva y na liniji 5
INFO  16:49:30,532 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  16:49:30,532 - Deklarisan niz z na liniji 5
INFO  16:49:30,533 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  16:49:30,533 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  16:49:30,533 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  16:49:30,533 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  16:49:30,533 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  16:49:30,533 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  16:49:30,534 - Zavrsetak obrade programa Program na liniji 1
INFO  16:49:30,534 - ======================TABELA_SIMBOLA==========================
INFO  16:49:30,534 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  16:49:30,534 - ==============================================================
INFO  16:49:30,534 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  16:49:30,534 - ==============================================================
INFO  16:49:30,534 - ======================GENERISANJE_KODA========================
ERROR 16:49:30,540 - Generisanje koda neuspesno!
INFO  16:49:30,541 - ==============================================================
INFO  16:50:05,939 - Obrada ulaznog fajla test\program.mj
INFO  16:50:06,009 - #2 program
INFO  16:50:06,009 - #8 Program
INFO  16:50:06,010 - #5 const
INFO  16:50:06,011 - #8 int
INFO  16:50:06,011 - #8 c
INFO  16:50:06,012 - #24 =
INFO  16:50:06,012 - #9 10
INFO  16:50:06,012 - #28 ,
INFO  16:50:06,013 - #8 d
INFO  16:50:06,013 - #24 =
INFO  16:50:06,013 - #9 99
INFO  16:50:06,014 - #27 ;
INFO  16:50:06,014 - #8 int
INFO  16:50:06,015 - #8 e
INFO  16:50:06,015 - #27 ;
INFO  16:50:06,016 - #20 {
INFO  16:50:06,017 - #6 void
INFO  16:50:06,017 - #8 main
INFO  16:50:06,017 - #29 (
INFO  16:50:06,018 - #30 )
INFO  16:50:06,018 - #8 int
INFO  16:50:06,018 - #8 x
INFO  16:50:06,019 - #28 ,
INFO  16:50:06,019 - #8 y
INFO  16:50:06,019 - #27 ;
INFO  16:50:06,019 - #8 char
INFO  16:50:06,019 - #8 z
INFO  16:50:06,019 - #22 [
INFO  16:50:06,019 - #23 ]
INFO  16:50:06,020 - #27 ;
INFO  16:50:06,020 - #20 {
INFO  16:50:06,020 - #8 x
INFO  16:50:06,020 - #24 =
INFO  16:50:06,020 - #9 2
INFO  16:50:06,020 - #27 ;
INFO  16:50:06,021 - #8 y
INFO  16:50:06,021 - #24 =
INFO  16:50:06,021 - #9 5
INFO  16:50:06,022 - #27 ;
INFO  16:50:06,022 - #8 e
INFO  16:50:06,022 - #24 =
INFO  16:50:06,022 - #16 -
INFO  16:50:06,022 - #29 (
INFO  16:50:06,022 - #8 d
INFO  16:50:06,022 - #18 /
INFO  16:50:06,023 - #9 11
INFO  16:50:06,024 - #16 -
INFO  16:50:06,026 - #8 c
INFO  16:50:06,027 - #30 )
INFO  16:50:06,029 - #17 *
INFO  16:50:06,029 - #29 (
INFO  16:50:06,030 - #16 -
INFO  16:50:06,030 - #8 x
INFO  16:50:06,030 - #15 +
INFO  16:50:06,030 - #8 y
INFO  16:50:06,031 - #30 )
INFO  16:50:06,031 - #15 +
INFO  16:50:06,032 - #9 1
INFO  16:50:06,032 - #27 ;
INFO  16:50:06,032 - #8 e
INFO  16:50:06,032 - #25 ++
INFO  16:50:06,032 - #27 ;
INFO  16:50:06,032 - #3 print
INFO  16:50:06,033 - #29 (
INFO  16:50:06,033 - #8 e
INFO  16:50:06,033 - #30 )
INFO  16:50:06,033 - #27 ;
INFO  16:50:06,033 - #8 z
INFO  16:50:06,033 - #24 =
INFO  16:50:06,033 - #7 new
INFO  16:50:06,034 - #8 char
INFO  16:50:06,034 - #22 [
INFO  16:50:06,034 - #9 4
INFO  16:50:06,034 - #23 ]
INFO  16:50:06,034 - #27 ;
INFO  16:50:06,034 - #8 z
INFO  16:50:06,034 - #22 [
INFO  16:50:06,034 - #9 0
INFO  16:50:06,034 - #23 ]
INFO  16:50:06,034 - #24 =
INFO  16:50:06,035 - #8 chr
INFO  16:50:06,035 - #29 (
INFO  16:50:06,035 - #9 72
INFO  16:50:06,035 - #30 )
INFO  16:50:06,035 - #27 ;
INFO  16:50:06,035 - #8 z
INFO  16:50:06,036 - #22 [
INFO  16:50:06,036 - #9 1
INFO  16:50:06,036 - #23 ]
INFO  16:50:06,036 - #24 =
INFO  16:50:06,036 - #10 O
INFO  16:50:06,036 - #27 ;
INFO  16:50:06,037 - #8 z
INFO  16:50:06,037 - #22 [
INFO  16:50:06,037 - #9 2
INFO  16:50:06,037 - #23 ]
INFO  16:50:06,037 - #24 =
INFO  16:50:06,037 - #10 M
INFO  16:50:06,037 - #27 ;
INFO  16:50:06,037 - #8 z
INFO  16:50:06,037 - #22 [
INFO  16:50:06,037 - #9 3
INFO  16:50:06,037 - #23 ]
INFO  16:50:06,038 - #24 =
INFO  16:50:06,038 - #8 chr
INFO  16:50:06,038 - #29 (
INFO  16:50:06,038 - #8 ord
INFO  16:50:06,038 - #29 (
INFO  16:50:06,038 - #10 A
INFO  16:50:06,038 - #30 )
INFO  16:50:06,038 - #15 +
INFO  16:50:06,038 - #9 4
INFO  16:50:06,038 - #30 )
INFO  16:50:06,038 - #27 ;
INFO  16:50:06,039 - #3 print
INFO  16:50:06,039 - #29 (
INFO  16:50:06,039 - #8 z
INFO  16:50:06,039 - #22 [
INFO  16:50:06,039 - #9 0
INFO  16:50:06,039 - #23 ]
INFO  16:50:06,039 - #30 )
INFO  16:50:06,039 - #27 ;
INFO  16:50:06,039 - #3 print
INFO  16:50:06,039 - #29 (
INFO  16:50:06,039 - #8 z
INFO  16:50:06,040 - #22 [
INFO  16:50:06,040 - #9 1
INFO  16:50:06,040 - #23 ]
INFO  16:50:06,040 - #30 )
INFO  16:50:06,040 - #27 ;
INFO  16:50:06,040 - #3 print
INFO  16:50:06,040 - #29 (
INFO  16:50:06,040 - #8 z
INFO  16:50:06,040 - #22 [
INFO  16:50:06,040 - #9 2
INFO  16:50:06,040 - #23 ]
INFO  16:50:06,040 - #30 )
INFO  16:50:06,040 - #27 ;
INFO  16:50:06,041 - #3 print
INFO  16:50:06,041 - #29 (
INFO  16:50:06,042 - #8 z
INFO  16:50:06,042 - #22 [
INFO  16:50:06,042 - #9 3
INFO  16:50:06,042 - #23 ]
INFO  16:50:06,042 - #30 )
INFO  16:50:06,042 - #27 ;
INFO  16:50:06,042 - #3 print
INFO  16:50:06,043 - #29 (
INFO  16:50:06,043 - #8 len
INFO  16:50:06,043 - #29 (
INFO  16:50:06,043 - #8 z
INFO  16:50:06,043 - #30 )
INFO  16:50:06,043 - #30 )
INFO  16:50:06,043 - #27 ;
INFO  16:50:06,043 - #21 }
INFO  16:50:06,043 - #21 }
INFO  16:50:06,044 - =====================SINTAKSNO_STABLO=========================
INFO  16:50:06,047 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           x
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               2
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             5
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_expr(
                                                Expr_neg_term_multi(
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       x
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                  More_term_single(
                                                    More_term_part(
                                                      Add_op_plus(
                                                      ) [Add_op_plus]
                                                      Term_single(
                                                        Factor_designator(
                                                          Designator_1(
                                                           y
                                                          ) [Designator_1]
                                                        ) [Factor_designator]
                                                      ) [Term_single]
                                                    ) [More_term_part]
                                                  ) [More_term_single]
                                                ) [Expr_neg_term_multi]
                                              ) [Factor_expr]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  16:50:06,048 - ==============================================================
INFO  16:50:06,063 - Pocetak obrade programa Program na liniji 1
INFO  16:50:06,063 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  16:50:06,064 - Deklarisana konstanta c na liniji 2
INFO  16:50:06,064 - Deklarisana konstanta d na liniji 2
INFO  16:50:06,064 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  16:50:06,064 - Deklarisana promenljiva e na liniji 3
INFO  16:50:06,065 - Pocetak obrade metode main na liniji 5
INFO  16:50:06,065 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  16:50:06,065 - Deklarisana promenljiva x na liniji 5
INFO  16:50:06,065 - Deklarisana promenljiva y na liniji 5
INFO  16:50:06,065 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  16:50:06,066 - Deklarisan niz z na liniji 5
INFO  16:50:06,066 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  16:50:06,066 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  16:50:06,066 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  16:50:06,066 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  16:50:06,067 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  16:50:06,067 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  16:50:06,067 - Zavrsetak obrade programa Program na liniji 1
INFO  16:50:06,067 - ======================TABELA_SIMBOLA==========================
INFO  16:50:06,067 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  16:50:06,067 - ==============================================================
INFO  16:50:06,068 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  16:50:06,068 - ==============================================================
INFO  16:50:06,068 - ======================GENERISANJE_KODA========================
ERROR 16:50:06,074 - Generisanje koda neuspesno!
INFO  16:50:06,074 - ==============================================================
INFO  16:52:13,813 - Obrada ulaznog fajla test\program.mj
INFO  16:52:13,893 - #2 program
INFO  16:52:13,893 - #8 Program
INFO  16:52:13,894 - #5 const
INFO  16:52:13,895 - #8 int
INFO  16:52:13,895 - #8 c
INFO  16:52:13,896 - #24 =
INFO  16:52:13,896 - #9 10
INFO  16:52:13,896 - #28 ,
INFO  16:52:13,897 - #8 d
INFO  16:52:13,897 - #24 =
INFO  16:52:13,897 - #9 99
INFO  16:52:13,897 - #27 ;
INFO  16:52:13,898 - #8 int
INFO  16:52:13,899 - #8 e
INFO  16:52:13,900 - #27 ;
INFO  16:52:13,900 - #20 {
INFO  16:52:13,901 - #6 void
INFO  16:52:13,901 - #8 main
INFO  16:52:13,902 - #29 (
INFO  16:52:13,903 - #30 )
INFO  16:52:13,903 - #8 int
INFO  16:52:13,903 - #8 x
INFO  16:52:13,903 - #28 ,
INFO  16:52:13,903 - #8 y
INFO  16:52:13,903 - #27 ;
INFO  16:52:13,904 - #8 char
INFO  16:52:13,905 - #8 z
INFO  16:52:13,905 - #22 [
INFO  16:52:13,905 - #23 ]
INFO  16:52:13,905 - #27 ;
INFO  16:52:13,905 - #20 {
INFO  16:52:13,905 - #8 e
INFO  16:52:13,905 - #25 ++
INFO  16:52:13,906 - #27 ;
INFO  16:52:13,906 - #3 print
INFO  16:52:13,906 - #29 (
INFO  16:52:13,906 - #8 e
INFO  16:52:13,906 - #30 )
INFO  16:52:13,907 - #27 ;
INFO  16:52:13,907 - #8 z
INFO  16:52:13,907 - #24 =
INFO  16:52:13,907 - #7 new
INFO  16:52:13,909 - #8 char
INFO  16:52:13,909 - #22 [
INFO  16:52:13,909 - #9 4
INFO  16:52:13,909 - #23 ]
INFO  16:52:13,910 - #27 ;
INFO  16:52:13,910 - #3 print
INFO  16:52:13,910 - #29 (
INFO  16:52:13,910 - #8 len
INFO  16:52:13,911 - #29 (
INFO  16:52:13,911 - #8 z
INFO  16:52:13,911 - #30 )
INFO  16:52:13,911 - #30 )
INFO  16:52:13,911 - #27 ;
INFO  16:52:13,911 - #21 }
INFO  16:52:13,911 - #21 }
INFO  16:52:13,912 - =====================SINTAKSNO_STABLO=========================
INFO  16:52:13,914 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_design(
              Assignment(
                Designator_1(
                 z
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_new_array(
                      Type(
                       char
                      ) [Type]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           4
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Factor_new_array]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  16:52:13,922 - ==============================================================
INFO  16:52:13,934 - Pocetak obrade programa Program na liniji 1
INFO  16:52:13,934 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  16:52:13,935 - Deklarisana konstanta c na liniji 2
INFO  16:52:13,935 - Deklarisana konstanta d na liniji 2
INFO  16:52:13,935 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  16:52:13,936 - Deklarisana promenljiva e na liniji 3
INFO  16:52:13,936 - Pocetak obrade metode main na liniji 5
INFO  16:52:13,936 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  16:52:13,936 - Deklarisana promenljiva x na liniji 5
INFO  16:52:13,937 - Deklarisana promenljiva y na liniji 5
INFO  16:52:13,937 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  16:52:13,937 - Deklarisan niz z na liniji 5
INFO  16:52:13,937 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  16:52:13,937 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  16:52:13,938 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  16:52:13,939 - Zavrsetak obrade programa Program na liniji 1
INFO  16:52:13,939 - ======================TABELA_SIMBOLA==========================
INFO  16:52:13,940 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  16:52:13,940 - ==============================================================
INFO  16:52:13,940 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  16:52:13,941 - ==============================================================
INFO  16:52:13,941 - ======================GENERISANJE_KODA========================
ERROR 16:52:13,947 - Generisanje koda neuspesno!
INFO  16:52:13,947 - ==============================================================
INFO  16:52:59,542 - Obrada ulaznog fajla test\program.mj
INFO  16:52:59,628 - #2 program
INFO  16:52:59,628 - #8 Program
INFO  16:52:59,629 - #5 const
INFO  16:52:59,630 - #8 int
INFO  16:52:59,630 - #8 c
INFO  16:52:59,631 - #24 =
INFO  16:52:59,631 - #9 10
INFO  16:52:59,631 - #28 ,
INFO  16:52:59,632 - #8 d
INFO  16:52:59,633 - #24 =
INFO  16:52:59,633 - #9 99
INFO  16:52:59,633 - #27 ;
INFO  16:52:59,633 - #8 int
INFO  16:52:59,634 - #8 e
INFO  16:52:59,634 - #27 ;
INFO  16:52:59,635 - #20 {
INFO  16:52:59,636 - #6 void
INFO  16:52:59,636 - #8 main
INFO  16:52:59,636 - #29 (
INFO  16:52:59,637 - #30 )
INFO  16:52:59,637 - #8 int
INFO  16:52:59,637 - #8 x
INFO  16:52:59,637 - #28 ,
INFO  16:52:59,637 - #8 y
INFO  16:52:59,637 - #27 ;
INFO  16:52:59,638 - #8 char
INFO  16:52:59,638 - #8 z
INFO  16:52:59,638 - #22 [
INFO  16:52:59,638 - #23 ]
INFO  16:52:59,638 - #27 ;
INFO  16:52:59,638 - #20 {
INFO  16:52:59,638 - #8 e
INFO  16:52:59,639 - #25 ++
INFO  16:52:59,639 - #27 ;
INFO  16:52:59,639 - #3 print
INFO  16:52:59,639 - #29 (
INFO  16:52:59,639 - #8 e
INFO  16:52:59,640 - #30 )
INFO  16:52:59,640 - #27 ;
INFO  16:52:59,640 - #8 z
INFO  16:52:59,640 - #24 =
INFO  16:52:59,640 - #7 new
INFO  16:52:59,640 - #8 char
INFO  16:52:59,641 - #22 [
INFO  16:52:59,641 - #9 4
INFO  16:52:59,641 - #23 ]
INFO  16:52:59,641 - #27 ;
INFO  16:52:59,641 - #3 print
INFO  16:52:59,641 - #29 (
INFO  16:52:59,641 - #8 len
INFO  16:52:59,642 - #29 (
INFO  16:52:59,642 - #8 z
INFO  16:52:59,642 - #30 )
INFO  16:52:59,642 - #30 )
INFO  16:52:59,642 - #27 ;
INFO  16:52:59,642 - #21 }
INFO  16:52:59,642 - #21 }
INFO  16:52:59,643 - =====================SINTAKSNO_STABLO=========================
INFO  16:52:59,645 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_design(
              Assignment(
                Designator_1(
                 z
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_new_array(
                      Type(
                       char
                      ) [Type]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           4
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Factor_new_array]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  16:52:59,646 - ==============================================================
INFO  16:52:59,658 - Pocetak obrade programa Program na liniji 1
INFO  16:52:59,658 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  16:52:59,659 - Deklarisana konstanta c na liniji 2
INFO  16:52:59,659 - Deklarisana konstanta d na liniji 2
INFO  16:52:59,659 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  16:52:59,659 - Deklarisana promenljiva e na liniji 3
INFO  16:52:59,660 - Pocetak obrade metode main na liniji 5
INFO  16:52:59,660 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  16:52:59,660 - Deklarisana promenljiva x na liniji 5
INFO  16:52:59,660 - Deklarisana promenljiva y na liniji 5
INFO  16:52:59,660 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  16:52:59,660 - Deklarisan niz z na liniji 5
INFO  16:52:59,660 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  16:52:59,660 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  16:52:59,660 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  16:52:59,662 - Zavrsetak obrade programa Program na liniji 1
INFO  16:52:59,662 - ======================TABELA_SIMBOLA==========================
INFO  16:52:59,663 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  16:52:59,663 - ==============================================================
INFO  16:52:59,663 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  16:52:59,663 - ==============================================================
INFO  16:52:59,663 - ======================GENERISANJE_KODA========================
ERROR 16:52:59,667 - Generisanje koda neuspesno!
INFO  16:52:59,667 - ==============================================================
INFO  16:54:17,345 - Obrada ulaznog fajla test\program.mj
INFO  16:54:17,418 - #2 program
INFO  16:54:17,418 - #8 Program
INFO  16:54:17,418 - #5 const
INFO  16:54:17,419 - #8 int
INFO  16:54:17,419 - #8 c
INFO  16:54:17,420 - #24 =
INFO  16:54:17,420 - #9 10
INFO  16:54:17,420 - #28 ,
INFO  16:54:17,421 - #8 d
INFO  16:54:17,421 - #24 =
INFO  16:54:17,421 - #9 99
INFO  16:54:17,421 - #27 ;
INFO  16:54:17,422 - #8 int
INFO  16:54:17,423 - #8 e
INFO  16:54:17,423 - #27 ;
INFO  16:54:17,423 - #20 {
INFO  16:54:17,424 - #6 void
INFO  16:54:17,424 - #8 main
INFO  16:54:17,424 - #29 (
INFO  16:54:17,425 - #30 )
INFO  16:54:17,425 - #8 int
INFO  16:54:17,425 - #8 x
INFO  16:54:17,425 - #28 ,
INFO  16:54:17,425 - #8 y
INFO  16:54:17,425 - #27 ;
INFO  16:54:17,426 - #8 char
INFO  16:54:17,426 - #8 z
INFO  16:54:17,426 - #22 [
INFO  16:54:17,426 - #23 ]
INFO  16:54:17,426 - #27 ;
INFO  16:54:17,426 - #20 {
INFO  16:54:17,427 - #8 e
INFO  16:54:17,427 - #25 ++
INFO  16:54:17,427 - #27 ;
INFO  16:54:17,427 - #3 print
INFO  16:54:17,427 - #29 (
INFO  16:54:17,428 - #8 e
INFO  16:54:17,428 - #30 )
INFO  16:54:17,428 - #27 ;
INFO  16:54:17,428 - #8 z
INFO  16:54:17,428 - #24 =
INFO  16:54:17,429 - #7 new
INFO  16:54:17,429 - #8 char
INFO  16:54:17,429 - #22 [
INFO  16:54:17,429 - #9 4
INFO  16:54:17,429 - #23 ]
INFO  16:54:17,429 - #27 ;
INFO  16:54:17,430 - #3 print
INFO  16:54:17,430 - #29 (
INFO  16:54:17,430 - #8 len
INFO  16:54:17,430 - #29 (
INFO  16:54:17,430 - #8 z
INFO  16:54:17,430 - #30 )
INFO  16:54:17,431 - #30 )
INFO  16:54:17,431 - #27 ;
INFO  16:54:17,431 - #21 }
INFO  16:54:17,431 - #21 }
INFO  16:54:17,432 - =====================SINTAKSNO_STABLO=========================
INFO  16:54:17,434 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_design(
              Assignment(
                Designator_1(
                 z
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_new_array(
                      Type(
                       char
                      ) [Type]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           4
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Factor_new_array]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  16:54:17,435 - ==============================================================
INFO  16:54:17,449 - Pocetak obrade programa Program na liniji 1
INFO  16:54:17,449 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  16:54:17,450 - Deklarisana konstanta c na liniji 2
INFO  16:54:17,450 - Deklarisana konstanta d na liniji 2
INFO  16:54:17,450 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  16:54:17,450 - Deklarisana promenljiva e na liniji 3
INFO  16:54:17,451 - Pocetak obrade metode main na liniji 5
INFO  16:54:17,451 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  16:54:17,452 - Deklarisana promenljiva x na liniji 5
INFO  16:54:17,452 - Deklarisana promenljiva y na liniji 5
INFO  16:54:17,452 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  16:54:17,452 - Deklarisan niz z na liniji 5
INFO  16:54:17,452 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  16:54:17,453 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  16:54:17,453 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  16:54:17,455 - Zavrsetak obrade programa Program na liniji 1
INFO  16:54:17,455 - ======================TABELA_SIMBOLA==========================
INFO  16:54:17,456 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  16:54:17,456 - ==============================================================
INFO  16:54:17,456 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  16:54:17,456 - ==============================================================
INFO  16:54:17,456 - ======================GENERISANJE_KODA========================
ERROR 16:54:17,462 - Generisanje koda neuspesno!
INFO  16:54:17,462 - ==============================================================
INFO  16:56:00,288 - Obrada ulaznog fajla test\program.mj
INFO  16:56:00,365 - #2 program
INFO  16:56:00,365 - #8 Program
INFO  16:56:00,365 - #5 const
INFO  16:56:00,366 - #8 int
INFO  16:56:00,366 - #8 c
INFO  16:56:00,367 - #24 =
INFO  16:56:00,367 - #9 10
INFO  16:56:00,367 - #28 ,
INFO  16:56:00,368 - #8 d
INFO  16:56:00,368 - #24 =
INFO  16:56:00,368 - #9 99
INFO  16:56:00,368 - #27 ;
INFO  16:56:00,368 - #8 int
INFO  16:56:00,369 - #8 e
INFO  16:56:00,369 - #27 ;
INFO  16:56:00,369 - #20 {
INFO  16:56:00,370 - #6 void
INFO  16:56:00,370 - #8 main
INFO  16:56:00,371 - #29 (
INFO  16:56:00,371 - #30 )
INFO  16:56:00,372 - #8 int
INFO  16:56:00,372 - #8 x
INFO  16:56:00,372 - #28 ,
INFO  16:56:00,372 - #8 y
INFO  16:56:00,372 - #27 ;
INFO  16:56:00,372 - #8 char
INFO  16:56:00,373 - #8 z
INFO  16:56:00,373 - #22 [
INFO  16:56:00,373 - #23 ]
INFO  16:56:00,373 - #27 ;
INFO  16:56:00,373 - #20 {
INFO  16:56:00,374 - #8 e
INFO  16:56:00,374 - #25 ++
INFO  16:56:00,374 - #27 ;
INFO  16:56:00,374 - #3 print
INFO  16:56:00,375 - #29 (
INFO  16:56:00,375 - #8 e
INFO  16:56:00,375 - #30 )
INFO  16:56:00,375 - #27 ;
INFO  16:56:00,375 - #8 z
INFO  16:56:00,376 - #24 =
INFO  16:56:00,376 - #7 new
INFO  16:56:00,376 - #8 char
INFO  16:56:00,376 - #22 [
INFO  16:56:00,376 - #9 4
INFO  16:56:00,376 - #23 ]
INFO  16:56:00,376 - #27 ;
INFO  16:56:00,377 - #3 print
INFO  16:56:00,377 - #29 (
INFO  16:56:00,377 - #8 len
INFO  16:56:00,377 - #29 (
INFO  16:56:00,377 - #8 z
INFO  16:56:00,377 - #30 )
INFO  16:56:00,378 - #30 )
INFO  16:56:00,378 - #27 ;
INFO  16:56:00,378 - #21 }
INFO  16:56:00,378 - #21 }
INFO  16:56:00,379 - =====================SINTAKSNO_STABLO=========================
INFO  16:56:00,380 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_multi(
          Var_decl_single(
            Var_declaration(
              Type(
               int
              ) [Type]
              Var_multi(
                Var_single(
                  Var_normal(
                   x
                  ) [Var_normal]
                ) [Var_single]
                Var_normal(
                 y
                ) [Var_normal]
              ) [Var_multi]
            ) [Var_declaration]
          ) [Var_decl_single]
          Var_declaration(
            Type(
             char
            ) [Type]
            Var_single(
              Var_array(
               z
              ) [Var_array]
            ) [Var_single]
          ) [Var_declaration]
        ) [Var_decl_multi]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Increment(
                    Designator_1(
                     e
                    ) [Designator_1]
                  ) [Increment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_design(
              Assignment(
                Designator_1(
                 z
                ) [Designator_1]
                Expr_single(
                  Term_single(
                    Factor_new_array(
                      Type(
                       char
                      ) [Type]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           4
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Factor_new_array]
                  ) [Term_single]
                ) [Expr_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  16:56:00,382 - ==============================================================
INFO  16:56:00,397 - Pocetak obrade programa Program na liniji 1
INFO  16:56:00,397 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  16:56:00,398 - Deklarisana konstanta c na liniji 2
INFO  16:56:00,398 - Deklarisana konstanta d na liniji 2
INFO  16:56:00,399 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  16:56:00,399 - Deklarisana promenljiva e na liniji 3
INFO  16:56:00,399 - Pocetak obrade metode main na liniji 5
INFO  16:56:00,399 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  16:56:00,400 - Deklarisana promenljiva x na liniji 5
INFO  16:56:00,400 - Deklarisana promenljiva y na liniji 5
INFO  16:56:00,400 - Pronadjen tip char u tabeli simbola na liniji 5
INFO  16:56:00,400 - Deklarisan niz z na liniji 5
INFO  16:56:00,400 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  16:56:00,400 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  16:56:00,400 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  16:56:00,402 - Zavrsetak obrade programa Program na liniji 1
INFO  16:56:00,402 - ======================TABELA_SIMBOLA==========================
INFO  16:56:00,402 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none
	Local Var x: int
	Local Var y: int
	Local Var z: array of char

INFO  16:56:00,402 - ==============================================================
INFO  16:56:00,402 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  16:56:00,402 - ==============================================================
INFO  16:56:00,402 - ======================GENERISANJE_KODA========================
INFO  16:56:00,406 - Generisanje koda uspesno zavrseno!
INFO  16:56:00,407 - Generisanje izlaznog fajla test\program.obj
INFO  16:56:00,407 - ==============================================================
INFO  16:58:45,594 - Obrada ulaznog fajla test\program.mj
INFO  16:58:45,669 - #2 program
INFO  16:58:45,669 - #8 Program
INFO  16:58:45,669 - #5 const
INFO  16:58:45,670 - #8 int
INFO  16:58:45,670 - #8 c
INFO  16:58:45,672 - #24 =
INFO  16:58:45,672 - #9 10
INFO  16:58:45,672 - #28 ,
INFO  16:58:45,674 - #8 d
INFO  16:58:45,674 - #24 =
INFO  16:58:45,674 - #9 99
INFO  16:58:45,674 - #27 ;
INFO  16:58:45,674 - #8 int
INFO  16:58:45,676 - #8 e
INFO  16:58:45,676 - #27 ;
INFO  16:58:45,676 - #20 {
INFO  16:58:45,678 - #6 void
INFO  16:58:45,678 - #8 main
INFO  16:58:45,678 - #29 (
INFO  16:58:45,679 - #30 )
INFO  16:58:45,679 - #20 {
INFO  16:58:45,679 - #8 e
INFO  16:58:45,679 - #24 =
INFO  16:58:45,679 - #9 3
INFO  16:58:45,679 - #27 ;
INFO  16:58:45,680 - #8 e
INFO  16:58:45,680 - #24 =
INFO  16:58:45,680 - #16 -
INFO  16:58:45,680 - #29 (
INFO  16:58:45,680 - #8 d
INFO  16:58:45,680 - #18 /
INFO  16:58:45,681 - #9 11
INFO  16:58:45,682 - #16 -
INFO  16:58:45,683 - #8 c
INFO  16:58:45,684 - #30 )
INFO  16:58:45,685 - #17 *
INFO  16:58:45,685 - #8 e
INFO  16:58:45,685 - #15 +
INFO  16:58:45,685 - #9 1
INFO  16:58:45,686 - #27 ;
INFO  16:58:45,686 - #8 e
INFO  16:58:45,686 - #25 ++
INFO  16:58:45,687 - #27 ;
INFO  16:58:45,687 - #3 print
INFO  16:58:45,687 - #29 (
INFO  16:58:45,688 - #8 e
INFO  16:58:45,688 - #30 )
INFO  16:58:45,688 - #27 ;
INFO  16:58:45,688 - #21 }
INFO  16:58:45,689 - #21 }
INFO  16:58:45,690 - =====================SINTAKSNO_STABLO=========================
INFO  16:58:45,692 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     e
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         3
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_neg_term_multi(
                    Term_multi(
                      Factor_expr(
                        Expr_term_multi(
                          Term_multi(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                            More_factor_single(
                              More_factor_part(
                                Mul_op_div(
                                ) [Mul_op_div]
                                Factor_num_const(
                                 11
                                ) [Factor_num_const]
                              ) [More_factor_part]
                            ) [More_factor_single]
                          ) [Term_multi]
                          More_term_single(
                            More_term_part(
                              Add_op_minus(
                              ) [Add_op_minus]
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   c
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [More_term_part]
                          ) [More_term_single]
                        ) [Expr_term_multi]
                      ) [Factor_expr]
                      More_factor_single(
                        More_factor_part(
                          Mul_op_mul(
                          ) [Mul_op_mul]
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [More_factor_part]
                      ) [More_factor_single]
                    ) [Term_multi]
                    More_term_single(
                      More_term_part(
                        Add_op_plus(
                        ) [Add_op_plus]
                        Term_single(
                          Factor_num_const(
                           1
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [More_term_part]
                    ) [More_term_single]
                  ) [Expr_neg_term_multi]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_design(
              Increment(
                Designator_1(
                 e
                ) [Designator_1]
              ) [Increment]
            ) [Stmt_design]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  16:58:45,692 - ==============================================================
INFO  16:58:45,705 - Pocetak obrade programa Program na liniji 1
INFO  16:58:45,705 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  16:58:45,706 - Deklarisana konstanta c na liniji 2
INFO  16:58:45,707 - Deklarisana konstanta d na liniji 2
INFO  16:58:45,707 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  16:58:45,707 - Deklarisana promenljiva e na liniji 3
INFO  16:58:45,708 - Pocetak obrade metode main na liniji 5
INFO  16:58:45,708 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  16:58:45,708 - Zavrsetak obrade programa Program na liniji 1
INFO  16:58:45,708 - ======================TABELA_SIMBOLA==========================
INFO  16:58:45,709 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  16:58:45,709 - ==============================================================
INFO  16:58:45,709 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  16:58:45,709 - ==============================================================
INFO  16:58:45,709 - ======================GENERISANJE_KODA========================
INFO  16:58:45,714 - Generisanje koda uspesno zavrseno!
INFO  16:58:45,715 - Generisanje izlaznog fajla test\program.obj
INFO  16:58:45,715 - ==============================================================
INFO  17:00:46,518 - Obrada ulaznog fajla test\program.mj
INFO  17:00:46,595 - #2 program
INFO  17:00:46,595 - #8 Program
INFO  17:00:46,595 - #5 const
INFO  17:00:46,596 - #8 int
INFO  17:00:46,596 - #8 c
INFO  17:00:46,597 - #24 =
INFO  17:00:46,597 - #9 10
INFO  17:00:46,597 - #28 ,
INFO  17:00:46,598 - #8 d
INFO  17:00:46,598 - #24 =
INFO  17:00:46,598 - #9 99
INFO  17:00:46,598 - #27 ;
INFO  17:00:46,598 - #8 int
INFO  17:00:46,599 - #8 e
INFO  17:00:46,600 - #27 ;
INFO  17:00:46,600 - #20 {
INFO  17:00:46,601 - #6 void
INFO  17:00:46,601 - #8 main
INFO  17:00:46,601 - #29 (
INFO  17:00:46,602 - #30 )
INFO  17:00:46,602 - #20 {
INFO  17:00:46,602 - #8 e
INFO  17:00:46,602 - #24 =
INFO  17:00:46,602 - #9 3
INFO  17:00:46,602 - #27 ;
INFO  17:00:46,603 - #8 e
INFO  17:00:46,604 - #24 =
INFO  17:00:46,604 - #16 -
INFO  17:00:46,604 - #29 (
INFO  17:00:46,604 - #8 d
INFO  17:00:46,604 - #18 /
INFO  17:00:46,604 - #9 11
INFO  17:00:46,606 - #16 -
INFO  17:00:46,607 - #8 c
INFO  17:00:46,608 - #30 )
INFO  17:00:46,609 - #17 *
INFO  17:00:46,609 - #8 e
INFO  17:00:46,610 - #15 +
INFO  17:00:46,610 - #9 1
INFO  17:00:46,610 - #27 ;
INFO  17:00:46,611 - #8 e
INFO  17:00:46,611 - #25 ++
INFO  17:00:46,611 - #27 ;
INFO  17:00:46,611 - #3 print
INFO  17:00:46,611 - #29 (
INFO  17:00:46,611 - #8 e
INFO  17:00:46,612 - #30 )
INFO  17:00:46,612 - #27 ;
INFO  17:00:46,612 - #21 }
INFO  17:00:46,612 - #21 }
INFO  17:00:46,613 - =====================SINTAKSNO_STABLO=========================
INFO  17:00:46,615 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     e
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         3
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_neg_term_multi(
                    Term_multi(
                      Factor_expr(
                        Expr_term_multi(
                          Term_multi(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                            More_factor_single(
                              More_factor_part(
                                Mul_op_div(
                                ) [Mul_op_div]
                                Factor_num_const(
                                 11
                                ) [Factor_num_const]
                              ) [More_factor_part]
                            ) [More_factor_single]
                          ) [Term_multi]
                          More_term_single(
                            More_term_part(
                              Add_op_minus(
                              ) [Add_op_minus]
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   c
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [More_term_part]
                          ) [More_term_single]
                        ) [Expr_term_multi]
                      ) [Factor_expr]
                      More_factor_single(
                        More_factor_part(
                          Mul_op_mul(
                          ) [Mul_op_mul]
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [More_factor_part]
                      ) [More_factor_single]
                    ) [Term_multi]
                    More_term_single(
                      More_term_part(
                        Add_op_plus(
                        ) [Add_op_plus]
                        Term_single(
                          Factor_num_const(
                           1
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [More_term_part]
                    ) [More_term_single]
                  ) [Expr_neg_term_multi]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_design(
              Increment(
                Designator_1(
                 e
                ) [Designator_1]
              ) [Increment]
            ) [Stmt_design]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:00:46,615 - ==============================================================
INFO  17:00:46,629 - Pocetak obrade programa Program na liniji 1
INFO  17:00:46,629 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:00:46,630 - Deklarisana konstanta c na liniji 2
INFO  17:00:46,631 - Deklarisana konstanta d na liniji 2
INFO  17:00:46,631 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:00:46,631 - Deklarisana promenljiva e na liniji 3
INFO  17:00:46,632 - Pocetak obrade metode main na liniji 5
INFO  17:00:46,632 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:00:46,632 - Zavrsetak obrade programa Program na liniji 1
INFO  17:00:46,633 - ======================TABELA_SIMBOLA==========================
INFO  17:00:46,633 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  17:00:46,633 - ==============================================================
INFO  17:00:46,633 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  17:00:46,634 - ==============================================================
INFO  17:00:46,634 - ======================GENERISANJE_KODA========================
INFO  17:15:59,367 - Obrada ulaznog fajla test\program.mj
INFO  17:15:59,443 - #2 program
INFO  17:15:59,444 - #8 Program
INFO  17:15:59,444 - #5 const
INFO  17:15:59,445 - #8 int
INFO  17:15:59,445 - #8 c
INFO  17:15:59,446 - #24 =
INFO  17:15:59,447 - #9 10
INFO  17:15:59,447 - #28 ,
INFO  17:15:59,448 - #8 d
INFO  17:15:59,448 - #24 =
INFO  17:15:59,448 - #9 99
INFO  17:15:59,448 - #27 ;
INFO  17:15:59,449 - #8 int
INFO  17:15:59,450 - #8 e
INFO  17:15:59,450 - #27 ;
INFO  17:15:59,451 - #20 {
INFO  17:15:59,452 - #6 void
INFO  17:15:59,452 - #8 main
INFO  17:15:59,452 - #29 (
INFO  17:15:59,453 - #30 )
INFO  17:15:59,453 - #20 {
INFO  17:15:59,453 - #8 e
INFO  17:15:59,453 - #24 =
INFO  17:15:59,454 - #9 3
INFO  17:15:59,454 - #27 ;
INFO  17:15:59,454 - #8 e
INFO  17:15:59,455 - #24 =
INFO  17:15:59,455 - #16 -
INFO  17:15:59,455 - #29 (
INFO  17:15:59,455 - #8 d
INFO  17:15:59,455 - #18 /
INFO  17:15:59,455 - #9 11
INFO  17:15:59,457 - #16 -
INFO  17:15:59,458 - #8 c
INFO  17:15:59,459 - #30 )
INFO  17:15:59,461 - #17 *
INFO  17:15:59,461 - #8 e
INFO  17:15:59,461 - #15 +
INFO  17:15:59,461 - #9 1
INFO  17:15:59,462 - #27 ;
INFO  17:15:59,462 - #8 e
INFO  17:15:59,462 - #25 ++
INFO  17:15:59,463 - #27 ;
INFO  17:15:59,463 - #3 print
INFO  17:15:59,463 - #29 (
INFO  17:15:59,463 - #8 e
INFO  17:15:59,463 - #30 )
INFO  17:15:59,463 - #27 ;
INFO  17:15:59,463 - #21 }
INFO  17:15:59,463 - #21 }
INFO  17:15:59,464 - =====================SINTAKSNO_STABLO=========================
INFO  17:15:59,466 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_single(
                Stmt_design(
                  Assignment(
                    Designator_1(
                     e
                    ) [Designator_1]
                    Expr_single(
                      Term_single(
                        Factor_num_const(
                         3
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Assignment]
                ) [Stmt_design]
              ) [Statement_single]
              Stmt_design(
                Assignment(
                  Designator_1(
                   e
                  ) [Designator_1]
                  Expr_neg_term_multi(
                    Term_multi(
                      Factor_expr(
                        Expr_term_multi(
                          Term_multi(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                            More_factor_single(
                              More_factor_part(
                                Mul_op_div(
                                ) [Mul_op_div]
                                Factor_num_const(
                                 11
                                ) [Factor_num_const]
                              ) [More_factor_part]
                            ) [More_factor_single]
                          ) [Term_multi]
                          More_term_single(
                            More_term_part(
                              Add_op_minus(
                              ) [Add_op_minus]
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   c
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [More_term_part]
                          ) [More_term_single]
                        ) [Expr_term_multi]
                      ) [Factor_expr]
                      More_factor_single(
                        More_factor_part(
                          Mul_op_mul(
                          ) [Mul_op_mul]
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [More_factor_part]
                      ) [More_factor_single]
                    ) [Term_multi]
                    More_term_single(
                      More_term_part(
                        Add_op_plus(
                        ) [Add_op_plus]
                        Term_single(
                          Factor_num_const(
                           1
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [More_term_part]
                    ) [More_term_single]
                  ) [Expr_neg_term_multi]
                ) [Assignment]
              ) [Stmt_design]
            ) [Statement_multi]
            Stmt_design(
              Increment(
                Designator_1(
                 e
                ) [Designator_1]
              ) [Increment]
            ) [Stmt_design]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_designator(
                  Designator_1(
                   e
                  ) [Designator_1]
                ) [Factor_designator]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:15:59,467 - ==============================================================
INFO  17:15:59,480 - Pocetak obrade programa Program na liniji 1
INFO  17:15:59,480 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:15:59,481 - Deklarisana konstanta c na liniji 2
INFO  17:15:59,481 - Deklarisana konstanta d na liniji 2
INFO  17:15:59,481 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:15:59,481 - Deklarisana promenljiva e na liniji 3
INFO  17:15:59,482 - Pocetak obrade metode main na liniji 5
INFO  17:15:59,482 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:15:59,482 - Zavrsetak obrade programa Program na liniji 1
INFO  17:15:59,482 - ======================TABELA_SIMBOLA==========================
INFO  17:15:59,483 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  17:15:59,483 - ==============================================================
INFO  17:15:59,483 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  17:15:59,483 - ==============================================================
INFO  17:15:59,483 - ======================GENERISANJE_KODA========================
INFO  17:15:59,488 - Generisanje koda uspesno zavrseno!
INFO  17:15:59,489 - Generisanje izlaznog fajla test\program.obj
INFO  17:15:59,489 - ==============================================================
INFO  17:16:39,144 - Obrada ulaznog fajla test\program.mj
INFO  17:16:39,234 - #2 program
INFO  17:16:39,234 - #8 Program
INFO  17:16:39,234 - #5 const
INFO  17:16:39,236 - #8 int
INFO  17:16:39,236 - #8 c
INFO  17:16:39,236 - #24 =
INFO  17:16:39,237 - #9 10
INFO  17:16:39,237 - #28 ,
INFO  17:16:39,238 - #8 d
INFO  17:16:39,238 - #24 =
INFO  17:16:39,238 - #9 99
INFO  17:16:39,238 - #27 ;
INFO  17:16:39,238 - #8 int
INFO  17:16:39,240 - #8 e
INFO  17:16:39,240 - #27 ;
INFO  17:16:39,240 - #20 {
INFO  17:16:39,242 - #6 void
INFO  17:16:39,242 - #8 main
INFO  17:16:39,242 - #29 (
INFO  17:16:39,243 - #30 )
INFO  17:16:39,243 - #20 {
INFO  17:16:39,243 - #8 e
INFO  17:16:39,243 - #24 =
INFO  17:16:39,243 - #9 3
INFO  17:16:39,243 - #27 ;
INFO  17:16:39,244 - #8 e
INFO  17:16:39,244 - #24 =
INFO  17:16:39,244 - #16 -
INFO  17:16:39,244 - #29 (
INFO  17:16:39,245 - #8 d
INFO  17:16:39,245 - #18 /
INFO  17:16:39,245 - #9 11
INFO  17:16:39,246 - #16 -
INFO  17:16:39,248 - #8 c
INFO  17:16:39,249 - #30 )
INFO  17:16:39,250 - #17 *
INFO  17:16:39,250 - #8 e
INFO  17:16:39,251 - #15 +
INFO  17:16:39,251 - #9 1
INFO  17:16:39,252 - #27 ;
INFO  17:16:39,252 - #8 e
INFO  17:16:39,253 - #25 ++
INFO  17:16:39,253 - #27 ;
INFO  17:16:39,253 - #3 print
INFO  17:16:39,253 - #29 (
INFO  17:16:39,253 - #8 e
INFO  17:16:39,253 - #30 )
INFO  17:16:39,253 - #27 ;
INFO  17:16:39,253 - #8 z
INFO  17:16:39,254 - #24 =
INFO  17:16:39,254 - #7 new
INFO  17:16:39,254 - #8 char
INFO  17:16:39,254 - #22 [
INFO  17:16:39,254 - #9 4
INFO  17:16:39,254 - #23 ]
INFO  17:16:39,254 - #27 ;
INFO  17:16:39,256 - #8 z
INFO  17:16:39,256 - #22 [
INFO  17:16:39,256 - #9 0
INFO  17:16:39,256 - #23 ]
INFO  17:16:39,256 - #24 =
INFO  17:16:39,257 - #8 chr
INFO  17:16:39,257 - #29 (
INFO  17:16:39,257 - #9 72
INFO  17:16:39,257 - #30 )
INFO  17:16:39,257 - #27 ;
INFO  17:16:39,257 - #8 z
INFO  17:16:39,257 - #22 [
INFO  17:16:39,258 - #9 1
INFO  17:16:39,258 - #23 ]
INFO  17:16:39,258 - #24 =
INFO  17:16:39,258 - #10 O
INFO  17:16:39,258 - #27 ;
INFO  17:16:39,258 - #8 z
INFO  17:16:39,259 - #22 [
INFO  17:16:39,259 - #9 2
INFO  17:16:39,261 - #23 ]
INFO  17:16:39,261 - #24 =
INFO  17:16:39,261 - #10 M
INFO  17:16:39,261 - #27 ;
INFO  17:16:39,261 - #8 z
INFO  17:16:39,262 - #22 [
INFO  17:16:39,262 - #9 3
INFO  17:16:39,262 - #23 ]
INFO  17:16:39,262 - #24 =
INFO  17:16:39,263 - #8 chr
INFO  17:16:39,263 - #29 (
INFO  17:16:39,263 - #8 ord
INFO  17:16:39,263 - #29 (
INFO  17:16:39,263 - #10 A
INFO  17:16:39,263 - #30 )
INFO  17:16:39,263 - #15 +
INFO  17:16:39,263 - #9 4
INFO  17:16:39,263 - #30 )
INFO  17:16:39,264 - #27 ;
INFO  17:16:39,264 - #3 print
INFO  17:16:39,264 - #29 (
INFO  17:16:39,264 - #8 z
INFO  17:16:39,264 - #22 [
INFO  17:16:39,264 - #9 0
INFO  17:16:39,264 - #23 ]
INFO  17:16:39,264 - #30 )
INFO  17:16:39,264 - #27 ;
INFO  17:16:39,265 - #3 print
INFO  17:16:39,265 - #29 (
INFO  17:16:39,265 - #8 z
INFO  17:16:39,265 - #22 [
INFO  17:16:39,265 - #9 1
INFO  17:16:39,265 - #23 ]
INFO  17:16:39,265 - #30 )
INFO  17:16:39,265 - #27 ;
INFO  17:16:39,265 - #3 print
INFO  17:16:39,265 - #29 (
INFO  17:16:39,266 - #8 z
INFO  17:16:39,266 - #22 [
INFO  17:16:39,266 - #9 2
INFO  17:16:39,266 - #23 ]
INFO  17:16:39,266 - #30 )
INFO  17:16:39,266 - #27 ;
INFO  17:16:39,266 - #3 print
INFO  17:16:39,266 - #29 (
INFO  17:16:39,266 - #8 z
INFO  17:16:39,267 - #22 [
INFO  17:16:39,267 - #9 3
INFO  17:16:39,267 - #23 ]
INFO  17:16:39,267 - #30 )
INFO  17:16:39,267 - #27 ;
INFO  17:16:39,267 - #3 print
INFO  17:16:39,267 - #29 (
INFO  17:16:39,267 - #8 len
INFO  17:16:39,267 - #29 (
INFO  17:16:39,268 - #8 z
INFO  17:16:39,268 - #30 )
INFO  17:16:39,268 - #30 )
INFO  17:16:39,268 - #27 ;
INFO  17:16:39,268 - #21 }
INFO  17:16:39,268 - #21 }
INFO  17:16:39,269 - =====================SINTAKSNO_STABLO=========================
INFO  17:16:39,273 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_single(
              Const_part(
               c
                Val_Num_const(
                 10
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_single]
            Const_part(
             d
              Val_Num_const(
               99
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_single(
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_single]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:16:39,274 - ==============================================================
INFO  17:16:39,289 - Pocetak obrade programa Program na liniji 1
INFO  17:16:39,290 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:16:39,291 - Deklarisana konstanta c na liniji 2
INFO  17:16:39,291 - Deklarisana konstanta d na liniji 2
INFO  17:16:39,291 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:16:39,291 - Deklarisana promenljiva e na liniji 3
INFO  17:16:39,292 - Pocetak obrade metode main na liniji 5
ERROR 17:16:39,292 - Semanticka greska - ime z nije deklarisano na liniji 11!
INFO  17:16:39,292 - Pronadjen tip char u tabeli simbola na liniji 11
ERROR 17:16:39,292 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 11!
ERROR 17:16:39,293 - Semanticka greska - ime z nije deklarisano na liniji 12!
ERROR 17:16:39,293 - Semanticka greska - ime z se ocekuje da bude niz na liniji 12!
INFO  17:16:39,293 - Pronadjen poziv metode (funkcije) chr na liniji 12
ERROR 17:16:39,293 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 12!
ERROR 17:16:39,293 - Semanticka greska - ime z nije deklarisano na liniji 13!
ERROR 17:16:39,293 - Semanticka greska - ime z se ocekuje da bude niz na liniji 13!
ERROR 17:16:39,293 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13!
ERROR 17:16:39,293 - Semanticka greska - ime z nije deklarisano na liniji 14!
ERROR 17:16:39,293 - Semanticka greska - ime z se ocekuje da bude niz na liniji 14!
ERROR 17:16:39,293 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14!
ERROR 17:16:39,293 - Semanticka greska - ime z nije deklarisano na liniji 15!
ERROR 17:16:39,293 - Semanticka greska - ime z se ocekuje da bude niz na liniji 15!
INFO  17:16:39,293 - Pronadjen poziv metode (funkcije) ord na liniji 15
INFO  17:16:39,294 - Pronadjen poziv metode (funkcije) chr na liniji 15
ERROR 17:16:39,294 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 15!
ERROR 17:16:39,294 - Semanticka greska - ime z nije deklarisano na liniji 16!
ERROR 17:16:39,294 - Semanticka greska - ime z se ocekuje da bude niz na liniji 16!
ERROR 17:16:39,294 - Semanticka greska - ime z nije deklarisano na liniji 17!
ERROR 17:16:39,294 - Semanticka greska - ime z se ocekuje da bude niz na liniji 17!
ERROR 17:16:39,294 - Semanticka greska - ime z nije deklarisano na liniji 18!
ERROR 17:16:39,294 - Semanticka greska - ime z se ocekuje da bude niz na liniji 18!
ERROR 17:16:39,294 - Semanticka greska - ime z nije deklarisano na liniji 19!
ERROR 17:16:39,294 - Semanticka greska - ime z se ocekuje da bude niz na liniji 19!
ERROR 17:16:39,294 - Semanticka greska - ime z nije deklarisano na liniji 20!
INFO  17:16:39,294 - Pronadjen poziv metode (funkcije) len na liniji 20
INFO  17:16:39,294 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:16:39,294 - Zavrsetak obrade programa Program na liniji 1
INFO  17:16:39,295 - ======================TABELA_SIMBOLA==========================
INFO  17:16:39,296 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
Meth main: none

INFO  17:16:39,296 - ==============================================================
ERROR 17:16:39,296 - Ulazni fajl ima semanticke greske!
INFO  17:17:03,427 - Obrada ulaznog fajla test\program.mj
INFO  17:17:03,499 - #2 program
INFO  17:17:03,499 - #8 Program
INFO  17:17:03,499 - #5 const
INFO  17:17:03,500 - #8 int
INFO  17:17:03,500 - #8 c
INFO  17:17:03,501 - #24 =
INFO  17:17:03,501 - #9 10
INFO  17:17:03,502 - #28 ,
INFO  17:17:03,503 - #8 d
INFO  17:17:03,503 - #24 =
INFO  17:17:03,503 - #9 99
INFO  17:17:03,503 - #27 ;
INFO  17:17:03,503 - #8 int
INFO  17:17:03,504 - #8 e
INFO  17:17:03,505 - #27 ;
INFO  17:17:03,505 - #8 char
INFO  17:17:03,506 - #8 z
INFO  17:17:03,506 - #22 [
INFO  17:17:03,506 - #23 ]
INFO  17:17:03,506 - #27 ;
INFO  17:17:03,506 - #20 {
INFO  17:17:03,506 - #6 void
INFO  17:17:03,507 - #8 main
INFO  17:17:03,507 - #29 (
INFO  17:17:03,508 - #30 )
INFO  17:17:03,508 - #20 {
INFO  17:17:03,508 - #8 e
INFO  17:17:03,508 - #24 =
INFO  17:17:03,508 - #9 3
INFO  17:17:03,508 - #27 ;
INFO  17:17:03,509 - #8 e
INFO  17:17:03,510 - #24 =
INFO  17:17:03,510 - #16 -
INFO  17:17:03,510 - #29 (
INFO  17:17:03,510 - #8 d
INFO  17:17:03,510 - #18 /
INFO  17:17:03,510 - #9 11
INFO  17:17:03,511 - #16 -
INFO  17:17:03,512 - #8 c
INFO  17:17:03,513 - #30 )
INFO  17:17:03,514 - #17 *
INFO  17:17:03,515 - #8 e
INFO  17:17:03,516 - #15 +
INFO  17:17:03,516 - #9 1
INFO  17:17:03,517 - #27 ;
INFO  17:17:03,517 - #8 e
INFO  17:17:03,517 - #25 ++
INFO  17:17:03,517 - #27 ;
INFO  17:17:03,518 - #3 print
INFO  17:17:03,518 - #29 (
INFO  17:17:03,518 - #8 e
INFO  17:17:03,518 - #30 )
INFO  17:17:03,518 - #27 ;
INFO  17:17:03,518 - #8 z
INFO  17:17:03,518 - #24 =
INFO  17:17:03,519 - #7 new
INFO  17:17:03,519 - #8 char
INFO  17:17:03,519 - #22 [
INFO  17:17:03,519 - #9 4
INFO  17:17:03,519 - #23 ]
INFO  17:17:03,519 - #27 ;
INFO  17:17:03,519 - #8 z
INFO  17:17:03,519 - #22 [
INFO  17:17:03,520 - #9 0
INFO  17:17:03,520 - #23 ]
INFO  17:17:03,520 - #24 =
INFO  17:17:03,520 - #8 chr
INFO  17:17:03,520 - #29 (
INFO  17:17:03,520 - #9 72
INFO  17:17:03,520 - #30 )
INFO  17:17:03,521 - #27 ;
INFO  17:17:03,521 - #8 z
INFO  17:17:03,521 - #22 [
INFO  17:17:03,521 - #9 1
INFO  17:17:03,521 - #23 ]
INFO  17:17:03,521 - #24 =
INFO  17:17:03,523 - #10 O
INFO  17:17:03,523 - #27 ;
INFO  17:17:03,523 - #8 z
INFO  17:17:03,523 - #22 [
INFO  17:17:03,524 - #9 2
INFO  17:17:03,524 - #23 ]
INFO  17:17:03,524 - #24 =
INFO  17:17:03,524 - #10 M
INFO  17:17:03,524 - #27 ;
INFO  17:17:03,524 - #8 z
INFO  17:17:03,524 - #22 [
INFO  17:17:03,524 - #9 3
INFO  17:17:03,524 - #23 ]
INFO  17:17:03,524 - #24 =
INFO  17:17:03,524 - #8 chr
INFO  17:17:03,524 - #29 (
INFO  17:17:03,525 - #8 ord
INFO  17:17:03,525 - #29 (
INFO  17:17:03,525 - #10 A
INFO  17:17:03,525 - #30 )
INFO  17:17:03,525 - #15 +
INFO  17:17:03,525 - #9 4
INFO  17:17:03,525 - #30 )
INFO  17:17:03,525 - #27 ;
INFO  17:17:03,525 - #3 print
INFO  17:17:03,526 - #29 (
INFO  17:17:03,526 - #8 z
INFO  17:17:03,526 - #22 [
INFO  17:17:03,526 - #9 0
INFO  17:17:03,526 - #23 ]
INFO  17:17:03,526 - #30 )
INFO  17:17:03,526 - #27 ;
INFO  17:17:03,526 - #3 print
INFO  17:17:03,526 - #29 (
INFO  17:17:03,526 - #8 z
INFO  17:17:03,526 - #22 [
INFO  17:17:03,526 - #9 1
INFO  17:17:03,526 - #23 ]
INFO  17:17:03,526 - #30 )
INFO  17:17:03,527 - #27 ;
INFO  17:17:03,527 - #3 print
INFO  17:17:03,527 - #29 (
INFO  17:17:03,527 - #8 z
INFO  17:17:03,527 - #22 [
INFO  17:17:03,527 - #9 2
INFO  17:17:03,527 - #23 ]
INFO  17:17:03,527 - #30 )
INFO  17:17:03,527 - #27 ;
INFO  17:17:03,527 - #3 print
INFO  17:17:03,527 - #29 (
INFO  17:17:03,527 - #8 z
INFO  17:17:03,527 - #22 [
INFO  17:17:03,528 - #9 3
INFO  17:17:03,528 - #23 ]
INFO  17:17:03,528 - #30 )
INFO  17:17:03,528 - #27 ;
INFO  17:17:03,528 - #3 print
INFO  17:17:03,528 - #29 (
INFO  17:17:03,528 - #8 len
INFO  17:17:03,528 - #29 (
INFO  17:17:03,529 - #8 z
INFO  17:17:03,529 - #30 )
INFO  17:17:03,529 - #30 )
INFO  17:17:03,529 - #27 ;
INFO  17:17:03,529 - #21 }
INFO  17:17:03,529 - #21 }
INFO  17:17:03,530 - =====================SINTAKSNO_STABLO=========================
INFO  17:17:03,534 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_single(
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_single]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:17:03,535 - ==============================================================
INFO  17:17:03,550 - Pocetak obrade programa Program na liniji 1
INFO  17:17:03,551 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:17:03,552 - Deklarisana konstanta c na liniji 2
INFO  17:17:03,552 - Deklarisana konstanta d na liniji 2
INFO  17:17:03,552 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:17:03,552 - Deklarisana promenljiva e na liniji 3
INFO  17:17:03,552 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  17:17:03,552 - Deklarisan niz z na liniji 3
INFO  17:17:03,553 - Pocetak obrade metode main na liniji 5
INFO  17:17:03,554 - Pronadjen tip char u tabeli simbola na liniji 11
INFO  17:17:03,554 - Pronadjen poziv metode (funkcije) chr na liniji 12
INFO  17:17:03,554 - Pronadjen poziv metode (funkcije) ord na liniji 15
INFO  17:17:03,554 - Pronadjen poziv metode (funkcije) chr na liniji 15
INFO  17:17:03,554 - Pronadjen poziv metode (funkcije) len na liniji 20
INFO  17:17:03,554 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:17:03,554 - Zavrsetak obrade programa Program na liniji 1
INFO  17:17:03,554 - ======================TABELA_SIMBOLA==========================
INFO  17:17:03,555 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  17:17:03,555 - ==============================================================
INFO  17:17:03,555 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  17:17:03,555 - ==============================================================
INFO  17:17:03,555 - ======================GENERISANJE_KODA========================
INFO  17:20:42,215 - Obrada ulaznog fajla test\program.mj
INFO  17:20:42,287 - #2 program
INFO  17:20:42,288 - #8 Program
INFO  17:20:42,288 - #5 const
INFO  17:20:42,289 - #8 int
INFO  17:20:42,289 - #8 c
INFO  17:20:42,289 - #24 =
INFO  17:20:42,289 - #9 10
INFO  17:20:42,290 - #28 ,
INFO  17:20:42,291 - #8 d
INFO  17:20:42,291 - #24 =
INFO  17:20:42,291 - #9 99
INFO  17:20:42,291 - #27 ;
INFO  17:20:42,292 - #8 int
INFO  17:20:42,293 - #8 e
INFO  17:20:42,293 - #27 ;
INFO  17:20:42,294 - #8 char
INFO  17:20:42,295 - #8 z
INFO  17:20:42,295 - #22 [
INFO  17:20:42,295 - #23 ]
INFO  17:20:42,295 - #27 ;
INFO  17:20:42,295 - #20 {
INFO  17:20:42,295 - #6 void
INFO  17:20:42,296 - #8 main
INFO  17:20:42,296 - #29 (
INFO  17:20:42,296 - #30 )
INFO  17:20:42,297 - #20 {
INFO  17:20:42,297 - #8 e
INFO  17:20:42,297 - #24 =
INFO  17:20:42,297 - #9 3
INFO  17:20:42,297 - #27 ;
INFO  17:20:42,298 - #8 e
INFO  17:20:42,298 - #24 =
INFO  17:20:42,298 - #16 -
INFO  17:20:42,298 - #29 (
INFO  17:20:42,298 - #8 d
INFO  17:20:42,298 - #18 /
INFO  17:20:42,299 - #9 11
INFO  17:20:42,300 - #16 -
INFO  17:20:42,301 - #8 c
INFO  17:20:42,303 - #30 )
INFO  17:20:42,304 - #17 *
INFO  17:20:42,304 - #8 e
INFO  17:20:42,305 - #15 +
INFO  17:20:42,305 - #9 1
INFO  17:20:42,306 - #27 ;
INFO  17:20:42,306 - #8 e
INFO  17:20:42,307 - #25 ++
INFO  17:20:42,307 - #27 ;
INFO  17:20:42,307 - #3 print
INFO  17:20:42,307 - #29 (
INFO  17:20:42,307 - #8 e
INFO  17:20:42,307 - #30 )
INFO  17:20:42,307 - #27 ;
INFO  17:20:42,307 - #8 z
INFO  17:20:42,308 - #24 =
INFO  17:20:42,308 - #7 new
INFO  17:20:42,308 - #8 char
INFO  17:20:42,308 - #22 [
INFO  17:20:42,308 - #9 4
INFO  17:20:42,308 - #23 ]
INFO  17:20:42,308 - #27 ;
INFO  17:20:42,308 - #8 z
INFO  17:20:42,309 - #22 [
INFO  17:20:42,309 - #9 0
INFO  17:20:42,309 - #23 ]
INFO  17:20:42,309 - #24 =
INFO  17:20:42,309 - #8 chr
INFO  17:20:42,309 - #29 (
INFO  17:20:42,309 - #9 72
INFO  17:20:42,309 - #30 )
INFO  17:20:42,310 - #27 ;
INFO  17:20:42,310 - #8 z
INFO  17:20:42,310 - #22 [
INFO  17:20:42,310 - #9 1
INFO  17:20:42,310 - #23 ]
INFO  17:20:42,310 - #24 =
INFO  17:20:42,311 - #10 O
INFO  17:20:42,311 - #27 ;
INFO  17:20:42,311 - #8 z
INFO  17:20:42,311 - #22 [
INFO  17:20:42,311 - #9 2
INFO  17:20:42,311 - #23 ]
INFO  17:20:42,311 - #24 =
INFO  17:20:42,311 - #10 M
INFO  17:20:42,311 - #27 ;
INFO  17:20:42,311 - #8 z
INFO  17:20:42,312 - #22 [
INFO  17:20:42,312 - #9 3
INFO  17:20:42,312 - #23 ]
INFO  17:20:42,312 - #24 =
INFO  17:20:42,312 - #8 chr
INFO  17:20:42,312 - #29 (
INFO  17:20:42,312 - #8 ord
INFO  17:20:42,312 - #29 (
INFO  17:20:42,312 - #10 A
INFO  17:20:42,312 - #30 )
INFO  17:20:42,312 - #15 +
INFO  17:20:42,313 - #9 4
INFO  17:20:42,313 - #30 )
INFO  17:20:42,313 - #27 ;
INFO  17:20:42,313 - #3 print
INFO  17:20:42,313 - #29 (
INFO  17:20:42,313 - #8 z
INFO  17:20:42,313 - #22 [
INFO  17:20:42,313 - #9 0
INFO  17:20:42,313 - #23 ]
INFO  17:20:42,313 - #30 )
INFO  17:20:42,313 - #27 ;
INFO  17:20:42,313 - #3 print
INFO  17:20:42,314 - #29 (
INFO  17:20:42,314 - #8 z
INFO  17:20:42,314 - #22 [
INFO  17:20:42,314 - #9 1
INFO  17:20:42,314 - #23 ]
INFO  17:20:42,314 - #30 )
INFO  17:20:42,314 - #27 ;
INFO  17:20:42,314 - #3 print
INFO  17:20:42,314 - #29 (
INFO  17:20:42,314 - #8 z
INFO  17:20:42,314 - #22 [
INFO  17:20:42,314 - #9 2
INFO  17:20:42,314 - #23 ]
INFO  17:20:42,314 - #30 )
INFO  17:20:42,315 - #27 ;
INFO  17:20:42,315 - #3 print
INFO  17:20:42,315 - #29 (
INFO  17:20:42,315 - #8 z
INFO  17:20:42,315 - #22 [
INFO  17:20:42,315 - #9 3
INFO  17:20:42,315 - #23 ]
INFO  17:20:42,315 - #30 )
INFO  17:20:42,316 - #27 ;
INFO  17:20:42,316 - #3 print
INFO  17:20:42,316 - #29 (
INFO  17:20:42,316 - #8 len
INFO  17:20:42,316 - #29 (
INFO  17:20:42,316 - #8 z
INFO  17:20:42,316 - #30 )
INFO  17:20:42,316 - #30 )
INFO  17:20:42,316 - #27 ;
INFO  17:20:42,319 - #21 }
INFO  17:20:42,319 - #21 }
INFO  17:20:42,320 - =====================SINTAKSNO_STABLO=========================
INFO  17:20:42,323 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_single(
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_single]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:20:42,324 - ==============================================================
INFO  17:20:42,340 - Pocetak obrade programa Program na liniji 1
INFO  17:20:42,340 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:20:42,341 - Deklarisana konstanta c na liniji 2
INFO  17:20:42,341 - Deklarisana konstanta d na liniji 2
INFO  17:20:42,341 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:20:42,341 - Deklarisana promenljiva e na liniji 3
INFO  17:20:42,341 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  17:20:42,341 - Deklarisan niz z na liniji 3
INFO  17:20:42,342 - Pocetak obrade metode main na liniji 5
INFO  17:20:42,342 - Pronadjen tip char u tabeli simbola na liniji 11
INFO  17:20:42,343 - Pronadjen poziv metode (funkcije) chr na liniji 12
INFO  17:20:42,343 - Pronadjen poziv metode (funkcije) ord na liniji 15
INFO  17:20:42,343 - Pronadjen poziv metode (funkcije) chr na liniji 15
INFO  17:20:42,343 - Pronadjen poziv metode (funkcije) len na liniji 20
INFO  17:20:42,343 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:20:42,343 - Zavrsetak obrade programa Program na liniji 1
INFO  17:20:42,343 - ======================TABELA_SIMBOLA==========================
INFO  17:20:42,344 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  17:20:42,344 - ==============================================================
INFO  17:20:42,344 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  17:20:42,344 - ==============================================================
INFO  17:20:42,344 - ======================GENERISANJE_KODA========================
INFO  17:20:42,347 - class rs.ac.bg.etf.pp1.ast.Term_single
INFO  17:20:42,347 - class rs.ac.bg.etf.pp1.ast.Expr_single
INFO  17:20:42,348 - class rs.ac.bg.etf.pp1.ast.Assignment
INFO  17:20:42,348 - class rs.ac.bg.etf.pp1.ast.More_factor_part
INFO  17:20:42,348 - class rs.ac.bg.etf.pp1.ast.More_factor_single
INFO  17:20:42,348 - class rs.ac.bg.etf.pp1.ast.Term_multi
INFO  17:20:42,349 - class rs.ac.bg.etf.pp1.ast.Term_single
INFO  17:20:42,349 - class rs.ac.bg.etf.pp1.ast.More_term_part
INFO  17:20:42,349 - class rs.ac.bg.etf.pp1.ast.More_term_single
INFO  17:20:42,349 - class rs.ac.bg.etf.pp1.ast.Term_single
INFO  17:20:42,349 - class rs.ac.bg.etf.pp1.ast.Expr_single
INFO  17:20:42,349 - class rs.ac.bg.etf.pp1.ast.Factor_new_array
INFO  17:20:42,350 - class rs.ac.bg.etf.pp1.ast.Term_single
INFO  17:20:42,350 - class rs.ac.bg.etf.pp1.ast.Expr_single
INFO  17:20:42,350 - class rs.ac.bg.etf.pp1.ast.Designator_0
INFO  17:21:22,658 - Obrada ulaznog fajla test\program.mj
INFO  17:21:22,747 - #2 program
INFO  17:21:22,747 - #8 Program
INFO  17:21:22,747 - #5 const
INFO  17:21:22,748 - #8 int
INFO  17:21:22,748 - #8 c
INFO  17:21:22,749 - #24 =
INFO  17:21:22,749 - #9 10
INFO  17:21:22,749 - #28 ,
INFO  17:21:22,751 - #8 d
INFO  17:21:22,751 - #24 =
INFO  17:21:22,751 - #9 99
INFO  17:21:22,751 - #27 ;
INFO  17:21:22,751 - #8 int
INFO  17:21:22,753 - #8 e
INFO  17:21:22,753 - #27 ;
INFO  17:21:22,754 - #8 char
INFO  17:21:22,756 - #8 z
INFO  17:21:22,756 - #22 [
INFO  17:21:22,756 - #23 ]
INFO  17:21:22,756 - #27 ;
INFO  17:21:22,756 - #20 {
INFO  17:21:22,757 - #6 void
INFO  17:21:22,757 - #8 main
INFO  17:21:22,757 - #29 (
INFO  17:21:22,758 - #30 )
INFO  17:21:22,758 - #20 {
INFO  17:21:22,758 - #8 e
INFO  17:21:22,758 - #24 =
INFO  17:21:22,759 - #9 3
INFO  17:21:22,759 - #27 ;
INFO  17:21:22,759 - #8 e
INFO  17:21:22,760 - #24 =
INFO  17:21:22,760 - #16 -
INFO  17:21:22,760 - #29 (
INFO  17:21:22,760 - #8 d
INFO  17:21:22,760 - #18 /
INFO  17:21:22,760 - #9 11
INFO  17:21:22,762 - #16 -
INFO  17:21:22,764 - #8 c
INFO  17:21:22,765 - #30 )
INFO  17:21:22,767 - #17 *
INFO  17:21:22,767 - #8 e
INFO  17:21:22,768 - #15 +
INFO  17:21:22,769 - #9 1
INFO  17:21:22,770 - #27 ;
INFO  17:21:22,770 - #8 e
INFO  17:21:22,770 - #25 ++
INFO  17:21:22,771 - #27 ;
INFO  17:21:22,771 - #3 print
INFO  17:21:22,771 - #29 (
INFO  17:21:22,771 - #8 e
INFO  17:21:22,771 - #30 )
INFO  17:21:22,771 - #27 ;
INFO  17:21:22,771 - #8 z
INFO  17:21:22,772 - #24 =
INFO  17:21:22,772 - #7 new
INFO  17:21:22,772 - #8 char
INFO  17:21:22,772 - #22 [
INFO  17:21:22,772 - #9 4
INFO  17:21:22,772 - #23 ]
INFO  17:21:22,773 - #27 ;
INFO  17:21:22,773 - #8 z
INFO  17:21:22,773 - #22 [
INFO  17:21:22,773 - #9 0
INFO  17:21:22,773 - #23 ]
INFO  17:21:22,774 - #24 =
INFO  17:21:22,774 - #8 chr
INFO  17:21:22,774 - #29 (
INFO  17:21:22,774 - #9 72
INFO  17:21:22,774 - #30 )
INFO  17:21:22,774 - #27 ;
INFO  17:21:22,775 - #8 z
INFO  17:21:22,775 - #22 [
INFO  17:21:22,775 - #9 1
INFO  17:21:22,775 - #23 ]
INFO  17:21:22,775 - #24 =
INFO  17:21:22,777 - #10 O
INFO  17:21:22,777 - #27 ;
INFO  17:21:22,777 - #8 z
INFO  17:21:22,777 - #22 [
INFO  17:21:22,778 - #9 2
INFO  17:21:22,778 - #23 ]
INFO  17:21:22,778 - #24 =
INFO  17:21:22,778 - #10 M
INFO  17:21:22,778 - #27 ;
INFO  17:21:22,778 - #8 z
INFO  17:21:22,778 - #22 [
INFO  17:21:22,778 - #9 3
INFO  17:21:22,778 - #23 ]
INFO  17:21:22,778 - #24 =
INFO  17:21:22,778 - #8 chr
INFO  17:21:22,779 - #29 (
INFO  17:21:22,779 - #8 ord
INFO  17:21:22,779 - #29 (
INFO  17:21:22,779 - #10 A
INFO  17:21:22,780 - #30 )
INFO  17:21:22,780 - #15 +
INFO  17:21:22,780 - #9 4
INFO  17:21:22,780 - #30 )
INFO  17:21:22,780 - #27 ;
INFO  17:21:22,780 - #3 print
INFO  17:21:22,781 - #29 (
INFO  17:21:22,781 - #8 z
INFO  17:21:22,781 - #22 [
INFO  17:21:22,781 - #9 0
INFO  17:21:22,781 - #23 ]
INFO  17:21:22,781 - #30 )
INFO  17:21:22,784 - #27 ;
INFO  17:21:22,784 - #3 print
INFO  17:21:22,784 - #29 (
INFO  17:21:22,784 - #8 z
INFO  17:21:22,784 - #22 [
INFO  17:21:22,784 - #9 1
INFO  17:21:22,785 - #23 ]
INFO  17:21:22,786 - #30 )
INFO  17:21:22,786 - #27 ;
INFO  17:21:22,786 - #3 print
INFO  17:21:22,786 - #29 (
INFO  17:21:22,786 - #8 z
INFO  17:21:22,786 - #22 [
INFO  17:21:22,787 - #9 2
INFO  17:21:22,787 - #23 ]
INFO  17:21:22,787 - #30 )
INFO  17:21:22,787 - #27 ;
INFO  17:21:22,787 - #3 print
INFO  17:21:22,787 - #29 (
INFO  17:21:22,787 - #8 z
INFO  17:21:22,787 - #22 [
INFO  17:21:22,787 - #9 3
INFO  17:21:22,787 - #23 ]
INFO  17:21:22,788 - #30 )
INFO  17:21:22,788 - #27 ;
INFO  17:21:22,788 - #3 print
INFO  17:21:22,788 - #29 (
INFO  17:21:22,788 - #8 len
INFO  17:21:22,788 - #29 (
INFO  17:21:22,788 - #8 z
INFO  17:21:22,788 - #30 )
INFO  17:21:22,788 - #30 )
INFO  17:21:22,788 - #27 ;
INFO  17:21:22,788 - #21 }
INFO  17:21:22,789 - #21 }
INFO  17:21:22,790 - =====================SINTAKSNO_STABLO=========================
INFO  17:21:22,793 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_single(
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_single]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_single(
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_single]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 2
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               3
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:21:22,794 - ==============================================================
INFO  17:21:22,809 - Pocetak obrade programa Program na liniji 1
INFO  17:21:22,809 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:21:22,810 - Deklarisana konstanta c na liniji 2
INFO  17:21:22,810 - Deklarisana konstanta d na liniji 2
INFO  17:21:22,810 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:21:22,810 - Deklarisana promenljiva e na liniji 3
INFO  17:21:22,811 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  17:21:22,811 - Deklarisan niz z na liniji 3
INFO  17:21:22,812 - Pocetak obrade metode main na liniji 5
INFO  17:21:22,812 - Pronadjen tip char u tabeli simbola na liniji 11
INFO  17:21:22,812 - Pronadjen poziv metode (funkcije) chr na liniji 12
INFO  17:21:22,812 - Pronadjen poziv metode (funkcije) ord na liniji 15
INFO  17:21:22,812 - Pronadjen poziv metode (funkcije) chr na liniji 15
INFO  17:21:22,813 - Pronadjen poziv metode (funkcije) len na liniji 20
INFO  17:21:22,813 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:21:22,813 - Zavrsetak obrade programa Program na liniji 1
INFO  17:21:22,813 - ======================TABELA_SIMBOLA==========================
INFO  17:21:22,813 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  17:21:22,813 - ==============================================================
INFO  17:21:22,814 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  17:21:22,814 - ==============================================================
INFO  17:21:22,814 - ======================GENERISANJE_KODA========================
INFO  17:21:22,820 - Generisanje koda uspesno zavrseno!
INFO  17:21:22,820 - Generisanje izlaznog fajla test\program.obj
INFO  17:21:22,820 - ==============================================================
INFO  17:29:21,940 - Obrada ulaznog fajla test\program.mj
INFO  17:29:22,015 - #2 program
INFO  17:29:22,015 - #8 Program
INFO  17:29:22,015 - #5 const
INFO  17:29:22,016 - #8 int
INFO  17:29:22,016 - #8 c
INFO  17:29:22,016 - #24 =
INFO  17:29:22,016 - #9 10
INFO  17:29:22,017 - #28 ,
INFO  17:29:22,017 - #8 d
INFO  17:29:22,018 - #24 =
INFO  17:29:22,018 - #9 99
INFO  17:29:22,018 - #28 ,
INFO  17:29:22,018 - #8 g
INFO  17:29:22,018 - #24 =
INFO  17:29:22,018 - #9 2
INFO  17:29:22,018 - #27 ;
INFO  17:29:22,018 - #8 int
INFO  17:29:22,020 - #8 e
INFO  17:29:22,020 - #27 ;
INFO  17:29:22,020 - #8 char
INFO  17:29:22,022 - #8 z
INFO  17:29:22,022 - #22 [
INFO  17:29:22,022 - #23 ]
INFO  17:29:22,022 - #27 ;
INFO  17:29:22,022 - #20 {
INFO  17:29:22,023 - #6 void
INFO  17:29:22,023 - #8 main
INFO  17:29:22,023 - #29 (
INFO  17:29:22,024 - #30 )
INFO  17:29:22,024 - #20 {
INFO  17:29:22,024 - #8 e
INFO  17:29:22,024 - #24 =
INFO  17:29:22,024 - #9 3
INFO  17:29:22,024 - #27 ;
INFO  17:29:22,025 - #8 e
INFO  17:29:22,025 - #24 =
INFO  17:29:22,025 - #16 -
INFO  17:29:22,026 - #29 (
INFO  17:29:22,026 - #8 d
INFO  17:29:22,026 - #18 /
INFO  17:29:22,026 - #9 11
INFO  17:29:22,027 - #16 -
INFO  17:29:22,029 - #8 c
INFO  17:29:22,030 - #30 )
INFO  17:29:22,031 - #17 *
INFO  17:29:22,032 - #8 e
INFO  17:29:22,032 - #15 +
INFO  17:29:22,033 - #9 1
INFO  17:29:22,033 - #27 ;
INFO  17:29:22,034 - #8 e
INFO  17:29:22,034 - #25 ++
INFO  17:29:22,034 - #27 ;
INFO  17:29:22,034 - #3 print
INFO  17:29:22,034 - #29 (
INFO  17:29:22,034 - #8 e
INFO  17:29:22,034 - #30 )
INFO  17:29:22,035 - #27 ;
INFO  17:29:22,035 - #8 e
INFO  17:29:22,035 - #24 =
INFO  17:29:22,035 - #8 e
INFO  17:29:22,035 - #16 -
INFO  17:29:22,035 - #9 2
INFO  17:29:22,035 - #27 ;
INFO  17:29:22,035 - #8 z
INFO  17:29:22,035 - #24 =
INFO  17:29:22,036 - #7 new
INFO  17:29:22,036 - #8 char
INFO  17:29:22,036 - #22 [
INFO  17:29:22,036 - #9 4
INFO  17:29:22,036 - #23 ]
INFO  17:29:22,036 - #27 ;
INFO  17:29:22,036 - #8 z
INFO  17:29:22,036 - #22 [
INFO  17:29:22,036 - #9 0
INFO  17:29:22,037 - #23 ]
INFO  17:29:22,037 - #24 =
INFO  17:29:22,037 - #8 chr
INFO  17:29:22,037 - #29 (
INFO  17:29:22,037 - #9 72
INFO  17:29:22,037 - #30 )
INFO  17:29:22,038 - #27 ;
INFO  17:29:22,038 - #8 z
INFO  17:29:22,038 - #22 [
INFO  17:29:22,038 - #9 1
INFO  17:29:22,038 - #23 ]
INFO  17:29:22,038 - #24 =
INFO  17:29:22,038 - #10 O
INFO  17:29:22,038 - #27 ;
INFO  17:29:22,039 - #8 z
INFO  17:29:22,039 - #22 [
INFO  17:29:22,039 - #8 g
INFO  17:29:22,039 - #23 ]
INFO  17:29:22,039 - #24 =
INFO  17:29:22,039 - #10 M
INFO  17:29:22,039 - #27 ;
INFO  17:29:22,039 - #8 z
INFO  17:29:22,039 - #22 [
INFO  17:29:22,039 - #8 e
INFO  17:29:22,040 - #23 ]
INFO  17:29:22,040 - #24 =
INFO  17:29:22,040 - #8 chr
INFO  17:29:22,040 - #29 (
INFO  17:29:22,040 - #8 ord
INFO  17:29:22,040 - #29 (
INFO  17:29:22,040 - #10 A
INFO  17:29:22,040 - #30 )
INFO  17:29:22,040 - #15 +
INFO  17:29:22,040 - #9 4
INFO  17:29:22,040 - #30 )
INFO  17:29:22,041 - #27 ;
INFO  17:29:22,041 - #3 print
INFO  17:29:22,041 - #29 (
INFO  17:29:22,041 - #8 z
INFO  17:29:22,041 - #22 [
INFO  17:29:22,041 - #9 0
INFO  17:29:22,041 - #23 ]
INFO  17:29:22,041 - #30 )
INFO  17:29:22,042 - #27 ;
INFO  17:29:22,042 - #3 print
INFO  17:29:22,042 - #29 (
INFO  17:29:22,042 - #8 z
INFO  17:29:22,042 - #22 [
INFO  17:29:22,042 - #9 1
INFO  17:29:22,042 - #23 ]
INFO  17:29:22,042 - #30 )
INFO  17:29:22,042 - #27 ;
INFO  17:29:22,042 - #3 print
INFO  17:29:22,042 - #29 (
INFO  17:29:22,043 - #8 z
INFO  17:29:22,043 - #22 [
INFO  17:29:22,043 - #9 2
INFO  17:29:22,043 - #23 ]
INFO  17:29:22,043 - #30 )
INFO  17:29:22,043 - #27 ;
INFO  17:29:22,043 - #3 print
INFO  17:29:22,043 - #29 (
INFO  17:29:22,043 - #8 z
INFO  17:29:22,043 - #22 [
INFO  17:29:22,043 - #9 3
INFO  17:29:22,043 - #23 ]
INFO  17:29:22,045 - #30 )
INFO  17:29:22,045 - #27 ;
INFO  17:29:22,045 - #3 print
INFO  17:29:22,045 - #29 (
INFO  17:29:22,045 - #8 len
INFO  17:29:22,045 - #29 (
INFO  17:29:22,046 - #8 z
INFO  17:29:22,046 - #30 )
INFO  17:29:22,046 - #30 )
INFO  17:29:22,046 - #27 ;
INFO  17:29:22,046 - #21 }
INFO  17:29:22,046 - #21 }
INFO  17:29:22,047 - =====================SINTAKSNO_STABLO=========================
INFO  17:29:22,051 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           e
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               3
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_neg_term_multi(
                                          Term_multi(
                                            Factor_expr(
                                              Expr_term_multi(
                                                Term_multi(
                                                  Factor_designator(
                                                    Designator_1(
                                                     d
                                                    ) [Designator_1]
                                                  ) [Factor_designator]
                                                  More_factor_single(
                                                    More_factor_part(
                                                      Mul_op_div(
                                                      ) [Mul_op_div]
                                                      Factor_num_const(
                                                       11
                                                      ) [Factor_num_const]
                                                    ) [More_factor_part]
                                                  ) [More_factor_single]
                                                ) [Term_multi]
                                                More_term_single(
                                                  More_term_part(
                                                    Add_op_minus(
                                                    ) [Add_op_minus]
                                                    Term_single(
                                                      Factor_designator(
                                                        Designator_1(
                                                         c
                                                        ) [Designator_1]
                                                      ) [Factor_designator]
                                                    ) [Term_single]
                                                  ) [More_term_part]
                                                ) [More_term_single]
                                              ) [Expr_term_multi]
                                            ) [Factor_expr]
                                            More_factor_single(
                                              More_factor_part(
                                                Mul_op_mul(
                                                ) [Mul_op_mul]
                                                Factor_designator(
                                                  Designator_1(
                                                   e
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                              ) [More_factor_part]
                                            ) [More_factor_single]
                                          ) [Term_multi]
                                          More_term_single(
                                            More_term_part(
                                              Add_op_plus(
                                              ) [Add_op_plus]
                                              Term_single(
                                                Factor_num_const(
                                                 1
                                                ) [Factor_num_const]
                                              ) [Term_single]
                                            ) [More_term_part]
                                          ) [More_term_single]
                                        ) [Expr_neg_term_multi]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Increment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Increment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_print_1(
                                  Expr_single(
                                    Term_single(
                                      Factor_designator(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                      ) [Factor_designator]
                                    ) [Term_single]
                                  ) [Expr_single]
                                ) [Stmt_print_1]
                              ) [Statement_multi]
                              Stmt_design(
                                Assignment(
                                  Designator_1(
                                   e
                                  ) [Designator_1]
                                  Expr_term_multi(
                                    Term_single(
                                      Factor_designator(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                      ) [Factor_designator]
                                    ) [Term_single]
                                    More_term_single(
                                      More_term_part(
                                        Add_op_minus(
                                        ) [Add_op_minus]
                                        Term_single(
                                          Factor_num_const(
                                           2
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [More_term_part]
                                    ) [More_term_single]
                                  ) [Expr_term_multi]
                                ) [Assignment]
                              ) [Stmt_design]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   g
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:29:22,052 - ==============================================================
INFO  17:29:22,065 - Pocetak obrade programa Program na liniji 1
INFO  17:29:22,066 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:29:22,067 - Deklarisana konstanta c na liniji 2
INFO  17:29:22,067 - Deklarisana konstanta d na liniji 2
INFO  17:29:22,067 - Deklarisana konstanta g na liniji 2
INFO  17:29:22,067 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:29:22,067 - Deklarisana promenljiva e na liniji 3
INFO  17:29:22,067 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  17:29:22,067 - Deklarisan niz z na liniji 3
INFO  17:29:22,068 - Pocetak obrade metode main na liniji 5
INFO  17:29:22,069 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  17:29:22,069 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  17:29:22,069 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  17:29:22,069 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  17:29:22,069 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  17:29:22,069 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:29:22,069 - Zavrsetak obrade programa Program na liniji 1
INFO  17:29:22,069 - ======================TABELA_SIMBOLA==========================
INFO  17:29:22,070 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  17:29:22,070 - ==============================================================
INFO  17:29:22,070 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  17:29:22,070 - ==============================================================
INFO  17:29:22,070 - ======================GENERISANJE_KODA========================
INFO  17:29:22,077 - Generisanje koda uspesno zavrseno!
INFO  17:29:22,077 - Generisanje izlaznog fajla test\program.obj
INFO  17:29:22,077 - ==============================================================
INFO  17:30:53,427 - Obrada ulaznog fajla test\program.mj
INFO  17:30:53,499 - #2 program
INFO  17:30:53,499 - #8 Program
INFO  17:30:53,499 - #5 const
INFO  17:30:53,500 - #8 int
INFO  17:30:53,500 - #8 c
INFO  17:30:53,501 - #24 =
INFO  17:30:53,501 - #9 10
INFO  17:30:53,501 - #28 ,
INFO  17:30:53,502 - #8 d
INFO  17:30:53,503 - #24 =
INFO  17:30:53,503 - #9 99
INFO  17:30:53,503 - #28 ,
INFO  17:30:53,503 - #8 g
INFO  17:30:53,503 - #24 =
INFO  17:30:53,503 - #9 2
INFO  17:30:53,503 - #27 ;
INFO  17:30:53,503 - #8 int
INFO  17:30:53,504 - #8 e
INFO  17:30:53,504 - #27 ;
INFO  17:30:53,505 - #8 char
INFO  17:30:53,505 - #8 z
INFO  17:30:53,506 - #22 [
INFO  17:30:53,506 - #23 ]
INFO  17:30:53,506 - #27 ;
INFO  17:30:53,506 - #20 {
INFO  17:30:53,506 - #6 void
INFO  17:30:53,506 - #8 main
INFO  17:30:53,506 - #29 (
INFO  17:30:53,507 - #30 )
INFO  17:30:53,507 - #20 {
INFO  17:30:53,507 - #8 e
INFO  17:30:53,507 - #24 =
INFO  17:30:53,507 - #9 3
INFO  17:30:53,507 - #27 ;
INFO  17:30:53,508 - #8 e
INFO  17:30:53,508 - #24 =
INFO  17:30:53,508 - #16 -
INFO  17:30:53,508 - #29 (
INFO  17:30:53,508 - #8 d
INFO  17:30:53,508 - #18 /
INFO  17:30:53,509 - #9 11
INFO  17:30:53,510 - #16 -
INFO  17:30:53,510 - #8 c
INFO  17:30:53,511 - #30 )
INFO  17:30:53,512 - #17 *
INFO  17:30:53,513 - #8 e
INFO  17:30:53,513 - #15 +
INFO  17:30:53,513 - #9 1
INFO  17:30:53,514 - #27 ;
INFO  17:30:53,514 - #8 e
INFO  17:30:53,515 - #25 ++
INFO  17:30:53,515 - #27 ;
INFO  17:30:53,515 - #3 print
INFO  17:30:53,515 - #29 (
INFO  17:30:53,515 - #8 e
INFO  17:30:53,515 - #30 )
INFO  17:30:53,515 - #27 ;
INFO  17:30:53,515 - #8 e
INFO  17:30:53,516 - #24 =
INFO  17:30:53,516 - #8 e
INFO  17:30:53,516 - #16 -
INFO  17:30:53,516 - #9 2
INFO  17:30:53,516 - #27 ;
INFO  17:30:53,516 - #8 z
INFO  17:30:53,516 - #24 =
INFO  17:30:53,516 - #7 new
INFO  17:30:53,516 - #8 char
INFO  17:30:53,517 - #22 [
INFO  17:30:53,517 - #9 4
INFO  17:30:53,517 - #23 ]
INFO  17:30:53,517 - #27 ;
INFO  17:30:53,517 - #8 z
INFO  17:30:53,517 - #22 [
INFO  17:30:53,517 - #9 0
INFO  17:30:53,517 - #23 ]
INFO  17:30:53,517 - #24 =
INFO  17:30:53,517 - #8 chr
INFO  17:30:53,518 - #29 (
INFO  17:30:53,518 - #9 72
INFO  17:30:53,518 - #30 )
INFO  17:30:53,518 - #27 ;
INFO  17:30:53,518 - #8 z
INFO  17:30:53,518 - #22 [
INFO  17:30:53,518 - #9 1
INFO  17:30:53,518 - #23 ]
INFO  17:30:53,518 - #24 =
INFO  17:30:53,519 - #10 O
INFO  17:30:53,519 - #27 ;
INFO  17:30:53,519 - #8 z
INFO  17:30:53,519 - #22 [
INFO  17:30:53,519 - #8 g
INFO  17:30:53,519 - #23 ]
INFO  17:30:53,519 - #24 =
INFO  17:30:53,519 - #10 M
INFO  17:30:53,519 - #27 ;
INFO  17:30:53,520 - #8 z
INFO  17:30:53,520 - #22 [
INFO  17:30:53,520 - #8 e
INFO  17:30:53,520 - #23 ]
INFO  17:30:53,520 - #24 =
INFO  17:30:53,520 - #8 chr
INFO  17:30:53,520 - #29 (
INFO  17:30:53,520 - #8 ord
INFO  17:30:53,520 - #29 (
INFO  17:30:53,520 - #10 A
INFO  17:30:53,521 - #30 )
INFO  17:30:53,521 - #15 +
INFO  17:30:53,521 - #9 4
INFO  17:30:53,521 - #30 )
INFO  17:30:53,521 - #27 ;
INFO  17:30:53,521 - #3 print
INFO  17:30:53,521 - #29 (
INFO  17:30:53,521 - #8 z
INFO  17:30:53,521 - #22 [
INFO  17:30:53,521 - #9 0
INFO  17:30:53,521 - #23 ]
INFO  17:30:53,521 - #30 )
INFO  17:30:53,522 - #27 ;
INFO  17:30:53,522 - #3 print
INFO  17:30:53,522 - #29 (
INFO  17:30:53,522 - #8 z
INFO  17:30:53,522 - #22 [
INFO  17:30:53,522 - #9 1
INFO  17:30:53,522 - #23 ]
INFO  17:30:53,522 - #30 )
INFO  17:30:53,522 - #27 ;
INFO  17:30:53,522 - #3 print
INFO  17:30:53,522 - #29 (
INFO  17:30:53,523 - #8 z
INFO  17:30:53,523 - #22 [
INFO  17:30:53,523 - #9 2
INFO  17:30:53,523 - #23 ]
INFO  17:30:53,523 - #30 )
INFO  17:30:53,523 - #27 ;
INFO  17:30:53,523 - #3 print
INFO  17:30:53,523 - #29 (
INFO  17:30:53,523 - #8 z
INFO  17:30:53,523 - #22 [
INFO  17:30:53,523 - #9 3
INFO  17:30:53,523 - #23 ]
INFO  17:30:53,523 - #30 )
INFO  17:30:53,523 - #27 ;
INFO  17:30:53,523 - #3 print
INFO  17:30:53,524 - #29 (
INFO  17:30:53,524 - #8 len
INFO  17:30:53,524 - #29 (
INFO  17:30:53,524 - #8 z
INFO  17:30:53,524 - #30 )
INFO  17:30:53,524 - #30 )
INFO  17:30:53,524 - #27 ;
INFO  17:30:53,524 - #21 }
INFO  17:30:53,524 - #21 }
INFO  17:30:53,525 - =====================SINTAKSNO_STABLO=========================
INFO  17:30:53,528 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_single(
                                      Stmt_design(
                                        Assignment(
                                          Designator_1(
                                           e
                                          ) [Designator_1]
                                          Expr_single(
                                            Term_single(
                                              Factor_num_const(
                                               3
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Assignment]
                                      ) [Stmt_design]
                                    ) [Statement_single]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_neg_term_multi(
                                          Term_multi(
                                            Factor_expr(
                                              Expr_term_multi(
                                                Term_multi(
                                                  Factor_designator(
                                                    Designator_1(
                                                     d
                                                    ) [Designator_1]
                                                  ) [Factor_designator]
                                                  More_factor_single(
                                                    More_factor_part(
                                                      Mul_op_div(
                                                      ) [Mul_op_div]
                                                      Factor_num_const(
                                                       11
                                                      ) [Factor_num_const]
                                                    ) [More_factor_part]
                                                  ) [More_factor_single]
                                                ) [Term_multi]
                                                More_term_single(
                                                  More_term_part(
                                                    Add_op_minus(
                                                    ) [Add_op_minus]
                                                    Term_single(
                                                      Factor_designator(
                                                        Designator_1(
                                                         c
                                                        ) [Designator_1]
                                                      ) [Factor_designator]
                                                    ) [Term_single]
                                                  ) [More_term_part]
                                                ) [More_term_single]
                                              ) [Expr_term_multi]
                                            ) [Factor_expr]
                                            More_factor_single(
                                              More_factor_part(
                                                Mul_op_mul(
                                                ) [Mul_op_mul]
                                                Factor_designator(
                                                  Designator_1(
                                                   e
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                              ) [More_factor_part]
                                            ) [More_factor_single]
                                          ) [Term_multi]
                                          More_term_single(
                                            More_term_part(
                                              Add_op_plus(
                                              ) [Add_op_plus]
                                              Term_single(
                                                Factor_num_const(
                                                 1
                                                ) [Factor_num_const]
                                              ) [Term_single]
                                            ) [More_term_part]
                                          ) [More_term_single]
                                        ) [Expr_neg_term_multi]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Increment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Increment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_print_1(
                                  Expr_single(
                                    Term_single(
                                      Factor_designator(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                      ) [Factor_designator]
                                    ) [Term_single]
                                  ) [Expr_single]
                                ) [Stmt_print_1]
                              ) [Statement_multi]
                              Stmt_design(
                                Assignment(
                                  Designator_1(
                                   e
                                  ) [Designator_1]
                                  Expr_term_multi(
                                    Term_single(
                                      Factor_designator(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                      ) [Factor_designator]
                                    ) [Term_single]
                                    More_term_single(
                                      More_term_part(
                                        Add_op_minus(
                                        ) [Add_op_minus]
                                        Term_single(
                                          Factor_num_const(
                                           2
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [More_term_part]
                                    ) [More_term_single]
                                  ) [Expr_term_multi]
                                ) [Assignment]
                              ) [Stmt_design]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   g
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:30:53,529 - ==============================================================
INFO  17:30:53,544 - Pocetak obrade programa Program na liniji 1
INFO  17:30:53,544 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:30:53,545 - Deklarisana konstanta c na liniji 2
INFO  17:30:53,545 - Deklarisana konstanta d na liniji 2
INFO  17:30:53,546 - Deklarisana konstanta g na liniji 2
INFO  17:30:53,546 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:30:53,546 - Deklarisana promenljiva e na liniji 3
INFO  17:30:53,546 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  17:30:53,546 - Deklarisan niz z na liniji 3
INFO  17:30:53,547 - Pocetak obrade metode main na liniji 5
INFO  17:30:53,547 - Pronadjen tip char u tabeli simbola na liniji 12
INFO  17:30:53,547 - Pronadjen poziv metode (funkcije) chr na liniji 13
INFO  17:30:53,548 - Pronadjen poziv metode (funkcije) ord na liniji 16
INFO  17:30:53,548 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  17:30:53,548 - Pronadjen poziv metode (funkcije) len na liniji 21
INFO  17:30:53,548 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:30:53,548 - Zavrsetak obrade programa Program na liniji 1
INFO  17:30:53,548 - ======================TABELA_SIMBOLA==========================
INFO  17:30:53,549 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  17:30:53,549 - ==============================================================
INFO  17:30:53,549 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  17:30:53,549 - ==============================================================
INFO  17:30:53,549 - ======================GENERISANJE_KODA========================
INFO  17:30:53,554 - Generisanje koda uspesno zavrseno!
INFO  17:30:53,555 - Generisanje izlaznog fajla test\program.obj
INFO  17:30:53,555 - ==============================================================
INFO  17:33:41,035 - Obrada ulaznog fajla test\program.mj
INFO  17:33:41,113 - #2 program
INFO  17:33:41,113 - #8 Program
INFO  17:33:41,113 - #5 const
INFO  17:33:41,114 - #8 int
INFO  17:33:41,115 - #8 c
INFO  17:33:41,115 - #24 =
INFO  17:33:41,115 - #9 10
INFO  17:33:41,115 - #28 ,
INFO  17:33:41,116 - #8 d
INFO  17:33:41,117 - #24 =
INFO  17:33:41,117 - #9 99
INFO  17:33:41,117 - #28 ,
INFO  17:33:41,117 - #8 g
INFO  17:33:41,117 - #24 =
INFO  17:33:41,117 - #9 2
INFO  17:33:41,117 - #27 ;
INFO  17:33:41,117 - #8 int
INFO  17:33:41,119 - #8 e
INFO  17:33:41,119 - #27 ;
INFO  17:33:41,119 - #8 char
INFO  17:33:41,120 - #8 z
INFO  17:33:41,121 - #22 [
INFO  17:33:41,121 - #23 ]
INFO  17:33:41,121 - #27 ;
INFO  17:33:41,121 - #20 {
INFO  17:33:41,121 - #6 void
INFO  17:33:41,121 - #8 main
INFO  17:33:41,121 - #29 (
INFO  17:33:41,122 - #30 )
INFO  17:33:41,122 - #8 int
INFO  17:33:41,122 - #8 x
INFO  17:33:41,123 - #28 ,
INFO  17:33:41,123 - #8 int
INFO  17:33:41,123 - #8 y
ERROR 17:33:41,123 - Sintaksna greska na liniji 5, koloni 25 za simbol "y"!
INFO  17:33:41,123 - #20 {
INFO  17:33:41,123 - #8 x
INFO  17:33:41,123 - #24 =
INFO  17:33:41,124 - #9 1
INFO  17:33:41,124 - #27 ;
INFO  17:33:41,124 - #4 read
INFO  17:33:41,124 - #29 (
INFO  17:33:41,124 - #8 y
INFO  17:33:41,125 - #30 )
INFO  17:33:41,125 - #27 ;
INFO  17:33:41,125 - #8 e
INFO  17:33:41,125 - #24 =
INFO  17:33:41,125 - #9 3
INFO  17:33:41,125 - #27 ;
INFO  17:33:41,125 - #8 e
INFO  17:33:41,125 - #24 =
INFO  17:33:41,125 - #16 -
INFO  17:33:41,126 - #29 (
INFO  17:33:41,126 - #8 d
INFO  17:33:41,126 - #18 /
INFO  17:33:41,126 - #9 11
INFO  17:33:41,126 - #16 -
INFO  17:33:41,126 - #8 c
INFO  17:33:41,126 - #30 )
INFO  17:33:41,126 - #17 *
INFO  17:33:41,127 - #8 e
INFO  17:33:41,127 - #15 +
INFO  17:33:41,127 - #8 y
INFO  17:33:41,129 - #17 *
INFO  17:33:41,129 - #8 y
INFO  17:33:41,129 - #16 -
INFO  17:33:41,129 - #8 y
INFO  17:33:41,129 - #15 +
INFO  17:33:41,130 - #9 1
INFO  17:33:41,130 - #27 ;
INFO  17:33:41,130 - #8 e
INFO  17:33:41,130 - #25 ++
INFO  17:33:41,130 - #27 ;
INFO  17:33:41,130 - #3 print
INFO  17:33:41,130 - #29 (
INFO  17:33:41,130 - #8 e
INFO  17:33:41,132 - #30 )
INFO  17:33:41,132 - #27 ;
INFO  17:33:41,132 - #8 z
INFO  17:33:41,132 - #24 =
INFO  17:33:41,132 - #7 new
INFO  17:33:41,132 - #8 char
INFO  17:33:41,132 - #22 [
INFO  17:33:41,133 - #9 4
INFO  17:33:41,133 - #23 ]
INFO  17:33:41,133 - #27 ;
INFO  17:33:41,133 - #8 z
INFO  17:33:41,133 - #22 [
INFO  17:33:41,133 - #9 0
INFO  17:33:41,133 - #23 ]
INFO  17:33:41,133 - #24 =
INFO  17:33:41,133 - #8 chr
INFO  17:33:41,133 - #29 (
INFO  17:33:41,133 - #9 72
INFO  17:33:41,134 - #30 )
INFO  17:33:41,134 - #27 ;
INFO  17:33:41,134 - #8 z
INFO  17:33:41,134 - #22 [
INFO  17:33:41,134 - #9 1
INFO  17:33:41,134 - #23 ]
INFO  17:33:41,134 - #24 =
INFO  17:33:41,134 - #10 O
INFO  17:33:41,134 - #27 ;
INFO  17:33:41,135 - #8 z
INFO  17:33:41,135 - #22 [
INFO  17:33:41,135 - #8 g
INFO  17:33:41,135 - #23 ]
INFO  17:33:41,135 - #24 =
INFO  17:33:41,135 - #10 M
INFO  17:33:41,135 - #27 ;
INFO  17:33:41,135 - #8 z
INFO  17:33:41,135 - #22 [
INFO  17:33:41,135 - #8 x
INFO  17:33:41,135 - #15 +
INFO  17:33:41,135 - #9 4
INFO  17:33:41,136 - #23 ]
INFO  17:33:41,136 - #24 =
INFO  17:33:41,136 - #8 chr
INFO  17:33:41,136 - #29 (
INFO  17:33:41,136 - #8 ord
INFO  17:33:41,136 - #29 (
INFO  17:33:41,136 - #10 A
INFO  17:33:41,136 - #30 )
INFO  17:33:41,136 - #15 +
INFO  17:33:41,136 - #9 4
INFO  17:33:41,136 - #30 )
INFO  17:33:41,137 - #27 ;
INFO  17:33:41,137 - #3 print
INFO  17:33:41,137 - #29 (
INFO  17:33:41,137 - #8 z
INFO  17:33:41,137 - #22 [
INFO  17:33:41,137 - #9 0
INFO  17:33:41,137 - #23 ]
INFO  17:33:41,137 - #30 )
INFO  17:33:41,137 - #27 ;
INFO  17:33:41,137 - #3 print
INFO  17:33:41,137 - #29 (
INFO  17:33:41,138 - #8 z
INFO  17:33:41,138 - #22 [
INFO  17:33:41,138 - #9 1
INFO  17:33:41,138 - #23 ]
INFO  17:33:41,138 - #30 )
INFO  17:33:41,138 - #27 ;
INFO  17:33:41,138 - #3 print
INFO  17:33:41,138 - #29 (
INFO  17:33:41,138 - #8 z
INFO  17:33:41,138 - #22 [
INFO  17:33:41,138 - #9 2
INFO  17:33:41,138 - #23 ]
INFO  17:33:41,138 - #30 )
INFO  17:33:41,139 - #27 ;
INFO  17:33:41,139 - #3 print
INFO  17:33:41,139 - #29 (
INFO  17:33:41,139 - #8 z
INFO  17:33:41,139 - #22 [
INFO  17:33:41,139 - #9 3
INFO  17:33:41,139 - #23 ]
INFO  17:33:41,139 - #30 )
INFO  17:33:41,139 - #27 ;
INFO  17:33:41,139 - #3 print
INFO  17:33:41,139 - #29 (
INFO  17:33:41,139 - #8 len
INFO  17:33:41,139 - #29 (
INFO  17:33:41,140 - #8 z
INFO  17:33:41,140 - #30 )
INFO  17:33:41,140 - #30 )
INFO  17:33:41,140 - #27 ;
INFO  17:33:41,140 - #21 }
INFO  17:33:41,140 - #21 }
ERROR 17:33:41,140 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1, koloni -1!
INFO  17:33:41,140 - Ulazni fajl ima sintaksne greske!
INFO  17:33:57,067 - Obrada ulaznog fajla test\program.mj
INFO  17:33:57,156 - #2 program
INFO  17:33:57,156 - #8 Program
INFO  17:33:57,156 - #5 const
INFO  17:33:57,158 - #8 int
INFO  17:33:57,158 - #8 c
INFO  17:33:57,159 - #24 =
INFO  17:33:57,159 - #9 10
INFO  17:33:57,159 - #28 ,
INFO  17:33:57,161 - #8 d
INFO  17:33:57,161 - #24 =
INFO  17:33:57,161 - #9 99
INFO  17:33:57,161 - #28 ,
INFO  17:33:57,161 - #8 g
INFO  17:33:57,161 - #24 =
INFO  17:33:57,161 - #9 2
INFO  17:33:57,162 - #27 ;
INFO  17:33:57,162 - #8 int
INFO  17:33:57,163 - #8 e
INFO  17:33:57,163 - #27 ;
INFO  17:33:57,163 - #8 char
INFO  17:33:57,165 - #8 z
INFO  17:33:57,165 - #22 [
INFO  17:33:57,165 - #23 ]
INFO  17:33:57,165 - #27 ;
INFO  17:33:57,165 - #20 {
INFO  17:33:57,165 - #6 void
INFO  17:33:57,165 - #8 main
INFO  17:33:57,165 - #29 (
INFO  17:33:57,166 - #30 )
INFO  17:33:57,167 - #8 int
INFO  17:33:57,167 - #8 x
INFO  17:33:57,167 - #28 ,
INFO  17:33:57,167 - #8 int
INFO  17:33:57,167 - #8 y
ERROR 17:33:57,167 - Sintaksna greska na liniji 5, koloni 25 za simbol "y"!
INFO  17:33:57,167 - #27 ;
INFO  17:33:57,167 - #20 {
INFO  17:33:57,167 - #8 x
INFO  17:33:57,168 - #24 =
ERROR 17:33:57,168 - Sintaksna greska - neispravna definicija promenljive na liniji 5, koloni 25 za simbol "y"!
INFO  17:33:57,170 - #9 1
INFO  17:33:57,170 - #27 ;
INFO  17:33:57,170 - #4 read
INFO  17:33:57,171 - #29 (
INFO  17:33:57,171 - #8 y
INFO  17:33:57,171 - #30 )
INFO  17:33:57,171 - #27 ;
INFO  17:33:57,171 - #8 e
INFO  17:33:57,171 - #24 =
INFO  17:33:57,171 - #9 3
INFO  17:33:57,172 - #27 ;
INFO  17:33:57,172 - #8 e
INFO  17:33:57,172 - #24 =
INFO  17:33:57,172 - #16 -
INFO  17:33:57,172 - #29 (
INFO  17:33:57,172 - #8 d
INFO  17:33:57,172 - #18 /
INFO  17:33:57,172 - #9 11
INFO  17:33:57,174 - #16 -
INFO  17:33:57,175 - #8 c
INFO  17:33:57,177 - #30 )
INFO  17:33:57,178 - #17 *
INFO  17:33:57,178 - #8 e
INFO  17:33:57,179 - #15 +
INFO  17:33:57,179 - #8 y
INFO  17:33:57,180 - #17 *
INFO  17:33:57,180 - #8 y
INFO  17:33:57,180 - #16 -
INFO  17:33:57,180 - #8 y
INFO  17:33:57,180 - #15 +
INFO  17:33:57,181 - #9 1
INFO  17:33:57,181 - #27 ;
INFO  17:33:57,181 - #8 e
INFO  17:33:57,181 - #25 ++
INFO  17:33:57,181 - #27 ;
INFO  17:33:57,181 - #3 print
INFO  17:33:57,183 - #29 (
INFO  17:33:57,183 - #8 e
INFO  17:33:57,183 - #30 )
INFO  17:33:57,184 - #27 ;
INFO  17:33:57,184 - #8 z
INFO  17:33:57,184 - #24 =
INFO  17:33:57,184 - #7 new
INFO  17:33:57,184 - #8 char
INFO  17:33:57,184 - #22 [
INFO  17:33:57,184 - #9 4
INFO  17:33:57,184 - #23 ]
INFO  17:33:57,184 - #27 ;
INFO  17:33:57,185 - #8 z
INFO  17:33:57,185 - #22 [
INFO  17:33:57,185 - #9 0
INFO  17:33:57,185 - #23 ]
INFO  17:33:57,185 - #24 =
INFO  17:33:57,185 - #8 chr
INFO  17:33:57,185 - #29 (
INFO  17:33:57,185 - #9 72
INFO  17:33:57,185 - #30 )
INFO  17:33:57,186 - #27 ;
INFO  17:33:57,186 - #8 z
INFO  17:33:57,186 - #22 [
INFO  17:33:57,186 - #9 1
INFO  17:33:57,186 - #23 ]
INFO  17:33:57,186 - #24 =
INFO  17:33:57,186 - #10 O
INFO  17:33:57,186 - #27 ;
INFO  17:33:57,187 - #8 z
INFO  17:33:57,187 - #22 [
INFO  17:33:57,187 - #8 g
INFO  17:33:57,187 - #23 ]
INFO  17:33:57,187 - #24 =
INFO  17:33:57,187 - #10 M
INFO  17:33:57,187 - #27 ;
INFO  17:33:57,187 - #8 z
INFO  17:33:57,187 - #22 [
INFO  17:33:57,187 - #8 x
INFO  17:33:57,188 - #15 +
INFO  17:33:57,188 - #9 4
INFO  17:33:57,188 - #23 ]
INFO  17:33:57,188 - #24 =
INFO  17:33:57,188 - #8 chr
INFO  17:33:57,188 - #29 (
INFO  17:33:57,188 - #8 ord
INFO  17:33:57,188 - #29 (
INFO  17:33:57,188 - #10 A
INFO  17:33:57,188 - #30 )
INFO  17:33:57,188 - #15 +
INFO  17:33:57,188 - #9 4
INFO  17:33:57,189 - #30 )
INFO  17:33:57,189 - #27 ;
INFO  17:33:57,189 - #3 print
INFO  17:33:57,189 - #29 (
INFO  17:33:57,189 - #8 z
INFO  17:33:57,189 - #22 [
INFO  17:33:57,189 - #9 0
INFO  17:33:57,189 - #23 ]
INFO  17:33:57,189 - #30 )
INFO  17:33:57,189 - #27 ;
INFO  17:33:57,189 - #3 print
INFO  17:33:57,190 - #29 (
INFO  17:33:57,190 - #8 z
INFO  17:33:57,190 - #22 [
INFO  17:33:57,190 - #9 1
INFO  17:33:57,190 - #23 ]
INFO  17:33:57,190 - #30 )
INFO  17:33:57,190 - #27 ;
INFO  17:33:57,190 - #3 print
INFO  17:33:57,190 - #29 (
INFO  17:33:57,190 - #8 z
INFO  17:33:57,190 - #22 [
INFO  17:33:57,190 - #9 2
INFO  17:33:57,190 - #23 ]
INFO  17:33:57,190 - #30 )
INFO  17:33:57,191 - #27 ;
INFO  17:33:57,191 - #3 print
INFO  17:33:57,191 - #29 (
INFO  17:33:57,191 - #8 z
INFO  17:33:57,191 - #22 [
INFO  17:33:57,191 - #9 3
INFO  17:33:57,191 - #23 ]
INFO  17:33:57,191 - #30 )
INFO  17:33:57,191 - #27 ;
INFO  17:33:57,191 - #3 print
INFO  17:33:57,192 - #29 (
INFO  17:33:57,192 - #8 len
INFO  17:33:57,192 - #29 (
INFO  17:33:57,192 - #8 z
INFO  17:33:57,192 - #30 )
INFO  17:33:57,192 - #30 )
INFO  17:33:57,192 - #27 ;
INFO  17:33:57,192 - #21 }
INFO  17:33:57,192 - #21 }
INFO  17:33:57,193 - Ulazni fajl ima sintaksne greske!
INFO  17:34:16,083 - Obrada ulaznog fajla test\program.mj
INFO  17:34:16,158 - #2 program
INFO  17:34:16,158 - #8 Program
INFO  17:34:16,158 - #5 const
INFO  17:34:16,159 - #8 int
INFO  17:34:16,159 - #8 c
INFO  17:34:16,160 - #24 =
INFO  17:34:16,160 - #9 10
INFO  17:34:16,160 - #28 ,
INFO  17:34:16,162 - #8 d
INFO  17:34:16,162 - #24 =
INFO  17:34:16,162 - #9 99
INFO  17:34:16,162 - #28 ,
INFO  17:34:16,162 - #8 g
INFO  17:34:16,162 - #24 =
INFO  17:34:16,162 - #9 2
INFO  17:34:16,162 - #27 ;
INFO  17:34:16,163 - #8 int
INFO  17:34:16,164 - #8 e
INFO  17:34:16,164 - #27 ;
INFO  17:34:16,164 - #8 char
INFO  17:34:16,165 - #8 z
INFO  17:34:16,165 - #22 [
INFO  17:34:16,165 - #23 ]
INFO  17:34:16,165 - #27 ;
INFO  17:34:16,165 - #20 {
INFO  17:34:16,166 - #6 void
INFO  17:34:16,166 - #8 main
INFO  17:34:16,166 - #29 (
INFO  17:34:16,167 - #30 )
INFO  17:34:16,167 - #8 int
INFO  17:34:16,167 - #8 x
INFO  17:34:16,167 - #28 ,
INFO  17:34:16,167 - #8 y
INFO  17:34:16,167 - #27 ;
INFO  17:34:16,167 - #20 {
INFO  17:34:16,168 - #8 x
INFO  17:34:16,168 - #24 =
INFO  17:34:16,168 - #9 1
INFO  17:34:16,168 - #27 ;
INFO  17:34:16,168 - #4 read
INFO  17:34:16,169 - #29 (
INFO  17:34:16,169 - #8 y
INFO  17:34:16,169 - #30 )
INFO  17:34:16,169 - #27 ;
INFO  17:34:16,169 - #8 e
INFO  17:34:16,169 - #24 =
INFO  17:34:16,169 - #9 3
INFO  17:34:16,170 - #27 ;
INFO  17:34:16,170 - #8 e
INFO  17:34:16,170 - #24 =
INFO  17:34:16,170 - #16 -
INFO  17:34:16,170 - #29 (
INFO  17:34:16,170 - #8 d
INFO  17:34:16,170 - #18 /
INFO  17:34:16,170 - #9 11
INFO  17:34:16,172 - #16 -
INFO  17:34:16,172 - #8 c
INFO  17:34:16,173 - #30 )
INFO  17:34:16,174 - #17 *
INFO  17:34:16,175 - #8 e
INFO  17:34:16,175 - #15 +
INFO  17:34:16,175 - #8 y
INFO  17:34:16,176 - #17 *
INFO  17:34:16,176 - #8 y
INFO  17:34:16,178 - #16 -
INFO  17:34:16,178 - #8 y
INFO  17:34:16,178 - #15 +
INFO  17:34:16,178 - #9 1
INFO  17:34:16,178 - #27 ;
INFO  17:34:16,178 - #8 e
INFO  17:34:16,178 - #25 ++
INFO  17:34:16,179 - #27 ;
INFO  17:34:16,179 - #3 print
INFO  17:34:16,179 - #29 (
INFO  17:34:16,179 - #8 e
INFO  17:34:16,179 - #30 )
INFO  17:34:16,180 - #27 ;
INFO  17:34:16,181 - #8 z
INFO  17:34:16,181 - #24 =
INFO  17:34:16,181 - #7 new
INFO  17:34:16,181 - #8 char
INFO  17:34:16,181 - #22 [
INFO  17:34:16,181 - #9 4
INFO  17:34:16,181 - #23 ]
INFO  17:34:16,181 - #27 ;
INFO  17:34:16,182 - #8 z
INFO  17:34:16,182 - #22 [
INFO  17:34:16,182 - #9 0
INFO  17:34:16,182 - #23 ]
INFO  17:34:16,182 - #24 =
INFO  17:34:16,182 - #8 chr
INFO  17:34:16,182 - #29 (
INFO  17:34:16,182 - #9 72
INFO  17:34:16,182 - #30 )
INFO  17:34:16,183 - #27 ;
INFO  17:34:16,183 - #8 z
INFO  17:34:16,183 - #22 [
INFO  17:34:16,183 - #9 1
INFO  17:34:16,183 - #23 ]
INFO  17:34:16,183 - #24 =
INFO  17:34:16,183 - #10 O
INFO  17:34:16,184 - #27 ;
INFO  17:34:16,184 - #8 z
INFO  17:34:16,184 - #22 [
INFO  17:34:16,184 - #8 g
INFO  17:34:16,184 - #23 ]
INFO  17:34:16,184 - #24 =
INFO  17:34:16,184 - #10 M
INFO  17:34:16,184 - #27 ;
INFO  17:34:16,184 - #8 z
INFO  17:34:16,184 - #22 [
INFO  17:34:16,184 - #8 x
INFO  17:34:16,184 - #15 +
INFO  17:34:16,184 - #9 4
INFO  17:34:16,185 - #23 ]
INFO  17:34:16,185 - #24 =
INFO  17:34:16,185 - #8 chr
INFO  17:34:16,185 - #29 (
INFO  17:34:16,185 - #8 ord
INFO  17:34:16,185 - #29 (
INFO  17:34:16,185 - #10 A
INFO  17:34:16,185 - #30 )
INFO  17:34:16,185 - #15 +
INFO  17:34:16,185 - #9 4
INFO  17:34:16,185 - #30 )
INFO  17:34:16,185 - #27 ;
INFO  17:34:16,186 - #3 print
INFO  17:34:16,186 - #29 (
INFO  17:34:16,186 - #8 z
INFO  17:34:16,186 - #22 [
INFO  17:34:16,186 - #9 0
INFO  17:34:16,186 - #23 ]
INFO  17:34:16,186 - #30 )
INFO  17:34:16,186 - #27 ;
INFO  17:34:16,186 - #3 print
INFO  17:34:16,186 - #29 (
INFO  17:34:16,186 - #8 z
INFO  17:34:16,186 - #22 [
INFO  17:34:16,187 - #9 1
INFO  17:34:16,187 - #23 ]
INFO  17:34:16,187 - #30 )
INFO  17:34:16,187 - #27 ;
INFO  17:34:16,187 - #3 print
INFO  17:34:16,187 - #29 (
INFO  17:34:16,187 - #8 z
INFO  17:34:16,187 - #22 [
INFO  17:34:16,187 - #9 2
INFO  17:34:16,187 - #23 ]
INFO  17:34:16,187 - #30 )
INFO  17:34:16,187 - #27 ;
INFO  17:34:16,187 - #3 print
INFO  17:34:16,187 - #29 (
INFO  17:34:16,187 - #8 z
INFO  17:34:16,188 - #22 [
INFO  17:34:16,188 - #9 3
INFO  17:34:16,188 - #23 ]
INFO  17:34:16,188 - #30 )
INFO  17:34:16,188 - #27 ;
INFO  17:34:16,188 - #3 print
INFO  17:34:16,188 - #29 (
INFO  17:34:16,188 - #8 len
INFO  17:34:16,188 - #29 (
INFO  17:34:16,188 - #8 z
INFO  17:34:16,188 - #30 )
INFO  17:34:16,188 - #30 )
INFO  17:34:16,189 - #27 ;
INFO  17:34:16,189 - #21 }
INFO  17:34:16,189 - #21 }
INFO  17:34:16,190 - =====================SINTAKSNO_STABLO=========================
INFO  17:34:16,193 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             int
            ) [Type]
            Var_multi(
              Var_single(
                Var_normal(
                 x
                ) [Var_normal]
              ) [Var_single]
              Var_normal(
               y
              ) [Var_normal]
            ) [Var_multi]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_multi(
                                      Statement_single(
                                        Stmt_design(
                                          Assignment(
                                            Designator_1(
                                             x
                                            ) [Designator_1]
                                            Expr_single(
                                              Term_single(
                                                Factor_num_const(
                                                 1
                                                ) [Factor_num_const]
                                              ) [Term_single]
                                            ) [Expr_single]
                                          ) [Assignment]
                                        ) [Stmt_design]
                                      ) [Statement_single]
                                      Stmt_Read(
                                        Designator_1(
                                         y
                                        ) [Designator_1]
                                      ) [Stmt_Read]
                                    ) [Statement_multi]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_multi(
                                          More_term_multi(
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_multi(
                                                  Factor_designator(
                                                    Designator_1(
                                                     y
                                                    ) [Designator_1]
                                                  ) [Factor_designator]
                                                  More_factor_single(
                                                    More_factor_part(
                                                      Mul_op_mul(
                                                      ) [Mul_op_mul]
                                                      Factor_designator(
                                                        Designator_1(
                                                         y
                                                        ) [Designator_1]
                                                      ) [Factor_designator]
                                                    ) [More_factor_part]
                                                  ) [More_factor_single]
                                                ) [Term_multi]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                            More_term_part(
                                              Add_op_minus(
                                              ) [Add_op_minus]
                                              Term_single(
                                                Factor_designator(
                                                  Designator_1(
                                                   y
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                              ) [Term_single]
                                            ) [More_term_part]
                                          ) [More_term_multi]
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_multi]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   g
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_term_multi(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 x
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                            More_term_single(
                              More_term_part(
                                Add_op_plus(
                                ) [Add_op_plus]
                                Term_single(
                                  Factor_num_const(
                                   4
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [More_term_part]
                            ) [More_term_single]
                          ) [Expr_term_multi]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:34:16,195 - ==============================================================
INFO  17:34:16,207 - Pocetak obrade programa Program na liniji 1
INFO  17:34:16,208 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:34:16,208 - Deklarisana konstanta c na liniji 2
INFO  17:34:16,209 - Deklarisana konstanta d na liniji 2
INFO  17:34:16,209 - Deklarisana konstanta g na liniji 2
INFO  17:34:16,209 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:34:16,209 - Deklarisana promenljiva e na liniji 3
INFO  17:34:16,209 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  17:34:16,209 - Deklarisan niz z na liniji 3
INFO  17:34:16,210 - Pocetak obrade metode main na liniji 5
INFO  17:34:16,210 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  17:34:16,210 - Deklarisana promenljiva x na liniji 5
INFO  17:34:16,210 - Deklarisana promenljiva y na liniji 5
INFO  17:34:16,211 - Pronadjen tip char u tabeli simbola na liniji 13
INFO  17:34:16,211 - Pronadjen poziv metode (funkcije) chr na liniji 14
INFO  17:34:16,211 - Pronadjen poziv metode (funkcije) ord na liniji 17
INFO  17:34:16,211 - Pronadjen poziv metode (funkcije) chr na liniji 17
INFO  17:34:16,211 - Pronadjen poziv metode (funkcije) len na liniji 22
INFO  17:34:16,211 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:34:16,211 - Zavrsetak obrade programa Program na liniji 1
INFO  17:34:16,211 - ======================TABELA_SIMBOLA==========================
INFO  17:34:16,212 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var x: int
	Local Var y: int

INFO  17:34:16,212 - ==============================================================
INFO  17:34:16,212 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  17:34:16,212 - ==============================================================
INFO  17:34:16,212 - ======================GENERISANJE_KODA========================
INFO  17:34:16,219 - Generisanje koda uspesno zavrseno!
INFO  17:34:16,219 - Generisanje izlaznog fajla test\program.obj
INFO  17:34:16,220 - ==============================================================
INFO  17:35:30,412 - Obrada ulaznog fajla test\program.mj
INFO  17:35:30,483 - #2 program
INFO  17:35:30,483 - #8 Program
INFO  17:35:30,483 - #5 const
INFO  17:35:30,484 - #8 int
INFO  17:35:30,485 - #8 c
INFO  17:35:30,485 - #24 =
INFO  17:35:30,486 - #9 10
INFO  17:35:30,486 - #28 ,
INFO  17:35:30,487 - #8 d
INFO  17:35:30,487 - #24 =
INFO  17:35:30,487 - #9 99
INFO  17:35:30,487 - #28 ,
INFO  17:35:30,488 - #8 g
INFO  17:35:30,488 - #24 =
INFO  17:35:30,488 - #9 2
INFO  17:35:30,488 - #27 ;
INFO  17:35:30,488 - #8 int
INFO  17:35:30,489 - #8 e
INFO  17:35:30,489 - #27 ;
INFO  17:35:30,490 - #8 char
INFO  17:35:30,491 - #8 z
INFO  17:35:30,491 - #22 [
INFO  17:35:30,491 - #23 ]
INFO  17:35:30,491 - #27 ;
INFO  17:35:30,491 - #20 {
INFO  17:35:30,492 - #6 void
INFO  17:35:30,492 - #8 main
INFO  17:35:30,492 - #29 (
INFO  17:35:30,493 - #30 )
INFO  17:35:30,493 - #8 int
INFO  17:35:30,493 - #8 x
INFO  17:35:30,493 - #28 ,
INFO  17:35:30,493 - #8 y
INFO  17:35:30,493 - #27 ;
INFO  17:35:30,494 - #20 {
INFO  17:35:30,494 - #8 x
INFO  17:35:30,494 - #24 =
INFO  17:35:30,494 - #9 1
INFO  17:35:30,494 - #27 ;
INFO  17:35:30,495 - #4 read
INFO  17:35:30,495 - #29 (
INFO  17:35:30,495 - #8 y
INFO  17:35:30,496 - #30 )
INFO  17:35:30,496 - #27 ;
INFO  17:35:30,496 - #3 print
INFO  17:35:30,497 - #29 (
INFO  17:35:30,497 - #8 x
INFO  17:35:30,497 - #30 )
INFO  17:35:30,497 - #27 ;
INFO  17:35:30,497 - #3 print
INFO  17:35:30,498 - #29 (
INFO  17:35:30,498 - #8 y
INFO  17:35:30,498 - #30 )
INFO  17:35:30,498 - #27 ;
INFO  17:35:30,498 - #8 e
INFO  17:35:30,498 - #24 =
INFO  17:35:30,498 - #9 3
INFO  17:35:30,498 - #27 ;
INFO  17:35:30,498 - #8 e
INFO  17:35:30,498 - #24 =
INFO  17:35:30,499 - #16 -
INFO  17:35:30,499 - #29 (
INFO  17:35:30,499 - #8 d
INFO  17:35:30,499 - #18 /
INFO  17:35:30,499 - #9 11
INFO  17:35:30,501 - #16 -
INFO  17:35:30,502 - #8 c
INFO  17:35:30,504 - #30 )
INFO  17:35:30,505 - #17 *
INFO  17:35:30,505 - #8 e
INFO  17:35:30,506 - #15 +
INFO  17:35:30,506 - #8 y
INFO  17:35:30,507 - #17 *
INFO  17:35:30,507 - #8 y
INFO  17:35:30,508 - #16 -
INFO  17:35:30,508 - #8 y
INFO  17:35:30,509 - #15 +
INFO  17:35:30,510 - #9 1
INFO  17:35:30,510 - #27 ;
INFO  17:35:30,510 - #8 e
INFO  17:35:30,510 - #25 ++
INFO  17:35:30,510 - #27 ;
INFO  17:35:30,510 - #3 print
INFO  17:35:30,510 - #29 (
INFO  17:35:30,511 - #8 e
INFO  17:35:30,511 - #30 )
INFO  17:35:30,511 - #27 ;
INFO  17:35:30,511 - #8 z
INFO  17:35:30,511 - #24 =
INFO  17:35:30,511 - #7 new
INFO  17:35:30,511 - #8 char
INFO  17:35:30,511 - #22 [
INFO  17:35:30,512 - #9 4
INFO  17:35:30,512 - #23 ]
INFO  17:35:30,512 - #27 ;
INFO  17:35:30,512 - #8 z
INFO  17:35:30,512 - #22 [
INFO  17:35:30,512 - #9 0
INFO  17:35:30,512 - #23 ]
INFO  17:35:30,513 - #24 =
INFO  17:35:30,513 - #8 chr
INFO  17:35:30,513 - #29 (
INFO  17:35:30,513 - #9 72
INFO  17:35:30,513 - #30 )
INFO  17:35:30,513 - #27 ;
INFO  17:35:30,514 - #8 z
INFO  17:35:30,514 - #22 [
INFO  17:35:30,514 - #9 1
INFO  17:35:30,514 - #23 ]
INFO  17:35:30,514 - #24 =
INFO  17:35:30,514 - #10 O
INFO  17:35:30,514 - #27 ;
INFO  17:35:30,514 - #8 z
INFO  17:35:30,514 - #22 [
INFO  17:35:30,514 - #8 g
INFO  17:35:30,515 - #23 ]
INFO  17:35:30,515 - #24 =
INFO  17:35:30,515 - #10 M
INFO  17:35:30,515 - #27 ;
INFO  17:35:30,515 - #8 z
INFO  17:35:30,515 - #22 [
INFO  17:35:30,515 - #8 x
INFO  17:35:30,515 - #15 +
INFO  17:35:30,515 - #9 4
INFO  17:35:30,515 - #23 ]
INFO  17:35:30,515 - #24 =
INFO  17:35:30,515 - #8 chr
INFO  17:35:30,516 - #29 (
INFO  17:35:30,516 - #8 ord
INFO  17:35:30,516 - #29 (
INFO  17:35:30,516 - #10 A
INFO  17:35:30,516 - #30 )
INFO  17:35:30,516 - #15 +
INFO  17:35:30,516 - #9 4
INFO  17:35:30,516 - #30 )
INFO  17:35:30,516 - #27 ;
INFO  17:35:30,516 - #3 print
INFO  17:35:30,516 - #29 (
INFO  17:35:30,516 - #8 z
INFO  17:35:30,516 - #22 [
INFO  17:35:30,516 - #9 0
INFO  17:35:30,516 - #23 ]
INFO  17:35:30,517 - #30 )
INFO  17:35:30,517 - #27 ;
INFO  17:35:30,517 - #3 print
INFO  17:35:30,517 - #29 (
INFO  17:35:30,517 - #8 z
INFO  17:35:30,517 - #22 [
INFO  17:35:30,517 - #9 1
INFO  17:35:30,517 - #23 ]
INFO  17:35:30,517 - #30 )
INFO  17:35:30,517 - #27 ;
INFO  17:35:30,517 - #3 print
INFO  17:35:30,517 - #29 (
INFO  17:35:30,517 - #8 z
INFO  17:35:30,517 - #22 [
INFO  17:35:30,517 - #9 2
INFO  17:35:30,517 - #23 ]
INFO  17:35:30,517 - #30 )
INFO  17:35:30,518 - #27 ;
INFO  17:35:30,518 - #3 print
INFO  17:35:30,518 - #29 (
INFO  17:35:30,518 - #8 z
INFO  17:35:30,518 - #22 [
INFO  17:35:30,518 - #9 3
INFO  17:35:30,518 - #23 ]
INFO  17:35:30,518 - #30 )
INFO  17:35:30,518 - #27 ;
INFO  17:35:30,518 - #3 print
INFO  17:35:30,518 - #29 (
INFO  17:35:30,518 - #8 len
INFO  17:35:30,518 - #29 (
INFO  17:35:30,518 - #8 z
INFO  17:35:30,518 - #30 )
INFO  17:35:30,519 - #30 )
INFO  17:35:30,519 - #27 ;
INFO  17:35:30,519 - #21 }
INFO  17:35:30,519 - #21 }
INFO  17:35:30,519 - =====================SINTAKSNO_STABLO=========================
INFO  17:35:30,523 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             int
            ) [Type]
            Var_multi(
              Var_single(
                Var_normal(
                 x
                ) [Var_normal]
              ) [Var_single]
              Var_normal(
               y
              ) [Var_normal]
            ) [Var_multi]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_multi(
                                      Statement_multi(
                                        Statement_multi(
                                          Statement_single(
                                            Stmt_design(
                                              Assignment(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                                Expr_single(
                                                  Term_single(
                                                    Factor_num_const(
                                                     1
                                                    ) [Factor_num_const]
                                                  ) [Term_single]
                                                ) [Expr_single]
                                              ) [Assignment]
                                            ) [Stmt_design]
                                          ) [Statement_single]
                                          Stmt_Read(
                                            Designator_1(
                                             y
                                            ) [Designator_1]
                                          ) [Stmt_Read]
                                        ) [Statement_multi]
                                        Stmt_print_1(
                                          Expr_single(
                                            Term_single(
                                              Factor_designator(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [Term_single]
                                          ) [Expr_single]
                                        ) [Stmt_print_1]
                                      ) [Statement_multi]
                                      Stmt_print_1(
                                        Expr_single(
                                          Term_single(
                                            Factor_designator(
                                              Designator_1(
                                               y
                                              ) [Designator_1]
                                            ) [Factor_designator]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Stmt_print_1]
                                    ) [Statement_multi]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_multi(
                                          More_term_multi(
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_multi(
                                                  Factor_designator(
                                                    Designator_1(
                                                     y
                                                    ) [Designator_1]
                                                  ) [Factor_designator]
                                                  More_factor_single(
                                                    More_factor_part(
                                                      Mul_op_mul(
                                                      ) [Mul_op_mul]
                                                      Factor_designator(
                                                        Designator_1(
                                                         y
                                                        ) [Designator_1]
                                                      ) [Factor_designator]
                                                    ) [More_factor_part]
                                                  ) [More_factor_single]
                                                ) [Term_multi]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                            More_term_part(
                                              Add_op_minus(
                                              ) [Add_op_minus]
                                              Term_single(
                                                Factor_designator(
                                                  Designator_1(
                                                   y
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                              ) [Term_single]
                                            ) [More_term_part]
                                          ) [More_term_multi]
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_multi]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   g
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_term_multi(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 x
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                            More_term_single(
                              More_term_part(
                                Add_op_plus(
                                ) [Add_op_plus]
                                Term_single(
                                  Factor_num_const(
                                   4
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [More_term_part]
                            ) [More_term_single]
                          ) [Expr_term_multi]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:35:30,524 - ==============================================================
INFO  17:35:30,538 - Pocetak obrade programa Program na liniji 1
INFO  17:35:30,539 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:35:30,539 - Deklarisana konstanta c na liniji 2
INFO  17:35:30,540 - Deklarisana konstanta d na liniji 2
INFO  17:35:30,540 - Deklarisana konstanta g na liniji 2
INFO  17:35:30,540 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:35:30,540 - Deklarisana promenljiva e na liniji 3
INFO  17:35:30,540 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  17:35:30,540 - Deklarisan niz z na liniji 3
INFO  17:35:30,541 - Pocetak obrade metode main na liniji 5
INFO  17:35:30,541 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  17:35:30,541 - Deklarisana promenljiva x na liniji 5
INFO  17:35:30,541 - Deklarisana promenljiva y na liniji 5
INFO  17:35:30,541 - Pronadjen tip char u tabeli simbola na liniji 15
INFO  17:35:30,542 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  17:35:30,542 - Pronadjen poziv metode (funkcije) ord na liniji 19
INFO  17:35:30,542 - Pronadjen poziv metode (funkcije) chr na liniji 19
INFO  17:35:30,542 - Pronadjen poziv metode (funkcije) len na liniji 24
INFO  17:35:30,542 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:35:30,542 - Zavrsetak obrade programa Program na liniji 1
INFO  17:35:30,542 - ======================TABELA_SIMBOLA==========================
INFO  17:35:30,542 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var x: int
	Local Var y: int

INFO  17:35:30,543 - ==============================================================
INFO  17:35:30,543 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  17:35:30,543 - ==============================================================
INFO  17:35:30,543 - ======================GENERISANJE_KODA========================
INFO  17:35:30,548 - Generisanje koda uspesno zavrseno!
INFO  17:35:30,549 - Generisanje izlaznog fajla test\program.obj
INFO  17:35:30,549 - ==============================================================
INFO  17:35:54,815 - Obrada ulaznog fajla test\program.mj
INFO  17:35:54,895 - #2 program
INFO  17:35:54,895 - #8 Program
INFO  17:35:54,895 - #5 const
INFO  17:35:54,896 - #8 int
INFO  17:35:54,896 - #8 c
INFO  17:35:54,897 - #24 =
INFO  17:35:54,897 - #9 10
INFO  17:35:54,897 - #28 ,
INFO  17:35:54,898 - #8 d
INFO  17:35:54,898 - #24 =
INFO  17:35:54,898 - #9 99
INFO  17:35:54,898 - #28 ,
INFO  17:35:54,898 - #8 g
INFO  17:35:54,898 - #24 =
INFO  17:35:54,899 - #9 2
INFO  17:35:54,899 - #27 ;
INFO  17:35:54,899 - #8 int
INFO  17:35:54,900 - #8 e
INFO  17:35:54,900 - #27 ;
INFO  17:35:54,900 - #8 char
INFO  17:35:54,901 - #8 z
INFO  17:35:54,901 - #22 [
INFO  17:35:54,901 - #23 ]
INFO  17:35:54,901 - #27 ;
INFO  17:35:54,902 - #20 {
INFO  17:35:54,902 - #6 void
INFO  17:35:54,902 - #8 main
INFO  17:35:54,902 - #29 (
INFO  17:35:54,903 - #30 )
INFO  17:35:54,903 - #8 int
INFO  17:35:54,903 - #8 x
INFO  17:35:54,903 - #28 ,
INFO  17:35:54,903 - #8 y
INFO  17:35:54,903 - #27 ;
INFO  17:35:54,904 - #20 {
INFO  17:35:54,904 - #8 x
INFO  17:35:54,904 - #24 =
INFO  17:35:54,904 - #9 1
INFO  17:35:54,904 - #27 ;
INFO  17:35:54,905 - #4 read
INFO  17:35:54,905 - #29 (
INFO  17:35:54,905 - #8 y
INFO  17:35:54,905 - #30 )
INFO  17:35:54,905 - #27 ;
INFO  17:35:54,905 - #3 print
INFO  17:35:54,906 - #29 (
INFO  17:35:54,906 - #8 x
INFO  17:35:54,906 - #15 +
INFO  17:35:54,906 - #9 4
INFO  17:35:54,907 - #30 )
INFO  17:35:54,909 - #27 ;
INFO  17:35:54,909 - #3 print
INFO  17:35:54,909 - #29 (
INFO  17:35:54,909 - #8 y
INFO  17:35:54,909 - #30 )
INFO  17:35:54,909 - #27 ;
INFO  17:35:54,910 - #8 e
INFO  17:35:54,910 - #24 =
INFO  17:35:54,910 - #9 3
INFO  17:35:54,910 - #27 ;
INFO  17:35:54,910 - #8 e
INFO  17:35:54,910 - #24 =
INFO  17:35:54,910 - #16 -
INFO  17:35:54,910 - #29 (
INFO  17:35:54,910 - #8 d
INFO  17:35:54,910 - #18 /
INFO  17:35:54,911 - #9 11
INFO  17:35:54,912 - #16 -
INFO  17:35:54,913 - #8 c
INFO  17:35:54,914 - #30 )
INFO  17:35:54,914 - #17 *
INFO  17:35:54,914 - #8 e
INFO  17:35:54,915 - #15 +
INFO  17:35:54,915 - #8 y
INFO  17:35:54,915 - #17 *
INFO  17:35:54,915 - #8 y
INFO  17:35:54,917 - #16 -
INFO  17:35:54,918 - #8 y
INFO  17:35:54,918 - #15 +
INFO  17:35:54,918 - #9 1
INFO  17:35:54,918 - #27 ;
INFO  17:35:54,918 - #8 e
INFO  17:35:54,918 - #25 ++
INFO  17:35:54,918 - #27 ;
INFO  17:35:54,919 - #3 print
INFO  17:35:54,919 - #29 (
INFO  17:35:54,919 - #8 e
INFO  17:35:54,919 - #30 )
INFO  17:35:54,919 - #27 ;
INFO  17:35:54,919 - #8 z
INFO  17:35:54,919 - #24 =
INFO  17:35:54,919 - #7 new
INFO  17:35:54,919 - #8 char
INFO  17:35:54,919 - #22 [
INFO  17:35:54,920 - #9 4
INFO  17:35:54,920 - #23 ]
INFO  17:35:54,920 - #27 ;
INFO  17:35:54,920 - #8 z
INFO  17:35:54,920 - #22 [
INFO  17:35:54,920 - #9 0
INFO  17:35:54,920 - #23 ]
INFO  17:35:54,921 - #24 =
INFO  17:35:54,921 - #8 chr
INFO  17:35:54,921 - #29 (
INFO  17:35:54,921 - #9 72
INFO  17:35:54,921 - #30 )
INFO  17:35:54,921 - #27 ;
INFO  17:35:54,921 - #8 z
INFO  17:35:54,921 - #22 [
INFO  17:35:54,922 - #9 1
INFO  17:35:54,922 - #23 ]
INFO  17:35:54,922 - #24 =
INFO  17:35:54,922 - #10 O
INFO  17:35:54,922 - #27 ;
INFO  17:35:54,922 - #8 z
INFO  17:35:54,922 - #22 [
INFO  17:35:54,922 - #8 g
INFO  17:35:54,922 - #23 ]
INFO  17:35:54,923 - #24 =
INFO  17:35:54,923 - #10 M
INFO  17:35:54,923 - #27 ;
INFO  17:35:54,923 - #8 z
INFO  17:35:54,923 - #22 [
INFO  17:35:54,923 - #8 x
INFO  17:35:54,923 - #15 +
INFO  17:35:54,923 - #9 4
INFO  17:35:54,923 - #23 ]
INFO  17:35:54,923 - #24 =
INFO  17:35:54,924 - #8 chr
INFO  17:35:54,924 - #29 (
INFO  17:35:54,924 - #8 ord
INFO  17:35:54,924 - #29 (
INFO  17:35:54,924 - #10 A
INFO  17:35:54,924 - #30 )
INFO  17:35:54,924 - #15 +
INFO  17:35:54,924 - #9 4
INFO  17:35:54,924 - #30 )
INFO  17:35:54,924 - #27 ;
INFO  17:35:54,924 - #3 print
INFO  17:35:54,924 - #29 (
INFO  17:35:54,924 - #8 z
INFO  17:35:54,925 - #22 [
INFO  17:35:54,925 - #9 0
INFO  17:35:54,925 - #23 ]
INFO  17:35:54,925 - #30 )
INFO  17:35:54,925 - #27 ;
INFO  17:35:54,925 - #3 print
INFO  17:35:54,925 - #29 (
INFO  17:35:54,925 - #8 z
INFO  17:35:54,925 - #22 [
INFO  17:35:54,925 - #9 1
INFO  17:35:54,926 - #23 ]
INFO  17:35:54,926 - #30 )
INFO  17:35:54,926 - #27 ;
INFO  17:35:54,926 - #3 print
INFO  17:35:54,926 - #29 (
INFO  17:35:54,926 - #8 z
INFO  17:35:54,926 - #22 [
INFO  17:35:54,926 - #9 2
INFO  17:35:54,926 - #23 ]
INFO  17:35:54,926 - #30 )
INFO  17:35:54,927 - #27 ;
INFO  17:35:54,927 - #3 print
INFO  17:35:54,927 - #29 (
INFO  17:35:54,927 - #8 z
INFO  17:35:54,927 - #22 [
INFO  17:35:54,927 - #9 3
INFO  17:35:54,927 - #23 ]
INFO  17:35:54,927 - #30 )
INFO  17:35:54,927 - #27 ;
INFO  17:35:54,927 - #3 print
INFO  17:35:54,928 - #29 (
INFO  17:35:54,928 - #8 len
INFO  17:35:54,928 - #29 (
INFO  17:35:54,928 - #8 z
INFO  17:35:54,928 - #30 )
INFO  17:35:54,928 - #30 )
INFO  17:35:54,928 - #27 ;
INFO  17:35:54,928 - #21 }
INFO  17:35:54,928 - #21 }
INFO  17:35:54,929 - =====================SINTAKSNO_STABLO=========================
INFO  17:35:54,933 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             int
            ) [Type]
            Var_multi(
              Var_single(
                Var_normal(
                 x
                ) [Var_normal]
              ) [Var_single]
              Var_normal(
               y
              ) [Var_normal]
            ) [Var_multi]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_multi(
                                      Statement_multi(
                                        Statement_multi(
                                          Statement_single(
                                            Stmt_design(
                                              Assignment(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                                Expr_single(
                                                  Term_single(
                                                    Factor_num_const(
                                                     1
                                                    ) [Factor_num_const]
                                                  ) [Term_single]
                                                ) [Expr_single]
                                              ) [Assignment]
                                            ) [Stmt_design]
                                          ) [Statement_single]
                                          Stmt_Read(
                                            Designator_1(
                                             y
                                            ) [Designator_1]
                                          ) [Stmt_Read]
                                        ) [Statement_multi]
                                        Stmt_print_1(
                                          Expr_term_multi(
                                            Term_single(
                                              Factor_designator(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [Term_single]
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_single(
                                                  Factor_num_const(
                                                   4
                                                  ) [Factor_num_const]
                                                ) [Term_single]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                          ) [Expr_term_multi]
                                        ) [Stmt_print_1]
                                      ) [Statement_multi]
                                      Stmt_print_1(
                                        Expr_single(
                                          Term_single(
                                            Factor_designator(
                                              Designator_1(
                                               y
                                              ) [Designator_1]
                                            ) [Factor_designator]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Stmt_print_1]
                                    ) [Statement_multi]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_multi(
                                          More_term_multi(
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_multi(
                                                  Factor_designator(
                                                    Designator_1(
                                                     y
                                                    ) [Designator_1]
                                                  ) [Factor_designator]
                                                  More_factor_single(
                                                    More_factor_part(
                                                      Mul_op_mul(
                                                      ) [Mul_op_mul]
                                                      Factor_designator(
                                                        Designator_1(
                                                         y
                                                        ) [Designator_1]
                                                      ) [Factor_designator]
                                                    ) [More_factor_part]
                                                  ) [More_factor_single]
                                                ) [Term_multi]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                            More_term_part(
                                              Add_op_minus(
                                              ) [Add_op_minus]
                                              Term_single(
                                                Factor_designator(
                                                  Designator_1(
                                                   y
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                              ) [Term_single]
                                            ) [More_term_part]
                                          ) [More_term_multi]
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_multi]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   g
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_term_multi(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 x
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                            More_term_single(
                              More_term_part(
                                Add_op_plus(
                                ) [Add_op_plus]
                                Term_single(
                                  Factor_num_const(
                                   4
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [More_term_part]
                            ) [More_term_single]
                          ) [Expr_term_multi]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             2
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           3
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:35:54,934 - ==============================================================
INFO  17:35:54,948 - Pocetak obrade programa Program na liniji 1
INFO  17:35:54,949 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:35:54,950 - Deklarisana konstanta c na liniji 2
INFO  17:35:54,950 - Deklarisana konstanta d na liniji 2
INFO  17:35:54,950 - Deklarisana konstanta g na liniji 2
INFO  17:35:54,950 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:35:54,950 - Deklarisana promenljiva e na liniji 3
INFO  17:35:54,950 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  17:35:54,950 - Deklarisan niz z na liniji 3
INFO  17:35:54,951 - Pocetak obrade metode main na liniji 5
INFO  17:35:54,951 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  17:35:54,951 - Deklarisana promenljiva x na liniji 5
INFO  17:35:54,951 - Deklarisana promenljiva y na liniji 5
INFO  17:35:54,952 - Pronadjen tip char u tabeli simbola na liniji 15
INFO  17:35:54,952 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  17:35:54,952 - Pronadjen poziv metode (funkcije) ord na liniji 19
INFO  17:35:54,952 - Pronadjen poziv metode (funkcije) chr na liniji 19
INFO  17:35:54,952 - Pronadjen poziv metode (funkcije) len na liniji 24
INFO  17:35:54,953 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:35:54,953 - Zavrsetak obrade programa Program na liniji 1
INFO  17:35:54,953 - ======================TABELA_SIMBOLA==========================
INFO  17:35:54,953 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var x: int
	Local Var y: int

INFO  17:35:54,953 - ==============================================================
INFO  17:35:54,954 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  17:35:54,954 - ==============================================================
INFO  17:35:54,954 - ======================GENERISANJE_KODA========================
INFO  17:35:54,959 - Generisanje koda uspesno zavrseno!
INFO  17:35:54,960 - Generisanje izlaznog fajla test\program.obj
INFO  17:35:54,960 - ==============================================================
INFO  17:51:58,702 - Obrada ulaznog fajla test\program.mj
INFO  17:51:58,784 - #2 program
INFO  17:51:58,784 - #8 Program
INFO  17:51:58,784 - #5 const
INFO  17:51:58,785 - #8 int
INFO  17:51:58,785 - #8 c
INFO  17:51:58,785 - #24 =
INFO  17:51:58,785 - #9 10
INFO  17:51:58,786 - #28 ,
INFO  17:51:58,786 - #8 d
INFO  17:51:58,787 - #24 =
INFO  17:51:58,787 - #9 99
INFO  17:51:58,787 - #28 ,
INFO  17:51:58,787 - #8 g
INFO  17:51:58,787 - #24 =
INFO  17:51:58,787 - #9 2
INFO  17:51:58,787 - #27 ;
INFO  17:51:58,787 - #8 int
INFO  17:51:58,788 - #8 e
INFO  17:51:58,788 - #27 ;
INFO  17:51:58,789 - #8 char
INFO  17:51:58,790 - #8 z
INFO  17:51:58,790 - #22 [
INFO  17:51:58,790 - #23 ]
INFO  17:51:58,790 - #27 ;
INFO  17:51:58,791 - #20 {
INFO  17:51:58,791 - #6 void
INFO  17:51:58,791 - #8 main
INFO  17:51:58,791 - #29 (
INFO  17:51:58,792 - #30 )
INFO  17:51:58,792 - #8 int
INFO  17:51:58,792 - #8 x
INFO  17:51:58,792 - #28 ,
INFO  17:51:58,792 - #8 y
INFO  17:51:58,792 - #27 ;
INFO  17:51:58,793 - #20 {
INFO  17:51:58,793 - #8 x
INFO  17:51:58,793 - #24 =
INFO  17:51:58,793 - #9 1
INFO  17:51:58,793 - #27 ;
INFO  17:51:58,794 - #4 read
INFO  17:51:58,795 - #29 (
INFO  17:51:58,795 - #8 y
INFO  17:51:58,795 - #30 )
INFO  17:51:58,795 - #27 ;
INFO  17:51:58,795 - #3 print
INFO  17:51:58,795 - #29 (
INFO  17:51:58,795 - #8 x
INFO  17:51:58,795 - #15 +
INFO  17:51:58,795 - #9 4
INFO  17:51:58,797 - #30 )
INFO  17:51:58,798 - #27 ;
INFO  17:51:58,798 - #3 print
INFO  17:51:58,798 - #29 (
INFO  17:51:58,798 - #8 y
INFO  17:51:58,798 - #30 )
INFO  17:51:58,798 - #27 ;
INFO  17:51:58,798 - #8 e
INFO  17:51:58,798 - #24 =
INFO  17:51:58,798 - #9 3
INFO  17:51:58,799 - #27 ;
INFO  17:51:58,799 - #8 e
INFO  17:51:58,799 - #24 =
INFO  17:51:58,799 - #16 -
INFO  17:51:58,799 - #29 (
INFO  17:51:58,799 - #8 d
INFO  17:51:58,799 - #18 /
INFO  17:51:58,799 - #9 11
INFO  17:51:58,801 - #16 -
INFO  17:51:58,802 - #8 c
INFO  17:51:58,803 - #30 )
INFO  17:51:58,803 - #17 *
INFO  17:51:58,803 - #8 e
INFO  17:51:58,804 - #15 +
INFO  17:51:58,804 - #8 y
INFO  17:51:58,804 - #17 *
INFO  17:51:58,804 - #8 y
INFO  17:51:58,806 - #16 -
INFO  17:51:58,806 - #8 y
INFO  17:51:58,807 - #15 +
INFO  17:51:58,807 - #9 1
INFO  17:51:58,807 - #27 ;
INFO  17:51:58,807 - #8 e
INFO  17:51:58,807 - #25 ++
INFO  17:51:58,807 - #27 ;
INFO  17:51:58,808 - #3 print
INFO  17:51:58,808 - #29 (
INFO  17:51:58,808 - #8 e
INFO  17:51:58,808 - #30 )
INFO  17:51:58,808 - #27 ;
INFO  17:51:58,808 - #8 z
INFO  17:51:58,808 - #24 =
INFO  17:51:58,809 - #7 new
INFO  17:51:58,809 - #8 char
INFO  17:51:58,809 - #22 [
INFO  17:51:58,809 - #9 4
INFO  17:51:58,809 - #23 ]
INFO  17:51:58,809 - #27 ;
INFO  17:51:58,810 - #8 z
INFO  17:51:58,810 - #22 [
INFO  17:51:58,810 - #9 0
INFO  17:51:58,810 - #23 ]
INFO  17:51:58,810 - #24 =
INFO  17:51:58,810 - #8 chr
INFO  17:51:58,810 - #29 (
INFO  17:51:58,810 - #9 72
INFO  17:51:58,810 - #30 )
INFO  17:51:58,810 - #27 ;
INFO  17:51:58,811 - #8 z
INFO  17:51:58,811 - #22 [
INFO  17:51:58,811 - #9 1
INFO  17:51:58,811 - #23 ]
INFO  17:51:58,811 - #24 =
INFO  17:51:58,811 - #10 O
INFO  17:51:58,811 - #27 ;
INFO  17:51:58,811 - #8 z
INFO  17:51:58,812 - #22 [
INFO  17:51:58,812 - #8 g
INFO  17:51:58,812 - #23 ]
INFO  17:51:58,812 - #24 =
INFO  17:51:58,812 - #10 M
INFO  17:51:58,812 - #27 ;
INFO  17:51:58,812 - #8 z
INFO  17:51:58,812 - #22 [
INFO  17:51:58,812 - #8 x
INFO  17:51:58,812 - #15 +
INFO  17:51:58,813 - #9 4
INFO  17:51:58,813 - #23 ]
INFO  17:51:58,813 - #24 =
INFO  17:51:58,813 - #8 chr
INFO  17:51:58,813 - #29 (
INFO  17:51:58,813 - #8 ord
INFO  17:51:58,813 - #29 (
INFO  17:51:58,813 - #10 A
INFO  17:51:58,813 - #30 )
INFO  17:51:58,813 - #15 +
INFO  17:51:58,813 - #9 4
INFO  17:51:58,814 - #30 )
INFO  17:51:58,814 - #27 ;
INFO  17:51:58,814 - #3 print
INFO  17:51:58,814 - #29 (
INFO  17:51:58,814 - #8 z
INFO  17:51:58,814 - #22 [
INFO  17:51:58,814 - #9 0
INFO  17:51:58,814 - #23 ]
INFO  17:51:58,814 - #30 )
INFO  17:51:58,814 - #27 ;
INFO  17:51:58,814 - #3 print
INFO  17:51:58,815 - #29 (
INFO  17:51:58,815 - #8 z
INFO  17:51:58,815 - #22 [
INFO  17:51:58,815 - #9 1
INFO  17:51:58,815 - #23 ]
INFO  17:51:58,815 - #30 )
INFO  17:51:58,815 - #27 ;
INFO  17:51:58,815 - #3 print
INFO  17:51:58,815 - #29 (
INFO  17:51:58,815 - #8 z
INFO  17:51:58,815 - #22 [
INFO  17:51:58,815 - #8 g
INFO  17:51:58,815 - #23 ]
INFO  17:51:58,815 - #30 )
INFO  17:51:58,815 - #27 ;
INFO  17:51:58,815 - #3 print
INFO  17:51:58,816 - #29 (
INFO  17:51:58,816 - #8 z
INFO  17:51:58,816 - #22 [
INFO  17:51:58,816 - #8 x
INFO  17:51:58,816 - #15 +
INFO  17:51:58,816 - #9 4
INFO  17:51:58,816 - #23 ]
INFO  17:51:58,816 - #30 )
INFO  17:51:58,816 - #27 ;
INFO  17:51:58,816 - #3 print
INFO  17:51:58,816 - #29 (
INFO  17:51:58,816 - #8 len
INFO  17:51:58,816 - #29 (
INFO  17:51:58,816 - #8 z
INFO  17:51:58,817 - #30 )
INFO  17:51:58,817 - #30 )
INFO  17:51:58,817 - #27 ;
INFO  17:51:58,817 - #21 }
INFO  17:51:58,817 - #21 }
INFO  17:51:58,818 - =====================SINTAKSNO_STABLO=========================
INFO  17:51:58,821 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             int
            ) [Type]
            Var_multi(
              Var_single(
                Var_normal(
                 x
                ) [Var_normal]
              ) [Var_single]
              Var_normal(
               y
              ) [Var_normal]
            ) [Var_multi]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_multi(
                                      Statement_multi(
                                        Statement_multi(
                                          Statement_single(
                                            Stmt_design(
                                              Assignment(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                                Expr_single(
                                                  Term_single(
                                                    Factor_num_const(
                                                     1
                                                    ) [Factor_num_const]
                                                  ) [Term_single]
                                                ) [Expr_single]
                                              ) [Assignment]
                                            ) [Stmt_design]
                                          ) [Statement_single]
                                          Stmt_Read(
                                            Designator_1(
                                             y
                                            ) [Designator_1]
                                          ) [Stmt_Read]
                                        ) [Statement_multi]
                                        Stmt_print_1(
                                          Expr_term_multi(
                                            Term_single(
                                              Factor_designator(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [Term_single]
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_single(
                                                  Factor_num_const(
                                                   4
                                                  ) [Factor_num_const]
                                                ) [Term_single]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                          ) [Expr_term_multi]
                                        ) [Stmt_print_1]
                                      ) [Statement_multi]
                                      Stmt_print_1(
                                        Expr_single(
                                          Term_single(
                                            Factor_designator(
                                              Designator_1(
                                               y
                                              ) [Designator_1]
                                            ) [Factor_designator]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Stmt_print_1]
                                    ) [Statement_multi]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_multi(
                                          More_term_multi(
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_multi(
                                                  Factor_designator(
                                                    Designator_1(
                                                     y
                                                    ) [Designator_1]
                                                  ) [Factor_designator]
                                                  More_factor_single(
                                                    More_factor_part(
                                                      Mul_op_mul(
                                                      ) [Mul_op_mul]
                                                      Factor_designator(
                                                        Designator_1(
                                                         y
                                                        ) [Designator_1]
                                                      ) [Factor_designator]
                                                    ) [More_factor_part]
                                                  ) [More_factor_single]
                                                ) [Term_multi]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                            More_term_part(
                                              Add_op_minus(
                                              ) [Add_op_minus]
                                              Term_single(
                                                Factor_designator(
                                                  Designator_1(
                                                   y
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                              ) [Term_single]
                                            ) [More_term_part]
                                          ) [More_term_multi]
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_multi]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   g
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_term_multi(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 x
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                            More_term_single(
                              More_term_part(
                                Add_op_plus(
                                ) [Add_op_plus]
                                Term_single(
                                  Factor_num_const(
                                   4
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [More_term_part]
                            ) [More_term_single]
                          ) [Expr_term_multi]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               g
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_term_multi(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             x
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                        More_term_single(
                          More_term_part(
                            Add_op_plus(
                            ) [Add_op_plus]
                            Term_single(
                              Factor_num_const(
                               4
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [More_term_part]
                        ) [More_term_single]
                      ) [Expr_term_multi]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:51:58,823 - ==============================================================
INFO  17:51:58,836 - Pocetak obrade programa Program na liniji 1
INFO  17:51:58,836 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:51:58,837 - Deklarisana konstanta c na liniji 2
INFO  17:51:58,837 - Deklarisana konstanta d na liniji 2
INFO  17:51:58,837 - Deklarisana konstanta g na liniji 2
INFO  17:51:58,837 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:51:58,837 - Deklarisana promenljiva e na liniji 3
INFO  17:51:58,837 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  17:51:58,837 - Deklarisan niz z na liniji 3
INFO  17:51:58,838 - Pocetak obrade metode main na liniji 5
INFO  17:51:58,838 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  17:51:58,838 - Deklarisana promenljiva x na liniji 5
INFO  17:51:58,838 - Deklarisana promenljiva y na liniji 5
INFO  17:51:58,839 - Pronadjen tip char u tabeli simbola na liniji 15
INFO  17:51:58,839 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  17:51:58,839 - Pronadjen poziv metode (funkcije) ord na liniji 19
INFO  17:51:58,839 - Pronadjen poziv metode (funkcije) chr na liniji 19
INFO  17:51:58,839 - Pronadjen poziv metode (funkcije) len na liniji 24
INFO  17:51:58,839 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:51:58,839 - Zavrsetak obrade programa Program na liniji 1
INFO  17:51:58,839 - ======================TABELA_SIMBOLA==========================
INFO  17:51:58,840 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var x: int
	Local Var y: int

INFO  17:51:58,840 - ==============================================================
INFO  17:51:58,840 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  17:51:58,840 - ==============================================================
INFO  17:51:58,840 - ======================GENERISANJE_KODA========================
INFO  17:51:58,846 - Generisanje koda uspesno zavrseno!
INFO  17:51:58,846 - Generisanje izlaznog fajla test\program.obj
INFO  17:51:58,846 - ==============================================================
INFO  17:53:45,394 - Obrada ulaznog fajla test\program.mj
INFO  17:53:45,468 - #2 program
INFO  17:53:45,468 - #8 Program
INFO  17:53:45,468 - #5 const
INFO  17:53:45,469 - #8 int
INFO  17:53:45,469 - #8 c
INFO  17:53:45,470 - #24 =
INFO  17:53:45,470 - #9 10
INFO  17:53:45,470 - #28 ,
INFO  17:53:45,471 - #8 d
INFO  17:53:45,471 - #24 =
INFO  17:53:45,471 - #9 99
INFO  17:53:45,471 - #28 ,
INFO  17:53:45,472 - #8 g
INFO  17:53:45,472 - #24 =
INFO  17:53:45,472 - #9 2
INFO  17:53:45,472 - #27 ;
INFO  17:53:45,472 - #8 int
INFO  17:53:45,473 - #8 e
INFO  17:53:45,473 - #27 ;
INFO  17:53:45,474 - #8 char
INFO  17:53:45,475 - #8 z
INFO  17:53:45,475 - #22 [
INFO  17:53:45,475 - #23 ]
INFO  17:53:45,475 - #27 ;
INFO  17:53:45,475 - #20 {
INFO  17:53:45,475 - #6 void
INFO  17:53:45,475 - #8 main
INFO  17:53:45,475 - #29 (
INFO  17:53:45,476 - #30 )
INFO  17:53:45,476 - #8 int
INFO  17:53:45,476 - #8 x
INFO  17:53:45,477 - #28 ,
INFO  17:53:45,477 - #8 y
INFO  17:53:45,477 - #27 ;
INFO  17:53:45,477 - #20 {
INFO  17:53:45,477 - #8 x
INFO  17:53:45,477 - #24 =
INFO  17:53:45,477 - #9 1
INFO  17:53:45,478 - #27 ;
INFO  17:53:45,478 - #4 read
INFO  17:53:45,478 - #29 (
INFO  17:53:45,478 - #8 y
INFO  17:53:45,479 - #30 )
INFO  17:53:45,479 - #27 ;
INFO  17:53:45,479 - #3 print
INFO  17:53:45,479 - #29 (
INFO  17:53:45,479 - #8 x
INFO  17:53:45,479 - #15 +
INFO  17:53:45,479 - #9 4
INFO  17:53:45,480 - #30 )
INFO  17:53:45,482 - #27 ;
INFO  17:53:45,482 - #3 print
INFO  17:53:45,482 - #29 (
INFO  17:53:45,482 - #8 y
INFO  17:53:45,482 - #30 )
INFO  17:53:45,482 - #27 ;
INFO  17:53:45,483 - #8 e
INFO  17:53:45,483 - #24 =
INFO  17:53:45,483 - #9 3
INFO  17:53:45,483 - #27 ;
INFO  17:53:45,483 - #8 e
INFO  17:53:45,483 - #24 =
INFO  17:53:45,483 - #16 -
INFO  17:53:45,483 - #29 (
INFO  17:53:45,483 - #8 d
INFO  17:53:45,484 - #18 /
INFO  17:53:45,484 - #9 11
INFO  17:53:45,485 - #16 -
INFO  17:53:45,486 - #8 c
INFO  17:53:45,487 - #30 )
INFO  17:53:45,487 - #17 *
INFO  17:53:45,488 - #8 e
INFO  17:53:45,488 - #15 +
INFO  17:53:45,488 - #8 y
INFO  17:53:45,488 - #17 *
INFO  17:53:45,489 - #8 y
INFO  17:53:45,490 - #16 -
INFO  17:53:45,491 - #8 y
INFO  17:53:45,491 - #15 +
INFO  17:53:45,491 - #9 1
INFO  17:53:45,491 - #27 ;
INFO  17:53:45,491 - #8 e
INFO  17:53:45,491 - #25 ++
INFO  17:53:45,491 - #27 ;
INFO  17:53:45,491 - #3 print
INFO  17:53:45,492 - #29 (
INFO  17:53:45,492 - #8 e
INFO  17:53:45,492 - #30 )
INFO  17:53:45,492 - #27 ;
INFO  17:53:45,492 - #8 z
INFO  17:53:45,492 - #24 =
INFO  17:53:45,492 - #7 new
INFO  17:53:45,492 - #8 char
INFO  17:53:45,492 - #22 [
INFO  17:53:45,492 - #9 4
INFO  17:53:45,492 - #23 ]
INFO  17:53:45,492 - #27 ;
INFO  17:53:45,493 - #8 z
INFO  17:53:45,493 - #22 [
INFO  17:53:45,493 - #9 0
INFO  17:53:45,493 - #23 ]
INFO  17:53:45,493 - #24 =
INFO  17:53:45,493 - #8 chr
INFO  17:53:45,493 - #29 (
INFO  17:53:45,493 - #9 72
INFO  17:53:45,493 - #30 )
INFO  17:53:45,493 - #27 ;
INFO  17:53:45,494 - #8 z
INFO  17:53:45,494 - #22 [
INFO  17:53:45,494 - #9 1
INFO  17:53:45,494 - #23 ]
INFO  17:53:45,494 - #24 =
INFO  17:53:45,494 - #10 O
INFO  17:53:45,494 - #27 ;
INFO  17:53:45,494 - #8 z
INFO  17:53:45,494 - #22 [
INFO  17:53:45,494 - #8 g
INFO  17:53:45,495 - #23 ]
INFO  17:53:45,495 - #24 =
INFO  17:53:45,495 - #10 M
INFO  17:53:45,495 - #27 ;
INFO  17:53:45,495 - #8 z
INFO  17:53:45,495 - #22 [
INFO  17:53:45,495 - #8 x
INFO  17:53:45,495 - #15 +
INFO  17:53:45,495 - #9 4
INFO  17:53:45,495 - #23 ]
INFO  17:53:45,496 - #24 =
INFO  17:53:45,496 - #8 chr
INFO  17:53:45,496 - #29 (
INFO  17:53:45,496 - #8 ord
INFO  17:53:45,496 - #29 (
INFO  17:53:45,496 - #10 A
INFO  17:53:45,496 - #30 )
INFO  17:53:45,496 - #15 +
INFO  17:53:45,496 - #9 4
INFO  17:53:45,496 - #30 )
INFO  17:53:45,496 - #27 ;
INFO  17:53:45,496 - #3 print
INFO  17:53:45,496 - #29 (
INFO  17:53:45,497 - #8 z
INFO  17:53:45,497 - #22 [
INFO  17:53:45,497 - #9 0
INFO  17:53:45,497 - #23 ]
INFO  17:53:45,497 - #30 )
INFO  17:53:45,497 - #27 ;
INFO  17:53:45,497 - #3 print
INFO  17:53:45,497 - #29 (
INFO  17:53:45,497 - #8 z
INFO  17:53:45,497 - #22 [
INFO  17:53:45,497 - #9 1
INFO  17:53:45,497 - #23 ]
INFO  17:53:45,497 - #30 )
INFO  17:53:45,497 - #27 ;
INFO  17:53:45,498 - #3 print
INFO  17:53:45,498 - #29 (
INFO  17:53:45,498 - #8 z
INFO  17:53:45,498 - #22 [
INFO  17:53:45,498 - #8 g
INFO  17:53:45,498 - #23 ]
INFO  17:53:45,498 - #30 )
INFO  17:53:45,498 - #27 ;
INFO  17:53:45,498 - #3 print
INFO  17:53:45,498 - #29 (
INFO  17:53:45,498 - #8 z
INFO  17:53:45,498 - #22 [
INFO  17:53:45,498 - #8 x
INFO  17:53:45,498 - #15 +
INFO  17:53:45,499 - #9 4
INFO  17:53:45,499 - #23 ]
INFO  17:53:45,499 - #30 )
INFO  17:53:45,499 - #27 ;
INFO  17:53:45,499 - #3 print
INFO  17:53:45,499 - #29 (
INFO  17:53:45,499 - #8 len
INFO  17:53:45,499 - #29 (
INFO  17:53:45,499 - #8 z
INFO  17:53:45,500 - #30 )
INFO  17:53:45,500 - #30 )
INFO  17:53:45,500 - #27 ;
INFO  17:53:45,500 - #21 }
INFO  17:53:45,500 - #21 }
INFO  17:53:45,501 - =====================SINTAKSNO_STABLO=========================
INFO  17:53:45,505 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             int
            ) [Type]
            Var_multi(
              Var_single(
                Var_normal(
                 x
                ) [Var_normal]
              ) [Var_single]
              Var_normal(
               y
              ) [Var_normal]
            ) [Var_multi]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_multi(
                                      Statement_multi(
                                        Statement_multi(
                                          Statement_single(
                                            Stmt_design(
                                              Assignment(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                                Expr_single(
                                                  Term_single(
                                                    Factor_num_const(
                                                     1
                                                    ) [Factor_num_const]
                                                  ) [Term_single]
                                                ) [Expr_single]
                                              ) [Assignment]
                                            ) [Stmt_design]
                                          ) [Statement_single]
                                          Stmt_Read(
                                            Designator_1(
                                             y
                                            ) [Designator_1]
                                          ) [Stmt_Read]
                                        ) [Statement_multi]
                                        Stmt_print_1(
                                          Expr_term_multi(
                                            Term_single(
                                              Factor_designator(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [Term_single]
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_single(
                                                  Factor_num_const(
                                                   4
                                                  ) [Factor_num_const]
                                                ) [Term_single]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                          ) [Expr_term_multi]
                                        ) [Stmt_print_1]
                                      ) [Statement_multi]
                                      Stmt_print_1(
                                        Expr_single(
                                          Term_single(
                                            Factor_designator(
                                              Designator_1(
                                               y
                                              ) [Designator_1]
                                            ) [Factor_designator]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Stmt_print_1]
                                    ) [Statement_multi]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_multi(
                                          More_term_multi(
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_multi(
                                                  Factor_designator(
                                                    Designator_1(
                                                     y
                                                    ) [Designator_1]
                                                  ) [Factor_designator]
                                                  More_factor_single(
                                                    More_factor_part(
                                                      Mul_op_mul(
                                                      ) [Mul_op_mul]
                                                      Factor_designator(
                                                        Designator_1(
                                                         y
                                                        ) [Designator_1]
                                                      ) [Factor_designator]
                                                    ) [More_factor_part]
                                                  ) [More_factor_single]
                                                ) [Term_multi]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                            More_term_part(
                                              Add_op_minus(
                                              ) [Add_op_minus]
                                              Term_single(
                                                Factor_designator(
                                                  Designator_1(
                                                   y
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                              ) [Term_single]
                                            ) [More_term_part]
                                          ) [More_term_multi]
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_multi]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   g
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_term_multi(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 x
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                            More_term_single(
                              More_term_part(
                                Add_op_plus(
                                ) [Add_op_plus]
                                Term_single(
                                  Factor_num_const(
                                   4
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [More_term_part]
                            ) [More_term_single]
                          ) [Expr_term_multi]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               g
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_term_multi(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             x
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                        More_term_single(
                          More_term_part(
                            Add_op_plus(
                            ) [Add_op_plus]
                            Term_single(
                              Factor_num_const(
                               4
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [More_term_part]
                        ) [More_term_single]
                      ) [Expr_term_multi]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:53:45,507 - ==============================================================
INFO  17:53:45,519 - Pocetak obrade programa Program na liniji 1
INFO  17:53:45,519 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:53:45,520 - Deklarisana konstanta c na liniji 2
INFO  17:53:45,520 - Deklarisana konstanta d na liniji 2
INFO  17:53:45,520 - Deklarisana konstanta g na liniji 2
INFO  17:53:45,520 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:53:45,520 - Deklarisana promenljiva e na liniji 3
INFO  17:53:45,521 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  17:53:45,521 - Deklarisan niz z na liniji 3
INFO  17:53:45,521 - Pocetak obrade metode main na liniji 5
INFO  17:53:45,521 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  17:53:45,521 - Deklarisana promenljiva x na liniji 5
INFO  17:53:45,522 - Deklarisana promenljiva y na liniji 5
INFO  17:53:45,522 - Pronadjen tip char u tabeli simbola na liniji 15
INFO  17:53:45,522 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  17:53:45,522 - Pronadjen poziv metode (funkcije) ord na liniji 19
INFO  17:53:45,522 - Pronadjen poziv metode (funkcije) chr na liniji 19
INFO  17:53:45,522 - Pronadjen poziv metode (funkcije) len na liniji 24
INFO  17:53:45,523 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:53:45,523 - Zavrsetak obrade programa Program na liniji 1
INFO  17:53:45,523 - ======================TABELA_SIMBOLA==========================
INFO  17:53:45,523 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var x: int
	Local Var y: int

INFO  17:53:45,523 - ==============================================================
INFO  17:53:45,523 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  17:53:45,523 - ==============================================================
INFO  17:53:45,523 - ======================GENERISANJE_KODA========================
INFO  17:53:45,529 - Generisanje koda uspesno zavrseno!
INFO  17:53:45,530 - Generisanje izlaznog fajla test\program.obj
INFO  17:53:45,530 - ==============================================================
INFO  17:55:32,549 - Obrada ulaznog fajla test\program.mj
INFO  17:55:32,625 - #2 program
INFO  17:55:32,626 - #8 Program
INFO  17:55:32,626 - #5 const
INFO  17:55:32,627 - #8 int
INFO  17:55:32,627 - #8 c
INFO  17:55:32,627 - #24 =
INFO  17:55:32,628 - #9 10
INFO  17:55:32,628 - #28 ,
INFO  17:55:32,629 - #8 d
INFO  17:55:32,629 - #24 =
INFO  17:55:32,629 - #9 99
INFO  17:55:32,629 - #28 ,
INFO  17:55:32,629 - #8 g
INFO  17:55:32,629 - #24 =
INFO  17:55:32,629 - #9 2
INFO  17:55:32,629 - #27 ;
INFO  17:55:32,629 - #8 int
INFO  17:55:32,631 - #8 e
INFO  17:55:32,631 - #27 ;
INFO  17:55:32,631 - #8 char
INFO  17:55:32,632 - #8 z
INFO  17:55:32,632 - #22 [
INFO  17:55:32,632 - #23 ]
INFO  17:55:32,632 - #27 ;
INFO  17:55:32,633 - #20 {
INFO  17:55:32,633 - #6 void
INFO  17:55:32,633 - #8 main
INFO  17:55:32,633 - #29 (
INFO  17:55:32,634 - #30 )
INFO  17:55:32,634 - #8 int
INFO  17:55:32,634 - #8 x
INFO  17:55:32,634 - #28 ,
INFO  17:55:32,635 - #8 y
INFO  17:55:32,635 - #27 ;
INFO  17:55:32,635 - #20 {
INFO  17:55:32,635 - #8 x
INFO  17:55:32,635 - #24 =
INFO  17:55:32,635 - #9 1
INFO  17:55:32,635 - #27 ;
INFO  17:55:32,636 - #4 read
INFO  17:55:32,636 - #29 (
INFO  17:55:32,636 - #8 y
INFO  17:55:32,636 - #30 )
INFO  17:55:32,637 - #27 ;
INFO  17:55:32,637 - #3 print
INFO  17:55:32,637 - #29 (
INFO  17:55:32,637 - #8 x
INFO  17:55:32,637 - #15 +
INFO  17:55:32,637 - #9 4
INFO  17:55:32,639 - #30 )
INFO  17:55:32,640 - #27 ;
INFO  17:55:32,641 - #3 print
INFO  17:55:32,641 - #29 (
INFO  17:55:32,641 - #8 y
INFO  17:55:32,641 - #30 )
INFO  17:55:32,641 - #27 ;
INFO  17:55:32,641 - #8 e
INFO  17:55:32,641 - #24 =
INFO  17:55:32,642 - #9 3
INFO  17:55:32,642 - #27 ;
INFO  17:55:32,642 - #8 e
INFO  17:55:32,642 - #24 =
INFO  17:55:32,642 - #16 -
INFO  17:55:32,642 - #29 (
INFO  17:55:32,642 - #8 d
INFO  17:55:32,642 - #18 /
INFO  17:55:32,642 - #9 11
INFO  17:55:32,644 - #16 -
INFO  17:55:32,645 - #8 c
INFO  17:55:32,646 - #30 )
INFO  17:55:32,646 - #17 *
INFO  17:55:32,646 - #8 e
INFO  17:55:32,647 - #15 +
INFO  17:55:32,647 - #8 y
INFO  17:55:32,647 - #17 *
INFO  17:55:32,647 - #8 y
INFO  17:55:32,649 - #16 -
INFO  17:55:32,649 - #8 y
INFO  17:55:32,649 - #15 +
INFO  17:55:32,649 - #9 1
INFO  17:55:32,650 - #27 ;
INFO  17:55:32,650 - #8 e
INFO  17:55:32,650 - #25 ++
INFO  17:55:32,650 - #27 ;
INFO  17:55:32,650 - #3 print
INFO  17:55:32,651 - #29 (
INFO  17:55:32,651 - #8 e
INFO  17:55:32,651 - #30 )
INFO  17:55:32,651 - #27 ;
INFO  17:55:32,651 - #8 z
INFO  17:55:32,651 - #24 =
INFO  17:55:32,651 - #7 new
INFO  17:55:32,651 - #8 char
INFO  17:55:32,651 - #22 [
INFO  17:55:32,652 - #9 4
INFO  17:55:32,652 - #23 ]
INFO  17:55:32,652 - #27 ;
INFO  17:55:32,652 - #8 z
INFO  17:55:32,652 - #22 [
INFO  17:55:32,652 - #9 0
INFO  17:55:32,652 - #23 ]
INFO  17:55:32,653 - #24 =
INFO  17:55:32,653 - #8 chr
INFO  17:55:32,653 - #29 (
INFO  17:55:32,653 - #9 72
INFO  17:55:32,653 - #30 )
INFO  17:55:32,653 - #27 ;
INFO  17:55:32,653 - #8 z
INFO  17:55:32,653 - #22 [
INFO  17:55:32,654 - #9 1
INFO  17:55:32,654 - #23 ]
INFO  17:55:32,654 - #24 =
INFO  17:55:32,654 - #10 O
INFO  17:55:32,654 - #27 ;
INFO  17:55:32,654 - #8 z
INFO  17:55:32,654 - #22 [
INFO  17:55:32,654 - #8 g
INFO  17:55:32,654 - #23 ]
INFO  17:55:32,654 - #24 =
INFO  17:55:32,655 - #10 M
INFO  17:55:32,655 - #27 ;
INFO  17:55:32,655 - #8 z
INFO  17:55:32,655 - #22 [
INFO  17:55:32,655 - #8 x
INFO  17:55:32,655 - #15 +
INFO  17:55:32,655 - #9 4
INFO  17:55:32,655 - #23 ]
INFO  17:55:32,656 - #24 =
INFO  17:55:32,656 - #8 chr
INFO  17:55:32,656 - #29 (
INFO  17:55:32,656 - #8 ord
INFO  17:55:32,656 - #29 (
INFO  17:55:32,656 - #10 A
INFO  17:55:32,656 - #30 )
INFO  17:55:32,656 - #15 +
INFO  17:55:32,656 - #9 4
INFO  17:55:32,657 - #30 )
INFO  17:55:32,657 - #27 ;
INFO  17:55:32,657 - #3 print
INFO  17:55:32,657 - #29 (
INFO  17:55:32,657 - #8 z
INFO  17:55:32,657 - #22 [
INFO  17:55:32,657 - #9 0
INFO  17:55:32,657 - #23 ]
INFO  17:55:32,657 - #30 )
INFO  17:55:32,657 - #27 ;
INFO  17:55:32,657 - #3 print
INFO  17:55:32,657 - #29 (
INFO  17:55:32,658 - #8 z
INFO  17:55:32,658 - #22 [
INFO  17:55:32,658 - #9 1
INFO  17:55:32,658 - #23 ]
INFO  17:55:32,658 - #30 )
INFO  17:55:32,658 - #27 ;
INFO  17:55:32,658 - #3 print
INFO  17:55:32,658 - #29 (
INFO  17:55:32,658 - #8 z
INFO  17:55:32,658 - #22 [
INFO  17:55:32,658 - #8 g
INFO  17:55:32,658 - #23 ]
INFO  17:55:32,659 - #30 )
INFO  17:55:32,659 - #27 ;
INFO  17:55:32,659 - #3 print
INFO  17:55:32,659 - #29 (
INFO  17:55:32,659 - #8 z
INFO  17:55:32,659 - #22 [
INFO  17:55:32,659 - #8 x
INFO  17:55:32,659 - #15 +
INFO  17:55:32,659 - #9 4
INFO  17:55:32,659 - #23 ]
INFO  17:55:32,659 - #30 )
INFO  17:55:32,660 - #27 ;
INFO  17:55:32,660 - #3 print
INFO  17:55:32,660 - #29 (
INFO  17:55:32,660 - #8 len
INFO  17:55:32,660 - #29 (
INFO  17:55:32,660 - #8 z
INFO  17:55:32,660 - #30 )
INFO  17:55:32,660 - #30 )
INFO  17:55:32,660 - #27 ;
INFO  17:55:32,660 - #21 }
INFO  17:55:32,660 - #21 }
INFO  17:55:32,661 - =====================SINTAKSNO_STABLO=========================
INFO  17:55:32,665 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             int
            ) [Type]
            Var_multi(
              Var_single(
                Var_normal(
                 x
                ) [Var_normal]
              ) [Var_single]
              Var_normal(
               y
              ) [Var_normal]
            ) [Var_multi]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_multi(
                                      Statement_multi(
                                        Statement_multi(
                                          Statement_single(
                                            Stmt_design(
                                              Assignment(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                                Expr_single(
                                                  Term_single(
                                                    Factor_num_const(
                                                     1
                                                    ) [Factor_num_const]
                                                  ) [Term_single]
                                                ) [Expr_single]
                                              ) [Assignment]
                                            ) [Stmt_design]
                                          ) [Statement_single]
                                          Stmt_Read(
                                            Designator_1(
                                             y
                                            ) [Designator_1]
                                          ) [Stmt_Read]
                                        ) [Statement_multi]
                                        Stmt_print_1(
                                          Expr_term_multi(
                                            Term_single(
                                              Factor_designator(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [Term_single]
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_single(
                                                  Factor_num_const(
                                                   4
                                                  ) [Factor_num_const]
                                                ) [Term_single]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                          ) [Expr_term_multi]
                                        ) [Stmt_print_1]
                                      ) [Statement_multi]
                                      Stmt_print_1(
                                        Expr_single(
                                          Term_single(
                                            Factor_designator(
                                              Designator_1(
                                               y
                                              ) [Designator_1]
                                            ) [Factor_designator]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Stmt_print_1]
                                    ) [Statement_multi]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_multi(
                                          More_term_multi(
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_multi(
                                                  Factor_designator(
                                                    Designator_1(
                                                     y
                                                    ) [Designator_1]
                                                  ) [Factor_designator]
                                                  More_factor_single(
                                                    More_factor_part(
                                                      Mul_op_mul(
                                                      ) [Mul_op_mul]
                                                      Factor_designator(
                                                        Designator_1(
                                                         y
                                                        ) [Designator_1]
                                                      ) [Factor_designator]
                                                    ) [More_factor_part]
                                                  ) [More_factor_single]
                                                ) [Term_multi]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                            More_term_part(
                                              Add_op_minus(
                                              ) [Add_op_minus]
                                              Term_single(
                                                Factor_designator(
                                                  Designator_1(
                                                   y
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                              ) [Term_single]
                                            ) [More_term_part]
                                          ) [More_term_multi]
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_multi]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   g
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_term_multi(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 x
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                            More_term_single(
                              More_term_part(
                                Add_op_plus(
                                ) [Add_op_plus]
                                Term_single(
                                  Factor_num_const(
                                   4
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [More_term_part]
                            ) [More_term_single]
                          ) [Expr_term_multi]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               g
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_term_multi(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             x
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                        More_term_single(
                          More_term_part(
                            Add_op_plus(
                            ) [Add_op_plus]
                            Term_single(
                              Factor_num_const(
                               4
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [More_term_part]
                        ) [More_term_single]
                      ) [Expr_term_multi]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:55:32,667 - ==============================================================
INFO  17:55:32,680 - Pocetak obrade programa Program na liniji 1
INFO  17:55:32,681 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:55:32,682 - Deklarisana konstanta c na liniji 2
INFO  17:55:32,682 - Deklarisana konstanta d na liniji 2
INFO  17:55:32,682 - Deklarisana konstanta g na liniji 2
INFO  17:55:32,682 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:55:32,682 - Deklarisana promenljiva e na liniji 3
INFO  17:55:32,682 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  17:55:32,682 - Deklarisan niz z na liniji 3
INFO  17:55:32,683 - Pocetak obrade metode main na liniji 5
INFO  17:55:32,684 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  17:55:32,684 - Deklarisana promenljiva x na liniji 5
INFO  17:55:32,684 - Deklarisana promenljiva y na liniji 5
INFO  17:55:32,684 - Pronadjen tip char u tabeli simbola na liniji 15
INFO  17:55:32,685 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  17:55:32,685 - Pronadjen poziv metode (funkcije) ord na liniji 19
INFO  17:55:32,685 - Pronadjen poziv metode (funkcije) chr na liniji 19
INFO  17:55:32,685 - Pronadjen poziv metode (funkcije) len na liniji 24
INFO  17:55:32,685 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:55:32,685 - Zavrsetak obrade programa Program na liniji 1
INFO  17:55:32,685 - ======================TABELA_SIMBOLA==========================
INFO  17:55:32,686 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var x: int
	Local Var y: int

INFO  17:55:32,686 - ==============================================================
INFO  17:55:32,686 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  17:55:32,686 - ==============================================================
INFO  17:55:32,686 - ======================GENERISANJE_KODA========================
INFO  17:55:32,693 - Generisanje koda uspesno zavrseno!
INFO  17:55:32,694 - Generisanje izlaznog fajla test\program.obj
INFO  17:55:32,694 - ==============================================================
INFO  17:55:46,910 - Obrada ulaznog fajla test\program.mj
INFO  17:55:46,990 - #2 program
INFO  17:55:46,990 - #8 Program
INFO  17:55:46,990 - #5 const
INFO  17:55:46,991 - #8 int
INFO  17:55:46,991 - #8 c
INFO  17:55:46,992 - #24 =
INFO  17:55:46,993 - #9 10
INFO  17:55:46,993 - #28 ,
INFO  17:55:46,994 - #8 d
INFO  17:55:46,994 - #24 =
INFO  17:55:46,994 - #9 99
INFO  17:55:46,994 - #28 ,
INFO  17:55:46,995 - #8 g
INFO  17:55:46,995 - #24 =
INFO  17:55:46,995 - #9 2
INFO  17:55:46,995 - #27 ;
INFO  17:55:46,995 - #8 int
INFO  17:55:46,996 - #8 e
INFO  17:55:46,996 - #27 ;
INFO  17:55:46,997 - #8 char
INFO  17:55:46,998 - #8 z
INFO  17:55:46,998 - #22 [
INFO  17:55:46,998 - #23 ]
INFO  17:55:46,998 - #27 ;
INFO  17:55:46,998 - #20 {
INFO  17:55:46,998 - #6 void
INFO  17:55:46,998 - #8 main
INFO  17:55:46,999 - #29 (
INFO  17:55:46,999 - #30 )
INFO  17:55:46,999 - #8 int
INFO  17:55:46,999 - #8 x
INFO  17:55:47,000 - #28 ,
INFO  17:55:47,000 - #8 y
INFO  17:55:47,000 - #27 ;
INFO  17:55:47,000 - #20 {
INFO  17:55:47,000 - #8 x
INFO  17:55:47,000 - #24 =
INFO  17:55:47,000 - #9 1
INFO  17:55:47,000 - #27 ;
INFO  17:55:47,001 - #4 read
INFO  17:55:47,001 - #29 (
INFO  17:55:47,001 - #8 y
INFO  17:55:47,001 - #30 )
INFO  17:55:47,002 - #27 ;
INFO  17:55:47,002 - #3 print
INFO  17:55:47,002 - #29 (
INFO  17:55:47,002 - #8 x
INFO  17:55:47,002 - #15 +
INFO  17:55:47,002 - #9 4
INFO  17:55:47,004 - #30 )
INFO  17:55:47,005 - #27 ;
INFO  17:55:47,005 - #3 print
INFO  17:55:47,005 - #29 (
INFO  17:55:47,005 - #8 y
INFO  17:55:47,005 - #30 )
INFO  17:55:47,006 - #27 ;
INFO  17:55:47,006 - #8 e
INFO  17:55:47,006 - #24 =
INFO  17:55:47,006 - #9 3
INFO  17:55:47,006 - #27 ;
INFO  17:55:47,006 - #8 e
INFO  17:55:47,006 - #24 =
INFO  17:55:47,006 - #16 -
INFO  17:55:47,007 - #29 (
INFO  17:55:47,007 - #8 d
INFO  17:55:47,007 - #18 /
INFO  17:55:47,007 - #9 11
INFO  17:55:47,009 - #16 -
INFO  17:55:47,010 - #8 c
INFO  17:55:47,011 - #30 )
INFO  17:55:47,011 - #17 *
INFO  17:55:47,011 - #8 e
INFO  17:55:47,012 - #15 +
INFO  17:55:47,012 - #8 y
INFO  17:55:47,012 - #17 *
INFO  17:55:47,012 - #8 y
INFO  17:55:47,014 - #16 -
INFO  17:55:47,014 - #8 y
INFO  17:55:47,014 - #15 +
INFO  17:55:47,014 - #9 1
INFO  17:55:47,015 - #27 ;
INFO  17:55:47,015 - #8 e
INFO  17:55:47,015 - #25 ++
INFO  17:55:47,015 - #27 ;
INFO  17:55:47,015 - #3 print
INFO  17:55:47,015 - #29 (
INFO  17:55:47,016 - #8 e
INFO  17:55:47,016 - #30 )
INFO  17:55:47,016 - #27 ;
INFO  17:55:47,016 - #8 z
INFO  17:55:47,016 - #24 =
INFO  17:55:47,016 - #7 new
INFO  17:55:47,016 - #8 char
INFO  17:55:47,016 - #22 [
INFO  17:55:47,016 - #9 4
INFO  17:55:47,016 - #23 ]
INFO  17:55:47,017 - #27 ;
INFO  17:55:47,017 - #8 z
INFO  17:55:47,017 - #22 [
INFO  17:55:47,017 - #9 0
INFO  17:55:47,017 - #23 ]
INFO  17:55:47,017 - #24 =
INFO  17:55:47,017 - #8 chr
INFO  17:55:47,017 - #29 (
INFO  17:55:47,017 - #9 72
INFO  17:55:47,018 - #30 )
INFO  17:55:47,018 - #27 ;
INFO  17:55:47,018 - #8 z
INFO  17:55:47,018 - #22 [
INFO  17:55:47,018 - #9 1
INFO  17:55:47,018 - #23 ]
INFO  17:55:47,018 - #24 =
INFO  17:55:47,018 - #10 O
INFO  17:55:47,018 - #27 ;
INFO  17:55:47,019 - #8 z
INFO  17:55:47,019 - #22 [
INFO  17:55:47,019 - #8 g
INFO  17:55:47,019 - #23 ]
INFO  17:55:47,019 - #24 =
INFO  17:55:47,019 - #10 M
INFO  17:55:47,019 - #27 ;
INFO  17:55:47,019 - #8 z
INFO  17:55:47,019 - #22 [
INFO  17:55:47,019 - #8 x
INFO  17:55:47,019 - #15 +
INFO  17:55:47,019 - #9 4
INFO  17:55:47,019 - #23 ]
INFO  17:55:47,020 - #24 =
INFO  17:55:47,020 - #8 chr
INFO  17:55:47,020 - #29 (
INFO  17:55:47,020 - #8 ord
INFO  17:55:47,020 - #29 (
INFO  17:55:47,020 - #10 A
INFO  17:55:47,020 - #30 )
INFO  17:55:47,020 - #15 +
INFO  17:55:47,020 - #9 4
INFO  17:55:47,020 - #30 )
INFO  17:55:47,020 - #27 ;
INFO  17:55:47,021 - #3 print
INFO  17:55:47,021 - #29 (
INFO  17:55:47,021 - #8 z
INFO  17:55:47,021 - #22 [
INFO  17:55:47,021 - #9 0
INFO  17:55:47,021 - #23 ]
INFO  17:55:47,021 - #30 )
INFO  17:55:47,021 - #27 ;
INFO  17:55:47,021 - #3 print
INFO  17:55:47,021 - #29 (
INFO  17:55:47,021 - #8 z
INFO  17:55:47,021 - #22 [
INFO  17:55:47,021 - #9 1
INFO  17:55:47,021 - #23 ]
INFO  17:55:47,021 - #30 )
INFO  17:55:47,022 - #27 ;
INFO  17:55:47,022 - #3 print
INFO  17:55:47,022 - #29 (
INFO  17:55:47,022 - #8 z
INFO  17:55:47,022 - #22 [
INFO  17:55:47,022 - #8 g
INFO  17:55:47,022 - #23 ]
INFO  17:55:47,022 - #30 )
INFO  17:55:47,022 - #27 ;
INFO  17:55:47,022 - #3 print
INFO  17:55:47,022 - #29 (
INFO  17:55:47,022 - #8 z
INFO  17:55:47,022 - #22 [
INFO  17:55:47,022 - #8 x
INFO  17:55:47,022 - #15 +
INFO  17:55:47,023 - #9 4
INFO  17:55:47,023 - #23 ]
INFO  17:55:47,023 - #30 )
INFO  17:55:47,023 - #27 ;
INFO  17:55:47,023 - #3 print
INFO  17:55:47,023 - #29 (
INFO  17:55:47,023 - #8 len
INFO  17:55:47,023 - #29 (
INFO  17:55:47,023 - #8 z
INFO  17:55:47,024 - #30 )
INFO  17:55:47,024 - #30 )
INFO  17:55:47,024 - #27 ;
INFO  17:55:47,024 - #21 }
INFO  17:55:47,024 - #21 }
INFO  17:55:47,025 - =====================SINTAKSNO_STABLO=========================
INFO  17:55:47,028 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             int
            ) [Type]
            Var_multi(
              Var_single(
                Var_normal(
                 x
                ) [Var_normal]
              ) [Var_single]
              Var_normal(
               y
              ) [Var_normal]
            ) [Var_multi]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_multi(
                                      Statement_multi(
                                        Statement_multi(
                                          Statement_single(
                                            Stmt_design(
                                              Assignment(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                                Expr_single(
                                                  Term_single(
                                                    Factor_num_const(
                                                     1
                                                    ) [Factor_num_const]
                                                  ) [Term_single]
                                                ) [Expr_single]
                                              ) [Assignment]
                                            ) [Stmt_design]
                                          ) [Statement_single]
                                          Stmt_Read(
                                            Designator_1(
                                             y
                                            ) [Designator_1]
                                          ) [Stmt_Read]
                                        ) [Statement_multi]
                                        Stmt_print_1(
                                          Expr_term_multi(
                                            Term_single(
                                              Factor_designator(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [Term_single]
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_single(
                                                  Factor_num_const(
                                                   4
                                                  ) [Factor_num_const]
                                                ) [Term_single]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                          ) [Expr_term_multi]
                                        ) [Stmt_print_1]
                                      ) [Statement_multi]
                                      Stmt_print_1(
                                        Expr_single(
                                          Term_single(
                                            Factor_designator(
                                              Designator_1(
                                               y
                                              ) [Designator_1]
                                            ) [Factor_designator]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Stmt_print_1]
                                    ) [Statement_multi]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_multi(
                                          More_term_multi(
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_multi(
                                                  Factor_designator(
                                                    Designator_1(
                                                     y
                                                    ) [Designator_1]
                                                  ) [Factor_designator]
                                                  More_factor_single(
                                                    More_factor_part(
                                                      Mul_op_mul(
                                                      ) [Mul_op_mul]
                                                      Factor_designator(
                                                        Designator_1(
                                                         y
                                                        ) [Designator_1]
                                                      ) [Factor_designator]
                                                    ) [More_factor_part]
                                                  ) [More_factor_single]
                                                ) [Term_multi]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                            More_term_part(
                                              Add_op_minus(
                                              ) [Add_op_minus]
                                              Term_single(
                                                Factor_designator(
                                                  Designator_1(
                                                   y
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                              ) [Term_single]
                                            ) [More_term_part]
                                          ) [More_term_multi]
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_multi]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   g
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_term_multi(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 x
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                            More_term_single(
                              More_term_part(
                                Add_op_plus(
                                ) [Add_op_plus]
                                Term_single(
                                  Factor_num_const(
                                   4
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [More_term_part]
                            ) [More_term_single]
                          ) [Expr_term_multi]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               g
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_term_multi(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             x
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                        More_term_single(
                          More_term_part(
                            Add_op_plus(
                            ) [Add_op_plus]
                            Term_single(
                              Factor_num_const(
                               4
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [More_term_part]
                        ) [More_term_single]
                      ) [Expr_term_multi]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  17:55:47,030 - ==============================================================
INFO  17:55:47,040 - Pocetak obrade programa Program na liniji 1
INFO  17:55:47,041 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  17:55:47,041 - Deklarisana konstanta c na liniji 2
INFO  17:55:47,041 - Deklarisana konstanta d na liniji 2
INFO  17:55:47,041 - Deklarisana konstanta g na liniji 2
INFO  17:55:47,042 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  17:55:47,042 - Deklarisana promenljiva e na liniji 3
INFO  17:55:47,042 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  17:55:47,042 - Deklarisan niz z na liniji 3
INFO  17:55:47,042 - Pocetak obrade metode main na liniji 5
INFO  17:55:47,043 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  17:55:47,043 - Deklarisana promenljiva x na liniji 5
INFO  17:55:47,043 - Deklarisana promenljiva y na liniji 5
INFO  17:55:47,043 - Pronadjen tip char u tabeli simbola na liniji 15
INFO  17:55:47,043 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  17:55:47,043 - Pronadjen poziv metode (funkcije) ord na liniji 19
INFO  17:55:47,044 - Pronadjen poziv metode (funkcije) chr na liniji 19
INFO  17:55:47,044 - Pronadjen poziv metode (funkcije) len na liniji 24
INFO  17:55:47,044 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  17:55:47,044 - Zavrsetak obrade programa Program na liniji 1
INFO  17:55:47,044 - ======================TABELA_SIMBOLA==========================
INFO  17:55:47,044 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var x: int
	Local Var y: int

INFO  17:55:47,044 - ==============================================================
INFO  17:55:47,045 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  17:55:47,045 - ==============================================================
INFO  17:55:47,045 - ======================GENERISANJE_KODA========================
INFO  17:55:47,050 - Generisanje koda uspesno zavrseno!
INFO  17:55:47,050 - Generisanje izlaznog fajla test\program.obj
INFO  17:55:47,051 - ==============================================================
INFO  18:01:00,329 - Obrada ulaznog fajla test\program.mj
INFO  18:01:00,424 - #2 program
INFO  18:01:00,425 - #8 Program
INFO  18:01:00,425 - #5 const
INFO  18:01:00,426 - #8 int
INFO  18:01:00,426 - #8 c
INFO  18:01:00,427 - #24 =
INFO  18:01:00,427 - #9 10
INFO  18:01:00,427 - #28 ,
INFO  18:01:00,430 - #8 d
INFO  18:01:00,431 - #24 =
INFO  18:01:00,431 - #9 99
INFO  18:01:00,431 - #28 ,
INFO  18:01:00,431 - #8 g
INFO  18:01:00,432 - #24 =
INFO  18:01:00,432 - #9 2
INFO  18:01:00,432 - #27 ;
INFO  18:01:00,432 - #8 int
INFO  18:01:00,434 - #8 e
INFO  18:01:00,434 - #27 ;
INFO  18:01:00,434 - #8 char
INFO  18:01:00,436 - #8 z
INFO  18:01:00,436 - #22 [
INFO  18:01:00,436 - #23 ]
INFO  18:01:00,436 - #27 ;
INFO  18:01:00,436 - #20 {
INFO  18:01:00,436 - #6 void
INFO  18:01:00,437 - #8 main
INFO  18:01:00,437 - #29 (
INFO  18:01:00,438 - #30 )
INFO  18:01:00,438 - #8 int
INFO  18:01:00,438 - #8 x
INFO  18:01:00,438 - #28 ,
INFO  18:01:00,438 - #8 y
INFO  18:01:00,438 - #27 ;
INFO  18:01:00,438 - #20 {
INFO  18:01:00,439 - #8 x
INFO  18:01:00,439 - #24 =
INFO  18:01:00,439 - #9 1
INFO  18:01:00,439 - #27 ;
INFO  18:01:00,439 - #4 read
INFO  18:01:00,440 - #29 (
INFO  18:01:00,440 - #8 y
INFO  18:01:00,440 - #30 )
INFO  18:01:00,440 - #27 ;
INFO  18:01:00,440 - #3 print
INFO  18:01:00,440 - #29 (
INFO  18:01:00,441 - #8 x
INFO  18:01:00,441 - #15 +
INFO  18:01:00,441 - #9 4
INFO  18:01:00,442 - #30 )
INFO  18:01:00,444 - #27 ;
INFO  18:01:00,444 - #3 print
INFO  18:01:00,444 - #29 (
INFO  18:01:00,445 - #8 y
INFO  18:01:00,445 - #30 )
INFO  18:01:00,445 - #27 ;
INFO  18:01:00,445 - #8 e
INFO  18:01:00,445 - #24 =
INFO  18:01:00,445 - #9 3
INFO  18:01:00,445 - #27 ;
INFO  18:01:00,445 - #8 e
INFO  18:01:00,446 - #24 =
INFO  18:01:00,446 - #16 -
INFO  18:01:00,446 - #29 (
INFO  18:01:00,446 - #8 d
INFO  18:01:00,446 - #18 /
INFO  18:01:00,446 - #9 11
INFO  18:01:00,448 - #16 -
INFO  18:01:00,449 - #8 c
INFO  18:01:00,450 - #30 )
INFO  18:01:00,450 - #17 *
INFO  18:01:00,450 - #8 e
INFO  18:01:00,451 - #15 +
INFO  18:01:00,451 - #8 y
INFO  18:01:00,451 - #17 *
INFO  18:01:00,452 - #8 y
INFO  18:01:00,453 - #16 -
INFO  18:01:00,453 - #8 y
INFO  18:01:00,453 - #15 +
INFO  18:01:00,454 - #9 1
INFO  18:01:00,454 - #27 ;
INFO  18:01:00,454 - #8 e
INFO  18:01:00,454 - #25 ++
INFO  18:01:00,454 - #27 ;
INFO  18:01:00,455 - #3 print
INFO  18:01:00,455 - #29 (
INFO  18:01:00,455 - #8 e
INFO  18:01:00,455 - #30 )
INFO  18:01:00,455 - #27 ;
INFO  18:01:00,455 - #8 z
INFO  18:01:00,455 - #24 =
INFO  18:01:00,455 - #7 new
INFO  18:01:00,455 - #8 char
INFO  18:01:00,455 - #22 [
INFO  18:01:00,456 - #9 4
INFO  18:01:00,456 - #23 ]
INFO  18:01:00,456 - #27 ;
INFO  18:01:00,456 - #8 z
INFO  18:01:00,456 - #22 [
INFO  18:01:00,456 - #9 0
INFO  18:01:00,456 - #23 ]
INFO  18:01:00,456 - #24 =
INFO  18:01:00,457 - #8 chr
INFO  18:01:00,457 - #29 (
INFO  18:01:00,457 - #9 72
INFO  18:01:00,457 - #30 )
INFO  18:01:00,457 - #27 ;
INFO  18:01:00,457 - #8 z
INFO  18:01:00,457 - #22 [
INFO  18:01:00,457 - #9 1
INFO  18:01:00,457 - #23 ]
INFO  18:01:00,457 - #24 =
INFO  18:01:00,458 - #10 O
INFO  18:01:00,458 - #27 ;
INFO  18:01:00,458 - #8 z
INFO  18:01:00,458 - #22 [
INFO  18:01:00,458 - #8 g
INFO  18:01:00,458 - #23 ]
INFO  18:01:00,458 - #24 =
INFO  18:01:00,458 - #10 M
INFO  18:01:00,458 - #27 ;
INFO  18:01:00,458 - #8 z
INFO  18:01:00,458 - #22 [
INFO  18:01:00,458 - #8 x
INFO  18:01:00,459 - #15 +
INFO  18:01:00,459 - #9 4
INFO  18:01:00,459 - #23 ]
INFO  18:01:00,459 - #24 =
INFO  18:01:00,459 - #8 chr
INFO  18:01:00,459 - #29 (
INFO  18:01:00,459 - #8 ord
INFO  18:01:00,459 - #29 (
INFO  18:01:00,460 - #10 A
INFO  18:01:00,460 - #30 )
INFO  18:01:00,460 - #15 +
INFO  18:01:00,460 - #9 4
INFO  18:01:00,460 - #30 )
INFO  18:01:00,460 - #27 ;
INFO  18:01:00,460 - #3 print
INFO  18:01:00,460 - #29 (
INFO  18:01:00,460 - #8 z
INFO  18:01:00,460 - #22 [
INFO  18:01:00,461 - #9 0
INFO  18:01:00,461 - #23 ]
INFO  18:01:00,461 - #30 )
INFO  18:01:00,461 - #27 ;
INFO  18:01:00,461 - #3 print
INFO  18:01:00,461 - #29 (
INFO  18:01:00,461 - #8 z
INFO  18:01:00,461 - #22 [
INFO  18:01:00,461 - #9 1
INFO  18:01:00,461 - #23 ]
INFO  18:01:00,461 - #30 )
INFO  18:01:00,461 - #27 ;
INFO  18:01:00,461 - #3 print
INFO  18:01:00,462 - #29 (
INFO  18:01:00,462 - #8 z
INFO  18:01:00,462 - #22 [
INFO  18:01:00,462 - #8 g
INFO  18:01:00,462 - #23 ]
INFO  18:01:00,462 - #30 )
INFO  18:01:00,462 - #27 ;
INFO  18:01:00,462 - #3 print
INFO  18:01:00,462 - #29 (
INFO  18:01:00,462 - #8 z
INFO  18:01:00,462 - #22 [
INFO  18:01:00,462 - #8 x
INFO  18:01:00,462 - #15 +
INFO  18:01:00,462 - #9 4
INFO  18:01:00,463 - #23 ]
INFO  18:01:00,463 - #30 )
INFO  18:01:00,463 - #27 ;
INFO  18:01:00,463 - #3 print
INFO  18:01:00,463 - #29 (
INFO  18:01:00,463 - #8 len
INFO  18:01:00,463 - #29 (
INFO  18:01:00,463 - #8 z
INFO  18:01:00,463 - #30 )
INFO  18:01:00,463 - #30 )
INFO  18:01:00,463 - #27 ;
INFO  18:01:00,464 - #21 }
INFO  18:01:00,464 - #21 }
INFO  18:01:00,465 - =====================SINTAKSNO_STABLO=========================
INFO  18:01:00,469 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             int
            ) [Type]
            Var_multi(
              Var_single(
                Var_normal(
                 x
                ) [Var_normal]
              ) [Var_single]
              Var_normal(
               y
              ) [Var_normal]
            ) [Var_multi]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_multi(
                                      Statement_multi(
                                        Statement_multi(
                                          Statement_single(
                                            Stmt_design(
                                              Assignment(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                                Expr_single(
                                                  Term_single(
                                                    Factor_num_const(
                                                     1
                                                    ) [Factor_num_const]
                                                  ) [Term_single]
                                                ) [Expr_single]
                                              ) [Assignment]
                                            ) [Stmt_design]
                                          ) [Statement_single]
                                          Stmt_Read(
                                            Designator_1(
                                             y
                                            ) [Designator_1]
                                          ) [Stmt_Read]
                                        ) [Statement_multi]
                                        Stmt_print_1(
                                          Expr_term_multi(
                                            Term_single(
                                              Factor_designator(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [Term_single]
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_single(
                                                  Factor_num_const(
                                                   4
                                                  ) [Factor_num_const]
                                                ) [Term_single]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                          ) [Expr_term_multi]
                                        ) [Stmt_print_1]
                                      ) [Statement_multi]
                                      Stmt_print_1(
                                        Expr_single(
                                          Term_single(
                                            Factor_designator(
                                              Designator_1(
                                               y
                                              ) [Designator_1]
                                            ) [Factor_designator]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Stmt_print_1]
                                    ) [Statement_multi]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_multi(
                                          More_term_multi(
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_multi(
                                                  Factor_designator(
                                                    Designator_1(
                                                     y
                                                    ) [Designator_1]
                                                  ) [Factor_designator]
                                                  More_factor_single(
                                                    More_factor_part(
                                                      Mul_op_mul(
                                                      ) [Mul_op_mul]
                                                      Factor_designator(
                                                        Designator_1(
                                                         y
                                                        ) [Designator_1]
                                                      ) [Factor_designator]
                                                    ) [More_factor_part]
                                                  ) [More_factor_single]
                                                ) [Term_multi]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                            More_term_part(
                                              Add_op_minus(
                                              ) [Add_op_minus]
                                              Term_single(
                                                Factor_designator(
                                                  Designator_1(
                                                   y
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                              ) [Term_single]
                                            ) [More_term_part]
                                          ) [More_term_multi]
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_multi]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   g
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_term_multi(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 x
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                            More_term_single(
                              More_term_part(
                                Add_op_plus(
                                ) [Add_op_plus]
                                Term_single(
                                  Factor_num_const(
                                   4
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [More_term_part]
                            ) [More_term_single]
                          ) [Expr_term_multi]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               g
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_term_multi(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             x
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                        More_term_single(
                          More_term_part(
                            Add_op_plus(
                            ) [Add_op_plus]
                            Term_single(
                              Factor_num_const(
                               4
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [More_term_part]
                        ) [More_term_single]
                      ) [Expr_term_multi]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:01:00,470 - ==============================================================
INFO  18:01:00,485 - Pocetak obrade programa Program na liniji 1
INFO  18:01:00,485 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:01:00,486 - Deklarisana konstanta c na liniji 2
INFO  18:01:00,486 - Deklarisana konstanta d na liniji 2
INFO  18:01:00,486 - Deklarisana konstanta g na liniji 2
INFO  18:01:00,486 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:01:00,486 - Deklarisana promenljiva e na liniji 3
INFO  18:01:00,486 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:01:00,486 - Deklarisan niz z na liniji 3
INFO  18:01:00,487 - Pocetak obrade metode main na liniji 5
INFO  18:01:00,487 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  18:01:00,487 - Deklarisana promenljiva x na liniji 5
INFO  18:01:00,487 - Deklarisana promenljiva y na liniji 5
INFO  18:01:00,488 - Pronadjen tip char u tabeli simbola na liniji 15
INFO  18:01:00,488 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  18:01:00,488 - Pronadjen poziv metode (funkcije) ord na liniji 19
INFO  18:01:00,489 - Pronadjen poziv metode (funkcije) chr na liniji 19
INFO  18:01:00,489 - Pronadjen poziv metode (funkcije) len na liniji 24
INFO  18:01:00,489 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:01:00,489 - Zavrsetak obrade programa Program na liniji 1
INFO  18:01:00,489 - ======================TABELA_SIMBOLA==========================
INFO  18:01:00,490 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var x: int
	Local Var y: int

INFO  18:01:00,491 - ==============================================================
INFO  18:01:00,491 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:01:00,491 - ==============================================================
INFO  18:01:00,491 - ======================GENERISANJE_KODA========================
INFO  18:01:00,498 - Generisanje koda uspesno zavrseno!
INFO  18:01:00,499 - Generisanje izlaznog fajla test\program.obj
INFO  18:01:00,499 - ==============================================================
INFO  18:01:20,691 - Obrada ulaznog fajla test\program.mj
INFO  18:01:20,767 - #2 program
INFO  18:01:20,767 - #8 Program
INFO  18:01:20,768 - #5 const
INFO  18:01:20,769 - #8 int
INFO  18:01:20,769 - #8 c
INFO  18:01:20,769 - #24 =
INFO  18:01:20,770 - #9 10
INFO  18:01:20,770 - #28 ,
INFO  18:01:20,771 - #8 d
INFO  18:01:20,771 - #24 =
INFO  18:01:20,771 - #9 99
INFO  18:01:20,771 - #28 ,
INFO  18:01:20,771 - #8 g
INFO  18:01:20,771 - #24 =
INFO  18:01:20,771 - #9 2
INFO  18:01:20,771 - #27 ;
INFO  18:01:20,772 - #8 int
INFO  18:01:20,773 - #8 e
INFO  18:01:20,773 - #27 ;
INFO  18:01:20,774 - #8 char
INFO  18:01:20,775 - #8 z
INFO  18:01:20,775 - #22 [
INFO  18:01:20,775 - #23 ]
INFO  18:01:20,775 - #27 ;
INFO  18:01:20,775 - #20 {
INFO  18:01:20,776 - #6 void
INFO  18:01:20,776 - #8 main
INFO  18:01:20,776 - #29 (
INFO  18:01:20,776 - #30 )
INFO  18:01:20,777 - #8 int
INFO  18:01:20,777 - #8 x
INFO  18:01:20,777 - #28 ,
INFO  18:01:20,777 - #8 y
INFO  18:01:20,777 - #27 ;
INFO  18:01:20,777 - #20 {
INFO  18:01:20,777 - #8 x
INFO  18:01:20,777 - #24 =
INFO  18:01:20,778 - #9 1
INFO  18:01:20,778 - #27 ;
INFO  18:01:20,778 - #4 read
INFO  18:01:20,778 - #29 (
INFO  18:01:20,779 - #8 y
INFO  18:01:20,779 - #30 )
INFO  18:01:20,779 - #27 ;
INFO  18:01:20,779 - #3 print
INFO  18:01:20,779 - #29 (
INFO  18:01:20,779 - #8 x
INFO  18:01:20,779 - #15 +
INFO  18:01:20,780 - #9 4
INFO  18:01:20,781 - #30 )
INFO  18:01:20,782 - #27 ;
INFO  18:01:20,782 - #3 print
INFO  18:01:20,782 - #29 (
INFO  18:01:20,782 - #8 y
INFO  18:01:20,783 - #30 )
INFO  18:01:20,783 - #27 ;
INFO  18:01:20,783 - #8 e
INFO  18:01:20,783 - #24 =
INFO  18:01:20,783 - #9 3
INFO  18:01:20,783 - #27 ;
INFO  18:01:20,783 - #8 e
INFO  18:01:20,783 - #24 =
INFO  18:01:20,784 - #16 -
INFO  18:01:20,784 - #29 (
INFO  18:01:20,784 - #8 d
INFO  18:01:20,784 - #18 /
INFO  18:01:20,784 - #9 11
INFO  18:01:20,785 - #16 -
INFO  18:01:20,787 - #8 c
INFO  18:01:20,788 - #30 )
INFO  18:01:20,788 - #17 *
INFO  18:01:20,788 - #8 e
INFO  18:01:20,789 - #15 +
INFO  18:01:20,789 - #8 y
INFO  18:01:20,789 - #17 *
INFO  18:01:20,789 - #8 y
INFO  18:01:20,790 - #16 -
INFO  18:01:20,791 - #8 y
INFO  18:01:20,791 - #15 +
INFO  18:01:20,791 - #9 1
INFO  18:01:20,791 - #27 ;
INFO  18:01:20,791 - #8 e
INFO  18:01:20,791 - #25 ++
INFO  18:01:20,791 - #27 ;
INFO  18:01:20,792 - #3 print
INFO  18:01:20,792 - #29 (
INFO  18:01:20,792 - #8 e
INFO  18:01:20,792 - #30 )
INFO  18:01:20,792 - #27 ;
INFO  18:01:20,792 - #8 z
INFO  18:01:20,792 - #24 =
INFO  18:01:20,793 - #7 new
INFO  18:01:20,793 - #8 char
INFO  18:01:20,793 - #22 [
INFO  18:01:20,793 - #9 4
INFO  18:01:20,793 - #23 ]
INFO  18:01:20,793 - #27 ;
INFO  18:01:20,794 - #8 z
INFO  18:01:20,794 - #22 [
INFO  18:01:20,794 - #9 0
INFO  18:01:20,794 - #23 ]
INFO  18:01:20,794 - #24 =
INFO  18:01:20,794 - #8 chr
INFO  18:01:20,794 - #29 (
INFO  18:01:20,794 - #9 72
INFO  18:01:20,794 - #30 )
INFO  18:01:20,794 - #27 ;
INFO  18:01:20,795 - #8 z
INFO  18:01:20,795 - #22 [
INFO  18:01:20,795 - #9 1
INFO  18:01:20,795 - #23 ]
INFO  18:01:20,795 - #24 =
INFO  18:01:20,795 - #10 O
INFO  18:01:20,795 - #27 ;
INFO  18:01:20,795 - #8 z
INFO  18:01:20,795 - #22 [
INFO  18:01:20,796 - #8 g
INFO  18:01:20,796 - #23 ]
INFO  18:01:20,796 - #24 =
INFO  18:01:20,796 - #10 M
INFO  18:01:20,796 - #27 ;
INFO  18:01:20,796 - #8 z
INFO  18:01:20,796 - #22 [
INFO  18:01:20,796 - #8 x
INFO  18:01:20,796 - #15 +
INFO  18:01:20,796 - #9 4
INFO  18:01:20,797 - #23 ]
INFO  18:01:20,797 - #24 =
INFO  18:01:20,797 - #8 chr
INFO  18:01:20,797 - #29 (
INFO  18:01:20,797 - #8 ord
INFO  18:01:20,797 - #29 (
INFO  18:01:20,797 - #10 A
INFO  18:01:20,797 - #30 )
INFO  18:01:20,797 - #15 +
INFO  18:01:20,797 - #9 4
INFO  18:01:20,797 - #30 )
INFO  18:01:20,797 - #27 ;
INFO  18:01:20,798 - #3 print
INFO  18:01:20,798 - #29 (
INFO  18:01:20,798 - #8 z
INFO  18:01:20,798 - #22 [
INFO  18:01:20,798 - #9 0
INFO  18:01:20,798 - #23 ]
INFO  18:01:20,798 - #30 )
INFO  18:01:20,798 - #27 ;
INFO  18:01:20,798 - #3 print
INFO  18:01:20,798 - #29 (
INFO  18:01:20,798 - #8 z
INFO  18:01:20,798 - #22 [
INFO  18:01:20,798 - #9 1
INFO  18:01:20,798 - #23 ]
INFO  18:01:20,798 - #30 )
INFO  18:01:20,799 - #27 ;
INFO  18:01:20,799 - #3 print
INFO  18:01:20,799 - #29 (
INFO  18:01:20,799 - #8 z
INFO  18:01:20,799 - #22 [
INFO  18:01:20,799 - #8 g
INFO  18:01:20,799 - #23 ]
INFO  18:01:20,799 - #30 )
INFO  18:01:20,799 - #27 ;
INFO  18:01:20,799 - #3 print
INFO  18:01:20,799 - #29 (
INFO  18:01:20,799 - #8 z
INFO  18:01:20,800 - #22 [
INFO  18:01:20,800 - #8 x
INFO  18:01:20,800 - #15 +
INFO  18:01:20,800 - #9 4
INFO  18:01:20,800 - #23 ]
INFO  18:01:20,800 - #30 )
INFO  18:01:20,800 - #27 ;
INFO  18:01:20,800 - #3 print
INFO  18:01:20,800 - #29 (
INFO  18:01:20,800 - #8 len
INFO  18:01:20,800 - #29 (
INFO  18:01:20,800 - #8 z
INFO  18:01:20,800 - #30 )
INFO  18:01:20,800 - #30 )
INFO  18:01:20,801 - #27 ;
INFO  18:01:20,801 - #21 }
INFO  18:01:20,801 - #21 }
INFO  18:01:20,801 - =====================SINTAKSNO_STABLO=========================
INFO  18:01:20,806 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             int
            ) [Type]
            Var_multi(
              Var_single(
                Var_normal(
                 x
                ) [Var_normal]
              ) [Var_single]
              Var_normal(
               y
              ) [Var_normal]
            ) [Var_multi]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_multi(
                                      Statement_multi(
                                        Statement_multi(
                                          Statement_single(
                                            Stmt_design(
                                              Assignment(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                                Expr_single(
                                                  Term_single(
                                                    Factor_num_const(
                                                     1
                                                    ) [Factor_num_const]
                                                  ) [Term_single]
                                                ) [Expr_single]
                                              ) [Assignment]
                                            ) [Stmt_design]
                                          ) [Statement_single]
                                          Stmt_Read(
                                            Designator_1(
                                             y
                                            ) [Designator_1]
                                          ) [Stmt_Read]
                                        ) [Statement_multi]
                                        Stmt_print_1(
                                          Expr_term_multi(
                                            Term_single(
                                              Factor_designator(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [Term_single]
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_single(
                                                  Factor_num_const(
                                                   4
                                                  ) [Factor_num_const]
                                                ) [Term_single]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                          ) [Expr_term_multi]
                                        ) [Stmt_print_1]
                                      ) [Statement_multi]
                                      Stmt_print_1(
                                        Expr_single(
                                          Term_single(
                                            Factor_designator(
                                              Designator_1(
                                               y
                                              ) [Designator_1]
                                            ) [Factor_designator]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Stmt_print_1]
                                    ) [Statement_multi]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_multi(
                                          More_term_multi(
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_multi(
                                                  Factor_designator(
                                                    Designator_1(
                                                     y
                                                    ) [Designator_1]
                                                  ) [Factor_designator]
                                                  More_factor_single(
                                                    More_factor_part(
                                                      Mul_op_mul(
                                                      ) [Mul_op_mul]
                                                      Factor_designator(
                                                        Designator_1(
                                                         y
                                                        ) [Designator_1]
                                                      ) [Factor_designator]
                                                    ) [More_factor_part]
                                                  ) [More_factor_single]
                                                ) [Term_multi]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                            More_term_part(
                                              Add_op_minus(
                                              ) [Add_op_minus]
                                              Term_single(
                                                Factor_designator(
                                                  Designator_1(
                                                   y
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                              ) [Term_single]
                                            ) [More_term_part]
                                          ) [More_term_multi]
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_multi]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   g
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_term_multi(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 x
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                            More_term_single(
                              More_term_part(
                                Add_op_plus(
                                ) [Add_op_plus]
                                Term_single(
                                  Factor_num_const(
                                   4
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [More_term_part]
                            ) [More_term_single]
                          ) [Expr_term_multi]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               g
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_term_multi(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             x
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                        More_term_single(
                          More_term_part(
                            Add_op_plus(
                            ) [Add_op_plus]
                            Term_single(
                              Factor_num_const(
                               4
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [More_term_part]
                        ) [More_term_single]
                      ) [Expr_term_multi]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:01:20,807 - ==============================================================
INFO  18:01:20,820 - Pocetak obrade programa Program na liniji 1
INFO  18:01:20,820 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:01:20,821 - Deklarisana konstanta c na liniji 2
INFO  18:01:20,822 - Deklarisana konstanta d na liniji 2
INFO  18:01:20,822 - Deklarisana konstanta g na liniji 2
INFO  18:01:20,822 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:01:20,822 - Deklarisana promenljiva e na liniji 3
INFO  18:01:20,822 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:01:20,822 - Deklarisan niz z na liniji 3
INFO  18:01:20,823 - Pocetak obrade metode main na liniji 5
INFO  18:01:20,823 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  18:01:20,823 - Deklarisana promenljiva x na liniji 5
INFO  18:01:20,823 - Deklarisana promenljiva y na liniji 5
INFO  18:01:20,824 - Pronadjen tip char u tabeli simbola na liniji 15
INFO  18:01:20,824 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  18:01:20,824 - Pronadjen poziv metode (funkcije) ord na liniji 19
INFO  18:01:20,824 - Pronadjen poziv metode (funkcije) chr na liniji 19
INFO  18:01:20,824 - Pronadjen poziv metode (funkcije) len na liniji 24
INFO  18:01:20,824 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:01:20,824 - Zavrsetak obrade programa Program na liniji 1
INFO  18:01:20,824 - ======================TABELA_SIMBOLA==========================
INFO  18:01:20,825 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var x: int
	Local Var y: int

INFO  18:01:20,825 - ==============================================================
INFO  18:01:20,825 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:01:20,825 - ==============================================================
INFO  18:01:20,825 - ======================GENERISANJE_KODA========================
INFO  18:01:20,831 - Generisanje koda uspesno zavrseno!
INFO  18:01:20,831 - Generisanje izlaznog fajla test\program.obj
INFO  18:01:20,831 - ==============================================================
INFO  18:02:09,132 - Obrada ulaznog fajla test\program.mj
INFO  18:02:09,206 - #2 program
INFO  18:02:09,206 - #8 Program
INFO  18:02:09,206 - #5 const
INFO  18:02:09,207 - #8 int
INFO  18:02:09,207 - #8 c
INFO  18:02:09,208 - #24 =
INFO  18:02:09,208 - #9 10
INFO  18:02:09,209 - #28 ,
INFO  18:02:09,210 - #8 d
INFO  18:02:09,210 - #24 =
INFO  18:02:09,210 - #9 99
INFO  18:02:09,210 - #28 ,
INFO  18:02:09,211 - #8 g
INFO  18:02:09,211 - #24 =
INFO  18:02:09,211 - #9 2
INFO  18:02:09,211 - #27 ;
INFO  18:02:09,211 - #8 int
INFO  18:02:09,212 - #8 e
INFO  18:02:09,212 - #27 ;
INFO  18:02:09,212 - #8 char
INFO  18:02:09,213 - #8 z
INFO  18:02:09,213 - #22 [
INFO  18:02:09,214 - #23 ]
INFO  18:02:09,214 - #27 ;
INFO  18:02:09,214 - #20 {
INFO  18:02:09,214 - #6 void
INFO  18:02:09,214 - #8 main
INFO  18:02:09,214 - #29 (
INFO  18:02:09,215 - #30 )
INFO  18:02:09,215 - #8 int
INFO  18:02:09,215 - #8 x
INFO  18:02:09,215 - #28 ,
INFO  18:02:09,215 - #8 y
INFO  18:02:09,216 - #27 ;
INFO  18:02:09,216 - #20 {
INFO  18:02:09,216 - #8 x
INFO  18:02:09,216 - #24 =
INFO  18:02:09,216 - #9 1
INFO  18:02:09,216 - #27 ;
INFO  18:02:09,217 - #4 read
INFO  18:02:09,217 - #29 (
INFO  18:02:09,217 - #8 y
INFO  18:02:09,217 - #30 )
INFO  18:02:09,218 - #27 ;
INFO  18:02:09,218 - #3 print
INFO  18:02:09,218 - #29 (
INFO  18:02:09,218 - #8 x
INFO  18:02:09,218 - #15 +
INFO  18:02:09,218 - #9 4
INFO  18:02:09,220 - #30 )
INFO  18:02:09,221 - #27 ;
INFO  18:02:09,221 - #3 print
INFO  18:02:09,221 - #29 (
INFO  18:02:09,222 - #8 y
INFO  18:02:09,222 - #30 )
INFO  18:02:09,222 - #27 ;
INFO  18:02:09,222 - #8 e
INFO  18:02:09,222 - #24 =
INFO  18:02:09,222 - #9 3
INFO  18:02:09,222 - #27 ;
INFO  18:02:09,224 - #8 e
INFO  18:02:09,224 - #24 =
INFO  18:02:09,224 - #16 -
INFO  18:02:09,225 - #29 (
INFO  18:02:09,225 - #8 d
INFO  18:02:09,225 - #18 /
INFO  18:02:09,225 - #9 11
INFO  18:02:09,227 - #16 -
INFO  18:02:09,228 - #8 c
INFO  18:02:09,229 - #30 )
INFO  18:02:09,229 - #17 *
INFO  18:02:09,229 - #8 e
INFO  18:02:09,230 - #15 +
INFO  18:02:09,230 - #8 y
INFO  18:02:09,230 - #17 *
INFO  18:02:09,230 - #8 y
INFO  18:02:09,232 - #16 -
INFO  18:02:09,232 - #8 y
INFO  18:02:09,232 - #15 +
INFO  18:02:09,232 - #9 1
INFO  18:02:09,232 - #27 ;
INFO  18:02:09,232 - #8 e
INFO  18:02:09,232 - #25 ++
INFO  18:02:09,232 - #27 ;
INFO  18:02:09,233 - #3 print
INFO  18:02:09,233 - #29 (
INFO  18:02:09,233 - #8 e
INFO  18:02:09,233 - #30 )
INFO  18:02:09,233 - #27 ;
INFO  18:02:09,233 - #8 z
INFO  18:02:09,233 - #24 =
INFO  18:02:09,233 - #7 new
INFO  18:02:09,234 - #8 char
INFO  18:02:09,234 - #22 [
INFO  18:02:09,234 - #9 4
INFO  18:02:09,234 - #23 ]
INFO  18:02:09,234 - #27 ;
INFO  18:02:09,234 - #8 z
INFO  18:02:09,235 - #22 [
INFO  18:02:09,235 - #9 0
INFO  18:02:09,235 - #23 ]
INFO  18:02:09,235 - #24 =
INFO  18:02:09,235 - #8 chr
INFO  18:02:09,235 - #29 (
INFO  18:02:09,235 - #9 72
INFO  18:02:09,235 - #30 )
INFO  18:02:09,235 - #27 ;
INFO  18:02:09,236 - #8 z
INFO  18:02:09,236 - #22 [
INFO  18:02:09,236 - #9 1
INFO  18:02:09,236 - #23 ]
INFO  18:02:09,236 - #24 =
INFO  18:02:09,236 - #10 O
INFO  18:02:09,236 - #27 ;
INFO  18:02:09,236 - #8 z
INFO  18:02:09,236 - #22 [
INFO  18:02:09,237 - #8 g
INFO  18:02:09,237 - #23 ]
INFO  18:02:09,237 - #24 =
INFO  18:02:09,237 - #10 M
INFO  18:02:09,237 - #27 ;
INFO  18:02:09,237 - #8 z
INFO  18:02:09,237 - #22 [
INFO  18:02:09,237 - #8 x
INFO  18:02:09,237 - #15 +
INFO  18:02:09,237 - #9 4
INFO  18:02:09,237 - #23 ]
INFO  18:02:09,238 - #24 =
INFO  18:02:09,238 - #8 chr
INFO  18:02:09,238 - #29 (
INFO  18:02:09,238 - #8 ord
INFO  18:02:09,238 - #29 (
INFO  18:02:09,238 - #10 A
INFO  18:02:09,238 - #30 )
INFO  18:02:09,238 - #15 +
INFO  18:02:09,238 - #9 4
INFO  18:02:09,238 - #30 )
INFO  18:02:09,238 - #27 ;
INFO  18:02:09,239 - #3 print
INFO  18:02:09,239 - #29 (
INFO  18:02:09,239 - #8 z
INFO  18:02:09,239 - #22 [
INFO  18:02:09,239 - #9 0
INFO  18:02:09,239 - #23 ]
INFO  18:02:09,239 - #30 )
INFO  18:02:09,239 - #27 ;
INFO  18:02:09,239 - #3 print
INFO  18:02:09,239 - #29 (
INFO  18:02:09,239 - #8 z
INFO  18:02:09,240 - #22 [
INFO  18:02:09,240 - #9 1
INFO  18:02:09,240 - #23 ]
INFO  18:02:09,240 - #30 )
INFO  18:02:09,240 - #27 ;
INFO  18:02:09,240 - #3 print
INFO  18:02:09,240 - #29 (
INFO  18:02:09,240 - #8 z
INFO  18:02:09,240 - #22 [
INFO  18:02:09,240 - #8 g
INFO  18:02:09,240 - #23 ]
INFO  18:02:09,240 - #30 )
INFO  18:02:09,241 - #27 ;
INFO  18:02:09,241 - #3 print
INFO  18:02:09,241 - #29 (
INFO  18:02:09,241 - #8 z
INFO  18:02:09,241 - #22 [
INFO  18:02:09,241 - #8 x
INFO  18:02:09,241 - #15 +
INFO  18:02:09,241 - #9 4
INFO  18:02:09,241 - #23 ]
INFO  18:02:09,241 - #30 )
INFO  18:02:09,242 - #27 ;
INFO  18:02:09,242 - #3 print
INFO  18:02:09,242 - #29 (
INFO  18:02:09,242 - #8 len
INFO  18:02:09,242 - #29 (
INFO  18:02:09,242 - #8 z
INFO  18:02:09,242 - #30 )
INFO  18:02:09,242 - #30 )
INFO  18:02:09,242 - #27 ;
INFO  18:02:09,242 - #21 }
INFO  18:02:09,242 - #21 }
INFO  18:02:09,243 - =====================SINTAKSNO_STABLO=========================
INFO  18:02:09,248 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             int
            ) [Type]
            Var_multi(
              Var_single(
                Var_normal(
                 x
                ) [Var_normal]
              ) [Var_single]
              Var_normal(
               y
              ) [Var_normal]
            ) [Var_multi]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_multi(
                                      Statement_multi(
                                        Statement_multi(
                                          Statement_single(
                                            Stmt_design(
                                              Assignment(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                                Expr_single(
                                                  Term_single(
                                                    Factor_num_const(
                                                     1
                                                    ) [Factor_num_const]
                                                  ) [Term_single]
                                                ) [Expr_single]
                                              ) [Assignment]
                                            ) [Stmt_design]
                                          ) [Statement_single]
                                          Stmt_Read(
                                            Designator_1(
                                             y
                                            ) [Designator_1]
                                          ) [Stmt_Read]
                                        ) [Statement_multi]
                                        Stmt_print_1(
                                          Expr_term_multi(
                                            Term_single(
                                              Factor_designator(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [Term_single]
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_single(
                                                  Factor_num_const(
                                                   4
                                                  ) [Factor_num_const]
                                                ) [Term_single]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                          ) [Expr_term_multi]
                                        ) [Stmt_print_1]
                                      ) [Statement_multi]
                                      Stmt_print_1(
                                        Expr_single(
                                          Term_single(
                                            Factor_designator(
                                              Designator_1(
                                               y
                                              ) [Designator_1]
                                            ) [Factor_designator]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Stmt_print_1]
                                    ) [Statement_multi]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_multi(
                                          More_term_multi(
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_multi(
                                                  Factor_designator(
                                                    Designator_1(
                                                     y
                                                    ) [Designator_1]
                                                  ) [Factor_designator]
                                                  More_factor_single(
                                                    More_factor_part(
                                                      Mul_op_mul(
                                                      ) [Mul_op_mul]
                                                      Factor_designator(
                                                        Designator_1(
                                                         y
                                                        ) [Designator_1]
                                                      ) [Factor_designator]
                                                    ) [More_factor_part]
                                                  ) [More_factor_single]
                                                ) [Term_multi]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                            More_term_part(
                                              Add_op_minus(
                                              ) [Add_op_minus]
                                              Term_single(
                                                Factor_designator(
                                                  Designator_1(
                                                   y
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                              ) [Term_single]
                                            ) [More_term_part]
                                          ) [More_term_multi]
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_multi]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   g
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_term_multi(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 x
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                            More_term_single(
                              More_term_part(
                                Add_op_plus(
                                ) [Add_op_plus]
                                Term_single(
                                  Factor_num_const(
                                   4
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [More_term_part]
                            ) [More_term_single]
                          ) [Expr_term_multi]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               g
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_term_multi(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             x
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                        More_term_single(
                          More_term_part(
                            Add_op_plus(
                            ) [Add_op_plus]
                            Term_single(
                              Factor_num_const(
                               4
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [More_term_part]
                        ) [More_term_single]
                      ) [Expr_term_multi]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:02:09,250 - ==============================================================
INFO  18:02:09,263 - Pocetak obrade programa Program na liniji 1
INFO  18:02:09,263 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:02:09,264 - Deklarisana konstanta c na liniji 2
INFO  18:02:09,265 - Deklarisana konstanta d na liniji 2
INFO  18:02:09,265 - Deklarisana konstanta g na liniji 2
INFO  18:02:09,265 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:02:09,265 - Deklarisana promenljiva e na liniji 3
INFO  18:02:09,265 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:02:09,265 - Deklarisan niz z na liniji 3
INFO  18:02:09,266 - Pocetak obrade metode main na liniji 5
INFO  18:02:09,266 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  18:02:09,266 - Deklarisana promenljiva x na liniji 5
INFO  18:02:09,266 - Deklarisana promenljiva y na liniji 5
INFO  18:02:09,267 - Pronadjen tip char u tabeli simbola na liniji 15
INFO  18:02:09,267 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  18:02:09,267 - Pronadjen poziv metode (funkcije) ord na liniji 19
INFO  18:02:09,267 - Pronadjen poziv metode (funkcije) chr na liniji 19
INFO  18:02:09,267 - Pronadjen poziv metode (funkcije) len na liniji 24
INFO  18:02:09,267 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:02:09,267 - Zavrsetak obrade programa Program na liniji 1
INFO  18:02:09,267 - ======================TABELA_SIMBOLA==========================
INFO  18:02:09,268 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var x: int
	Local Var y: int

INFO  18:02:09,268 - ==============================================================
INFO  18:02:09,268 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:02:09,268 - ==============================================================
INFO  18:02:09,268 - ======================GENERISANJE_KODA========================
INFO  18:02:09,274 - Generisanje koda uspesno zavrseno!
INFO  18:02:09,274 - Generisanje izlaznog fajla test\program.obj
INFO  18:02:09,274 - ==============================================================
INFO  18:03:04,880 - Obrada ulaznog fajla test\program.mj
INFO  18:03:04,988 - #2 program
INFO  18:03:04,988 - #8 Program
INFO  18:03:04,988 - #5 const
INFO  18:03:04,989 - #8 int
INFO  18:03:04,989 - #8 c
INFO  18:03:04,990 - #24 =
INFO  18:03:04,990 - #9 10
INFO  18:03:04,990 - #28 ,
INFO  18:03:04,991 - #8 d
INFO  18:03:04,992 - #24 =
INFO  18:03:04,992 - #9 99
INFO  18:03:04,992 - #28 ,
INFO  18:03:04,992 - #8 g
INFO  18:03:04,992 - #24 =
INFO  18:03:04,992 - #9 2
INFO  18:03:04,992 - #27 ;
INFO  18:03:04,992 - #8 int
INFO  18:03:04,994 - #8 e
INFO  18:03:04,994 - #27 ;
INFO  18:03:04,994 - #8 char
INFO  18:03:04,996 - #8 z
INFO  18:03:04,996 - #22 [
INFO  18:03:04,996 - #23 ]
INFO  18:03:04,996 - #27 ;
INFO  18:03:04,996 - #20 {
INFO  18:03:04,997 - #6 void
INFO  18:03:04,997 - #8 main
INFO  18:03:04,997 - #29 (
INFO  18:03:04,998 - #30 )
INFO  18:03:04,998 - #8 int
INFO  18:03:04,998 - #8 x
INFO  18:03:04,998 - #28 ,
INFO  18:03:04,998 - #8 y
INFO  18:03:04,998 - #27 ;
INFO  18:03:04,999 - #20 {
INFO  18:03:04,999 - #8 x
INFO  18:03:04,999 - #24 =
INFO  18:03:04,999 - #9 1
INFO  18:03:04,999 - #27 ;
INFO  18:03:05,000 - #4 read
INFO  18:03:05,000 - #29 (
INFO  18:03:05,000 - #8 y
INFO  18:03:05,000 - #30 )
INFO  18:03:05,000 - #27 ;
INFO  18:03:05,001 - #3 print
INFO  18:03:05,001 - #29 (
INFO  18:03:05,001 - #8 x
INFO  18:03:05,001 - #15 +
INFO  18:03:05,001 - #9 4
INFO  18:03:05,003 - #30 )
INFO  18:03:05,004 - #27 ;
INFO  18:03:05,004 - #3 print
INFO  18:03:05,004 - #29 (
INFO  18:03:05,005 - #8 y
INFO  18:03:05,005 - #30 )
INFO  18:03:05,005 - #27 ;
INFO  18:03:05,005 - #8 e
INFO  18:03:05,005 - #24 =
INFO  18:03:05,005 - #9 3
INFO  18:03:05,005 - #27 ;
INFO  18:03:05,007 - #8 e
INFO  18:03:05,007 - #24 =
INFO  18:03:05,007 - #16 -
INFO  18:03:05,008 - #29 (
INFO  18:03:05,008 - #8 d
INFO  18:03:05,008 - #18 /
INFO  18:03:05,008 - #9 11
INFO  18:03:05,009 - #16 -
INFO  18:03:05,010 - #8 c
INFO  18:03:05,011 - #30 )
INFO  18:03:05,011 - #17 *
INFO  18:03:05,011 - #8 e
INFO  18:03:05,012 - #15 +
INFO  18:03:05,012 - #8 y
INFO  18:03:05,012 - #17 *
INFO  18:03:05,012 - #8 y
INFO  18:03:05,014 - #16 -
INFO  18:03:05,014 - #8 y
INFO  18:03:05,014 - #15 +
INFO  18:03:05,014 - #9 1
INFO  18:03:05,014 - #27 ;
INFO  18:03:05,014 - #8 e
INFO  18:03:05,014 - #25 ++
INFO  18:03:05,015 - #27 ;
INFO  18:03:05,015 - #3 print
INFO  18:03:05,015 - #29 (
INFO  18:03:05,015 - #8 e
INFO  18:03:05,015 - #30 )
INFO  18:03:05,015 - #27 ;
INFO  18:03:05,015 - #8 z
INFO  18:03:05,015 - #24 =
INFO  18:03:05,015 - #7 new
INFO  18:03:05,015 - #8 char
INFO  18:03:05,015 - #22 [
INFO  18:03:05,016 - #9 4
INFO  18:03:05,016 - #23 ]
INFO  18:03:05,016 - #27 ;
INFO  18:03:05,016 - #8 z
INFO  18:03:05,017 - #22 [
INFO  18:03:05,017 - #9 0
INFO  18:03:05,017 - #23 ]
INFO  18:03:05,017 - #24 =
INFO  18:03:05,017 - #8 chr
INFO  18:03:05,017 - #29 (
INFO  18:03:05,017 - #9 72
INFO  18:03:05,017 - #30 )
INFO  18:03:05,017 - #27 ;
INFO  18:03:05,018 - #8 z
INFO  18:03:05,018 - #22 [
INFO  18:03:05,018 - #9 1
INFO  18:03:05,018 - #23 ]
INFO  18:03:05,018 - #24 =
INFO  18:03:05,018 - #10 O
INFO  18:03:05,019 - #27 ;
INFO  18:03:05,019 - #8 z
INFO  18:03:05,019 - #22 [
INFO  18:03:05,019 - #8 g
INFO  18:03:05,019 - #23 ]
INFO  18:03:05,019 - #24 =
INFO  18:03:05,019 - #10 M
INFO  18:03:05,019 - #27 ;
INFO  18:03:05,019 - #8 z
INFO  18:03:05,019 - #22 [
INFO  18:03:05,020 - #8 x
INFO  18:03:05,020 - #15 +
INFO  18:03:05,020 - #9 4
INFO  18:03:05,020 - #23 ]
INFO  18:03:05,020 - #24 =
INFO  18:03:05,020 - #8 chr
INFO  18:03:05,020 - #29 (
INFO  18:03:05,020 - #8 ord
INFO  18:03:05,020 - #29 (
INFO  18:03:05,020 - #10 A
INFO  18:03:05,021 - #30 )
INFO  18:03:05,021 - #15 +
INFO  18:03:05,021 - #9 4
INFO  18:03:05,021 - #30 )
INFO  18:03:05,021 - #27 ;
INFO  18:03:05,022 - #3 print
INFO  18:03:05,022 - #29 (
INFO  18:03:05,022 - #8 z
INFO  18:03:05,022 - #22 [
INFO  18:03:05,022 - #9 0
INFO  18:03:05,022 - #23 ]
INFO  18:03:05,022 - #30 )
INFO  18:03:05,022 - #27 ;
INFO  18:03:05,022 - #3 print
INFO  18:03:05,022 - #29 (
INFO  18:03:05,022 - #8 z
INFO  18:03:05,022 - #22 [
INFO  18:03:05,023 - #9 1
INFO  18:03:05,023 - #23 ]
INFO  18:03:05,023 - #30 )
INFO  18:03:05,023 - #27 ;
INFO  18:03:05,023 - #3 print
INFO  18:03:05,023 - #29 (
INFO  18:03:05,023 - #8 z
INFO  18:03:05,023 - #22 [
INFO  18:03:05,023 - #8 g
INFO  18:03:05,023 - #23 ]
INFO  18:03:05,023 - #30 )
INFO  18:03:05,023 - #27 ;
INFO  18:03:05,023 - #3 print
INFO  18:03:05,024 - #29 (
INFO  18:03:05,024 - #8 z
INFO  18:03:05,024 - #22 [
INFO  18:03:05,024 - #8 x
INFO  18:03:05,024 - #15 +
INFO  18:03:05,024 - #9 4
INFO  18:03:05,024 - #23 ]
INFO  18:03:05,024 - #30 )
INFO  18:03:05,024 - #27 ;
INFO  18:03:05,024 - #3 print
INFO  18:03:05,024 - #29 (
INFO  18:03:05,024 - #8 len
INFO  18:03:05,024 - #29 (
INFO  18:03:05,024 - #8 z
INFO  18:03:05,025 - #30 )
INFO  18:03:05,025 - #30 )
INFO  18:03:05,025 - #27 ;
INFO  18:03:05,025 - #21 }
INFO  18:03:05,025 - #21 }
INFO  18:03:05,026 - =====================SINTAKSNO_STABLO=========================
INFO  18:03:05,031 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             int
            ) [Type]
            Var_multi(
              Var_single(
                Var_normal(
                 x
                ) [Var_normal]
              ) [Var_single]
              Var_normal(
               y
              ) [Var_normal]
            ) [Var_multi]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_multi(
                                      Statement_multi(
                                        Statement_multi(
                                          Statement_single(
                                            Stmt_design(
                                              Assignment(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                                Expr_single(
                                                  Term_single(
                                                    Factor_num_const(
                                                     1
                                                    ) [Factor_num_const]
                                                  ) [Term_single]
                                                ) [Expr_single]
                                              ) [Assignment]
                                            ) [Stmt_design]
                                          ) [Statement_single]
                                          Stmt_Read(
                                            Designator_1(
                                             y
                                            ) [Designator_1]
                                          ) [Stmt_Read]
                                        ) [Statement_multi]
                                        Stmt_print_1(
                                          Expr_term_multi(
                                            Term_single(
                                              Factor_designator(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [Term_single]
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_single(
                                                  Factor_num_const(
                                                   4
                                                  ) [Factor_num_const]
                                                ) [Term_single]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                          ) [Expr_term_multi]
                                        ) [Stmt_print_1]
                                      ) [Statement_multi]
                                      Stmt_print_1(
                                        Expr_single(
                                          Term_single(
                                            Factor_designator(
                                              Designator_1(
                                               y
                                              ) [Designator_1]
                                            ) [Factor_designator]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Stmt_print_1]
                                    ) [Statement_multi]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_multi(
                                          More_term_multi(
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_multi(
                                                  Factor_designator(
                                                    Designator_1(
                                                     y
                                                    ) [Designator_1]
                                                  ) [Factor_designator]
                                                  More_factor_single(
                                                    More_factor_part(
                                                      Mul_op_mul(
                                                      ) [Mul_op_mul]
                                                      Factor_designator(
                                                        Designator_1(
                                                         y
                                                        ) [Designator_1]
                                                      ) [Factor_designator]
                                                    ) [More_factor_part]
                                                  ) [More_factor_single]
                                                ) [Term_multi]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                            More_term_part(
                                              Add_op_minus(
                                              ) [Add_op_minus]
                                              Term_single(
                                                Factor_designator(
                                                  Designator_1(
                                                   y
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                              ) [Term_single]
                                            ) [More_term_part]
                                          ) [More_term_multi]
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_multi]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   g
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_term_multi(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 x
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                            More_term_single(
                              More_term_part(
                                Add_op_plus(
                                ) [Add_op_plus]
                                Term_single(
                                  Factor_num_const(
                                   4
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [More_term_part]
                            ) [More_term_single]
                          ) [Expr_term_multi]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               g
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_term_multi(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             x
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                        More_term_single(
                          More_term_part(
                            Add_op_plus(
                            ) [Add_op_plus]
                            Term_single(
                              Factor_num_const(
                               4
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [More_term_part]
                        ) [More_term_single]
                      ) [Expr_term_multi]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:03:05,033 - ==============================================================
INFO  18:03:05,051 - Pocetak obrade programa Program na liniji 1
INFO  18:03:05,051 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:03:05,052 - Deklarisana konstanta c na liniji 2
INFO  18:03:05,052 - Deklarisana konstanta d na liniji 2
INFO  18:03:05,052 - Deklarisana konstanta g na liniji 2
INFO  18:03:05,052 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:03:05,053 - Deklarisana promenljiva e na liniji 3
INFO  18:03:05,053 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:03:05,053 - Deklarisan niz z na liniji 3
INFO  18:03:05,054 - Pocetak obrade metode main na liniji 5
INFO  18:03:05,054 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  18:03:05,054 - Deklarisana promenljiva x na liniji 5
INFO  18:03:05,054 - Deklarisana promenljiva y na liniji 5
INFO  18:03:05,055 - Pronadjen tip char u tabeli simbola na liniji 15
INFO  18:03:05,055 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  18:03:05,055 - Pronadjen poziv metode (funkcije) ord na liniji 19
INFO  18:03:05,055 - Pronadjen poziv metode (funkcije) chr na liniji 19
INFO  18:03:05,055 - Pronadjen poziv metode (funkcije) len na liniji 24
INFO  18:03:05,055 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:03:05,055 - Zavrsetak obrade programa Program na liniji 1
INFO  18:03:05,055 - ======================TABELA_SIMBOLA==========================
INFO  18:03:05,056 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var x: int
	Local Var y: int

INFO  18:03:05,056 - ==============================================================
INFO  18:03:05,056 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:03:05,056 - ==============================================================
INFO  18:03:05,056 - ======================GENERISANJE_KODA========================
INFO  18:03:05,063 - Generisanje koda uspesno zavrseno!
INFO  18:03:05,063 - Generisanje izlaznog fajla test\program.obj
INFO  18:03:05,064 - ==============================================================
INFO  18:08:48,273 - Obrada ulaznog fajla test\program.mj
INFO  18:08:48,356 - #2 program
INFO  18:08:48,356 - #8 Program
INFO  18:08:48,356 - #5 const
INFO  18:08:48,357 - #8 int
INFO  18:08:48,357 - #8 c
INFO  18:08:48,358 - #24 =
INFO  18:08:48,358 - #9 10
INFO  18:08:48,358 - #28 ,
INFO  18:08:48,359 - #8 d
INFO  18:08:48,359 - #24 =
INFO  18:08:48,359 - #9 99
INFO  18:08:48,359 - #28 ,
INFO  18:08:48,359 - #8 g
INFO  18:08:48,359 - #24 =
INFO  18:08:48,360 - #9 2
INFO  18:08:48,360 - #27 ;
INFO  18:08:48,360 - #8 int
INFO  18:08:48,361 - #8 e
INFO  18:08:48,361 - #27 ;
INFO  18:08:48,361 - #8 char
INFO  18:08:48,362 - #8 z
INFO  18:08:48,362 - #22 [
INFO  18:08:48,362 - #23 ]
INFO  18:08:48,363 - #27 ;
INFO  18:08:48,363 - #20 {
INFO  18:08:48,363 - #6 void
INFO  18:08:48,363 - #8 main
INFO  18:08:48,363 - #29 (
INFO  18:08:48,364 - #30 )
INFO  18:08:48,364 - #8 int
INFO  18:08:48,364 - #8 x
INFO  18:08:48,364 - #28 ,
INFO  18:08:48,364 - #8 y
INFO  18:08:48,364 - #27 ;
INFO  18:08:48,365 - #20 {
INFO  18:08:48,365 - #8 x
INFO  18:08:48,365 - #24 =
INFO  18:08:48,365 - #9 1
INFO  18:08:48,365 - #27 ;
INFO  18:08:48,366 - #4 read
INFO  18:08:48,366 - #29 (
INFO  18:08:48,366 - #8 y
INFO  18:08:48,366 - #30 )
INFO  18:08:48,366 - #27 ;
INFO  18:08:48,366 - #3 print
INFO  18:08:48,367 - #29 (
INFO  18:08:48,367 - #8 x
INFO  18:08:48,367 - #15 +
INFO  18:08:48,367 - #9 4
INFO  18:08:48,368 - #30 )
INFO  18:08:48,369 - #27 ;
INFO  18:08:48,369 - #3 print
INFO  18:08:48,370 - #29 (
INFO  18:08:48,370 - #8 y
INFO  18:08:48,370 - #30 )
INFO  18:08:48,370 - #27 ;
INFO  18:08:48,370 - #8 e
INFO  18:08:48,370 - #24 =
INFO  18:08:48,370 - #9 3
INFO  18:08:48,370 - #27 ;
INFO  18:08:48,371 - #8 e
INFO  18:08:48,371 - #24 =
INFO  18:08:48,371 - #16 -
INFO  18:08:48,371 - #29 (
INFO  18:08:48,371 - #8 d
INFO  18:08:48,371 - #18 /
INFO  18:08:48,371 - #9 11
INFO  18:08:48,373 - #16 -
INFO  18:08:48,374 - #8 c
INFO  18:08:48,375 - #30 )
INFO  18:08:48,375 - #17 *
INFO  18:08:48,376 - #8 e
INFO  18:08:48,377 - #15 +
INFO  18:08:48,377 - #8 y
INFO  18:08:48,377 - #17 *
INFO  18:08:48,377 - #8 y
INFO  18:08:48,378 - #16 -
INFO  18:08:48,379 - #8 y
INFO  18:08:48,379 - #15 +
INFO  18:08:48,379 - #9 1
INFO  18:08:48,379 - #27 ;
INFO  18:08:48,379 - #8 e
INFO  18:08:48,379 - #25 ++
INFO  18:08:48,380 - #27 ;
INFO  18:08:48,380 - #3 print
INFO  18:08:48,380 - #29 (
INFO  18:08:48,380 - #8 e
INFO  18:08:48,380 - #30 )
INFO  18:08:48,380 - #27 ;
INFO  18:08:48,380 - #8 z
INFO  18:08:48,380 - #24 =
INFO  18:08:48,380 - #7 new
INFO  18:08:48,380 - #8 char
INFO  18:08:48,381 - #22 [
INFO  18:08:48,381 - #9 4
INFO  18:08:48,381 - #23 ]
INFO  18:08:48,381 - #27 ;
INFO  18:08:48,381 - #8 z
INFO  18:08:48,381 - #22 [
INFO  18:08:48,382 - #9 0
INFO  18:08:48,382 - #23 ]
INFO  18:08:48,382 - #24 =
INFO  18:08:48,382 - #8 chr
INFO  18:08:48,382 - #29 (
INFO  18:08:48,382 - #9 72
INFO  18:08:48,382 - #30 )
INFO  18:08:48,383 - #27 ;
INFO  18:08:48,383 - #8 z
INFO  18:08:48,383 - #22 [
INFO  18:08:48,383 - #9 1
INFO  18:08:48,383 - #23 ]
INFO  18:08:48,383 - #24 =
INFO  18:08:48,383 - #10 O
INFO  18:08:48,384 - #27 ;
INFO  18:08:48,384 - #8 z
INFO  18:08:48,384 - #22 [
INFO  18:08:48,384 - #8 g
INFO  18:08:48,384 - #23 ]
INFO  18:08:48,384 - #24 =
INFO  18:08:48,384 - #10 M
INFO  18:08:48,384 - #27 ;
INFO  18:08:48,385 - #8 z
INFO  18:08:48,385 - #22 [
INFO  18:08:48,385 - #8 x
INFO  18:08:48,385 - #15 +
INFO  18:08:48,385 - #9 4
INFO  18:08:48,385 - #23 ]
INFO  18:08:48,385 - #24 =
INFO  18:08:48,385 - #8 chr
INFO  18:08:48,385 - #29 (
INFO  18:08:48,386 - #8 ord
INFO  18:08:48,386 - #29 (
INFO  18:08:48,386 - #10 A
INFO  18:08:48,386 - #30 )
INFO  18:08:48,386 - #15 +
INFO  18:08:48,386 - #9 4
INFO  18:08:48,386 - #30 )
INFO  18:08:48,386 - #27 ;
INFO  18:08:48,386 - #3 print
INFO  18:08:48,386 - #29 (
INFO  18:08:48,386 - #8 z
INFO  18:08:48,386 - #22 [
INFO  18:08:48,387 - #9 0
INFO  18:08:48,387 - #23 ]
INFO  18:08:48,387 - #30 )
INFO  18:08:48,387 - #27 ;
INFO  18:08:48,387 - #3 print
INFO  18:08:48,387 - #29 (
INFO  18:08:48,387 - #8 z
INFO  18:08:48,387 - #22 [
INFO  18:08:48,387 - #9 1
INFO  18:08:48,387 - #23 ]
INFO  18:08:48,388 - #30 )
INFO  18:08:48,388 - #27 ;
INFO  18:08:48,388 - #3 print
INFO  18:08:48,388 - #29 (
INFO  18:08:48,388 - #8 z
INFO  18:08:48,388 - #22 [
INFO  18:08:48,388 - #8 g
INFO  18:08:48,388 - #23 ]
INFO  18:08:48,388 - #30 )
INFO  18:08:48,389 - #27 ;
INFO  18:08:48,389 - #3 print
INFO  18:08:48,389 - #29 (
INFO  18:08:48,389 - #8 z
INFO  18:08:48,389 - #22 [
INFO  18:08:48,389 - #8 x
INFO  18:08:48,389 - #15 +
INFO  18:08:48,389 - #9 4
INFO  18:08:48,389 - #23 ]
INFO  18:08:48,389 - #30 )
INFO  18:08:48,389 - #27 ;
INFO  18:08:48,390 - #3 print
INFO  18:08:48,390 - #29 (
INFO  18:08:48,390 - #8 len
INFO  18:08:48,390 - #29 (
INFO  18:08:48,390 - #8 z
INFO  18:08:48,390 - #30 )
INFO  18:08:48,390 - #30 )
INFO  18:08:48,390 - #27 ;
INFO  18:08:48,390 - #21 }
INFO  18:08:48,390 - #21 }
INFO  18:08:48,392 - =====================SINTAKSNO_STABLO=========================
INFO  18:08:48,397 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             int
            ) [Type]
            Var_multi(
              Var_single(
                Var_normal(
                 x
                ) [Var_normal]
              ) [Var_single]
              Var_normal(
               y
              ) [Var_normal]
            ) [Var_multi]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_multi(
            Statement_multi(
              Statement_multi(
                Statement_multi(
                  Statement_multi(
                    Statement_multi(
                      Statement_multi(
                        Statement_multi(
                          Statement_multi(
                            Statement_multi(
                              Statement_multi(
                                Statement_multi(
                                  Statement_multi(
                                    Statement_multi(
                                      Statement_multi(
                                        Statement_multi(
                                          Statement_single(
                                            Stmt_design(
                                              Assignment(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                                Expr_single(
                                                  Term_single(
                                                    Factor_num_const(
                                                     1
                                                    ) [Factor_num_const]
                                                  ) [Term_single]
                                                ) [Expr_single]
                                              ) [Assignment]
                                            ) [Stmt_design]
                                          ) [Statement_single]
                                          Stmt_Read(
                                            Designator_1(
                                             y
                                            ) [Designator_1]
                                          ) [Stmt_Read]
                                        ) [Statement_multi]
                                        Stmt_print_1(
                                          Expr_term_multi(
                                            Term_single(
                                              Factor_designator(
                                                Designator_1(
                                                 x
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [Term_single]
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_single(
                                                  Factor_num_const(
                                                   4
                                                  ) [Factor_num_const]
                                                ) [Term_single]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                          ) [Expr_term_multi]
                                        ) [Stmt_print_1]
                                      ) [Statement_multi]
                                      Stmt_print_1(
                                        Expr_single(
                                          Term_single(
                                            Factor_designator(
                                              Designator_1(
                                               y
                                              ) [Designator_1]
                                            ) [Factor_designator]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Stmt_print_1]
                                    ) [Statement_multi]
                                    Stmt_design(
                                      Assignment(
                                        Designator_1(
                                         e
                                        ) [Designator_1]
                                        Expr_single(
                                          Term_single(
                                            Factor_num_const(
                                             3
                                            ) [Factor_num_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Assignment]
                                    ) [Stmt_design]
                                  ) [Statement_multi]
                                  Stmt_design(
                                    Assignment(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                      Expr_neg_term_multi(
                                        Term_multi(
                                          Factor_expr(
                                            Expr_term_multi(
                                              Term_multi(
                                                Factor_designator(
                                                  Designator_1(
                                                   d
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                                More_factor_single(
                                                  More_factor_part(
                                                    Mul_op_div(
                                                    ) [Mul_op_div]
                                                    Factor_num_const(
                                                     11
                                                    ) [Factor_num_const]
                                                  ) [More_factor_part]
                                                ) [More_factor_single]
                                              ) [Term_multi]
                                              More_term_single(
                                                More_term_part(
                                                  Add_op_minus(
                                                  ) [Add_op_minus]
                                                  Term_single(
                                                    Factor_designator(
                                                      Designator_1(
                                                       c
                                                      ) [Designator_1]
                                                    ) [Factor_designator]
                                                  ) [Term_single]
                                                ) [More_term_part]
                                              ) [More_term_single]
                                            ) [Expr_term_multi]
                                          ) [Factor_expr]
                                          More_factor_single(
                                            More_factor_part(
                                              Mul_op_mul(
                                              ) [Mul_op_mul]
                                              Factor_designator(
                                                Designator_1(
                                                 e
                                                ) [Designator_1]
                                              ) [Factor_designator]
                                            ) [More_factor_part]
                                          ) [More_factor_single]
                                        ) [Term_multi]
                                        More_term_multi(
                                          More_term_multi(
                                            More_term_single(
                                              More_term_part(
                                                Add_op_plus(
                                                ) [Add_op_plus]
                                                Term_multi(
                                                  Factor_designator(
                                                    Designator_1(
                                                     y
                                                    ) [Designator_1]
                                                  ) [Factor_designator]
                                                  More_factor_single(
                                                    More_factor_part(
                                                      Mul_op_mul(
                                                      ) [Mul_op_mul]
                                                      Factor_designator(
                                                        Designator_1(
                                                         y
                                                        ) [Designator_1]
                                                      ) [Factor_designator]
                                                    ) [More_factor_part]
                                                  ) [More_factor_single]
                                                ) [Term_multi]
                                              ) [More_term_part]
                                            ) [More_term_single]
                                            More_term_part(
                                              Add_op_minus(
                                              ) [Add_op_minus]
                                              Term_single(
                                                Factor_designator(
                                                  Designator_1(
                                                   y
                                                  ) [Designator_1]
                                                ) [Factor_designator]
                                              ) [Term_single]
                                            ) [More_term_part]
                                          ) [More_term_multi]
                                          More_term_part(
                                            Add_op_plus(
                                            ) [Add_op_plus]
                                            Term_single(
                                              Factor_num_const(
                                               1
                                              ) [Factor_num_const]
                                            ) [Term_single]
                                          ) [More_term_part]
                                        ) [More_term_multi]
                                      ) [Expr_neg_term_multi]
                                    ) [Assignment]
                                  ) [Stmt_design]
                                ) [Statement_multi]
                                Stmt_design(
                                  Increment(
                                    Designator_1(
                                     e
                                    ) [Designator_1]
                                  ) [Increment]
                                ) [Stmt_design]
                              ) [Statement_multi]
                              Stmt_print_1(
                                Expr_single(
                                  Term_single(
                                    Factor_designator(
                                      Designator_1(
                                       e
                                      ) [Designator_1]
                                    ) [Factor_designator]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Stmt_print_1]
                            ) [Statement_multi]
                            Stmt_design(
                              Assignment(
                                Designator_1(
                                 z
                                ) [Designator_1]
                                Expr_single(
                                  Term_single(
                                    Factor_new_array(
                                      Type(
                                       char
                                      ) [Type]
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           4
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Factor_new_array]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Assignment]
                            ) [Stmt_design]
                          ) [Statement_multi]
                          Stmt_design(
                            Assignment(
                              Designator_0(
                               z
                                Expr_single(
                                  Term_single(
                                    Factor_num_const(
                                     0
                                    ) [Factor_num_const]
                                  ) [Term_single]
                                ) [Expr_single]
                              ) [Designator_0]
                              Expr_single(
                                Term_single(
                                  Factor_meth_call(
                                    Designator_1(
                                     chr
                                    ) [Designator_1]
                                    Act_Pars_Single(
                                      Expr_single(
                                        Term_single(
                                          Factor_num_const(
                                           72
                                          ) [Factor_num_const]
                                        ) [Term_single]
                                      ) [Expr_single]
                                    ) [Act_Pars_Single]
                                  ) [Factor_meth_call]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Assignment]
                          ) [Stmt_design]
                        ) [Statement_multi]
                        Stmt_design(
                          Assignment(
                            Designator_0(
                             z
                              Expr_single(
                                Term_single(
                                  Factor_num_const(
                                   1
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [Expr_single]
                            ) [Designator_0]
                            Expr_single(
                              Term_single(
                                Factor_char_const(
                                 O
                                ) [Factor_char_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Assignment]
                        ) [Stmt_design]
                      ) [Statement_multi]
                      Stmt_design(
                        Assignment(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_designator(
                                  Designator_1(
                                   g
                                  ) [Designator_1]
                                ) [Factor_designator]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                          Expr_single(
                            Term_single(
                              Factor_char_const(
                               M
                              ) [Factor_char_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Assignment]
                      ) [Stmt_design]
                    ) [Statement_multi]
                    Stmt_design(
                      Assignment(
                        Designator_0(
                         z
                          Expr_term_multi(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 x
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                            More_term_single(
                              More_term_part(
                                Add_op_plus(
                                ) [Add_op_plus]
                                Term_single(
                                  Factor_num_const(
                                   4
                                  ) [Factor_num_const]
                                ) [Term_single]
                              ) [More_term_part]
                            ) [More_term_single]
                          ) [Expr_term_multi]
                        ) [Designator_0]
                        Expr_single(
                          Term_single(
                            Factor_meth_call(
                              Designator_1(
                               chr
                              ) [Designator_1]
                              Act_Pars_Single(
                                Expr_term_multi(
                                  Term_single(
                                    Factor_meth_call(
                                      Designator_1(
                                       ord
                                      ) [Designator_1]
                                      Act_Pars_Single(
                                        Expr_single(
                                          Term_single(
                                            Factor_char_const(
                                             A
                                            ) [Factor_char_const]
                                          ) [Term_single]
                                        ) [Expr_single]
                                      ) [Act_Pars_Single]
                                    ) [Factor_meth_call]
                                  ) [Term_single]
                                  More_term_single(
                                    More_term_part(
                                      Add_op_plus(
                                      ) [Add_op_plus]
                                      Term_single(
                                        Factor_num_const(
                                         4
                                        ) [Factor_num_const]
                                      ) [Term_single]
                                    ) [More_term_part]
                                  ) [More_term_single]
                                ) [Expr_term_multi]
                              ) [Act_Pars_Single]
                            ) [Factor_meth_call]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Assignment]
                    ) [Stmt_design]
                  ) [Statement_multi]
                  Stmt_print_1(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_0(
                           z
                            Expr_single(
                              Term_single(
                                Factor_num_const(
                                 0
                                ) [Factor_num_const]
                              ) [Term_single]
                            ) [Expr_single]
                          ) [Designator_0]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
                Stmt_print_1(
                  Expr_single(
                    Term_single(
                      Factor_designator(
                        Designator_0(
                         z
                          Expr_single(
                            Term_single(
                              Factor_num_const(
                               1
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_single]
                        ) [Designator_0]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_designator(
                      Designator_0(
                       z
                        Expr_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               g
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Designator_0]
                    ) [Factor_designator]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Statement_multi]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_designator(
                    Designator_0(
                     z
                      Expr_term_multi(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             x
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                        More_term_single(
                          More_term_part(
                            Add_op_plus(
                            ) [Add_op_plus]
                            Term_single(
                              Factor_num_const(
                               4
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [More_term_part]
                        ) [More_term_single]
                      ) [Expr_term_multi]
                    ) [Designator_0]
                  ) [Factor_designator]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_meth_call(
                  Designator_1(
                   len
                  ) [Designator_1]
                  Act_Pars_Single(
                    Expr_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           z
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Act_Pars_Single]
                ) [Factor_meth_call]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:08:48,399 - ==============================================================
INFO  18:08:48,414 - Pocetak obrade programa Program na liniji 1
INFO  18:08:48,414 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:08:48,415 - Deklarisana konstanta c na liniji 2
INFO  18:08:48,415 - Deklarisana konstanta d na liniji 2
INFO  18:08:48,415 - Deklarisana konstanta g na liniji 2
INFO  18:08:48,415 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:08:48,415 - Deklarisana promenljiva e na liniji 3
INFO  18:08:48,415 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:08:48,415 - Deklarisan niz z na liniji 3
INFO  18:08:48,416 - Pocetak obrade metode main na liniji 5
INFO  18:08:48,416 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  18:08:48,417 - Deklarisana promenljiva x na liniji 5
INFO  18:08:48,417 - Deklarisana promenljiva y na liniji 5
INFO  18:08:48,417 - Pronadjen tip char u tabeli simbola na liniji 15
INFO  18:08:48,417 - Pronadjen poziv metode (funkcije) chr na liniji 16
INFO  18:08:48,418 - Pronadjen poziv metode (funkcije) ord na liniji 19
INFO  18:08:48,418 - Pronadjen poziv metode (funkcije) chr na liniji 19
INFO  18:08:48,418 - Pronadjen poziv metode (funkcije) len na liniji 24
INFO  18:08:48,418 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:08:48,418 - Zavrsetak obrade programa Program na liniji 1
INFO  18:08:48,418 - ======================TABELA_SIMBOLA==========================
INFO  18:08:48,419 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var x: int
	Local Var y: int

INFO  18:08:48,419 - ==============================================================
INFO  18:08:48,419 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:08:48,419 - ==============================================================
INFO  18:08:48,419 - ======================GENERISANJE_KODA========================
INFO  18:08:48,425 - Generisanje koda uspesno zavrseno!
INFO  18:08:48,426 - Generisanje izlaznog fajla test\program.obj
INFO  18:08:48,427 - ==============================================================
INFO  18:38:23,829 - Obrada ulaznog fajla test\program.mj
INFO  18:38:23,909 - #2 program
INFO  18:38:23,909 - #8 Program
INFO  18:38:23,909 - #5 const
INFO  18:38:23,911 - #8 int
INFO  18:38:23,911 - #8 c
INFO  18:38:23,912 - #24 =
INFO  18:38:23,912 - #9 10
INFO  18:38:23,912 - #28 ,
INFO  18:38:23,913 - #8 d
INFO  18:38:23,913 - #24 =
INFO  18:38:23,913 - #9 99
INFO  18:38:23,914 - #28 ,
INFO  18:38:23,914 - #8 g
INFO  18:38:23,914 - #24 =
INFO  18:38:23,915 - #9 2
INFO  18:38:23,915 - #27 ;
INFO  18:38:23,915 - #8 int
INFO  18:38:23,917 - #8 e
INFO  18:38:23,917 - #27 ;
INFO  18:38:23,917 - #8 char
INFO  18:38:23,919 - #8 z
INFO  18:38:23,919 - #22 [
INFO  18:38:23,919 - #23 ]
INFO  18:38:23,919 - #27 ;
INFO  18:38:23,919 - #20 {
INFO  18:38:23,919 - #6 void
INFO  18:38:23,920 - #8 main
INFO  18:38:23,920 - #29 (
INFO  18:38:23,921 - #30 )
INFO  18:38:23,921 - #8 int
INFO  18:38:23,921 - #8 x
INFO  18:38:23,921 - #28 ,
INFO  18:38:23,921 - #8 y
INFO  18:38:23,921 - #27 ;
INFO  18:38:23,922 - #20 {
INFO  18:38:23,922 - #31 if
INFO  18:38:23,922 - #29 (
INFO  18:38:23,922 - #12 false
INFO  18:38:23,922 - #30 )
INFO  18:38:23,923 - #3 print
INFO  18:38:23,923 - #29 (
INFO  18:38:23,923 - #9 65
INFO  18:38:23,923 - #30 )
INFO  18:38:23,923 - #27 ;
INFO  18:38:23,923 - #3 print
INFO  18:38:23,924 - #29 (
INFO  18:38:23,924 - #9 77
INFO  18:38:23,924 - #30 )
INFO  18:38:23,924 - #27 ;
INFO  18:38:23,924 - #21 }
INFO  18:38:23,925 - #21 }
INFO  18:38:23,926 - =====================SINTAKSNO_STABLO=========================
INFO  18:38:23,929 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             int
            ) [Type]
            Var_multi(
              Var_single(
                Var_normal(
                 x
                ) [Var_normal]
              ) [Var_single]
              Var_normal(
               y
              ) [Var_normal]
            ) [Var_multi]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:38:23,929 - ==============================================================
INFO  18:38:23,942 - Pocetak obrade programa Program na liniji 1
INFO  18:38:23,942 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:38:23,943 - Deklarisana konstanta c na liniji 2
INFO  18:38:23,943 - Deklarisana konstanta d na liniji 2
INFO  18:38:23,944 - Deklarisana konstanta g na liniji 2
INFO  18:38:23,944 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:38:23,944 - Deklarisana promenljiva e na liniji 3
INFO  18:38:23,944 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:38:23,944 - Deklarisan niz z na liniji 3
INFO  18:38:23,945 - Pocetak obrade metode main na liniji 5
INFO  18:38:23,945 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  18:38:23,946 - Deklarisana promenljiva x na liniji 5
INFO  18:38:23,946 - Deklarisana promenljiva y na liniji 5
INFO  18:38:23,946 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:38:23,946 - Zavrsetak obrade programa Program na liniji 1
INFO  18:38:23,946 - ======================TABELA_SIMBOLA==========================
INFO  18:38:23,947 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var x: int
	Local Var y: int

INFO  18:38:23,947 - ==============================================================
INFO  18:38:23,947 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:38:23,947 - ==============================================================
INFO  18:38:23,947 - ======================GENERISANJE_KODA========================
INFO  18:38:23,954 - Generisanje koda uspesno zavrseno!
INFO  18:38:23,955 - Generisanje izlaznog fajla test\program.obj
INFO  18:38:23,955 - ==============================================================
INFO  18:41:04,022 - Obrada ulaznog fajla test\program.mj
INFO  18:41:04,144 - #2 program
INFO  18:41:04,144 - #8 Program
INFO  18:41:04,144 - #5 const
INFO  18:41:04,145 - #8 int
INFO  18:41:04,145 - #8 c
INFO  18:41:04,146 - #24 =
INFO  18:41:04,147 - #9 10
INFO  18:41:04,147 - #28 ,
INFO  18:41:04,148 - #8 d
INFO  18:41:04,148 - #24 =
INFO  18:41:04,148 - #9 99
INFO  18:41:04,148 - #28 ,
INFO  18:41:04,149 - #8 g
INFO  18:41:04,149 - #24 =
INFO  18:41:04,149 - #9 2
INFO  18:41:04,149 - #27 ;
INFO  18:41:04,149 - #8 int
INFO  18:41:04,151 - #8 e
INFO  18:41:04,151 - #27 ;
INFO  18:41:04,151 - #8 char
INFO  18:41:04,153 - #8 z
INFO  18:41:04,153 - #22 [
INFO  18:41:04,153 - #23 ]
INFO  18:41:04,153 - #27 ;
INFO  18:41:04,153 - #20 {
INFO  18:41:04,153 - #6 void
INFO  18:41:04,153 - #8 main
INFO  18:41:04,154 - #29 (
INFO  18:41:04,155 - #30 )
INFO  18:41:04,155 - #8 int
INFO  18:41:04,155 - #8 x
INFO  18:41:04,155 - #28 ,
INFO  18:41:04,155 - #8 y
INFO  18:41:04,155 - #27 ;
INFO  18:41:04,156 - #20 {
INFO  18:41:04,156 - #31 if
INFO  18:41:04,156 - #29 (
INFO  18:41:04,156 - #12 false
INFO  18:41:04,156 - #30 )
INFO  18:41:04,157 - #3 print
INFO  18:41:04,157 - #29 (
INFO  18:41:04,157 - #9 65
INFO  18:41:04,157 - #30 )
INFO  18:41:04,158 - #27 ;
INFO  18:41:04,158 - #3 print
INFO  18:41:04,158 - #29 (
INFO  18:41:04,158 - #9 77
INFO  18:41:04,158 - #30 )
INFO  18:41:04,158 - #27 ;
INFO  18:41:04,159 - #21 }
INFO  18:41:04,159 - #21 }
INFO  18:41:04,160 - =====================SINTAKSNO_STABLO=========================
INFO  18:41:04,162 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_4(
        Method_void_name(
         main
        ) [Method_void_name]
        Var_decl_single(
          Var_declaration(
            Type(
             int
            ) [Type]
            Var_multi(
              Var_single(
                Var_normal(
                 x
                ) [Var_normal]
              ) [Var_single]
              Var_normal(
               y
              ) [Var_normal]
            ) [Var_multi]
          ) [Var_declaration]
        ) [Var_decl_single]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_4]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:41:04,163 - ==============================================================
INFO  18:41:04,180 - Pocetak obrade programa Program na liniji 1
INFO  18:41:04,180 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:41:04,181 - Deklarisana konstanta c na liniji 2
INFO  18:41:04,181 - Deklarisana konstanta d na liniji 2
INFO  18:41:04,181 - Deklarisana konstanta g na liniji 2
INFO  18:41:04,182 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:41:04,182 - Deklarisana promenljiva e na liniji 3
INFO  18:41:04,182 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:41:04,182 - Deklarisan niz z na liniji 3
INFO  18:41:04,183 - Pocetak obrade metode main na liniji 5
INFO  18:41:04,183 - Pronadjen tip int u tabeli simbola na liniji 5
INFO  18:41:04,183 - Deklarisana promenljiva x na liniji 5
INFO  18:41:04,184 - Deklarisana promenljiva y na liniji 5
INFO  18:41:04,184 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:41:04,184 - Zavrsetak obrade programa Program na liniji 1
INFO  18:41:04,184 - ======================TABELA_SIMBOLA==========================
INFO  18:41:04,185 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none
	Local Var x: int
	Local Var y: int

INFO  18:41:04,186 - ==============================================================
INFO  18:41:04,186 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:41:04,186 - ==============================================================
INFO  18:41:04,186 - ======================GENERISANJE_KODA========================
INFO  18:41:04,194 - Generisanje koda uspesno zavrseno!
INFO  18:41:04,195 - Generisanje izlaznog fajla test\program.obj
INFO  18:41:04,195 - ==============================================================
INFO  18:41:57,633 - Obrada ulaznog fajla test\program.mj
INFO  18:41:57,718 - #2 program
INFO  18:41:57,718 - #8 Program
INFO  18:41:57,718 - #5 const
INFO  18:41:57,719 - #8 int
INFO  18:41:57,719 - #8 c
INFO  18:41:57,720 - #24 =
INFO  18:41:57,720 - #9 10
INFO  18:41:57,721 - #28 ,
INFO  18:41:57,722 - #8 d
INFO  18:41:57,722 - #24 =
INFO  18:41:57,722 - #9 99
INFO  18:41:57,722 - #28 ,
INFO  18:41:57,723 - #8 g
INFO  18:41:57,723 - #24 =
INFO  18:41:57,723 - #9 2
INFO  18:41:57,723 - #27 ;
INFO  18:41:57,723 - #8 int
INFO  18:41:57,725 - #8 e
INFO  18:41:57,725 - #27 ;
INFO  18:41:57,725 - #8 char
INFO  18:41:57,728 - #8 z
INFO  18:41:57,728 - #22 [
INFO  18:41:57,728 - #23 ]
INFO  18:41:57,728 - #27 ;
INFO  18:41:57,729 - #20 {
INFO  18:41:57,731 - #6 void
INFO  18:41:57,731 - #8 main
INFO  18:41:57,731 - #29 (
INFO  18:41:57,732 - #30 )
INFO  18:41:57,732 - #20 {
INFO  18:41:57,732 - #31 if
INFO  18:41:57,732 - #29 (
INFO  18:41:57,732 - #12 false
INFO  18:41:57,732 - #30 )
INFO  18:41:57,733 - #3 print
INFO  18:41:57,733 - #29 (
INFO  18:41:57,734 - #9 65
INFO  18:41:57,734 - #30 )
INFO  18:41:57,734 - #27 ;
INFO  18:41:57,734 - #3 print
INFO  18:41:57,734 - #29 (
INFO  18:41:57,734 - #9 77
INFO  18:41:57,734 - #30 )
INFO  18:41:57,734 - #27 ;
INFO  18:41:57,735 - #21 }
INFO  18:41:57,735 - #21 }
INFO  18:41:57,736 - =====================SINTAKSNO_STABLO=========================
INFO  18:41:57,738 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:41:57,738 - ==============================================================
INFO  18:41:57,752 - Pocetak obrade programa Program na liniji 1
INFO  18:41:57,752 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:41:57,753 - Deklarisana konstanta c na liniji 2
INFO  18:41:57,753 - Deklarisana konstanta d na liniji 2
INFO  18:41:57,753 - Deklarisana konstanta g na liniji 2
INFO  18:41:57,753 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:41:57,753 - Deklarisana promenljiva e na liniji 3
INFO  18:41:57,753 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:41:57,753 - Deklarisan niz z na liniji 3
INFO  18:41:57,754 - Pocetak obrade metode main na liniji 5
INFO  18:41:57,754 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:41:57,754 - Zavrsetak obrade programa Program na liniji 1
INFO  18:41:57,755 - ======================TABELA_SIMBOLA==========================
INFO  18:41:57,755 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  18:41:57,755 - ==============================================================
INFO  18:41:57,755 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:41:57,755 - ==============================================================
INFO  18:41:57,756 - ======================GENERISANJE_KODA========================
INFO  18:41:57,761 - Generisanje koda uspesno zavrseno!
INFO  18:41:57,761 - Generisanje izlaznog fajla test\program.obj
INFO  18:41:57,761 - ==============================================================
INFO  18:42:28,455 - Obrada ulaznog fajla test\program.mj
INFO  18:42:28,553 - #2 program
INFO  18:42:28,553 - #8 Program
INFO  18:42:28,553 - #5 const
INFO  18:42:28,554 - #8 int
INFO  18:42:28,554 - #8 c
INFO  18:42:28,556 - #24 =
INFO  18:42:28,556 - #9 10
INFO  18:42:28,556 - #28 ,
INFO  18:42:28,558 - #8 d
INFO  18:42:28,558 - #24 =
INFO  18:42:28,558 - #9 99
INFO  18:42:28,558 - #28 ,
INFO  18:42:28,558 - #8 g
INFO  18:42:28,558 - #24 =
INFO  18:42:28,558 - #9 2
INFO  18:42:28,558 - #27 ;
INFO  18:42:28,559 - #8 int
INFO  18:42:28,560 - #8 e
INFO  18:42:28,560 - #27 ;
INFO  18:42:28,561 - #8 char
INFO  18:42:28,562 - #8 z
INFO  18:42:28,562 - #22 [
INFO  18:42:28,562 - #23 ]
INFO  18:42:28,562 - #27 ;
INFO  18:42:28,563 - #20 {
INFO  18:42:28,563 - #6 void
INFO  18:42:28,563 - #8 main
INFO  18:42:28,563 - #29 (
INFO  18:42:28,564 - #30 )
INFO  18:42:28,564 - #20 {
INFO  18:42:28,564 - #31 if
INFO  18:42:28,564 - #29 (
INFO  18:42:28,565 - #12 false
INFO  18:42:28,565 - #30 )
INFO  18:42:28,566 - #3 print
INFO  18:42:28,566 - #29 (
INFO  18:42:28,566 - #9 65
INFO  18:42:28,566 - #30 )
INFO  18:42:28,566 - #27 ;
INFO  18:42:28,566 - #3 print
INFO  18:42:28,567 - #29 (
INFO  18:42:28,567 - #9 77
INFO  18:42:28,567 - #30 )
INFO  18:42:28,568 - #27 ;
INFO  18:42:28,568 - #21 }
INFO  18:42:28,568 - #21 }
INFO  18:42:28,569 - =====================SINTAKSNO_STABLO=========================
INFO  18:42:28,570 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:42:28,571 - ==============================================================
INFO  18:42:28,587 - Pocetak obrade programa Program na liniji 1
INFO  18:42:28,588 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:42:28,589 - Deklarisana konstanta c na liniji 2
INFO  18:42:28,589 - Deklarisana konstanta d na liniji 2
INFO  18:42:28,589 - Deklarisana konstanta g na liniji 2
INFO  18:42:28,589 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:42:28,589 - Deklarisana promenljiva e na liniji 3
INFO  18:42:28,589 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:42:28,589 - Deklarisan niz z na liniji 3
INFO  18:42:28,590 - Pocetak obrade metode main na liniji 5
INFO  18:42:28,591 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:42:28,591 - Zavrsetak obrade programa Program na liniji 1
INFO  18:42:28,591 - ======================TABELA_SIMBOLA==========================
INFO  18:42:28,591 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  18:42:28,592 - ==============================================================
INFO  18:42:28,592 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:42:28,592 - ==============================================================
INFO  18:42:28,592 - ======================GENERISANJE_KODA========================
INFO  18:42:28,623 - Generisanje koda uspesno zavrseno!
INFO  18:42:28,624 - Generisanje izlaznog fajla test\program.obj
INFO  18:42:28,624 - ==============================================================
INFO  18:42:41,218 - Obrada ulaznog fajla test\program.mj
INFO  18:42:41,300 - #2 program
INFO  18:42:41,300 - #8 Program
INFO  18:42:41,300 - #5 const
INFO  18:42:41,302 - #8 int
INFO  18:42:41,302 - #8 c
INFO  18:42:41,303 - #24 =
INFO  18:42:41,303 - #9 10
INFO  18:42:41,303 - #28 ,
INFO  18:42:41,304 - #8 d
INFO  18:42:41,305 - #24 =
INFO  18:42:41,305 - #9 99
INFO  18:42:41,305 - #28 ,
INFO  18:42:41,305 - #8 g
INFO  18:42:41,305 - #24 =
INFO  18:42:41,305 - #9 2
INFO  18:42:41,305 - #27 ;
INFO  18:42:41,305 - #8 int
INFO  18:42:41,307 - #8 e
INFO  18:42:41,307 - #27 ;
INFO  18:42:41,307 - #8 char
INFO  18:42:41,309 - #8 z
INFO  18:42:41,309 - #22 [
INFO  18:42:41,309 - #23 ]
INFO  18:42:41,309 - #27 ;
INFO  18:42:41,309 - #20 {
INFO  18:42:41,309 - #6 void
INFO  18:42:41,310 - #8 main
INFO  18:42:41,310 - #29 (
INFO  18:42:41,310 - #30 )
INFO  18:42:41,311 - #20 {
INFO  18:42:41,311 - #31 if
INFO  18:42:41,311 - #29 (
INFO  18:42:41,311 - #12 false
INFO  18:42:41,311 - #30 )
INFO  18:42:41,312 - #3 print
INFO  18:42:41,312 - #29 (
INFO  18:42:41,312 - #9 65
INFO  18:42:41,312 - #30 )
INFO  18:42:41,312 - #27 ;
INFO  18:42:41,313 - #3 print
INFO  18:42:41,313 - #29 (
INFO  18:42:41,313 - #9 77
INFO  18:42:41,313 - #30 )
INFO  18:42:41,313 - #27 ;
INFO  18:42:41,313 - #21 }
INFO  18:42:41,314 - #21 }
INFO  18:42:41,315 - =====================SINTAKSNO_STABLO=========================
INFO  18:42:41,316 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:42:41,317 - ==============================================================
INFO  18:42:41,334 - Pocetak obrade programa Program na liniji 1
INFO  18:42:41,334 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:42:41,335 - Deklarisana konstanta c na liniji 2
INFO  18:42:41,335 - Deklarisana konstanta d na liniji 2
INFO  18:42:41,335 - Deklarisana konstanta g na liniji 2
INFO  18:42:41,335 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:42:41,336 - Deklarisana promenljiva e na liniji 3
INFO  18:42:41,336 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:42:41,336 - Deklarisan niz z na liniji 3
INFO  18:42:41,337 - Pocetak obrade metode main na liniji 5
INFO  18:42:41,337 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:42:41,337 - Zavrsetak obrade programa Program na liniji 1
INFO  18:42:41,337 - ======================TABELA_SIMBOLA==========================
INFO  18:42:41,338 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  18:42:41,338 - ==============================================================
INFO  18:42:41,338 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:42:41,338 - ==============================================================
INFO  18:42:41,338 - ======================GENERISANJE_KODA========================
INFO  18:42:41,347 - Generisanje koda uspesno zavrseno!
INFO  18:42:41,348 - Generisanje izlaznog fajla test\program.obj
INFO  18:42:41,348 - ==============================================================
INFO  18:42:47,041 - Obrada ulaznog fajla test\program.mj
INFO  18:42:47,128 - #2 program
INFO  18:42:47,128 - #8 Program
INFO  18:42:47,128 - #5 const
INFO  18:42:47,129 - #8 int
INFO  18:42:47,130 - #8 c
INFO  18:42:47,131 - #24 =
INFO  18:42:47,131 - #9 10
INFO  18:42:47,131 - #28 ,
INFO  18:42:47,132 - #8 d
INFO  18:42:47,132 - #24 =
INFO  18:42:47,132 - #9 99
INFO  18:42:47,132 - #28 ,
INFO  18:42:47,133 - #8 g
INFO  18:42:47,133 - #24 =
INFO  18:42:47,133 - #9 2
INFO  18:42:47,133 - #27 ;
INFO  18:42:47,133 - #8 int
INFO  18:42:47,134 - #8 e
INFO  18:42:47,134 - #27 ;
INFO  18:42:47,135 - #8 char
INFO  18:42:47,136 - #8 z
INFO  18:42:47,136 - #22 [
INFO  18:42:47,136 - #23 ]
INFO  18:42:47,136 - #27 ;
INFO  18:42:47,136 - #20 {
INFO  18:42:47,137 - #6 void
INFO  18:42:47,137 - #8 main
INFO  18:42:47,137 - #29 (
INFO  18:42:47,138 - #30 )
INFO  18:42:47,138 - #20 {
INFO  18:42:47,138 - #31 if
INFO  18:42:47,138 - #29 (
INFO  18:42:47,138 - #12 false
INFO  18:42:47,138 - #30 )
INFO  18:42:47,139 - #3 print
INFO  18:42:47,140 - #29 (
INFO  18:42:47,140 - #9 65
INFO  18:42:47,140 - #30 )
INFO  18:42:47,140 - #27 ;
INFO  18:42:47,140 - #3 print
INFO  18:42:47,141 - #29 (
INFO  18:42:47,141 - #9 77
INFO  18:42:47,141 - #30 )
INFO  18:42:47,141 - #27 ;
INFO  18:42:47,141 - #21 }
INFO  18:42:47,142 - #21 }
INFO  18:42:47,143 - =====================SINTAKSNO_STABLO=========================
INFO  18:42:47,145 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:42:47,147 - ==============================================================
INFO  18:42:47,164 - Pocetak obrade programa Program na liniji 1
INFO  18:42:47,164 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:42:47,165 - Deklarisana konstanta c na liniji 2
INFO  18:42:47,165 - Deklarisana konstanta d na liniji 2
INFO  18:42:47,165 - Deklarisana konstanta g na liniji 2
INFO  18:42:47,165 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:42:47,165 - Deklarisana promenljiva e na liniji 3
INFO  18:42:47,165 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:42:47,165 - Deklarisan niz z na liniji 3
INFO  18:42:47,167 - Pocetak obrade metode main na liniji 5
INFO  18:42:47,167 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:42:47,167 - Zavrsetak obrade programa Program na liniji 1
INFO  18:42:47,167 - ======================TABELA_SIMBOLA==========================
INFO  18:42:47,168 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  18:42:47,168 - ==============================================================
INFO  18:42:47,168 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:42:47,169 - ==============================================================
INFO  18:42:47,169 - ======================GENERISANJE_KODA========================
INFO  18:44:20,332 - Obrada ulaznog fajla test\program.mj
INFO  18:44:20,442 - #2 program
INFO  18:44:20,443 - #8 Program
INFO  18:44:20,443 - #5 const
INFO  18:44:20,444 - #8 int
INFO  18:44:20,444 - #8 c
INFO  18:44:20,445 - #24 =
INFO  18:44:20,445 - #9 10
INFO  18:44:20,445 - #28 ,
INFO  18:44:20,447 - #8 d
INFO  18:44:20,447 - #24 =
INFO  18:44:20,447 - #9 99
INFO  18:44:20,447 - #28 ,
INFO  18:44:20,447 - #8 g
INFO  18:44:20,447 - #24 =
INFO  18:44:20,448 - #9 2
INFO  18:44:20,448 - #27 ;
INFO  18:44:20,448 - #8 int
INFO  18:44:20,449 - #8 e
INFO  18:44:20,450 - #27 ;
INFO  18:44:20,451 - #8 char
INFO  18:44:20,452 - #8 z
INFO  18:44:20,452 - #22 [
INFO  18:44:20,452 - #23 ]
INFO  18:44:20,452 - #27 ;
INFO  18:44:20,453 - #20 {
INFO  18:44:20,453 - #6 void
INFO  18:44:20,453 - #8 main
INFO  18:44:20,453 - #29 (
INFO  18:44:20,454 - #30 )
INFO  18:44:20,454 - #20 {
INFO  18:44:20,454 - #31 if
INFO  18:44:20,454 - #29 (
INFO  18:44:20,454 - #12 false
INFO  18:44:20,454 - #30 )
INFO  18:44:20,455 - #3 print
INFO  18:44:20,456 - #29 (
INFO  18:44:20,456 - #9 65
INFO  18:44:20,456 - #30 )
INFO  18:44:20,456 - #27 ;
INFO  18:44:20,456 - #3 print
INFO  18:44:20,457 - #29 (
INFO  18:44:20,457 - #9 77
INFO  18:44:20,457 - #30 )
INFO  18:44:20,457 - #27 ;
INFO  18:44:20,457 - #21 }
INFO  18:44:20,457 - #21 }
INFO  18:44:20,458 - =====================SINTAKSNO_STABLO=========================
INFO  18:44:20,460 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:44:20,460 - ==============================================================
INFO  18:44:20,475 - Pocetak obrade programa Program na liniji 1
INFO  18:44:20,475 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:44:20,476 - Deklarisana konstanta c na liniji 2
INFO  18:44:20,476 - Deklarisana konstanta d na liniji 2
INFO  18:44:20,476 - Deklarisana konstanta g na liniji 2
INFO  18:44:20,476 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:44:20,476 - Deklarisana promenljiva e na liniji 3
INFO  18:44:20,476 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:44:20,476 - Deklarisan niz z na liniji 3
INFO  18:44:20,477 - Pocetak obrade metode main na liniji 5
INFO  18:44:20,477 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:44:20,477 - Zavrsetak obrade programa Program na liniji 1
INFO  18:44:20,477 - ======================TABELA_SIMBOLA==========================
INFO  18:44:20,478 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  18:44:20,478 - ==============================================================
INFO  18:44:20,478 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:44:20,478 - ==============================================================
INFO  18:44:20,478 - ======================GENERISANJE_KODA========================
INFO  18:44:20,483 - Generisanje koda uspesno zavrseno!
INFO  18:44:20,484 - Generisanje izlaznog fajla test\program.obj
INFO  18:44:20,484 - ==============================================================
INFO  18:44:22,507 - Obrada ulaznog fajla test\program.mj
INFO  18:44:22,596 - #2 program
INFO  18:44:22,596 - #8 Program
INFO  18:44:22,596 - #5 const
INFO  18:44:22,597 - #8 int
INFO  18:44:22,597 - #8 c
INFO  18:44:22,598 - #24 =
INFO  18:44:22,598 - #9 10
INFO  18:44:22,598 - #28 ,
INFO  18:44:22,599 - #8 d
INFO  18:44:22,599 - #24 =
INFO  18:44:22,599 - #9 99
INFO  18:44:22,600 - #28 ,
INFO  18:44:22,600 - #8 g
INFO  18:44:22,600 - #24 =
INFO  18:44:22,600 - #9 2
INFO  18:44:22,600 - #27 ;
INFO  18:44:22,600 - #8 int
INFO  18:44:22,601 - #8 e
INFO  18:44:22,602 - #27 ;
INFO  18:44:22,602 - #8 char
INFO  18:44:22,603 - #8 z
INFO  18:44:22,603 - #22 [
INFO  18:44:22,603 - #23 ]
INFO  18:44:22,603 - #27 ;
INFO  18:44:22,603 - #20 {
INFO  18:44:22,603 - #6 void
INFO  18:44:22,604 - #8 main
INFO  18:44:22,604 - #29 (
INFO  18:44:22,605 - #30 )
INFO  18:44:22,605 - #20 {
INFO  18:44:22,605 - #31 if
INFO  18:44:22,605 - #29 (
INFO  18:44:22,605 - #12 false
INFO  18:44:22,605 - #30 )
INFO  18:44:22,606 - #3 print
INFO  18:44:22,606 - #29 (
INFO  18:44:22,606 - #9 65
INFO  18:44:22,607 - #30 )
INFO  18:44:22,607 - #27 ;
INFO  18:44:22,607 - #3 print
INFO  18:44:22,607 - #29 (
INFO  18:44:22,607 - #9 77
INFO  18:44:22,607 - #30 )
INFO  18:44:22,607 - #27 ;
INFO  18:44:22,608 - #21 }
INFO  18:44:22,608 - #21 }
INFO  18:44:22,609 - =====================SINTAKSNO_STABLO=========================
INFO  18:44:22,611 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:44:22,611 - ==============================================================
INFO  18:44:22,628 - Pocetak obrade programa Program na liniji 1
INFO  18:44:22,629 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:44:22,630 - Deklarisana konstanta c na liniji 2
INFO  18:44:22,630 - Deklarisana konstanta d na liniji 2
INFO  18:44:22,630 - Deklarisana konstanta g na liniji 2
INFO  18:44:22,630 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:44:22,630 - Deklarisana promenljiva e na liniji 3
INFO  18:44:22,631 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:44:22,631 - Deklarisan niz z na liniji 3
INFO  18:44:22,632 - Pocetak obrade metode main na liniji 5
INFO  18:44:22,632 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:44:22,632 - Zavrsetak obrade programa Program na liniji 1
INFO  18:44:22,632 - ======================TABELA_SIMBOLA==========================
INFO  18:44:22,633 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  18:44:22,633 - ==============================================================
INFO  18:44:22,633 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:44:22,633 - ==============================================================
INFO  18:44:22,633 - ======================GENERISANJE_KODA========================
INFO  18:45:05,105 - Obrada ulaznog fajla test\program.mj
INFO  18:45:05,187 - #2 program
INFO  18:45:05,188 - #8 Program
INFO  18:45:05,188 - #5 const
INFO  18:45:05,189 - #8 int
INFO  18:45:05,189 - #8 c
INFO  18:45:05,190 - #24 =
INFO  18:45:05,190 - #9 10
INFO  18:45:05,190 - #28 ,
INFO  18:45:05,193 - #8 d
INFO  18:45:05,193 - #24 =
INFO  18:45:05,193 - #9 99
INFO  18:45:05,193 - #28 ,
INFO  18:45:05,193 - #8 g
INFO  18:45:05,193 - #24 =
INFO  18:45:05,193 - #9 2
INFO  18:45:05,193 - #27 ;
INFO  18:45:05,194 - #8 int
INFO  18:45:05,195 - #8 e
INFO  18:45:05,195 - #27 ;
INFO  18:45:05,196 - #8 char
INFO  18:45:05,197 - #8 z
INFO  18:45:05,197 - #22 [
INFO  18:45:05,197 - #23 ]
INFO  18:45:05,197 - #27 ;
INFO  18:45:05,197 - #20 {
INFO  18:45:05,201 - #6 void
INFO  18:45:05,201 - #8 main
INFO  18:45:05,201 - #29 (
INFO  18:45:05,202 - #30 )
INFO  18:45:05,202 - #20 {
INFO  18:45:05,202 - #31 if
INFO  18:45:05,202 - #29 (
INFO  18:45:05,202 - #12 false
INFO  18:45:05,203 - #30 )
INFO  18:45:05,204 - #3 print
INFO  18:45:05,204 - #29 (
INFO  18:45:05,204 - #9 65
INFO  18:45:05,204 - #30 )
INFO  18:45:05,204 - #27 ;
INFO  18:45:05,204 - #3 print
INFO  18:45:05,204 - #29 (
INFO  18:45:05,204 - #9 77
INFO  18:45:05,205 - #30 )
INFO  18:45:05,205 - #27 ;
INFO  18:45:05,205 - #21 }
INFO  18:45:05,205 - #21 }
INFO  18:45:05,208 - =====================SINTAKSNO_STABLO=========================
INFO  18:45:05,210 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:45:05,210 - ==============================================================
INFO  18:45:05,229 - Pocetak obrade programa Program na liniji 1
INFO  18:45:05,229 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:45:05,230 - Deklarisana konstanta c na liniji 2
INFO  18:45:05,230 - Deklarisana konstanta d na liniji 2
INFO  18:45:05,230 - Deklarisana konstanta g na liniji 2
INFO  18:45:05,231 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:45:05,231 - Deklarisana promenljiva e na liniji 3
INFO  18:45:05,231 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:45:05,231 - Deklarisan niz z na liniji 3
INFO  18:45:05,232 - Pocetak obrade metode main na liniji 5
INFO  18:45:05,232 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:45:05,232 - Zavrsetak obrade programa Program na liniji 1
INFO  18:45:05,232 - ======================TABELA_SIMBOLA==========================
INFO  18:45:05,233 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  18:45:05,233 - ==============================================================
INFO  18:45:05,233 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:45:05,233 - ==============================================================
INFO  18:45:05,233 - ======================GENERISANJE_KODA========================
INFO  18:45:05,237 - Generisanje koda uspesno zavrseno!
INFO  18:45:05,238 - Generisanje izlaznog fajla test\program.obj
INFO  18:45:05,238 - ==============================================================
INFO  18:45:43,350 - Obrada ulaznog fajla test\program.mj
INFO  18:45:43,474 - #2 program
INFO  18:45:43,474 - #8 Program
INFO  18:45:43,474 - #5 const
INFO  18:45:43,476 - #8 int
INFO  18:45:43,476 - #8 c
INFO  18:45:43,477 - #24 =
INFO  18:45:43,477 - #9 10
INFO  18:45:43,478 - #28 ,
INFO  18:45:43,479 - #8 d
INFO  18:45:43,479 - #24 =
INFO  18:45:43,479 - #9 99
INFO  18:45:43,479 - #28 ,
INFO  18:45:43,480 - #8 g
INFO  18:45:43,480 - #24 =
INFO  18:45:43,480 - #9 2
INFO  18:45:43,480 - #27 ;
INFO  18:45:43,480 - #8 int
INFO  18:45:43,482 - #8 e
INFO  18:45:43,482 - #27 ;
INFO  18:45:43,483 - #8 char
INFO  18:45:43,484 - #8 z
INFO  18:45:43,484 - #22 [
INFO  18:45:43,484 - #23 ]
INFO  18:45:43,484 - #27 ;
INFO  18:45:43,485 - #20 {
INFO  18:45:43,485 - #6 void
INFO  18:45:43,485 - #8 main
INFO  18:45:43,485 - #29 (
INFO  18:45:43,486 - #30 )
INFO  18:45:43,486 - #20 {
INFO  18:45:43,486 - #31 if
INFO  18:45:43,486 - #29 (
INFO  18:45:43,487 - #12 false
INFO  18:45:43,487 - #30 )
INFO  18:45:43,488 - #3 print
INFO  18:45:43,488 - #29 (
INFO  18:45:43,488 - #9 65
INFO  18:45:43,488 - #30 )
INFO  18:45:43,489 - #27 ;
INFO  18:45:43,489 - #3 print
INFO  18:45:43,489 - #29 (
INFO  18:45:43,490 - #9 77
INFO  18:45:43,491 - #30 )
INFO  18:45:43,491 - #27 ;
INFO  18:45:43,492 - #21 }
INFO  18:45:43,492 - #21 }
INFO  18:45:43,493 - =====================SINTAKSNO_STABLO=========================
INFO  18:45:43,495 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:45:43,495 - ==============================================================
INFO  18:45:43,510 - Pocetak obrade programa Program na liniji 1
INFO  18:45:43,510 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:45:43,512 - Deklarisana konstanta c na liniji 2
INFO  18:45:43,512 - Deklarisana konstanta d na liniji 2
INFO  18:45:43,512 - Deklarisana konstanta g na liniji 2
INFO  18:45:43,512 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:45:43,512 - Deklarisana promenljiva e na liniji 3
INFO  18:45:43,512 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:45:43,512 - Deklarisan niz z na liniji 3
INFO  18:45:43,513 - Pocetak obrade metode main na liniji 5
INFO  18:45:43,514 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:45:43,514 - Zavrsetak obrade programa Program na liniji 1
INFO  18:45:43,514 - ======================TABELA_SIMBOLA==========================
INFO  18:45:43,515 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  18:45:43,515 - ==============================================================
INFO  18:45:43,515 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:45:43,515 - ==============================================================
INFO  18:45:43,515 - ======================GENERISANJE_KODA========================
INFO  18:45:43,521 - Generisanje koda uspesno zavrseno!
INFO  18:45:43,522 - Generisanje izlaznog fajla test\program.obj
INFO  18:45:43,522 - ==============================================================
INFO  18:45:53,800 - Obrada ulaznog fajla test\program.mj
INFO  18:45:53,899 - #2 program
INFO  18:45:53,900 - #8 Program
INFO  18:45:53,900 - #5 const
INFO  18:45:53,901 - #8 int
INFO  18:45:53,902 - #8 c
INFO  18:45:53,903 - #24 =
INFO  18:45:53,903 - #9 10
INFO  18:45:53,903 - #28 ,
INFO  18:45:53,905 - #8 d
INFO  18:45:53,905 - #24 =
INFO  18:45:53,905 - #9 99
INFO  18:45:53,905 - #28 ,
INFO  18:45:53,905 - #8 g
INFO  18:45:53,905 - #24 =
INFO  18:45:53,905 - #9 2
INFO  18:45:53,906 - #27 ;
INFO  18:45:53,906 - #8 int
INFO  18:45:53,907 - #8 e
INFO  18:45:53,907 - #27 ;
INFO  18:45:53,908 - #8 char
INFO  18:45:53,909 - #8 z
INFO  18:45:53,909 - #22 [
INFO  18:45:53,909 - #23 ]
INFO  18:45:53,909 - #27 ;
INFO  18:45:53,909 - #20 {
INFO  18:45:53,909 - #6 void
INFO  18:45:53,909 - #8 main
INFO  18:45:53,910 - #29 (
INFO  18:45:53,911 - #30 )
INFO  18:45:53,911 - #20 {
INFO  18:45:53,911 - #31 if
INFO  18:45:53,911 - #29 (
INFO  18:45:53,911 - #12 false
INFO  18:45:53,911 - #30 )
INFO  18:45:53,912 - #3 print
INFO  18:45:53,912 - #29 (
INFO  18:45:53,913 - #9 65
INFO  18:45:53,913 - #30 )
INFO  18:45:53,913 - #27 ;
INFO  18:45:53,913 - #3 print
INFO  18:45:53,913 - #29 (
INFO  18:45:53,913 - #9 77
INFO  18:45:53,913 - #30 )
INFO  18:45:53,914 - #27 ;
INFO  18:45:53,914 - #21 }
INFO  18:45:53,914 - #21 }
INFO  18:45:53,915 - =====================SINTAKSNO_STABLO=========================
INFO  18:45:53,916 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:45:53,917 - ==============================================================
INFO  18:45:53,933 - Pocetak obrade programa Program na liniji 1
INFO  18:45:53,934 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:45:53,935 - Deklarisana konstanta c na liniji 2
INFO  18:45:53,935 - Deklarisana konstanta d na liniji 2
INFO  18:45:53,935 - Deklarisana konstanta g na liniji 2
INFO  18:45:53,935 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:45:53,935 - Deklarisana promenljiva e na liniji 3
INFO  18:45:53,935 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:45:53,935 - Deklarisan niz z na liniji 3
INFO  18:45:53,936 - Pocetak obrade metode main na liniji 5
INFO  18:45:53,936 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:45:53,936 - Zavrsetak obrade programa Program na liniji 1
INFO  18:45:53,937 - ======================TABELA_SIMBOLA==========================
INFO  18:45:53,937 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  18:45:53,937 - ==============================================================
INFO  18:45:53,937 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:45:53,938 - ==============================================================
INFO  18:45:53,938 - ======================GENERISANJE_KODA========================
INFO  18:46:58,959 - Obrada ulaznog fajla test\program.mj
INFO  18:46:59,046 - #2 program
INFO  18:46:59,046 - #8 Program
INFO  18:46:59,046 - #5 const
INFO  18:46:59,047 - #8 int
INFO  18:46:59,047 - #8 c
INFO  18:46:59,047 - #24 =
INFO  18:46:59,048 - #9 10
INFO  18:46:59,048 - #28 ,
INFO  18:46:59,049 - #8 d
INFO  18:46:59,049 - #24 =
INFO  18:46:59,049 - #9 99
INFO  18:46:59,049 - #28 ,
INFO  18:46:59,049 - #8 g
INFO  18:46:59,049 - #24 =
INFO  18:46:59,049 - #9 2
INFO  18:46:59,049 - #27 ;
INFO  18:46:59,050 - #8 int
INFO  18:46:59,051 - #8 e
INFO  18:46:59,051 - #27 ;
INFO  18:46:59,051 - #8 char
INFO  18:46:59,052 - #8 z
INFO  18:46:59,052 - #22 [
INFO  18:46:59,052 - #23 ]
INFO  18:46:59,052 - #27 ;
INFO  18:46:59,053 - #20 {
INFO  18:46:59,053 - #6 void
INFO  18:46:59,053 - #8 main
INFO  18:46:59,053 - #29 (
INFO  18:46:59,054 - #30 )
INFO  18:46:59,054 - #20 {
INFO  18:46:59,054 - #31 if
INFO  18:46:59,054 - #29 (
INFO  18:46:59,054 - #12 false
INFO  18:46:59,054 - #30 )
INFO  18:46:59,055 - #3 print
INFO  18:46:59,055 - #29 (
INFO  18:46:59,055 - #9 65
INFO  18:46:59,055 - #30 )
INFO  18:46:59,055 - #27 ;
INFO  18:46:59,055 - #3 print
INFO  18:46:59,056 - #29 (
INFO  18:46:59,056 - #9 77
INFO  18:46:59,056 - #30 )
INFO  18:46:59,056 - #27 ;
INFO  18:46:59,056 - #21 }
INFO  18:46:59,056 - #21 }
INFO  18:46:59,057 - =====================SINTAKSNO_STABLO=========================
INFO  18:46:59,058 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:46:59,059 - ==============================================================
INFO  18:46:59,074 - Pocetak obrade programa Program na liniji 1
INFO  18:46:59,075 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:46:59,075 - Deklarisana konstanta c na liniji 2
INFO  18:46:59,076 - Deklarisana konstanta d na liniji 2
INFO  18:46:59,076 - Deklarisana konstanta g na liniji 2
INFO  18:46:59,076 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:46:59,076 - Deklarisana promenljiva e na liniji 3
INFO  18:46:59,076 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:46:59,076 - Deklarisan niz z na liniji 3
INFO  18:46:59,077 - Pocetak obrade metode main na liniji 5
INFO  18:46:59,078 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:46:59,078 - Zavrsetak obrade programa Program na liniji 1
INFO  18:46:59,078 - ======================TABELA_SIMBOLA==========================
INFO  18:46:59,079 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  18:46:59,079 - ==============================================================
INFO  18:46:59,079 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:46:59,079 - ==============================================================
INFO  18:46:59,080 - ======================GENERISANJE_KODA========================
INFO  18:46:59,085 - Generisanje koda uspesno zavrseno!
INFO  18:46:59,086 - Generisanje izlaznog fajla test\program.obj
INFO  18:46:59,086 - ==============================================================
INFO  18:47:00,973 - Obrada ulaznog fajla test\program.mj
INFO  18:47:01,073 - #2 program
INFO  18:47:01,073 - #8 Program
INFO  18:47:01,073 - #5 const
INFO  18:47:01,074 - #8 int
INFO  18:47:01,074 - #8 c
INFO  18:47:01,075 - #24 =
INFO  18:47:01,075 - #9 10
INFO  18:47:01,075 - #28 ,
INFO  18:47:01,076 - #8 d
INFO  18:47:01,077 - #24 =
INFO  18:47:01,077 - #9 99
INFO  18:47:01,077 - #28 ,
INFO  18:47:01,077 - #8 g
INFO  18:47:01,077 - #24 =
INFO  18:47:01,077 - #9 2
INFO  18:47:01,077 - #27 ;
INFO  18:47:01,077 - #8 int
INFO  18:47:01,078 - #8 e
INFO  18:47:01,079 - #27 ;
INFO  18:47:01,079 - #8 char
INFO  18:47:01,080 - #8 z
INFO  18:47:01,080 - #22 [
INFO  18:47:01,080 - #23 ]
INFO  18:47:01,081 - #27 ;
INFO  18:47:01,081 - #20 {
INFO  18:47:01,081 - #6 void
INFO  18:47:01,081 - #8 main
INFO  18:47:01,081 - #29 (
INFO  18:47:01,082 - #30 )
INFO  18:47:01,082 - #20 {
INFO  18:47:01,082 - #31 if
INFO  18:47:01,082 - #29 (
INFO  18:47:01,082 - #12 false
INFO  18:47:01,082 - #30 )
INFO  18:47:01,084 - #3 print
INFO  18:47:01,084 - #29 (
INFO  18:47:01,084 - #9 65
INFO  18:47:01,084 - #30 )
INFO  18:47:01,084 - #27 ;
INFO  18:47:01,084 - #3 print
INFO  18:47:01,085 - #29 (
INFO  18:47:01,085 - #9 77
INFO  18:47:01,085 - #30 )
INFO  18:47:01,085 - #27 ;
INFO  18:47:01,085 - #21 }
INFO  18:47:01,086 - #21 }
INFO  18:47:01,086 - =====================SINTAKSNO_STABLO=========================
INFO  18:47:01,088 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:47:01,089 - ==============================================================
INFO  18:47:01,105 - Pocetak obrade programa Program na liniji 1
INFO  18:47:01,106 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:47:01,107 - Deklarisana konstanta c na liniji 2
INFO  18:47:01,107 - Deklarisana konstanta d na liniji 2
INFO  18:47:01,107 - Deklarisana konstanta g na liniji 2
INFO  18:47:01,107 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:47:01,107 - Deklarisana promenljiva e na liniji 3
INFO  18:47:01,107 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:47:01,107 - Deklarisan niz z na liniji 3
INFO  18:47:01,108 - Pocetak obrade metode main na liniji 5
INFO  18:47:01,109 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:47:01,109 - Zavrsetak obrade programa Program na liniji 1
INFO  18:47:01,109 - ======================TABELA_SIMBOLA==========================
INFO  18:47:01,109 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  18:47:01,110 - ==============================================================
INFO  18:47:01,110 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:47:01,110 - ==============================================================
INFO  18:47:01,110 - ======================GENERISANJE_KODA========================
INFO  18:47:01,116 - Generisanje koda uspesno zavrseno!
INFO  18:47:01,116 - Generisanje izlaznog fajla test\program.obj
INFO  18:47:01,116 - ==============================================================
INFO  18:48:36,081 - Obrada ulaznog fajla test\program.mj
INFO  18:48:36,161 - #2 program
INFO  18:48:36,161 - #8 Program
INFO  18:48:36,161 - #5 const
INFO  18:48:36,162 - #8 int
INFO  18:48:36,162 - #8 c
INFO  18:48:36,163 - #24 =
INFO  18:48:36,163 - #9 10
INFO  18:48:36,164 - #28 ,
INFO  18:48:36,165 - #8 d
INFO  18:48:36,165 - #24 =
INFO  18:48:36,165 - #9 99
INFO  18:48:36,165 - #28 ,
INFO  18:48:36,165 - #8 g
INFO  18:48:36,165 - #24 =
INFO  18:48:36,165 - #9 2
INFO  18:48:36,165 - #27 ;
INFO  18:48:36,166 - #8 int
INFO  18:48:36,167 - #8 e
INFO  18:48:36,167 - #27 ;
INFO  18:48:36,167 - #8 char
INFO  18:48:36,168 - #8 z
INFO  18:48:36,168 - #22 [
INFO  18:48:36,168 - #23 ]
INFO  18:48:36,168 - #27 ;
INFO  18:48:36,169 - #20 {
INFO  18:48:36,169 - #6 void
INFO  18:48:36,169 - #8 main
INFO  18:48:36,169 - #29 (
INFO  18:48:36,170 - #30 )
INFO  18:48:36,170 - #20 {
INFO  18:48:36,170 - #31 if
INFO  18:48:36,170 - #29 (
INFO  18:48:36,170 - #12 false
INFO  18:48:36,170 - #30 )
INFO  18:48:36,171 - #3 print
INFO  18:48:36,171 - #29 (
INFO  18:48:36,171 - #9 65
INFO  18:48:36,171 - #30 )
INFO  18:48:36,171 - #27 ;
INFO  18:48:36,171 - #3 print
INFO  18:48:36,172 - #29 (
INFO  18:48:36,172 - #9 77
INFO  18:48:36,172 - #30 )
INFO  18:48:36,172 - #27 ;
INFO  18:48:36,172 - #21 }
INFO  18:48:36,172 - #21 }
INFO  18:48:36,173 - =====================SINTAKSNO_STABLO=========================
INFO  18:48:36,174 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:48:36,183 - ==============================================================
INFO  18:48:36,203 - Pocetak obrade programa Program na liniji 1
INFO  18:48:36,204 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:48:36,204 - Deklarisana konstanta c na liniji 2
INFO  18:48:36,205 - Deklarisana konstanta d na liniji 2
INFO  18:48:36,205 - Deklarisana konstanta g na liniji 2
INFO  18:48:36,205 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:48:36,206 - Deklarisana promenljiva e na liniji 3
INFO  18:48:36,206 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  18:48:36,206 - Deklarisan niz z na liniji 3
INFO  18:48:36,208 - Pocetak obrade metode main na liniji 5
INFO  18:48:36,208 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:48:36,208 - Zavrsetak obrade programa Program na liniji 1
INFO  18:48:36,208 - ======================TABELA_SIMBOLA==========================
INFO  18:48:36,209 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  18:48:36,209 - ==============================================================
INFO  18:48:36,209 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:48:36,209 - ==============================================================
INFO  18:48:36,209 - ======================GENERISANJE_KODA========================
INFO  19:02:57,906 - Obrada ulaznog fajla test\program.mj
INFO  19:02:57,999 - #2 program
INFO  19:02:57,999 - #8 Program
INFO  19:02:57,999 - #5 const
INFO  19:02:58,000 - #8 int
INFO  19:02:58,000 - #8 c
INFO  19:02:58,001 - #24 =
INFO  19:02:58,001 - #9 10
INFO  19:02:58,001 - #28 ,
INFO  19:02:58,002 - #8 d
INFO  19:02:58,002 - #24 =
INFO  19:02:58,002 - #9 99
INFO  19:02:58,002 - #28 ,
INFO  19:02:58,003 - #8 g
INFO  19:02:58,003 - #24 =
INFO  19:02:58,003 - #9 2
INFO  19:02:58,003 - #27 ;
INFO  19:02:58,003 - #8 int
INFO  19:02:58,004 - #8 e
INFO  19:02:58,004 - #27 ;
INFO  19:02:58,004 - #8 char
INFO  19:02:58,005 - #8 z
INFO  19:02:58,005 - #22 [
INFO  19:02:58,005 - #23 ]
INFO  19:02:58,006 - #27 ;
INFO  19:02:58,006 - #20 {
INFO  19:02:58,006 - #6 void
INFO  19:02:58,006 - #8 main
INFO  19:02:58,006 - #29 (
INFO  19:02:58,007 - #30 )
INFO  19:02:58,007 - #20 {
INFO  19:02:58,007 - #31 if
INFO  19:02:58,007 - #29 (
INFO  19:02:58,007 - #12 false
INFO  19:02:58,007 - #30 )
INFO  19:02:58,008 - #3 print
INFO  19:02:58,008 - #29 (
INFO  19:02:58,008 - #9 65
INFO  19:02:58,008 - #30 )
INFO  19:02:58,008 - #27 ;
INFO  19:02:58,008 - #3 print
INFO  19:02:58,009 - #29 (
INFO  19:02:58,009 - #9 77
INFO  19:02:58,009 - #30 )
INFO  19:02:58,009 - #27 ;
INFO  19:02:58,009 - #21 }
INFO  19:02:58,009 - #21 }
INFO  19:02:58,010 - =====================SINTAKSNO_STABLO=========================
INFO  19:02:58,011 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:02:58,012 - ==============================================================
INFO  19:02:58,023 - Pocetak obrade programa Program na liniji 1
INFO  19:02:58,023 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:02:58,024 - Deklarisana konstanta c na liniji 2
INFO  19:02:58,024 - Deklarisana konstanta d na liniji 2
INFO  19:02:58,024 - Deklarisana konstanta g na liniji 2
INFO  19:02:58,025 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:02:58,025 - Deklarisana promenljiva e na liniji 3
INFO  19:02:58,025 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:02:58,025 - Deklarisan niz z na liniji 3
INFO  19:02:58,026 - Pocetak obrade metode main na liniji 5
INFO  19:02:58,026 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:02:58,026 - Zavrsetak obrade programa Program na liniji 1
INFO  19:02:58,026 - ======================TABELA_SIMBOLA==========================
INFO  19:02:58,027 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  19:02:58,027 - ==============================================================
INFO  19:02:58,027 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:02:58,027 - ==============================================================
INFO  19:02:58,027 - ======================GENERISANJE_KODA========================
INFO  19:02:58,033 - Generisanje koda uspesno zavrseno!
INFO  19:02:58,033 - Generisanje izlaznog fajla test\program.obj
INFO  19:02:58,033 - ==============================================================
INFO  19:03:37,519 - Obrada ulaznog fajla test\program.mj
INFO  19:03:37,603 - #2 program
INFO  19:03:37,603 - #8 Program
INFO  19:03:37,603 - #5 const
INFO  19:03:37,605 - #8 int
INFO  19:03:37,605 - #8 c
INFO  19:03:37,606 - #24 =
INFO  19:03:37,606 - #9 10
INFO  19:03:37,606 - #28 ,
INFO  19:03:37,607 - #8 d
INFO  19:03:37,608 - #24 =
INFO  19:03:37,608 - #9 99
INFO  19:03:37,608 - #28 ,
INFO  19:03:37,608 - #8 g
INFO  19:03:37,608 - #24 =
INFO  19:03:37,608 - #9 2
INFO  19:03:37,608 - #27 ;
INFO  19:03:37,609 - #8 int
INFO  19:03:37,610 - #8 e
INFO  19:03:37,610 - #27 ;
INFO  19:03:37,610 - #8 char
INFO  19:03:37,611 - #8 z
INFO  19:03:37,612 - #22 [
INFO  19:03:37,612 - #23 ]
INFO  19:03:37,612 - #27 ;
INFO  19:03:37,612 - #20 {
INFO  19:03:37,612 - #6 void
INFO  19:03:37,612 - #8 main
INFO  19:03:37,612 - #29 (
INFO  19:03:37,613 - #30 )
INFO  19:03:37,613 - #20 {
INFO  19:03:37,613 - #31 if
INFO  19:03:37,614 - #29 (
INFO  19:03:37,614 - #12 false
INFO  19:03:37,614 - #30 )
INFO  19:03:37,615 - #3 print
INFO  19:03:37,615 - #29 (
INFO  19:03:37,615 - #9 65
INFO  19:03:37,615 - #30 )
INFO  19:03:37,615 - #27 ;
INFO  19:03:37,615 - #3 print
INFO  19:03:37,616 - #29 (
INFO  19:03:37,616 - #9 77
INFO  19:03:37,616 - #30 )
INFO  19:03:37,616 - #27 ;
INFO  19:03:37,616 - #21 }
INFO  19:03:37,616 - #21 }
INFO  19:03:37,617 - =====================SINTAKSNO_STABLO=========================
INFO  19:03:37,619 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:03:37,620 - ==============================================================
INFO  19:03:37,632 - Pocetak obrade programa Program na liniji 1
INFO  19:03:37,633 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:03:37,634 - Deklarisana konstanta c na liniji 2
INFO  19:03:37,634 - Deklarisana konstanta d na liniji 2
INFO  19:03:37,634 - Deklarisana konstanta g na liniji 2
INFO  19:03:37,634 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:03:37,634 - Deklarisana promenljiva e na liniji 3
INFO  19:03:37,635 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:03:37,635 - Deklarisan niz z na liniji 3
INFO  19:03:37,636 - Pocetak obrade metode main na liniji 5
INFO  19:03:37,636 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:03:37,636 - Zavrsetak obrade programa Program na liniji 1
INFO  19:03:37,636 - ======================TABELA_SIMBOLA==========================
INFO  19:03:37,637 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  19:03:37,637 - ==============================================================
INFO  19:03:37,637 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:03:37,637 - ==============================================================
INFO  19:03:37,637 - ======================GENERISANJE_KODA========================
INFO  19:04:18,400 - Obrada ulaznog fajla test\program.mj
INFO  19:04:18,501 - #2 program
INFO  19:04:18,501 - #8 Program
INFO  19:04:18,501 - #5 const
INFO  19:04:18,502 - #8 int
INFO  19:04:18,502 - #8 c
INFO  19:04:18,503 - #24 =
INFO  19:04:18,504 - #9 10
INFO  19:04:18,504 - #28 ,
INFO  19:04:18,505 - #8 d
INFO  19:04:18,505 - #24 =
INFO  19:04:18,505 - #9 99
INFO  19:04:18,506 - #28 ,
INFO  19:04:18,506 - #8 g
INFO  19:04:18,506 - #24 =
INFO  19:04:18,506 - #9 2
INFO  19:04:18,506 - #27 ;
INFO  19:04:18,506 - #8 int
INFO  19:04:18,507 - #8 e
INFO  19:04:18,507 - #27 ;
INFO  19:04:18,508 - #8 char
INFO  19:04:18,509 - #8 z
INFO  19:04:18,509 - #22 [
INFO  19:04:18,509 - #23 ]
INFO  19:04:18,509 - #27 ;
INFO  19:04:18,509 - #20 {
INFO  19:04:18,510 - #6 void
INFO  19:04:18,510 - #8 main
INFO  19:04:18,510 - #29 (
INFO  19:04:18,511 - #30 )
INFO  19:04:18,511 - #20 {
INFO  19:04:18,511 - #31 if
INFO  19:04:18,511 - #29 (
INFO  19:04:18,512 - #12 false
INFO  19:04:18,512 - #30 )
INFO  19:04:18,512 - #3 print
INFO  19:04:18,513 - #29 (
INFO  19:04:18,513 - #9 65
INFO  19:04:18,513 - #30 )
INFO  19:04:18,513 - #27 ;
INFO  19:04:18,513 - #3 print
INFO  19:04:18,513 - #29 (
INFO  19:04:18,514 - #9 77
INFO  19:04:18,514 - #30 )
INFO  19:04:18,514 - #27 ;
INFO  19:04:18,514 - #21 }
INFO  19:04:18,514 - #21 }
INFO  19:04:18,515 - =====================SINTAKSNO_STABLO=========================
INFO  19:04:18,516 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:04:18,517 - ==============================================================
INFO  19:04:18,532 - Pocetak obrade programa Program na liniji 1
INFO  19:04:18,532 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:04:18,533 - Deklarisana konstanta c na liniji 2
INFO  19:04:18,533 - Deklarisana konstanta d na liniji 2
INFO  19:04:18,533 - Deklarisana konstanta g na liniji 2
INFO  19:04:18,534 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:04:18,534 - Deklarisana promenljiva e na liniji 3
INFO  19:04:18,534 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:04:18,534 - Deklarisan niz z na liniji 3
INFO  19:04:18,535 - Pocetak obrade metode main na liniji 5
INFO  19:04:18,535 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:04:18,535 - Zavrsetak obrade programa Program na liniji 1
INFO  19:04:18,535 - ======================TABELA_SIMBOLA==========================
INFO  19:04:18,536 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  19:04:18,536 - ==============================================================
INFO  19:04:18,536 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:04:18,536 - ==============================================================
INFO  19:04:18,536 - ======================GENERISANJE_KODA========================
INFO  19:04:49,597 - Obrada ulaznog fajla test\program.mj
INFO  19:04:49,692 - #2 program
INFO  19:04:49,692 - #8 Program
INFO  19:04:49,692 - #5 const
INFO  19:04:49,693 - #8 int
INFO  19:04:49,693 - #8 c
INFO  19:04:49,694 - #24 =
INFO  19:04:49,694 - #9 10
INFO  19:04:49,694 - #28 ,
INFO  19:04:49,696 - #8 d
INFO  19:04:49,696 - #24 =
INFO  19:04:49,696 - #9 99
INFO  19:04:49,696 - #28 ,
INFO  19:04:49,696 - #8 g
INFO  19:04:49,696 - #24 =
INFO  19:04:49,696 - #9 2
INFO  19:04:49,696 - #27 ;
INFO  19:04:49,697 - #8 int
INFO  19:04:49,698 - #8 e
INFO  19:04:49,698 - #27 ;
INFO  19:04:49,698 - #8 char
INFO  19:04:49,699 - #8 z
INFO  19:04:49,700 - #22 [
INFO  19:04:49,700 - #23 ]
INFO  19:04:49,700 - #27 ;
INFO  19:04:49,700 - #20 {
INFO  19:04:49,700 - #6 void
INFO  19:04:49,700 - #8 main
INFO  19:04:49,700 - #29 (
INFO  19:04:49,701 - #30 )
INFO  19:04:49,701 - #20 {
INFO  19:04:49,701 - #31 if
INFO  19:04:49,701 - #29 (
INFO  19:04:49,702 - #12 false
INFO  19:04:49,702 - #30 )
INFO  19:04:49,702 - #3 print
INFO  19:04:49,703 - #29 (
INFO  19:04:49,703 - #9 65
INFO  19:04:49,703 - #30 )
INFO  19:04:49,703 - #27 ;
INFO  19:04:49,703 - #3 print
INFO  19:04:49,703 - #29 (
INFO  19:04:49,703 - #9 77
INFO  19:04:49,704 - #30 )
INFO  19:04:49,704 - #27 ;
INFO  19:04:49,704 - #21 }
INFO  19:04:49,704 - #21 }
INFO  19:04:49,705 - =====================SINTAKSNO_STABLO=========================
INFO  19:04:49,706 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:04:49,707 - ==============================================================
INFO  19:04:49,719 - Pocetak obrade programa Program na liniji 1
INFO  19:04:49,719 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:04:49,720 - Deklarisana konstanta c na liniji 2
INFO  19:04:49,720 - Deklarisana konstanta d na liniji 2
INFO  19:04:49,720 - Deklarisana konstanta g na liniji 2
INFO  19:04:49,720 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:04:49,720 - Deklarisana promenljiva e na liniji 3
INFO  19:04:49,721 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:04:49,721 - Deklarisan niz z na liniji 3
INFO  19:04:49,722 - Pocetak obrade metode main na liniji 5
INFO  19:04:49,722 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:04:49,722 - Zavrsetak obrade programa Program na liniji 1
INFO  19:04:49,722 - ======================TABELA_SIMBOLA==========================
INFO  19:04:49,723 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  19:04:49,723 - ==============================================================
INFO  19:04:49,723 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:04:49,723 - ==============================================================
INFO  19:04:49,723 - ======================GENERISANJE_KODA========================
INFO  19:05:09,508 - Obrada ulaznog fajla test\program.mj
INFO  19:05:09,598 - #2 program
INFO  19:05:09,598 - #8 Program
INFO  19:05:09,598 - #5 const
INFO  19:05:09,600 - #8 int
INFO  19:05:09,600 - #8 c
INFO  19:05:09,601 - #24 =
INFO  19:05:09,601 - #9 10
INFO  19:05:09,601 - #28 ,
INFO  19:05:09,602 - #8 d
INFO  19:05:09,603 - #24 =
INFO  19:05:09,603 - #9 99
INFO  19:05:09,603 - #28 ,
INFO  19:05:09,603 - #8 g
INFO  19:05:09,603 - #24 =
INFO  19:05:09,603 - #9 2
INFO  19:05:09,603 - #27 ;
INFO  19:05:09,604 - #8 int
INFO  19:05:09,605 - #8 e
INFO  19:05:09,605 - #27 ;
INFO  19:05:09,605 - #8 char
INFO  19:05:09,607 - #8 z
INFO  19:05:09,607 - #22 [
INFO  19:05:09,607 - #23 ]
INFO  19:05:09,607 - #27 ;
INFO  19:05:09,607 - #20 {
INFO  19:05:09,607 - #6 void
INFO  19:05:09,607 - #8 main
INFO  19:05:09,608 - #29 (
INFO  19:05:09,608 - #30 )
INFO  19:05:09,609 - #20 {
INFO  19:05:09,609 - #31 if
INFO  19:05:09,609 - #29 (
INFO  19:05:09,609 - #12 false
INFO  19:05:09,609 - #30 )
INFO  19:05:09,610 - #3 print
INFO  19:05:09,610 - #29 (
INFO  19:05:09,610 - #9 65
INFO  19:05:09,610 - #30 )
INFO  19:05:09,610 - #27 ;
INFO  19:05:09,610 - #3 print
INFO  19:05:09,611 - #29 (
INFO  19:05:09,611 - #9 77
INFO  19:05:09,611 - #30 )
INFO  19:05:09,611 - #27 ;
INFO  19:05:09,611 - #21 }
INFO  19:05:09,612 - #21 }
INFO  19:05:09,612 - =====================SINTAKSNO_STABLO=========================
INFO  19:05:09,614 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:05:09,615 - ==============================================================
INFO  19:05:09,633 - Pocetak obrade programa Program na liniji 1
INFO  19:05:09,634 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:05:09,635 - Deklarisana konstanta c na liniji 2
INFO  19:05:09,635 - Deklarisana konstanta d na liniji 2
INFO  19:05:09,635 - Deklarisana konstanta g na liniji 2
INFO  19:05:09,635 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:05:09,635 - Deklarisana promenljiva e na liniji 3
INFO  19:05:09,635 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:05:09,636 - Deklarisan niz z na liniji 3
INFO  19:05:09,636 - Pocetak obrade metode main na liniji 5
INFO  19:05:09,637 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:05:09,637 - Zavrsetak obrade programa Program na liniji 1
INFO  19:05:09,637 - ======================TABELA_SIMBOLA==========================
INFO  19:05:09,638 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  19:05:09,638 - ==============================================================
INFO  19:05:09,638 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:05:09,638 - ==============================================================
INFO  19:05:09,638 - ======================GENERISANJE_KODA========================
INFO  19:05:19,459 - Obrada ulaznog fajla test\program.mj
INFO  19:05:19,529 - #2 program
INFO  19:05:19,530 - #8 Program
INFO  19:05:19,530 - #5 const
INFO  19:05:19,531 - #8 int
INFO  19:05:19,531 - #8 c
INFO  19:05:19,531 - #24 =
INFO  19:05:19,532 - #9 10
INFO  19:05:19,532 - #28 ,
INFO  19:05:19,533 - #8 d
INFO  19:05:19,533 - #24 =
INFO  19:05:19,533 - #9 99
INFO  19:05:19,533 - #28 ,
INFO  19:05:19,533 - #8 g
INFO  19:05:19,533 - #24 =
INFO  19:05:19,533 - #9 2
INFO  19:05:19,533 - #27 ;
INFO  19:05:19,533 - #8 int
INFO  19:05:19,535 - #8 e
INFO  19:05:19,535 - #27 ;
INFO  19:05:19,535 - #8 char
INFO  19:05:19,536 - #8 z
INFO  19:05:19,536 - #22 [
INFO  19:05:19,536 - #23 ]
INFO  19:05:19,536 - #27 ;
INFO  19:05:19,537 - #20 {
INFO  19:05:19,537 - #6 void
INFO  19:05:19,537 - #8 main
INFO  19:05:19,537 - #29 (
INFO  19:05:19,538 - #30 )
INFO  19:05:19,538 - #20 {
INFO  19:05:19,538 - #31 if
INFO  19:05:19,538 - #29 (
INFO  19:05:19,539 - #12 false
INFO  19:05:19,539 - #30 )
INFO  19:05:19,540 - #3 print
INFO  19:05:19,541 - #29 (
INFO  19:05:19,541 - #9 65
INFO  19:05:19,541 - #30 )
INFO  19:05:19,541 - #27 ;
INFO  19:05:19,541 - #3 print
INFO  19:05:19,542 - #29 (
INFO  19:05:19,542 - #9 77
INFO  19:05:19,542 - #30 )
INFO  19:05:19,542 - #27 ;
INFO  19:05:19,542 - #21 }
INFO  19:05:19,542 - #21 }
INFO  19:05:19,543 - =====================SINTAKSNO_STABLO=========================
INFO  19:05:19,545 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:05:19,546 - ==============================================================
INFO  19:05:19,561 - Pocetak obrade programa Program na liniji 1
INFO  19:05:19,562 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:05:19,563 - Deklarisana konstanta c na liniji 2
INFO  19:05:19,563 - Deklarisana konstanta d na liniji 2
INFO  19:05:19,563 - Deklarisana konstanta g na liniji 2
INFO  19:05:19,563 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:05:19,563 - Deklarisana promenljiva e na liniji 3
INFO  19:05:19,563 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:05:19,564 - Deklarisan niz z na liniji 3
INFO  19:05:19,565 - Pocetak obrade metode main na liniji 5
INFO  19:05:19,565 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:05:19,565 - Zavrsetak obrade programa Program na liniji 1
INFO  19:05:19,565 - ======================TABELA_SIMBOLA==========================
INFO  19:05:19,566 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  19:05:19,566 - ==============================================================
INFO  19:05:19,566 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:05:19,566 - ==============================================================
INFO  19:05:19,567 - ======================GENERISANJE_KODA========================
INFO  19:05:22,875 - Obrada ulaznog fajla test\program.mj
INFO  19:05:22,973 - #2 program
INFO  19:05:22,973 - #8 Program
INFO  19:05:22,973 - #5 const
INFO  19:05:22,974 - #8 int
INFO  19:05:22,974 - #8 c
INFO  19:05:22,975 - #24 =
INFO  19:05:22,975 - #9 10
INFO  19:05:22,976 - #28 ,
INFO  19:05:22,977 - #8 d
INFO  19:05:22,977 - #24 =
INFO  19:05:22,977 - #9 99
INFO  19:05:22,977 - #28 ,
INFO  19:05:22,978 - #8 g
INFO  19:05:22,978 - #24 =
INFO  19:05:22,978 - #9 2
INFO  19:05:22,978 - #27 ;
INFO  19:05:22,978 - #8 int
INFO  19:05:22,979 - #8 e
INFO  19:05:22,979 - #27 ;
INFO  19:05:22,980 - #8 char
INFO  19:05:22,981 - #8 z
INFO  19:05:22,981 - #22 [
INFO  19:05:22,981 - #23 ]
INFO  19:05:22,981 - #27 ;
INFO  19:05:22,981 - #20 {
INFO  19:05:22,981 - #6 void
INFO  19:05:22,982 - #8 main
INFO  19:05:22,982 - #29 (
INFO  19:05:22,983 - #30 )
INFO  19:05:22,983 - #20 {
INFO  19:05:22,983 - #31 if
INFO  19:05:22,983 - #29 (
INFO  19:05:22,983 - #12 false
INFO  19:05:22,983 - #30 )
INFO  19:05:22,984 - #3 print
INFO  19:05:22,984 - #29 (
INFO  19:05:22,985 - #9 65
INFO  19:05:22,985 - #30 )
INFO  19:05:22,985 - #27 ;
INFO  19:05:22,985 - #3 print
INFO  19:05:22,985 - #29 (
INFO  19:05:22,985 - #9 77
INFO  19:05:22,986 - #30 )
INFO  19:05:22,986 - #27 ;
INFO  19:05:22,986 - #21 }
INFO  19:05:22,986 - #21 }
INFO  19:05:22,987 - =====================SINTAKSNO_STABLO=========================
INFO  19:05:22,988 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:05:22,989 - ==============================================================
INFO  19:05:23,001 - Pocetak obrade programa Program na liniji 1
INFO  19:05:23,001 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:05:23,002 - Deklarisana konstanta c na liniji 2
INFO  19:05:23,003 - Deklarisana konstanta d na liniji 2
INFO  19:05:23,003 - Deklarisana konstanta g na liniji 2
INFO  19:05:23,003 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:05:23,003 - Deklarisana promenljiva e na liniji 3
INFO  19:05:23,003 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:05:23,003 - Deklarisan niz z na liniji 3
INFO  19:05:23,004 - Pocetak obrade metode main na liniji 5
INFO  19:05:23,005 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:05:23,005 - Zavrsetak obrade programa Program na liniji 1
INFO  19:05:23,005 - ======================TABELA_SIMBOLA==========================
INFO  19:05:23,006 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  19:05:23,006 - ==============================================================
INFO  19:05:23,006 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:05:23,006 - ==============================================================
INFO  19:05:23,006 - ======================GENERISANJE_KODA========================
INFO  19:09:11,064 - Obrada ulaznog fajla test\program.mj
INFO  19:09:11,164 - #2 program
INFO  19:09:11,164 - #8 Program
INFO  19:09:11,164 - #5 const
INFO  19:09:11,165 - #8 int
INFO  19:09:11,165 - #8 c
INFO  19:09:11,166 - #24 =
INFO  19:09:11,166 - #9 10
INFO  19:09:11,166 - #28 ,
INFO  19:09:11,168 - #8 d
INFO  19:09:11,168 - #24 =
INFO  19:09:11,168 - #9 99
INFO  19:09:11,168 - #28 ,
INFO  19:09:11,172 - #8 g
INFO  19:09:11,173 - #24 =
INFO  19:09:11,173 - #9 2
INFO  19:09:11,173 - #27 ;
INFO  19:09:11,173 - #8 int
INFO  19:09:11,174 - #8 e
INFO  19:09:11,174 - #27 ;
INFO  19:09:11,175 - #8 char
INFO  19:09:11,176 - #8 z
INFO  19:09:11,176 - #22 [
INFO  19:09:11,176 - #23 ]
INFO  19:09:11,177 - #27 ;
INFO  19:09:11,177 - #20 {
INFO  19:09:11,178 - #6 void
INFO  19:09:11,178 - #8 main
INFO  19:09:11,178 - #29 (
INFO  19:09:11,179 - #30 )
INFO  19:09:11,179 - #20 {
INFO  19:09:11,179 - #31 if
INFO  19:09:11,180 - #29 (
INFO  19:09:11,180 - #12 false
INFO  19:09:11,180 - #30 )
INFO  19:09:11,181 - #3 print
INFO  19:09:11,181 - #29 (
INFO  19:09:11,181 - #9 65
INFO  19:09:11,181 - #30 )
INFO  19:09:11,181 - #27 ;
INFO  19:09:11,181 - #3 print
INFO  19:09:11,182 - #29 (
INFO  19:09:11,182 - #9 77
INFO  19:09:11,182 - #30 )
INFO  19:09:11,182 - #27 ;
INFO  19:09:11,182 - #21 }
INFO  19:09:11,183 - #21 }
INFO  19:09:11,184 - =====================SINTAKSNO_STABLO=========================
INFO  19:09:11,185 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:09:11,186 - ==============================================================
INFO  19:09:11,205 - Pocetak obrade programa Program na liniji 1
INFO  19:09:11,205 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:09:11,206 - Deklarisana konstanta c na liniji 2
INFO  19:09:11,206 - Deklarisana konstanta d na liniji 2
INFO  19:09:11,206 - Deklarisana konstanta g na liniji 2
INFO  19:09:11,207 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:09:11,207 - Deklarisana promenljiva e na liniji 3
INFO  19:09:11,207 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:09:11,207 - Deklarisan niz z na liniji 3
INFO  19:09:11,208 - Pocetak obrade metode main na liniji 5
INFO  19:09:11,208 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:09:11,208 - Zavrsetak obrade programa Program na liniji 1
INFO  19:09:11,208 - ======================TABELA_SIMBOLA==========================
INFO  19:09:11,209 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  19:09:11,209 - ==============================================================
INFO  19:09:11,209 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:09:11,209 - ==============================================================
INFO  19:09:11,209 - ======================GENERISANJE_KODA========================
INFO  19:09:25,579 - Obrada ulaznog fajla test\program.mj
INFO  19:09:25,654 - #2 program
INFO  19:09:25,654 - #8 Program
INFO  19:09:25,654 - #5 const
INFO  19:09:25,655 - #8 int
INFO  19:09:25,655 - #8 c
INFO  19:09:25,656 - #24 =
INFO  19:09:25,656 - #9 10
INFO  19:09:25,656 - #28 ,
INFO  19:09:25,657 - #8 d
INFO  19:09:25,657 - #24 =
INFO  19:09:25,657 - #9 99
INFO  19:09:25,657 - #28 ,
INFO  19:09:25,657 - #8 g
INFO  19:09:25,657 - #24 =
INFO  19:09:25,657 - #9 2
INFO  19:09:25,657 - #27 ;
INFO  19:09:25,658 - #8 int
INFO  19:09:25,659 - #8 e
INFO  19:09:25,659 - #27 ;
INFO  19:09:25,659 - #8 char
INFO  19:09:25,660 - #8 z
INFO  19:09:25,660 - #22 [
INFO  19:09:25,660 - #23 ]
INFO  19:09:25,660 - #27 ;
INFO  19:09:25,660 - #20 {
INFO  19:09:25,660 - #6 void
INFO  19:09:25,661 - #8 main
INFO  19:09:25,661 - #29 (
INFO  19:09:25,662 - #30 )
INFO  19:09:25,662 - #20 {
INFO  19:09:25,662 - #31 if
INFO  19:09:25,662 - #29 (
INFO  19:09:25,662 - #12 false
INFO  19:09:25,662 - #30 )
INFO  19:09:25,663 - #3 print
INFO  19:09:25,663 - #29 (
INFO  19:09:25,663 - #9 65
INFO  19:09:25,663 - #30 )
INFO  19:09:25,663 - #27 ;
INFO  19:09:25,663 - #3 print
INFO  19:09:25,664 - #29 (
INFO  19:09:25,664 - #9 77
INFO  19:09:25,664 - #30 )
INFO  19:09:25,664 - #27 ;
INFO  19:09:25,664 - #21 }
INFO  19:09:25,664 - #21 }
INFO  19:09:25,665 - =====================SINTAKSNO_STABLO=========================
INFO  19:09:25,666 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:09:25,667 - ==============================================================
INFO  19:09:25,682 - Pocetak obrade programa Program na liniji 1
INFO  19:09:25,683 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:09:25,683 - Deklarisana konstanta c na liniji 2
INFO  19:09:25,684 - Deklarisana konstanta d na liniji 2
INFO  19:09:25,684 - Deklarisana konstanta g na liniji 2
INFO  19:09:25,684 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:09:25,684 - Deklarisana promenljiva e na liniji 3
INFO  19:09:25,684 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:09:25,684 - Deklarisan niz z na liniji 3
INFO  19:09:25,685 - Pocetak obrade metode main na liniji 5
INFO  19:09:25,686 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:09:25,686 - Zavrsetak obrade programa Program na liniji 1
INFO  19:09:25,686 - ======================TABELA_SIMBOLA==========================
INFO  19:09:25,687 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  19:09:25,687 - ==============================================================
INFO  19:09:25,687 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:09:25,687 - ==============================================================
INFO  19:09:25,687 - ======================GENERISANJE_KODA========================
INFO  19:09:25,693 - Generisanje koda uspesno zavrseno!
INFO  19:09:25,694 - Generisanje izlaznog fajla test\program.obj
INFO  19:09:25,694 - ==============================================================
INFO  19:09:32,885 - Obrada ulaznog fajla test\program.mj
INFO  19:09:32,970 - #2 program
INFO  19:09:32,970 - #8 Program
INFO  19:09:32,970 - #5 const
INFO  19:09:32,971 - #8 int
INFO  19:09:32,971 - #8 c
INFO  19:09:32,972 - #24 =
INFO  19:09:32,972 - #9 10
INFO  19:09:32,973 - #28 ,
INFO  19:09:32,974 - #8 d
INFO  19:09:32,974 - #24 =
INFO  19:09:32,974 - #9 99
INFO  19:09:32,974 - #28 ,
INFO  19:09:32,975 - #8 g
INFO  19:09:32,975 - #24 =
INFO  19:09:32,975 - #9 2
INFO  19:09:32,975 - #27 ;
INFO  19:09:32,975 - #8 int
INFO  19:09:32,977 - #8 e
INFO  19:09:32,977 - #27 ;
INFO  19:09:32,977 - #8 char
INFO  19:09:32,979 - #8 z
INFO  19:09:32,979 - #22 [
INFO  19:09:32,979 - #23 ]
INFO  19:09:32,979 - #27 ;
INFO  19:09:32,979 - #20 {
INFO  19:09:32,979 - #6 void
INFO  19:09:32,979 - #8 main
INFO  19:09:32,979 - #29 (
INFO  19:09:32,980 - #30 )
INFO  19:09:32,980 - #20 {
INFO  19:09:32,981 - #31 if
INFO  19:09:32,981 - #29 (
INFO  19:09:32,981 - #12 false
INFO  19:09:32,981 - #30 )
INFO  19:09:32,982 - #3 print
INFO  19:09:32,982 - #29 (
INFO  19:09:32,982 - #9 65
INFO  19:09:32,982 - #30 )
INFO  19:09:32,982 - #27 ;
INFO  19:09:32,982 - #3 print
INFO  19:09:32,983 - #29 (
INFO  19:09:32,983 - #9 77
INFO  19:09:32,983 - #30 )
INFO  19:09:32,983 - #27 ;
INFO  19:09:32,983 - #21 }
INFO  19:09:32,983 - #21 }
INFO  19:09:32,984 - =====================SINTAKSNO_STABLO=========================
INFO  19:09:32,985 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:09:32,986 - ==============================================================
INFO  19:09:33,000 - Pocetak obrade programa Program na liniji 1
INFO  19:09:33,000 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:09:33,001 - Deklarisana konstanta c na liniji 2
INFO  19:09:33,001 - Deklarisana konstanta d na liniji 2
INFO  19:09:33,001 - Deklarisana konstanta g na liniji 2
INFO  19:09:33,001 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:09:33,001 - Deklarisana promenljiva e na liniji 3
INFO  19:09:33,002 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:09:33,002 - Deklarisan niz z na liniji 3
INFO  19:09:33,003 - Pocetak obrade metode main na liniji 5
INFO  19:09:33,003 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:09:33,003 - Zavrsetak obrade programa Program na liniji 1
INFO  19:09:33,003 - ======================TABELA_SIMBOLA==========================
INFO  19:09:33,004 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  19:09:33,004 - ==============================================================
INFO  19:09:33,004 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:09:33,004 - ==============================================================
INFO  19:09:33,004 - ======================GENERISANJE_KODA========================
INFO  19:09:33,008 - Generisanje koda uspesno zavrseno!
INFO  19:09:33,009 - Generisanje izlaznog fajla test\program.obj
INFO  19:09:33,009 - ==============================================================
INFO  19:16:50,879 - Obrada ulaznog fajla test\program.mj
INFO  19:16:50,974 - #2 program
INFO  19:16:50,974 - #8 Program
INFO  19:16:50,974 - #5 const
INFO  19:16:50,975 - #8 int
INFO  19:16:50,975 - #8 c
INFO  19:16:50,976 - #24 =
INFO  19:16:50,977 - #9 10
INFO  19:16:50,977 - #28 ,
INFO  19:16:50,978 - #8 d
INFO  19:16:50,978 - #24 =
INFO  19:16:50,979 - #9 99
INFO  19:16:50,979 - #28 ,
INFO  19:16:50,979 - #8 g
INFO  19:16:50,979 - #24 =
INFO  19:16:50,979 - #9 2
INFO  19:16:50,980 - #27 ;
INFO  19:16:50,980 - #8 int
INFO  19:16:50,982 - #8 e
INFO  19:16:50,982 - #27 ;
INFO  19:16:50,982 - #8 char
INFO  19:16:50,984 - #8 z
INFO  19:16:50,984 - #22 [
INFO  19:16:50,984 - #23 ]
INFO  19:16:50,984 - #27 ;
INFO  19:16:50,984 - #20 {
INFO  19:16:50,984 - #6 void
INFO  19:16:50,984 - #8 main
INFO  19:16:50,985 - #29 (
INFO  19:16:50,986 - #30 )
INFO  19:16:50,986 - #20 {
INFO  19:16:50,986 - #31 if
INFO  19:16:50,986 - #29 (
INFO  19:16:50,986 - #12 false
INFO  19:16:50,986 - #30 )
INFO  19:16:50,987 - #3 print
INFO  19:16:50,988 - #29 (
INFO  19:16:50,988 - #9 65
INFO  19:16:50,988 - #30 )
INFO  19:16:50,988 - #27 ;
INFO  19:16:50,988 - #3 print
INFO  19:16:50,989 - #29 (
INFO  19:16:50,989 - #9 77
INFO  19:16:50,989 - #30 )
INFO  19:16:50,989 - #27 ;
INFO  19:16:50,989 - #21 }
INFO  19:16:50,989 - #21 }
INFO  19:16:50,991 - =====================SINTAKSNO_STABLO=========================
INFO  19:16:50,993 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:16:50,996 - ==============================================================
INFO  19:16:51,011 - Pocetak obrade programa Program na liniji 1
INFO  19:16:51,011 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:16:51,012 - Deklarisana konstanta c na liniji 2
INFO  19:16:51,012 - Deklarisana konstanta d na liniji 2
INFO  19:16:51,013 - Deklarisana konstanta g na liniji 2
INFO  19:16:51,013 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:16:51,013 - Deklarisana promenljiva e na liniji 3
INFO  19:16:51,013 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  19:16:51,013 - Deklarisan niz z na liniji 3
INFO  19:16:51,014 - Pocetak obrade metode main na liniji 5
INFO  19:16:51,015 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:16:51,015 - Zavrsetak obrade programa Program na liniji 1
INFO  19:16:51,015 - ======================TABELA_SIMBOLA==========================
INFO  19:16:51,016 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  19:16:51,016 - ==============================================================
INFO  19:16:51,016 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:16:51,016 - ==============================================================
INFO  19:16:51,016 - ======================GENERISANJE_KODA========================
INFO  19:16:51,022 - Generisanje koda uspesno zavrseno!
INFO  19:16:51,023 - Generisanje izlaznog fajla test\program.obj
INFO  19:16:51,023 - ==============================================================
INFO  20:06:43,527 - Obrada ulaznog fajla test\program.mj
INFO  20:06:43,608 - #2 program
INFO  20:06:43,608 - #8 Program
INFO  20:06:43,608 - #5 const
INFO  20:06:43,609 - #8 int
INFO  20:06:43,610 - #8 c
INFO  20:06:43,611 - #24 =
INFO  20:06:43,611 - #9 10
INFO  20:06:43,611 - #28 ,
INFO  20:06:43,612 - #8 d
INFO  20:06:43,612 - #24 =
INFO  20:06:43,613 - #9 99
INFO  20:06:43,613 - #28 ,
INFO  20:06:43,613 - #8 g
INFO  20:06:43,613 - #24 =
INFO  20:06:43,613 - #9 2
INFO  20:06:43,613 - #27 ;
INFO  20:06:43,613 - #8 int
INFO  20:06:43,615 - #8 e
INFO  20:06:43,615 - #27 ;
INFO  20:06:43,616 - #8 char
INFO  20:06:43,617 - #8 z
INFO  20:06:43,617 - #22 [
INFO  20:06:43,617 - #23 ]
INFO  20:06:43,617 - #27 ;
INFO  20:06:43,617 - #20 {
INFO  20:06:43,618 - #6 void
INFO  20:06:43,618 - #8 main
INFO  20:06:43,618 - #29 (
INFO  20:06:43,618 - #30 )
INFO  20:06:43,618 - #20 {
INFO  20:06:43,619 - #31 if
INFO  20:06:43,619 - #29 (
INFO  20:06:43,619 - #12 false
INFO  20:06:43,619 - #30 )
INFO  20:06:43,620 - #3 print
INFO  20:06:43,620 - #29 (
INFO  20:06:43,620 - #9 65
INFO  20:06:43,620 - #30 )
INFO  20:06:43,620 - #27 ;
INFO  20:06:43,620 - #3 print
INFO  20:06:43,620 - #29 (
INFO  20:06:43,621 - #9 77
INFO  20:06:43,621 - #30 )
INFO  20:06:43,621 - #27 ;
INFO  20:06:43,621 - #21 }
INFO  20:06:43,621 - #21 }
INFO  20:06:43,622 - =====================SINTAKSNO_STABLO=========================
INFO  20:06:43,623 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:06:43,624 - ==============================================================
INFO  20:06:43,637 - Pocetak obrade programa Program na liniji 1
INFO  20:06:43,638 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:06:43,638 - Deklarisana konstanta c na liniji 2
INFO  20:06:43,638 - Deklarisana konstanta d na liniji 2
INFO  20:06:43,638 - Deklarisana konstanta g na liniji 2
INFO  20:06:43,639 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:06:43,639 - Deklarisana promenljiva e na liniji 3
INFO  20:06:43,639 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:06:43,639 - Deklarisan niz z na liniji 3
INFO  20:06:43,640 - Pocetak obrade metode main na liniji 5
INFO  20:06:43,640 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:06:43,641 - Zavrsetak obrade programa Program na liniji 1
INFO  20:06:43,641 - ======================TABELA_SIMBOLA==========================
INFO  20:06:43,641 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:06:43,641 - ==============================================================
INFO  20:06:43,641 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:06:43,641 - ==============================================================
INFO  20:06:43,642 - ======================GENERISANJE_KODA========================
INFO  20:06:43,646 - Generisanje koda uspesno zavrseno!
INFO  20:06:43,647 - Generisanje izlaznog fajla test\program.obj
INFO  20:06:43,647 - ==============================================================
INFO  20:10:32,746 - Obrada ulaznog fajla test\program.mj
INFO  20:10:32,823 - #2 program
INFO  20:10:32,823 - #8 Program
INFO  20:10:32,823 - #5 const
INFO  20:10:32,824 - #8 int
INFO  20:10:32,824 - #8 c
INFO  20:10:32,824 - #24 =
INFO  20:10:32,825 - #9 10
INFO  20:10:32,825 - #28 ,
INFO  20:10:32,826 - #8 d
INFO  20:10:32,826 - #24 =
INFO  20:10:32,826 - #9 99
INFO  20:10:32,826 - #28 ,
INFO  20:10:32,826 - #8 g
INFO  20:10:32,826 - #24 =
INFO  20:10:32,826 - #9 2
INFO  20:10:32,826 - #27 ;
INFO  20:10:32,826 - #8 int
INFO  20:10:32,827 - #8 e
INFO  20:10:32,827 - #27 ;
INFO  20:10:32,828 - #8 char
INFO  20:10:32,829 - #8 z
INFO  20:10:32,829 - #22 [
INFO  20:10:32,829 - #23 ]
INFO  20:10:32,829 - #27 ;
INFO  20:10:32,829 - #20 {
INFO  20:10:32,829 - #6 void
INFO  20:10:32,830 - #8 main
INFO  20:10:32,830 - #29 (
INFO  20:10:32,830 - #30 )
INFO  20:10:32,830 - #20 {
INFO  20:10:32,831 - #31 if
INFO  20:10:32,831 - #29 (
INFO  20:10:32,831 - #12 false
INFO  20:10:32,831 - #30 )
INFO  20:10:32,832 - #3 print
INFO  20:10:32,832 - #29 (
INFO  20:10:32,832 - #9 65
INFO  20:10:32,832 - #30 )
INFO  20:10:32,832 - #27 ;
INFO  20:10:32,833 - #3 print
INFO  20:10:32,833 - #29 (
INFO  20:10:32,833 - #9 77
INFO  20:10:32,833 - #30 )
INFO  20:10:32,833 - #27 ;
INFO  20:10:32,833 - #21 }
INFO  20:10:32,834 - #21 }
INFO  20:10:32,835 - =====================SINTAKSNO_STABLO=========================
INFO  20:10:32,836 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:10:32,837 - ==============================================================
INFO  20:10:32,850 - Pocetak obrade programa Program na liniji 1
INFO  20:10:32,850 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:10:32,851 - Deklarisana konstanta c na liniji 2
INFO  20:10:32,851 - Deklarisana konstanta d na liniji 2
INFO  20:10:32,851 - Deklarisana konstanta g na liniji 2
INFO  20:10:32,851 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:10:32,851 - Deklarisana promenljiva e na liniji 3
INFO  20:10:32,851 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:10:32,851 - Deklarisan niz z na liniji 3
INFO  20:10:32,853 - Pocetak obrade metode main na liniji 5
INFO  20:10:32,854 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:10:32,854 - Zavrsetak obrade programa Program na liniji 1
INFO  20:10:32,854 - ======================TABELA_SIMBOLA==========================
INFO  20:10:32,855 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:10:32,855 - ==============================================================
INFO  20:10:32,855 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:10:32,855 - ==============================================================
INFO  20:10:32,856 - ======================GENERISANJE_KODA========================
INFO  20:10:32,862 - Generisanje koda uspesno zavrseno!
INFO  20:10:32,862 - Generisanje izlaznog fajla test\program.obj
INFO  20:10:32,862 - ==============================================================
INFO  20:14:15,567 - Obrada ulaznog fajla test\program.mj
INFO  20:14:15,667 - #2 program
INFO  20:14:15,668 - #8 Program
INFO  20:14:15,668 - #5 const
INFO  20:14:15,669 - #8 int
INFO  20:14:15,669 - #8 c
INFO  20:14:15,670 - #24 =
INFO  20:14:15,670 - #9 10
INFO  20:14:15,674 - #28 ,
INFO  20:14:15,677 - #8 d
INFO  20:14:15,677 - #24 =
INFO  20:14:15,678 - #9 99
INFO  20:14:15,678 - #28 ,
INFO  20:14:15,678 - #8 g
INFO  20:14:15,678 - #24 =
INFO  20:14:15,678 - #9 2
INFO  20:14:15,678 - #27 ;
INFO  20:14:15,678 - #8 int
INFO  20:14:15,680 - #8 e
INFO  20:14:15,680 - #27 ;
INFO  20:14:15,680 - #8 char
INFO  20:14:15,681 - #8 z
INFO  20:14:15,682 - #22 [
INFO  20:14:15,682 - #23 ]
INFO  20:14:15,682 - #27 ;
INFO  20:14:15,682 - #20 {
INFO  20:14:15,682 - #6 void
INFO  20:14:15,682 - #8 main
INFO  20:14:15,682 - #29 (
INFO  20:14:15,683 - #30 )
INFO  20:14:15,683 - #20 {
INFO  20:14:15,683 - #31 if
INFO  20:14:15,683 - #29 (
INFO  20:14:15,684 - #12 false
INFO  20:14:15,684 - #30 )
INFO  20:14:15,685 - #3 print
INFO  20:14:15,685 - #29 (
INFO  20:14:15,685 - #9 65
INFO  20:14:15,685 - #30 )
INFO  20:14:15,685 - #27 ;
INFO  20:14:15,685 - #3 print
INFO  20:14:15,686 - #29 (
INFO  20:14:15,686 - #9 77
INFO  20:14:15,686 - #30 )
INFO  20:14:15,687 - #27 ;
INFO  20:14:15,687 - #21 }
INFO  20:14:15,687 - #21 }
INFO  20:14:15,688 - =====================SINTAKSNO_STABLO=========================
INFO  20:14:15,690 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:14:15,691 - ==============================================================
INFO  20:14:15,713 - Pocetak obrade programa Program na liniji 1
INFO  20:14:15,713 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:14:15,714 - Deklarisana konstanta c na liniji 2
INFO  20:14:15,714 - Deklarisana konstanta d na liniji 2
INFO  20:14:15,715 - Deklarisana konstanta g na liniji 2
INFO  20:14:15,715 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:14:15,715 - Deklarisana promenljiva e na liniji 3
INFO  20:14:15,715 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:14:15,715 - Deklarisan niz z na liniji 3
INFO  20:14:15,716 - Pocetak obrade metode main na liniji 5
INFO  20:14:15,716 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:14:15,716 - Zavrsetak obrade programa Program na liniji 1
INFO  20:14:15,716 - ======================TABELA_SIMBOLA==========================
INFO  20:14:15,717 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:14:15,717 - ==============================================================
INFO  20:14:15,717 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:14:15,717 - ==============================================================
INFO  20:14:15,717 - ======================GENERISANJE_KODA========================
INFO  20:14:15,722 - Generisanje koda uspesno zavrseno!
INFO  20:14:15,733 - Generisanje izlaznog fajla test\program.obj
INFO  20:14:15,733 - ==============================================================
INFO  20:15:30,975 - Obrada ulaznog fajla test\program.mj
INFO  20:15:31,054 - #2 program
INFO  20:15:31,054 - #8 Program
INFO  20:15:31,054 - #5 const
INFO  20:15:31,055 - #8 int
INFO  20:15:31,055 - #8 c
INFO  20:15:31,055 - #24 =
INFO  20:15:31,055 - #9 10
INFO  20:15:31,056 - #28 ,
INFO  20:15:31,056 - #8 d
INFO  20:15:31,057 - #24 =
INFO  20:15:31,057 - #9 99
INFO  20:15:31,057 - #28 ,
INFO  20:15:31,057 - #8 g
INFO  20:15:31,057 - #24 =
INFO  20:15:31,057 - #9 2
INFO  20:15:31,057 - #27 ;
INFO  20:15:31,057 - #8 int
INFO  20:15:31,059 - #8 e
INFO  20:15:31,059 - #27 ;
INFO  20:15:31,059 - #8 char
INFO  20:15:31,060 - #8 z
INFO  20:15:31,061 - #22 [
INFO  20:15:31,061 - #23 ]
INFO  20:15:31,061 - #27 ;
INFO  20:15:31,061 - #20 {
INFO  20:15:31,061 - #6 void
INFO  20:15:31,061 - #8 main
INFO  20:15:31,061 - #29 (
INFO  20:15:31,062 - #30 )
INFO  20:15:31,062 - #20 {
INFO  20:15:31,062 - #31 if
INFO  20:15:31,063 - #29 (
INFO  20:15:31,063 - #12 false
INFO  20:15:31,063 - #30 )
INFO  20:15:31,064 - #3 print
INFO  20:15:31,064 - #29 (
INFO  20:15:31,064 - #9 65
INFO  20:15:31,064 - #30 )
INFO  20:15:31,064 - #27 ;
INFO  20:15:31,064 - #3 print
INFO  20:15:31,065 - #29 (
INFO  20:15:31,065 - #9 77
INFO  20:15:31,065 - #30 )
INFO  20:15:31,065 - #27 ;
INFO  20:15:31,065 - #21 }
INFO  20:15:31,066 - #21 }
INFO  20:15:31,067 - =====================SINTAKSNO_STABLO=========================
INFO  20:15:31,068 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:15:31,069 - ==============================================================
INFO  20:15:31,085 - Pocetak obrade programa Program na liniji 1
INFO  20:15:31,086 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:15:31,087 - Deklarisana konstanta c na liniji 2
INFO  20:15:31,087 - Deklarisana konstanta d na liniji 2
INFO  20:15:31,087 - Deklarisana konstanta g na liniji 2
INFO  20:15:31,087 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:15:31,087 - Deklarisana promenljiva e na liniji 3
INFO  20:15:31,087 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:15:31,088 - Deklarisan niz z na liniji 3
INFO  20:15:31,089 - Pocetak obrade metode main na liniji 5
INFO  20:15:31,089 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:15:31,089 - Zavrsetak obrade programa Program na liniji 1
INFO  20:15:31,089 - ======================TABELA_SIMBOLA==========================
INFO  20:15:31,090 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:15:31,090 - ==============================================================
INFO  20:15:31,090 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:15:31,090 - ==============================================================
INFO  20:15:31,090 - ======================GENERISANJE_KODA========================
INFO  20:15:31,095 - Generisanje koda uspesno zavrseno!
INFO  20:15:31,095 - Generisanje izlaznog fajla test\program.obj
INFO  20:15:31,095 - ==============================================================
INFO  20:17:02,816 - Obrada ulaznog fajla test\program.mj
INFO  20:17:02,895 - #2 program
INFO  20:17:02,895 - #8 Program
INFO  20:17:02,895 - #5 const
INFO  20:17:02,896 - #8 int
INFO  20:17:02,896 - #8 c
INFO  20:17:02,896 - #24 =
INFO  20:17:02,896 - #9 10
INFO  20:17:02,897 - #28 ,
INFO  20:17:02,898 - #8 d
INFO  20:17:02,898 - #24 =
INFO  20:17:02,898 - #9 99
INFO  20:17:02,898 - #28 ,
INFO  20:17:02,898 - #8 g
INFO  20:17:02,898 - #24 =
INFO  20:17:02,899 - #9 2
INFO  20:17:02,899 - #27 ;
INFO  20:17:02,899 - #8 int
INFO  20:17:02,901 - #8 e
INFO  20:17:02,901 - #27 ;
INFO  20:17:02,901 - #8 char
INFO  20:17:02,902 - #8 z
INFO  20:17:02,903 - #22 [
INFO  20:17:02,903 - #23 ]
INFO  20:17:02,903 - #27 ;
INFO  20:17:02,903 - #20 {
INFO  20:17:02,903 - #6 void
INFO  20:17:02,903 - #8 main
INFO  20:17:02,903 - #29 (
INFO  20:17:02,904 - #30 )
INFO  20:17:02,904 - #20 {
INFO  20:17:02,904 - #31 if
INFO  20:17:02,904 - #29 (
INFO  20:17:02,904 - #12 false
INFO  20:17:02,904 - #30 )
INFO  20:17:02,905 - #3 print
INFO  20:17:02,905 - #29 (
INFO  20:17:02,905 - #9 65
INFO  20:17:02,905 - #30 )
INFO  20:17:02,906 - #27 ;
INFO  20:17:02,906 - #3 print
INFO  20:17:02,906 - #29 (
INFO  20:17:02,906 - #9 77
INFO  20:17:02,906 - #30 )
INFO  20:17:02,906 - #27 ;
INFO  20:17:02,906 - #21 }
INFO  20:17:02,907 - #21 }
INFO  20:17:02,907 - =====================SINTAKSNO_STABLO=========================
INFO  20:17:02,908 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:17:02,909 - ==============================================================
INFO  20:17:02,923 - Pocetak obrade programa Program na liniji 1
INFO  20:17:02,924 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:17:02,925 - Deklarisana konstanta c na liniji 2
INFO  20:17:02,925 - Deklarisana konstanta d na liniji 2
INFO  20:17:02,925 - Deklarisana konstanta g na liniji 2
INFO  20:17:02,925 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:17:02,925 - Deklarisana promenljiva e na liniji 3
INFO  20:17:02,925 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:17:02,925 - Deklarisan niz z na liniji 3
INFO  20:17:02,927 - Pocetak obrade metode main na liniji 5
INFO  20:17:02,927 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:17:02,927 - Zavrsetak obrade programa Program na liniji 1
INFO  20:17:02,927 - ======================TABELA_SIMBOLA==========================
INFO  20:17:02,928 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:17:02,928 - ==============================================================
INFO  20:17:02,928 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:17:02,928 - ==============================================================
INFO  20:17:02,928 - ======================GENERISANJE_KODA========================
INFO  20:17:02,934 - Generisanje koda uspesno zavrseno!
INFO  20:17:02,935 - Generisanje izlaznog fajla test\program.obj
INFO  20:17:02,935 - ==============================================================
INFO  20:17:08,732 - Obrada ulaznog fajla test\program.mj
INFO  20:17:08,811 - #2 program
INFO  20:17:08,811 - #8 Program
INFO  20:17:08,811 - #5 const
INFO  20:17:08,812 - #8 int
INFO  20:17:08,812 - #8 c
INFO  20:17:08,813 - #24 =
INFO  20:17:08,813 - #9 10
INFO  20:17:08,813 - #28 ,
INFO  20:17:08,814 - #8 d
INFO  20:17:08,814 - #24 =
INFO  20:17:08,814 - #9 99
INFO  20:17:08,814 - #28 ,
INFO  20:17:08,814 - #8 g
INFO  20:17:08,814 - #24 =
INFO  20:17:08,815 - #9 2
INFO  20:17:08,815 - #27 ;
INFO  20:17:08,815 - #8 int
INFO  20:17:08,816 - #8 e
INFO  20:17:08,816 - #27 ;
INFO  20:17:08,816 - #8 char
INFO  20:17:08,818 - #8 z
INFO  20:17:08,818 - #22 [
INFO  20:17:08,818 - #23 ]
INFO  20:17:08,818 - #27 ;
INFO  20:17:08,818 - #20 {
INFO  20:17:08,818 - #6 void
INFO  20:17:08,818 - #8 main
INFO  20:17:08,819 - #29 (
INFO  20:17:08,819 - #30 )
INFO  20:17:08,820 - #20 {
INFO  20:17:08,820 - #31 if
INFO  20:17:08,820 - #29 (
INFO  20:17:08,820 - #12 false
INFO  20:17:08,820 - #30 )
INFO  20:17:08,821 - #3 print
INFO  20:17:08,821 - #29 (
INFO  20:17:08,821 - #9 65
INFO  20:17:08,821 - #30 )
INFO  20:17:08,822 - #27 ;
INFO  20:17:08,822 - #3 print
INFO  20:17:08,822 - #29 (
INFO  20:17:08,822 - #9 77
INFO  20:17:08,822 - #30 )
INFO  20:17:08,822 - #27 ;
INFO  20:17:08,823 - #21 }
INFO  20:17:08,823 - #21 }
INFO  20:17:08,824 - =====================SINTAKSNO_STABLO=========================
INFO  20:17:08,825 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:17:08,826 - ==============================================================
INFO  20:17:08,840 - Pocetak obrade programa Program na liniji 1
INFO  20:17:08,841 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:17:08,841 - Deklarisana konstanta c na liniji 2
INFO  20:17:08,842 - Deklarisana konstanta d na liniji 2
INFO  20:17:08,842 - Deklarisana konstanta g na liniji 2
INFO  20:17:08,842 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:17:08,842 - Deklarisana promenljiva e na liniji 3
INFO  20:17:08,842 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:17:08,842 - Deklarisan niz z na liniji 3
INFO  20:17:08,843 - Pocetak obrade metode main na liniji 5
INFO  20:17:08,843 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:17:08,843 - Zavrsetak obrade programa Program na liniji 1
INFO  20:17:08,843 - ======================TABELA_SIMBOLA==========================
INFO  20:17:08,844 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:17:08,845 - ==============================================================
INFO  20:17:08,845 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:17:08,845 - ==============================================================
INFO  20:17:08,845 - ======================GENERISANJE_KODA========================
INFO  20:17:08,850 - Generisanje koda uspesno zavrseno!
INFO  20:17:08,850 - Generisanje izlaznog fajla test\program.obj
INFO  20:17:08,850 - ==============================================================
INFO  20:18:09,062 - Obrada ulaznog fajla test\program.mj
INFO  20:18:09,141 - #2 program
INFO  20:18:09,141 - #8 Program
INFO  20:18:09,141 - #5 const
INFO  20:18:09,142 - #8 int
INFO  20:18:09,142 - #8 c
INFO  20:18:09,143 - #24 =
INFO  20:18:09,143 - #9 10
INFO  20:18:09,143 - #28 ,
INFO  20:18:09,145 - #8 d
INFO  20:18:09,145 - #24 =
INFO  20:18:09,145 - #9 99
INFO  20:18:09,145 - #28 ,
INFO  20:18:09,145 - #8 g
INFO  20:18:09,145 - #24 =
INFO  20:18:09,146 - #9 2
INFO  20:18:09,146 - #27 ;
INFO  20:18:09,146 - #8 int
INFO  20:18:09,147 - #8 e
INFO  20:18:09,147 - #27 ;
INFO  20:18:09,148 - #8 char
INFO  20:18:09,149 - #8 z
INFO  20:18:09,149 - #22 [
INFO  20:18:09,149 - #23 ]
INFO  20:18:09,149 - #27 ;
INFO  20:18:09,149 - #20 {
INFO  20:18:09,149 - #6 void
INFO  20:18:09,150 - #8 main
INFO  20:18:09,150 - #29 (
INFO  20:18:09,151 - #30 )
INFO  20:18:09,151 - #20 {
INFO  20:18:09,151 - #31 if
INFO  20:18:09,151 - #29 (
INFO  20:18:09,151 - #12 false
INFO  20:18:09,151 - #30 )
INFO  20:18:09,152 - #3 print
INFO  20:18:09,152 - #29 (
INFO  20:18:09,153 - #9 65
INFO  20:18:09,153 - #30 )
INFO  20:18:09,153 - #27 ;
INFO  20:18:09,153 - #3 print
INFO  20:18:09,154 - #29 (
INFO  20:18:09,154 - #9 77
INFO  20:18:09,154 - #30 )
INFO  20:18:09,154 - #27 ;
INFO  20:18:09,154 - #21 }
INFO  20:18:09,155 - #21 }
INFO  20:18:09,155 - =====================SINTAKSNO_STABLO=========================
INFO  20:18:09,157 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:18:09,157 - ==============================================================
INFO  20:18:09,173 - Pocetak obrade programa Program na liniji 1
INFO  20:18:09,173 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:18:09,174 - Deklarisana konstanta c na liniji 2
INFO  20:18:09,174 - Deklarisana konstanta d na liniji 2
INFO  20:18:09,174 - Deklarisana konstanta g na liniji 2
INFO  20:18:09,175 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:18:09,175 - Deklarisana promenljiva e na liniji 3
INFO  20:18:09,175 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:18:09,175 - Deklarisan niz z na liniji 3
INFO  20:18:09,176 - Pocetak obrade metode main na liniji 5
INFO  20:18:09,176 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:18:09,176 - Zavrsetak obrade programa Program na liniji 1
INFO  20:18:09,177 - ======================TABELA_SIMBOLA==========================
INFO  20:18:09,177 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:18:09,178 - ==============================================================
INFO  20:18:09,178 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:18:09,178 - ==============================================================
INFO  20:18:09,178 - ======================GENERISANJE_KODA========================
INFO  20:18:09,183 - Generisanje koda uspesno zavrseno!
INFO  20:18:09,184 - Generisanje izlaznog fajla test\program.obj
INFO  20:18:09,184 - ==============================================================
INFO  20:20:27,645 - Obrada ulaznog fajla test\program.mj
INFO  20:20:27,730 - #2 program
INFO  20:20:27,731 - #8 Program
INFO  20:20:27,731 - #5 const
INFO  20:20:27,732 - #8 int
INFO  20:20:27,732 - #8 c
INFO  20:20:27,733 - #24 =
INFO  20:20:27,733 - #9 10
INFO  20:20:27,733 - #28 ,
INFO  20:20:27,734 - #8 d
INFO  20:20:27,734 - #24 =
INFO  20:20:27,734 - #9 99
INFO  20:20:27,734 - #28 ,
INFO  20:20:27,734 - #8 g
INFO  20:20:27,735 - #24 =
INFO  20:20:27,735 - #9 2
INFO  20:20:27,735 - #27 ;
INFO  20:20:27,735 - #8 int
INFO  20:20:27,736 - #8 e
INFO  20:20:27,736 - #27 ;
INFO  20:20:27,736 - #8 char
INFO  20:20:27,738 - #8 z
INFO  20:20:27,738 - #22 [
INFO  20:20:27,738 - #23 ]
INFO  20:20:27,738 - #27 ;
INFO  20:20:27,738 - #20 {
INFO  20:20:27,739 - #6 void
INFO  20:20:27,739 - #8 main
INFO  20:20:27,739 - #29 (
INFO  20:20:27,740 - #30 )
INFO  20:20:27,740 - #20 {
INFO  20:20:27,740 - #31 if
INFO  20:20:27,740 - #29 (
INFO  20:20:27,740 - #12 false
INFO  20:20:27,740 - #30 )
INFO  20:20:27,741 - #3 print
INFO  20:20:27,741 - #29 (
INFO  20:20:27,741 - #9 65
INFO  20:20:27,742 - #30 )
INFO  20:20:27,742 - #27 ;
INFO  20:20:27,742 - #3 print
INFO  20:20:27,742 - #29 (
INFO  20:20:27,742 - #9 77
INFO  20:20:27,742 - #30 )
INFO  20:20:27,742 - #27 ;
INFO  20:20:27,743 - #21 }
INFO  20:20:27,743 - #21 }
INFO  20:20:27,744 - =====================SINTAKSNO_STABLO=========================
INFO  20:20:27,750 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:20:27,751 - ==============================================================
INFO  20:20:27,765 - Pocetak obrade programa Program na liniji 1
INFO  20:20:27,765 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:20:27,766 - Deklarisana konstanta c na liniji 2
INFO  20:20:27,766 - Deklarisana konstanta d na liniji 2
INFO  20:20:27,766 - Deklarisana konstanta g na liniji 2
INFO  20:20:27,766 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:20:27,767 - Deklarisana promenljiva e na liniji 3
INFO  20:20:27,767 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:20:27,767 - Deklarisan niz z na liniji 3
INFO  20:20:27,768 - Pocetak obrade metode main na liniji 5
INFO  20:20:27,768 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:20:27,768 - Zavrsetak obrade programa Program na liniji 1
INFO  20:20:27,768 - ======================TABELA_SIMBOLA==========================
INFO  20:20:27,769 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:20:27,769 - ==============================================================
INFO  20:20:27,769 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:20:27,769 - ==============================================================
INFO  20:20:27,769 - ======================GENERISANJE_KODA========================
INFO  20:20:27,774 - Generisanje koda uspesno zavrseno!
INFO  20:20:27,774 - Generisanje izlaznog fajla test\program.obj
INFO  20:20:27,774 - ==============================================================
INFO  20:27:42,384 - Obrada ulaznog fajla test\program.mj
INFO  20:27:42,463 - #2 program
INFO  20:27:42,463 - #8 Program
INFO  20:27:42,463 - #5 const
INFO  20:27:42,464 - #8 int
INFO  20:27:42,465 - #8 c
INFO  20:27:42,465 - #24 =
INFO  20:27:42,465 - #9 10
INFO  20:27:42,465 - #28 ,
INFO  20:27:42,466 - #8 d
INFO  20:27:42,467 - #24 =
INFO  20:27:42,467 - #9 99
INFO  20:27:42,467 - #28 ,
INFO  20:27:42,467 - #8 g
INFO  20:27:42,467 - #24 =
INFO  20:27:42,467 - #9 2
INFO  20:27:42,467 - #27 ;
INFO  20:27:42,467 - #8 int
INFO  20:27:42,469 - #8 e
INFO  20:27:42,469 - #27 ;
INFO  20:27:42,469 - #8 char
INFO  20:27:42,470 - #8 z
INFO  20:27:42,471 - #22 [
INFO  20:27:42,471 - #23 ]
INFO  20:27:42,471 - #27 ;
INFO  20:27:42,471 - #20 {
INFO  20:27:42,471 - #6 void
INFO  20:27:42,471 - #8 main
INFO  20:27:42,471 - #29 (
INFO  20:27:42,472 - #30 )
INFO  20:27:42,473 - #20 {
INFO  20:27:42,473 - #31 if
INFO  20:27:42,473 - #29 (
INFO  20:27:42,473 - #12 false
INFO  20:27:42,474 - #30 )
INFO  20:27:42,475 - #3 print
INFO  20:27:42,475 - #29 (
INFO  20:27:42,475 - #9 65
INFO  20:27:42,475 - #30 )
INFO  20:27:42,475 - #27 ;
INFO  20:27:42,475 - #3 print
INFO  20:27:42,476 - #29 (
INFO  20:27:42,476 - #9 77
INFO  20:27:42,476 - #30 )
INFO  20:27:42,476 - #27 ;
INFO  20:27:42,476 - #21 }
INFO  20:27:42,476 - #21 }
INFO  20:27:42,477 - =====================SINTAKSNO_STABLO=========================
INFO  20:27:42,478 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:27:42,479 - ==============================================================
INFO  20:27:42,494 - Pocetak obrade programa Program na liniji 1
INFO  20:27:42,494 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:27:42,495 - Deklarisana konstanta c na liniji 2
INFO  20:27:42,495 - Deklarisana konstanta d na liniji 2
INFO  20:27:42,495 - Deklarisana konstanta g na liniji 2
INFO  20:27:42,495 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:27:42,495 - Deklarisana promenljiva e na liniji 3
INFO  20:27:42,496 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:27:42,496 - Deklarisan niz z na liniji 3
INFO  20:27:42,496 - Pocetak obrade metode main na liniji 5
INFO  20:27:42,497 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:27:42,497 - Zavrsetak obrade programa Program na liniji 1
INFO  20:27:42,497 - ======================TABELA_SIMBOLA==========================
INFO  20:27:42,497 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:27:42,498 - ==============================================================
INFO  20:27:42,498 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:27:42,498 - ==============================================================
INFO  20:27:42,498 - ======================GENERISANJE_KODA========================
INFO  20:27:42,503 - Generisanje koda uspesno zavrseno!
INFO  20:27:42,503 - Generisanje izlaznog fajla test\program.obj
INFO  20:27:42,503 - ==============================================================
INFO  20:32:35,217 - Obrada ulaznog fajla test\program.mj
INFO  20:32:35,294 - #2 program
INFO  20:32:35,294 - #8 Program
INFO  20:32:35,294 - #5 const
INFO  20:32:35,295 - #8 int
INFO  20:32:35,295 - #8 c
INFO  20:32:35,296 - #24 =
INFO  20:32:35,296 - #9 10
INFO  20:32:35,296 - #28 ,
INFO  20:32:35,297 - #8 d
INFO  20:32:35,297 - #24 =
INFO  20:32:35,297 - #9 99
INFO  20:32:35,297 - #28 ,
INFO  20:32:35,298 - #8 g
INFO  20:32:35,298 - #24 =
INFO  20:32:35,298 - #9 2
INFO  20:32:35,298 - #27 ;
INFO  20:32:35,298 - #8 int
INFO  20:32:35,299 - #8 e
INFO  20:32:35,299 - #27 ;
INFO  20:32:35,300 - #8 char
INFO  20:32:35,301 - #8 z
INFO  20:32:35,301 - #22 [
INFO  20:32:35,301 - #23 ]
INFO  20:32:35,301 - #27 ;
INFO  20:32:35,301 - #20 {
INFO  20:32:35,301 - #6 void
INFO  20:32:35,301 - #8 main
INFO  20:32:35,301 - #29 (
INFO  20:32:35,302 - #30 )
INFO  20:32:35,302 - #20 {
INFO  20:32:35,302 - #31 if
INFO  20:32:35,302 - #29 (
INFO  20:32:35,303 - #12 false
INFO  20:32:35,303 - #30 )
INFO  20:32:35,304 - #3 print
INFO  20:32:35,304 - #29 (
INFO  20:32:35,304 - #9 65
INFO  20:32:35,304 - #30 )
INFO  20:32:35,304 - #27 ;
INFO  20:32:35,304 - #3 print
INFO  20:32:35,304 - #29 (
INFO  20:32:35,305 - #9 77
INFO  20:32:35,305 - #30 )
INFO  20:32:35,305 - #27 ;
INFO  20:32:35,305 - #21 }
INFO  20:32:35,305 - #21 }
INFO  20:32:35,306 - =====================SINTAKSNO_STABLO=========================
INFO  20:32:35,307 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:32:35,308 - ==============================================================
INFO  20:32:35,321 - Pocetak obrade programa Program na liniji 1
INFO  20:32:35,321 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:32:35,322 - Deklarisana konstanta c na liniji 2
INFO  20:32:35,322 - Deklarisana konstanta d na liniji 2
INFO  20:32:35,323 - Deklarisana konstanta g na liniji 2
INFO  20:32:35,323 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:32:35,323 - Deklarisana promenljiva e na liniji 3
INFO  20:32:35,323 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:32:35,323 - Deklarisan niz z na liniji 3
INFO  20:32:35,324 - Pocetak obrade metode main na liniji 5
INFO  20:32:35,324 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:32:35,324 - Zavrsetak obrade programa Program na liniji 1
INFO  20:32:35,324 - ======================TABELA_SIMBOLA==========================
INFO  20:32:35,325 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:32:35,326 - ==============================================================
INFO  20:32:35,326 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:32:35,326 - ==============================================================
INFO  20:32:35,326 - ======================GENERISANJE_KODA========================
INFO  20:32:35,332 - Generisanje koda uspesno zavrseno!
INFO  20:32:35,332 - Generisanje izlaznog fajla test\program.obj
INFO  20:32:35,332 - ==============================================================
INFO  20:34:42,848 - Obrada ulaznog fajla test\program.mj
INFO  20:34:42,964 - #2 program
INFO  20:34:42,964 - #8 Program
INFO  20:34:42,964 - #5 const
INFO  20:34:42,965 - #8 int
INFO  20:34:42,966 - #8 c
INFO  20:34:42,966 - #24 =
INFO  20:34:42,967 - #9 10
INFO  20:34:42,967 - #28 ,
INFO  20:34:42,969 - #8 d
INFO  20:34:42,974 - #24 =
INFO  20:34:42,974 - #9 99
INFO  20:34:42,974 - #28 ,
INFO  20:34:42,974 - #8 g
INFO  20:34:42,974 - #24 =
INFO  20:34:42,974 - #9 2
INFO  20:34:42,974 - #27 ;
INFO  20:34:42,975 - #8 int
INFO  20:34:42,976 - #8 e
INFO  20:34:42,976 - #27 ;
INFO  20:34:42,977 - #8 char
INFO  20:34:42,978 - #8 z
INFO  20:34:42,979 - #22 [
INFO  20:34:42,979 - #23 ]
INFO  20:34:42,979 - #27 ;
INFO  20:34:42,979 - #20 {
INFO  20:34:42,980 - #6 void
INFO  20:34:42,980 - #8 main
INFO  20:34:42,980 - #29 (
INFO  20:34:42,981 - #30 )
INFO  20:34:42,981 - #20 {
INFO  20:34:42,981 - #31 if
INFO  20:34:42,981 - #29 (
INFO  20:34:42,981 - #12 false
INFO  20:34:42,981 - #30 )
INFO  20:34:42,983 - #3 print
INFO  20:34:42,983 - #29 (
INFO  20:34:42,983 - #9 65
INFO  20:34:42,983 - #30 )
INFO  20:34:42,983 - #27 ;
INFO  20:34:42,983 - #3 print
INFO  20:34:42,984 - #29 (
INFO  20:34:42,984 - #9 77
INFO  20:34:42,984 - #30 )
INFO  20:34:42,984 - #27 ;
INFO  20:34:42,985 - #21 }
INFO  20:34:42,985 - #21 }
INFO  20:34:42,986 - =====================SINTAKSNO_STABLO=========================
INFO  20:34:42,987 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:34:42,989 - ==============================================================
INFO  20:34:43,006 - Pocetak obrade programa Program na liniji 1
INFO  20:34:43,007 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:34:43,008 - Deklarisana konstanta c na liniji 2
INFO  20:34:43,008 - Deklarisana konstanta d na liniji 2
INFO  20:34:43,008 - Deklarisana konstanta g na liniji 2
INFO  20:34:43,008 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:34:43,008 - Deklarisana promenljiva e na liniji 3
INFO  20:34:43,008 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:34:43,008 - Deklarisan niz z na liniji 3
INFO  20:34:43,010 - Pocetak obrade metode main na liniji 5
INFO  20:34:43,010 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:34:43,010 - Zavrsetak obrade programa Program na liniji 1
INFO  20:34:43,010 - ======================TABELA_SIMBOLA==========================
INFO  20:34:43,011 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:34:43,013 - ==============================================================
INFO  20:34:43,013 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:34:43,013 - ==============================================================
INFO  20:34:43,013 - ======================GENERISANJE_KODA========================
INFO  20:34:43,023 - Generisanje koda uspesno zavrseno!
INFO  20:34:43,024 - Generisanje izlaznog fajla test\program.obj
INFO  20:34:43,025 - ==============================================================
INFO  20:35:56,647 - Obrada ulaznog fajla test\program.mj
INFO  20:35:56,741 - #2 program
INFO  20:35:56,741 - #8 Program
INFO  20:35:56,741 - #5 const
INFO  20:35:56,743 - #8 int
INFO  20:35:56,743 - #8 c
INFO  20:35:56,744 - #24 =
INFO  20:35:56,744 - #9 10
INFO  20:35:56,744 - #28 ,
INFO  20:35:56,746 - #8 d
INFO  20:35:56,746 - #24 =
INFO  20:35:56,746 - #9 99
INFO  20:35:56,746 - #28 ,
INFO  20:35:56,748 - #8 g
INFO  20:35:56,748 - #24 =
INFO  20:35:56,752 - #9 2
INFO  20:35:56,752 - #27 ;
INFO  20:35:56,752 - #8 int
INFO  20:35:56,754 - #8 e
INFO  20:35:56,754 - #27 ;
INFO  20:35:56,755 - #8 char
INFO  20:35:56,757 - #8 z
INFO  20:35:56,757 - #22 [
INFO  20:35:56,757 - #23 ]
INFO  20:35:56,757 - #27 ;
INFO  20:35:56,758 - #20 {
INFO  20:35:56,758 - #6 void
INFO  20:35:56,758 - #8 main
INFO  20:35:56,758 - #29 (
INFO  20:35:56,759 - #30 )
INFO  20:35:56,759 - #20 {
INFO  20:35:56,759 - #31 if
INFO  20:35:56,760 - #29 (
INFO  20:35:56,760 - #12 false
INFO  20:35:56,760 - #30 )
INFO  20:35:56,761 - #3 print
INFO  20:35:56,761 - #29 (
INFO  20:35:56,761 - #9 65
INFO  20:35:56,761 - #30 )
INFO  20:35:56,761 - #27 ;
INFO  20:35:56,762 - #3 print
INFO  20:35:56,762 - #29 (
INFO  20:35:56,763 - #9 77
INFO  20:35:56,763 - #30 )
INFO  20:35:56,763 - #27 ;
INFO  20:35:56,763 - #21 }
INFO  20:35:56,763 - #21 }
INFO  20:35:56,764 - =====================SINTAKSNO_STABLO=========================
INFO  20:35:56,766 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:35:56,766 - ==============================================================
INFO  20:35:56,779 - Pocetak obrade programa Program na liniji 1
INFO  20:35:56,779 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:35:56,780 - Deklarisana konstanta c na liniji 2
INFO  20:35:56,780 - Deklarisana konstanta d na liniji 2
INFO  20:35:56,780 - Deklarisana konstanta g na liniji 2
INFO  20:35:56,780 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:35:56,780 - Deklarisana promenljiva e na liniji 3
INFO  20:35:56,781 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:35:56,781 - Deklarisan niz z na liniji 3
INFO  20:35:56,782 - Pocetak obrade metode main na liniji 5
INFO  20:35:56,782 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:35:56,782 - Zavrsetak obrade programa Program na liniji 1
INFO  20:35:56,782 - ======================TABELA_SIMBOLA==========================
INFO  20:35:56,783 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:35:56,783 - ==============================================================
INFO  20:35:56,783 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:35:56,783 - ==============================================================
INFO  20:35:56,783 - ======================GENERISANJE_KODA========================
INFO  20:35:56,789 - Generisanje koda uspesno zavrseno!
INFO  20:35:56,789 - Generisanje izlaznog fajla test\program.obj
INFO  20:35:56,790 - ==============================================================
INFO  20:36:30,564 - Obrada ulaznog fajla test\program.mj
INFO  20:36:30,660 - #2 program
INFO  20:36:30,660 - #8 Program
INFO  20:36:30,661 - #5 const
INFO  20:36:30,663 - #8 int
INFO  20:36:30,663 - #8 c
INFO  20:36:30,664 - #24 =
INFO  20:36:30,665 - #9 10
INFO  20:36:30,665 - #28 ,
INFO  20:36:30,666 - #8 d
INFO  20:36:30,666 - #24 =
INFO  20:36:30,667 - #9 99
INFO  20:36:30,667 - #28 ,
INFO  20:36:30,667 - #8 g
INFO  20:36:30,668 - #24 =
INFO  20:36:30,668 - #9 2
INFO  20:36:30,668 - #27 ;
INFO  20:36:30,668 - #8 int
INFO  20:36:30,670 - #8 e
INFO  20:36:30,670 - #27 ;
INFO  20:36:30,670 - #8 char
INFO  20:36:30,672 - #8 z
INFO  20:36:30,672 - #22 [
INFO  20:36:30,672 - #23 ]
INFO  20:36:30,672 - #27 ;
INFO  20:36:30,672 - #20 {
INFO  20:36:30,673 - #6 void
INFO  20:36:30,673 - #8 main
INFO  20:36:30,673 - #29 (
INFO  20:36:30,674 - #30 )
INFO  20:36:30,674 - #20 {
INFO  20:36:30,675 - #31 if
INFO  20:36:30,675 - #29 (
INFO  20:36:30,675 - #11 true
INFO  20:36:30,675 - #30 )
INFO  20:36:30,676 - #3 print
INFO  20:36:30,676 - #29 (
INFO  20:36:30,676 - #9 65
INFO  20:36:30,676 - #30 )
INFO  20:36:30,676 - #27 ;
INFO  20:36:30,676 - #3 print
INFO  20:36:30,677 - #29 (
INFO  20:36:30,677 - #9 77
INFO  20:36:30,678 - #30 )
INFO  20:36:30,678 - #27 ;
INFO  20:36:30,678 - #21 }
INFO  20:36:30,678 - #21 }
INFO  20:36:30,679 - =====================SINTAKSNO_STABLO=========================
INFO  20:36:30,681 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:36:30,681 - ==============================================================
INFO  20:36:30,695 - Pocetak obrade programa Program na liniji 1
INFO  20:36:30,695 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:36:30,696 - Deklarisana konstanta c na liniji 2
INFO  20:36:30,696 - Deklarisana konstanta d na liniji 2
INFO  20:36:30,696 - Deklarisana konstanta g na liniji 2
INFO  20:36:30,697 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:36:30,697 - Deklarisana promenljiva e na liniji 3
INFO  20:36:30,697 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:36:30,697 - Deklarisan niz z na liniji 3
INFO  20:36:30,698 - Pocetak obrade metode main na liniji 5
INFO  20:36:30,698 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:36:30,698 - Zavrsetak obrade programa Program na liniji 1
INFO  20:36:30,698 - ======================TABELA_SIMBOLA==========================
INFO  20:36:30,699 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:36:30,699 - ==============================================================
INFO  20:36:30,700 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:36:30,700 - ==============================================================
INFO  20:36:30,700 - ======================GENERISANJE_KODA========================
INFO  20:36:30,705 - Generisanje koda uspesno zavrseno!
INFO  20:36:30,705 - Generisanje izlaznog fajla test\program.obj
INFO  20:36:30,705 - ==============================================================
INFO  20:39:38,557 - Obrada ulaznog fajla test\program.mj
INFO  20:39:38,637 - #2 program
INFO  20:39:38,637 - #8 Program
INFO  20:39:38,637 - #5 const
INFO  20:39:38,638 - #8 int
INFO  20:39:38,638 - #8 c
INFO  20:39:38,639 - #24 =
INFO  20:39:38,639 - #9 10
INFO  20:39:38,639 - #28 ,
INFO  20:39:38,640 - #8 d
INFO  20:39:38,641 - #24 =
INFO  20:39:38,641 - #9 99
INFO  20:39:38,641 - #28 ,
INFO  20:39:38,641 - #8 g
INFO  20:39:38,641 - #24 =
INFO  20:39:38,641 - #9 2
INFO  20:39:38,641 - #27 ;
INFO  20:39:38,641 - #8 int
INFO  20:39:38,643 - #8 e
INFO  20:39:38,643 - #27 ;
INFO  20:39:38,643 - #8 char
INFO  20:39:38,644 - #8 z
INFO  20:39:38,644 - #22 [
INFO  20:39:38,644 - #23 ]
INFO  20:39:38,644 - #27 ;
INFO  20:39:38,645 - #20 {
INFO  20:39:38,645 - #6 void
INFO  20:39:38,645 - #8 main
INFO  20:39:38,645 - #29 (
INFO  20:39:38,646 - #30 )
INFO  20:39:38,646 - #20 {
INFO  20:39:38,646 - #31 if
INFO  20:39:38,646 - #29 (
INFO  20:39:38,646 - #11 true
INFO  20:39:38,646 - #30 )
INFO  20:39:38,647 - #3 print
INFO  20:39:38,647 - #29 (
INFO  20:39:38,647 - #9 65
INFO  20:39:38,647 - #30 )
INFO  20:39:38,647 - #27 ;
INFO  20:39:38,647 - #3 print
INFO  20:39:38,648 - #29 (
INFO  20:39:38,648 - #9 77
INFO  20:39:38,649 - #30 )
INFO  20:39:38,649 - #27 ;
INFO  20:39:38,649 - #21 }
INFO  20:39:38,649 - #21 }
INFO  20:39:38,650 - =====================SINTAKSNO_STABLO=========================
INFO  20:39:38,652 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:39:38,652 - ==============================================================
INFO  20:39:38,667 - Pocetak obrade programa Program na liniji 1
INFO  20:39:38,668 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:39:38,669 - Deklarisana konstanta c na liniji 2
INFO  20:39:38,669 - Deklarisana konstanta d na liniji 2
INFO  20:39:38,669 - Deklarisana konstanta g na liniji 2
INFO  20:39:38,669 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:39:38,669 - Deklarisana promenljiva e na liniji 3
INFO  20:39:38,669 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:39:38,669 - Deklarisan niz z na liniji 3
INFO  20:39:38,670 - Pocetak obrade metode main na liniji 5
INFO  20:39:38,671 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:39:38,671 - Zavrsetak obrade programa Program na liniji 1
INFO  20:39:38,671 - ======================TABELA_SIMBOLA==========================
INFO  20:39:38,671 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:39:38,671 - ==============================================================
INFO  20:39:38,672 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:39:38,672 - ==============================================================
INFO  20:39:38,672 - ======================GENERISANJE_KODA========================
INFO  20:39:38,677 - Generisanje koda uspesno zavrseno!
INFO  20:39:38,677 - Generisanje izlaznog fajla test\program.obj
INFO  20:39:38,677 - ==============================================================
INFO  20:44:54,528 - Obrada ulaznog fajla test\program.mj
INFO  20:44:54,604 - #2 program
INFO  20:44:54,604 - #8 Program
INFO  20:44:54,604 - #5 const
INFO  20:44:54,605 - #8 int
INFO  20:44:54,605 - #8 c
INFO  20:44:54,605 - #24 =
INFO  20:44:54,605 - #9 10
INFO  20:44:54,606 - #28 ,
INFO  20:44:54,606 - #8 d
INFO  20:44:54,606 - #24 =
INFO  20:44:54,607 - #9 99
INFO  20:44:54,607 - #28 ,
INFO  20:44:54,607 - #8 g
INFO  20:44:54,607 - #24 =
INFO  20:44:54,607 - #9 2
INFO  20:44:54,608 - #27 ;
INFO  20:44:54,608 - #8 int
INFO  20:44:54,609 - #8 e
INFO  20:44:54,609 - #27 ;
INFO  20:44:54,609 - #8 char
INFO  20:44:54,610 - #8 z
INFO  20:44:54,610 - #22 [
INFO  20:44:54,610 - #23 ]
INFO  20:44:54,610 - #27 ;
INFO  20:44:54,611 - #20 {
INFO  20:44:54,611 - #6 void
INFO  20:44:54,611 - #8 main
INFO  20:44:54,611 - #29 (
INFO  20:44:54,611 - #30 )
INFO  20:44:54,612 - #20 {
INFO  20:44:54,612 - #31 if
INFO  20:44:54,612 - #29 (
INFO  20:44:54,612 - #11 true
INFO  20:44:54,612 - #30 )
INFO  20:44:54,613 - #3 print
INFO  20:44:54,613 - #29 (
INFO  20:44:54,613 - #9 65
INFO  20:44:54,613 - #30 )
INFO  20:44:54,613 - #27 ;
INFO  20:44:54,613 - #3 print
INFO  20:44:54,613 - #29 (
INFO  20:44:54,614 - #9 77
INFO  20:44:54,614 - #30 )
INFO  20:44:54,614 - #27 ;
INFO  20:44:54,614 - #21 }
INFO  20:44:54,614 - #21 }
INFO  20:44:54,615 - =====================SINTAKSNO_STABLO=========================
INFO  20:44:54,616 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:44:54,616 - ==============================================================
INFO  20:44:54,630 - Pocetak obrade programa Program na liniji 1
INFO  20:44:54,630 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:44:54,631 - Deklarisana konstanta c na liniji 2
INFO  20:44:54,631 - Deklarisana konstanta d na liniji 2
INFO  20:44:54,631 - Deklarisana konstanta g na liniji 2
INFO  20:44:54,631 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:44:54,632 - Deklarisana promenljiva e na liniji 3
INFO  20:44:54,632 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:44:54,632 - Deklarisan niz z na liniji 3
INFO  20:44:54,636 - Pocetak obrade metode main na liniji 5
INFO  20:44:54,637 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:44:54,637 - Zavrsetak obrade programa Program na liniji 1
INFO  20:44:54,637 - ======================TABELA_SIMBOLA==========================
INFO  20:44:54,637 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:44:54,638 - ==============================================================
INFO  20:44:54,638 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:44:54,638 - ==============================================================
INFO  20:44:54,638 - ======================GENERISANJE_KODA========================
INFO  20:44:54,644 - Generisanje koda uspesno zavrseno!
INFO  20:44:54,644 - Generisanje izlaznog fajla test\program.obj
INFO  20:44:54,645 - ==============================================================
INFO  20:45:14,821 - Obrada ulaznog fajla test\program.mj
INFO  20:45:14,903 - #2 program
INFO  20:45:14,904 - #8 Program
INFO  20:45:14,904 - #5 const
INFO  20:45:14,906 - #8 int
INFO  20:45:14,906 - #8 c
INFO  20:45:14,907 - #24 =
INFO  20:45:14,907 - #9 10
INFO  20:45:14,907 - #28 ,
INFO  20:45:14,908 - #8 d
INFO  20:45:14,908 - #24 =
INFO  20:45:14,908 - #9 99
INFO  20:45:14,909 - #28 ,
INFO  20:45:14,909 - #8 g
INFO  20:45:14,909 - #24 =
INFO  20:45:14,909 - #9 2
INFO  20:45:14,909 - #27 ;
INFO  20:45:14,909 - #8 int
INFO  20:45:14,911 - #8 e
INFO  20:45:14,911 - #27 ;
INFO  20:45:14,911 - #8 char
INFO  20:45:14,912 - #8 z
INFO  20:45:14,912 - #22 [
INFO  20:45:14,913 - #23 ]
INFO  20:45:14,913 - #27 ;
INFO  20:45:14,913 - #20 {
INFO  20:45:14,915 - #6 void
INFO  20:45:14,915 - #8 main
INFO  20:45:14,915 - #29 (
INFO  20:45:14,917 - #30 )
INFO  20:45:14,917 - #20 {
INFO  20:45:14,917 - #31 if
INFO  20:45:14,917 - #29 (
INFO  20:45:14,917 - #12 false
INFO  20:45:14,917 - #30 )
INFO  20:45:14,918 - #3 print
INFO  20:45:14,918 - #29 (
INFO  20:45:14,918 - #9 65
INFO  20:45:14,918 - #30 )
INFO  20:45:14,919 - #27 ;
INFO  20:45:14,919 - #3 print
INFO  20:45:14,919 - #29 (
INFO  20:45:14,919 - #9 77
INFO  20:45:14,919 - #30 )
INFO  20:45:14,919 - #27 ;
INFO  20:45:14,920 - #21 }
INFO  20:45:14,920 - #21 }
INFO  20:45:14,921 - =====================SINTAKSNO_STABLO=========================
INFO  20:45:14,927 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:45:14,927 - ==============================================================
INFO  20:45:14,945 - Pocetak obrade programa Program na liniji 1
INFO  20:45:14,945 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:45:14,946 - Deklarisana konstanta c na liniji 2
INFO  20:45:14,946 - Deklarisana konstanta d na liniji 2
INFO  20:45:14,946 - Deklarisana konstanta g na liniji 2
INFO  20:45:14,946 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:45:14,946 - Deklarisana promenljiva e na liniji 3
INFO  20:45:14,947 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:45:14,947 - Deklarisan niz z na liniji 3
INFO  20:45:14,948 - Pocetak obrade metode main na liniji 5
INFO  20:45:14,948 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:45:14,948 - Zavrsetak obrade programa Program na liniji 1
INFO  20:45:14,948 - ======================TABELA_SIMBOLA==========================
INFO  20:45:14,949 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:45:14,949 - ==============================================================
INFO  20:45:14,949 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:45:14,949 - ==============================================================
INFO  20:45:14,949 - ======================GENERISANJE_KODA========================
INFO  20:45:14,955 - Generisanje koda uspesno zavrseno!
INFO  20:45:14,956 - Generisanje izlaznog fajla test\program.obj
INFO  20:45:14,956 - ==============================================================
INFO  20:47:06,170 - Obrada ulaznog fajla test\program.mj
INFO  20:47:06,262 - #2 program
INFO  20:47:06,262 - #8 Program
INFO  20:47:06,262 - #5 const
INFO  20:47:06,263 - #8 int
INFO  20:47:06,263 - #8 c
INFO  20:47:06,264 - #24 =
INFO  20:47:06,265 - #9 10
INFO  20:47:06,265 - #28 ,
INFO  20:47:06,266 - #8 d
INFO  20:47:06,266 - #24 =
INFO  20:47:06,267 - #9 99
INFO  20:47:06,267 - #28 ,
INFO  20:47:06,267 - #8 g
INFO  20:47:06,267 - #24 =
INFO  20:47:06,267 - #9 2
INFO  20:47:06,267 - #27 ;
INFO  20:47:06,267 - #8 int
INFO  20:47:06,269 - #8 e
INFO  20:47:06,269 - #27 ;
INFO  20:47:06,269 - #8 char
INFO  20:47:06,271 - #8 z
INFO  20:47:06,271 - #22 [
INFO  20:47:06,271 - #23 ]
INFO  20:47:06,271 - #27 ;
INFO  20:47:06,271 - #20 {
INFO  20:47:06,274 - #6 void
INFO  20:47:06,274 - #8 main
INFO  20:47:06,274 - #29 (
INFO  20:47:06,275 - #30 )
INFO  20:47:06,275 - #20 {
INFO  20:47:06,275 - #31 if
INFO  20:47:06,275 - #29 (
INFO  20:47:06,276 - #12 false
INFO  20:47:06,276 - #30 )
INFO  20:47:06,277 - #3 print
INFO  20:47:06,277 - #29 (
INFO  20:47:06,277 - #9 65
INFO  20:47:06,277 - #30 )
INFO  20:47:06,278 - #27 ;
INFO  20:47:06,278 - #3 print
INFO  20:47:06,278 - #29 (
INFO  20:47:06,278 - #9 77
INFO  20:47:06,278 - #30 )
INFO  20:47:06,278 - #27 ;
INFO  20:47:06,278 - #21 }
INFO  20:47:06,279 - #21 }
INFO  20:47:06,280 - =====================SINTAKSNO_STABLO=========================
INFO  20:47:06,281 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:47:06,282 - ==============================================================
INFO  20:47:06,296 - Pocetak obrade programa Program na liniji 1
INFO  20:47:06,296 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:47:06,297 - Deklarisana konstanta c na liniji 2
INFO  20:47:06,297 - Deklarisana konstanta d na liniji 2
INFO  20:47:06,297 - Deklarisana konstanta g na liniji 2
INFO  20:47:06,298 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:47:06,298 - Deklarisana promenljiva e na liniji 3
INFO  20:47:06,298 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:47:06,298 - Deklarisan niz z na liniji 3
INFO  20:47:06,299 - Pocetak obrade metode main na liniji 5
INFO  20:47:06,299 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:47:06,299 - Zavrsetak obrade programa Program na liniji 1
INFO  20:47:06,299 - ======================TABELA_SIMBOLA==========================
INFO  20:47:06,300 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:47:06,300 - ==============================================================
INFO  20:47:06,300 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:47:06,300 - ==============================================================
INFO  20:47:06,300 - ======================GENERISANJE_KODA========================
INFO  20:47:06,305 - Generisanje koda uspesno zavrseno!
INFO  20:47:06,305 - Generisanje izlaznog fajla test\program.obj
INFO  20:47:06,305 - ==============================================================
INFO  20:48:28,579 - Obrada ulaznog fajla test\program.mj
INFO  20:48:28,664 - #2 program
INFO  20:48:28,664 - #8 Program
INFO  20:48:28,664 - #5 const
INFO  20:48:28,665 - #8 int
INFO  20:48:28,665 - #8 c
INFO  20:48:28,666 - #24 =
INFO  20:48:28,666 - #9 10
INFO  20:48:28,666 - #28 ,
INFO  20:48:28,667 - #8 d
INFO  20:48:28,668 - #24 =
INFO  20:48:28,668 - #9 99
INFO  20:48:28,668 - #28 ,
INFO  20:48:28,668 - #8 g
INFO  20:48:28,668 - #24 =
INFO  20:48:28,668 - #9 2
INFO  20:48:28,668 - #27 ;
INFO  20:48:28,668 - #8 int
INFO  20:48:28,670 - #8 e
INFO  20:48:28,670 - #27 ;
INFO  20:48:28,670 - #8 char
INFO  20:48:28,671 - #8 z
INFO  20:48:28,672 - #22 [
INFO  20:48:28,672 - #23 ]
INFO  20:48:28,672 - #27 ;
INFO  20:48:28,672 - #20 {
INFO  20:48:28,672 - #6 void
INFO  20:48:28,672 - #8 main
INFO  20:48:28,672 - #29 (
INFO  20:48:28,673 - #30 )
INFO  20:48:28,673 - #20 {
INFO  20:48:28,674 - #31 if
INFO  20:48:28,674 - #29 (
INFO  20:48:28,674 - #12 false
INFO  20:48:28,674 - #30 )
INFO  20:48:28,675 - #3 print
INFO  20:48:28,675 - #29 (
INFO  20:48:28,675 - #9 65
INFO  20:48:28,675 - #30 )
INFO  20:48:28,675 - #27 ;
INFO  20:48:28,675 - #3 print
INFO  20:48:28,676 - #29 (
INFO  20:48:28,676 - #9 77
INFO  20:48:28,676 - #30 )
INFO  20:48:28,676 - #27 ;
INFO  20:48:28,676 - #21 }
INFO  20:48:28,677 - #21 }
INFO  20:48:28,677 - =====================SINTAKSNO_STABLO=========================
INFO  20:48:28,679 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:48:28,679 - ==============================================================
INFO  20:48:28,696 - Pocetak obrade programa Program na liniji 1
INFO  20:48:28,697 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:48:28,697 - Deklarisana konstanta c na liniji 2
INFO  20:48:28,697 - Deklarisana konstanta d na liniji 2
INFO  20:48:28,698 - Deklarisana konstanta g na liniji 2
INFO  20:48:28,698 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:48:28,698 - Deklarisana promenljiva e na liniji 3
INFO  20:48:28,698 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:48:28,698 - Deklarisan niz z na liniji 3
INFO  20:48:28,699 - Pocetak obrade metode main na liniji 5
INFO  20:48:28,699 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:48:28,699 - Zavrsetak obrade programa Program na liniji 1
INFO  20:48:28,699 - ======================TABELA_SIMBOLA==========================
INFO  20:48:28,700 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:48:28,700 - ==============================================================
INFO  20:48:28,700 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:48:28,700 - ==============================================================
INFO  20:48:28,700 - ======================GENERISANJE_KODA========================
INFO  20:48:28,705 - Generisanje koda uspesno zavrseno!
INFO  20:48:28,705 - Generisanje izlaznog fajla test\program.obj
INFO  20:48:28,705 - ==============================================================
INFO  20:51:59,392 - Obrada ulaznog fajla test\program.mj
INFO  20:51:59,470 - #2 program
INFO  20:51:59,470 - #8 Program
INFO  20:51:59,470 - #5 const
INFO  20:51:59,471 - #8 int
INFO  20:51:59,471 - #8 c
INFO  20:51:59,472 - #24 =
INFO  20:51:59,472 - #9 10
INFO  20:51:59,472 - #28 ,
INFO  20:51:59,473 - #8 d
INFO  20:51:59,473 - #24 =
INFO  20:51:59,473 - #9 99
INFO  20:51:59,474 - #28 ,
INFO  20:51:59,474 - #8 g
INFO  20:51:59,474 - #24 =
INFO  20:51:59,474 - #9 2
INFO  20:51:59,474 - #27 ;
INFO  20:51:59,474 - #8 int
INFO  20:51:59,476 - #8 e
INFO  20:51:59,476 - #27 ;
INFO  20:51:59,477 - #8 char
INFO  20:51:59,478 - #8 z
INFO  20:51:59,478 - #22 [
INFO  20:51:59,478 - #23 ]
INFO  20:51:59,478 - #27 ;
INFO  20:51:59,479 - #20 {
INFO  20:51:59,479 - #6 void
INFO  20:51:59,479 - #8 main
INFO  20:51:59,479 - #29 (
INFO  20:51:59,480 - #30 )
INFO  20:51:59,480 - #20 {
INFO  20:51:59,480 - #31 if
INFO  20:51:59,481 - #29 (
INFO  20:51:59,481 - #12 false
INFO  20:51:59,481 - #30 )
INFO  20:51:59,482 - #3 print
INFO  20:51:59,482 - #29 (
INFO  20:51:59,482 - #9 65
INFO  20:51:59,482 - #30 )
INFO  20:51:59,482 - #27 ;
INFO  20:51:59,482 - #3 print
INFO  20:51:59,483 - #29 (
INFO  20:51:59,483 - #9 77
INFO  20:51:59,483 - #30 )
INFO  20:51:59,483 - #27 ;
INFO  20:51:59,483 - #21 }
INFO  20:51:59,483 - #21 }
INFO  20:51:59,484 - =====================SINTAKSNO_STABLO=========================
INFO  20:51:59,485 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:51:59,486 - ==============================================================
INFO  20:51:59,502 - Pocetak obrade programa Program na liniji 1
INFO  20:51:59,502 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:51:59,503 - Deklarisana konstanta c na liniji 2
INFO  20:51:59,503 - Deklarisana konstanta d na liniji 2
INFO  20:51:59,503 - Deklarisana konstanta g na liniji 2
INFO  20:51:59,503 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:51:59,504 - Deklarisana promenljiva e na liniji 3
INFO  20:51:59,504 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:51:59,504 - Deklarisan niz z na liniji 3
INFO  20:51:59,505 - Pocetak obrade metode main na liniji 5
INFO  20:51:59,505 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:51:59,505 - Zavrsetak obrade programa Program na liniji 1
INFO  20:51:59,505 - ======================TABELA_SIMBOLA==========================
INFO  20:51:59,506 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:51:59,506 - ==============================================================
INFO  20:51:59,506 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:51:59,506 - ==============================================================
INFO  20:51:59,506 - ======================GENERISANJE_KODA========================
INFO  20:51:59,512 - Generisanje koda uspesno zavrseno!
INFO  20:51:59,512 - Generisanje izlaznog fajla test\program.obj
INFO  20:51:59,512 - ==============================================================
INFO  20:53:21,601 - Obrada ulaznog fajla test\program.mj
INFO  20:53:21,698 - #2 program
INFO  20:53:21,699 - #8 Program
INFO  20:53:21,699 - #5 const
INFO  20:53:21,700 - #8 int
INFO  20:53:21,700 - #8 c
INFO  20:53:21,701 - #24 =
INFO  20:53:21,701 - #9 10
INFO  20:53:21,702 - #28 ,
INFO  20:53:21,704 - #8 d
INFO  20:53:21,704 - #24 =
INFO  20:53:21,704 - #9 99
INFO  20:53:21,704 - #28 ,
INFO  20:53:21,705 - #8 g
INFO  20:53:21,705 - #24 =
INFO  20:53:21,705 - #9 2
INFO  20:53:21,705 - #27 ;
INFO  20:53:21,705 - #8 int
INFO  20:53:21,707 - #8 e
INFO  20:53:21,707 - #27 ;
INFO  20:53:21,707 - #8 char
INFO  20:53:21,709 - #8 z
INFO  20:53:21,709 - #22 [
INFO  20:53:21,709 - #23 ]
INFO  20:53:21,709 - #27 ;
INFO  20:53:21,709 - #20 {
INFO  20:53:21,709 - #6 void
INFO  20:53:21,709 - #8 main
INFO  20:53:21,710 - #29 (
INFO  20:53:21,711 - #30 )
INFO  20:53:21,711 - #20 {
INFO  20:53:21,711 - #31 if
INFO  20:53:21,711 - #29 (
INFO  20:53:21,711 - #12 false
INFO  20:53:21,711 - #30 )
INFO  20:53:21,712 - #3 print
INFO  20:53:21,713 - #29 (
INFO  20:53:21,713 - #9 65
INFO  20:53:21,713 - #30 )
INFO  20:53:21,713 - #27 ;
INFO  20:53:21,713 - #3 print
INFO  20:53:21,714 - #29 (
INFO  20:53:21,714 - #9 77
INFO  20:53:21,714 - #30 )
INFO  20:53:21,714 - #27 ;
INFO  20:53:21,715 - #21 }
INFO  20:53:21,715 - #21 }
INFO  20:53:21,716 - =====================SINTAKSNO_STABLO=========================
INFO  20:53:21,718 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_if(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_false(
                           false
                          ) [Bool_const_false]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
              Stmt_print_1(
                Expr_single(
                  Term_single(
                    Factor_num_const(
                     65
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_single]
              ) [Stmt_print_1]
            ) [Stmt_if]
          ) [Statement_single]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:53:21,721 - ==============================================================
INFO  20:53:21,737 - Pocetak obrade programa Program na liniji 1
INFO  20:53:21,737 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:53:21,738 - Deklarisana konstanta c na liniji 2
INFO  20:53:21,739 - Deklarisana konstanta d na liniji 2
INFO  20:53:21,739 - Deklarisana konstanta g na liniji 2
INFO  20:53:21,739 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:53:21,739 - Deklarisana promenljiva e na liniji 3
INFO  20:53:21,739 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:53:21,739 - Deklarisan niz z na liniji 3
INFO  20:53:21,740 - Pocetak obrade metode main na liniji 5
INFO  20:53:21,740 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:53:21,741 - Zavrsetak obrade programa Program na liniji 1
INFO  20:53:21,741 - ======================TABELA_SIMBOLA==========================
INFO  20:53:21,741 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:53:21,742 - ==============================================================
INFO  20:53:21,742 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:53:21,742 - ==============================================================
INFO  20:53:21,742 - ======================GENERISANJE_KODA========================
INFO  20:53:21,747 - Generisanje koda uspesno zavrseno!
INFO  20:53:21,748 - Generisanje izlaznog fajla test\program.obj
INFO  20:53:21,748 - ==============================================================
INFO  20:53:58,940 - Obrada ulaznog fajla test\program.mj
INFO  20:53:59,014 - #2 program
INFO  20:53:59,014 - #8 Program
INFO  20:53:59,015 - #5 const
INFO  20:53:59,015 - #8 int
INFO  20:53:59,015 - #8 c
INFO  20:53:59,016 - #24 =
INFO  20:53:59,016 - #9 10
INFO  20:53:59,016 - #28 ,
INFO  20:53:59,017 - #8 d
INFO  20:53:59,017 - #24 =
INFO  20:53:59,017 - #9 99
INFO  20:53:59,018 - #28 ,
INFO  20:53:59,018 - #8 g
INFO  20:53:59,018 - #24 =
INFO  20:53:59,018 - #9 2
INFO  20:53:59,018 - #27 ;
INFO  20:53:59,018 - #8 int
INFO  20:53:59,019 - #8 e
INFO  20:53:59,019 - #27 ;
INFO  20:53:59,019 - #8 char
INFO  20:53:59,020 - #8 z
INFO  20:53:59,020 - #22 [
INFO  20:53:59,021 - #23 ]
INFO  20:53:59,021 - #27 ;
INFO  20:53:59,021 - #20 {
INFO  20:53:59,021 - #6 void
INFO  20:53:59,021 - #8 main
INFO  20:53:59,021 - #29 (
INFO  20:53:59,022 - #30 )
INFO  20:53:59,022 - #20 {
INFO  20:53:59,022 - #31 if
INFO  20:53:59,022 - #29 (
INFO  20:53:59,022 - #12 false
INFO  20:53:59,023 - #30 )
INFO  20:53:59,023 - #20 {
INFO  20:53:59,024 - #3 print
INFO  20:53:59,024 - #29 (
INFO  20:53:59,024 - #9 32
INFO  20:53:59,024 - #30 )
INFO  20:53:59,024 - #27 ;
INFO  20:53:59,024 - #3 print
INFO  20:53:59,025 - #29 (
INFO  20:53:59,025 - #9 64
INFO  20:53:59,025 - #30 )
INFO  20:53:59,025 - #27 ;
INFO  20:53:59,025 - #21 }
INFO  20:53:59,025 - #3 print
INFO  20:53:59,026 - #29 (
INFO  20:53:59,026 - #9 65
INFO  20:53:59,026 - #30 )
INFO  20:53:59,026 - #27 ;
INFO  20:53:59,026 - #3 print
INFO  20:53:59,026 - #29 (
INFO  20:53:59,026 - #9 77
INFO  20:53:59,026 - #30 )
INFO  20:53:59,027 - #27 ;
INFO  20:53:59,027 - #21 }
INFO  20:53:59,027 - #21 }
INFO  20:53:59,027 - =====================SINTAKSNO_STABLO=========================
INFO  20:53:59,029 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:53:59,029 - ==============================================================
INFO  20:53:59,042 - Pocetak obrade programa Program na liniji 1
INFO  20:53:59,042 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:53:59,044 - Deklarisana konstanta c na liniji 2
INFO  20:53:59,044 - Deklarisana konstanta d na liniji 2
INFO  20:53:59,044 - Deklarisana konstanta g na liniji 2
INFO  20:53:59,044 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:53:59,044 - Deklarisana promenljiva e na liniji 3
INFO  20:53:59,044 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:53:59,044 - Deklarisan niz z na liniji 3
INFO  20:53:59,045 - Pocetak obrade metode main na liniji 5
INFO  20:53:59,045 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:53:59,045 - Zavrsetak obrade programa Program na liniji 1
INFO  20:53:59,045 - ======================TABELA_SIMBOLA==========================
INFO  20:53:59,046 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:53:59,048 - ==============================================================
INFO  20:53:59,048 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:53:59,048 - ==============================================================
INFO  20:53:59,048 - ======================GENERISANJE_KODA========================
INFO  20:53:59,054 - Generisanje koda uspesno zavrseno!
INFO  20:53:59,054 - Generisanje izlaznog fajla test\program.obj
INFO  20:53:59,054 - ==============================================================
INFO  20:54:24,118 - Obrada ulaznog fajla test\program.mj
INFO  20:54:24,207 - #2 program
INFO  20:54:24,207 - #8 Program
INFO  20:54:24,208 - #5 const
INFO  20:54:24,209 - #8 int
INFO  20:54:24,209 - #8 c
INFO  20:54:24,209 - #24 =
INFO  20:54:24,210 - #9 10
INFO  20:54:24,210 - #28 ,
INFO  20:54:24,211 - #8 d
INFO  20:54:24,211 - #24 =
INFO  20:54:24,211 - #9 99
INFO  20:54:24,211 - #28 ,
INFO  20:54:24,211 - #8 g
INFO  20:54:24,212 - #24 =
INFO  20:54:24,212 - #9 2
INFO  20:54:24,212 - #27 ;
INFO  20:54:24,212 - #8 int
INFO  20:54:24,213 - #8 e
INFO  20:54:24,213 - #27 ;
INFO  20:54:24,213 - #8 char
INFO  20:54:24,215 - #8 z
INFO  20:54:24,215 - #22 [
INFO  20:54:24,215 - #23 ]
INFO  20:54:24,215 - #27 ;
INFO  20:54:24,215 - #20 {
INFO  20:54:24,216 - #6 void
INFO  20:54:24,216 - #8 main
INFO  20:54:24,216 - #29 (
INFO  20:54:24,217 - #30 )
INFO  20:54:24,217 - #20 {
INFO  20:54:24,217 - #31 if
INFO  20:54:24,217 - #29 (
INFO  20:54:24,217 - #11 true
INFO  20:54:24,217 - #30 )
INFO  20:54:24,218 - #20 {
INFO  20:54:24,218 - #3 print
INFO  20:54:24,218 - #29 (
INFO  20:54:24,218 - #9 32
INFO  20:54:24,218 - #30 )
INFO  20:54:24,218 - #27 ;
INFO  20:54:24,218 - #3 print
INFO  20:54:24,219 - #29 (
INFO  20:54:24,219 - #9 64
INFO  20:54:24,219 - #30 )
INFO  20:54:24,219 - #27 ;
INFO  20:54:24,219 - #21 }
INFO  20:54:24,219 - #3 print
INFO  20:54:24,220 - #29 (
INFO  20:54:24,220 - #9 65
INFO  20:54:24,220 - #30 )
INFO  20:54:24,220 - #27 ;
INFO  20:54:24,220 - #3 print
INFO  20:54:24,220 - #29 (
INFO  20:54:24,220 - #9 77
INFO  20:54:24,220 - #30 )
INFO  20:54:24,221 - #27 ;
INFO  20:54:24,221 - #21 }
INFO  20:54:24,221 - #21 }
INFO  20:54:24,222 - =====================SINTAKSNO_STABLO=========================
INFO  20:54:24,223 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_true(
                             true
                            ) [Bool_const_true]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:54:24,224 - ==============================================================
INFO  20:54:24,237 - Pocetak obrade programa Program na liniji 1
INFO  20:54:24,237 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:54:24,238 - Deklarisana konstanta c na liniji 2
INFO  20:54:24,238 - Deklarisana konstanta d na liniji 2
INFO  20:54:24,238 - Deklarisana konstanta g na liniji 2
INFO  20:54:24,238 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:54:24,238 - Deklarisana promenljiva e na liniji 3
INFO  20:54:24,238 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  20:54:24,239 - Deklarisan niz z na liniji 3
INFO  20:54:24,239 - Pocetak obrade metode main na liniji 5
INFO  20:54:24,239 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:54:24,240 - Zavrsetak obrade programa Program na liniji 1
INFO  20:54:24,240 - ======================TABELA_SIMBOLA==========================
INFO  20:54:24,240 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  20:54:24,242 - ==============================================================
INFO  20:54:24,242 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:54:24,242 - ==============================================================
INFO  20:54:24,242 - ======================GENERISANJE_KODA========================
INFO  20:54:24,246 - Generisanje koda uspesno zavrseno!
INFO  20:54:24,246 - Generisanje izlaznog fajla test\program.obj
INFO  20:54:24,247 - ==============================================================
INFO  21:11:59,728 - Obrada ulaznog fajla test\program.mj
INFO  21:11:59,810 - #2 program
INFO  21:11:59,810 - #8 Program
INFO  21:11:59,811 - #5 const
INFO  21:11:59,811 - #8 int
INFO  21:11:59,811 - #8 c
INFO  21:11:59,812 - #24 =
INFO  21:11:59,812 - #9 10
INFO  21:11:59,812 - #28 ,
INFO  21:11:59,813 - #8 d
INFO  21:11:59,813 - #24 =
INFO  21:11:59,813 - #9 99
INFO  21:11:59,813 - #28 ,
INFO  21:11:59,813 - #8 g
INFO  21:11:59,814 - #24 =
INFO  21:11:59,814 - #9 2
INFO  21:11:59,814 - #27 ;
INFO  21:11:59,814 - #8 int
INFO  21:11:59,815 - #8 e
INFO  21:11:59,815 - #27 ;
INFO  21:11:59,815 - #8 char
INFO  21:11:59,817 - #8 z
INFO  21:11:59,817 - #22 [
INFO  21:11:59,818 - #23 ]
INFO  21:11:59,818 - #27 ;
INFO  21:11:59,818 - #20 {
INFO  21:11:59,818 - #6 void
INFO  21:11:59,818 - #8 main
INFO  21:11:59,818 - #29 (
INFO  21:11:59,819 - #30 )
INFO  21:11:59,819 - #20 {
INFO  21:11:59,819 - #31 if
INFO  21:11:59,819 - #29 (
INFO  21:11:59,819 - #11 true
INFO  21:11:59,819 - #30 )
INFO  21:11:59,820 - #20 {
INFO  21:11:59,820 - #3 print
INFO  21:11:59,820 - #29 (
INFO  21:11:59,821 - #9 32
INFO  21:11:59,822 - #30 )
INFO  21:11:59,822 - #27 ;
INFO  21:11:59,822 - #3 print
INFO  21:11:59,822 - #29 (
INFO  21:11:59,822 - #9 64
INFO  21:11:59,822 - #30 )
INFO  21:11:59,823 - #27 ;
INFO  21:11:59,823 - #21 }
INFO  21:11:59,823 - #3 print
INFO  21:11:59,823 - #29 (
INFO  21:11:59,823 - #9 65
INFO  21:11:59,824 - #30 )
INFO  21:11:59,824 - #27 ;
INFO  21:11:59,824 - #3 print
INFO  21:11:59,824 - #29 (
INFO  21:11:59,824 - #9 77
INFO  21:11:59,824 - #30 )
INFO  21:11:59,824 - #27 ;
INFO  21:11:59,824 - #21 }
INFO  21:11:59,824 - #21 }
INFO  21:11:59,825 - =====================SINTAKSNO_STABLO=========================
INFO  21:11:59,826 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_true(
                             true
                            ) [Bool_const_true]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Keyword_print(
                        ) [Keyword_print]
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Keyword_print(
                      ) [Keyword_print]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Keyword_print(
              ) [Keyword_print]
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Keyword_print(
            ) [Keyword_print]
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:11:59,827 - ==============================================================
INFO  21:11:59,839 - Pocetak obrade programa Program na liniji 1
INFO  21:11:59,839 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:11:59,840 - Deklarisana konstanta c na liniji 2
INFO  21:11:59,840 - Deklarisana konstanta d na liniji 2
INFO  21:11:59,840 - Deklarisana konstanta g na liniji 2
INFO  21:11:59,841 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:11:59,841 - Deklarisana promenljiva e na liniji 3
INFO  21:11:59,841 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:11:59,841 - Deklarisan niz z na liniji 3
INFO  21:11:59,842 - Pocetak obrade metode main na liniji 5
INFO  21:11:59,842 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:11:59,843 - Zavrsetak obrade programa Program na liniji 1
INFO  21:11:59,843 - ======================TABELA_SIMBOLA==========================
INFO  21:11:59,843 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:11:59,845 - ==============================================================
INFO  21:11:59,845 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:11:59,845 - ==============================================================
INFO  21:11:59,845 - ======================GENERISANJE_KODA========================
INFO  21:11:59,851 - Generisanje koda uspesno zavrseno!
INFO  21:11:59,851 - Generisanje izlaznog fajla test\program.obj
INFO  21:11:59,851 - ==============================================================
INFO  21:12:34,225 - Obrada ulaznog fajla test\program.mj
INFO  21:12:34,303 - #2 program
INFO  21:12:34,303 - #8 Program
INFO  21:12:34,303 - #5 const
INFO  21:12:34,304 - #8 int
INFO  21:12:34,304 - #8 c
INFO  21:12:34,305 - #24 =
INFO  21:12:34,305 - #9 10
INFO  21:12:34,305 - #28 ,
INFO  21:12:34,306 - #8 d
INFO  21:12:34,306 - #24 =
INFO  21:12:34,306 - #9 99
INFO  21:12:34,306 - #28 ,
INFO  21:12:34,306 - #8 g
INFO  21:12:34,306 - #24 =
INFO  21:12:34,307 - #9 2
INFO  21:12:34,307 - #27 ;
INFO  21:12:34,307 - #8 int
INFO  21:12:34,308 - #8 e
INFO  21:12:34,308 - #27 ;
INFO  21:12:34,309 - #8 char
INFO  21:12:34,310 - #8 z
INFO  21:12:34,310 - #22 [
INFO  21:12:34,310 - #23 ]
INFO  21:12:34,310 - #27 ;
INFO  21:12:34,310 - #20 {
INFO  21:12:34,310 - #6 void
INFO  21:12:34,310 - #8 main
INFO  21:12:34,310 - #29 (
INFO  21:12:34,311 - #30 )
INFO  21:12:34,311 - #20 {
INFO  21:12:34,311 - #31 if
INFO  21:12:34,312 - #29 (
INFO  21:12:34,312 - #12 false
INFO  21:12:34,312 - #30 )
INFO  21:12:34,313 - #20 {
INFO  21:12:34,313 - #3 print
INFO  21:12:34,313 - #29 (
INFO  21:12:34,313 - #9 32
INFO  21:12:34,314 - #30 )
INFO  21:12:34,314 - #27 ;
INFO  21:12:34,314 - #3 print
INFO  21:12:34,314 - #29 (
INFO  21:12:34,314 - #9 64
INFO  21:12:34,314 - #30 )
INFO  21:12:34,314 - #27 ;
INFO  21:12:34,314 - #21 }
INFO  21:12:34,315 - #3 print
INFO  21:12:34,315 - #29 (
INFO  21:12:34,315 - #9 65
INFO  21:12:34,315 - #30 )
INFO  21:12:34,315 - #27 ;
INFO  21:12:34,315 - #3 print
INFO  21:12:34,315 - #29 (
INFO  21:12:34,315 - #9 77
INFO  21:12:34,316 - #30 )
INFO  21:12:34,316 - #27 ;
INFO  21:12:34,316 - #21 }
INFO  21:12:34,316 - #21 }
INFO  21:12:34,317 - =====================SINTAKSNO_STABLO=========================
INFO  21:12:34,318 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Keyword_print(
                        ) [Keyword_print]
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Keyword_print(
                      ) [Keyword_print]
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Keyword_print(
              ) [Keyword_print]
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Keyword_print(
            ) [Keyword_print]
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:12:34,319 - ==============================================================
INFO  21:12:34,333 - Pocetak obrade programa Program na liniji 1
INFO  21:12:34,333 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:12:34,334 - Deklarisana konstanta c na liniji 2
INFO  21:12:34,334 - Deklarisana konstanta d na liniji 2
INFO  21:12:34,334 - Deklarisana konstanta g na liniji 2
INFO  21:12:34,335 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:12:34,335 - Deklarisana promenljiva e na liniji 3
INFO  21:12:34,335 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:12:34,335 - Deklarisan niz z na liniji 3
INFO  21:12:34,336 - Pocetak obrade metode main na liniji 5
INFO  21:12:34,336 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:12:34,337 - Zavrsetak obrade programa Program na liniji 1
INFO  21:12:34,337 - ======================TABELA_SIMBOLA==========================
INFO  21:12:34,337 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:12:34,339 - ==============================================================
INFO  21:12:34,339 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:12:34,339 - ==============================================================
INFO  21:12:34,339 - ======================GENERISANJE_KODA========================
INFO  21:12:34,344 - Generisanje koda uspesno zavrseno!
INFO  21:12:34,344 - Generisanje izlaznog fajla test\program.obj
INFO  21:12:34,344 - ==============================================================
INFO  21:29:15,845 - Obrada ulaznog fajla test\program.mj
INFO  21:29:15,956 - #2 program
INFO  21:29:15,957 - #8 Program
INFO  21:29:15,957 - #5 const
INFO  21:29:15,958 - #8 int
INFO  21:29:15,958 - #8 c
INFO  21:29:15,959 - #24 =
INFO  21:29:15,960 - #9 10
INFO  21:29:15,960 - #28 ,
INFO  21:29:15,961 - #8 d
INFO  21:29:15,962 - #24 =
INFO  21:29:15,962 - #9 99
INFO  21:29:15,962 - #28 ,
INFO  21:29:15,962 - #8 g
INFO  21:29:15,962 - #24 =
INFO  21:29:15,962 - #9 2
INFO  21:29:15,963 - #27 ;
INFO  21:29:15,963 - #8 int
INFO  21:29:15,964 - #8 e
INFO  21:29:15,964 - #27 ;
INFO  21:29:15,964 - #8 char
INFO  21:29:15,966 - #8 z
INFO  21:29:15,966 - #22 [
INFO  21:29:15,966 - #23 ]
INFO  21:29:15,966 - #27 ;
INFO  21:29:15,966 - #20 {
INFO  21:29:15,966 - #6 void
INFO  21:29:15,966 - #8 main
INFO  21:29:15,967 - #29 (
INFO  21:29:15,967 - #30 )
INFO  21:29:15,968 - #20 {
INFO  21:29:15,968 - #31 if
INFO  21:29:15,968 - #29 (
INFO  21:29:15,968 - #12 false
INFO  21:29:15,968 - #30 )
INFO  21:29:15,969 - #20 {
INFO  21:29:15,970 - #3 print
INFO  21:29:15,970 - #29 (
INFO  21:29:15,970 - #9 32
INFO  21:29:15,970 - #30 )
INFO  21:29:15,970 - #27 ;
INFO  21:29:15,970 - #3 print
INFO  21:29:15,971 - #29 (
INFO  21:29:15,972 - #9 64
INFO  21:29:15,972 - #30 )
INFO  21:29:15,973 - #27 ;
INFO  21:29:15,973 - #21 }
INFO  21:29:15,973 - #3 print
INFO  21:29:15,974 - #29 (
INFO  21:29:15,974 - #9 65
INFO  21:29:15,974 - #30 )
INFO  21:29:15,975 - #27 ;
INFO  21:29:15,976 - #3 print
INFO  21:29:15,979 - #29 (
INFO  21:29:15,979 - #9 77
INFO  21:29:15,979 - #30 )
INFO  21:29:15,979 - #27 ;
INFO  21:29:15,979 - #21 }
INFO  21:29:15,979 - #21 }
INFO  21:29:15,980 - =====================SINTAKSNO_STABLO=========================
INFO  21:29:15,982 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:29:15,983 - ==============================================================
INFO  21:29:15,998 - Pocetak obrade programa Program na liniji 1
INFO  21:29:15,999 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:29:16,000 - Deklarisana konstanta c na liniji 2
INFO  21:29:16,001 - Deklarisana konstanta d na liniji 2
INFO  21:29:16,001 - Deklarisana konstanta g na liniji 2
INFO  21:29:16,001 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:29:16,001 - Deklarisana promenljiva e na liniji 3
INFO  21:29:16,001 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:29:16,001 - Deklarisan niz z na liniji 3
INFO  21:29:16,002 - Pocetak obrade metode main na liniji 5
INFO  21:29:16,002 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:29:16,002 - Zavrsetak obrade programa Program na liniji 1
INFO  21:29:16,002 - ======================TABELA_SIMBOLA==========================
INFO  21:29:16,003 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:29:16,005 - ==============================================================
INFO  21:29:16,005 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:29:16,005 - ==============================================================
INFO  21:29:16,005 - ======================GENERISANJE_KODA========================
INFO  21:29:16,010 - Generisanje koda uspesno zavrseno!
INFO  21:29:16,011 - Generisanje izlaznog fajla test\program.obj
INFO  21:29:16,011 - ==============================================================
INFO  21:30:17,258 - Obrada ulaznog fajla test\program.mj
INFO  21:30:17,364 - #2 program
INFO  21:30:17,365 - #8 Program
INFO  21:30:17,365 - #5 const
INFO  21:30:17,366 - #8 int
INFO  21:30:17,366 - #8 c
INFO  21:30:17,367 - #24 =
INFO  21:30:17,367 - #9 10
INFO  21:30:17,367 - #28 ,
INFO  21:30:17,369 - #8 d
INFO  21:30:17,369 - #24 =
INFO  21:30:17,369 - #9 99
INFO  21:30:17,369 - #28 ,
INFO  21:30:17,369 - #8 g
INFO  21:30:17,369 - #24 =
INFO  21:30:17,369 - #9 2
INFO  21:30:17,369 - #27 ;
INFO  21:30:17,370 - #8 int
INFO  21:30:17,372 - #8 e
INFO  21:30:17,372 - #27 ;
INFO  21:30:17,373 - #8 char
INFO  21:30:17,374 - #8 z
INFO  21:30:17,374 - #22 [
INFO  21:30:17,374 - #23 ]
INFO  21:30:17,375 - #27 ;
INFO  21:30:17,375 - #20 {
INFO  21:30:17,375 - #6 void
INFO  21:30:17,375 - #8 main
INFO  21:30:17,375 - #29 (
INFO  21:30:17,376 - #30 )
INFO  21:30:17,376 - #20 {
INFO  21:30:17,376 - #31 if
INFO  21:30:17,377 - #29 (
INFO  21:30:17,377 - #12 false
INFO  21:30:17,377 - #30 )
INFO  21:30:17,378 - #20 {
INFO  21:30:17,378 - #3 print
INFO  21:30:17,378 - #29 (
INFO  21:30:17,378 - #9 32
INFO  21:30:17,379 - #30 )
INFO  21:30:17,379 - #27 ;
INFO  21:30:17,379 - #3 print
INFO  21:30:17,379 - #29 (
INFO  21:30:17,379 - #9 64
INFO  21:30:17,380 - #30 )
INFO  21:30:17,380 - #27 ;
INFO  21:30:17,380 - #21 }
INFO  21:30:17,380 - #3 print
INFO  21:30:17,381 - #29 (
INFO  21:30:17,381 - #9 65
INFO  21:30:17,381 - #30 )
INFO  21:30:17,381 - #27 ;
INFO  21:30:17,381 - #3 print
INFO  21:30:17,381 - #29 (
INFO  21:30:17,381 - #9 77
INFO  21:30:17,381 - #30 )
INFO  21:30:17,382 - #27 ;
INFO  21:30:17,382 - #21 }
INFO  21:30:17,382 - #21 }
INFO  21:30:17,383 - =====================SINTAKSNO_STABLO=========================
INFO  21:30:17,384 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:30:17,386 - ==============================================================
INFO  21:30:17,401 - Pocetak obrade programa Program na liniji 1
INFO  21:30:17,401 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:30:17,403 - Deklarisana konstanta c na liniji 2
INFO  21:30:17,403 - Deklarisana konstanta d na liniji 2
INFO  21:30:17,403 - Deklarisana konstanta g na liniji 2
INFO  21:30:17,403 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:30:17,403 - Deklarisana promenljiva e na liniji 3
INFO  21:30:17,403 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:30:17,403 - Deklarisan niz z na liniji 3
INFO  21:30:17,405 - Pocetak obrade metode main na liniji 5
INFO  21:30:17,405 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:30:17,405 - Zavrsetak obrade programa Program na liniji 1
INFO  21:30:17,405 - ======================TABELA_SIMBOLA==========================
INFO  21:30:17,406 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:30:17,408 - ==============================================================
INFO  21:30:17,408 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:30:17,408 - ==============================================================
INFO  21:30:17,408 - ======================GENERISANJE_KODA========================
INFO  21:30:28,260 - Obrada ulaznog fajla test\program.mj
INFO  21:30:28,349 - #2 program
INFO  21:30:28,349 - #8 Program
INFO  21:30:28,349 - #5 const
INFO  21:30:28,350 - #8 int
INFO  21:30:28,350 - #8 c
INFO  21:30:28,351 - #24 =
INFO  21:30:28,351 - #9 10
INFO  21:30:28,351 - #28 ,
INFO  21:30:28,352 - #8 d
INFO  21:30:28,352 - #24 =
INFO  21:30:28,352 - #9 99
INFO  21:30:28,352 - #28 ,
INFO  21:30:28,353 - #8 g
INFO  21:30:28,353 - #24 =
INFO  21:30:28,353 - #9 2
INFO  21:30:28,353 - #27 ;
INFO  21:30:28,353 - #8 int
INFO  21:30:28,355 - #8 e
INFO  21:30:28,356 - #27 ;
INFO  21:30:28,356 - #8 char
INFO  21:30:28,357 - #8 z
INFO  21:30:28,358 - #22 [
INFO  21:30:28,358 - #23 ]
INFO  21:30:28,358 - #27 ;
INFO  21:30:28,358 - #20 {
INFO  21:30:28,358 - #6 void
INFO  21:30:28,358 - #8 main
INFO  21:30:28,358 - #29 (
INFO  21:30:28,360 - #30 )
INFO  21:30:28,360 - #20 {
INFO  21:30:28,360 - #31 if
INFO  21:30:28,360 - #29 (
INFO  21:30:28,360 - #12 false
INFO  21:30:28,360 - #30 )
INFO  21:30:28,362 - #20 {
INFO  21:30:28,362 - #3 print
INFO  21:30:28,362 - #29 (
INFO  21:30:28,362 - #9 32
INFO  21:30:28,362 - #30 )
INFO  21:30:28,362 - #27 ;
INFO  21:30:28,363 - #3 print
INFO  21:30:28,363 - #29 (
INFO  21:30:28,363 - #9 64
INFO  21:30:28,363 - #30 )
INFO  21:30:28,363 - #27 ;
INFO  21:30:28,363 - #21 }
INFO  21:30:28,364 - #3 print
INFO  21:30:28,364 - #29 (
INFO  21:30:28,364 - #9 65
INFO  21:30:28,364 - #30 )
INFO  21:30:28,364 - #27 ;
INFO  21:30:28,365 - #3 print
INFO  21:30:28,365 - #29 (
INFO  21:30:28,365 - #9 77
INFO  21:30:28,365 - #30 )
INFO  21:30:28,365 - #27 ;
INFO  21:30:28,365 - #21 }
INFO  21:30:28,365 - #21 }
INFO  21:30:28,366 - =====================SINTAKSNO_STABLO=========================
INFO  21:30:28,369 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:30:28,369 - ==============================================================
INFO  21:30:28,386 - Pocetak obrade programa Program na liniji 1
INFO  21:30:28,387 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:30:28,389 - Deklarisana konstanta c na liniji 2
INFO  21:30:28,389 - Deklarisana konstanta d na liniji 2
INFO  21:30:28,389 - Deklarisana konstanta g na liniji 2
INFO  21:30:28,389 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:30:28,389 - Deklarisana promenljiva e na liniji 3
INFO  21:30:28,389 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:30:28,389 - Deklarisan niz z na liniji 3
INFO  21:30:28,390 - Pocetak obrade metode main na liniji 5
INFO  21:30:28,391 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:30:28,391 - Zavrsetak obrade programa Program na liniji 1
INFO  21:30:28,391 - ======================TABELA_SIMBOLA==========================
INFO  21:30:28,392 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:30:28,392 - ==============================================================
INFO  21:30:28,392 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:30:28,392 - ==============================================================
INFO  21:30:28,392 - ======================GENERISANJE_KODA========================
INFO  21:30:41,686 - Obrada ulaznog fajla test\program.mj
INFO  21:30:41,776 - #2 program
INFO  21:30:41,776 - #8 Program
INFO  21:30:41,776 - #5 const
INFO  21:30:41,777 - #8 int
INFO  21:30:41,777 - #8 c
INFO  21:30:41,778 - #24 =
INFO  21:30:41,779 - #9 10
INFO  21:30:41,779 - #28 ,
INFO  21:30:41,780 - #8 d
INFO  21:30:41,780 - #24 =
INFO  21:30:41,781 - #9 99
INFO  21:30:41,781 - #28 ,
INFO  21:30:41,781 - #8 g
INFO  21:30:41,781 - #24 =
INFO  21:30:41,781 - #9 2
INFO  21:30:41,781 - #27 ;
INFO  21:30:41,781 - #8 int
INFO  21:30:41,783 - #8 e
INFO  21:30:41,783 - #27 ;
INFO  21:30:41,783 - #8 char
INFO  21:30:41,786 - #8 z
INFO  21:30:41,786 - #22 [
INFO  21:30:41,787 - #23 ]
INFO  21:30:41,787 - #27 ;
INFO  21:30:41,787 - #20 {
INFO  21:30:41,787 - #6 void
INFO  21:30:41,787 - #8 main
INFO  21:30:41,787 - #29 (
INFO  21:30:41,788 - #30 )
INFO  21:30:41,788 - #20 {
INFO  21:30:41,789 - #31 if
INFO  21:30:41,789 - #29 (
INFO  21:30:41,789 - #12 false
INFO  21:30:41,789 - #30 )
INFO  21:30:41,790 - #20 {
INFO  21:30:41,790 - #3 print
INFO  21:30:41,790 - #29 (
INFO  21:30:41,790 - #9 32
INFO  21:30:41,791 - #30 )
INFO  21:30:41,791 - #27 ;
INFO  21:30:41,791 - #3 print
INFO  21:30:41,791 - #29 (
INFO  21:30:41,791 - #9 64
INFO  21:30:41,791 - #30 )
INFO  21:30:41,791 - #27 ;
INFO  21:30:41,791 - #21 }
INFO  21:30:41,792 - #3 print
INFO  21:30:41,792 - #29 (
INFO  21:30:41,792 - #9 65
INFO  21:30:41,792 - #30 )
INFO  21:30:41,792 - #27 ;
INFO  21:30:41,792 - #3 print
INFO  21:30:41,793 - #29 (
INFO  21:30:41,793 - #9 77
INFO  21:30:41,793 - #30 )
INFO  21:30:41,793 - #27 ;
INFO  21:30:41,793 - #21 }
INFO  21:30:41,793 - #21 }
INFO  21:30:41,795 - =====================SINTAKSNO_STABLO=========================
INFO  21:30:41,797 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:30:41,801 - ==============================================================
INFO  21:30:41,818 - Pocetak obrade programa Program na liniji 1
INFO  21:30:41,819 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:30:41,820 - Deklarisana konstanta c na liniji 2
INFO  21:30:41,820 - Deklarisana konstanta d na liniji 2
INFO  21:30:41,820 - Deklarisana konstanta g na liniji 2
INFO  21:30:41,820 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:30:41,820 - Deklarisana promenljiva e na liniji 3
INFO  21:30:41,820 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:30:41,820 - Deklarisan niz z na liniji 3
INFO  21:30:41,822 - Pocetak obrade metode main na liniji 5
INFO  21:30:41,822 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:30:41,822 - Zavrsetak obrade programa Program na liniji 1
INFO  21:30:41,822 - ======================TABELA_SIMBOLA==========================
INFO  21:30:41,823 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:30:41,825 - ==============================================================
INFO  21:30:41,825 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:30:41,825 - ==============================================================
INFO  21:30:41,825 - ======================GENERISANJE_KODA========================
INFO  21:30:41,831 - Generisanje koda uspesno zavrseno!
INFO  21:30:41,831 - Generisanje izlaznog fajla test\program.obj
INFO  21:30:41,831 - ==============================================================
INFO  21:30:46,157 - Obrada ulaznog fajla test\program.mj
INFO  21:30:46,267 - #2 program
INFO  21:30:46,267 - #8 Program
INFO  21:30:46,267 - #5 const
INFO  21:30:46,269 - #8 int
INFO  21:30:46,269 - #8 c
INFO  21:30:46,270 - #24 =
INFO  21:30:46,270 - #9 10
INFO  21:30:46,271 - #28 ,
INFO  21:30:46,272 - #8 d
INFO  21:30:46,272 - #24 =
INFO  21:30:46,273 - #9 99
INFO  21:30:46,273 - #28 ,
INFO  21:30:46,273 - #8 g
INFO  21:30:46,273 - #24 =
INFO  21:30:46,273 - #9 2
INFO  21:30:46,274 - #27 ;
INFO  21:30:46,274 - #8 int
INFO  21:30:46,275 - #8 e
INFO  21:30:46,276 - #27 ;
INFO  21:30:46,276 - #8 char
INFO  21:30:46,278 - #8 z
INFO  21:30:46,279 - #22 [
INFO  21:30:46,279 - #23 ]
INFO  21:30:46,279 - #27 ;
INFO  21:30:46,279 - #20 {
INFO  21:30:46,279 - #6 void
INFO  21:30:46,280 - #8 main
INFO  21:30:46,280 - #29 (
INFO  21:30:46,281 - #30 )
INFO  21:30:46,281 - #20 {
INFO  21:30:46,281 - #31 if
INFO  21:30:46,281 - #29 (
INFO  21:30:46,281 - #12 false
INFO  21:30:46,281 - #30 )
INFO  21:30:46,283 - #20 {
INFO  21:30:46,283 - #3 print
INFO  21:30:46,283 - #29 (
INFO  21:30:46,283 - #9 32
INFO  21:30:46,283 - #30 )
INFO  21:30:46,284 - #27 ;
INFO  21:30:46,284 - #3 print
INFO  21:30:46,284 - #29 (
INFO  21:30:46,284 - #9 64
INFO  21:30:46,284 - #30 )
INFO  21:30:46,284 - #27 ;
INFO  21:30:46,284 - #21 }
INFO  21:30:46,285 - #3 print
INFO  21:30:46,285 - #29 (
INFO  21:30:46,285 - #9 65
INFO  21:30:46,285 - #30 )
INFO  21:30:46,286 - #27 ;
INFO  21:30:46,286 - #3 print
INFO  21:30:46,286 - #29 (
INFO  21:30:46,286 - #9 77
INFO  21:30:46,286 - #30 )
INFO  21:30:46,286 - #27 ;
INFO  21:30:46,286 - #21 }
INFO  21:30:46,286 - #21 }
INFO  21:30:46,287 - =====================SINTAKSNO_STABLO=========================
INFO  21:30:46,289 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:30:46,289 - ==============================================================
INFO  21:30:46,307 - Pocetak obrade programa Program na liniji 1
INFO  21:30:46,307 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:30:46,309 - Deklarisana konstanta c na liniji 2
INFO  21:30:46,309 - Deklarisana konstanta d na liniji 2
INFO  21:30:46,309 - Deklarisana konstanta g na liniji 2
INFO  21:30:46,309 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:30:46,310 - Deklarisana promenljiva e na liniji 3
INFO  21:30:46,310 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:30:46,311 - Deklarisan niz z na liniji 3
INFO  21:30:46,312 - Pocetak obrade metode main na liniji 5
INFO  21:30:46,313 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:30:46,313 - Zavrsetak obrade programa Program na liniji 1
INFO  21:30:46,313 - ======================TABELA_SIMBOLA==========================
INFO  21:30:46,314 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:30:46,316 - ==============================================================
INFO  21:30:46,316 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:30:46,317 - ==============================================================
INFO  21:30:46,317 - ======================GENERISANJE_KODA========================
INFO  21:31:25,936 - Obrada ulaznog fajla test\program.mj
INFO  21:31:26,010 - #2 program
INFO  21:31:26,011 - #8 Program
INFO  21:31:26,011 - #5 const
INFO  21:31:26,012 - #8 int
INFO  21:31:26,012 - #8 c
INFO  21:31:26,013 - #24 =
INFO  21:31:26,013 - #9 10
INFO  21:31:26,013 - #28 ,
INFO  21:31:26,014 - #8 d
INFO  21:31:26,014 - #24 =
INFO  21:31:26,014 - #9 99
INFO  21:31:26,015 - #28 ,
INFO  21:31:26,015 - #8 g
INFO  21:31:26,015 - #24 =
INFO  21:31:26,015 - #9 2
INFO  21:31:26,015 - #27 ;
INFO  21:31:26,015 - #8 int
INFO  21:31:26,016 - #8 e
INFO  21:31:26,016 - #27 ;
INFO  21:31:26,016 - #8 char
INFO  21:31:26,017 - #8 z
INFO  21:31:26,017 - #22 [
INFO  21:31:26,017 - #23 ]
INFO  21:31:26,018 - #27 ;
INFO  21:31:26,018 - #20 {
INFO  21:31:26,018 - #6 void
INFO  21:31:26,018 - #8 main
INFO  21:31:26,018 - #29 (
INFO  21:31:26,019 - #30 )
INFO  21:31:26,019 - #20 {
INFO  21:31:26,019 - #31 if
INFO  21:31:26,019 - #29 (
INFO  21:31:26,019 - #12 false
INFO  21:31:26,019 - #30 )
INFO  21:31:26,020 - #20 {
INFO  21:31:26,020 - #3 print
INFO  21:31:26,020 - #29 (
INFO  21:31:26,020 - #9 32
INFO  21:31:26,020 - #30 )
INFO  21:31:26,021 - #27 ;
INFO  21:31:26,021 - #3 print
INFO  21:31:26,021 - #29 (
INFO  21:31:26,021 - #9 64
INFO  21:31:26,021 - #30 )
INFO  21:31:26,021 - #27 ;
INFO  21:31:26,021 - #21 }
INFO  21:31:26,022 - #3 print
INFO  21:31:26,022 - #29 (
INFO  21:31:26,022 - #9 65
INFO  21:31:26,022 - #30 )
INFO  21:31:26,022 - #27 ;
INFO  21:31:26,022 - #3 print
INFO  21:31:26,022 - #29 (
INFO  21:31:26,022 - #9 77
INFO  21:31:26,022 - #30 )
INFO  21:31:26,023 - #27 ;
INFO  21:31:26,023 - #21 }
INFO  21:31:26,023 - #21 }
INFO  21:31:26,023 - =====================SINTAKSNO_STABLO=========================
INFO  21:31:26,025 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:31:26,026 - ==============================================================
INFO  21:31:26,039 - Pocetak obrade programa Program na liniji 1
INFO  21:31:26,039 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:31:26,040 - Deklarisana konstanta c na liniji 2
INFO  21:31:26,040 - Deklarisana konstanta d na liniji 2
INFO  21:31:26,040 - Deklarisana konstanta g na liniji 2
INFO  21:31:26,040 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:31:26,041 - Deklarisana promenljiva e na liniji 3
INFO  21:31:26,041 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:31:26,041 - Deklarisan niz z na liniji 3
INFO  21:31:26,042 - Pocetak obrade metode main na liniji 5
INFO  21:31:26,042 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:31:26,042 - Zavrsetak obrade programa Program na liniji 1
INFO  21:31:26,042 - ======================TABELA_SIMBOLA==========================
INFO  21:31:26,043 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:31:26,045 - ==============================================================
INFO  21:31:26,045 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:31:26,045 - ==============================================================
INFO  21:31:26,045 - ======================GENERISANJE_KODA========================
INFO  21:31:26,051 - Generisanje koda uspesno zavrseno!
INFO  21:31:26,051 - Generisanje izlaznog fajla test\program.obj
INFO  21:31:26,051 - ==============================================================
INFO  21:31:35,194 - Obrada ulaznog fajla test\program.mj
INFO  21:31:35,303 - #2 program
INFO  21:31:35,304 - #8 Program
INFO  21:31:35,304 - #5 const
INFO  21:31:35,305 - #8 int
INFO  21:31:35,305 - #8 c
INFO  21:31:35,306 - #24 =
INFO  21:31:35,306 - #9 10
INFO  21:31:35,306 - #28 ,
INFO  21:31:35,307 - #8 d
INFO  21:31:35,307 - #24 =
INFO  21:31:35,307 - #9 99
INFO  21:31:35,307 - #28 ,
INFO  21:31:35,308 - #8 g
INFO  21:31:35,308 - #24 =
INFO  21:31:35,308 - #9 2
INFO  21:31:35,308 - #27 ;
INFO  21:31:35,308 - #8 int
INFO  21:31:35,309 - #8 e
INFO  21:31:35,310 - #27 ;
INFO  21:31:35,310 - #8 char
INFO  21:31:35,311 - #8 z
INFO  21:31:35,312 - #22 [
INFO  21:31:35,312 - #23 ]
INFO  21:31:35,312 - #27 ;
INFO  21:31:35,312 - #20 {
INFO  21:31:35,312 - #6 void
INFO  21:31:35,312 - #8 main
INFO  21:31:35,312 - #29 (
INFO  21:31:35,313 - #30 )
INFO  21:31:35,313 - #20 {
INFO  21:31:35,313 - #31 if
INFO  21:31:35,313 - #29 (
INFO  21:31:35,314 - #12 false
INFO  21:31:35,314 - #30 )
INFO  21:31:35,315 - #20 {
INFO  21:31:35,315 - #3 print
INFO  21:31:35,315 - #29 (
INFO  21:31:35,315 - #9 32
INFO  21:31:35,315 - #30 )
INFO  21:31:35,315 - #27 ;
INFO  21:31:35,315 - #3 print
INFO  21:31:35,316 - #29 (
INFO  21:31:35,316 - #9 64
INFO  21:31:35,316 - #30 )
INFO  21:31:35,316 - #27 ;
INFO  21:31:35,316 - #21 }
INFO  21:31:35,316 - #3 print
INFO  21:31:35,316 - #29 (
INFO  21:31:35,317 - #9 65
INFO  21:31:35,317 - #30 )
INFO  21:31:35,317 - #27 ;
INFO  21:31:35,317 - #3 print
INFO  21:31:35,317 - #29 (
INFO  21:31:35,317 - #9 77
INFO  21:31:35,317 - #30 )
INFO  21:31:35,317 - #27 ;
INFO  21:31:35,317 - #21 }
INFO  21:31:35,317 - #21 }
INFO  21:31:35,318 - =====================SINTAKSNO_STABLO=========================
INFO  21:31:35,320 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:31:35,321 - ==============================================================
INFO  21:31:35,335 - Pocetak obrade programa Program na liniji 1
INFO  21:31:35,336 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:31:35,336 - Deklarisana konstanta c na liniji 2
INFO  21:31:35,337 - Deklarisana konstanta d na liniji 2
INFO  21:31:35,337 - Deklarisana konstanta g na liniji 2
INFO  21:31:35,337 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:31:35,337 - Deklarisana promenljiva e na liniji 3
INFO  21:31:35,337 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:31:35,337 - Deklarisan niz z na liniji 3
INFO  21:31:35,338 - Pocetak obrade metode main na liniji 5
INFO  21:31:35,338 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:31:35,338 - Zavrsetak obrade programa Program na liniji 1
INFO  21:31:35,338 - ======================TABELA_SIMBOLA==========================
INFO  21:31:35,339 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:31:35,341 - ==============================================================
INFO  21:31:35,341 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:31:35,341 - ==============================================================
INFO  21:31:35,341 - ======================GENERISANJE_KODA========================
INFO  21:32:09,071 - Obrada ulaznog fajla test\program.mj
INFO  21:32:09,144 - #2 program
INFO  21:32:09,144 - #8 Program
INFO  21:32:09,144 - #5 const
INFO  21:32:09,145 - #8 int
INFO  21:32:09,146 - #8 c
INFO  21:32:09,147 - #24 =
INFO  21:32:09,147 - #9 10
INFO  21:32:09,147 - #28 ,
INFO  21:32:09,148 - #8 d
INFO  21:32:09,148 - #24 =
INFO  21:32:09,148 - #9 99
INFO  21:32:09,148 - #28 ,
INFO  21:32:09,149 - #8 g
INFO  21:32:09,149 - #24 =
INFO  21:32:09,149 - #9 2
INFO  21:32:09,149 - #27 ;
INFO  21:32:09,149 - #8 int
INFO  21:32:09,150 - #8 e
INFO  21:32:09,150 - #27 ;
INFO  21:32:09,151 - #8 char
INFO  21:32:09,152 - #8 z
INFO  21:32:09,152 - #22 [
INFO  21:32:09,152 - #23 ]
INFO  21:32:09,152 - #27 ;
INFO  21:32:09,153 - #20 {
INFO  21:32:09,153 - #6 void
INFO  21:32:09,153 - #8 main
INFO  21:32:09,153 - #29 (
INFO  21:32:09,154 - #30 )
INFO  21:32:09,154 - #20 {
INFO  21:32:09,154 - #31 if
INFO  21:32:09,154 - #29 (
INFO  21:32:09,154 - #12 false
INFO  21:32:09,154 - #30 )
INFO  21:32:09,155 - #20 {
INFO  21:32:09,155 - #3 print
INFO  21:32:09,155 - #29 (
INFO  21:32:09,155 - #9 32
INFO  21:32:09,156 - #30 )
INFO  21:32:09,156 - #27 ;
INFO  21:32:09,156 - #3 print
INFO  21:32:09,156 - #29 (
INFO  21:32:09,156 - #9 64
INFO  21:32:09,156 - #30 )
INFO  21:32:09,157 - #27 ;
INFO  21:32:09,157 - #21 }
INFO  21:32:09,157 - #3 print
INFO  21:32:09,157 - #29 (
INFO  21:32:09,157 - #9 65
INFO  21:32:09,157 - #30 )
INFO  21:32:09,158 - #27 ;
INFO  21:32:09,158 - #3 print
INFO  21:32:09,158 - #29 (
INFO  21:32:09,158 - #9 77
INFO  21:32:09,158 - #30 )
INFO  21:32:09,161 - #27 ;
INFO  21:32:09,161 - #21 }
INFO  21:32:09,161 - #21 }
INFO  21:32:09,162 - =====================SINTAKSNO_STABLO=========================
INFO  21:32:09,164 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:32:09,164 - ==============================================================
INFO  21:32:09,177 - Pocetak obrade programa Program na liniji 1
INFO  21:32:09,178 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:32:09,179 - Deklarisana konstanta c na liniji 2
INFO  21:32:09,179 - Deklarisana konstanta d na liniji 2
INFO  21:32:09,179 - Deklarisana konstanta g na liniji 2
INFO  21:32:09,179 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:32:09,179 - Deklarisana promenljiva e na liniji 3
INFO  21:32:09,180 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:32:09,180 - Deklarisan niz z na liniji 3
INFO  21:32:09,181 - Pocetak obrade metode main na liniji 5
INFO  21:32:09,181 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:32:09,181 - Zavrsetak obrade programa Program na liniji 1
INFO  21:32:09,181 - ======================TABELA_SIMBOLA==========================
INFO  21:32:09,182 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:32:09,183 - ==============================================================
INFO  21:32:09,183 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:32:09,183 - ==============================================================
INFO  21:32:09,183 - ======================GENERISANJE_KODA========================
INFO  21:32:09,189 - Generisanje koda uspesno zavrseno!
INFO  21:32:09,189 - Generisanje izlaznog fajla test\program.obj
INFO  21:32:09,189 - ==============================================================
INFO  21:33:05,685 - Obrada ulaznog fajla test\program.mj
INFO  21:33:05,757 - #2 program
INFO  21:33:05,757 - #8 Program
INFO  21:33:05,757 - #5 const
INFO  21:33:05,758 - #8 int
INFO  21:33:05,758 - #8 c
INFO  21:33:05,759 - #24 =
INFO  21:33:05,760 - #9 10
INFO  21:33:05,760 - #28 ,
INFO  21:33:05,761 - #8 d
INFO  21:33:05,761 - #24 =
INFO  21:33:05,761 - #9 99
INFO  21:33:05,762 - #28 ,
INFO  21:33:05,762 - #8 g
INFO  21:33:05,762 - #24 =
INFO  21:33:05,762 - #9 2
INFO  21:33:05,762 - #27 ;
INFO  21:33:05,762 - #8 int
INFO  21:33:05,764 - #8 e
INFO  21:33:05,764 - #27 ;
INFO  21:33:05,764 - #8 char
INFO  21:33:05,766 - #8 z
INFO  21:33:05,766 - #22 [
INFO  21:33:05,766 - #23 ]
INFO  21:33:05,766 - #27 ;
INFO  21:33:05,766 - #20 {
INFO  21:33:05,766 - #6 void
INFO  21:33:05,766 - #8 main
INFO  21:33:05,766 - #29 (
INFO  21:33:05,767 - #30 )
INFO  21:33:05,767 - #20 {
INFO  21:33:05,768 - #31 if
INFO  21:33:05,768 - #29 (
INFO  21:33:05,768 - #12 false
INFO  21:33:05,768 - #30 )
INFO  21:33:05,769 - #20 {
INFO  21:33:05,769 - #3 print
INFO  21:33:05,769 - #29 (
INFO  21:33:05,769 - #9 32
INFO  21:33:05,769 - #30 )
INFO  21:33:05,769 - #27 ;
INFO  21:33:05,769 - #3 print
INFO  21:33:05,770 - #29 (
INFO  21:33:05,770 - #9 64
INFO  21:33:05,770 - #30 )
INFO  21:33:05,770 - #27 ;
INFO  21:33:05,770 - #21 }
INFO  21:33:05,770 - #3 print
INFO  21:33:05,770 - #29 (
INFO  21:33:05,770 - #9 65
INFO  21:33:05,771 - #30 )
INFO  21:33:05,771 - #27 ;
INFO  21:33:05,771 - #3 print
INFO  21:33:05,771 - #29 (
INFO  21:33:05,771 - #9 77
INFO  21:33:05,771 - #30 )
INFO  21:33:05,771 - #27 ;
INFO  21:33:05,771 - #21 }
INFO  21:33:05,771 - #21 }
INFO  21:33:05,772 - =====================SINTAKSNO_STABLO=========================
INFO  21:33:05,774 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:33:05,775 - ==============================================================
INFO  21:33:05,789 - Pocetak obrade programa Program na liniji 1
INFO  21:33:05,789 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:33:05,790 - Deklarisana konstanta c na liniji 2
INFO  21:33:05,790 - Deklarisana konstanta d na liniji 2
INFO  21:33:05,790 - Deklarisana konstanta g na liniji 2
INFO  21:33:05,790 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:33:05,791 - Deklarisana promenljiva e na liniji 3
INFO  21:33:05,791 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:33:05,791 - Deklarisan niz z na liniji 3
INFO  21:33:05,791 - Pocetak obrade metode main na liniji 5
INFO  21:33:05,792 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:33:05,792 - Zavrsetak obrade programa Program na liniji 1
INFO  21:33:05,792 - ======================TABELA_SIMBOLA==========================
INFO  21:33:05,793 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:33:05,795 - ==============================================================
INFO  21:33:05,795 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:33:05,795 - ==============================================================
INFO  21:33:05,795 - ======================GENERISANJE_KODA========================
INFO  21:33:05,800 - Generisanje koda uspesno zavrseno!
INFO  21:33:05,800 - Generisanje izlaznog fajla test\program.obj
INFO  21:33:05,800 - ==============================================================
INFO  21:34:12,494 - Obrada ulaznog fajla test\program.mj
INFO  21:34:12,582 - #2 program
INFO  21:34:12,582 - #8 Program
INFO  21:34:12,582 - #5 const
INFO  21:34:12,584 - #8 int
INFO  21:34:12,584 - #8 c
INFO  21:34:12,585 - #24 =
INFO  21:34:12,585 - #9 10
INFO  21:34:12,585 - #28 ,
INFO  21:34:12,586 - #8 d
INFO  21:34:12,586 - #24 =
INFO  21:34:12,586 - #9 99
INFO  21:34:12,586 - #28 ,
INFO  21:34:12,587 - #8 g
INFO  21:34:12,587 - #24 =
INFO  21:34:12,587 - #9 2
INFO  21:34:12,587 - #27 ;
INFO  21:34:12,587 - #8 int
INFO  21:34:12,588 - #8 e
INFO  21:34:12,588 - #27 ;
INFO  21:34:12,589 - #8 char
INFO  21:34:12,590 - #8 z
INFO  21:34:12,590 - #22 [
INFO  21:34:12,590 - #23 ]
INFO  21:34:12,591 - #27 ;
INFO  21:34:12,591 - #20 {
INFO  21:34:12,591 - #6 void
INFO  21:34:12,591 - #8 main
INFO  21:34:12,591 - #29 (
INFO  21:34:12,593 - #30 )
INFO  21:34:12,593 - #20 {
INFO  21:34:12,593 - #31 if
INFO  21:34:12,593 - #29 (
INFO  21:34:12,593 - #12 false
INFO  21:34:12,593 - #30 )
INFO  21:34:12,594 - #20 {
INFO  21:34:12,594 - #3 print
INFO  21:34:12,594 - #29 (
INFO  21:34:12,594 - #9 32
INFO  21:34:12,595 - #30 )
INFO  21:34:12,595 - #27 ;
INFO  21:34:12,595 - #3 print
INFO  21:34:12,595 - #29 (
INFO  21:34:12,595 - #9 64
INFO  21:34:12,596 - #30 )
INFO  21:34:12,596 - #27 ;
INFO  21:34:12,596 - #21 }
INFO  21:34:12,596 - #3 print
INFO  21:34:12,596 - #29 (
INFO  21:34:12,597 - #9 65
INFO  21:34:12,597 - #30 )
INFO  21:34:12,597 - #27 ;
INFO  21:34:12,597 - #3 print
INFO  21:34:12,597 - #29 (
INFO  21:34:12,597 - #9 77
INFO  21:34:12,597 - #30 )
INFO  21:34:12,597 - #27 ;
INFO  21:34:12,597 - #21 }
INFO  21:34:12,597 - #21 }
INFO  21:34:12,598 - =====================SINTAKSNO_STABLO=========================
INFO  21:34:12,600 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:34:12,600 - ==============================================================
INFO  21:34:12,613 - Pocetak obrade programa Program na liniji 1
INFO  21:34:12,613 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:34:12,615 - Deklarisana konstanta c na liniji 2
INFO  21:34:12,615 - Deklarisana konstanta d na liniji 2
INFO  21:34:12,615 - Deklarisana konstanta g na liniji 2
INFO  21:34:12,615 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:34:12,615 - Deklarisana promenljiva e na liniji 3
INFO  21:34:12,615 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:34:12,615 - Deklarisan niz z na liniji 3
INFO  21:34:12,616 - Pocetak obrade metode main na liniji 5
INFO  21:34:12,616 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:34:12,616 - Zavrsetak obrade programa Program na liniji 1
INFO  21:34:12,616 - ======================TABELA_SIMBOLA==========================
INFO  21:34:12,617 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:34:12,618 - ==============================================================
INFO  21:34:12,618 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:34:12,618 - ==============================================================
INFO  21:34:12,618 - ======================GENERISANJE_KODA========================
INFO  21:34:12,624 - Generisanje koda uspesno zavrseno!
INFO  21:34:12,624 - Generisanje izlaznog fajla test\program.obj
INFO  21:34:12,624 - ==============================================================
INFO  21:34:59,775 - Obrada ulaznog fajla test\program.mj
INFO  21:34:59,872 - #2 program
INFO  21:34:59,872 - #8 Program
INFO  21:34:59,873 - #5 const
INFO  21:34:59,874 - #8 int
INFO  21:34:59,874 - #8 c
INFO  21:34:59,876 - #24 =
INFO  21:34:59,876 - #9 10
INFO  21:34:59,876 - #28 ,
INFO  21:34:59,878 - #8 d
INFO  21:34:59,878 - #24 =
INFO  21:34:59,878 - #9 99
INFO  21:34:59,878 - #28 ,
INFO  21:34:59,879 - #8 g
INFO  21:34:59,879 - #24 =
INFO  21:34:59,879 - #9 2
INFO  21:34:59,879 - #27 ;
INFO  21:34:59,879 - #8 int
INFO  21:34:59,881 - #8 e
INFO  21:34:59,881 - #27 ;
INFO  21:34:59,881 - #8 char
INFO  21:34:59,882 - #8 z
INFO  21:34:59,883 - #22 [
INFO  21:34:59,883 - #23 ]
INFO  21:34:59,883 - #27 ;
INFO  21:34:59,883 - #20 {
INFO  21:34:59,883 - #6 void
INFO  21:34:59,883 - #8 main
INFO  21:34:59,883 - #29 (
INFO  21:34:59,886 - #30 )
INFO  21:34:59,886 - #20 {
INFO  21:34:59,886 - #31 if
INFO  21:34:59,886 - #29 (
INFO  21:34:59,886 - #12 false
INFO  21:34:59,886 - #30 )
INFO  21:34:59,887 - #20 {
INFO  21:34:59,887 - #3 print
INFO  21:34:59,887 - #29 (
INFO  21:34:59,888 - #9 32
INFO  21:34:59,888 - #30 )
INFO  21:34:59,888 - #27 ;
INFO  21:34:59,888 - #3 print
INFO  21:34:59,888 - #29 (
INFO  21:34:59,888 - #9 64
INFO  21:34:59,889 - #30 )
INFO  21:34:59,889 - #27 ;
INFO  21:34:59,889 - #21 }
INFO  21:34:59,889 - #3 print
INFO  21:34:59,889 - #29 (
INFO  21:34:59,889 - #9 65
INFO  21:34:59,890 - #30 )
INFO  21:34:59,890 - #27 ;
INFO  21:34:59,890 - #3 print
INFO  21:34:59,890 - #29 (
INFO  21:34:59,890 - #9 77
INFO  21:34:59,890 - #30 )
INFO  21:34:59,890 - #27 ;
INFO  21:34:59,890 - #21 }
INFO  21:34:59,890 - #21 }
INFO  21:34:59,892 - =====================SINTAKSNO_STABLO=========================
INFO  21:34:59,893 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:34:59,894 - ==============================================================
INFO  21:34:59,912 - Pocetak obrade programa Program na liniji 1
INFO  21:34:59,912 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:34:59,913 - Deklarisana konstanta c na liniji 2
INFO  21:34:59,913 - Deklarisana konstanta d na liniji 2
INFO  21:34:59,914 - Deklarisana konstanta g na liniji 2
INFO  21:34:59,914 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:34:59,914 - Deklarisana promenljiva e na liniji 3
INFO  21:34:59,914 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:34:59,914 - Deklarisan niz z na liniji 3
INFO  21:34:59,915 - Pocetak obrade metode main na liniji 5
INFO  21:34:59,915 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:34:59,915 - Zavrsetak obrade programa Program na liniji 1
INFO  21:34:59,915 - ======================TABELA_SIMBOLA==========================
INFO  21:34:59,916 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:34:59,918 - ==============================================================
INFO  21:34:59,918 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:34:59,918 - ==============================================================
INFO  21:34:59,918 - ======================GENERISANJE_KODA========================
INFO  21:34:59,923 - Generisanje koda uspesno zavrseno!
INFO  21:34:59,924 - Generisanje izlaznog fajla test\program.obj
INFO  21:34:59,924 - ==============================================================
INFO  21:38:32,054 - Obrada ulaznog fajla test\program.mj
INFO  21:38:32,130 - #2 program
INFO  21:38:32,131 - #8 Program
INFO  21:38:32,131 - #5 const
INFO  21:38:32,132 - #8 int
INFO  21:38:32,132 - #8 c
INFO  21:38:32,133 - #24 =
INFO  21:38:32,133 - #9 10
INFO  21:38:32,133 - #28 ,
INFO  21:38:32,135 - #8 d
INFO  21:38:32,135 - #24 =
INFO  21:38:32,135 - #9 99
INFO  21:38:32,136 - #28 ,
INFO  21:38:32,136 - #8 g
INFO  21:38:32,136 - #24 =
INFO  21:38:32,136 - #9 2
INFO  21:38:32,136 - #27 ;
INFO  21:38:32,136 - #8 int
INFO  21:38:32,138 - #8 e
INFO  21:38:32,138 - #27 ;
INFO  21:38:32,139 - #8 char
INFO  21:38:32,140 - #8 z
INFO  21:38:32,140 - #22 [
INFO  21:38:32,140 - #23 ]
INFO  21:38:32,141 - #27 ;
INFO  21:38:32,141 - #20 {
INFO  21:38:32,141 - #6 void
INFO  21:38:32,141 - #8 main
INFO  21:38:32,141 - #29 (
INFO  21:38:32,142 - #30 )
INFO  21:38:32,142 - #20 {
INFO  21:38:32,142 - #31 if
INFO  21:38:32,143 - #29 (
INFO  21:38:32,143 - #12 false
INFO  21:38:32,143 - #30 )
INFO  21:38:32,144 - #20 {
INFO  21:38:32,144 - #3 print
INFO  21:38:32,144 - #29 (
INFO  21:38:32,145 - #9 32
INFO  21:38:32,145 - #30 )
INFO  21:38:32,145 - #27 ;
INFO  21:38:32,145 - #3 print
INFO  21:38:32,145 - #29 (
INFO  21:38:32,145 - #9 64
INFO  21:38:32,146 - #30 )
INFO  21:38:32,146 - #27 ;
INFO  21:38:32,146 - #21 }
INFO  21:38:32,146 - #3 print
INFO  21:38:32,146 - #29 (
INFO  21:38:32,146 - #9 65
INFO  21:38:32,146 - #30 )
INFO  21:38:32,147 - #27 ;
INFO  21:38:32,147 - #3 print
INFO  21:38:32,147 - #29 (
INFO  21:38:32,147 - #9 77
INFO  21:38:32,147 - #30 )
INFO  21:38:32,147 - #27 ;
INFO  21:38:32,147 - #21 }
INFO  21:38:32,147 - #21 }
INFO  21:38:32,148 - =====================SINTAKSNO_STABLO=========================
INFO  21:38:32,150 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:38:32,151 - ==============================================================
INFO  21:38:32,166 - Pocetak obrade programa Program na liniji 1
INFO  21:38:32,166 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:38:32,168 - Deklarisana konstanta c na liniji 2
INFO  21:38:32,168 - Deklarisana konstanta d na liniji 2
INFO  21:38:32,168 - Deklarisana konstanta g na liniji 2
INFO  21:38:32,168 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:38:32,168 - Deklarisana promenljiva e na liniji 3
INFO  21:38:32,168 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:38:32,168 - Deklarisan niz z na liniji 3
INFO  21:38:32,169 - Pocetak obrade metode main na liniji 5
INFO  21:38:32,170 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:38:32,170 - Zavrsetak obrade programa Program na liniji 1
INFO  21:38:32,170 - ======================TABELA_SIMBOLA==========================
INFO  21:38:32,171 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:38:32,172 - ==============================================================
INFO  21:38:32,173 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:38:32,173 - ==============================================================
INFO  21:38:32,173 - ======================GENERISANJE_KODA========================
INFO  21:38:32,178 - Generisanje koda uspesno zavrseno!
INFO  21:38:32,179 - Generisanje izlaznog fajla test\program.obj
INFO  21:38:32,179 - ==============================================================
INFO  21:41:26,772 - Obrada ulaznog fajla test\program.mj
INFO  21:41:26,849 - #2 program
INFO  21:41:26,849 - #8 Program
INFO  21:41:26,849 - #5 const
INFO  21:41:26,850 - #8 int
INFO  21:41:26,850 - #8 c
INFO  21:41:26,851 - #24 =
INFO  21:41:26,851 - #9 10
INFO  21:41:26,851 - #28 ,
INFO  21:41:26,852 - #8 d
INFO  21:41:26,852 - #24 =
INFO  21:41:26,852 - #9 99
INFO  21:41:26,852 - #28 ,
INFO  21:41:26,852 - #8 g
INFO  21:41:26,853 - #24 =
INFO  21:41:26,853 - #9 2
INFO  21:41:26,853 - #27 ;
INFO  21:41:26,853 - #8 int
INFO  21:41:26,854 - #8 e
INFO  21:41:26,854 - #27 ;
INFO  21:41:26,855 - #8 char
INFO  21:41:26,856 - #8 z
INFO  21:41:26,856 - #22 [
INFO  21:41:26,856 - #23 ]
INFO  21:41:26,856 - #27 ;
INFO  21:41:26,856 - #20 {
INFO  21:41:26,857 - #6 void
INFO  21:41:26,857 - #8 main
INFO  21:41:26,857 - #29 (
INFO  21:41:26,858 - #30 )
INFO  21:41:26,858 - #20 {
INFO  21:41:26,858 - #31 if
INFO  21:41:26,858 - #29 (
INFO  21:41:26,858 - #12 false
INFO  21:41:26,858 - #30 )
INFO  21:41:26,859 - #20 {
INFO  21:41:26,859 - #3 print
INFO  21:41:26,859 - #29 (
INFO  21:41:26,860 - #9 32
INFO  21:41:26,860 - #30 )
INFO  21:41:26,860 - #27 ;
INFO  21:41:26,860 - #3 print
INFO  21:41:26,860 - #29 (
INFO  21:41:26,860 - #9 64
INFO  21:41:26,860 - #30 )
INFO  21:41:26,861 - #27 ;
INFO  21:41:26,861 - #21 }
INFO  21:41:26,861 - #3 print
INFO  21:41:26,861 - #29 (
INFO  21:41:26,861 - #9 65
INFO  21:41:26,861 - #30 )
INFO  21:41:26,861 - #27 ;
INFO  21:41:26,862 - #3 print
INFO  21:41:26,862 - #29 (
INFO  21:41:26,862 - #9 77
INFO  21:41:26,862 - #30 )
INFO  21:41:26,862 - #27 ;
INFO  21:41:26,862 - #21 }
INFO  21:41:26,862 - #21 }
INFO  21:41:26,863 - =====================SINTAKSNO_STABLO=========================
INFO  21:41:26,864 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:41:26,865 - ==============================================================
INFO  21:41:26,881 - Pocetak obrade programa Program na liniji 1
INFO  21:41:26,881 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:41:26,882 - Deklarisana konstanta c na liniji 2
INFO  21:41:26,882 - Deklarisana konstanta d na liniji 2
INFO  21:41:26,883 - Deklarisana konstanta g na liniji 2
INFO  21:41:26,883 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:41:26,883 - Deklarisana promenljiva e na liniji 3
INFO  21:41:26,883 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:41:26,883 - Deklarisan niz z na liniji 3
INFO  21:41:26,884 - Pocetak obrade metode main na liniji 5
INFO  21:41:26,884 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:41:26,884 - Zavrsetak obrade programa Program na liniji 1
INFO  21:41:26,885 - ======================TABELA_SIMBOLA==========================
INFO  21:41:26,885 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:41:26,889 - ==============================================================
INFO  21:41:26,890 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:41:26,890 - ==============================================================
INFO  21:41:26,890 - ======================GENERISANJE_KODA========================
INFO  21:41:26,895 - Generisanje koda uspesno zavrseno!
INFO  21:41:26,895 - Generisanje izlaznog fajla test\program.obj
INFO  21:41:26,895 - ==============================================================
INFO  21:42:00,215 - Obrada ulaznog fajla test\program.mj
INFO  21:42:00,290 - #2 program
INFO  21:42:00,290 - #8 Program
INFO  21:42:00,290 - #5 const
INFO  21:42:00,291 - #8 int
INFO  21:42:00,291 - #8 c
INFO  21:42:00,292 - #24 =
INFO  21:42:00,292 - #9 10
INFO  21:42:00,292 - #28 ,
INFO  21:42:00,294 - #8 d
INFO  21:42:00,294 - #24 =
INFO  21:42:00,294 - #9 99
INFO  21:42:00,294 - #28 ,
INFO  21:42:00,294 - #8 g
INFO  21:42:00,294 - #24 =
INFO  21:42:00,294 - #9 2
INFO  21:42:00,294 - #27 ;
INFO  21:42:00,294 - #8 int
INFO  21:42:00,297 - #8 e
INFO  21:42:00,297 - #27 ;
INFO  21:42:00,297 - #8 char
INFO  21:42:00,298 - #8 z
INFO  21:42:00,298 - #22 [
INFO  21:42:00,299 - #23 ]
INFO  21:42:00,299 - #27 ;
INFO  21:42:00,299 - #20 {
INFO  21:42:00,299 - #6 void
INFO  21:42:00,299 - #8 main
INFO  21:42:00,299 - #29 (
INFO  21:42:00,300 - #30 )
INFO  21:42:00,300 - #20 {
INFO  21:42:00,300 - #31 if
INFO  21:42:00,300 - #29 (
INFO  21:42:00,301 - #12 false
INFO  21:42:00,301 - #30 )
INFO  21:42:00,302 - #20 {
INFO  21:42:00,302 - #3 print
INFO  21:42:00,302 - #29 (
INFO  21:42:00,302 - #9 32
INFO  21:42:00,302 - #30 )
INFO  21:42:00,302 - #27 ;
INFO  21:42:00,302 - #3 print
INFO  21:42:00,303 - #29 (
INFO  21:42:00,303 - #9 64
INFO  21:42:00,303 - #30 )
INFO  21:42:00,303 - #27 ;
INFO  21:42:00,303 - #21 }
INFO  21:42:00,303 - #3 print
INFO  21:42:00,304 - #29 (
INFO  21:42:00,304 - #9 65
INFO  21:42:00,304 - #30 )
INFO  21:42:00,304 - #27 ;
INFO  21:42:00,304 - #3 print
INFO  21:42:00,304 - #29 (
INFO  21:42:00,304 - #9 77
INFO  21:42:00,305 - #30 )
INFO  21:42:00,305 - #27 ;
INFO  21:42:00,305 - #21 }
INFO  21:42:00,305 - #21 }
INFO  21:42:00,306 - =====================SINTAKSNO_STABLO=========================
INFO  21:42:00,307 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:42:00,308 - ==============================================================
INFO  21:42:00,321 - Pocetak obrade programa Program na liniji 1
INFO  21:42:00,322 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:42:00,323 - Deklarisana konstanta c na liniji 2
INFO  21:42:00,323 - Deklarisana konstanta d na liniji 2
INFO  21:42:00,323 - Deklarisana konstanta g na liniji 2
INFO  21:42:00,323 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:42:00,323 - Deklarisana promenljiva e na liniji 3
INFO  21:42:00,323 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:42:00,323 - Deklarisan niz z na liniji 3
INFO  21:42:00,324 - Pocetak obrade metode main na liniji 5
INFO  21:42:00,324 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:42:00,324 - Zavrsetak obrade programa Program na liniji 1
INFO  21:42:00,325 - ======================TABELA_SIMBOLA==========================
INFO  21:42:00,325 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:42:00,328 - ==============================================================
INFO  21:42:00,328 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:42:00,328 - ==============================================================
INFO  21:42:00,329 - ======================GENERISANJE_KODA========================
INFO  21:42:00,334 - Generisanje koda uspesno zavrseno!
INFO  21:42:00,334 - Generisanje izlaznog fajla test\program.obj
INFO  21:42:00,334 - ==============================================================
INFO  21:43:06,264 - Obrada ulaznog fajla test\program.mj
INFO  21:43:06,359 - #2 program
INFO  21:43:06,359 - #8 Program
INFO  21:43:06,359 - #5 const
INFO  21:43:06,360 - #8 int
INFO  21:43:06,360 - #8 c
INFO  21:43:06,361 - #24 =
INFO  21:43:06,361 - #9 10
INFO  21:43:06,362 - #28 ,
INFO  21:43:06,363 - #8 d
INFO  21:43:06,363 - #24 =
INFO  21:43:06,363 - #9 99
INFO  21:43:06,363 - #28 ,
INFO  21:43:06,363 - #8 g
INFO  21:43:06,363 - #24 =
INFO  21:43:06,363 - #9 2
INFO  21:43:06,363 - #27 ;
INFO  21:43:06,364 - #8 int
INFO  21:43:06,366 - #8 e
INFO  21:43:06,366 - #27 ;
INFO  21:43:06,366 - #8 char
INFO  21:43:06,368 - #8 z
INFO  21:43:06,368 - #22 [
INFO  21:43:06,368 - #23 ]
INFO  21:43:06,368 - #27 ;
INFO  21:43:06,368 - #20 {
INFO  21:43:06,368 - #6 void
INFO  21:43:06,368 - #8 main
INFO  21:43:06,368 - #29 (
INFO  21:43:06,369 - #30 )
INFO  21:43:06,370 - #20 {
INFO  21:43:06,370 - #31 if
INFO  21:43:06,370 - #29 (
INFO  21:43:06,370 - #12 false
INFO  21:43:06,371 - #30 )
INFO  21:43:06,372 - #20 {
INFO  21:43:06,372 - #3 print
INFO  21:43:06,372 - #29 (
INFO  21:43:06,372 - #9 32
INFO  21:43:06,372 - #30 )
INFO  21:43:06,372 - #27 ;
INFO  21:43:06,372 - #3 print
INFO  21:43:06,373 - #29 (
INFO  21:43:06,373 - #9 64
INFO  21:43:06,373 - #30 )
INFO  21:43:06,373 - #27 ;
INFO  21:43:06,373 - #21 }
INFO  21:43:06,373 - #3 print
INFO  21:43:06,374 - #29 (
INFO  21:43:06,374 - #9 65
INFO  21:43:06,374 - #30 )
INFO  21:43:06,374 - #27 ;
INFO  21:43:06,374 - #3 print
INFO  21:43:06,374 - #29 (
INFO  21:43:06,374 - #9 77
INFO  21:43:06,375 - #30 )
INFO  21:43:06,375 - #27 ;
INFO  21:43:06,375 - #21 }
INFO  21:43:06,375 - #21 }
INFO  21:43:06,376 - =====================SINTAKSNO_STABLO=========================
INFO  21:43:06,377 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:43:06,380 - ==============================================================
INFO  21:43:06,394 - Pocetak obrade programa Program na liniji 1
INFO  21:43:06,394 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:43:06,395 - Deklarisana konstanta c na liniji 2
INFO  21:43:06,395 - Deklarisana konstanta d na liniji 2
INFO  21:43:06,395 - Deklarisana konstanta g na liniji 2
INFO  21:43:06,395 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:43:06,395 - Deklarisana promenljiva e na liniji 3
INFO  21:43:06,395 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:43:06,395 - Deklarisan niz z na liniji 3
INFO  21:43:06,396 - Pocetak obrade metode main na liniji 5
INFO  21:43:06,396 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:43:06,397 - Zavrsetak obrade programa Program na liniji 1
INFO  21:43:06,397 - ======================TABELA_SIMBOLA==========================
INFO  21:43:06,397 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:43:06,399 - ==============================================================
INFO  21:43:06,399 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:43:06,399 - ==============================================================
INFO  21:43:06,399 - ======================GENERISANJE_KODA========================
INFO  21:43:06,404 - Generisanje koda uspesno zavrseno!
INFO  21:43:06,405 - Generisanje izlaznog fajla test\program.obj
INFO  21:43:06,405 - ==============================================================
INFO  21:44:07,090 - Obrada ulaznog fajla test\program.mj
INFO  21:44:07,166 - #2 program
INFO  21:44:07,166 - #8 Program
INFO  21:44:07,166 - #5 const
INFO  21:44:07,167 - #8 int
INFO  21:44:07,167 - #8 c
INFO  21:44:07,168 - #24 =
INFO  21:44:07,168 - #9 10
INFO  21:44:07,168 - #28 ,
INFO  21:44:07,169 - #8 d
INFO  21:44:07,169 - #24 =
INFO  21:44:07,169 - #9 99
INFO  21:44:07,169 - #28 ,
INFO  21:44:07,169 - #8 g
INFO  21:44:07,170 - #24 =
INFO  21:44:07,170 - #9 2
INFO  21:44:07,170 - #27 ;
INFO  21:44:07,170 - #8 int
INFO  21:44:07,171 - #8 e
INFO  21:44:07,171 - #27 ;
INFO  21:44:07,172 - #8 char
INFO  21:44:07,173 - #8 z
INFO  21:44:07,173 - #22 [
INFO  21:44:07,173 - #23 ]
INFO  21:44:07,173 - #27 ;
INFO  21:44:07,173 - #20 {
INFO  21:44:07,174 - #6 void
INFO  21:44:07,174 - #8 main
INFO  21:44:07,174 - #29 (
INFO  21:44:07,174 - #30 )
INFO  21:44:07,175 - #20 {
INFO  21:44:07,175 - #31 if
INFO  21:44:07,175 - #29 (
INFO  21:44:07,175 - #12 false
INFO  21:44:07,175 - #30 )
INFO  21:44:07,176 - #20 {
INFO  21:44:07,176 - #3 print
INFO  21:44:07,176 - #29 (
INFO  21:44:07,176 - #9 32
INFO  21:44:07,176 - #30 )
INFO  21:44:07,176 - #27 ;
INFO  21:44:07,176 - #3 print
INFO  21:44:07,177 - #29 (
INFO  21:44:07,177 - #9 64
INFO  21:44:07,177 - #30 )
INFO  21:44:07,177 - #27 ;
INFO  21:44:07,177 - #21 }
INFO  21:44:07,177 - #3 print
INFO  21:44:07,177 - #29 (
INFO  21:44:07,178 - #9 65
INFO  21:44:07,178 - #30 )
INFO  21:44:07,178 - #27 ;
INFO  21:44:07,178 - #3 print
INFO  21:44:07,178 - #29 (
INFO  21:44:07,178 - #9 77
INFO  21:44:07,178 - #30 )
INFO  21:44:07,178 - #27 ;
INFO  21:44:07,178 - #21 }
INFO  21:44:07,179 - #21 }
INFO  21:44:07,179 - =====================SINTAKSNO_STABLO=========================
INFO  21:44:07,181 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:44:07,182 - ==============================================================
INFO  21:44:07,198 - Pocetak obrade programa Program na liniji 1
INFO  21:44:07,198 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:44:07,199 - Deklarisana konstanta c na liniji 2
INFO  21:44:07,199 - Deklarisana konstanta d na liniji 2
INFO  21:44:07,199 - Deklarisana konstanta g na liniji 2
INFO  21:44:07,200 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:44:07,200 - Deklarisana promenljiva e na liniji 3
INFO  21:44:07,200 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:44:07,200 - Deklarisan niz z na liniji 3
INFO  21:44:07,201 - Pocetak obrade metode main na liniji 5
INFO  21:44:07,201 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:44:07,201 - Zavrsetak obrade programa Program na liniji 1
INFO  21:44:07,202 - ======================TABELA_SIMBOLA==========================
INFO  21:44:07,202 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:44:07,204 - ==============================================================
INFO  21:44:07,204 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:44:07,204 - ==============================================================
INFO  21:44:07,204 - ======================GENERISANJE_KODA========================
INFO  21:44:07,209 - Generisanje koda uspesno zavrseno!
INFO  21:44:07,209 - Generisanje izlaznog fajla test\program.obj
INFO  21:44:07,209 - ==============================================================
INFO  21:44:43,556 - Obrada ulaznog fajla test\program.mj
INFO  21:44:43,635 - #2 program
INFO  21:44:43,635 - #8 Program
INFO  21:44:43,635 - #5 const
INFO  21:44:43,636 - #8 int
INFO  21:44:43,636 - #8 c
INFO  21:44:43,637 - #24 =
INFO  21:44:43,637 - #9 10
INFO  21:44:43,637 - #28 ,
INFO  21:44:43,638 - #8 d
INFO  21:44:43,638 - #24 =
INFO  21:44:43,638 - #9 99
INFO  21:44:43,638 - #28 ,
INFO  21:44:43,639 - #8 g
INFO  21:44:43,639 - #24 =
INFO  21:44:43,639 - #9 2
INFO  21:44:43,639 - #27 ;
INFO  21:44:43,639 - #8 int
INFO  21:44:43,640 - #8 e
INFO  21:44:43,640 - #27 ;
INFO  21:44:43,641 - #8 char
INFO  21:44:43,642 - #8 z
INFO  21:44:43,642 - #22 [
INFO  21:44:43,642 - #23 ]
INFO  21:44:43,642 - #27 ;
INFO  21:44:43,642 - #20 {
INFO  21:44:43,643 - #6 void
INFO  21:44:43,643 - #8 main
INFO  21:44:43,644 - #29 (
INFO  21:44:43,645 - #30 )
INFO  21:44:43,645 - #20 {
INFO  21:44:43,645 - #31 if
INFO  21:44:43,645 - #29 (
INFO  21:44:43,645 - #12 false
INFO  21:44:43,645 - #30 )
INFO  21:44:43,646 - #20 {
INFO  21:44:43,646 - #3 print
INFO  21:44:43,646 - #29 (
INFO  21:44:43,646 - #9 32
INFO  21:44:43,646 - #30 )
INFO  21:44:43,646 - #27 ;
INFO  21:44:43,646 - #3 print
INFO  21:44:43,647 - #29 (
INFO  21:44:43,647 - #9 64
INFO  21:44:43,647 - #30 )
INFO  21:44:43,647 - #27 ;
INFO  21:44:43,647 - #21 }
INFO  21:44:43,647 - #3 print
INFO  21:44:43,648 - #29 (
INFO  21:44:43,648 - #9 65
INFO  21:44:43,648 - #30 )
INFO  21:44:43,648 - #27 ;
INFO  21:44:43,648 - #3 print
INFO  21:44:43,648 - #29 (
INFO  21:44:43,648 - #9 77
INFO  21:44:43,648 - #30 )
INFO  21:44:43,648 - #27 ;
INFO  21:44:43,648 - #21 }
INFO  21:44:43,648 - #21 }
INFO  21:44:43,649 - =====================SINTAKSNO_STABLO=========================
INFO  21:44:43,650 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:44:43,651 - ==============================================================
INFO  21:44:43,665 - Pocetak obrade programa Program na liniji 1
INFO  21:44:43,666 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:44:43,666 - Deklarisana konstanta c na liniji 2
INFO  21:44:43,667 - Deklarisana konstanta d na liniji 2
INFO  21:44:43,667 - Deklarisana konstanta g na liniji 2
INFO  21:44:43,667 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:44:43,667 - Deklarisana promenljiva e na liniji 3
INFO  21:44:43,667 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:44:43,667 - Deklarisan niz z na liniji 3
INFO  21:44:43,668 - Pocetak obrade metode main na liniji 5
INFO  21:44:43,668 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:44:43,668 - Zavrsetak obrade programa Program na liniji 1
INFO  21:44:43,668 - ======================TABELA_SIMBOLA==========================
INFO  21:44:43,669 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:44:43,670 - ==============================================================
INFO  21:44:43,670 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:44:43,670 - ==============================================================
INFO  21:44:43,670 - ======================GENERISANJE_KODA========================
INFO  21:44:43,675 - Generisanje koda uspesno zavrseno!
INFO  21:44:43,676 - Generisanje izlaznog fajla test\program.obj
INFO  21:44:43,676 - ==============================================================
INFO  21:51:16,281 - Obrada ulaznog fajla test\program.mj
INFO  21:51:16,357 - #2 program
INFO  21:51:16,357 - #8 Program
INFO  21:51:16,357 - #5 const
INFO  21:51:16,358 - #8 int
INFO  21:51:16,358 - #8 c
INFO  21:51:16,359 - #24 =
INFO  21:51:16,359 - #9 10
INFO  21:51:16,359 - #28 ,
INFO  21:51:16,360 - #8 d
INFO  21:51:16,360 - #24 =
INFO  21:51:16,360 - #9 99
INFO  21:51:16,360 - #28 ,
INFO  21:51:16,361 - #8 g
INFO  21:51:16,361 - #24 =
INFO  21:51:16,361 - #9 2
INFO  21:51:16,361 - #27 ;
INFO  21:51:16,361 - #8 int
INFO  21:51:16,363 - #8 e
INFO  21:51:16,363 - #27 ;
INFO  21:51:16,363 - #8 char
INFO  21:51:16,365 - #8 z
INFO  21:51:16,365 - #22 [
INFO  21:51:16,365 - #23 ]
INFO  21:51:16,365 - #27 ;
INFO  21:51:16,365 - #20 {
INFO  21:51:16,367 - #6 void
INFO  21:51:16,367 - #8 main
INFO  21:51:16,367 - #29 (
INFO  21:51:16,368 - #30 )
INFO  21:51:16,368 - #20 {
INFO  21:51:16,368 - #31 if
INFO  21:51:16,369 - #29 (
INFO  21:51:16,369 - #12 false
INFO  21:51:16,369 - #30 )
INFO  21:51:16,370 - #20 {
INFO  21:51:16,370 - #3 print
INFO  21:51:16,370 - #29 (
INFO  21:51:16,370 - #9 32
INFO  21:51:16,370 - #30 )
INFO  21:51:16,370 - #27 ;
INFO  21:51:16,370 - #3 print
INFO  21:51:16,371 - #29 (
INFO  21:51:16,371 - #9 64
INFO  21:51:16,371 - #30 )
INFO  21:51:16,371 - #27 ;
INFO  21:51:16,371 - #21 }
INFO  21:51:16,371 - #3 print
INFO  21:51:16,372 - #29 (
INFO  21:51:16,372 - #9 65
INFO  21:51:16,372 - #30 )
INFO  21:51:16,372 - #27 ;
INFO  21:51:16,372 - #3 print
INFO  21:51:16,372 - #29 (
INFO  21:51:16,372 - #9 77
INFO  21:51:16,372 - #30 )
INFO  21:51:16,372 - #27 ;
INFO  21:51:16,373 - #21 }
INFO  21:51:16,373 - #21 }
INFO  21:51:16,374 - =====================SINTAKSNO_STABLO=========================
INFO  21:51:16,375 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:51:16,375 - ==============================================================
INFO  21:51:16,390 - Pocetak obrade programa Program na liniji 1
INFO  21:51:16,391 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:51:16,392 - Deklarisana konstanta c na liniji 2
INFO  21:51:16,392 - Deklarisana konstanta d na liniji 2
INFO  21:51:16,392 - Deklarisana konstanta g na liniji 2
INFO  21:51:16,392 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:51:16,392 - Deklarisana promenljiva e na liniji 3
INFO  21:51:16,392 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:51:16,392 - Deklarisan niz z na liniji 3
INFO  21:51:16,393 - Pocetak obrade metode main na liniji 5
INFO  21:51:16,393 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:51:16,393 - Zavrsetak obrade programa Program na liniji 1
INFO  21:51:16,394 - ======================TABELA_SIMBOLA==========================
INFO  21:51:16,394 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:51:16,396 - ==============================================================
INFO  21:51:16,396 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:51:16,396 - ==============================================================
INFO  21:51:16,396 - ======================GENERISANJE_KODA========================
INFO  21:51:16,401 - Generisanje koda uspesno zavrseno!
INFO  21:51:16,401 - Generisanje izlaznog fajla test\program.obj
INFO  21:51:16,401 - ==============================================================
INFO  21:52:12,519 - Obrada ulaznog fajla test\program.mj
INFO  21:52:12,615 - #2 program
INFO  21:52:12,615 - #8 Program
INFO  21:52:12,615 - #5 const
INFO  21:52:12,617 - #8 int
INFO  21:52:12,617 - #8 c
INFO  21:52:12,617 - #24 =
INFO  21:52:12,618 - #9 10
INFO  21:52:12,618 - #28 ,
INFO  21:52:12,619 - #8 d
INFO  21:52:12,619 - #24 =
INFO  21:52:12,619 - #9 99
INFO  21:52:12,619 - #28 ,
INFO  21:52:12,619 - #8 g
INFO  21:52:12,619 - #24 =
INFO  21:52:12,620 - #9 2
INFO  21:52:12,620 - #27 ;
INFO  21:52:12,620 - #8 int
INFO  21:52:12,621 - #8 e
INFO  21:52:12,621 - #27 ;
INFO  21:52:12,622 - #8 char
INFO  21:52:12,623 - #8 z
INFO  21:52:12,623 - #22 [
INFO  21:52:12,623 - #23 ]
INFO  21:52:12,623 - #27 ;
INFO  21:52:12,623 - #20 {
INFO  21:52:12,624 - #6 void
INFO  21:52:12,624 - #8 main
INFO  21:52:12,625 - #29 (
INFO  21:52:12,626 - #30 )
INFO  21:52:12,626 - #20 {
INFO  21:52:12,626 - #31 if
INFO  21:52:12,626 - #29 (
INFO  21:52:12,627 - #12 false
INFO  21:52:12,627 - #30 )
INFO  21:52:12,628 - #20 {
INFO  21:52:12,628 - #3 print
INFO  21:52:12,628 - #29 (
INFO  21:52:12,629 - #9 32
INFO  21:52:12,629 - #30 )
INFO  21:52:12,629 - #27 ;
INFO  21:52:12,629 - #3 print
INFO  21:52:12,629 - #29 (
INFO  21:52:12,629 - #9 64
INFO  21:52:12,630 - #30 )
INFO  21:52:12,630 - #27 ;
INFO  21:52:12,630 - #21 }
INFO  21:52:12,630 - #3 print
INFO  21:52:12,631 - #29 (
INFO  21:52:12,631 - #9 65
INFO  21:52:12,631 - #30 )
INFO  21:52:12,631 - #27 ;
INFO  21:52:12,631 - #3 print
INFO  21:52:12,631 - #29 (
INFO  21:52:12,631 - #9 77
INFO  21:52:12,631 - #30 )
INFO  21:52:12,631 - #27 ;
INFO  21:52:12,632 - #21 }
INFO  21:52:12,632 - #21 }
INFO  21:52:12,634 - =====================SINTAKSNO_STABLO=========================
INFO  21:52:12,635 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:52:12,636 - ==============================================================
INFO  21:52:12,646 - Pocetak obrade programa Program na liniji 1
INFO  21:52:12,646 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:52:12,647 - Deklarisana konstanta c na liniji 2
INFO  21:52:12,647 - Deklarisana konstanta d na liniji 2
INFO  21:52:12,647 - Deklarisana konstanta g na liniji 2
INFO  21:52:12,647 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:52:12,647 - Deklarisana promenljiva e na liniji 3
INFO  21:52:12,647 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:52:12,647 - Deklarisan niz z na liniji 3
INFO  21:52:12,648 - Pocetak obrade metode main na liniji 5
INFO  21:52:12,648 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:52:12,648 - Zavrsetak obrade programa Program na liniji 1
INFO  21:52:12,648 - ======================TABELA_SIMBOLA==========================
INFO  21:52:12,649 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:52:12,650 - ==============================================================
INFO  21:52:12,650 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:52:12,650 - ==============================================================
INFO  21:52:12,650 - ======================GENERISANJE_KODA========================
INFO  21:52:12,656 - Generisanje koda uspesno zavrseno!
INFO  21:52:12,657 - Generisanje izlaznog fajla test\program.obj
INFO  21:52:12,657 - ==============================================================
INFO  21:53:15,214 - Obrada ulaznog fajla test\program.mj
INFO  21:53:15,291 - #2 program
INFO  21:53:15,292 - #8 Program
INFO  21:53:15,292 - #5 const
INFO  21:53:15,293 - #8 int
INFO  21:53:15,293 - #8 c
INFO  21:53:15,293 - #24 =
INFO  21:53:15,293 - #9 10
INFO  21:53:15,294 - #28 ,
INFO  21:53:15,294 - #8 d
INFO  21:53:15,295 - #24 =
INFO  21:53:15,295 - #9 99
INFO  21:53:15,295 - #28 ,
INFO  21:53:15,295 - #8 g
INFO  21:53:15,295 - #24 =
INFO  21:53:15,295 - #9 2
INFO  21:53:15,295 - #27 ;
INFO  21:53:15,295 - #8 int
INFO  21:53:15,297 - #8 e
INFO  21:53:15,297 - #27 ;
INFO  21:53:15,297 - #8 char
INFO  21:53:15,298 - #8 z
INFO  21:53:15,299 - #22 [
INFO  21:53:15,299 - #23 ]
INFO  21:53:15,299 - #27 ;
INFO  21:53:15,299 - #20 {
INFO  21:53:15,299 - #6 void
INFO  21:53:15,299 - #8 main
INFO  21:53:15,299 - #29 (
INFO  21:53:15,300 - #30 )
INFO  21:53:15,300 - #20 {
INFO  21:53:15,300 - #31 if
INFO  21:53:15,300 - #29 (
INFO  21:53:15,301 - #12 false
INFO  21:53:15,301 - #30 )
INFO  21:53:15,302 - #20 {
INFO  21:53:15,302 - #3 print
INFO  21:53:15,302 - #29 (
INFO  21:53:15,302 - #9 32
INFO  21:53:15,302 - #30 )
INFO  21:53:15,302 - #27 ;
INFO  21:53:15,302 - #3 print
INFO  21:53:15,302 - #29 (
INFO  21:53:15,303 - #9 64
INFO  21:53:15,303 - #30 )
INFO  21:53:15,303 - #27 ;
INFO  21:53:15,303 - #21 }
INFO  21:53:15,303 - #3 print
INFO  21:53:15,303 - #29 (
INFO  21:53:15,303 - #9 65
INFO  21:53:15,303 - #30 )
INFO  21:53:15,304 - #27 ;
INFO  21:53:15,304 - #3 print
INFO  21:53:15,304 - #29 (
INFO  21:53:15,304 - #9 77
INFO  21:53:15,304 - #30 )
INFO  21:53:15,304 - #27 ;
INFO  21:53:15,304 - #21 }
INFO  21:53:15,304 - #21 }
INFO  21:53:15,305 - =====================SINTAKSNO_STABLO=========================
INFO  21:53:15,306 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:53:15,307 - ==============================================================
INFO  21:53:15,321 - Pocetak obrade programa Program na liniji 1
INFO  21:53:15,321 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:53:15,322 - Deklarisana konstanta c na liniji 2
INFO  21:53:15,322 - Deklarisana konstanta d na liniji 2
INFO  21:53:15,322 - Deklarisana konstanta g na liniji 2
INFO  21:53:15,322 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:53:15,322 - Deklarisana promenljiva e na liniji 3
INFO  21:53:15,322 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:53:15,322 - Deklarisan niz z na liniji 3
INFO  21:53:15,323 - Pocetak obrade metode main na liniji 5
INFO  21:53:15,323 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:53:15,323 - Zavrsetak obrade programa Program na liniji 1
INFO  21:53:15,323 - ======================TABELA_SIMBOLA==========================
INFO  21:53:15,324 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:53:15,326 - ==============================================================
INFO  21:53:15,326 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:53:15,326 - ==============================================================
INFO  21:53:15,326 - ======================GENERISANJE_KODA========================
INFO  21:53:15,331 - Generisanje koda uspesno zavrseno!
INFO  21:53:15,331 - Generisanje izlaznog fajla test\program.obj
INFO  21:53:15,331 - ==============================================================
INFO  21:53:44,246 - Obrada ulaznog fajla test\program.mj
INFO  21:53:44,328 - #2 program
INFO  21:53:44,329 - #8 Program
INFO  21:53:44,329 - #5 const
INFO  21:53:44,330 - #8 int
INFO  21:53:44,330 - #8 c
INFO  21:53:44,330 - #24 =
INFO  21:53:44,331 - #9 10
INFO  21:53:44,331 - #28 ,
INFO  21:53:44,332 - #8 d
INFO  21:53:44,332 - #24 =
INFO  21:53:44,332 - #9 99
INFO  21:53:44,332 - #28 ,
INFO  21:53:44,332 - #8 g
INFO  21:53:44,332 - #24 =
INFO  21:53:44,333 - #9 2
INFO  21:53:44,333 - #27 ;
INFO  21:53:44,333 - #8 int
INFO  21:53:44,334 - #8 e
INFO  21:53:44,334 - #27 ;
INFO  21:53:44,334 - #8 char
INFO  21:53:44,335 - #8 z
INFO  21:53:44,336 - #22 [
INFO  21:53:44,336 - #23 ]
INFO  21:53:44,336 - #27 ;
INFO  21:53:44,336 - #20 {
INFO  21:53:44,336 - #6 void
INFO  21:53:44,336 - #8 main
INFO  21:53:44,336 - #29 (
INFO  21:53:44,337 - #30 )
INFO  21:53:44,337 - #20 {
INFO  21:53:44,337 - #31 if
INFO  21:53:44,337 - #29 (
INFO  21:53:44,338 - #12 false
INFO  21:53:44,338 - #30 )
INFO  21:53:44,338 - #20 {
INFO  21:53:44,339 - #3 print
INFO  21:53:44,339 - #29 (
INFO  21:53:44,339 - #9 32
INFO  21:53:44,339 - #30 )
INFO  21:53:44,339 - #27 ;
INFO  21:53:44,339 - #3 print
INFO  21:53:44,339 - #29 (
INFO  21:53:44,339 - #9 64
INFO  21:53:44,340 - #30 )
INFO  21:53:44,340 - #27 ;
INFO  21:53:44,340 - #21 }
INFO  21:53:44,340 - #3 print
INFO  21:53:44,340 - #29 (
INFO  21:53:44,340 - #9 65
INFO  21:53:44,340 - #30 )
INFO  21:53:44,340 - #27 ;
INFO  21:53:44,341 - #3 print
INFO  21:53:44,341 - #29 (
INFO  21:53:44,341 - #9 77
INFO  21:53:44,341 - #30 )
INFO  21:53:44,341 - #27 ;
INFO  21:53:44,341 - #21 }
INFO  21:53:44,341 - #21 }
INFO  21:53:44,342 - =====================SINTAKSNO_STABLO=========================
INFO  21:53:44,343 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:53:44,344 - ==============================================================
INFO  21:53:44,358 - Pocetak obrade programa Program na liniji 1
INFO  21:53:44,359 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:53:44,360 - Deklarisana konstanta c na liniji 2
INFO  21:53:44,360 - Deklarisana konstanta d na liniji 2
INFO  21:53:44,360 - Deklarisana konstanta g na liniji 2
INFO  21:53:44,360 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:53:44,360 - Deklarisana promenljiva e na liniji 3
INFO  21:53:44,360 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:53:44,360 - Deklarisan niz z na liniji 3
INFO  21:53:44,361 - Pocetak obrade metode main na liniji 5
INFO  21:53:44,361 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:53:44,362 - Zavrsetak obrade programa Program na liniji 1
INFO  21:53:44,362 - ======================TABELA_SIMBOLA==========================
INFO  21:53:44,362 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:53:44,364 - ==============================================================
INFO  21:53:44,364 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:53:44,364 - ==============================================================
INFO  21:53:44,364 - ======================GENERISANJE_KODA========================
INFO  21:53:44,369 - Generisanje koda uspesno zavrseno!
INFO  21:53:44,370 - Generisanje izlaznog fajla test\program.obj
INFO  21:53:44,370 - ==============================================================
INFO  21:54:35,983 - Obrada ulaznog fajla test\program.mj
INFO  21:54:36,067 - #2 program
INFO  21:54:36,067 - #8 Program
INFO  21:54:36,067 - #5 const
INFO  21:54:36,068 - #8 int
INFO  21:54:36,068 - #8 c
INFO  21:54:36,068 - #24 =
INFO  21:54:36,069 - #9 10
INFO  21:54:36,069 - #28 ,
INFO  21:54:36,070 - #8 d
INFO  21:54:36,070 - #24 =
INFO  21:54:36,070 - #9 99
INFO  21:54:36,070 - #28 ,
INFO  21:54:36,070 - #8 g
INFO  21:54:36,070 - #24 =
INFO  21:54:36,070 - #9 2
INFO  21:54:36,070 - #27 ;
INFO  21:54:36,070 - #8 int
INFO  21:54:36,071 - #8 e
INFO  21:54:36,072 - #27 ;
INFO  21:54:36,072 - #8 char
INFO  21:54:36,073 - #8 z
INFO  21:54:36,073 - #22 [
INFO  21:54:36,073 - #23 ]
INFO  21:54:36,073 - #27 ;
INFO  21:54:36,073 - #20 {
INFO  21:54:36,074 - #6 void
INFO  21:54:36,074 - #8 main
INFO  21:54:36,074 - #29 (
INFO  21:54:36,075 - #30 )
INFO  21:54:36,075 - #20 {
INFO  21:54:36,075 - #31 if
INFO  21:54:36,075 - #29 (
INFO  21:54:36,075 - #12 false
INFO  21:54:36,075 - #30 )
INFO  21:54:36,076 - #20 {
INFO  21:54:36,076 - #3 print
INFO  21:54:36,076 - #29 (
INFO  21:54:36,076 - #9 32
INFO  21:54:36,076 - #30 )
INFO  21:54:36,076 - #27 ;
INFO  21:54:36,076 - #3 print
INFO  21:54:36,077 - #29 (
INFO  21:54:36,077 - #9 64
INFO  21:54:36,077 - #30 )
INFO  21:54:36,077 - #27 ;
INFO  21:54:36,077 - #21 }
INFO  21:54:36,077 - #3 print
INFO  21:54:36,077 - #29 (
INFO  21:54:36,078 - #9 65
INFO  21:54:36,078 - #30 )
INFO  21:54:36,078 - #27 ;
INFO  21:54:36,078 - #3 print
INFO  21:54:36,078 - #29 (
INFO  21:54:36,078 - #9 77
INFO  21:54:36,078 - #30 )
INFO  21:54:36,078 - #27 ;
INFO  21:54:36,078 - #21 }
INFO  21:54:36,078 - #21 }
INFO  21:54:36,079 - =====================SINTAKSNO_STABLO=========================
INFO  21:54:36,080 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:54:36,081 - ==============================================================
INFO  21:54:36,090 - Pocetak obrade programa Program na liniji 1
INFO  21:54:36,090 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:54:36,091 - Deklarisana konstanta c na liniji 2
INFO  21:54:36,091 - Deklarisana konstanta d na liniji 2
INFO  21:54:36,092 - Deklarisana konstanta g na liniji 2
INFO  21:54:36,092 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:54:36,092 - Deklarisana promenljiva e na liniji 3
INFO  21:54:36,092 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:54:36,092 - Deklarisan niz z na liniji 3
INFO  21:54:36,093 - Pocetak obrade metode main na liniji 5
INFO  21:54:36,093 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:54:36,093 - Zavrsetak obrade programa Program na liniji 1
INFO  21:54:36,093 - ======================TABELA_SIMBOLA==========================
INFO  21:54:36,094 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:54:36,095 - ==============================================================
INFO  21:54:36,095 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:54:36,095 - ==============================================================
INFO  21:54:36,095 - ======================GENERISANJE_KODA========================
INFO  21:54:36,100 - Generisanje koda uspesno zavrseno!
INFO  21:54:36,101 - Generisanje izlaznog fajla test\program.obj
INFO  21:54:36,101 - ==============================================================
INFO  21:54:46,778 - Obrada ulaznog fajla test\program.mj
INFO  21:54:46,879 - #2 program
INFO  21:54:46,879 - #8 Program
INFO  21:54:46,879 - #5 const
INFO  21:54:46,880 - #8 int
INFO  21:54:46,880 - #8 c
INFO  21:54:46,882 - #24 =
INFO  21:54:46,882 - #9 10
INFO  21:54:46,882 - #28 ,
INFO  21:54:46,883 - #8 d
INFO  21:54:46,884 - #24 =
INFO  21:54:46,884 - #9 99
INFO  21:54:46,884 - #28 ,
INFO  21:54:46,885 - #8 g
INFO  21:54:46,885 - #24 =
INFO  21:54:46,885 - #9 2
INFO  21:54:46,885 - #27 ;
INFO  21:54:46,885 - #8 int
INFO  21:54:46,888 - #8 e
INFO  21:54:46,888 - #27 ;
INFO  21:54:46,888 - #8 char
INFO  21:54:46,890 - #8 z
INFO  21:54:46,890 - #22 [
INFO  21:54:46,890 - #23 ]
INFO  21:54:46,890 - #27 ;
INFO  21:54:46,890 - #20 {
INFO  21:54:46,891 - #6 void
INFO  21:54:46,891 - #8 main
INFO  21:54:46,891 - #29 (
INFO  21:54:46,892 - #30 )
INFO  21:54:46,892 - #20 {
INFO  21:54:46,892 - #31 if
INFO  21:54:46,893 - #29 (
INFO  21:54:46,893 - #12 false
INFO  21:54:46,893 - #30 )
INFO  21:54:46,894 - #20 {
INFO  21:54:46,894 - #3 print
INFO  21:54:46,894 - #29 (
INFO  21:54:46,894 - #9 32
INFO  21:54:46,894 - #30 )
INFO  21:54:46,895 - #27 ;
INFO  21:54:46,895 - #3 print
INFO  21:54:46,895 - #29 (
INFO  21:54:46,895 - #9 64
INFO  21:54:46,895 - #30 )
INFO  21:54:46,896 - #27 ;
INFO  21:54:46,896 - #21 }
INFO  21:54:46,896 - #3 print
INFO  21:54:46,896 - #29 (
INFO  21:54:46,896 - #9 65
INFO  21:54:46,896 - #30 )
INFO  21:54:46,897 - #27 ;
INFO  21:54:46,897 - #3 print
INFO  21:54:46,897 - #29 (
INFO  21:54:46,897 - #9 77
INFO  21:54:46,897 - #30 )
INFO  21:54:46,897 - #27 ;
INFO  21:54:46,897 - #21 }
INFO  21:54:46,897 - #21 }
INFO  21:54:46,898 - =====================SINTAKSNO_STABLO=========================
INFO  21:54:46,900 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:54:46,901 - ==============================================================
INFO  21:54:46,916 - Pocetak obrade programa Program na liniji 1
INFO  21:54:46,916 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:54:46,918 - Deklarisana konstanta c na liniji 2
INFO  21:54:46,918 - Deklarisana konstanta d na liniji 2
INFO  21:54:46,918 - Deklarisana konstanta g na liniji 2
INFO  21:54:46,918 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:54:46,918 - Deklarisana promenljiva e na liniji 3
INFO  21:54:46,919 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:54:46,919 - Deklarisan niz z na liniji 3
INFO  21:54:46,920 - Pocetak obrade metode main na liniji 5
INFO  21:54:46,920 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:54:46,920 - Zavrsetak obrade programa Program na liniji 1
INFO  21:54:46,920 - ======================TABELA_SIMBOLA==========================
INFO  21:54:46,921 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:54:46,923 - ==============================================================
INFO  21:54:46,923 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:54:46,923 - ==============================================================
INFO  21:54:46,923 - ======================GENERISANJE_KODA========================
INFO  21:54:46,929 - Generisanje koda uspesno zavrseno!
INFO  21:54:46,929 - Generisanje izlaznog fajla test\program.obj
INFO  21:54:46,929 - ==============================================================
INFO  21:59:35,644 - Obrada ulaznog fajla test\program.mj
INFO  21:59:35,723 - #2 program
INFO  21:59:35,723 - #8 Program
INFO  21:59:35,724 - #5 const
INFO  21:59:35,725 - #8 int
INFO  21:59:35,725 - #8 c
INFO  21:59:35,726 - #24 =
INFO  21:59:35,726 - #9 10
INFO  21:59:35,726 - #28 ,
INFO  21:59:35,728 - #8 d
INFO  21:59:35,728 - #24 =
INFO  21:59:35,728 - #9 99
INFO  21:59:35,728 - #28 ,
INFO  21:59:35,728 - #8 g
INFO  21:59:35,728 - #24 =
INFO  21:59:35,728 - #9 2
INFO  21:59:35,728 - #27 ;
INFO  21:59:35,729 - #8 int
INFO  21:59:35,730 - #8 e
INFO  21:59:35,730 - #27 ;
INFO  21:59:35,730 - #8 char
INFO  21:59:35,732 - #8 z
INFO  21:59:35,732 - #22 [
INFO  21:59:35,732 - #23 ]
INFO  21:59:35,732 - #27 ;
INFO  21:59:35,732 - #20 {
INFO  21:59:35,732 - #6 void
INFO  21:59:35,732 - #8 main
INFO  21:59:35,732 - #29 (
INFO  21:59:35,733 - #30 )
INFO  21:59:35,734 - #20 {
INFO  21:59:35,734 - #31 if
INFO  21:59:35,734 - #29 (
INFO  21:59:35,734 - #12 false
INFO  21:59:35,734 - #30 )
INFO  21:59:35,735 - #20 {
INFO  21:59:35,735 - #3 print
INFO  21:59:35,735 - #29 (
INFO  21:59:35,735 - #9 32
INFO  21:59:35,735 - #30 )
INFO  21:59:35,736 - #27 ;
INFO  21:59:35,736 - #3 print
INFO  21:59:35,736 - #29 (
INFO  21:59:35,736 - #9 64
INFO  21:59:35,736 - #30 )
INFO  21:59:35,736 - #27 ;
INFO  21:59:35,736 - #21 }
INFO  21:59:35,737 - #3 print
INFO  21:59:35,737 - #29 (
INFO  21:59:35,737 - #9 65
INFO  21:59:35,737 - #30 )
INFO  21:59:35,737 - #27 ;
INFO  21:59:35,737 - #3 print
INFO  21:59:35,738 - #29 (
INFO  21:59:35,738 - #9 77
INFO  21:59:35,738 - #30 )
INFO  21:59:35,738 - #27 ;
INFO  21:59:35,738 - #21 }
INFO  21:59:35,738 - #21 }
INFO  21:59:35,739 - =====================SINTAKSNO_STABLO=========================
INFO  21:59:35,740 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  21:59:35,740 - ==============================================================
INFO  21:59:35,754 - Pocetak obrade programa Program na liniji 1
INFO  21:59:35,754 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  21:59:35,756 - Deklarisana konstanta c na liniji 2
INFO  21:59:35,756 - Deklarisana konstanta d na liniji 2
INFO  21:59:35,756 - Deklarisana konstanta g na liniji 2
INFO  21:59:35,756 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  21:59:35,756 - Deklarisana promenljiva e na liniji 3
INFO  21:59:35,756 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  21:59:35,756 - Deklarisan niz z na liniji 3
INFO  21:59:35,757 - Pocetak obrade metode main na liniji 5
INFO  21:59:35,757 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  21:59:35,757 - Zavrsetak obrade programa Program na liniji 1
INFO  21:59:35,757 - ======================TABELA_SIMBOLA==========================
INFO  21:59:35,758 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  21:59:35,759 - ==============================================================
INFO  21:59:35,759 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  21:59:35,759 - ==============================================================
INFO  21:59:35,759 - ======================GENERISANJE_KODA========================
INFO  21:59:35,764 - Generisanje koda uspesno zavrseno!
INFO  21:59:35,765 - Generisanje izlaznog fajla test\program.obj
INFO  21:59:35,765 - ==============================================================
INFO  22:00:49,613 - Obrada ulaznog fajla test\program.mj
INFO  22:00:49,689 - #2 program
INFO  22:00:49,689 - #8 Program
INFO  22:00:49,689 - #5 const
INFO  22:00:49,690 - #8 int
INFO  22:00:49,690 - #8 c
INFO  22:00:49,691 - #24 =
INFO  22:00:49,691 - #9 10
INFO  22:00:49,691 - #28 ,
INFO  22:00:49,693 - #8 d
INFO  22:00:49,693 - #24 =
INFO  22:00:49,693 - #9 99
INFO  22:00:49,693 - #28 ,
INFO  22:00:49,693 - #8 g
INFO  22:00:49,693 - #24 =
INFO  22:00:49,693 - #9 2
INFO  22:00:49,694 - #27 ;
INFO  22:00:49,694 - #8 int
INFO  22:00:49,695 - #8 e
INFO  22:00:49,695 - #27 ;
INFO  22:00:49,696 - #8 char
INFO  22:00:49,697 - #8 z
INFO  22:00:49,697 - #22 [
INFO  22:00:49,697 - #23 ]
INFO  22:00:49,697 - #27 ;
INFO  22:00:49,698 - #20 {
INFO  22:00:49,698 - #6 void
INFO  22:00:49,698 - #8 main
INFO  22:00:49,698 - #29 (
INFO  22:00:49,699 - #30 )
INFO  22:00:49,699 - #20 {
INFO  22:00:49,699 - #31 if
INFO  22:00:49,699 - #29 (
INFO  22:00:49,699 - #12 false
INFO  22:00:49,700 - #30 )
INFO  22:00:49,700 - #20 {
INFO  22:00:49,700 - #3 print
INFO  22:00:49,700 - #29 (
INFO  22:00:49,701 - #9 32
INFO  22:00:49,701 - #30 )
INFO  22:00:49,701 - #27 ;
INFO  22:00:49,701 - #3 print
INFO  22:00:49,701 - #29 (
INFO  22:00:49,701 - #9 64
INFO  22:00:49,701 - #30 )
INFO  22:00:49,701 - #27 ;
INFO  22:00:49,701 - #21 }
INFO  22:00:49,702 - #3 print
INFO  22:00:49,702 - #29 (
INFO  22:00:49,702 - #9 65
INFO  22:00:49,702 - #30 )
INFO  22:00:49,702 - #27 ;
INFO  22:00:49,702 - #3 print
INFO  22:00:49,702 - #29 (
INFO  22:00:49,703 - #9 77
INFO  22:00:49,703 - #30 )
INFO  22:00:49,703 - #27 ;
INFO  22:00:49,703 - #21 }
INFO  22:00:49,703 - #21 }
INFO  22:00:49,704 - =====================SINTAKSNO_STABLO=========================
INFO  22:00:49,705 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:00:49,705 - ==============================================================
INFO  22:00:49,720 - Pocetak obrade programa Program na liniji 1
INFO  22:00:49,721 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:00:49,722 - Deklarisana konstanta c na liniji 2
INFO  22:00:49,722 - Deklarisana konstanta d na liniji 2
INFO  22:00:49,722 - Deklarisana konstanta g na liniji 2
INFO  22:00:49,722 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:00:49,722 - Deklarisana promenljiva e na liniji 3
INFO  22:00:49,722 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:00:49,722 - Deklarisan niz z na liniji 3
INFO  22:00:49,723 - Pocetak obrade metode main na liniji 5
INFO  22:00:49,724 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:00:49,724 - Zavrsetak obrade programa Program na liniji 1
INFO  22:00:49,724 - ======================TABELA_SIMBOLA==========================
INFO  22:00:49,725 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:00:49,726 - ==============================================================
INFO  22:00:49,726 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:00:49,727 - ==============================================================
INFO  22:00:49,727 - ======================GENERISANJE_KODA========================
INFO  22:00:49,732 - Generisanje koda uspesno zavrseno!
INFO  22:00:49,732 - Generisanje izlaznog fajla test\program.obj
INFO  22:00:49,732 - ==============================================================
INFO  22:00:51,556 - Obrada ulaznog fajla test\program.mj
INFO  22:00:51,647 - #2 program
INFO  22:00:51,647 - #8 Program
INFO  22:00:51,647 - #5 const
INFO  22:00:51,649 - #8 int
INFO  22:00:51,649 - #8 c
INFO  22:00:51,649 - #24 =
INFO  22:00:51,649 - #9 10
INFO  22:00:51,650 - #28 ,
INFO  22:00:51,651 - #8 d
INFO  22:00:51,651 - #24 =
INFO  22:00:51,651 - #9 99
INFO  22:00:51,651 - #28 ,
INFO  22:00:51,651 - #8 g
INFO  22:00:51,651 - #24 =
INFO  22:00:51,651 - #9 2
INFO  22:00:51,651 - #27 ;
INFO  22:00:51,652 - #8 int
INFO  22:00:51,653 - #8 e
INFO  22:00:51,653 - #27 ;
INFO  22:00:51,653 - #8 char
INFO  22:00:51,654 - #8 z
INFO  22:00:51,654 - #22 [
INFO  22:00:51,654 - #23 ]
INFO  22:00:51,654 - #27 ;
INFO  22:00:51,655 - #20 {
INFO  22:00:51,655 - #6 void
INFO  22:00:51,655 - #8 main
INFO  22:00:51,655 - #29 (
INFO  22:00:51,656 - #30 )
INFO  22:00:51,656 - #20 {
INFO  22:00:51,656 - #31 if
INFO  22:00:51,656 - #29 (
INFO  22:00:51,656 - #12 false
INFO  22:00:51,657 - #30 )
INFO  22:00:51,658 - #20 {
INFO  22:00:51,658 - #3 print
INFO  22:00:51,658 - #29 (
INFO  22:00:51,658 - #9 32
INFO  22:00:51,658 - #30 )
INFO  22:00:51,658 - #27 ;
INFO  22:00:51,658 - #3 print
INFO  22:00:51,659 - #29 (
INFO  22:00:51,659 - #9 64
INFO  22:00:51,659 - #30 )
INFO  22:00:51,659 - #27 ;
INFO  22:00:51,659 - #21 }
INFO  22:00:51,659 - #3 print
INFO  22:00:51,660 - #29 (
INFO  22:00:51,660 - #9 65
INFO  22:00:51,660 - #30 )
INFO  22:00:51,660 - #27 ;
INFO  22:00:51,660 - #3 print
INFO  22:00:51,660 - #29 (
INFO  22:00:51,660 - #9 77
INFO  22:00:51,660 - #30 )
INFO  22:00:51,660 - #27 ;
INFO  22:00:51,661 - #21 }
INFO  22:00:51,661 - #21 }
INFO  22:00:51,662 - =====================SINTAKSNO_STABLO=========================
INFO  22:00:51,664 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:00:51,665 - ==============================================================
INFO  22:00:51,682 - Pocetak obrade programa Program na liniji 1
INFO  22:00:51,682 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:00:51,684 - Deklarisana konstanta c na liniji 2
INFO  22:00:51,684 - Deklarisana konstanta d na liniji 2
INFO  22:00:51,684 - Deklarisana konstanta g na liniji 2
INFO  22:00:51,684 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:00:51,684 - Deklarisana promenljiva e na liniji 3
INFO  22:00:51,684 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:00:51,684 - Deklarisan niz z na liniji 3
INFO  22:00:51,685 - Pocetak obrade metode main na liniji 5
INFO  22:00:51,686 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:00:51,686 - Zavrsetak obrade programa Program na liniji 1
INFO  22:00:51,686 - ======================TABELA_SIMBOLA==========================
INFO  22:00:51,686 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:00:51,688 - ==============================================================
INFO  22:00:51,688 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:00:51,688 - ==============================================================
INFO  22:00:51,688 - ======================GENERISANJE_KODA========================
INFO  22:01:49,452 - Obrada ulaznog fajla test\program.mj
INFO  22:01:49,533 - #2 program
INFO  22:01:49,533 - #8 Program
INFO  22:01:49,533 - #5 const
INFO  22:01:49,534 - #8 int
INFO  22:01:49,534 - #8 c
INFO  22:01:49,535 - #24 =
INFO  22:01:49,536 - #9 10
INFO  22:01:49,536 - #28 ,
INFO  22:01:49,537 - #8 d
INFO  22:01:49,537 - #24 =
INFO  22:01:49,537 - #9 99
INFO  22:01:49,537 - #28 ,
INFO  22:01:49,537 - #8 g
INFO  22:01:49,537 - #24 =
INFO  22:01:49,538 - #9 2
INFO  22:01:49,538 - #27 ;
INFO  22:01:49,539 - #8 int
INFO  22:01:49,540 - #8 e
INFO  22:01:49,540 - #27 ;
INFO  22:01:49,540 - #8 char
INFO  22:01:49,542 - #8 z
INFO  22:01:49,542 - #22 [
INFO  22:01:49,542 - #23 ]
INFO  22:01:49,542 - #27 ;
INFO  22:01:49,542 - #20 {
INFO  22:01:49,542 - #6 void
INFO  22:01:49,542 - #8 main
INFO  22:01:49,543 - #29 (
INFO  22:01:49,544 - #30 )
INFO  22:01:49,544 - #20 {
INFO  22:01:49,544 - #31 if
INFO  22:01:49,544 - #29 (
INFO  22:01:49,545 - #12 false
INFO  22:01:49,545 - #30 )
INFO  22:01:49,546 - #20 {
INFO  22:01:49,546 - #3 print
INFO  22:01:49,546 - #29 (
INFO  22:01:49,546 - #9 32
INFO  22:01:49,546 - #30 )
INFO  22:01:49,546 - #27 ;
INFO  22:01:49,546 - #3 print
INFO  22:01:49,547 - #29 (
INFO  22:01:49,547 - #9 64
INFO  22:01:49,547 - #30 )
INFO  22:01:49,547 - #27 ;
INFO  22:01:49,547 - #21 }
INFO  22:01:49,547 - #3 print
INFO  22:01:49,548 - #29 (
INFO  22:01:49,548 - #9 65
INFO  22:01:49,548 - #30 )
INFO  22:01:49,548 - #27 ;
INFO  22:01:49,548 - #3 print
INFO  22:01:49,548 - #29 (
INFO  22:01:49,548 - #9 77
INFO  22:01:49,548 - #30 )
INFO  22:01:49,548 - #27 ;
INFO  22:01:49,548 - #21 }
INFO  22:01:49,549 - #21 }
INFO  22:01:49,549 - =====================SINTAKSNO_STABLO=========================
INFO  22:01:49,552 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:01:49,552 - ==============================================================
INFO  22:01:49,566 - Pocetak obrade programa Program na liniji 1
INFO  22:01:49,566 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:01:49,567 - Deklarisana konstanta c na liniji 2
INFO  22:01:49,567 - Deklarisana konstanta d na liniji 2
INFO  22:01:49,567 - Deklarisana konstanta g na liniji 2
INFO  22:01:49,567 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:01:49,568 - Deklarisana promenljiva e na liniji 3
INFO  22:01:49,568 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:01:49,568 - Deklarisan niz z na liniji 3
INFO  22:01:49,568 - Pocetak obrade metode main na liniji 5
INFO  22:01:49,569 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:01:49,569 - Zavrsetak obrade programa Program na liniji 1
INFO  22:01:49,569 - ======================TABELA_SIMBOLA==========================
INFO  22:01:49,569 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:01:49,571 - ==============================================================
INFO  22:01:49,571 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:01:49,571 - ==============================================================
INFO  22:01:49,571 - ======================GENERISANJE_KODA========================
INFO  22:01:49,576 - Generisanje koda uspesno zavrseno!
INFO  22:01:49,576 - Generisanje izlaznog fajla test\program.obj
INFO  22:01:49,576 - ==============================================================
INFO  22:01:52,290 - Obrada ulaznog fajla test\program.mj
INFO  22:01:52,423 - #2 program
INFO  22:01:52,424 - #8 Program
INFO  22:01:52,424 - #5 const
INFO  22:01:52,425 - #8 int
INFO  22:01:52,425 - #8 c
INFO  22:01:52,426 - #24 =
INFO  22:01:52,426 - #9 10
INFO  22:01:52,427 - #28 ,
INFO  22:01:52,428 - #8 d
INFO  22:01:52,428 - #24 =
INFO  22:01:52,428 - #9 99
INFO  22:01:52,428 - #28 ,
INFO  22:01:52,428 - #8 g
INFO  22:01:52,428 - #24 =
INFO  22:01:52,428 - #9 2
INFO  22:01:52,428 - #27 ;
INFO  22:01:52,429 - #8 int
INFO  22:01:52,430 - #8 e
INFO  22:01:52,430 - #27 ;
INFO  22:01:52,431 - #8 char
INFO  22:01:52,432 - #8 z
INFO  22:01:52,432 - #22 [
INFO  22:01:52,432 - #23 ]
INFO  22:01:52,432 - #27 ;
INFO  22:01:52,433 - #20 {
INFO  22:01:52,433 - #6 void
INFO  22:01:52,433 - #8 main
INFO  22:01:52,433 - #29 (
INFO  22:01:52,434 - #30 )
INFO  22:01:52,434 - #20 {
INFO  22:01:52,434 - #31 if
INFO  22:01:52,434 - #29 (
INFO  22:01:52,435 - #12 false
INFO  22:01:52,435 - #30 )
INFO  22:01:52,435 - #20 {
INFO  22:01:52,436 - #3 print
INFO  22:01:52,436 - #29 (
INFO  22:01:52,436 - #9 32
INFO  22:01:52,436 - #30 )
INFO  22:01:52,436 - #27 ;
INFO  22:01:52,436 - #3 print
INFO  22:01:52,436 - #29 (
INFO  22:01:52,437 - #9 64
INFO  22:01:52,437 - #30 )
INFO  22:01:52,437 - #27 ;
INFO  22:01:52,437 - #21 }
INFO  22:01:52,437 - #3 print
INFO  22:01:52,437 - #29 (
INFO  22:01:52,437 - #9 65
INFO  22:01:52,437 - #30 )
INFO  22:01:52,438 - #27 ;
INFO  22:01:52,438 - #3 print
INFO  22:01:52,438 - #29 (
INFO  22:01:52,438 - #9 77
INFO  22:01:52,438 - #30 )
INFO  22:01:52,438 - #27 ;
INFO  22:01:52,438 - #21 }
INFO  22:01:52,438 - #21 }
INFO  22:01:52,439 - =====================SINTAKSNO_STABLO=========================
INFO  22:01:52,442 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:01:52,442 - ==============================================================
INFO  22:01:52,458 - Pocetak obrade programa Program na liniji 1
INFO  22:01:52,458 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:01:52,459 - Deklarisana konstanta c na liniji 2
INFO  22:01:52,459 - Deklarisana konstanta d na liniji 2
INFO  22:01:52,459 - Deklarisana konstanta g na liniji 2
INFO  22:01:52,460 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:01:52,460 - Deklarisana promenljiva e na liniji 3
INFO  22:01:52,460 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:01:52,460 - Deklarisan niz z na liniji 3
INFO  22:01:52,461 - Pocetak obrade metode main na liniji 5
INFO  22:01:52,461 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:01:52,461 - Zavrsetak obrade programa Program na liniji 1
INFO  22:01:52,461 - ======================TABELA_SIMBOLA==========================
INFO  22:01:52,462 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:01:52,463 - ==============================================================
INFO  22:01:52,463 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:01:52,463 - ==============================================================
INFO  22:01:52,463 - ======================GENERISANJE_KODA========================
INFO  22:02:50,685 - Obrada ulaznog fajla test\program.mj
INFO  22:02:50,760 - #2 program
INFO  22:02:50,761 - #8 Program
INFO  22:02:50,761 - #5 const
INFO  22:02:50,761 - #8 int
INFO  22:02:50,762 - #8 c
INFO  22:02:50,762 - #24 =
INFO  22:02:50,762 - #9 10
INFO  22:02:50,762 - #28 ,
INFO  22:02:50,763 - #8 d
INFO  22:02:50,763 - #24 =
INFO  22:02:50,763 - #9 99
INFO  22:02:50,763 - #28 ,
INFO  22:02:50,764 - #8 g
INFO  22:02:50,764 - #24 =
INFO  22:02:50,764 - #9 2
INFO  22:02:50,764 - #27 ;
INFO  22:02:50,764 - #8 int
INFO  22:02:50,765 - #8 e
INFO  22:02:50,765 - #27 ;
INFO  22:02:50,766 - #8 char
INFO  22:02:50,767 - #8 z
INFO  22:02:50,767 - #22 [
INFO  22:02:50,767 - #23 ]
INFO  22:02:50,767 - #27 ;
INFO  22:02:50,767 - #20 {
INFO  22:02:50,767 - #6 void
INFO  22:02:50,767 - #8 main
INFO  22:02:50,767 - #29 (
INFO  22:02:50,768 - #30 )
INFO  22:02:50,768 - #20 {
INFO  22:02:50,768 - #31 if
INFO  22:02:50,768 - #29 (
INFO  22:02:50,768 - #12 false
INFO  22:02:50,769 - #30 )
INFO  22:02:50,769 - #20 {
INFO  22:02:50,769 - #3 print
INFO  22:02:50,770 - #29 (
INFO  22:02:50,770 - #9 32
INFO  22:02:50,770 - #30 )
INFO  22:02:50,770 - #27 ;
INFO  22:02:50,770 - #3 print
INFO  22:02:50,770 - #29 (
INFO  22:02:50,771 - #9 64
INFO  22:02:50,771 - #30 )
INFO  22:02:50,771 - #27 ;
INFO  22:02:50,771 - #21 }
INFO  22:02:50,771 - #3 print
INFO  22:02:50,771 - #29 (
INFO  22:02:50,771 - #9 65
INFO  22:02:50,771 - #30 )
INFO  22:02:50,772 - #27 ;
INFO  22:02:50,772 - #3 print
INFO  22:02:50,772 - #29 (
INFO  22:02:50,772 - #9 77
INFO  22:02:50,772 - #30 )
INFO  22:02:50,772 - #27 ;
INFO  22:02:50,772 - #21 }
INFO  22:02:50,772 - #21 }
INFO  22:02:50,773 - =====================SINTAKSNO_STABLO=========================
INFO  22:02:50,775 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:02:50,775 - ==============================================================
INFO  22:02:50,787 - Pocetak obrade programa Program na liniji 1
INFO  22:02:50,787 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:02:50,788 - Deklarisana konstanta c na liniji 2
INFO  22:02:50,789 - Deklarisana konstanta d na liniji 2
INFO  22:02:50,789 - Deklarisana konstanta g na liniji 2
INFO  22:02:50,789 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:02:50,789 - Deklarisana promenljiva e na liniji 3
INFO  22:02:50,789 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:02:50,789 - Deklarisan niz z na liniji 3
INFO  22:02:50,790 - Pocetak obrade metode main na liniji 5
INFO  22:02:50,791 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:02:50,791 - Zavrsetak obrade programa Program na liniji 1
INFO  22:02:50,791 - ======================TABELA_SIMBOLA==========================
INFO  22:02:50,791 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:02:50,794 - ==============================================================
INFO  22:02:50,794 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:02:50,794 - ==============================================================
INFO  22:02:50,794 - ======================GENERISANJE_KODA========================
INFO  22:02:50,800 - Generisanje koda uspesno zavrseno!
INFO  22:02:50,800 - Generisanje izlaznog fajla test\program.obj
INFO  22:02:50,800 - ==============================================================
INFO  22:04:01,283 - Obrada ulaznog fajla test\program.mj
INFO  22:04:01,360 - #2 program
INFO  22:04:01,360 - #8 Program
INFO  22:04:01,360 - #5 const
INFO  22:04:01,361 - #8 int
INFO  22:04:01,362 - #8 c
INFO  22:04:01,363 - #24 =
INFO  22:04:01,363 - #9 10
INFO  22:04:01,363 - #28 ,
INFO  22:04:01,364 - #8 d
INFO  22:04:01,366 - #24 =
INFO  22:04:01,366 - #9 99
INFO  22:04:01,366 - #28 ,
INFO  22:04:01,366 - #8 g
INFO  22:04:01,366 - #24 =
INFO  22:04:01,366 - #9 2
INFO  22:04:01,367 - #27 ;
INFO  22:04:01,367 - #8 int
INFO  22:04:01,368 - #8 e
INFO  22:04:01,368 - #27 ;
INFO  22:04:01,368 - #8 char
INFO  22:04:01,370 - #8 z
INFO  22:04:01,370 - #22 [
INFO  22:04:01,370 - #23 ]
INFO  22:04:01,370 - #27 ;
INFO  22:04:01,370 - #20 {
INFO  22:04:01,370 - #6 void
INFO  22:04:01,370 - #8 main
INFO  22:04:01,371 - #29 (
INFO  22:04:01,371 - #30 )
INFO  22:04:01,372 - #20 {
INFO  22:04:01,372 - #31 if
INFO  22:04:01,372 - #29 (
INFO  22:04:01,372 - #12 false
INFO  22:04:01,372 - #30 )
INFO  22:04:01,373 - #20 {
INFO  22:04:01,373 - #3 print
INFO  22:04:01,374 - #29 (
INFO  22:04:01,374 - #9 32
INFO  22:04:01,374 - #30 )
INFO  22:04:01,374 - #27 ;
INFO  22:04:01,374 - #3 print
INFO  22:04:01,375 - #29 (
INFO  22:04:01,375 - #9 64
INFO  22:04:01,375 - #30 )
INFO  22:04:01,375 - #27 ;
INFO  22:04:01,375 - #21 }
INFO  22:04:01,375 - #3 print
INFO  22:04:01,376 - #29 (
INFO  22:04:01,376 - #9 65
INFO  22:04:01,376 - #30 )
INFO  22:04:01,376 - #27 ;
INFO  22:04:01,376 - #3 print
INFO  22:04:01,377 - #29 (
INFO  22:04:01,377 - #9 77
INFO  22:04:01,377 - #30 )
INFO  22:04:01,377 - #27 ;
INFO  22:04:01,377 - #21 }
INFO  22:04:01,378 - #21 }
INFO  22:04:01,378 - =====================SINTAKSNO_STABLO=========================
INFO  22:04:01,382 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:04:01,382 - ==============================================================
INFO  22:04:01,397 - Pocetak obrade programa Program na liniji 1
INFO  22:04:01,397 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:04:01,398 - Deklarisana konstanta c na liniji 2
INFO  22:04:01,398 - Deklarisana konstanta d na liniji 2
INFO  22:04:01,398 - Deklarisana konstanta g na liniji 2
INFO  22:04:01,399 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:04:01,399 - Deklarisana promenljiva e na liniji 3
INFO  22:04:01,399 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:04:01,399 - Deklarisan niz z na liniji 3
INFO  22:04:01,400 - Pocetak obrade metode main na liniji 5
INFO  22:04:01,400 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:04:01,400 - Zavrsetak obrade programa Program na liniji 1
INFO  22:04:01,400 - ======================TABELA_SIMBOLA==========================
INFO  22:04:01,400 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:04:01,402 - ==============================================================
INFO  22:04:01,402 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:04:01,402 - ==============================================================
INFO  22:04:01,402 - ======================GENERISANJE_KODA========================
INFO  22:04:01,408 - Generisanje koda uspesno zavrseno!
INFO  22:04:01,408 - Generisanje izlaznog fajla test\program.obj
INFO  22:04:01,408 - ==============================================================
INFO  22:04:49,751 - Obrada ulaznog fajla test\program.mj
INFO  22:04:49,837 - #2 program
INFO  22:04:49,838 - #8 Program
INFO  22:04:49,838 - #5 const
INFO  22:04:49,839 - #8 int
INFO  22:04:49,839 - #8 c
INFO  22:04:49,840 - #24 =
INFO  22:04:49,840 - #9 10
INFO  22:04:49,840 - #28 ,
INFO  22:04:49,842 - #8 d
INFO  22:04:49,842 - #24 =
INFO  22:04:49,842 - #9 99
INFO  22:04:49,842 - #28 ,
INFO  22:04:49,842 - #8 g
INFO  22:04:49,842 - #24 =
INFO  22:04:49,842 - #9 2
INFO  22:04:49,842 - #27 ;
INFO  22:04:49,843 - #8 int
INFO  22:04:49,844 - #8 e
INFO  22:04:49,844 - #27 ;
INFO  22:04:49,844 - #8 char
INFO  22:04:49,846 - #8 z
INFO  22:04:49,846 - #22 [
INFO  22:04:49,846 - #23 ]
INFO  22:04:49,846 - #27 ;
INFO  22:04:49,847 - #20 {
INFO  22:04:49,847 - #6 void
INFO  22:04:49,847 - #8 main
INFO  22:04:49,847 - #29 (
INFO  22:04:49,848 - #30 )
INFO  22:04:49,848 - #20 {
INFO  22:04:49,848 - #31 if
INFO  22:04:49,848 - #29 (
INFO  22:04:49,848 - #12 false
INFO  22:04:49,848 - #30 )
INFO  22:04:49,850 - #20 {
INFO  22:04:49,850 - #3 print
INFO  22:04:49,850 - #29 (
INFO  22:04:49,850 - #9 32
INFO  22:04:49,850 - #30 )
INFO  22:04:49,850 - #27 ;
INFO  22:04:49,850 - #3 print
INFO  22:04:49,851 - #29 (
INFO  22:04:49,851 - #9 64
INFO  22:04:49,851 - #30 )
INFO  22:04:49,851 - #27 ;
INFO  22:04:49,851 - #21 }
INFO  22:04:49,851 - #3 print
INFO  22:04:49,852 - #29 (
INFO  22:04:49,852 - #9 65
INFO  22:04:49,852 - #30 )
INFO  22:04:49,852 - #27 ;
INFO  22:04:49,852 - #3 print
INFO  22:04:49,852 - #29 (
INFO  22:04:49,852 - #9 77
INFO  22:04:49,852 - #30 )
INFO  22:04:49,853 - #27 ;
INFO  22:04:49,853 - #21 }
INFO  22:04:49,853 - #21 }
INFO  22:04:49,854 - =====================SINTAKSNO_STABLO=========================
INFO  22:04:49,855 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:04:49,856 - ==============================================================
INFO  22:04:49,869 - Pocetak obrade programa Program na liniji 1
INFO  22:04:49,869 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:04:49,870 - Deklarisana konstanta c na liniji 2
INFO  22:04:49,870 - Deklarisana konstanta d na liniji 2
INFO  22:04:49,870 - Deklarisana konstanta g na liniji 2
INFO  22:04:49,870 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:04:49,870 - Deklarisana promenljiva e na liniji 3
INFO  22:04:49,870 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:04:49,870 - Deklarisan niz z na liniji 3
INFO  22:04:49,871 - Pocetak obrade metode main na liniji 5
INFO  22:04:49,871 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:04:49,871 - Zavrsetak obrade programa Program na liniji 1
INFO  22:04:49,871 - ======================TABELA_SIMBOLA==========================
INFO  22:04:49,872 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:04:49,873 - ==============================================================
INFO  22:04:49,873 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:04:49,873 - ==============================================================
INFO  22:04:49,873 - ======================GENERISANJE_KODA========================
INFO  22:04:49,879 - Generisanje koda uspesno zavrseno!
INFO  22:04:49,880 - Generisanje izlaznog fajla test\program.obj
INFO  22:04:49,880 - ==============================================================
INFO  22:05:09,545 - Obrada ulaznog fajla test\program.mj
INFO  22:05:09,622 - #2 program
INFO  22:05:09,622 - #8 Program
INFO  22:05:09,622 - #5 const
INFO  22:05:09,623 - #8 int
INFO  22:05:09,623 - #8 c
INFO  22:05:09,625 - #24 =
INFO  22:05:09,625 - #9 10
INFO  22:05:09,625 - #28 ,
INFO  22:05:09,626 - #8 d
INFO  22:05:09,627 - #24 =
INFO  22:05:09,627 - #9 99
INFO  22:05:09,627 - #28 ,
INFO  22:05:09,627 - #8 g
INFO  22:05:09,627 - #24 =
INFO  22:05:09,627 - #9 2
INFO  22:05:09,627 - #27 ;
INFO  22:05:09,628 - #8 int
INFO  22:05:09,629 - #8 e
INFO  22:05:09,629 - #27 ;
INFO  22:05:09,629 - #8 char
INFO  22:05:09,631 - #8 z
INFO  22:05:09,631 - #22 [
INFO  22:05:09,631 - #23 ]
INFO  22:05:09,631 - #27 ;
INFO  22:05:09,631 - #20 {
INFO  22:05:09,631 - #6 void
INFO  22:05:09,631 - #8 main
INFO  22:05:09,631 - #29 (
INFO  22:05:09,632 - #30 )
INFO  22:05:09,632 - #20 {
INFO  22:05:09,633 - #31 if
INFO  22:05:09,633 - #29 (
INFO  22:05:09,633 - #12 false
INFO  22:05:09,633 - #30 )
INFO  22:05:09,634 - #20 {
INFO  22:05:09,634 - #3 print
INFO  22:05:09,634 - #29 (
INFO  22:05:09,634 - #9 32
INFO  22:05:09,634 - #30 )
INFO  22:05:09,635 - #27 ;
INFO  22:05:09,635 - #3 print
INFO  22:05:09,635 - #29 (
INFO  22:05:09,635 - #9 64
INFO  22:05:09,635 - #30 )
INFO  22:05:09,635 - #27 ;
INFO  22:05:09,635 - #21 }
INFO  22:05:09,636 - #3 print
INFO  22:05:09,636 - #29 (
INFO  22:05:09,636 - #9 65
INFO  22:05:09,636 - #30 )
INFO  22:05:09,636 - #27 ;
INFO  22:05:09,636 - #3 print
INFO  22:05:09,636 - #29 (
INFO  22:05:09,637 - #9 77
INFO  22:05:09,637 - #30 )
INFO  22:05:09,637 - #27 ;
INFO  22:05:09,637 - #21 }
INFO  22:05:09,637 - #21 }
INFO  22:05:09,638 - =====================SINTAKSNO_STABLO=========================
INFO  22:05:09,639 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:05:09,640 - ==============================================================
INFO  22:05:09,652 - Pocetak obrade programa Program na liniji 1
INFO  22:05:09,653 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:05:09,653 - Deklarisana konstanta c na liniji 2
INFO  22:05:09,653 - Deklarisana konstanta d na liniji 2
INFO  22:05:09,653 - Deklarisana konstanta g na liniji 2
INFO  22:05:09,654 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:05:09,654 - Deklarisana promenljiva e na liniji 3
INFO  22:05:09,654 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:05:09,654 - Deklarisan niz z na liniji 3
INFO  22:05:09,655 - Pocetak obrade metode main na liniji 5
INFO  22:05:09,655 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:05:09,655 - Zavrsetak obrade programa Program na liniji 1
INFO  22:05:09,655 - ======================TABELA_SIMBOLA==========================
INFO  22:05:09,656 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:05:09,658 - ==============================================================
INFO  22:05:09,658 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:05:09,658 - ==============================================================
INFO  22:05:09,659 - ======================GENERISANJE_KODA========================
INFO  22:05:09,663 - Generisanje koda uspesno zavrseno!
INFO  22:05:09,664 - Generisanje izlaznog fajla test\program.obj
INFO  22:05:09,664 - ==============================================================
INFO  22:05:44,077 - Obrada ulaznog fajla test\program.mj
INFO  22:05:44,179 - #2 program
INFO  22:05:44,179 - #8 Program
INFO  22:05:44,179 - #5 const
INFO  22:05:44,180 - #8 int
INFO  22:05:44,180 - #8 c
INFO  22:05:44,182 - #24 =
INFO  22:05:44,182 - #9 10
INFO  22:05:44,182 - #28 ,
INFO  22:05:44,183 - #8 d
INFO  22:05:44,184 - #24 =
INFO  22:05:44,184 - #9 99
INFO  22:05:44,184 - #28 ,
INFO  22:05:44,184 - #8 g
INFO  22:05:44,184 - #24 =
INFO  22:05:44,185 - #9 2
INFO  22:05:44,185 - #27 ;
INFO  22:05:44,185 - #8 int
INFO  22:05:44,186 - #8 e
INFO  22:05:44,186 - #27 ;
INFO  22:05:44,187 - #8 char
INFO  22:05:44,188 - #8 z
INFO  22:05:44,188 - #22 [
INFO  22:05:44,188 - #23 ]
INFO  22:05:44,189 - #27 ;
INFO  22:05:44,189 - #20 {
INFO  22:05:44,189 - #6 void
INFO  22:05:44,189 - #8 main
INFO  22:05:44,189 - #29 (
INFO  22:05:44,190 - #30 )
INFO  22:05:44,191 - #20 {
INFO  22:05:44,191 - #31 if
INFO  22:05:44,191 - #29 (
INFO  22:05:44,191 - #12 false
INFO  22:05:44,191 - #30 )
INFO  22:05:44,192 - #20 {
INFO  22:05:44,192 - #3 print
INFO  22:05:44,193 - #29 (
INFO  22:05:44,193 - #9 32
INFO  22:05:44,193 - #30 )
INFO  22:05:44,193 - #27 ;
INFO  22:05:44,193 - #3 print
INFO  22:05:44,193 - #29 (
INFO  22:05:44,194 - #9 64
INFO  22:05:44,194 - #30 )
INFO  22:05:44,194 - #27 ;
INFO  22:05:44,194 - #21 }
INFO  22:05:44,195 - #3 print
INFO  22:05:44,196 - #29 (
INFO  22:05:44,196 - #9 65
INFO  22:05:44,196 - #30 )
INFO  22:05:44,196 - #27 ;
INFO  22:05:44,196 - #3 print
INFO  22:05:44,196 - #29 (
INFO  22:05:44,196 - #9 77
INFO  22:05:44,196 - #30 )
INFO  22:05:44,197 - #27 ;
INFO  22:05:44,197 - #21 }
INFO  22:05:44,197 - #21 }
INFO  22:05:44,199 - =====================SINTAKSNO_STABLO=========================
INFO  22:05:44,201 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:05:44,201 - ==============================================================
INFO  22:05:44,217 - Pocetak obrade programa Program na liniji 1
INFO  22:05:44,218 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:05:44,219 - Deklarisana konstanta c na liniji 2
INFO  22:05:44,219 - Deklarisana konstanta d na liniji 2
INFO  22:05:44,219 - Deklarisana konstanta g na liniji 2
INFO  22:05:44,219 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:05:44,219 - Deklarisana promenljiva e na liniji 3
INFO  22:05:44,220 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:05:44,220 - Deklarisan niz z na liniji 3
INFO  22:05:44,220 - Pocetak obrade metode main na liniji 5
INFO  22:05:44,221 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:05:44,221 - Zavrsetak obrade programa Program na liniji 1
INFO  22:05:44,221 - ======================TABELA_SIMBOLA==========================
INFO  22:05:44,222 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:05:44,223 - ==============================================================
INFO  22:05:44,223 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:05:44,224 - ==============================================================
INFO  22:05:44,224 - ======================GENERISANJE_KODA========================
INFO  22:05:44,230 - Generisanje koda uspesno zavrseno!
INFO  22:05:44,231 - Generisanje izlaznog fajla test\program.obj
INFO  22:05:44,231 - ==============================================================
INFO  22:14:55,180 - Obrada ulaznog fajla test\program.mj
INFO  22:14:55,275 - #2 program
INFO  22:14:55,275 - #8 Program
INFO  22:14:55,276 - #5 const
INFO  22:14:55,276 - #8 int
INFO  22:14:55,276 - #8 c
INFO  22:14:55,277 - #24 =
INFO  22:14:55,277 - #9 10
INFO  22:14:55,277 - #28 ,
INFO  22:14:55,278 - #8 d
INFO  22:14:55,278 - #24 =
INFO  22:14:55,278 - #9 99
INFO  22:14:55,278 - #28 ,
INFO  22:14:55,279 - #8 g
INFO  22:14:55,279 - #24 =
INFO  22:14:55,279 - #9 2
INFO  22:14:55,279 - #27 ;
INFO  22:14:55,279 - #8 int
INFO  22:14:55,280 - #8 e
INFO  22:14:55,280 - #27 ;
INFO  22:14:55,280 - #8 char
INFO  22:14:55,281 - #8 z
INFO  22:14:55,281 - #22 [
INFO  22:14:55,281 - #23 ]
INFO  22:14:55,281 - #27 ;
INFO  22:14:55,281 - #20 {
INFO  22:14:55,283 - #6 void
INFO  22:14:55,283 - #8 main
INFO  22:14:55,283 - #29 (
INFO  22:14:55,284 - #30 )
INFO  22:14:55,285 - #20 {
INFO  22:14:55,285 - #31 if
INFO  22:14:55,285 - #29 (
INFO  22:14:55,285 - #12 false
INFO  22:14:55,285 - #30 )
INFO  22:14:55,286 - #20 {
INFO  22:14:55,286 - #3 print
INFO  22:14:55,286 - #29 (
INFO  22:14:55,286 - #9 32
INFO  22:14:55,286 - #30 )
INFO  22:14:55,287 - #27 ;
INFO  22:14:55,287 - #3 print
INFO  22:14:55,287 - #29 (
INFO  22:14:55,287 - #9 64
INFO  22:14:55,287 - #30 )
INFO  22:14:55,287 - #27 ;
INFO  22:14:55,287 - #21 }
INFO  22:14:55,288 - #3 print
INFO  22:14:55,288 - #29 (
INFO  22:14:55,288 - #9 65
INFO  22:14:55,288 - #30 )
INFO  22:14:55,288 - #27 ;
INFO  22:14:55,288 - #3 print
INFO  22:14:55,288 - #29 (
INFO  22:14:55,288 - #9 77
INFO  22:14:55,289 - #30 )
INFO  22:14:55,289 - #27 ;
INFO  22:14:55,289 - #21 }
INFO  22:14:55,289 - #21 }
INFO  22:14:55,289 - =====================SINTAKSNO_STABLO=========================
INFO  22:14:55,291 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:14:55,295 - ==============================================================
INFO  22:14:55,308 - Pocetak obrade programa Program na liniji 1
INFO  22:14:55,309 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:14:55,309 - Deklarisana konstanta c na liniji 2
INFO  22:14:55,310 - Deklarisana konstanta d na liniji 2
INFO  22:14:55,310 - Deklarisana konstanta g na liniji 2
INFO  22:14:55,310 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:14:55,310 - Deklarisana promenljiva e na liniji 3
INFO  22:14:55,310 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:14:55,310 - Deklarisan niz z na liniji 3
INFO  22:14:55,311 - Pocetak obrade metode main na liniji 5
INFO  22:14:55,311 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:14:55,311 - Zavrsetak obrade programa Program na liniji 1
INFO  22:14:55,311 - ======================TABELA_SIMBOLA==========================
INFO  22:14:55,312 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:14:55,313 - ==============================================================
INFO  22:14:55,313 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:14:55,313 - ==============================================================
INFO  22:14:55,313 - ======================GENERISANJE_KODA========================
INFO  22:14:55,319 - Generisanje koda uspesno zavrseno!
INFO  22:14:55,319 - Generisanje izlaznog fajla test\program.obj
INFO  22:14:55,319 - ==============================================================
INFO  22:27:30,176 - Obrada ulaznog fajla test\program.mj
INFO  22:27:30,241 - #2 program
INFO  22:27:30,241 - #8 Program
INFO  22:27:30,241 - #5 const
INFO  22:27:30,242 - #8 int
INFO  22:27:30,242 - #8 c
INFO  22:27:30,243 - #24 =
INFO  22:27:30,243 - #9 10
INFO  22:27:30,243 - #28 ,
INFO  22:27:30,244 - #8 d
INFO  22:27:30,244 - #24 =
INFO  22:27:30,244 - #9 99
INFO  22:27:30,244 - #28 ,
INFO  22:27:30,244 - #8 g
INFO  22:27:30,244 - #24 =
INFO  22:27:30,245 - #9 2
INFO  22:27:30,245 - #27 ;
INFO  22:27:30,245 - #8 int
INFO  22:27:30,246 - #8 e
INFO  22:27:30,246 - #27 ;
INFO  22:27:30,246 - #8 char
INFO  22:27:30,247 - #8 z
INFO  22:27:30,247 - #22 [
INFO  22:27:30,247 - #23 ]
INFO  22:27:30,247 - #27 ;
INFO  22:27:30,248 - #20 {
INFO  22:27:30,248 - #6 void
INFO  22:27:30,248 - #8 main
INFO  22:27:30,248 - #29 (
INFO  22:27:30,248 - #30 )
INFO  22:27:30,249 - #20 {
INFO  22:27:30,249 - #31 if
INFO  22:27:30,249 - #29 (
INFO  22:27:30,249 - #12 false
INFO  22:27:30,249 - #30 )
INFO  22:27:30,250 - #20 {
INFO  22:27:30,250 - #3 print
INFO  22:27:30,250 - #29 (
INFO  22:27:30,250 - #9 32
INFO  22:27:30,250 - #30 )
INFO  22:27:30,251 - #27 ;
INFO  22:27:30,251 - #3 print
INFO  22:27:30,251 - #29 (
INFO  22:27:30,251 - #9 64
INFO  22:27:30,251 - #30 )
INFO  22:27:30,251 - #27 ;
INFO  22:27:30,251 - #21 }
INFO  22:27:30,252 - #3 print
INFO  22:27:30,252 - #29 (
INFO  22:27:30,252 - #9 65
INFO  22:27:30,252 - #30 )
INFO  22:27:30,252 - #27 ;
INFO  22:27:30,253 - #3 print
INFO  22:27:30,253 - #29 (
INFO  22:27:30,253 - #9 77
INFO  22:27:30,253 - #30 )
INFO  22:27:30,253 - #27 ;
INFO  22:27:30,253 - #21 }
INFO  22:27:30,253 - #21 }
INFO  22:27:30,254 - =====================SINTAKSNO_STABLO=========================
INFO  22:27:30,255 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:27:30,263 - ==============================================================
INFO  22:27:30,271 - Pocetak obrade programa Program na liniji 1
INFO  22:27:30,271 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:27:30,272 - Deklarisana konstanta c na liniji 2
INFO  22:27:30,272 - Deklarisana konstanta d na liniji 2
INFO  22:27:30,272 - Deklarisana konstanta g na liniji 2
INFO  22:27:30,272 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:27:30,272 - Deklarisana promenljiva e na liniji 3
INFO  22:27:30,272 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:27:30,273 - Deklarisan niz z na liniji 3
INFO  22:27:30,273 - Pocetak obrade metode main na liniji 5
INFO  22:27:30,274 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:27:30,274 - Zavrsetak obrade programa Program na liniji 1
INFO  22:27:30,277 - ======================TABELA_SIMBOLA==========================
INFO  22:27:30,280 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:27:30,283 - ==============================================================
INFO  22:27:30,283 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:27:30,283 - ==============================================================
INFO  22:27:30,283 - ======================GENERISANJE_KODA========================
INFO  22:27:30,288 - Generisanje koda uspesno zavrseno!
INFO  22:27:30,289 - Generisanje izlaznog fajla test\program.obj
INFO  22:27:30,289 - ==============================================================
INFO  22:28:02,032 - Obrada ulaznog fajla test\program.mj
INFO  22:28:02,126 - #2 program
INFO  22:28:02,126 - #8 Program
INFO  22:28:02,127 - #5 const
INFO  22:28:02,128 - #8 int
INFO  22:28:02,128 - #8 c
INFO  22:28:02,128 - #24 =
INFO  22:28:02,129 - #9 10
INFO  22:28:02,129 - #28 ,
INFO  22:28:02,130 - #8 d
INFO  22:28:02,131 - #24 =
INFO  22:28:02,131 - #9 99
INFO  22:28:02,131 - #28 ,
INFO  22:28:02,131 - #8 g
INFO  22:28:02,131 - #24 =
INFO  22:28:02,131 - #9 2
INFO  22:28:02,131 - #27 ;
INFO  22:28:02,132 - #8 int
INFO  22:28:02,133 - #8 e
INFO  22:28:02,133 - #27 ;
INFO  22:28:02,134 - #8 char
INFO  22:28:02,135 - #8 z
INFO  22:28:02,135 - #22 [
INFO  22:28:02,135 - #23 ]
INFO  22:28:02,135 - #27 ;
INFO  22:28:02,136 - #20 {
INFO  22:28:02,136 - #6 void
INFO  22:28:02,136 - #8 main
INFO  22:28:02,136 - #29 (
INFO  22:28:02,137 - #30 )
INFO  22:28:02,137 - #20 {
INFO  22:28:02,137 - #31 if
INFO  22:28:02,137 - #29 (
INFO  22:28:02,138 - #12 false
INFO  22:28:02,138 - #30 )
INFO  22:28:02,139 - #20 {
INFO  22:28:02,139 - #3 print
INFO  22:28:02,139 - #29 (
INFO  22:28:02,139 - #9 32
INFO  22:28:02,139 - #30 )
INFO  22:28:02,140 - #27 ;
INFO  22:28:02,140 - #3 print
INFO  22:28:02,140 - #29 (
INFO  22:28:02,140 - #9 64
INFO  22:28:02,140 - #30 )
INFO  22:28:02,140 - #27 ;
INFO  22:28:02,141 - #21 }
INFO  22:28:02,141 - #3 print
INFO  22:28:02,141 - #29 (
INFO  22:28:02,141 - #9 65
INFO  22:28:02,142 - #30 )
INFO  22:28:02,142 - #27 ;
INFO  22:28:02,142 - #3 print
INFO  22:28:02,142 - #29 (
INFO  22:28:02,142 - #9 77
INFO  22:28:02,142 - #30 )
INFO  22:28:02,142 - #27 ;
INFO  22:28:02,142 - #21 }
INFO  22:28:02,142 - #21 }
INFO  22:28:02,143 - =====================SINTAKSNO_STABLO=========================
INFO  22:28:02,145 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:28:02,146 - ==============================================================
INFO  22:28:02,160 - Pocetak obrade programa Program na liniji 1
INFO  22:28:02,161 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:28:02,162 - Deklarisana konstanta c na liniji 2
INFO  22:28:02,162 - Deklarisana konstanta d na liniji 2
INFO  22:28:02,162 - Deklarisana konstanta g na liniji 2
INFO  22:28:02,162 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:28:02,162 - Deklarisana promenljiva e na liniji 3
INFO  22:28:02,162 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:28:02,162 - Deklarisan niz z na liniji 3
INFO  22:28:02,163 - Pocetak obrade metode main na liniji 5
INFO  22:28:02,163 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:28:02,163 - Zavrsetak obrade programa Program na liniji 1
INFO  22:28:02,163 - ======================TABELA_SIMBOLA==========================
INFO  22:28:02,164 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:28:02,165 - ==============================================================
INFO  22:28:02,166 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:28:02,166 - ==============================================================
INFO  22:28:02,166 - ======================GENERISANJE_KODA========================
INFO  22:29:15,238 - Obrada ulaznog fajla test\program.mj
INFO  22:29:15,514 - #2 program
INFO  22:29:15,515 - #8 Program
INFO  22:29:15,515 - #5 const
INFO  22:29:15,516 - #8 int
INFO  22:29:15,518 - #8 c
INFO  22:29:15,519 - #24 =
INFO  22:29:15,519 - #9 10
INFO  22:29:15,520 - #28 ,
INFO  22:29:15,521 - #8 d
INFO  22:29:15,525 - #24 =
INFO  22:29:15,526 - #9 99
INFO  22:29:15,526 - #28 ,
INFO  22:29:15,526 - #8 g
INFO  22:29:15,526 - #24 =
INFO  22:29:15,552 - #9 2
INFO  22:29:15,553 - #27 ;
INFO  22:29:15,553 - #8 int
INFO  22:29:15,555 - #8 e
INFO  22:29:15,555 - #27 ;
INFO  22:29:15,555 - #8 char
INFO  22:29:15,557 - #8 z
INFO  22:29:15,558 - #22 [
INFO  22:29:15,558 - #23 ]
INFO  22:29:15,558 - #27 ;
INFO  22:29:15,558 - #20 {
INFO  22:29:15,559 - #6 void
INFO  22:29:15,559 - #8 main
INFO  22:29:15,559 - #29 (
INFO  22:29:15,560 - #30 )
INFO  22:29:15,560 - #20 {
INFO  22:29:15,560 - #31 if
INFO  22:29:15,560 - #29 (
INFO  22:29:15,561 - #12 false
INFO  22:29:15,561 - #30 )
INFO  22:29:15,562 - #20 {
INFO  22:29:15,563 - #3 print
INFO  22:29:15,563 - #29 (
INFO  22:29:15,563 - #9 32
INFO  22:29:15,563 - #30 )
INFO  22:29:15,563 - #27 ;
INFO  22:29:15,563 - #3 print
INFO  22:29:15,564 - #29 (
INFO  22:29:15,565 - #9 64
INFO  22:29:15,565 - #30 )
INFO  22:29:15,565 - #27 ;
INFO  22:29:15,565 - #21 }
INFO  22:29:15,566 - #3 print
INFO  22:29:15,566 - #29 (
INFO  22:29:15,567 - #9 65
INFO  22:29:15,567 - #30 )
INFO  22:29:15,568 - #27 ;
INFO  22:29:15,568 - #3 print
INFO  22:29:15,571 - #29 (
INFO  22:29:15,571 - #9 77
INFO  22:29:15,572 - #30 )
INFO  22:29:15,572 - #27 ;
INFO  22:29:15,572 - #21 }
INFO  22:29:15,572 - #21 }
INFO  22:29:15,573 - =====================SINTAKSNO_STABLO=========================
INFO  22:29:15,574 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:29:15,580 - ==============================================================
INFO  22:29:15,597 - Pocetak obrade programa Program na liniji 1
INFO  22:29:15,597 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:29:15,598 - Deklarisana konstanta c na liniji 2
INFO  22:29:15,599 - Deklarisana konstanta d na liniji 2
INFO  22:29:15,599 - Deklarisana konstanta g na liniji 2
INFO  22:29:15,599 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:29:15,599 - Deklarisana promenljiva e na liniji 3
INFO  22:29:15,599 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:29:15,599 - Deklarisan niz z na liniji 3
INFO  22:29:15,600 - Pocetak obrade metode main na liniji 5
INFO  22:29:15,601 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:29:15,601 - Zavrsetak obrade programa Program na liniji 1
INFO  22:29:15,601 - ======================TABELA_SIMBOLA==========================
INFO  22:29:15,602 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:29:15,604 - ==============================================================
INFO  22:29:15,605 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:29:15,605 - ==============================================================
INFO  22:29:15,605 - ======================GENERISANJE_KODA========================
INFO  22:29:15,610 - Generisanje koda uspesno zavrseno!
INFO  22:29:15,611 - Generisanje izlaznog fajla test\program.obj
INFO  22:29:15,611 - ==============================================================
INFO  22:29:22,398 - Obrada ulaznog fajla test\program.mj
INFO  22:29:22,483 - #2 program
INFO  22:29:22,483 - #8 Program
INFO  22:29:22,483 - #5 const
INFO  22:29:22,484 - #8 int
INFO  22:29:22,484 - #8 c
INFO  22:29:22,484 - #24 =
INFO  22:29:22,485 - #9 10
INFO  22:29:22,485 - #28 ,
INFO  22:29:22,486 - #8 d
INFO  22:29:22,486 - #24 =
INFO  22:29:22,486 - #9 99
INFO  22:29:22,486 - #28 ,
INFO  22:29:22,486 - #8 g
INFO  22:29:22,486 - #24 =
INFO  22:29:22,486 - #9 2
INFO  22:29:22,486 - #27 ;
INFO  22:29:22,486 - #8 int
INFO  22:29:22,487 - #8 e
INFO  22:29:22,488 - #27 ;
INFO  22:29:22,488 - #8 char
INFO  22:29:22,489 - #8 z
INFO  22:29:22,490 - #22 [
INFO  22:29:22,490 - #23 ]
INFO  22:29:22,490 - #27 ;
INFO  22:29:22,490 - #20 {
INFO  22:29:22,490 - #6 void
INFO  22:29:22,490 - #8 main
INFO  22:29:22,490 - #29 (
INFO  22:29:22,492 - #30 )
INFO  22:29:22,492 - #20 {
INFO  22:29:22,492 - #31 if
INFO  22:29:22,492 - #29 (
INFO  22:29:22,492 - #12 false
INFO  22:29:22,492 - #30 )
INFO  22:29:22,493 - #20 {
INFO  22:29:22,494 - #3 print
INFO  22:29:22,494 - #29 (
INFO  22:29:22,494 - #9 32
INFO  22:29:22,494 - #30 )
INFO  22:29:22,494 - #27 ;
INFO  22:29:22,494 - #3 print
INFO  22:29:22,495 - #29 (
INFO  22:29:22,495 - #9 64
INFO  22:29:22,495 - #30 )
INFO  22:29:22,495 - #27 ;
INFO  22:29:22,495 - #21 }
INFO  22:29:22,496 - #3 print
INFO  22:29:22,496 - #29 (
INFO  22:29:22,496 - #9 65
INFO  22:29:22,496 - #30 )
INFO  22:29:22,497 - #27 ;
INFO  22:29:22,497 - #3 print
INFO  22:29:22,497 - #29 (
INFO  22:29:22,497 - #9 77
INFO  22:29:22,497 - #30 )
INFO  22:29:22,497 - #27 ;
INFO  22:29:22,497 - #21 }
INFO  22:29:22,498 - #21 }
INFO  22:29:22,499 - =====================SINTAKSNO_STABLO=========================
INFO  22:29:22,500 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:29:22,501 - ==============================================================
INFO  22:29:22,513 - Pocetak obrade programa Program na liniji 1
INFO  22:29:22,514 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:29:22,515 - Deklarisana konstanta c na liniji 2
INFO  22:29:22,515 - Deklarisana konstanta d na liniji 2
INFO  22:29:22,515 - Deklarisana konstanta g na liniji 2
INFO  22:29:22,515 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:29:22,515 - Deklarisana promenljiva e na liniji 3
INFO  22:29:22,515 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:29:22,515 - Deklarisan niz z na liniji 3
INFO  22:29:22,519 - Pocetak obrade metode main na liniji 5
INFO  22:29:22,520 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:29:22,520 - Zavrsetak obrade programa Program na liniji 1
INFO  22:29:22,520 - ======================TABELA_SIMBOLA==========================
INFO  22:29:22,521 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:29:22,523 - ==============================================================
INFO  22:29:22,523 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:29:22,523 - ==============================================================
INFO  22:29:22,523 - ======================GENERISANJE_KODA========================
INFO  22:29:22,530 - Generisanje koda uspesno zavrseno!
INFO  22:29:22,530 - Generisanje izlaznog fajla test\program.obj
INFO  22:29:22,531 - ==============================================================
INFO  22:29:28,858 - Obrada ulaznog fajla test\program.mj
INFO  22:29:28,958 - #2 program
INFO  22:29:28,958 - #8 Program
INFO  22:29:28,958 - #5 const
INFO  22:29:28,959 - #8 int
INFO  22:29:28,960 - #8 c
INFO  22:29:28,961 - #24 =
INFO  22:29:28,961 - #9 10
INFO  22:29:28,961 - #28 ,
INFO  22:29:28,962 - #8 d
INFO  22:29:28,962 - #24 =
INFO  22:29:28,963 - #9 99
INFO  22:29:28,963 - #28 ,
INFO  22:29:28,963 - #8 g
INFO  22:29:28,963 - #24 =
INFO  22:29:28,963 - #9 2
INFO  22:29:28,964 - #27 ;
INFO  22:29:28,964 - #8 int
INFO  22:29:28,965 - #8 e
INFO  22:29:28,965 - #27 ;
INFO  22:29:28,966 - #8 char
INFO  22:29:28,967 - #8 z
INFO  22:29:28,967 - #22 [
INFO  22:29:28,967 - #23 ]
INFO  22:29:28,967 - #27 ;
INFO  22:29:28,968 - #20 {
INFO  22:29:28,968 - #6 void
INFO  22:29:28,968 - #8 main
INFO  22:29:28,968 - #29 (
INFO  22:29:28,969 - #30 )
INFO  22:29:28,969 - #20 {
INFO  22:29:28,969 - #31 if
INFO  22:29:28,970 - #29 (
INFO  22:29:28,970 - #12 false
INFO  22:29:28,970 - #30 )
INFO  22:29:28,971 - #20 {
INFO  22:29:28,971 - #3 print
INFO  22:29:28,971 - #29 (
INFO  22:29:28,971 - #9 32
INFO  22:29:28,971 - #30 )
INFO  22:29:28,972 - #27 ;
INFO  22:29:28,972 - #3 print
INFO  22:29:28,972 - #29 (
INFO  22:29:28,973 - #9 64
INFO  22:29:28,973 - #30 )
INFO  22:29:28,973 - #27 ;
INFO  22:29:28,973 - #21 }
INFO  22:29:28,973 - #3 print
INFO  22:29:28,973 - #29 (
INFO  22:29:28,974 - #9 65
INFO  22:29:28,974 - #30 )
INFO  22:29:28,974 - #27 ;
INFO  22:29:28,974 - #3 print
INFO  22:29:28,974 - #29 (
INFO  22:29:28,974 - #9 77
INFO  22:29:28,974 - #30 )
INFO  22:29:28,974 - #27 ;
INFO  22:29:28,974 - #21 }
INFO  22:29:28,975 - #21 }
INFO  22:29:28,975 - =====================SINTAKSNO_STABLO=========================
INFO  22:29:28,977 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:29:28,979 - ==============================================================
INFO  22:29:28,992 - Pocetak obrade programa Program na liniji 1
INFO  22:29:28,992 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:29:28,993 - Deklarisana konstanta c na liniji 2
INFO  22:29:28,993 - Deklarisana konstanta d na liniji 2
INFO  22:29:28,993 - Deklarisana konstanta g na liniji 2
INFO  22:29:28,993 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:29:28,993 - Deklarisana promenljiva e na liniji 3
INFO  22:29:28,993 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:29:28,993 - Deklarisan niz z na liniji 3
INFO  22:29:28,994 - Pocetak obrade metode main na liniji 5
INFO  22:29:28,994 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:29:28,994 - Zavrsetak obrade programa Program na liniji 1
INFO  22:29:28,994 - ======================TABELA_SIMBOLA==========================
INFO  22:29:28,995 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:29:28,997 - ==============================================================
INFO  22:29:28,997 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:29:28,997 - ==============================================================
INFO  22:29:28,997 - ======================GENERISANJE_KODA========================
INFO  22:29:29,004 - Generisanje koda uspesno zavrseno!
INFO  22:29:29,004 - Generisanje izlaznog fajla test\program.obj
INFO  22:29:29,004 - ==============================================================
INFO  22:29:39,882 - Obrada ulaznog fajla test\program.mj
INFO  22:29:39,981 - #2 program
INFO  22:29:39,981 - #8 Program
INFO  22:29:39,982 - #5 const
INFO  22:29:39,983 - #8 int
INFO  22:29:39,983 - #8 c
INFO  22:29:39,984 - #24 =
INFO  22:29:39,984 - #9 10
INFO  22:29:39,984 - #28 ,
INFO  22:29:39,986 - #8 d
INFO  22:29:39,986 - #24 =
INFO  22:29:39,986 - #9 99
INFO  22:29:39,986 - #28 ,
INFO  22:29:39,986 - #8 g
INFO  22:29:39,987 - #24 =
INFO  22:29:39,987 - #9 2
INFO  22:29:39,987 - #27 ;
INFO  22:29:39,987 - #8 int
INFO  22:29:39,988 - #8 e
INFO  22:29:39,988 - #27 ;
INFO  22:29:39,989 - #8 char
INFO  22:29:39,990 - #8 z
INFO  22:29:39,990 - #22 [
INFO  22:29:39,990 - #23 ]
INFO  22:29:39,991 - #27 ;
INFO  22:29:39,991 - #20 {
INFO  22:29:39,991 - #6 void
INFO  22:29:39,991 - #8 main
INFO  22:29:39,991 - #29 (
INFO  22:29:39,992 - #30 )
INFO  22:29:39,992 - #20 {
INFO  22:29:39,992 - #31 if
INFO  22:29:39,992 - #29 (
INFO  22:29:39,993 - #12 false
INFO  22:29:39,993 - #30 )
INFO  22:29:39,994 - #20 {
INFO  22:29:39,994 - #3 print
INFO  22:29:39,994 - #29 (
INFO  22:29:39,994 - #9 32
INFO  22:29:39,994 - #30 )
INFO  22:29:39,994 - #27 ;
INFO  22:29:39,994 - #3 print
INFO  22:29:39,995 - #29 (
INFO  22:29:39,995 - #9 64
INFO  22:29:39,995 - #30 )
INFO  22:29:39,995 - #27 ;
INFO  22:29:39,995 - #21 }
INFO  22:29:39,995 - #3 print
INFO  22:29:39,996 - #29 (
INFO  22:29:39,996 - #9 65
INFO  22:29:39,996 - #30 )
INFO  22:29:39,996 - #27 ;
INFO  22:29:39,996 - #3 print
INFO  22:29:39,996 - #29 (
INFO  22:29:39,996 - #9 77
INFO  22:29:39,997 - #30 )
INFO  22:29:39,997 - #27 ;
INFO  22:29:39,997 - #21 }
INFO  22:29:39,997 - #21 }
INFO  22:29:39,999 - =====================SINTAKSNO_STABLO=========================
INFO  22:29:40,000 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:29:40,001 - ==============================================================
INFO  22:29:40,017 - Pocetak obrade programa Program na liniji 1
INFO  22:29:40,017 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:29:40,018 - Deklarisana konstanta c na liniji 2
INFO  22:29:40,018 - Deklarisana konstanta d na liniji 2
INFO  22:29:40,018 - Deklarisana konstanta g na liniji 2
INFO  22:29:40,018 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:29:40,018 - Deklarisana promenljiva e na liniji 3
INFO  22:29:40,018 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:29:40,019 - Deklarisan niz z na liniji 3
INFO  22:29:40,019 - Pocetak obrade metode main na liniji 5
INFO  22:29:40,020 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:29:40,020 - Zavrsetak obrade programa Program na liniji 1
INFO  22:29:40,020 - ======================TABELA_SIMBOLA==========================
INFO  22:29:40,020 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:29:40,022 - ==============================================================
INFO  22:29:40,022 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:29:40,022 - ==============================================================
INFO  22:29:40,022 - ======================GENERISANJE_KODA========================
INFO  22:31:41,981 - Obrada ulaznog fajla test\program.mj
INFO  22:31:42,064 - #2 program
INFO  22:31:42,065 - #8 Program
INFO  22:31:42,065 - #5 const
INFO  22:31:42,066 - #8 int
INFO  22:31:42,066 - #8 c
INFO  22:31:42,067 - #24 =
INFO  22:31:42,067 - #9 10
INFO  22:31:42,067 - #28 ,
INFO  22:31:42,069 - #8 d
INFO  22:31:42,069 - #24 =
INFO  22:31:42,069 - #9 99
INFO  22:31:42,069 - #28 ,
INFO  22:31:42,069 - #8 g
INFO  22:31:42,069 - #24 =
INFO  22:31:42,070 - #9 2
INFO  22:31:42,070 - #27 ;
INFO  22:31:42,070 - #8 int
INFO  22:31:42,071 - #8 e
INFO  22:31:42,071 - #27 ;
INFO  22:31:42,072 - #8 char
INFO  22:31:42,073 - #8 z
INFO  22:31:42,073 - #22 [
INFO  22:31:42,073 - #23 ]
INFO  22:31:42,073 - #27 ;
INFO  22:31:42,074 - #20 {
INFO  22:31:42,074 - #6 void
INFO  22:31:42,074 - #8 main
INFO  22:31:42,074 - #29 (
INFO  22:31:42,075 - #30 )
INFO  22:31:42,075 - #20 {
INFO  22:31:42,075 - #31 if
INFO  22:31:42,075 - #29 (
INFO  22:31:42,076 - #12 false
INFO  22:31:42,076 - #30 )
INFO  22:31:42,077 - #20 {
INFO  22:31:42,077 - #3 print
INFO  22:31:42,077 - #29 (
INFO  22:31:42,077 - #9 32
INFO  22:31:42,077 - #30 )
INFO  22:31:42,077 - #27 ;
INFO  22:31:42,078 - #3 print
INFO  22:31:42,078 - #29 (
INFO  22:31:42,078 - #9 64
INFO  22:31:42,078 - #30 )
INFO  22:31:42,078 - #27 ;
INFO  22:31:42,078 - #21 }
INFO  22:31:42,079 - #3 print
INFO  22:31:42,079 - #29 (
INFO  22:31:42,079 - #9 65
INFO  22:31:42,079 - #30 )
INFO  22:31:42,079 - #27 ;
INFO  22:31:42,080 - #3 print
INFO  22:31:42,080 - #29 (
INFO  22:31:42,080 - #9 77
INFO  22:31:42,080 - #30 )
INFO  22:31:42,080 - #27 ;
INFO  22:31:42,080 - #21 }
INFO  22:31:42,080 - #21 }
INFO  22:31:42,081 - =====================SINTAKSNO_STABLO=========================
INFO  22:31:42,083 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:31:42,083 - ==============================================================
INFO  22:31:42,104 - Pocetak obrade programa Program na liniji 1
INFO  22:31:42,104 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:31:42,106 - Deklarisana konstanta c na liniji 2
INFO  22:31:42,106 - Deklarisana konstanta d na liniji 2
INFO  22:31:42,106 - Deklarisana konstanta g na liniji 2
INFO  22:31:42,106 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:31:42,106 - Deklarisana promenljiva e na liniji 3
INFO  22:31:42,106 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:31:42,107 - Deklarisan niz z na liniji 3
INFO  22:31:42,108 - Pocetak obrade metode main na liniji 5
INFO  22:31:42,108 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:31:42,108 - Zavrsetak obrade programa Program na liniji 1
INFO  22:31:42,108 - ======================TABELA_SIMBOLA==========================
INFO  22:31:42,109 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:31:42,111 - ==============================================================
INFO  22:31:42,111 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:31:42,111 - ==============================================================
INFO  22:31:42,111 - ======================GENERISANJE_KODA========================
INFO  22:31:42,118 - Generisanje koda uspesno zavrseno!
INFO  22:31:42,119 - Generisanje izlaznog fajla test\program.obj
INFO  22:31:42,119 - ==============================================================
INFO  22:31:44,932 - Obrada ulaznog fajla test\program.mj
INFO  22:31:45,041 - #2 program
INFO  22:31:45,041 - #8 Program
INFO  22:31:45,041 - #5 const
INFO  22:31:45,043 - #8 int
INFO  22:31:45,043 - #8 c
INFO  22:31:45,044 - #24 =
INFO  22:31:45,044 - #9 10
INFO  22:31:45,044 - #28 ,
INFO  22:31:45,046 - #8 d
INFO  22:31:45,046 - #24 =
INFO  22:31:45,046 - #9 99
INFO  22:31:45,046 - #28 ,
INFO  22:31:45,046 - #8 g
INFO  22:31:45,046 - #24 =
INFO  22:31:45,047 - #9 2
INFO  22:31:45,047 - #27 ;
INFO  22:31:45,047 - #8 int
INFO  22:31:45,048 - #8 e
INFO  22:31:45,048 - #27 ;
INFO  22:31:45,049 - #8 char
INFO  22:31:45,051 - #8 z
INFO  22:31:45,051 - #22 [
INFO  22:31:45,051 - #23 ]
INFO  22:31:45,051 - #27 ;
INFO  22:31:45,051 - #20 {
INFO  22:31:45,052 - #6 void
INFO  22:31:45,052 - #8 main
INFO  22:31:45,052 - #29 (
INFO  22:31:45,053 - #30 )
INFO  22:31:45,053 - #20 {
INFO  22:31:45,053 - #31 if
INFO  22:31:45,053 - #29 (
INFO  22:31:45,053 - #12 false
INFO  22:31:45,054 - #30 )
INFO  22:31:45,054 - #20 {
INFO  22:31:45,055 - #3 print
INFO  22:31:45,055 - #29 (
INFO  22:31:45,055 - #9 32
INFO  22:31:45,055 - #30 )
INFO  22:31:45,055 - #27 ;
INFO  22:31:45,055 - #3 print
INFO  22:31:45,056 - #29 (
INFO  22:31:45,056 - #9 64
INFO  22:31:45,056 - #30 )
INFO  22:31:45,056 - #27 ;
INFO  22:31:45,056 - #21 }
INFO  22:31:45,056 - #3 print
INFO  22:31:45,057 - #29 (
INFO  22:31:45,057 - #9 65
INFO  22:31:45,057 - #30 )
INFO  22:31:45,057 - #27 ;
INFO  22:31:45,057 - #3 print
INFO  22:31:45,057 - #29 (
INFO  22:31:45,058 - #9 77
INFO  22:31:45,058 - #30 )
INFO  22:31:45,058 - #27 ;
INFO  22:31:45,058 - #21 }
INFO  22:31:45,058 - #21 }
INFO  22:31:45,059 - =====================SINTAKSNO_STABLO=========================
INFO  22:31:45,061 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:31:45,061 - ==============================================================
INFO  22:31:45,079 - Pocetak obrade programa Program na liniji 1
INFO  22:31:45,079 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:31:45,081 - Deklarisana konstanta c na liniji 2
INFO  22:31:45,081 - Deklarisana konstanta d na liniji 2
INFO  22:31:45,081 - Deklarisana konstanta g na liniji 2
INFO  22:31:45,081 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:31:45,081 - Deklarisana promenljiva e na liniji 3
INFO  22:31:45,081 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:31:45,081 - Deklarisan niz z na liniji 3
INFO  22:31:45,082 - Pocetak obrade metode main na liniji 5
INFO  22:31:45,083 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:31:45,083 - Zavrsetak obrade programa Program na liniji 1
INFO  22:31:45,083 - ======================TABELA_SIMBOLA==========================
INFO  22:31:45,084 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:31:45,085 - ==============================================================
INFO  22:31:45,086 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:31:45,086 - ==============================================================
INFO  22:31:45,086 - ======================GENERISANJE_KODA========================
INFO  22:32:59,156 - Obrada ulaznog fajla test\program.mj
INFO  22:32:59,236 - #2 program
INFO  22:32:59,236 - #8 Program
INFO  22:32:59,236 - #5 const
INFO  22:32:59,237 - #8 int
INFO  22:32:59,237 - #8 c
INFO  22:32:59,238 - #24 =
INFO  22:32:59,238 - #9 10
INFO  22:32:59,238 - #28 ,
INFO  22:32:59,239 - #8 d
INFO  22:32:59,239 - #24 =
INFO  22:32:59,239 - #9 99
INFO  22:32:59,239 - #28 ,
INFO  22:32:59,239 - #8 g
INFO  22:32:59,239 - #24 =
INFO  22:32:59,240 - #9 2
INFO  22:32:59,240 - #27 ;
INFO  22:32:59,240 - #8 int
INFO  22:32:59,241 - #8 e
INFO  22:32:59,241 - #27 ;
INFO  22:32:59,242 - #8 char
INFO  22:32:59,243 - #8 z
INFO  22:32:59,243 - #22 [
INFO  22:32:59,243 - #23 ]
INFO  22:32:59,243 - #27 ;
INFO  22:32:59,243 - #20 {
INFO  22:32:59,244 - #6 void
INFO  22:32:59,244 - #8 main
INFO  22:32:59,244 - #29 (
INFO  22:32:59,245 - #30 )
INFO  22:32:59,245 - #20 {
INFO  22:32:59,245 - #31 if
INFO  22:32:59,245 - #29 (
INFO  22:32:59,245 - #12 false
INFO  22:32:59,245 - #30 )
INFO  22:32:59,246 - #20 {
INFO  22:32:59,246 - #3 print
INFO  22:32:59,246 - #29 (
INFO  22:32:59,247 - #9 32
INFO  22:32:59,247 - #30 )
INFO  22:32:59,247 - #27 ;
INFO  22:32:59,247 - #3 print
INFO  22:32:59,247 - #29 (
INFO  22:32:59,247 - #9 64
INFO  22:32:59,248 - #30 )
INFO  22:32:59,248 - #27 ;
INFO  22:32:59,248 - #21 }
INFO  22:32:59,248 - #3 print
INFO  22:32:59,248 - #29 (
INFO  22:32:59,248 - #9 65
INFO  22:32:59,249 - #30 )
INFO  22:32:59,249 - #27 ;
INFO  22:32:59,249 - #3 print
INFO  22:32:59,249 - #29 (
INFO  22:32:59,249 - #9 77
INFO  22:32:59,249 - #30 )
INFO  22:32:59,249 - #27 ;
INFO  22:32:59,249 - #21 }
INFO  22:32:59,249 - #21 }
INFO  22:32:59,250 - =====================SINTAKSNO_STABLO=========================
INFO  22:32:59,252 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:32:59,253 - ==============================================================
INFO  22:32:59,271 - Pocetak obrade programa Program na liniji 1
INFO  22:32:59,272 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:32:59,273 - Deklarisana konstanta c na liniji 2
INFO  22:32:59,273 - Deklarisana konstanta d na liniji 2
INFO  22:32:59,273 - Deklarisana konstanta g na liniji 2
INFO  22:32:59,273 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:32:59,273 - Deklarisana promenljiva e na liniji 3
INFO  22:32:59,274 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:32:59,274 - Deklarisan niz z na liniji 3
INFO  22:32:59,274 - Pocetak obrade metode main na liniji 5
INFO  22:32:59,275 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:32:59,275 - Zavrsetak obrade programa Program na liniji 1
INFO  22:32:59,275 - ======================TABELA_SIMBOLA==========================
INFO  22:32:59,276 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:32:59,278 - ==============================================================
INFO  22:32:59,278 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:32:59,278 - ==============================================================
INFO  22:32:59,278 - ======================GENERISANJE_KODA========================
INFO  22:32:59,283 - Generisanje koda uspesno zavrseno!
INFO  22:32:59,284 - Generisanje izlaznog fajla test\program.obj
INFO  22:32:59,284 - ==============================================================
INFO  22:36:55,047 - Obrada ulaznog fajla test\program.mj
INFO  22:36:55,126 - #2 program
INFO  22:36:55,126 - #8 Program
INFO  22:36:55,127 - #5 const
INFO  22:36:55,128 - #8 int
INFO  22:36:55,128 - #8 c
INFO  22:36:55,129 - #24 =
INFO  22:36:55,129 - #9 10
INFO  22:36:55,129 - #28 ,
INFO  22:36:55,130 - #8 d
INFO  22:36:55,131 - #24 =
INFO  22:36:55,131 - #9 99
INFO  22:36:55,131 - #28 ,
INFO  22:36:55,132 - #8 g
INFO  22:36:55,132 - #24 =
INFO  22:36:55,132 - #9 2
INFO  22:36:55,132 - #27 ;
INFO  22:36:55,132 - #8 int
INFO  22:36:55,133 - #8 e
INFO  22:36:55,134 - #27 ;
INFO  22:36:55,134 - #8 char
INFO  22:36:55,135 - #8 z
INFO  22:36:55,135 - #22 [
INFO  22:36:55,135 - #23 ]
INFO  22:36:55,135 - #27 ;
INFO  22:36:55,135 - #20 {
INFO  22:36:55,136 - #6 void
INFO  22:36:55,136 - #8 main
INFO  22:36:55,136 - #29 (
INFO  22:36:55,137 - #30 )
INFO  22:36:55,137 - #20 {
INFO  22:36:55,137 - #31 if
INFO  22:36:55,137 - #29 (
INFO  22:36:55,137 - #12 false
INFO  22:36:55,137 - #30 )
INFO  22:36:55,138 - #20 {
INFO  22:36:55,138 - #3 print
INFO  22:36:55,138 - #29 (
INFO  22:36:55,138 - #9 32
INFO  22:36:55,138 - #30 )
INFO  22:36:55,139 - #27 ;
INFO  22:36:55,139 - #3 print
INFO  22:36:55,139 - #29 (
INFO  22:36:55,139 - #9 64
INFO  22:36:55,139 - #30 )
INFO  22:36:55,139 - #27 ;
INFO  22:36:55,139 - #21 }
INFO  22:36:55,140 - #3 print
INFO  22:36:55,140 - #29 (
INFO  22:36:55,140 - #9 65
INFO  22:36:55,140 - #30 )
INFO  22:36:55,141 - #27 ;
INFO  22:36:55,141 - #3 print
INFO  22:36:55,141 - #29 (
INFO  22:36:55,141 - #9 77
INFO  22:36:55,141 - #30 )
INFO  22:36:55,141 - #27 ;
INFO  22:36:55,141 - #21 }
INFO  22:36:55,141 - #21 }
INFO  22:36:55,142 - =====================SINTAKSNO_STABLO=========================
INFO  22:36:55,144 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:36:55,145 - ==============================================================
INFO  22:36:55,160 - Pocetak obrade programa Program na liniji 1
INFO  22:36:55,160 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:36:55,161 - Deklarisana konstanta c na liniji 2
INFO  22:36:55,161 - Deklarisana konstanta d na liniji 2
INFO  22:36:55,161 - Deklarisana konstanta g na liniji 2
INFO  22:36:55,161 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:36:55,162 - Deklarisana promenljiva e na liniji 3
INFO  22:36:55,162 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:36:55,162 - Deklarisan niz z na liniji 3
INFO  22:36:55,163 - Pocetak obrade metode main na liniji 5
INFO  22:36:55,163 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:36:55,163 - Zavrsetak obrade programa Program na liniji 1
INFO  22:36:55,163 - ======================TABELA_SIMBOLA==========================
INFO  22:36:55,164 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:36:55,166 - ==============================================================
INFO  22:36:55,166 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:36:55,166 - ==============================================================
INFO  22:36:55,166 - ======================GENERISANJE_KODA========================
INFO  22:36:55,172 - Generisanje koda uspesno zavrseno!
INFO  22:36:55,173 - Generisanje izlaznog fajla test\program.obj
INFO  22:36:55,173 - ==============================================================
INFO  22:37:21,867 - Obrada ulaznog fajla test\program.mj
INFO  22:37:21,950 - #2 program
INFO  22:37:21,950 - #8 Program
INFO  22:37:21,950 - #5 const
INFO  22:37:21,952 - #8 int
INFO  22:37:21,952 - #8 c
INFO  22:37:21,953 - #24 =
INFO  22:37:21,953 - #9 10
INFO  22:37:21,953 - #28 ,
INFO  22:37:21,954 - #8 d
INFO  22:37:21,954 - #24 =
INFO  22:37:21,954 - #9 99
INFO  22:37:21,954 - #28 ,
INFO  22:37:21,955 - #8 g
INFO  22:37:21,955 - #24 =
INFO  22:37:21,955 - #9 2
INFO  22:37:21,955 - #27 ;
INFO  22:37:21,955 - #8 int
INFO  22:37:21,956 - #8 e
INFO  22:37:21,957 - #27 ;
INFO  22:37:21,957 - #8 char
INFO  22:37:21,958 - #8 z
INFO  22:37:21,958 - #22 [
INFO  22:37:21,959 - #23 ]
INFO  22:37:21,959 - #27 ;
INFO  22:37:21,959 - #20 {
INFO  22:37:21,959 - #6 void
INFO  22:37:21,959 - #8 main
INFO  22:37:21,959 - #29 (
INFO  22:37:21,960 - #30 )
INFO  22:37:21,960 - #20 {
INFO  22:37:21,960 - #31 if
INFO  22:37:21,960 - #29 (
INFO  22:37:21,961 - #12 false
INFO  22:37:21,961 - #30 )
INFO  22:37:21,962 - #20 {
INFO  22:37:21,962 - #3 print
INFO  22:37:21,962 - #29 (
INFO  22:37:21,962 - #9 32
INFO  22:37:21,962 - #30 )
INFO  22:37:21,962 - #27 ;
INFO  22:37:21,962 - #3 print
INFO  22:37:21,963 - #29 (
INFO  22:37:21,963 - #9 64
INFO  22:37:21,963 - #30 )
INFO  22:37:21,963 - #27 ;
INFO  22:37:21,963 - #21 }
INFO  22:37:21,963 - #3 print
INFO  22:37:21,964 - #29 (
INFO  22:37:21,964 - #9 65
INFO  22:37:21,964 - #30 )
INFO  22:37:21,964 - #27 ;
INFO  22:37:21,964 - #3 print
INFO  22:37:21,964 - #29 (
INFO  22:37:21,964 - #9 77
INFO  22:37:21,964 - #30 )
INFO  22:37:21,964 - #27 ;
INFO  22:37:21,965 - #21 }
INFO  22:37:21,965 - #21 }
INFO  22:37:21,966 - =====================SINTAKSNO_STABLO=========================
INFO  22:37:21,967 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:37:21,968 - ==============================================================
INFO  22:37:21,990 - Pocetak obrade programa Program na liniji 1
INFO  22:37:21,991 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:37:21,992 - Deklarisana konstanta c na liniji 2
INFO  22:37:21,992 - Deklarisana konstanta d na liniji 2
INFO  22:37:21,992 - Deklarisana konstanta g na liniji 2
INFO  22:37:21,992 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:37:21,992 - Deklarisana promenljiva e na liniji 3
INFO  22:37:21,993 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:37:21,993 - Deklarisan niz z na liniji 3
INFO  22:37:21,994 - Pocetak obrade metode main na liniji 5
INFO  22:37:21,994 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:37:21,994 - Zavrsetak obrade programa Program na liniji 1
INFO  22:37:21,994 - ======================TABELA_SIMBOLA==========================
INFO  22:37:21,995 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:37:21,997 - ==============================================================
INFO  22:37:21,997 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:37:21,997 - ==============================================================
INFO  22:37:21,998 - ======================GENERISANJE_KODA========================
INFO  22:37:22,002 - Generisanje koda uspesno zavrseno!
INFO  22:37:22,003 - Generisanje izlaznog fajla test\program.obj
INFO  22:37:22,003 - ==============================================================
INFO  22:38:09,299 - Obrada ulaznog fajla test\program.mj
INFO  22:38:09,375 - #2 program
INFO  22:38:09,375 - #8 Program
INFO  22:38:09,375 - #5 const
INFO  22:38:09,376 - #8 int
INFO  22:38:09,377 - #8 c
INFO  22:38:09,377 - #24 =
INFO  22:38:09,377 - #9 10
INFO  22:38:09,378 - #28 ,
INFO  22:38:09,379 - #8 d
INFO  22:38:09,379 - #24 =
INFO  22:38:09,379 - #9 99
INFO  22:38:09,379 - #28 ,
INFO  22:38:09,379 - #8 g
INFO  22:38:09,380 - #24 =
INFO  22:38:09,380 - #9 2
INFO  22:38:09,380 - #27 ;
INFO  22:38:09,380 - #8 int
INFO  22:38:09,381 - #8 e
INFO  22:38:09,381 - #27 ;
INFO  22:38:09,382 - #8 char
INFO  22:38:09,383 - #8 z
INFO  22:38:09,383 - #22 [
INFO  22:38:09,383 - #23 ]
INFO  22:38:09,384 - #27 ;
INFO  22:38:09,384 - #20 {
INFO  22:38:09,385 - #6 void
INFO  22:38:09,385 - #8 main
INFO  22:38:09,385 - #29 (
INFO  22:38:09,386 - #30 )
INFO  22:38:09,386 - #20 {
INFO  22:38:09,386 - #31 if
INFO  22:38:09,387 - #29 (
INFO  22:38:09,387 - #12 false
INFO  22:38:09,387 - #30 )
INFO  22:38:09,388 - #20 {
INFO  22:38:09,388 - #3 print
INFO  22:38:09,388 - #29 (
INFO  22:38:09,388 - #9 32
INFO  22:38:09,388 - #30 )
INFO  22:38:09,388 - #27 ;
INFO  22:38:09,388 - #3 print
INFO  22:38:09,389 - #29 (
INFO  22:38:09,391 - #9 64
INFO  22:38:09,391 - #30 )
INFO  22:38:09,391 - #27 ;
INFO  22:38:09,391 - #21 }
INFO  22:38:09,391 - #3 print
INFO  22:38:09,391 - #29 (
INFO  22:38:09,392 - #9 65
INFO  22:38:09,392 - #30 )
INFO  22:38:09,392 - #27 ;
INFO  22:38:09,392 - #3 print
INFO  22:38:09,392 - #29 (
INFO  22:38:09,392 - #9 77
INFO  22:38:09,392 - #30 )
INFO  22:38:09,392 - #27 ;
INFO  22:38:09,392 - #21 }
INFO  22:38:09,392 - #21 }
INFO  22:38:09,393 - =====================SINTAKSNO_STABLO=========================
INFO  22:38:09,395 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:38:09,395 - ==============================================================
INFO  22:38:09,410 - Pocetak obrade programa Program na liniji 1
INFO  22:38:09,410 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:38:09,412 - Deklarisana konstanta c na liniji 2
INFO  22:38:09,413 - Deklarisana konstanta d na liniji 2
INFO  22:38:09,413 - Deklarisana konstanta g na liniji 2
INFO  22:38:09,413 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:38:09,413 - Deklarisana promenljiva e na liniji 3
INFO  22:38:09,413 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:38:09,413 - Deklarisan niz z na liniji 3
INFO  22:38:09,414 - Pocetak obrade metode main na liniji 5
INFO  22:38:09,414 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:38:09,414 - Zavrsetak obrade programa Program na liniji 1
INFO  22:38:09,415 - ======================TABELA_SIMBOLA==========================
INFO  22:38:09,415 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:38:09,418 - ==============================================================
INFO  22:38:09,418 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:38:09,418 - ==============================================================
INFO  22:38:09,418 - ======================GENERISANJE_KODA========================
INFO  22:38:09,424 - Generisanje koda uspesno zavrseno!
INFO  22:38:09,424 - Generisanje izlaznog fajla test\program.obj
INFO  22:38:09,424 - ==============================================================
INFO  22:38:29,117 - Obrada ulaznog fajla test\program.mj
INFO  22:38:29,198 - #2 program
INFO  22:38:29,198 - #8 Program
INFO  22:38:29,198 - #5 const
INFO  22:38:29,199 - #8 int
INFO  22:38:29,200 - #8 c
INFO  22:38:29,201 - #24 =
INFO  22:38:29,201 - #9 10
INFO  22:38:29,201 - #28 ,
INFO  22:38:29,202 - #8 d
INFO  22:38:29,202 - #24 =
INFO  22:38:29,202 - #9 99
INFO  22:38:29,203 - #28 ,
INFO  22:38:29,203 - #8 g
INFO  22:38:29,203 - #24 =
INFO  22:38:29,203 - #9 2
INFO  22:38:29,203 - #27 ;
INFO  22:38:29,203 - #8 int
INFO  22:38:29,205 - #8 e
INFO  22:38:29,205 - #27 ;
INFO  22:38:29,205 - #8 char
INFO  22:38:29,206 - #8 z
INFO  22:38:29,206 - #22 [
INFO  22:38:29,206 - #23 ]
INFO  22:38:29,207 - #27 ;
INFO  22:38:29,207 - #20 {
INFO  22:38:29,207 - #6 void
INFO  22:38:29,207 - #8 main
INFO  22:38:29,207 - #29 (
INFO  22:38:29,208 - #30 )
INFO  22:38:29,208 - #20 {
INFO  22:38:29,208 - #31 if
INFO  22:38:29,208 - #29 (
INFO  22:38:29,208 - #12 false
INFO  22:38:29,208 - #30 )
INFO  22:38:29,209 - #20 {
INFO  22:38:29,209 - #3 print
INFO  22:38:29,209 - #29 (
INFO  22:38:29,210 - #9 32
INFO  22:38:29,210 - #30 )
INFO  22:38:29,210 - #27 ;
INFO  22:38:29,210 - #3 print
INFO  22:38:29,210 - #29 (
INFO  22:38:29,210 - #9 64
INFO  22:38:29,210 - #30 )
INFO  22:38:29,210 - #27 ;
INFO  22:38:29,210 - #21 }
INFO  22:38:29,211 - #3 print
INFO  22:38:29,211 - #29 (
INFO  22:38:29,211 - #9 65
INFO  22:38:29,211 - #30 )
INFO  22:38:29,211 - #27 ;
INFO  22:38:29,211 - #3 print
INFO  22:38:29,211 - #29 (
INFO  22:38:29,212 - #9 77
INFO  22:38:29,212 - #30 )
INFO  22:38:29,212 - #27 ;
INFO  22:38:29,212 - #21 }
INFO  22:38:29,212 - #21 }
INFO  22:38:29,213 - =====================SINTAKSNO_STABLO=========================
INFO  22:38:29,215 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:38:29,216 - ==============================================================
INFO  22:38:29,231 - Pocetak obrade programa Program na liniji 1
INFO  22:38:29,232 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:38:29,233 - Deklarisana konstanta c na liniji 2
INFO  22:38:29,233 - Deklarisana konstanta d na liniji 2
INFO  22:38:29,233 - Deklarisana konstanta g na liniji 2
INFO  22:38:29,233 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:38:29,233 - Deklarisana promenljiva e na liniji 3
INFO  22:38:29,233 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:38:29,233 - Deklarisan niz z na liniji 3
INFO  22:38:29,234 - Pocetak obrade metode main na liniji 5
INFO  22:38:29,234 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:38:29,235 - Zavrsetak obrade programa Program na liniji 1
INFO  22:38:29,235 - ======================TABELA_SIMBOLA==========================
INFO  22:38:29,235 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:38:29,237 - ==============================================================
INFO  22:38:29,237 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:38:29,237 - ==============================================================
INFO  22:38:29,237 - ======================GENERISANJE_KODA========================
INFO  22:38:29,242 - Generisanje koda uspesno zavrseno!
INFO  22:38:29,243 - Generisanje izlaznog fajla test\program.obj
INFO  22:38:29,243 - ==============================================================
INFO  22:41:39,249 - Obrada ulaznog fajla test\program.mj
INFO  22:41:39,316 - #2 program
INFO  22:41:39,316 - #8 Program
INFO  22:41:39,316 - #5 const
INFO  22:41:39,317 - #8 int
INFO  22:41:39,317 - #8 c
INFO  22:41:39,317 - #24 =
INFO  22:41:39,318 - #9 10
INFO  22:41:39,318 - #28 ,
INFO  22:41:39,319 - #8 d
INFO  22:41:39,319 - #24 =
INFO  22:41:39,319 - #9 99
INFO  22:41:39,319 - #28 ,
INFO  22:41:39,319 - #8 g
INFO  22:41:39,319 - #24 =
INFO  22:41:39,319 - #9 2
INFO  22:41:39,320 - #27 ;
INFO  22:41:39,320 - #8 int
INFO  22:41:39,321 - #8 e
INFO  22:41:39,321 - #27 ;
INFO  22:41:39,321 - #8 char
INFO  22:41:39,322 - #8 z
INFO  22:41:39,322 - #22 [
INFO  22:41:39,322 - #23 ]
INFO  22:41:39,322 - #27 ;
INFO  22:41:39,322 - #20 {
INFO  22:41:39,323 - #6 void
INFO  22:41:39,323 - #8 main
INFO  22:41:39,323 - #29 (
INFO  22:41:39,323 - #30 )
INFO  22:41:39,323 - #20 {
INFO  22:41:39,323 - #31 if
INFO  22:41:39,324 - #29 (
INFO  22:41:39,324 - #12 false
INFO  22:41:39,324 - #30 )
INFO  22:41:39,325 - #20 {
INFO  22:41:39,325 - #3 print
INFO  22:41:39,325 - #29 (
INFO  22:41:39,325 - #9 32
INFO  22:41:39,325 - #30 )
INFO  22:41:39,325 - #27 ;
INFO  22:41:39,325 - #3 print
INFO  22:41:39,326 - #29 (
INFO  22:41:39,327 - #9 64
INFO  22:41:39,329 - #30 )
INFO  22:41:39,329 - #27 ;
INFO  22:41:39,329 - #21 }
INFO  22:41:39,329 - #3 print
INFO  22:41:39,330 - #29 (
INFO  22:41:39,330 - #9 65
INFO  22:41:39,330 - #30 )
INFO  22:41:39,331 - #27 ;
INFO  22:41:39,331 - #3 print
INFO  22:41:39,334 - #29 (
INFO  22:41:39,334 - #9 77
INFO  22:41:39,335 - #30 )
INFO  22:41:39,335 - #27 ;
INFO  22:41:39,335 - #21 }
INFO  22:41:39,335 - #21 }
INFO  22:41:39,336 - =====================SINTAKSNO_STABLO=========================
INFO  22:41:39,337 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:41:39,343 - ==============================================================
INFO  22:41:39,356 - Pocetak obrade programa Program na liniji 1
INFO  22:41:39,356 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:41:39,357 - Deklarisana konstanta c na liniji 2
INFO  22:41:39,357 - Deklarisana konstanta d na liniji 2
INFO  22:41:39,357 - Deklarisana konstanta g na liniji 2
INFO  22:41:39,357 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:41:39,357 - Deklarisana promenljiva e na liniji 3
INFO  22:41:39,357 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:41:39,358 - Deklarisan niz z na liniji 3
INFO  22:41:39,358 - Pocetak obrade metode main na liniji 5
INFO  22:41:39,359 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:41:39,359 - Zavrsetak obrade programa Program na liniji 1
INFO  22:41:39,359 - ======================TABELA_SIMBOLA==========================
INFO  22:41:39,360 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:41:39,362 - ==============================================================
INFO  22:41:39,362 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:41:39,362 - ==============================================================
INFO  22:41:39,362 - ======================GENERISANJE_KODA========================
INFO  22:41:39,369 - Generisanje koda uspesno zavrseno!
INFO  22:41:39,369 - Generisanje izlaznog fajla test\program.obj
INFO  22:41:39,369 - ==============================================================
INFO  22:44:53,031 - Obrada ulaznog fajla test\program.mj
INFO  22:44:53,114 - #2 program
INFO  22:44:53,114 - #8 Program
INFO  22:44:53,114 - #5 const
INFO  22:44:53,115 - #8 int
INFO  22:44:53,116 - #8 c
INFO  22:44:53,116 - #24 =
INFO  22:44:53,117 - #9 10
INFO  22:44:53,117 - #28 ,
INFO  22:44:53,118 - #8 d
INFO  22:44:53,118 - #24 =
INFO  22:44:53,118 - #9 99
INFO  22:44:53,118 - #28 ,
INFO  22:44:53,119 - #8 g
INFO  22:44:53,119 - #24 =
INFO  22:44:53,119 - #9 2
INFO  22:44:53,119 - #27 ;
INFO  22:44:53,119 - #8 int
INFO  22:44:53,121 - #8 e
INFO  22:44:53,122 - #27 ;
INFO  22:44:53,123 - #8 char
INFO  22:44:53,124 - #8 z
INFO  22:44:53,124 - #22 [
INFO  22:44:53,124 - #23 ]
INFO  22:44:53,124 - #27 ;
INFO  22:44:53,125 - #20 {
INFO  22:44:53,125 - #6 void
INFO  22:44:53,125 - #8 main
INFO  22:44:53,125 - #29 (
INFO  22:44:53,126 - #30 )
INFO  22:44:53,126 - #20 {
INFO  22:44:53,126 - #31 if
INFO  22:44:53,126 - #29 (
INFO  22:44:53,126 - #12 false
INFO  22:44:53,126 - #30 )
INFO  22:44:53,127 - #20 {
INFO  22:44:53,127 - #3 print
INFO  22:44:53,127 - #29 (
INFO  22:44:53,127 - #9 32
INFO  22:44:53,127 - #30 )
INFO  22:44:53,127 - #27 ;
INFO  22:44:53,127 - #3 print
INFO  22:44:53,128 - #29 (
INFO  22:44:53,128 - #9 64
INFO  22:44:53,128 - #30 )
INFO  22:44:53,128 - #27 ;
INFO  22:44:53,128 - #21 }
INFO  22:44:53,128 - #3 print
INFO  22:44:53,129 - #29 (
INFO  22:44:53,129 - #9 65
INFO  22:44:53,129 - #30 )
INFO  22:44:53,129 - #27 ;
INFO  22:44:53,129 - #3 print
INFO  22:44:53,129 - #29 (
INFO  22:44:53,129 - #9 77
INFO  22:44:53,129 - #30 )
INFO  22:44:53,129 - #27 ;
INFO  22:44:53,129 - #21 }
INFO  22:44:53,129 - #21 }
INFO  22:44:53,130 - =====================SINTAKSNO_STABLO=========================
INFO  22:44:53,132 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:44:53,132 - ==============================================================
INFO  22:44:53,146 - Pocetak obrade programa Program na liniji 1
INFO  22:44:53,146 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:44:53,147 - Deklarisana konstanta c na liniji 2
INFO  22:44:53,148 - Deklarisana konstanta d na liniji 2
INFO  22:44:53,148 - Deklarisana konstanta g na liniji 2
INFO  22:44:53,148 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:44:53,148 - Deklarisana promenljiva e na liniji 3
INFO  22:44:53,148 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:44:53,148 - Deklarisan niz z na liniji 3
INFO  22:44:53,149 - Pocetak obrade metode main na liniji 5
INFO  22:44:53,149 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:44:53,149 - Zavrsetak obrade programa Program na liniji 1
INFO  22:44:53,149 - ======================TABELA_SIMBOLA==========================
INFO  22:44:53,150 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:44:53,151 - ==============================================================
INFO  22:44:53,151 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:44:53,151 - ==============================================================
INFO  22:44:53,151 - ======================GENERISANJE_KODA========================
INFO  22:44:53,157 - Generisanje koda uspesno zavrseno!
INFO  22:44:53,158 - Generisanje izlaznog fajla test\program.obj
INFO  22:44:53,158 - ==============================================================
INFO  22:44:55,650 - Obrada ulaznog fajla test\program.mj
INFO  22:44:55,755 - #2 program
INFO  22:44:55,755 - #8 Program
INFO  22:44:55,755 - #5 const
INFO  22:44:55,757 - #8 int
INFO  22:44:55,757 - #8 c
INFO  22:44:55,758 - #24 =
INFO  22:44:55,758 - #9 10
INFO  22:44:55,758 - #28 ,
INFO  22:44:55,760 - #8 d
INFO  22:44:55,760 - #24 =
INFO  22:44:55,760 - #9 99
INFO  22:44:55,760 - #28 ,
INFO  22:44:55,761 - #8 g
INFO  22:44:55,761 - #24 =
INFO  22:44:55,761 - #9 2
INFO  22:44:55,761 - #27 ;
INFO  22:44:55,761 - #8 int
INFO  22:44:55,762 - #8 e
INFO  22:44:55,762 - #27 ;
INFO  22:44:55,763 - #8 char
INFO  22:44:55,764 - #8 z
INFO  22:44:55,764 - #22 [
INFO  22:44:55,764 - #23 ]
INFO  22:44:55,765 - #27 ;
INFO  22:44:55,765 - #20 {
INFO  22:44:55,765 - #6 void
INFO  22:44:55,765 - #8 main
INFO  22:44:55,765 - #29 (
INFO  22:44:55,766 - #30 )
INFO  22:44:55,766 - #20 {
INFO  22:44:55,766 - #31 if
INFO  22:44:55,766 - #29 (
INFO  22:44:55,767 - #12 false
INFO  22:44:55,767 - #30 )
INFO  22:44:55,768 - #20 {
INFO  22:44:55,768 - #3 print
INFO  22:44:55,768 - #29 (
INFO  22:44:55,769 - #9 32
INFO  22:44:55,769 - #30 )
INFO  22:44:55,769 - #27 ;
INFO  22:44:55,769 - #3 print
INFO  22:44:55,770 - #29 (
INFO  22:44:55,770 - #9 64
INFO  22:44:55,770 - #30 )
INFO  22:44:55,770 - #27 ;
INFO  22:44:55,770 - #21 }
INFO  22:44:55,771 - #3 print
INFO  22:44:55,771 - #29 (
INFO  22:44:55,771 - #9 65
INFO  22:44:55,771 - #30 )
INFO  22:44:55,772 - #27 ;
INFO  22:44:55,772 - #3 print
INFO  22:44:55,772 - #29 (
INFO  22:44:55,772 - #9 77
INFO  22:44:55,772 - #30 )
INFO  22:44:55,772 - #27 ;
INFO  22:44:55,772 - #21 }
INFO  22:44:55,772 - #21 }
INFO  22:44:55,773 - =====================SINTAKSNO_STABLO=========================
INFO  22:44:55,775 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:44:55,776 - ==============================================================
INFO  22:44:55,796 - Pocetak obrade programa Program na liniji 1
INFO  22:44:55,796 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:44:55,797 - Deklarisana konstanta c na liniji 2
INFO  22:44:55,797 - Deklarisana konstanta d na liniji 2
INFO  22:44:55,797 - Deklarisana konstanta g na liniji 2
INFO  22:44:55,797 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:44:55,797 - Deklarisana promenljiva e na liniji 3
INFO  22:44:55,797 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:44:55,798 - Deklarisan niz z na liniji 3
INFO  22:44:55,798 - Pocetak obrade metode main na liniji 5
INFO  22:44:55,799 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:44:55,799 - Zavrsetak obrade programa Program na liniji 1
INFO  22:44:55,799 - ======================TABELA_SIMBOLA==========================
INFO  22:44:55,799 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:44:55,802 - ==============================================================
INFO  22:44:55,802 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:44:55,802 - ==============================================================
INFO  22:44:55,802 - ======================GENERISANJE_KODA========================
INFO  22:47:20,554 - Obrada ulaznog fajla test\program.mj
INFO  22:47:20,619 - #2 program
INFO  22:47:20,619 - #8 Program
INFO  22:47:20,619 - #5 const
INFO  22:47:20,620 - #8 int
INFO  22:47:20,621 - #8 c
INFO  22:47:20,622 - #24 =
INFO  22:47:20,623 - #9 10
INFO  22:47:20,623 - #28 ,
INFO  22:47:20,624 - #8 d
INFO  22:47:20,625 - #24 =
INFO  22:47:20,625 - #9 99
INFO  22:47:20,625 - #28 ,
INFO  22:47:20,625 - #8 g
INFO  22:47:20,625 - #24 =
INFO  22:47:20,626 - #9 2
INFO  22:47:20,626 - #27 ;
INFO  22:47:20,626 - #8 int
INFO  22:47:20,627 - #8 e
INFO  22:47:20,627 - #27 ;
INFO  22:47:20,628 - #8 char
INFO  22:47:20,629 - #8 z
INFO  22:47:20,629 - #22 [
INFO  22:47:20,629 - #23 ]
INFO  22:47:20,629 - #27 ;
INFO  22:47:20,629 - #20 {
INFO  22:47:20,629 - #6 void
INFO  22:47:20,630 - #8 main
INFO  22:47:20,630 - #29 (
INFO  22:47:20,631 - #30 )
INFO  22:47:20,631 - #20 {
INFO  22:47:20,631 - #31 if
INFO  22:47:20,631 - #29 (
INFO  22:47:20,631 - #12 false
INFO  22:47:20,631 - #30 )
INFO  22:47:20,632 - #20 {
INFO  22:47:20,633 - #3 print
INFO  22:47:20,633 - #29 (
INFO  22:47:20,633 - #9 32
INFO  22:47:20,633 - #30 )
INFO  22:47:20,633 - #27 ;
INFO  22:47:20,633 - #3 print
INFO  22:47:20,633 - #29 (
INFO  22:47:20,634 - #9 64
INFO  22:47:20,634 - #30 )
INFO  22:47:20,634 - #27 ;
INFO  22:47:20,634 - #21 }
INFO  22:47:20,634 - #3 print
INFO  22:47:20,634 - #29 (
INFO  22:47:20,635 - #9 65
INFO  22:47:20,635 - #30 )
INFO  22:47:20,635 - #27 ;
INFO  22:47:20,635 - #3 print
INFO  22:47:20,635 - #29 (
INFO  22:47:20,635 - #9 77
INFO  22:47:20,635 - #30 )
INFO  22:47:20,635 - #27 ;
INFO  22:47:20,635 - #21 }
INFO  22:47:20,635 - #21 }
INFO  22:47:20,636 - =====================SINTAKSNO_STABLO=========================
INFO  22:47:20,638 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:47:20,639 - ==============================================================
INFO  22:47:20,652 - Pocetak obrade programa Program na liniji 1
INFO  22:47:20,652 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:47:20,653 - Deklarisana konstanta c na liniji 2
INFO  22:47:20,653 - Deklarisana konstanta d na liniji 2
INFO  22:47:20,653 - Deklarisana konstanta g na liniji 2
INFO  22:47:20,653 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:47:20,653 - Deklarisana promenljiva e na liniji 3
INFO  22:47:20,653 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:47:20,653 - Deklarisan niz z na liniji 3
INFO  22:47:20,654 - Pocetak obrade metode main na liniji 5
INFO  22:47:20,654 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:47:20,654 - Zavrsetak obrade programa Program na liniji 1
INFO  22:47:20,655 - ======================TABELA_SIMBOLA==========================
INFO  22:47:20,655 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:47:20,657 - ==============================================================
INFO  22:47:20,657 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:47:20,657 - ==============================================================
INFO  22:47:20,657 - ======================GENERISANJE_KODA========================
INFO  22:47:20,662 - Generisanje koda uspesno zavrseno!
INFO  22:47:20,663 - Generisanje izlaznog fajla test\program.obj
INFO  22:47:20,663 - ==============================================================
INFO  22:53:26,700 - Obrada ulaznog fajla test\program.mj
INFO  22:53:26,772 - #2 program
INFO  22:53:26,772 - #8 Program
INFO  22:53:26,772 - #5 const
INFO  22:53:26,773 - #8 int
INFO  22:53:26,773 - #8 c
INFO  22:53:26,774 - #24 =
INFO  22:53:26,774 - #9 10
INFO  22:53:26,775 - #28 ,
INFO  22:53:26,776 - #8 d
INFO  22:53:26,776 - #24 =
INFO  22:53:26,776 - #9 99
INFO  22:53:26,776 - #28 ,
INFO  22:53:26,777 - #8 g
INFO  22:53:26,777 - #24 =
INFO  22:53:26,777 - #9 2
INFO  22:53:26,777 - #27 ;
INFO  22:53:26,777 - #8 int
INFO  22:53:26,778 - #8 e
INFO  22:53:26,778 - #27 ;
INFO  22:53:26,779 - #8 char
INFO  22:53:26,780 - #8 z
INFO  22:53:26,780 - #22 [
INFO  22:53:26,780 - #23 ]
INFO  22:53:26,780 - #27 ;
INFO  22:53:26,780 - #20 {
INFO  22:53:26,780 - #6 void
INFO  22:53:26,780 - #8 main
INFO  22:53:26,780 - #29 (
INFO  22:53:26,782 - #30 )
INFO  22:53:26,783 - #20 {
INFO  22:53:26,783 - #31 if
INFO  22:53:26,783 - #29 (
INFO  22:53:26,783 - #12 false
INFO  22:53:26,783 - #30 )
INFO  22:53:26,784 - #20 {
INFO  22:53:26,784 - #3 print
INFO  22:53:26,784 - #29 (
INFO  22:53:26,785 - #9 32
INFO  22:53:26,785 - #30 )
INFO  22:53:26,785 - #27 ;
INFO  22:53:26,785 - #3 print
INFO  22:53:26,785 - #29 (
INFO  22:53:26,786 - #9 64
INFO  22:53:26,786 - #30 )
INFO  22:53:26,786 - #27 ;
INFO  22:53:26,786 - #21 }
INFO  22:53:26,786 - #3 print
INFO  22:53:26,787 - #29 (
INFO  22:53:26,787 - #9 65
INFO  22:53:26,787 - #30 )
INFO  22:53:26,787 - #27 ;
INFO  22:53:26,787 - #3 print
INFO  22:53:26,787 - #29 (
INFO  22:53:26,787 - #9 77
INFO  22:53:26,788 - #30 )
INFO  22:53:26,788 - #27 ;
INFO  22:53:26,788 - #21 }
INFO  22:53:26,788 - #21 }
INFO  22:53:26,789 - =====================SINTAKSNO_STABLO=========================
INFO  22:53:26,790 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:53:26,791 - ==============================================================
INFO  22:53:26,807 - Pocetak obrade programa Program na liniji 1
INFO  22:53:26,807 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:53:26,808 - Deklarisana konstanta c na liniji 2
INFO  22:53:26,809 - Deklarisana konstanta d na liniji 2
INFO  22:53:26,809 - Deklarisana konstanta g na liniji 2
INFO  22:53:26,809 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:53:26,809 - Deklarisana promenljiva e na liniji 3
INFO  22:53:26,809 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:53:26,809 - Deklarisan niz z na liniji 3
INFO  22:53:26,810 - Pocetak obrade metode main na liniji 5
INFO  22:53:26,811 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:53:26,811 - Zavrsetak obrade programa Program na liniji 1
INFO  22:53:26,811 - ======================TABELA_SIMBOLA==========================
INFO  22:53:26,812 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:53:26,813 - ==============================================================
INFO  22:53:26,813 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:53:26,813 - ==============================================================
INFO  22:53:26,813 - ======================GENERISANJE_KODA========================
INFO  22:53:26,818 - Generisanje koda uspesno zavrseno!
INFO  22:53:26,819 - Generisanje izlaznog fajla test\program.obj
INFO  22:53:26,819 - ==============================================================
INFO  22:53:52,237 - Obrada ulaznog fajla test\program.mj
INFO  22:53:52,325 - #2 program
INFO  22:53:52,326 - #8 Program
INFO  22:53:52,326 - #5 const
INFO  22:53:52,327 - #8 int
INFO  22:53:52,327 - #8 c
INFO  22:53:52,328 - #24 =
INFO  22:53:52,328 - #9 10
INFO  22:53:52,328 - #28 ,
INFO  22:53:52,329 - #8 d
INFO  22:53:52,329 - #24 =
INFO  22:53:52,329 - #9 99
INFO  22:53:52,329 - #28 ,
INFO  22:53:52,329 - #8 g
INFO  22:53:52,329 - #24 =
INFO  22:53:52,329 - #9 2
INFO  22:53:52,329 - #27 ;
INFO  22:53:52,330 - #8 int
INFO  22:53:52,331 - #8 e
INFO  22:53:52,331 - #27 ;
INFO  22:53:52,331 - #8 char
INFO  22:53:52,333 - #8 z
INFO  22:53:52,333 - #22 [
INFO  22:53:52,333 - #23 ]
INFO  22:53:52,333 - #27 ;
INFO  22:53:52,333 - #20 {
INFO  22:53:52,333 - #6 void
INFO  22:53:52,333 - #8 main
INFO  22:53:52,333 - #29 (
INFO  22:53:52,334 - #30 )
INFO  22:53:52,334 - #20 {
INFO  22:53:52,335 - #31 if
INFO  22:53:52,335 - #29 (
INFO  22:53:52,335 - #12 false
INFO  22:53:52,335 - #30 )
INFO  22:53:52,336 - #20 {
INFO  22:53:52,336 - #3 print
INFO  22:53:52,336 - #29 (
INFO  22:53:52,336 - #9 32
INFO  22:53:52,336 - #30 )
INFO  22:53:52,336 - #27 ;
INFO  22:53:52,337 - #3 print
INFO  22:53:52,337 - #29 (
INFO  22:53:52,337 - #9 64
INFO  22:53:52,338 - #30 )
INFO  22:53:52,338 - #27 ;
INFO  22:53:52,338 - #21 }
INFO  22:53:52,338 - #3 print
INFO  22:53:52,339 - #29 (
INFO  22:53:52,339 - #9 65
INFO  22:53:52,339 - #30 )
INFO  22:53:52,339 - #27 ;
INFO  22:53:52,339 - #3 print
INFO  22:53:52,339 - #29 (
INFO  22:53:52,339 - #9 77
INFO  22:53:52,339 - #30 )
INFO  22:53:52,339 - #27 ;
INFO  22:53:52,339 - #21 }
INFO  22:53:52,340 - #21 }
INFO  22:53:52,340 - =====================SINTAKSNO_STABLO=========================
INFO  22:53:52,342 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:53:52,343 - ==============================================================
INFO  22:53:52,356 - Pocetak obrade programa Program na liniji 1
INFO  22:53:52,356 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:53:52,357 - Deklarisana konstanta c na liniji 2
INFO  22:53:52,357 - Deklarisana konstanta d na liniji 2
INFO  22:53:52,357 - Deklarisana konstanta g na liniji 2
INFO  22:53:52,357 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:53:52,358 - Deklarisana promenljiva e na liniji 3
INFO  22:53:52,358 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:53:52,358 - Deklarisan niz z na liniji 3
INFO  22:53:52,358 - Pocetak obrade metode main na liniji 5
INFO  22:53:52,359 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:53:52,359 - Zavrsetak obrade programa Program na liniji 1
INFO  22:53:52,359 - ======================TABELA_SIMBOLA==========================
INFO  22:53:52,359 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:53:52,361 - ==============================================================
INFO  22:53:52,361 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:53:52,361 - ==============================================================
INFO  22:53:52,361 - ======================GENERISANJE_KODA========================
INFO  22:53:52,366 - Generisanje koda uspesno zavrseno!
INFO  22:53:52,366 - Generisanje izlaznog fajla test\program.obj
INFO  22:53:52,367 - ==============================================================
INFO  22:54:19,552 - Obrada ulaznog fajla test\program.mj
INFO  22:54:19,629 - #2 program
INFO  22:54:19,630 - #8 Program
INFO  22:54:19,630 - #5 const
INFO  22:54:19,631 - #8 int
INFO  22:54:19,631 - #8 c
INFO  22:54:19,632 - #24 =
INFO  22:54:19,632 - #9 10
INFO  22:54:19,632 - #28 ,
INFO  22:54:19,633 - #8 d
INFO  22:54:19,633 - #24 =
INFO  22:54:19,633 - #9 99
INFO  22:54:19,633 - #28 ,
INFO  22:54:19,633 - #8 g
INFO  22:54:19,633 - #24 =
INFO  22:54:19,633 - #9 2
INFO  22:54:19,634 - #27 ;
INFO  22:54:19,634 - #8 int
INFO  22:54:19,635 - #8 e
INFO  22:54:19,636 - #27 ;
INFO  22:54:19,636 - #8 char
INFO  22:54:19,637 - #8 z
INFO  22:54:19,637 - #22 [
INFO  22:54:19,637 - #23 ]
INFO  22:54:19,637 - #27 ;
INFO  22:54:19,638 - #20 {
INFO  22:54:19,638 - #6 void
INFO  22:54:19,638 - #8 main
INFO  22:54:19,638 - #29 (
INFO  22:54:19,639 - #30 )
INFO  22:54:19,639 - #20 {
INFO  22:54:19,639 - #31 if
INFO  22:54:19,639 - #29 (
INFO  22:54:19,639 - #12 false
INFO  22:54:19,639 - #30 )
INFO  22:54:19,640 - #20 {
INFO  22:54:19,640 - #3 print
INFO  22:54:19,640 - #29 (
INFO  22:54:19,640 - #9 32
INFO  22:54:19,640 - #30 )
INFO  22:54:19,641 - #27 ;
INFO  22:54:19,641 - #3 print
INFO  22:54:19,641 - #29 (
INFO  22:54:19,641 - #9 64
INFO  22:54:19,641 - #30 )
INFO  22:54:19,641 - #27 ;
INFO  22:54:19,641 - #21 }
INFO  22:54:19,641 - #3 print
INFO  22:54:19,642 - #29 (
INFO  22:54:19,642 - #9 65
INFO  22:54:19,642 - #30 )
INFO  22:54:19,642 - #27 ;
INFO  22:54:19,642 - #3 print
INFO  22:54:19,642 - #29 (
INFO  22:54:19,642 - #9 77
INFO  22:54:19,642 - #30 )
INFO  22:54:19,642 - #27 ;
INFO  22:54:19,643 - #21 }
INFO  22:54:19,643 - #21 }
INFO  22:54:19,643 - =====================SINTAKSNO_STABLO=========================
INFO  22:54:19,645 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:54:19,645 - ==============================================================
INFO  22:54:19,659 - Pocetak obrade programa Program na liniji 1
INFO  22:54:19,659 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:54:19,660 - Deklarisana konstanta c na liniji 2
INFO  22:54:19,660 - Deklarisana konstanta d na liniji 2
INFO  22:54:19,660 - Deklarisana konstanta g na liniji 2
INFO  22:54:19,660 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:54:19,660 - Deklarisana promenljiva e na liniji 3
INFO  22:54:19,660 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:54:19,660 - Deklarisan niz z na liniji 3
INFO  22:54:19,661 - Pocetak obrade metode main na liniji 5
INFO  22:54:19,661 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:54:19,661 - Zavrsetak obrade programa Program na liniji 1
INFO  22:54:19,661 - ======================TABELA_SIMBOLA==========================
INFO  22:54:19,662 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:54:19,663 - ==============================================================
INFO  22:54:19,664 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:54:19,664 - ==============================================================
INFO  22:54:19,664 - ======================GENERISANJE_KODA========================
INFO  22:54:19,669 - Generisanje koda uspesno zavrseno!
INFO  22:54:19,669 - Generisanje izlaznog fajla test\program.obj
INFO  22:54:19,669 - ==============================================================
INFO  22:55:42,653 - Obrada ulaznog fajla test\program.mj
INFO  22:55:42,731 - #2 program
INFO  22:55:42,731 - #8 Program
INFO  22:55:42,731 - #5 const
INFO  22:55:42,732 - #8 int
INFO  22:55:42,732 - #8 c
INFO  22:55:42,733 - #24 =
INFO  22:55:42,733 - #9 10
INFO  22:55:42,733 - #28 ,
INFO  22:55:42,734 - #8 d
INFO  22:55:42,735 - #24 =
INFO  22:55:42,735 - #9 99
INFO  22:55:42,735 - #28 ,
INFO  22:55:42,735 - #8 g
INFO  22:55:42,735 - #24 =
INFO  22:55:42,735 - #9 2
INFO  22:55:42,735 - #27 ;
INFO  22:55:42,735 - #8 int
INFO  22:55:42,738 - #8 e
INFO  22:55:42,738 - #27 ;
INFO  22:55:42,738 - #8 char
INFO  22:55:42,739 - #8 z
INFO  22:55:42,739 - #22 [
INFO  22:55:42,739 - #23 ]
INFO  22:55:42,739 - #27 ;
INFO  22:55:42,740 - #20 {
INFO  22:55:42,740 - #6 void
INFO  22:55:42,740 - #8 main
INFO  22:55:42,740 - #29 (
INFO  22:55:42,741 - #30 )
INFO  22:55:42,741 - #20 {
INFO  22:55:42,741 - #31 if
INFO  22:55:42,741 - #29 (
INFO  22:55:42,741 - #12 false
INFO  22:55:42,741 - #30 )
INFO  22:55:42,742 - #20 {
INFO  22:55:42,742 - #3 print
INFO  22:55:42,742 - #29 (
INFO  22:55:42,742 - #9 32
INFO  22:55:42,742 - #30 )
INFO  22:55:42,743 - #27 ;
INFO  22:55:42,743 - #3 print
INFO  22:55:42,743 - #29 (
INFO  22:55:42,743 - #9 64
INFO  22:55:42,743 - #30 )
INFO  22:55:42,743 - #27 ;
INFO  22:55:42,743 - #21 }
INFO  22:55:42,744 - #3 print
INFO  22:55:42,744 - #29 (
INFO  22:55:42,744 - #9 65
INFO  22:55:42,744 - #30 )
INFO  22:55:42,744 - #27 ;
INFO  22:55:42,744 - #3 print
INFO  22:55:42,744 - #29 (
INFO  22:55:42,745 - #9 77
INFO  22:55:42,745 - #30 )
INFO  22:55:42,745 - #27 ;
INFO  22:55:42,745 - #21 }
INFO  22:55:42,745 - #21 }
INFO  22:55:42,746 - =====================SINTAKSNO_STABLO=========================
INFO  22:55:42,747 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:55:42,748 - ==============================================================
INFO  22:55:42,764 - Pocetak obrade programa Program na liniji 1
INFO  22:55:42,764 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:55:42,765 - Deklarisana konstanta c na liniji 2
INFO  22:55:42,765 - Deklarisana konstanta d na liniji 2
INFO  22:55:42,765 - Deklarisana konstanta g na liniji 2
INFO  22:55:42,765 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:55:42,765 - Deklarisana promenljiva e na liniji 3
INFO  22:55:42,765 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:55:42,766 - Deklarisan niz z na liniji 3
INFO  22:55:42,766 - Pocetak obrade metode main na liniji 5
INFO  22:55:42,767 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:55:42,767 - Zavrsetak obrade programa Program na liniji 1
INFO  22:55:42,767 - ======================TABELA_SIMBOLA==========================
INFO  22:55:42,768 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:55:42,771 - ==============================================================
INFO  22:55:42,771 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:55:42,771 - ==============================================================
INFO  22:55:42,771 - ======================GENERISANJE_KODA========================
INFO  22:55:42,777 - Generisanje koda uspesno zavrseno!
INFO  22:55:42,777 - Generisanje izlaznog fajla test\program.obj
INFO  22:55:42,777 - ==============================================================
INFO  22:56:22,760 - Obrada ulaznog fajla test\program.mj
INFO  22:56:22,843 - #2 program
INFO  22:56:22,843 - #8 Program
INFO  22:56:22,843 - #5 const
INFO  22:56:22,845 - #8 int
INFO  22:56:22,845 - #8 c
INFO  22:56:22,845 - #24 =
INFO  22:56:22,845 - #9 10
INFO  22:56:22,846 - #28 ,
INFO  22:56:22,846 - #8 d
INFO  22:56:22,847 - #24 =
INFO  22:56:22,847 - #9 99
INFO  22:56:22,847 - #28 ,
INFO  22:56:22,847 - #8 g
INFO  22:56:22,847 - #24 =
INFO  22:56:22,847 - #9 2
INFO  22:56:22,847 - #27 ;
INFO  22:56:22,848 - #8 int
INFO  22:56:22,849 - #8 e
INFO  22:56:22,849 - #27 ;
INFO  22:56:22,849 - #8 char
INFO  22:56:22,850 - #8 z
INFO  22:56:22,850 - #22 [
INFO  22:56:22,851 - #23 ]
INFO  22:56:22,851 - #27 ;
INFO  22:56:22,851 - #20 {
INFO  22:56:22,851 - #6 void
INFO  22:56:22,851 - #8 main
INFO  22:56:22,851 - #29 (
INFO  22:56:22,852 - #30 )
INFO  22:56:22,852 - #20 {
INFO  22:56:22,852 - #31 if
INFO  22:56:22,852 - #29 (
INFO  22:56:22,852 - #12 false
INFO  22:56:22,852 - #30 )
INFO  22:56:22,853 - #20 {
INFO  22:56:22,853 - #3 print
INFO  22:56:22,853 - #29 (
INFO  22:56:22,853 - #9 32
INFO  22:56:22,854 - #30 )
INFO  22:56:22,854 - #27 ;
INFO  22:56:22,854 - #3 print
INFO  22:56:22,854 - #29 (
INFO  22:56:22,854 - #9 64
INFO  22:56:22,854 - #30 )
INFO  22:56:22,854 - #27 ;
INFO  22:56:22,854 - #21 }
INFO  22:56:22,855 - #3 print
INFO  22:56:22,855 - #29 (
INFO  22:56:22,855 - #9 65
INFO  22:56:22,855 - #30 )
INFO  22:56:22,855 - #27 ;
INFO  22:56:22,855 - #3 print
INFO  22:56:22,855 - #29 (
INFO  22:56:22,855 - #9 77
INFO  22:56:22,855 - #30 )
INFO  22:56:22,856 - #27 ;
INFO  22:56:22,856 - #21 }
INFO  22:56:22,856 - #21 }
INFO  22:56:22,856 - =====================SINTAKSNO_STABLO=========================
INFO  22:56:22,858 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:56:22,858 - ==============================================================
INFO  22:56:22,873 - Pocetak obrade programa Program na liniji 1
INFO  22:56:22,873 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:56:22,874 - Deklarisana konstanta c na liniji 2
INFO  22:56:22,875 - Deklarisana konstanta d na liniji 2
INFO  22:56:22,875 - Deklarisana konstanta g na liniji 2
INFO  22:56:22,875 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:56:22,875 - Deklarisana promenljiva e na liniji 3
INFO  22:56:22,875 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:56:22,876 - Deklarisan niz z na liniji 3
INFO  22:56:22,877 - Pocetak obrade metode main na liniji 5
INFO  22:56:22,878 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:56:22,878 - Zavrsetak obrade programa Program na liniji 1
INFO  22:56:22,878 - ======================TABELA_SIMBOLA==========================
INFO  22:56:22,879 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:56:22,880 - ==============================================================
INFO  22:56:22,880 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:56:22,880 - ==============================================================
INFO  22:56:22,880 - ======================GENERISANJE_KODA========================
INFO  22:56:22,885 - Generisanje koda uspesno zavrseno!
INFO  22:56:22,886 - Generisanje izlaznog fajla test\program.obj
INFO  22:56:22,886 - ==============================================================
INFO  22:57:11,612 - Obrada ulaznog fajla test\program.mj
INFO  22:57:11,688 - #2 program
INFO  22:57:11,688 - #8 Program
INFO  22:57:11,688 - #5 const
INFO  22:57:11,690 - #8 int
INFO  22:57:11,690 - #8 c
INFO  22:57:11,691 - #24 =
INFO  22:57:11,691 - #9 10
INFO  22:57:11,691 - #28 ,
INFO  22:57:11,692 - #8 d
INFO  22:57:11,693 - #24 =
INFO  22:57:11,693 - #9 99
INFO  22:57:11,693 - #28 ,
INFO  22:57:11,693 - #8 g
INFO  22:57:11,693 - #24 =
INFO  22:57:11,693 - #9 2
INFO  22:57:11,693 - #27 ;
INFO  22:57:11,693 - #8 int
INFO  22:57:11,695 - #8 e
INFO  22:57:11,695 - #27 ;
INFO  22:57:11,695 - #8 char
INFO  22:57:11,696 - #8 z
INFO  22:57:11,697 - #22 [
INFO  22:57:11,697 - #23 ]
INFO  22:57:11,697 - #27 ;
INFO  22:57:11,697 - #20 {
INFO  22:57:11,697 - #6 void
INFO  22:57:11,697 - #8 main
INFO  22:57:11,697 - #29 (
INFO  22:57:11,698 - #30 )
INFO  22:57:11,698 - #20 {
INFO  22:57:11,698 - #31 if
INFO  22:57:11,699 - #29 (
INFO  22:57:11,699 - #12 false
INFO  22:57:11,699 - #30 )
INFO  22:57:11,700 - #20 {
INFO  22:57:11,700 - #3 print
INFO  22:57:11,700 - #29 (
INFO  22:57:11,700 - #9 32
INFO  22:57:11,700 - #30 )
INFO  22:57:11,700 - #27 ;
INFO  22:57:11,700 - #3 print
INFO  22:57:11,701 - #29 (
INFO  22:57:11,701 - #9 64
INFO  22:57:11,701 - #30 )
INFO  22:57:11,701 - #27 ;
INFO  22:57:11,701 - #21 }
INFO  22:57:11,701 - #3 print
INFO  22:57:11,701 - #29 (
INFO  22:57:11,702 - #9 65
INFO  22:57:11,702 - #30 )
INFO  22:57:11,702 - #27 ;
INFO  22:57:11,702 - #3 print
INFO  22:57:11,702 - #29 (
INFO  22:57:11,702 - #9 77
INFO  22:57:11,702 - #30 )
INFO  22:57:11,702 - #27 ;
INFO  22:57:11,702 - #21 }
INFO  22:57:11,702 - #21 }
INFO  22:57:11,703 - =====================SINTAKSNO_STABLO=========================
INFO  22:57:11,705 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:57:11,705 - ==============================================================
INFO  22:57:11,718 - Pocetak obrade programa Program na liniji 1
INFO  22:57:11,719 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:57:11,720 - Deklarisana konstanta c na liniji 2
INFO  22:57:11,720 - Deklarisana konstanta d na liniji 2
INFO  22:57:11,721 - Deklarisana konstanta g na liniji 2
INFO  22:57:11,721 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:57:11,721 - Deklarisana promenljiva e na liniji 3
INFO  22:57:11,721 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:57:11,721 - Deklarisan niz z na liniji 3
INFO  22:57:11,723 - Pocetak obrade metode main na liniji 5
INFO  22:57:11,723 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:57:11,723 - Zavrsetak obrade programa Program na liniji 1
INFO  22:57:11,723 - ======================TABELA_SIMBOLA==========================
INFO  22:57:11,724 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:57:11,726 - ==============================================================
INFO  22:57:11,726 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:57:11,726 - ==============================================================
INFO  22:57:11,726 - ======================GENERISANJE_KODA========================
INFO  22:57:11,731 - Generisanje koda uspesno zavrseno!
INFO  22:57:11,731 - Generisanje izlaznog fajla test\program.obj
INFO  22:57:11,731 - ==============================================================
INFO  22:58:43,194 - Obrada ulaznog fajla test\program.mj
INFO  22:58:43,297 - #2 program
INFO  22:58:43,297 - #8 Program
INFO  22:58:43,297 - #5 const
INFO  22:58:43,298 - #8 int
INFO  22:58:43,298 - #8 c
INFO  22:58:43,299 - #24 =
INFO  22:58:43,299 - #9 10
INFO  22:58:43,299 - #28 ,
INFO  22:58:43,301 - #8 d
INFO  22:58:43,301 - #24 =
INFO  22:58:43,301 - #9 99
INFO  22:58:43,301 - #28 ,
INFO  22:58:43,301 - #8 g
INFO  22:58:43,301 - #24 =
INFO  22:58:43,302 - #9 2
INFO  22:58:43,302 - #27 ;
INFO  22:58:43,302 - #8 int
INFO  22:58:43,303 - #8 e
INFO  22:58:43,303 - #27 ;
INFO  22:58:43,304 - #8 char
INFO  22:58:43,305 - #8 z
INFO  22:58:43,305 - #22 [
INFO  22:58:43,305 - #23 ]
INFO  22:58:43,306 - #27 ;
INFO  22:58:43,306 - #20 {
INFO  22:58:43,306 - #6 void
INFO  22:58:43,306 - #8 main
INFO  22:58:43,306 - #29 (
INFO  22:58:43,307 - #30 )
INFO  22:58:43,307 - #20 {
INFO  22:58:43,307 - #31 if
INFO  22:58:43,308 - #29 (
INFO  22:58:43,308 - #12 false
INFO  22:58:43,308 - #30 )
INFO  22:58:43,309 - #20 {
INFO  22:58:43,309 - #3 print
INFO  22:58:43,309 - #29 (
INFO  22:58:43,310 - #9 32
INFO  22:58:43,310 - #30 )
INFO  22:58:43,310 - #27 ;
INFO  22:58:43,310 - #3 print
INFO  22:58:43,310 - #29 (
INFO  22:58:43,311 - #9 64
INFO  22:58:43,311 - #30 )
INFO  22:58:43,311 - #27 ;
INFO  22:58:43,311 - #21 }
INFO  22:58:43,311 - #3 print
INFO  22:58:43,312 - #29 (
INFO  22:58:43,312 - #9 65
INFO  22:58:43,312 - #30 )
INFO  22:58:43,312 - #27 ;
INFO  22:58:43,312 - #3 print
INFO  22:58:43,313 - #29 (
INFO  22:58:43,313 - #9 77
INFO  22:58:43,313 - #30 )
INFO  22:58:43,313 - #27 ;
INFO  22:58:43,313 - #21 }
INFO  22:58:43,313 - #21 }
INFO  22:58:43,314 - =====================SINTAKSNO_STABLO=========================
INFO  22:58:43,316 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  22:58:43,316 - ==============================================================
INFO  22:58:43,331 - Pocetak obrade programa Program na liniji 1
INFO  22:58:43,331 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  22:58:43,332 - Deklarisana konstanta c na liniji 2
INFO  22:58:43,332 - Deklarisana konstanta d na liniji 2
INFO  22:58:43,332 - Deklarisana konstanta g na liniji 2
INFO  22:58:43,332 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  22:58:43,333 - Deklarisana promenljiva e na liniji 3
INFO  22:58:43,333 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  22:58:43,333 - Deklarisan niz z na liniji 3
INFO  22:58:43,333 - Pocetak obrade metode main na liniji 5
INFO  22:58:43,334 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  22:58:43,334 - Zavrsetak obrade programa Program na liniji 1
INFO  22:58:43,334 - ======================TABELA_SIMBOLA==========================
INFO  22:58:43,334 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  22:58:43,336 - ==============================================================
INFO  22:58:43,336 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  22:58:43,336 - ==============================================================
INFO  22:58:43,336 - ======================GENERISANJE_KODA========================
INFO  22:58:43,341 - Generisanje koda uspesno zavrseno!
INFO  22:58:43,342 - Generisanje izlaznog fajla test\program.obj
INFO  22:58:43,342 - ==============================================================
INFO  23:00:08,650 - Obrada ulaznog fajla test\program.mj
INFO  23:00:08,737 - #2 program
INFO  23:00:08,738 - #8 Program
INFO  23:00:08,738 - #5 const
INFO  23:00:08,739 - #8 int
INFO  23:00:08,739 - #8 c
INFO  23:00:08,739 - #24 =
INFO  23:00:08,739 - #9 10
INFO  23:00:08,740 - #28 ,
INFO  23:00:08,740 - #8 d
INFO  23:00:08,740 - #24 =
INFO  23:00:08,741 - #9 99
INFO  23:00:08,741 - #28 ,
INFO  23:00:08,741 - #8 g
INFO  23:00:08,741 - #24 =
INFO  23:00:08,741 - #9 2
INFO  23:00:08,741 - #27 ;
INFO  23:00:08,741 - #8 int
INFO  23:00:08,742 - #8 e
INFO  23:00:08,742 - #27 ;
INFO  23:00:08,743 - #8 char
INFO  23:00:08,743 - #8 z
INFO  23:00:08,744 - #22 [
INFO  23:00:08,744 - #23 ]
INFO  23:00:08,744 - #27 ;
INFO  23:00:08,744 - #20 {
INFO  23:00:08,744 - #6 void
INFO  23:00:08,744 - #8 main
INFO  23:00:08,744 - #29 (
INFO  23:00:08,745 - #30 )
INFO  23:00:08,746 - #20 {
INFO  23:00:08,746 - #31 if
INFO  23:00:08,746 - #29 (
INFO  23:00:08,746 - #12 false
INFO  23:00:08,746 - #30 )
INFO  23:00:08,747 - #20 {
INFO  23:00:08,747 - #3 print
INFO  23:00:08,747 - #29 (
INFO  23:00:08,747 - #9 32
INFO  23:00:08,747 - #30 )
INFO  23:00:08,747 - #27 ;
INFO  23:00:08,748 - #3 print
INFO  23:00:08,748 - #29 (
INFO  23:00:08,748 - #9 64
INFO  23:00:08,748 - #30 )
INFO  23:00:08,748 - #27 ;
INFO  23:00:08,748 - #21 }
INFO  23:00:08,748 - #3 print
INFO  23:00:08,749 - #29 (
INFO  23:00:08,749 - #9 65
INFO  23:00:08,749 - #30 )
INFO  23:00:08,749 - #27 ;
INFO  23:00:08,749 - #3 print
INFO  23:00:08,749 - #29 (
INFO  23:00:08,749 - #9 77
INFO  23:00:08,749 - #30 )
INFO  23:00:08,750 - #27 ;
INFO  23:00:08,750 - #21 }
INFO  23:00:08,750 - #21 }
INFO  23:00:08,750 - =====================SINTAKSNO_STABLO=========================
INFO  23:00:08,754 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:00:08,758 - ==============================================================
INFO  23:00:08,774 - Pocetak obrade programa Program na liniji 1
INFO  23:00:08,774 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:00:08,775 - Deklarisana konstanta c na liniji 2
INFO  23:00:08,775 - Deklarisana konstanta d na liniji 2
INFO  23:00:08,776 - Deklarisana konstanta g na liniji 2
INFO  23:00:08,776 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:00:08,776 - Deklarisana promenljiva e na liniji 3
INFO  23:00:08,776 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:00:08,776 - Deklarisan niz z na liniji 3
INFO  23:00:08,777 - Pocetak obrade metode main na liniji 5
INFO  23:00:08,777 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:00:08,777 - Zavrsetak obrade programa Program na liniji 1
INFO  23:00:08,777 - ======================TABELA_SIMBOLA==========================
INFO  23:00:08,778 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:00:08,779 - ==============================================================
INFO  23:00:08,779 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:00:08,779 - ==============================================================
INFO  23:00:08,779 - ======================GENERISANJE_KODA========================
INFO  23:00:08,786 - Generisanje koda uspesno zavrseno!
INFO  23:00:08,786 - Generisanje izlaznog fajla test\program.obj
INFO  23:00:08,786 - ==============================================================
INFO  23:00:25,872 - Obrada ulaznog fajla test\program.mj
INFO  23:00:25,957 - #2 program
INFO  23:00:25,957 - #8 Program
INFO  23:00:25,958 - #5 const
INFO  23:00:25,958 - #8 int
INFO  23:00:25,959 - #8 c
INFO  23:00:25,959 - #24 =
INFO  23:00:25,959 - #9 10
INFO  23:00:25,959 - #28 ,
INFO  23:00:25,960 - #8 d
INFO  23:00:25,961 - #24 =
INFO  23:00:25,961 - #9 99
INFO  23:00:25,961 - #28 ,
INFO  23:00:25,961 - #8 g
INFO  23:00:25,961 - #24 =
INFO  23:00:25,961 - #9 2
INFO  23:00:25,961 - #27 ;
INFO  23:00:25,961 - #8 int
INFO  23:00:25,963 - #8 e
INFO  23:00:25,963 - #27 ;
INFO  23:00:25,963 - #8 char
INFO  23:00:25,964 - #8 z
INFO  23:00:25,964 - #22 [
INFO  23:00:25,964 - #23 ]
INFO  23:00:25,964 - #27 ;
INFO  23:00:25,965 - #20 {
INFO  23:00:25,965 - #6 void
INFO  23:00:25,965 - #8 main
INFO  23:00:25,965 - #29 (
INFO  23:00:25,966 - #30 )
INFO  23:00:25,966 - #20 {
INFO  23:00:25,966 - #31 if
INFO  23:00:25,966 - #29 (
INFO  23:00:25,966 - #12 false
INFO  23:00:25,966 - #30 )
INFO  23:00:25,967 - #20 {
INFO  23:00:25,967 - #3 print
INFO  23:00:25,967 - #29 (
INFO  23:00:25,967 - #9 32
INFO  23:00:25,967 - #30 )
INFO  23:00:25,967 - #27 ;
INFO  23:00:25,967 - #3 print
INFO  23:00:25,968 - #29 (
INFO  23:00:25,968 - #9 64
INFO  23:00:25,968 - #30 )
INFO  23:00:25,968 - #27 ;
INFO  23:00:25,968 - #21 }
INFO  23:00:25,968 - #3 print
INFO  23:00:25,969 - #29 (
INFO  23:00:25,969 - #9 65
INFO  23:00:25,969 - #30 )
INFO  23:00:25,969 - #27 ;
INFO  23:00:25,969 - #3 print
INFO  23:00:25,969 - #29 (
INFO  23:00:25,969 - #9 77
INFO  23:00:25,969 - #30 )
INFO  23:00:25,970 - #27 ;
INFO  23:00:25,970 - #21 }
INFO  23:00:25,970 - #21 }
INFO  23:00:25,971 - =====================SINTAKSNO_STABLO=========================
INFO  23:00:25,973 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:00:25,974 - ==============================================================
INFO  23:00:25,988 - Pocetak obrade programa Program na liniji 1
INFO  23:00:25,988 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:00:25,990 - Deklarisana konstanta c na liniji 2
INFO  23:00:25,990 - Deklarisana konstanta d na liniji 2
INFO  23:00:25,991 - Deklarisana konstanta g na liniji 2
INFO  23:00:25,991 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:00:25,991 - Deklarisana promenljiva e na liniji 3
INFO  23:00:25,991 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:00:25,991 - Deklarisan niz z na liniji 3
INFO  23:00:25,992 - Pocetak obrade metode main na liniji 5
INFO  23:00:25,992 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:00:25,992 - Zavrsetak obrade programa Program na liniji 1
INFO  23:00:25,992 - ======================TABELA_SIMBOLA==========================
INFO  23:00:25,993 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:00:25,995 - ==============================================================
INFO  23:00:25,995 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:00:25,995 - ==============================================================
INFO  23:00:25,995 - ======================GENERISANJE_KODA========================
INFO  23:00:26,000 - Generisanje koda uspesno zavrseno!
INFO  23:00:26,000 - Generisanje izlaznog fajla test\program.obj
INFO  23:00:26,000 - ==============================================================
INFO  23:10:41,591 - Obrada ulaznog fajla test\program.mj
INFO  23:10:41,675 - #2 program
INFO  23:10:41,675 - #8 Program
INFO  23:10:41,675 - #5 const
INFO  23:10:41,677 - #8 int
INFO  23:10:41,677 - #8 c
INFO  23:10:41,678 - #24 =
INFO  23:10:41,678 - #9 10
INFO  23:10:41,679 - #28 ,
INFO  23:10:41,680 - #8 d
INFO  23:10:41,680 - #24 =
INFO  23:10:41,680 - #9 99
INFO  23:10:41,680 - #28 ,
INFO  23:10:41,681 - #8 g
INFO  23:10:41,681 - #24 =
INFO  23:10:41,681 - #9 2
INFO  23:10:41,681 - #27 ;
INFO  23:10:41,681 - #8 int
INFO  23:10:41,682 - #8 e
INFO  23:10:41,682 - #27 ;
INFO  23:10:41,683 - #8 char
INFO  23:10:41,684 - #8 z
INFO  23:10:41,684 - #22 [
INFO  23:10:41,684 - #23 ]
INFO  23:10:41,684 - #27 ;
INFO  23:10:41,685 - #20 {
INFO  23:10:41,685 - #6 void
INFO  23:10:41,685 - #8 main
INFO  23:10:41,685 - #29 (
INFO  23:10:41,686 - #30 )
INFO  23:10:41,686 - #20 {
INFO  23:10:41,686 - #31 if
INFO  23:10:41,686 - #29 (
INFO  23:10:41,686 - #12 false
INFO  23:10:41,686 - #30 )
INFO  23:10:41,687 - #20 {
INFO  23:10:41,687 - #3 print
INFO  23:10:41,687 - #29 (
INFO  23:10:41,687 - #9 32
INFO  23:10:41,688 - #30 )
INFO  23:10:41,688 - #27 ;
INFO  23:10:41,688 - #3 print
INFO  23:10:41,688 - #29 (
INFO  23:10:41,688 - #9 64
INFO  23:10:41,688 - #30 )
INFO  23:10:41,688 - #27 ;
INFO  23:10:41,689 - #21 }
INFO  23:10:41,689 - #3 print
INFO  23:10:41,689 - #29 (
INFO  23:10:41,689 - #9 65
INFO  23:10:41,689 - #30 )
INFO  23:10:41,689 - #27 ;
INFO  23:10:41,690 - #3 print
INFO  23:10:41,690 - #29 (
INFO  23:10:41,690 - #9 77
INFO  23:10:41,690 - #30 )
INFO  23:10:41,690 - #27 ;
INFO  23:10:41,690 - #21 }
INFO  23:10:41,690 - #21 }
INFO  23:10:41,692 - =====================SINTAKSNO_STABLO=========================
INFO  23:10:41,694 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:10:41,694 - ==============================================================
INFO  23:10:41,705 - Pocetak obrade programa Program na liniji 1
INFO  23:10:41,705 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:10:41,706 - Deklarisana konstanta c na liniji 2
INFO  23:10:41,706 - Deklarisana konstanta d na liniji 2
INFO  23:10:41,707 - Deklarisana konstanta g na liniji 2
INFO  23:10:41,707 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:10:41,707 - Deklarisana promenljiva e na liniji 3
INFO  23:10:41,707 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:10:41,707 - Deklarisan niz z na liniji 3
INFO  23:10:41,708 - Pocetak obrade metode main na liniji 5
INFO  23:10:41,708 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:10:41,708 - Zavrsetak obrade programa Program na liniji 1
INFO  23:10:41,708 - ======================TABELA_SIMBOLA==========================
INFO  23:10:41,709 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:10:41,711 - ==============================================================
INFO  23:10:41,711 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:10:41,711 - ==============================================================
INFO  23:10:41,712 - ======================GENERISANJE_KODA========================
INFO  23:10:41,716 - Generisanje koda uspesno zavrseno!
INFO  23:10:41,717 - Generisanje izlaznog fajla test\program.obj
INFO  23:10:41,717 - ==============================================================
INFO  23:15:26,616 - Obrada ulaznog fajla test\program.mj
INFO  23:15:26,682 - #2 program
INFO  23:15:26,683 - #8 Program
INFO  23:15:26,683 - #5 const
INFO  23:15:26,683 - #8 int
INFO  23:15:26,684 - #8 c
INFO  23:15:26,684 - #24 =
INFO  23:15:26,684 - #9 10
INFO  23:15:26,684 - #28 ,
INFO  23:15:26,685 - #8 d
INFO  23:15:26,685 - #24 =
INFO  23:15:26,686 - #9 99
INFO  23:15:26,686 - #28 ,
INFO  23:15:26,686 - #8 g
INFO  23:15:26,686 - #24 =
INFO  23:15:26,686 - #9 2
INFO  23:15:26,686 - #27 ;
INFO  23:15:26,686 - #8 int
INFO  23:15:26,688 - #8 e
INFO  23:15:26,688 - #27 ;
INFO  23:15:26,688 - #8 char
INFO  23:15:26,690 - #8 z
INFO  23:15:26,690 - #22 [
INFO  23:15:26,690 - #23 ]
INFO  23:15:26,690 - #27 ;
INFO  23:15:26,690 - #20 {
INFO  23:15:26,690 - #6 void
INFO  23:15:26,691 - #8 main
INFO  23:15:26,691 - #29 (
INFO  23:15:26,692 - #30 )
INFO  23:15:26,692 - #20 {
INFO  23:15:26,692 - #31 if
INFO  23:15:26,692 - #29 (
INFO  23:15:26,692 - #12 false
INFO  23:15:26,692 - #30 )
INFO  23:15:26,693 - #20 {
INFO  23:15:26,693 - #3 print
INFO  23:15:26,693 - #29 (
INFO  23:15:26,693 - #9 32
INFO  23:15:26,693 - #30 )
INFO  23:15:26,694 - #27 ;
INFO  23:15:26,694 - #3 print
INFO  23:15:26,694 - #29 (
INFO  23:15:26,694 - #9 64
INFO  23:15:26,694 - #30 )
INFO  23:15:26,694 - #27 ;
INFO  23:15:26,695 - #21 }
INFO  23:15:26,695 - #3 print
INFO  23:15:26,696 - #29 (
INFO  23:15:26,696 - #9 65
INFO  23:15:26,696 - #30 )
INFO  23:15:26,697 - #27 ;
INFO  23:15:26,697 - #3 print
INFO  23:15:26,697 - #29 (
INFO  23:15:26,697 - #9 77
INFO  23:15:26,697 - #30 )
INFO  23:15:26,697 - #27 ;
INFO  23:15:26,697 - #21 }
INFO  23:15:26,697 - #21 }
INFO  23:15:26,698 - =====================SINTAKSNO_STABLO=========================
INFO  23:15:26,700 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:15:26,700 - ==============================================================
INFO  23:15:26,715 - Pocetak obrade programa Program na liniji 1
INFO  23:15:26,715 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:15:26,716 - Deklarisana konstanta c na liniji 2
INFO  23:15:26,717 - Deklarisana konstanta d na liniji 2
INFO  23:15:26,717 - Deklarisana konstanta g na liniji 2
INFO  23:15:26,717 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:15:26,717 - Deklarisana promenljiva e na liniji 3
INFO  23:15:26,717 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:15:26,717 - Deklarisan niz z na liniji 3
INFO  23:15:26,718 - Pocetak obrade metode main na liniji 5
INFO  23:15:26,718 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:15:26,719 - Zavrsetak obrade programa Program na liniji 1
INFO  23:15:26,719 - ======================TABELA_SIMBOLA==========================
INFO  23:15:26,719 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:15:26,721 - ==============================================================
INFO  23:15:26,721 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:15:26,721 - ==============================================================
INFO  23:15:26,721 - ======================GENERISANJE_KODA========================
INFO  23:15:26,728 - Generisanje koda uspesno zavrseno!
INFO  23:15:26,728 - Generisanje izlaznog fajla test\program.obj
INFO  23:15:26,728 - ==============================================================
INFO  23:17:03,425 - Obrada ulaznog fajla test\program.mj
INFO  23:17:03,505 - #2 program
INFO  23:17:03,506 - #8 Program
INFO  23:17:03,506 - #5 const
INFO  23:17:03,507 - #8 int
INFO  23:17:03,507 - #8 c
INFO  23:17:03,508 - #24 =
INFO  23:17:03,508 - #9 10
INFO  23:17:03,508 - #28 ,
INFO  23:17:03,509 - #8 d
INFO  23:17:03,509 - #24 =
INFO  23:17:03,509 - #9 99
INFO  23:17:03,510 - #28 ,
INFO  23:17:03,510 - #8 g
INFO  23:17:03,510 - #24 =
INFO  23:17:03,510 - #9 2
INFO  23:17:03,510 - #27 ;
INFO  23:17:03,510 - #8 int
INFO  23:17:03,511 - #8 e
INFO  23:17:03,511 - #27 ;
INFO  23:17:03,511 - #8 char
INFO  23:17:03,512 - #8 z
INFO  23:17:03,512 - #22 [
INFO  23:17:03,513 - #23 ]
INFO  23:17:03,513 - #27 ;
INFO  23:17:03,513 - #20 {
INFO  23:17:03,513 - #6 void
INFO  23:17:03,513 - #8 main
INFO  23:17:03,513 - #29 (
INFO  23:17:03,514 - #30 )
INFO  23:17:03,514 - #20 {
INFO  23:17:03,514 - #31 if
INFO  23:17:03,515 - #29 (
INFO  23:17:03,515 - #12 false
INFO  23:17:03,515 - #30 )
INFO  23:17:03,516 - #20 {
INFO  23:17:03,516 - #3 print
INFO  23:17:03,516 - #29 (
INFO  23:17:03,516 - #9 32
INFO  23:17:03,516 - #30 )
INFO  23:17:03,516 - #27 ;
INFO  23:17:03,516 - #3 print
INFO  23:17:03,517 - #29 (
INFO  23:17:03,517 - #9 64
INFO  23:17:03,517 - #30 )
INFO  23:17:03,517 - #27 ;
INFO  23:17:03,517 - #21 }
INFO  23:17:03,517 - #3 print
INFO  23:17:03,518 - #29 (
INFO  23:17:03,518 - #9 65
INFO  23:17:03,518 - #30 )
INFO  23:17:03,518 - #27 ;
INFO  23:17:03,518 - #3 print
INFO  23:17:03,518 - #29 (
INFO  23:17:03,518 - #9 77
INFO  23:17:03,518 - #30 )
INFO  23:17:03,519 - #27 ;
INFO  23:17:03,519 - #21 }
INFO  23:17:03,519 - #21 }
INFO  23:17:03,520 - =====================SINTAKSNO_STABLO=========================
INFO  23:17:03,522 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:17:03,522 - ==============================================================
INFO  23:17:03,538 - Pocetak obrade programa Program na liniji 1
INFO  23:17:03,538 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:17:03,539 - Deklarisana konstanta c na liniji 2
INFO  23:17:03,539 - Deklarisana konstanta d na liniji 2
INFO  23:17:03,539 - Deklarisana konstanta g na liniji 2
INFO  23:17:03,539 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:17:03,540 - Deklarisana promenljiva e na liniji 3
INFO  23:17:03,540 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:17:03,540 - Deklarisan niz z na liniji 3
INFO  23:17:03,540 - Pocetak obrade metode main na liniji 5
INFO  23:17:03,541 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:17:03,541 - Zavrsetak obrade programa Program na liniji 1
INFO  23:17:03,541 - ======================TABELA_SIMBOLA==========================
INFO  23:17:03,542 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:17:03,543 - ==============================================================
INFO  23:17:03,543 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:17:03,543 - ==============================================================
INFO  23:17:03,543 - ======================GENERISANJE_KODA========================
INFO  23:17:03,548 - Generisanje koda uspesno zavrseno!
INFO  23:17:03,549 - Generisanje izlaznog fajla test\program.obj
INFO  23:17:03,549 - ==============================================================
INFO  23:18:44,194 - Obrada ulaznog fajla test\program.mj
INFO  23:18:44,291 - #2 program
INFO  23:18:44,291 - #8 Program
INFO  23:18:44,291 - #5 const
INFO  23:18:44,292 - #8 int
INFO  23:18:44,292 - #8 c
INFO  23:18:44,293 - #24 =
INFO  23:18:44,294 - #9 10
INFO  23:18:44,294 - #28 ,
INFO  23:18:44,295 - #8 d
INFO  23:18:44,297 - #24 =
INFO  23:18:44,297 - #9 99
INFO  23:18:44,297 - #28 ,
INFO  23:18:44,297 - #8 g
INFO  23:18:44,297 - #24 =
INFO  23:18:44,298 - #9 2
INFO  23:18:44,298 - #27 ;
INFO  23:18:44,298 - #8 int
INFO  23:18:44,299 - #8 e
INFO  23:18:44,299 - #27 ;
INFO  23:18:44,300 - #8 char
INFO  23:18:44,301 - #8 z
INFO  23:18:44,301 - #22 [
INFO  23:18:44,301 - #23 ]
INFO  23:18:44,302 - #27 ;
INFO  23:18:44,302 - #20 {
INFO  23:18:44,302 - #6 void
INFO  23:18:44,302 - #8 main
INFO  23:18:44,302 - #29 (
INFO  23:18:44,303 - #30 )
INFO  23:18:44,304 - #20 {
INFO  23:18:44,304 - #31 if
INFO  23:18:44,304 - #29 (
INFO  23:18:44,305 - #12 false
INFO  23:18:44,305 - #30 )
INFO  23:18:44,307 - #20 {
INFO  23:18:44,308 - #3 print
INFO  23:18:44,308 - #29 (
INFO  23:18:44,308 - #9 32
INFO  23:18:44,308 - #30 )
INFO  23:18:44,308 - #27 ;
INFO  23:18:44,308 - #3 print
INFO  23:18:44,309 - #29 (
INFO  23:18:44,309 - #9 64
INFO  23:18:44,309 - #30 )
INFO  23:18:44,309 - #27 ;
INFO  23:18:44,309 - #21 }
INFO  23:18:44,309 - #3 print
INFO  23:18:44,310 - #29 (
INFO  23:18:44,310 - #9 65
INFO  23:18:44,310 - #30 )
INFO  23:18:44,310 - #27 ;
INFO  23:18:44,310 - #3 print
INFO  23:18:44,310 - #29 (
INFO  23:18:44,310 - #9 77
INFO  23:18:44,310 - #30 )
INFO  23:18:44,310 - #27 ;
INFO  23:18:44,311 - #21 }
INFO  23:18:44,311 - #21 }
INFO  23:18:44,312 - =====================SINTAKSNO_STABLO=========================
INFO  23:18:44,313 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:18:44,317 - ==============================================================
INFO  23:18:44,331 - Pocetak obrade programa Program na liniji 1
INFO  23:18:44,332 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:18:44,333 - Deklarisana konstanta c na liniji 2
INFO  23:18:44,333 - Deklarisana konstanta d na liniji 2
INFO  23:18:44,333 - Deklarisana konstanta g na liniji 2
INFO  23:18:44,333 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:18:44,333 - Deklarisana promenljiva e na liniji 3
INFO  23:18:44,333 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:18:44,333 - Deklarisan niz z na liniji 3
INFO  23:18:44,334 - Pocetak obrade metode main na liniji 5
INFO  23:18:44,334 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:18:44,334 - Zavrsetak obrade programa Program na liniji 1
INFO  23:18:44,334 - ======================TABELA_SIMBOLA==========================
INFO  23:18:44,335 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:18:44,336 - ==============================================================
INFO  23:18:44,337 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:18:44,337 - ==============================================================
INFO  23:18:44,337 - ======================GENERISANJE_KODA========================
INFO  23:18:44,342 - Generisanje koda uspesno zavrseno!
INFO  23:18:44,342 - Generisanje izlaznog fajla test\program.obj
INFO  23:18:44,342 - ==============================================================
INFO  23:19:04,491 - Obrada ulaznog fajla test\program.mj
INFO  23:19:04,609 - #2 program
INFO  23:19:04,609 - #8 Program
INFO  23:19:04,610 - #5 const
INFO  23:19:04,611 - #8 int
INFO  23:19:04,611 - #8 c
INFO  23:19:04,612 - #24 =
INFO  23:19:04,612 - #9 10
INFO  23:19:04,612 - #28 ,
INFO  23:19:04,614 - #8 d
INFO  23:19:04,614 - #24 =
INFO  23:19:04,614 - #9 99
INFO  23:19:04,614 - #28 ,
INFO  23:19:04,615 - #8 g
INFO  23:19:04,615 - #24 =
INFO  23:19:04,615 - #9 2
INFO  23:19:04,615 - #27 ;
INFO  23:19:04,615 - #8 int
INFO  23:19:04,617 - #8 e
INFO  23:19:04,617 - #27 ;
INFO  23:19:04,617 - #8 char
INFO  23:19:04,619 - #8 z
INFO  23:19:04,619 - #22 [
INFO  23:19:04,619 - #23 ]
INFO  23:19:04,620 - #27 ;
INFO  23:19:04,620 - #20 {
INFO  23:19:04,620 - #6 void
INFO  23:19:04,620 - #8 main
INFO  23:19:04,620 - #29 (
INFO  23:19:04,621 - #30 )
INFO  23:19:04,621 - #20 {
INFO  23:19:04,622 - #31 if
INFO  23:19:04,622 - #29 (
INFO  23:19:04,622 - #12 false
INFO  23:19:04,622 - #30 )
INFO  23:19:04,623 - #20 {
INFO  23:19:04,624 - #3 print
INFO  23:19:04,624 - #29 (
INFO  23:19:04,624 - #9 32
INFO  23:19:04,624 - #30 )
INFO  23:19:04,624 - #27 ;
INFO  23:19:04,625 - #3 print
INFO  23:19:04,625 - #29 (
INFO  23:19:04,625 - #9 64
INFO  23:19:04,625 - #30 )
INFO  23:19:04,625 - #27 ;
INFO  23:19:04,626 - #21 }
INFO  23:19:04,626 - #3 print
INFO  23:19:04,626 - #29 (
INFO  23:19:04,626 - #9 65
INFO  23:19:04,627 - #30 )
INFO  23:19:04,627 - #27 ;
INFO  23:19:04,627 - #3 print
INFO  23:19:04,628 - #29 (
INFO  23:19:04,628 - #9 77
INFO  23:19:04,628 - #30 )
INFO  23:19:04,628 - #27 ;
INFO  23:19:04,628 - #21 }
INFO  23:19:04,628 - #21 }
INFO  23:19:04,629 - =====================SINTAKSNO_STABLO=========================
INFO  23:19:04,631 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:19:04,631 - ==============================================================
INFO  23:19:04,649 - Pocetak obrade programa Program na liniji 1
INFO  23:19:04,649 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:19:04,650 - Deklarisana konstanta c na liniji 2
INFO  23:19:04,650 - Deklarisana konstanta d na liniji 2
INFO  23:19:04,651 - Deklarisana konstanta g na liniji 2
INFO  23:19:04,651 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:19:04,651 - Deklarisana promenljiva e na liniji 3
INFO  23:19:04,651 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:19:04,651 - Deklarisan niz z na liniji 3
INFO  23:19:04,652 - Pocetak obrade metode main na liniji 5
INFO  23:19:04,652 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:19:04,653 - Zavrsetak obrade programa Program na liniji 1
INFO  23:19:04,653 - ======================TABELA_SIMBOLA==========================
INFO  23:19:04,653 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:19:04,655 - ==============================================================
INFO  23:19:04,656 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:19:04,656 - ==============================================================
INFO  23:19:04,656 - ======================GENERISANJE_KODA========================
INFO  23:19:30,698 - Obrada ulaznog fajla test\program.mj
INFO  23:19:30,778 - #2 program
INFO  23:19:30,778 - #8 Program
INFO  23:19:30,778 - #5 const
INFO  23:19:30,779 - #8 int
INFO  23:19:30,779 - #8 c
INFO  23:19:30,780 - #24 =
INFO  23:19:30,780 - #9 10
INFO  23:19:30,780 - #28 ,
INFO  23:19:30,781 - #8 d
INFO  23:19:30,782 - #24 =
INFO  23:19:30,782 - #9 99
INFO  23:19:30,782 - #28 ,
INFO  23:19:30,782 - #8 g
INFO  23:19:30,782 - #24 =
INFO  23:19:30,782 - #9 2
INFO  23:19:30,782 - #27 ;
INFO  23:19:30,782 - #8 int
INFO  23:19:30,784 - #8 e
INFO  23:19:30,784 - #27 ;
INFO  23:19:30,784 - #8 char
INFO  23:19:30,786 - #8 z
INFO  23:19:30,786 - #22 [
INFO  23:19:30,786 - #23 ]
INFO  23:19:30,786 - #27 ;
INFO  23:19:30,787 - #20 {
INFO  23:19:30,787 - #6 void
INFO  23:19:30,787 - #8 main
INFO  23:19:30,787 - #29 (
INFO  23:19:30,788 - #30 )
INFO  23:19:30,788 - #20 {
INFO  23:19:30,788 - #31 if
INFO  23:19:30,788 - #29 (
INFO  23:19:30,788 - #12 false
INFO  23:19:30,788 - #30 )
INFO  23:19:30,789 - #20 {
INFO  23:19:30,789 - #3 print
INFO  23:19:30,789 - #29 (
INFO  23:19:30,789 - #9 32
INFO  23:19:30,789 - #30 )
INFO  23:19:30,789 - #27 ;
INFO  23:19:30,789 - #3 print
INFO  23:19:30,791 - #29 (
INFO  23:19:30,791 - #9 64
INFO  23:19:30,791 - #30 )
INFO  23:19:30,791 - #27 ;
INFO  23:19:30,791 - #21 }
INFO  23:19:30,791 - #3 print
INFO  23:19:30,792 - #29 (
INFO  23:19:30,792 - #9 65
INFO  23:19:30,792 - #30 )
INFO  23:19:30,792 - #27 ;
INFO  23:19:30,792 - #3 print
INFO  23:19:30,792 - #29 (
INFO  23:19:30,792 - #9 77
INFO  23:19:30,792 - #30 )
INFO  23:19:30,792 - #27 ;
INFO  23:19:30,792 - #21 }
INFO  23:19:30,792 - #21 }
INFO  23:19:30,793 - =====================SINTAKSNO_STABLO=========================
INFO  23:19:30,795 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:19:30,795 - ==============================================================
INFO  23:19:30,811 - Pocetak obrade programa Program na liniji 1
INFO  23:19:30,811 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:19:30,812 - Deklarisana konstanta c na liniji 2
INFO  23:19:30,812 - Deklarisana konstanta d na liniji 2
INFO  23:19:30,812 - Deklarisana konstanta g na liniji 2
INFO  23:19:30,812 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:19:30,812 - Deklarisana promenljiva e na liniji 3
INFO  23:19:30,812 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:19:30,813 - Deklarisan niz z na liniji 3
INFO  23:19:30,813 - Pocetak obrade metode main na liniji 5
INFO  23:19:30,814 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:19:30,814 - Zavrsetak obrade programa Program na liniji 1
INFO  23:19:30,814 - ======================TABELA_SIMBOLA==========================
INFO  23:19:30,815 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:19:30,817 - ==============================================================
INFO  23:19:30,817 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:19:30,817 - ==============================================================
INFO  23:19:30,817 - ======================GENERISANJE_KODA========================
INFO  23:19:30,823 - Generisanje koda uspesno zavrseno!
INFO  23:19:30,823 - Generisanje izlaznog fajla test\program.obj
INFO  23:19:30,823 - ==============================================================
INFO  23:20:30,888 - Obrada ulaznog fajla test\program.mj
INFO  23:20:30,965 - #2 program
INFO  23:20:30,966 - #8 Program
INFO  23:20:30,966 - #5 const
INFO  23:20:30,967 - #8 int
INFO  23:20:30,967 - #8 c
INFO  23:20:30,968 - #24 =
INFO  23:20:30,968 - #9 10
INFO  23:20:30,968 - #28 ,
INFO  23:20:30,969 - #8 d
INFO  23:20:30,969 - #24 =
INFO  23:20:30,970 - #9 99
INFO  23:20:30,970 - #28 ,
INFO  23:20:30,970 - #8 g
INFO  23:20:30,970 - #24 =
INFO  23:20:30,970 - #9 2
INFO  23:20:30,970 - #27 ;
INFO  23:20:30,970 - #8 int
INFO  23:20:30,972 - #8 e
INFO  23:20:30,973 - #27 ;
INFO  23:20:30,973 - #8 char
INFO  23:20:30,974 - #8 z
INFO  23:20:30,974 - #22 [
INFO  23:20:30,974 - #23 ]
INFO  23:20:30,975 - #27 ;
INFO  23:20:30,975 - #20 {
INFO  23:20:30,975 - #6 void
INFO  23:20:30,975 - #8 main
INFO  23:20:30,975 - #29 (
INFO  23:20:30,976 - #30 )
INFO  23:20:30,976 - #20 {
INFO  23:20:30,976 - #31 if
INFO  23:20:30,977 - #29 (
INFO  23:20:30,977 - #12 false
INFO  23:20:30,977 - #30 )
INFO  23:20:30,978 - #20 {
INFO  23:20:30,978 - #3 print
INFO  23:20:30,978 - #29 (
INFO  23:20:30,978 - #9 32
INFO  23:20:30,978 - #30 )
INFO  23:20:30,979 - #27 ;
INFO  23:20:30,979 - #3 print
INFO  23:20:30,979 - #29 (
INFO  23:20:30,979 - #9 64
INFO  23:20:30,979 - #30 )
INFO  23:20:30,979 - #27 ;
INFO  23:20:30,979 - #21 }
INFO  23:20:30,980 - #3 print
INFO  23:20:30,980 - #29 (
INFO  23:20:30,980 - #9 65
INFO  23:20:30,980 - #30 )
INFO  23:20:30,980 - #27 ;
INFO  23:20:30,981 - #3 print
INFO  23:20:30,981 - #29 (
INFO  23:20:30,981 - #9 77
INFO  23:20:30,981 - #30 )
INFO  23:20:30,981 - #27 ;
INFO  23:20:30,981 - #21 }
INFO  23:20:30,981 - #21 }
INFO  23:20:30,982 - =====================SINTAKSNO_STABLO=========================
INFO  23:20:30,984 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:20:30,985 - ==============================================================
INFO  23:20:31,001 - Pocetak obrade programa Program na liniji 1
INFO  23:20:31,001 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:20:31,002 - Deklarisana konstanta c na liniji 2
INFO  23:20:31,003 - Deklarisana konstanta d na liniji 2
INFO  23:20:31,003 - Deklarisana konstanta g na liniji 2
INFO  23:20:31,003 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:20:31,003 - Deklarisana promenljiva e na liniji 3
INFO  23:20:31,003 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:20:31,003 - Deklarisan niz z na liniji 3
INFO  23:20:31,004 - Pocetak obrade metode main na liniji 5
INFO  23:20:31,004 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:20:31,004 - Zavrsetak obrade programa Program na liniji 1
INFO  23:20:31,004 - ======================TABELA_SIMBOLA==========================
INFO  23:20:31,005 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:20:31,006 - ==============================================================
INFO  23:20:31,006 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:20:31,006 - ==============================================================
INFO  23:20:31,006 - ======================GENERISANJE_KODA========================
INFO  23:20:31,011 - Generisanje koda uspesno zavrseno!
INFO  23:20:31,012 - Generisanje izlaznog fajla test\program.obj
INFO  23:20:31,012 - ==============================================================
INFO  23:22:09,212 - Obrada ulaznog fajla test\program.mj
INFO  23:22:09,291 - #2 program
INFO  23:22:09,291 - #8 Program
INFO  23:22:09,291 - #5 const
INFO  23:22:09,292 - #8 int
INFO  23:22:09,292 - #8 c
INFO  23:22:09,294 - #24 =
INFO  23:22:09,294 - #9 10
INFO  23:22:09,294 - #28 ,
INFO  23:22:09,295 - #8 d
INFO  23:22:09,295 - #24 =
INFO  23:22:09,295 - #9 99
INFO  23:22:09,295 - #28 ,
INFO  23:22:09,295 - #8 g
INFO  23:22:09,295 - #24 =
INFO  23:22:09,296 - #9 2
INFO  23:22:09,296 - #27 ;
INFO  23:22:09,296 - #8 int
INFO  23:22:09,297 - #8 e
INFO  23:22:09,297 - #27 ;
INFO  23:22:09,297 - #8 char
INFO  23:22:09,298 - #8 z
INFO  23:22:09,298 - #22 [
INFO  23:22:09,298 - #23 ]
INFO  23:22:09,298 - #27 ;
INFO  23:22:09,298 - #20 {
INFO  23:22:09,299 - #6 void
INFO  23:22:09,299 - #8 main
INFO  23:22:09,299 - #29 (
INFO  23:22:09,300 - #30 )
INFO  23:22:09,300 - #20 {
INFO  23:22:09,300 - #31 if
INFO  23:22:09,300 - #29 (
INFO  23:22:09,300 - #12 false
INFO  23:22:09,300 - #30 )
INFO  23:22:09,301 - #20 {
INFO  23:22:09,301 - #3 print
INFO  23:22:09,301 - #29 (
INFO  23:22:09,301 - #9 32
INFO  23:22:09,301 - #30 )
INFO  23:22:09,301 - #27 ;
INFO  23:22:09,302 - #3 print
INFO  23:22:09,302 - #29 (
INFO  23:22:09,302 - #9 64
INFO  23:22:09,302 - #30 )
INFO  23:22:09,302 - #27 ;
INFO  23:22:09,303 - #21 }
INFO  23:22:09,303 - #3 print
INFO  23:22:09,303 - #29 (
INFO  23:22:09,303 - #9 65
INFO  23:22:09,303 - #30 )
INFO  23:22:09,303 - #27 ;
INFO  23:22:09,303 - #3 print
INFO  23:22:09,304 - #29 (
INFO  23:22:09,304 - #9 77
INFO  23:22:09,304 - #30 )
INFO  23:22:09,304 - #27 ;
INFO  23:22:09,304 - #21 }
INFO  23:22:09,304 - #21 }
INFO  23:22:09,305 - =====================SINTAKSNO_STABLO=========================
INFO  23:22:09,306 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:22:09,307 - ==============================================================
INFO  23:22:09,322 - Pocetak obrade programa Program na liniji 1
INFO  23:22:09,322 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:22:09,323 - Deklarisana konstanta c na liniji 2
INFO  23:22:09,323 - Deklarisana konstanta d na liniji 2
INFO  23:22:09,323 - Deklarisana konstanta g na liniji 2
INFO  23:22:09,324 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:22:09,324 - Deklarisana promenljiva e na liniji 3
INFO  23:22:09,324 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:22:09,324 - Deklarisan niz z na liniji 3
INFO  23:22:09,325 - Pocetak obrade metode main na liniji 5
INFO  23:22:09,325 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:22:09,325 - Zavrsetak obrade programa Program na liniji 1
INFO  23:22:09,325 - ======================TABELA_SIMBOLA==========================
INFO  23:22:09,326 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:22:09,329 - ==============================================================
INFO  23:22:09,329 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:22:09,329 - ==============================================================
INFO  23:22:09,329 - ======================GENERISANJE_KODA========================
INFO  23:22:09,334 - Generisanje koda uspesno zavrseno!
INFO  23:22:09,334 - Generisanje izlaznog fajla test\program.obj
INFO  23:22:09,335 - ==============================================================
INFO  23:24:24,412 - Obrada ulaznog fajla test\program.mj
INFO  23:24:24,493 - #2 program
INFO  23:24:24,493 - #8 Program
INFO  23:24:24,493 - #5 const
INFO  23:24:24,494 - #8 int
INFO  23:24:24,494 - #8 c
INFO  23:24:24,495 - #24 =
INFO  23:24:24,496 - #9 10
INFO  23:24:24,496 - #28 ,
INFO  23:24:24,497 - #8 d
INFO  23:24:24,497 - #24 =
INFO  23:24:24,497 - #9 99
INFO  23:24:24,497 - #28 ,
INFO  23:24:24,498 - #8 g
INFO  23:24:24,498 - #24 =
INFO  23:24:24,498 - #9 2
INFO  23:24:24,498 - #27 ;
INFO  23:24:24,498 - #8 int
INFO  23:24:24,499 - #8 e
INFO  23:24:24,499 - #27 ;
INFO  23:24:24,500 - #8 char
INFO  23:24:24,501 - #8 z
INFO  23:24:24,501 - #22 [
INFO  23:24:24,501 - #23 ]
INFO  23:24:24,502 - #27 ;
INFO  23:24:24,502 - #20 {
INFO  23:24:24,502 - #6 void
INFO  23:24:24,502 - #8 main
INFO  23:24:24,502 - #29 (
INFO  23:24:24,503 - #30 )
INFO  23:24:24,503 - #20 {
INFO  23:24:24,503 - #31 if
INFO  23:24:24,503 - #29 (
INFO  23:24:24,503 - #12 false
INFO  23:24:24,503 - #30 )
INFO  23:24:24,505 - #20 {
INFO  23:24:24,505 - #3 print
INFO  23:24:24,505 - #29 (
INFO  23:24:24,505 - #9 32
INFO  23:24:24,505 - #30 )
INFO  23:24:24,505 - #27 ;
INFO  23:24:24,506 - #3 print
INFO  23:24:24,506 - #29 (
INFO  23:24:24,506 - #9 64
INFO  23:24:24,506 - #30 )
INFO  23:24:24,506 - #27 ;
INFO  23:24:24,506 - #21 }
INFO  23:24:24,506 - #3 print
INFO  23:24:24,507 - #29 (
INFO  23:24:24,507 - #9 65
INFO  23:24:24,507 - #30 )
INFO  23:24:24,507 - #27 ;
INFO  23:24:24,507 - #3 print
INFO  23:24:24,507 - #29 (
INFO  23:24:24,507 - #9 77
INFO  23:24:24,508 - #30 )
INFO  23:24:24,508 - #27 ;
INFO  23:24:24,508 - #21 }
INFO  23:24:24,508 - #21 }
INFO  23:24:24,509 - =====================SINTAKSNO_STABLO=========================
INFO  23:24:24,510 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:24:24,511 - ==============================================================
INFO  23:24:24,528 - Pocetak obrade programa Program na liniji 1
INFO  23:24:24,529 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:24:24,530 - Deklarisana konstanta c na liniji 2
INFO  23:24:24,530 - Deklarisana konstanta d na liniji 2
INFO  23:24:24,530 - Deklarisana konstanta g na liniji 2
INFO  23:24:24,530 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:24:24,530 - Deklarisana promenljiva e na liniji 3
INFO  23:24:24,530 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:24:24,530 - Deklarisan niz z na liniji 3
INFO  23:24:24,531 - Pocetak obrade metode main na liniji 5
INFO  23:24:24,531 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:24:24,531 - Zavrsetak obrade programa Program na liniji 1
INFO  23:24:24,532 - ======================TABELA_SIMBOLA==========================
INFO  23:24:24,532 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:24:24,533 - ==============================================================
INFO  23:24:24,533 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:24:24,534 - ==============================================================
INFO  23:24:24,534 - ======================GENERISANJE_KODA========================
INFO  23:24:24,540 - Generisanje koda uspesno zavrseno!
INFO  23:24:24,540 - Generisanje izlaznog fajla test\program.obj
INFO  23:24:24,540 - ==============================================================
INFO  23:25:35,371 - Obrada ulaznog fajla test\program.mj
INFO  23:25:35,446 - #2 program
INFO  23:25:35,446 - #8 Program
INFO  23:25:35,446 - #5 const
INFO  23:25:35,447 - #8 int
INFO  23:25:35,447 - #8 c
INFO  23:25:35,448 - #24 =
INFO  23:25:35,448 - #9 10
INFO  23:25:35,449 - #28 ,
INFO  23:25:35,450 - #8 d
INFO  23:25:35,450 - #24 =
INFO  23:25:35,450 - #9 99
INFO  23:25:35,450 - #28 ,
INFO  23:25:35,450 - #8 g
INFO  23:25:35,450 - #24 =
INFO  23:25:35,450 - #9 2
INFO  23:25:35,450 - #27 ;
INFO  23:25:35,450 - #8 int
INFO  23:25:35,452 - #8 e
INFO  23:25:35,452 - #27 ;
INFO  23:25:35,453 - #8 char
INFO  23:25:35,455 - #8 z
INFO  23:25:35,455 - #22 [
INFO  23:25:35,455 - #23 ]
INFO  23:25:35,455 - #27 ;
INFO  23:25:35,455 - #20 {
INFO  23:25:35,455 - #6 void
INFO  23:25:35,456 - #8 main
INFO  23:25:35,456 - #29 (
INFO  23:25:35,457 - #30 )
INFO  23:25:35,457 - #20 {
INFO  23:25:35,457 - #31 if
INFO  23:25:35,457 - #29 (
INFO  23:25:35,457 - #12 false
INFO  23:25:35,457 - #30 )
INFO  23:25:35,458 - #20 {
INFO  23:25:35,459 - #3 print
INFO  23:25:35,459 - #29 (
INFO  23:25:35,459 - #9 32
INFO  23:25:35,459 - #30 )
INFO  23:25:35,459 - #27 ;
INFO  23:25:35,459 - #3 print
INFO  23:25:35,460 - #29 (
INFO  23:25:35,460 - #9 64
INFO  23:25:35,460 - #30 )
INFO  23:25:35,460 - #27 ;
INFO  23:25:35,460 - #21 }
INFO  23:25:35,460 - #3 print
INFO  23:25:35,461 - #29 (
INFO  23:25:35,461 - #9 65
INFO  23:25:35,461 - #30 )
INFO  23:25:35,461 - #27 ;
INFO  23:25:35,461 - #3 print
INFO  23:25:35,461 - #29 (
INFO  23:25:35,461 - #9 77
INFO  23:25:35,461 - #30 )
INFO  23:25:35,462 - #27 ;
INFO  23:25:35,462 - #21 }
INFO  23:25:35,462 - #21 }
INFO  23:25:35,463 - =====================SINTAKSNO_STABLO=========================
INFO  23:25:35,464 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:25:35,465 - ==============================================================
INFO  23:25:35,479 - Pocetak obrade programa Program na liniji 1
INFO  23:25:35,479 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:25:35,480 - Deklarisana konstanta c na liniji 2
INFO  23:25:35,480 - Deklarisana konstanta d na liniji 2
INFO  23:25:35,480 - Deklarisana konstanta g na liniji 2
INFO  23:25:35,481 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:25:35,481 - Deklarisana promenljiva e na liniji 3
INFO  23:25:35,481 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:25:35,481 - Deklarisan niz z na liniji 3
INFO  23:25:35,482 - Pocetak obrade metode main na liniji 5
INFO  23:25:35,482 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:25:35,482 - Zavrsetak obrade programa Program na liniji 1
INFO  23:25:35,482 - ======================TABELA_SIMBOLA==========================
INFO  23:25:35,484 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:25:35,486 - ==============================================================
INFO  23:25:35,486 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:25:35,486 - ==============================================================
INFO  23:25:35,486 - ======================GENERISANJE_KODA========================
INFO  23:25:35,491 - Generisanje koda uspesno zavrseno!
INFO  23:25:35,491 - Generisanje izlaznog fajla test\program.obj
INFO  23:25:35,491 - ==============================================================
INFO  23:27:09,800 - Obrada ulaznog fajla test\program.mj
INFO  23:27:09,878 - #2 program
INFO  23:27:09,878 - #8 Program
INFO  23:27:09,878 - #5 const
INFO  23:27:09,879 - #8 int
INFO  23:27:09,880 - #8 c
INFO  23:27:09,880 - #24 =
INFO  23:27:09,881 - #9 10
INFO  23:27:09,881 - #28 ,
INFO  23:27:09,882 - #8 d
INFO  23:27:09,882 - #24 =
INFO  23:27:09,882 - #9 99
INFO  23:27:09,882 - #28 ,
INFO  23:27:09,882 - #8 g
INFO  23:27:09,883 - #24 =
INFO  23:27:09,883 - #9 2
INFO  23:27:09,883 - #27 ;
INFO  23:27:09,883 - #8 int
INFO  23:27:09,885 - #8 e
INFO  23:27:09,885 - #27 ;
INFO  23:27:09,885 - #8 char
INFO  23:27:09,887 - #8 z
INFO  23:27:09,887 - #22 [
INFO  23:27:09,887 - #23 ]
INFO  23:27:09,887 - #27 ;
INFO  23:27:09,887 - #20 {
INFO  23:27:09,888 - #6 void
INFO  23:27:09,888 - #8 main
INFO  23:27:09,888 - #29 (
INFO  23:27:09,889 - #30 )
INFO  23:27:09,889 - #20 {
INFO  23:27:09,889 - #31 if
INFO  23:27:09,889 - #29 (
INFO  23:27:09,889 - #12 false
INFO  23:27:09,889 - #30 )
INFO  23:27:09,890 - #20 {
INFO  23:27:09,890 - #3 print
INFO  23:27:09,890 - #29 (
INFO  23:27:09,890 - #9 32
INFO  23:27:09,890 - #30 )
INFO  23:27:09,890 - #27 ;
INFO  23:27:09,890 - #3 print
INFO  23:27:09,891 - #29 (
INFO  23:27:09,891 - #9 64
INFO  23:27:09,891 - #30 )
INFO  23:27:09,891 - #27 ;
INFO  23:27:09,891 - #21 }
INFO  23:27:09,891 - #3 print
INFO  23:27:09,892 - #29 (
INFO  23:27:09,892 - #9 65
INFO  23:27:09,892 - #30 )
INFO  23:27:09,892 - #27 ;
INFO  23:27:09,892 - #3 print
INFO  23:27:09,892 - #29 (
INFO  23:27:09,893 - #9 77
INFO  23:27:09,893 - #30 )
INFO  23:27:09,893 - #27 ;
INFO  23:27:09,893 - #21 }
INFO  23:27:09,893 - #21 }
INFO  23:27:09,894 - =====================SINTAKSNO_STABLO=========================
INFO  23:27:09,895 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:27:09,897 - ==============================================================
INFO  23:27:09,909 - Pocetak obrade programa Program na liniji 1
INFO  23:27:09,909 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:27:09,910 - Deklarisana konstanta c na liniji 2
INFO  23:27:09,911 - Deklarisana konstanta d na liniji 2
INFO  23:27:09,911 - Deklarisana konstanta g na liniji 2
INFO  23:27:09,911 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:27:09,911 - Deklarisana promenljiva e na liniji 3
INFO  23:27:09,911 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:27:09,911 - Deklarisan niz z na liniji 3
INFO  23:27:09,912 - Pocetak obrade metode main na liniji 5
INFO  23:27:09,912 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:27:09,912 - Zavrsetak obrade programa Program na liniji 1
INFO  23:27:09,912 - ======================TABELA_SIMBOLA==========================
INFO  23:27:09,913 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:27:09,915 - ==============================================================
INFO  23:27:09,915 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:27:09,915 - ==============================================================
INFO  23:27:09,915 - ======================GENERISANJE_KODA========================
INFO  23:27:09,920 - Generisanje koda uspesno zavrseno!
INFO  23:27:09,921 - Generisanje izlaznog fajla test\program.obj
INFO  23:27:09,921 - ==============================================================
INFO  23:27:54,013 - Obrada ulaznog fajla test\program.mj
INFO  23:27:54,095 - #2 program
INFO  23:27:54,095 - #8 Program
INFO  23:27:54,095 - #5 const
INFO  23:27:54,096 - #8 int
INFO  23:27:54,097 - #8 c
INFO  23:27:54,097 - #24 =
INFO  23:27:54,098 - #9 10
INFO  23:27:54,098 - #28 ,
INFO  23:27:54,099 - #8 d
INFO  23:27:54,099 - #24 =
INFO  23:27:54,100 - #9 99
INFO  23:27:54,100 - #28 ,
INFO  23:27:54,100 - #8 g
INFO  23:27:54,100 - #24 =
INFO  23:27:54,100 - #9 2
INFO  23:27:54,100 - #27 ;
INFO  23:27:54,100 - #8 int
INFO  23:27:54,102 - #8 e
INFO  23:27:54,102 - #27 ;
INFO  23:27:54,102 - #8 char
INFO  23:27:54,104 - #8 z
INFO  23:27:54,104 - #22 [
INFO  23:27:54,104 - #23 ]
INFO  23:27:54,104 - #27 ;
INFO  23:27:54,105 - #20 {
INFO  23:27:54,105 - #6 void
INFO  23:27:54,105 - #8 main
INFO  23:27:54,105 - #29 (
INFO  23:27:54,106 - #30 )
INFO  23:27:54,106 - #20 {
INFO  23:27:54,106 - #31 if
INFO  23:27:54,106 - #29 (
INFO  23:27:54,106 - #12 false
INFO  23:27:54,106 - #30 )
INFO  23:27:54,108 - #20 {
INFO  23:27:54,108 - #3 print
INFO  23:27:54,108 - #29 (
INFO  23:27:54,108 - #9 32
INFO  23:27:54,109 - #30 )
INFO  23:27:54,109 - #27 ;
INFO  23:27:54,109 - #3 print
INFO  23:27:54,109 - #29 (
INFO  23:27:54,110 - #9 64
INFO  23:27:54,110 - #30 )
INFO  23:27:54,110 - #27 ;
INFO  23:27:54,110 - #21 }
INFO  23:27:54,110 - #3 print
INFO  23:27:54,111 - #29 (
INFO  23:27:54,111 - #9 65
INFO  23:27:54,111 - #30 )
INFO  23:27:54,111 - #27 ;
INFO  23:27:54,111 - #3 print
INFO  23:27:54,111 - #29 (
INFO  23:27:54,111 - #9 77
INFO  23:27:54,111 - #30 )
INFO  23:27:54,111 - #27 ;
INFO  23:27:54,111 - #21 }
INFO  23:27:54,112 - #21 }
INFO  23:27:54,112 - =====================SINTAKSNO_STABLO=========================
INFO  23:27:54,114 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:27:54,115 - ==============================================================
INFO  23:27:54,133 - Pocetak obrade programa Program na liniji 1
INFO  23:27:54,133 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:27:54,135 - Deklarisana konstanta c na liniji 2
INFO  23:27:54,135 - Deklarisana konstanta d na liniji 2
INFO  23:27:54,135 - Deklarisana konstanta g na liniji 2
INFO  23:27:54,135 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:27:54,135 - Deklarisana promenljiva e na liniji 3
INFO  23:27:54,135 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:27:54,135 - Deklarisan niz z na liniji 3
INFO  23:27:54,136 - Pocetak obrade metode main na liniji 5
INFO  23:27:54,136 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:27:54,137 - Zavrsetak obrade programa Program na liniji 1
INFO  23:27:54,137 - ======================TABELA_SIMBOLA==========================
INFO  23:27:54,138 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:27:54,140 - ==============================================================
INFO  23:27:54,140 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:27:54,140 - ==============================================================
INFO  23:27:54,140 - ======================GENERISANJE_KODA========================
INFO  23:27:54,145 - Generisanje koda uspesno zavrseno!
INFO  23:27:54,145 - Generisanje izlaznog fajla test\program.obj
INFO  23:27:54,145 - ==============================================================
INFO  23:32:08,502 - Obrada ulaznog fajla test\program.mj
INFO  23:32:08,587 - #2 program
INFO  23:32:08,587 - #8 Program
INFO  23:32:08,587 - #5 const
INFO  23:32:08,589 - #8 int
INFO  23:32:08,589 - #8 c
INFO  23:32:08,590 - #24 =
INFO  23:32:08,590 - #9 10
INFO  23:32:08,590 - #28 ,
INFO  23:32:08,592 - #8 d
INFO  23:32:08,592 - #24 =
INFO  23:32:08,592 - #9 99
INFO  23:32:08,592 - #28 ,
INFO  23:32:08,593 - #8 g
INFO  23:32:08,593 - #24 =
INFO  23:32:08,593 - #9 2
INFO  23:32:08,593 - #27 ;
INFO  23:32:08,593 - #8 int
INFO  23:32:08,595 - #8 e
INFO  23:32:08,595 - #27 ;
INFO  23:32:08,596 - #8 char
INFO  23:32:08,598 - #8 z
INFO  23:32:08,598 - #22 [
INFO  23:32:08,598 - #23 ]
INFO  23:32:08,598 - #27 ;
INFO  23:32:08,598 - #20 {
INFO  23:32:08,598 - #6 void
INFO  23:32:08,598 - #8 main
INFO  23:32:08,598 - #29 (
INFO  23:32:08,599 - #30 )
INFO  23:32:08,599 - #20 {
INFO  23:32:08,599 - #31 if
INFO  23:32:08,599 - #29 (
INFO  23:32:08,599 - #12 false
INFO  23:32:08,600 - #30 )
INFO  23:32:08,601 - #20 {
INFO  23:32:08,601 - #3 print
INFO  23:32:08,601 - #29 (
INFO  23:32:08,601 - #9 32
INFO  23:32:08,601 - #30 )
INFO  23:32:08,602 - #27 ;
INFO  23:32:08,602 - #3 print
INFO  23:32:08,602 - #29 (
INFO  23:32:08,602 - #9 64
INFO  23:32:08,602 - #30 )
INFO  23:32:08,602 - #27 ;
INFO  23:32:08,602 - #21 }
INFO  23:32:08,603 - #3 print
INFO  23:32:08,603 - #29 (
INFO  23:32:08,603 - #9 65
INFO  23:32:08,603 - #30 )
INFO  23:32:08,603 - #27 ;
INFO  23:32:08,604 - #3 print
INFO  23:32:08,604 - #29 (
INFO  23:32:08,604 - #9 77
INFO  23:32:08,604 - #30 )
INFO  23:32:08,604 - #27 ;
INFO  23:32:08,604 - #21 }
INFO  23:32:08,604 - #21 }
INFO  23:32:08,605 - =====================SINTAKSNO_STABLO=========================
INFO  23:32:08,608 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:32:08,610 - ==============================================================
INFO  23:32:08,625 - Pocetak obrade programa Program na liniji 1
INFO  23:32:08,625 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:32:08,626 - Deklarisana konstanta c na liniji 2
INFO  23:32:08,626 - Deklarisana konstanta d na liniji 2
INFO  23:32:08,626 - Deklarisana konstanta g na liniji 2
INFO  23:32:08,626 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:32:08,626 - Deklarisana promenljiva e na liniji 3
INFO  23:32:08,627 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:32:08,627 - Deklarisan niz z na liniji 3
INFO  23:32:08,627 - Pocetak obrade metode main na liniji 5
INFO  23:32:08,628 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:32:08,628 - Zavrsetak obrade programa Program na liniji 1
INFO  23:32:08,628 - ======================TABELA_SIMBOLA==========================
INFO  23:32:08,628 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:32:08,630 - ==============================================================
INFO  23:32:08,630 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:32:08,630 - ==============================================================
INFO  23:32:08,630 - ======================GENERISANJE_KODA========================
INFO  23:32:08,635 - Generisanje koda uspesno zavrseno!
INFO  23:32:08,635 - Generisanje izlaznog fajla test\program.obj
INFO  23:32:08,635 - ==============================================================
INFO  23:33:07,947 - Obrada ulaznog fajla test\program.mj
INFO  23:33:08,023 - #2 program
INFO  23:33:08,024 - #8 Program
INFO  23:33:08,024 - #5 const
INFO  23:33:08,025 - #8 int
INFO  23:33:08,025 - #8 c
INFO  23:33:08,025 - #24 =
INFO  23:33:08,025 - #9 10
INFO  23:33:08,026 - #28 ,
INFO  23:33:08,027 - #8 d
INFO  23:33:08,027 - #24 =
INFO  23:33:08,027 - #9 99
INFO  23:33:08,027 - #28 ,
INFO  23:33:08,027 - #8 g
INFO  23:33:08,027 - #24 =
INFO  23:33:08,027 - #9 2
INFO  23:33:08,027 - #27 ;
INFO  23:33:08,028 - #8 int
INFO  23:33:08,029 - #8 e
INFO  23:33:08,029 - #27 ;
INFO  23:33:08,029 - #8 char
INFO  23:33:08,031 - #8 z
INFO  23:33:08,031 - #22 [
INFO  23:33:08,031 - #23 ]
INFO  23:33:08,031 - #27 ;
INFO  23:33:08,031 - #20 {
INFO  23:33:08,031 - #6 void
INFO  23:33:08,031 - #8 main
INFO  23:33:08,032 - #29 (
INFO  23:33:08,033 - #30 )
INFO  23:33:08,033 - #20 {
INFO  23:33:08,033 - #31 if
INFO  23:33:08,033 - #29 (
INFO  23:33:08,033 - #12 false
INFO  23:33:08,033 - #30 )
INFO  23:33:08,034 - #20 {
INFO  23:33:08,034 - #3 print
INFO  23:33:08,034 - #29 (
INFO  23:33:08,034 - #9 32
INFO  23:33:08,034 - #30 )
INFO  23:33:08,034 - #27 ;
INFO  23:33:08,034 - #3 print
INFO  23:33:08,035 - #29 (
INFO  23:33:08,035 - #9 64
INFO  23:33:08,035 - #30 )
INFO  23:33:08,035 - #27 ;
INFO  23:33:08,035 - #21 }
INFO  23:33:08,035 - #3 print
INFO  23:33:08,036 - #29 (
INFO  23:33:08,036 - #9 65
INFO  23:33:08,036 - #30 )
INFO  23:33:08,036 - #27 ;
INFO  23:33:08,036 - #3 print
INFO  23:33:08,036 - #29 (
INFO  23:33:08,036 - #9 77
INFO  23:33:08,036 - #30 )
INFO  23:33:08,036 - #27 ;
INFO  23:33:08,036 - #21 }
INFO  23:33:08,037 - #21 }
INFO  23:33:08,037 - =====================SINTAKSNO_STABLO=========================
INFO  23:33:08,039 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:33:08,039 - ==============================================================
INFO  23:33:08,054 - Pocetak obrade programa Program na liniji 1
INFO  23:33:08,055 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:33:08,056 - Deklarisana konstanta c na liniji 2
INFO  23:33:08,056 - Deklarisana konstanta d na liniji 2
INFO  23:33:08,056 - Deklarisana konstanta g na liniji 2
INFO  23:33:08,056 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:33:08,056 - Deklarisana promenljiva e na liniji 3
INFO  23:33:08,056 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:33:08,056 - Deklarisan niz z na liniji 3
INFO  23:33:08,057 - Pocetak obrade metode main na liniji 5
INFO  23:33:08,058 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:33:08,058 - Zavrsetak obrade programa Program na liniji 1
INFO  23:33:08,058 - ======================TABELA_SIMBOLA==========================
INFO  23:33:08,059 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:33:08,061 - ==============================================================
INFO  23:33:08,061 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:33:08,061 - ==============================================================
INFO  23:33:08,061 - ======================GENERISANJE_KODA========================
INFO  23:33:08,066 - Generisanje koda uspesno zavrseno!
INFO  23:33:08,066 - Generisanje izlaznog fajla test\program.obj
INFO  23:33:08,066 - ==============================================================
INFO  23:33:38,202 - Obrada ulaznog fajla test\program.mj
INFO  23:33:38,298 - #2 program
INFO  23:33:38,299 - #8 Program
INFO  23:33:38,299 - #5 const
INFO  23:33:38,300 - #8 int
INFO  23:33:38,300 - #8 c
INFO  23:33:38,301 - #24 =
INFO  23:33:38,301 - #9 10
INFO  23:33:38,301 - #28 ,
INFO  23:33:38,303 - #8 d
INFO  23:33:38,303 - #24 =
INFO  23:33:38,303 - #9 99
INFO  23:33:38,303 - #28 ,
INFO  23:33:38,304 - #8 g
INFO  23:33:38,304 - #24 =
INFO  23:33:38,304 - #9 2
INFO  23:33:38,304 - #27 ;
INFO  23:33:38,304 - #8 int
INFO  23:33:38,306 - #8 e
INFO  23:33:38,306 - #27 ;
INFO  23:33:38,306 - #8 char
INFO  23:33:38,308 - #8 z
INFO  23:33:38,308 - #22 [
INFO  23:33:38,308 - #23 ]
INFO  23:33:38,309 - #27 ;
INFO  23:33:38,309 - #20 {
INFO  23:33:38,309 - #6 void
INFO  23:33:38,310 - #8 main
INFO  23:33:38,311 - #29 (
INFO  23:33:38,312 - #30 )
INFO  23:33:38,312 - #20 {
INFO  23:33:38,312 - #31 if
INFO  23:33:38,312 - #29 (
INFO  23:33:38,312 - #12 false
INFO  23:33:38,312 - #30 )
INFO  23:33:38,313 - #20 {
INFO  23:33:38,313 - #3 print
INFO  23:33:38,313 - #29 (
INFO  23:33:38,313 - #9 32
INFO  23:33:38,313 - #30 )
INFO  23:33:38,313 - #27 ;
INFO  23:33:38,313 - #3 print
INFO  23:33:38,314 - #29 (
INFO  23:33:38,314 - #9 64
INFO  23:33:38,314 - #30 )
INFO  23:33:38,314 - #27 ;
INFO  23:33:38,314 - #21 }
INFO  23:33:38,314 - #3 print
INFO  23:33:38,315 - #29 (
INFO  23:33:38,315 - #9 65
INFO  23:33:38,315 - #30 )
INFO  23:33:38,315 - #27 ;
INFO  23:33:38,315 - #3 print
INFO  23:33:38,315 - #29 (
INFO  23:33:38,315 - #9 77
INFO  23:33:38,315 - #30 )
INFO  23:33:38,315 - #27 ;
INFO  23:33:38,315 - #21 }
INFO  23:33:38,316 - #21 }
INFO  23:33:38,316 - =====================SINTAKSNO_STABLO=========================
INFO  23:33:38,318 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:33:38,318 - ==============================================================
INFO  23:33:38,332 - Pocetak obrade programa Program na liniji 1
INFO  23:33:38,332 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:33:38,333 - Deklarisana konstanta c na liniji 2
INFO  23:33:38,333 - Deklarisana konstanta d na liniji 2
INFO  23:33:38,333 - Deklarisana konstanta g na liniji 2
INFO  23:33:38,333 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:33:38,333 - Deklarisana promenljiva e na liniji 3
INFO  23:33:38,333 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:33:38,334 - Deklarisan niz z na liniji 3
INFO  23:33:38,334 - Pocetak obrade metode main na liniji 5
INFO  23:33:38,335 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:33:38,335 - Zavrsetak obrade programa Program na liniji 1
INFO  23:33:38,335 - ======================TABELA_SIMBOLA==========================
INFO  23:33:38,335 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:33:38,337 - ==============================================================
INFO  23:33:38,337 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:33:38,337 - ==============================================================
INFO  23:33:38,337 - ======================GENERISANJE_KODA========================
INFO  23:33:38,342 - Generisanje koda uspesno zavrseno!
INFO  23:33:38,343 - Generisanje izlaznog fajla test\program.obj
INFO  23:33:38,343 - ==============================================================
INFO  23:33:41,853 - Obrada ulaznog fajla test\program.mj
INFO  23:33:41,966 - #2 program
INFO  23:33:41,966 - #8 Program
INFO  23:33:41,966 - #5 const
INFO  23:33:41,967 - #8 int
INFO  23:33:41,967 - #8 c
INFO  23:33:41,968 - #24 =
INFO  23:33:41,968 - #9 10
INFO  23:33:41,968 - #28 ,
INFO  23:33:41,969 - #8 d
INFO  23:33:41,969 - #24 =
INFO  23:33:41,969 - #9 99
INFO  23:33:41,969 - #28 ,
INFO  23:33:41,970 - #8 g
INFO  23:33:41,970 - #24 =
INFO  23:33:41,970 - #9 2
INFO  23:33:41,970 - #27 ;
INFO  23:33:41,970 - #8 int
INFO  23:33:41,971 - #8 e
INFO  23:33:41,971 - #27 ;
INFO  23:33:41,972 - #8 char
INFO  23:33:41,973 - #8 z
INFO  23:33:41,973 - #22 [
INFO  23:33:41,974 - #23 ]
INFO  23:33:41,974 - #27 ;
INFO  23:33:41,974 - #20 {
INFO  23:33:41,974 - #6 void
INFO  23:33:41,974 - #8 main
INFO  23:33:41,975 - #29 (
INFO  23:33:41,976 - #30 )
INFO  23:33:41,976 - #20 {
INFO  23:33:41,976 - #31 if
INFO  23:33:41,976 - #29 (
INFO  23:33:41,976 - #12 false
INFO  23:33:41,976 - #30 )
INFO  23:33:41,977 - #20 {
INFO  23:33:41,978 - #3 print
INFO  23:33:41,978 - #29 (
INFO  23:33:41,978 - #9 32
INFO  23:33:41,978 - #30 )
INFO  23:33:41,978 - #27 ;
INFO  23:33:41,978 - #3 print
INFO  23:33:41,978 - #29 (
INFO  23:33:41,979 - #9 64
INFO  23:33:41,979 - #30 )
INFO  23:33:41,979 - #27 ;
INFO  23:33:41,979 - #21 }
INFO  23:33:41,979 - #3 print
INFO  23:33:41,979 - #29 (
INFO  23:33:41,979 - #9 65
INFO  23:33:41,980 - #30 )
INFO  23:33:41,980 - #27 ;
INFO  23:33:41,980 - #3 print
INFO  23:33:41,980 - #29 (
INFO  23:33:41,980 - #9 77
INFO  23:33:41,980 - #30 )
INFO  23:33:41,980 - #27 ;
INFO  23:33:41,980 - #21 }
INFO  23:33:41,980 - #21 }
INFO  23:33:41,981 - =====================SINTAKSNO_STABLO=========================
INFO  23:33:41,983 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:33:41,984 - ==============================================================
INFO  23:33:42,000 - Pocetak obrade programa Program na liniji 1
INFO  23:33:42,001 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:33:42,002 - Deklarisana konstanta c na liniji 2
INFO  23:33:42,002 - Deklarisana konstanta d na liniji 2
INFO  23:33:42,002 - Deklarisana konstanta g na liniji 2
INFO  23:33:42,002 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:33:42,002 - Deklarisana promenljiva e na liniji 3
INFO  23:33:42,003 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:33:42,003 - Deklarisan niz z na liniji 3
INFO  23:33:42,003 - Pocetak obrade metode main na liniji 5
INFO  23:33:42,004 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:33:42,004 - Zavrsetak obrade programa Program na liniji 1
INFO  23:33:42,004 - ======================TABELA_SIMBOLA==========================
INFO  23:33:42,005 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:33:42,006 - ==============================================================
INFO  23:33:42,006 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:33:42,006 - ==============================================================
INFO  23:33:42,007 - ======================GENERISANJE_KODA========================
INFO  23:34:45,230 - Obrada ulaznog fajla test\program.mj
INFO  23:34:45,308 - #2 program
INFO  23:34:45,308 - #8 Program
INFO  23:34:45,308 - #5 const
INFO  23:34:45,309 - #8 int
INFO  23:34:45,309 - #8 c
INFO  23:34:45,311 - #24 =
INFO  23:34:45,311 - #9 10
INFO  23:34:45,311 - #28 ,
INFO  23:34:45,312 - #8 d
INFO  23:34:45,312 - #24 =
INFO  23:34:45,312 - #9 99
INFO  23:34:45,312 - #28 ,
INFO  23:34:45,313 - #8 g
INFO  23:34:45,313 - #24 =
INFO  23:34:45,313 - #9 2
INFO  23:34:45,313 - #27 ;
INFO  23:34:45,313 - #8 int
INFO  23:34:45,314 - #8 e
INFO  23:34:45,315 - #27 ;
INFO  23:34:45,315 - #8 char
INFO  23:34:45,316 - #8 z
INFO  23:34:45,316 - #22 [
INFO  23:34:45,316 - #23 ]
INFO  23:34:45,316 - #27 ;
INFO  23:34:45,317 - #20 {
INFO  23:34:45,317 - #6 void
INFO  23:34:45,317 - #8 main
INFO  23:34:45,317 - #29 (
INFO  23:34:45,318 - #30 )
INFO  23:34:45,318 - #20 {
INFO  23:34:45,318 - #31 if
INFO  23:34:45,318 - #29 (
INFO  23:34:45,318 - #12 false
INFO  23:34:45,318 - #30 )
INFO  23:34:45,319 - #20 {
INFO  23:34:45,319 - #3 print
INFO  23:34:45,319 - #29 (
INFO  23:34:45,319 - #9 32
INFO  23:34:45,319 - #30 )
INFO  23:34:45,319 - #27 ;
INFO  23:34:45,319 - #3 print
INFO  23:34:45,320 - #29 (
INFO  23:34:45,320 - #9 64
INFO  23:34:45,320 - #30 )
INFO  23:34:45,320 - #27 ;
INFO  23:34:45,320 - #21 }
INFO  23:34:45,320 - #3 print
INFO  23:34:45,321 - #29 (
INFO  23:34:45,321 - #9 65
INFO  23:34:45,321 - #30 )
INFO  23:34:45,321 - #27 ;
INFO  23:34:45,321 - #3 print
INFO  23:34:45,321 - #29 (
INFO  23:34:45,321 - #9 77
INFO  23:34:45,321 - #30 )
INFO  23:34:45,321 - #27 ;
INFO  23:34:45,321 - #21 }
INFO  23:34:45,321 - #21 }
INFO  23:34:45,322 - =====================SINTAKSNO_STABLO=========================
INFO  23:34:45,324 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:34:45,324 - ==============================================================
INFO  23:34:45,340 - Pocetak obrade programa Program na liniji 1
INFO  23:34:45,340 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:34:45,342 - Deklarisana konstanta c na liniji 2
INFO  23:34:45,342 - Deklarisana konstanta d na liniji 2
INFO  23:34:45,343 - Deklarisana konstanta g na liniji 2
INFO  23:34:45,343 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:34:45,343 - Deklarisana promenljiva e na liniji 3
INFO  23:34:45,343 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:34:45,343 - Deklarisan niz z na liniji 3
INFO  23:34:45,344 - Pocetak obrade metode main na liniji 5
INFO  23:34:45,345 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:34:45,345 - Zavrsetak obrade programa Program na liniji 1
INFO  23:34:45,345 - ======================TABELA_SIMBOLA==========================
INFO  23:34:45,346 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:34:45,349 - ==============================================================
INFO  23:34:45,349 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:34:45,350 - ==============================================================
INFO  23:34:45,350 - ======================GENERISANJE_KODA========================
INFO  23:34:45,359 - Generisanje koda uspesno zavrseno!
INFO  23:34:45,359 - Generisanje izlaznog fajla test\program.obj
INFO  23:34:45,359 - ==============================================================
INFO  23:35:36,924 - Obrada ulaznog fajla test\program.mj
INFO  23:35:37,000 - #2 program
INFO  23:35:37,001 - #8 Program
INFO  23:35:37,001 - #5 const
INFO  23:35:37,002 - #8 int
INFO  23:35:37,002 - #8 c
INFO  23:35:37,003 - #24 =
INFO  23:35:37,003 - #9 10
INFO  23:35:37,003 - #28 ,
INFO  23:35:37,004 - #8 d
INFO  23:35:37,004 - #24 =
INFO  23:35:37,005 - #9 99
INFO  23:35:37,005 - #28 ,
INFO  23:35:37,005 - #8 g
INFO  23:35:37,005 - #24 =
INFO  23:35:37,005 - #9 2
INFO  23:35:37,005 - #27 ;
INFO  23:35:37,005 - #8 int
INFO  23:35:37,007 - #8 e
INFO  23:35:37,007 - #27 ;
INFO  23:35:37,007 - #8 char
INFO  23:35:37,009 - #8 z
INFO  23:35:37,009 - #22 [
INFO  23:35:37,009 - #23 ]
INFO  23:35:37,009 - #27 ;
INFO  23:35:37,009 - #20 {
INFO  23:35:37,009 - #6 void
INFO  23:35:37,010 - #8 main
INFO  23:35:37,010 - #29 (
INFO  23:35:37,011 - #30 )
INFO  23:35:37,011 - #20 {
INFO  23:35:37,011 - #31 if
INFO  23:35:37,011 - #29 (
INFO  23:35:37,011 - #12 false
INFO  23:35:37,011 - #30 )
INFO  23:35:37,012 - #20 {
INFO  23:35:37,012 - #3 print
INFO  23:35:37,012 - #29 (
INFO  23:35:37,012 - #9 32
INFO  23:35:37,013 - #30 )
INFO  23:35:37,013 - #27 ;
INFO  23:35:37,013 - #3 print
INFO  23:35:37,013 - #29 (
INFO  23:35:37,013 - #9 64
INFO  23:35:37,013 - #30 )
INFO  23:35:37,013 - #27 ;
INFO  23:35:37,014 - #21 }
INFO  23:35:37,014 - #3 print
INFO  23:35:37,016 - #29 (
INFO  23:35:37,016 - #9 65
INFO  23:35:37,016 - #30 )
INFO  23:35:37,016 - #27 ;
INFO  23:35:37,016 - #3 print
INFO  23:35:37,016 - #29 (
INFO  23:35:37,016 - #9 77
INFO  23:35:37,016 - #30 )
INFO  23:35:37,016 - #27 ;
INFO  23:35:37,016 - #21 }
INFO  23:35:37,017 - #21 }
INFO  23:35:37,017 - =====================SINTAKSNO_STABLO=========================
INFO  23:35:37,019 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:35:37,019 - ==============================================================
INFO  23:35:37,036 - Pocetak obrade programa Program na liniji 1
INFO  23:35:37,036 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:35:37,037 - Deklarisana konstanta c na liniji 2
INFO  23:35:37,037 - Deklarisana konstanta d na liniji 2
INFO  23:35:37,037 - Deklarisana konstanta g na liniji 2
INFO  23:35:37,037 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:35:37,037 - Deklarisana promenljiva e na liniji 3
INFO  23:35:37,037 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:35:37,038 - Deklarisan niz z na liniji 3
INFO  23:35:37,038 - Pocetak obrade metode main na liniji 5
INFO  23:35:37,038 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:35:37,039 - Zavrsetak obrade programa Program na liniji 1
INFO  23:35:37,039 - ======================TABELA_SIMBOLA==========================
INFO  23:35:37,039 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:35:37,041 - ==============================================================
INFO  23:35:37,041 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:35:37,041 - ==============================================================
INFO  23:35:37,041 - ======================GENERISANJE_KODA========================
INFO  23:35:37,046 - Generisanje koda uspesno zavrseno!
INFO  23:35:37,047 - Generisanje izlaznog fajla test\program.obj
INFO  23:35:37,047 - ==============================================================
INFO  23:37:45,618 - Obrada ulaznog fajla test\program.mj
INFO  23:37:45,696 - #2 program
INFO  23:37:45,696 - #8 Program
INFO  23:37:45,696 - #5 const
INFO  23:37:45,697 - #8 int
INFO  23:37:45,697 - #8 c
INFO  23:37:45,698 - #24 =
INFO  23:37:45,698 - #9 10
INFO  23:37:45,698 - #28 ,
INFO  23:37:45,699 - #8 d
INFO  23:37:45,699 - #24 =
INFO  23:37:45,700 - #9 99
INFO  23:37:45,700 - #28 ,
INFO  23:37:45,700 - #8 g
INFO  23:37:45,700 - #24 =
INFO  23:37:45,700 - #9 2
INFO  23:37:45,700 - #27 ;
INFO  23:37:45,700 - #8 int
INFO  23:37:45,702 - #8 e
INFO  23:37:45,702 - #27 ;
INFO  23:37:45,702 - #8 char
INFO  23:37:45,703 - #8 z
INFO  23:37:45,704 - #22 [
INFO  23:37:45,704 - #23 ]
INFO  23:37:45,704 - #27 ;
INFO  23:37:45,704 - #20 {
INFO  23:37:45,704 - #6 void
INFO  23:37:45,704 - #8 main
INFO  23:37:45,704 - #29 (
INFO  23:37:45,705 - #30 )
INFO  23:37:45,705 - #20 {
INFO  23:37:45,705 - #31 if
INFO  23:37:45,705 - #29 (
INFO  23:37:45,705 - #12 false
INFO  23:37:45,705 - #30 )
INFO  23:37:45,706 - #20 {
INFO  23:37:45,706 - #3 print
INFO  23:37:45,706 - #29 (
INFO  23:37:45,707 - #9 32
INFO  23:37:45,707 - #30 )
INFO  23:37:45,707 - #27 ;
INFO  23:37:45,707 - #3 print
INFO  23:37:45,707 - #29 (
INFO  23:37:45,707 - #9 64
INFO  23:37:45,707 - #30 )
INFO  23:37:45,708 - #27 ;
INFO  23:37:45,708 - #21 }
INFO  23:37:45,708 - #3 print
INFO  23:37:45,708 - #29 (
INFO  23:37:45,708 - #9 65
INFO  23:37:45,708 - #30 )
INFO  23:37:45,709 - #27 ;
INFO  23:37:45,709 - #3 print
INFO  23:37:45,709 - #29 (
INFO  23:37:45,709 - #9 77
INFO  23:37:45,709 - #30 )
INFO  23:37:45,709 - #27 ;
INFO  23:37:45,709 - #21 }
INFO  23:37:45,709 - #21 }
INFO  23:37:45,710 - =====================SINTAKSNO_STABLO=========================
INFO  23:37:45,711 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:37:45,712 - ==============================================================
INFO  23:37:45,726 - Pocetak obrade programa Program na liniji 1
INFO  23:37:45,726 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:37:45,727 - Deklarisana konstanta c na liniji 2
INFO  23:37:45,727 - Deklarisana konstanta d na liniji 2
INFO  23:37:45,727 - Deklarisana konstanta g na liniji 2
INFO  23:37:45,728 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:37:45,728 - Deklarisana promenljiva e na liniji 3
INFO  23:37:45,728 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:37:45,728 - Deklarisan niz z na liniji 3
INFO  23:37:45,729 - Pocetak obrade metode main na liniji 5
INFO  23:37:45,729 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:37:45,729 - Zavrsetak obrade programa Program na liniji 1
INFO  23:37:45,729 - ======================TABELA_SIMBOLA==========================
INFO  23:37:45,730 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:37:45,731 - ==============================================================
INFO  23:37:45,731 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:37:45,731 - ==============================================================
INFO  23:37:45,731 - ======================GENERISANJE_KODA========================
INFO  23:37:45,736 - Generisanje koda uspesno zavrseno!
INFO  23:37:45,737 - Generisanje izlaznog fajla test\program.obj
INFO  23:37:45,737 - ==============================================================
INFO  23:38:42,570 - Obrada ulaznog fajla test\program.mj
INFO  23:38:42,644 - #2 program
INFO  23:38:42,644 - #8 Program
INFO  23:38:42,644 - #5 const
INFO  23:38:42,645 - #8 int
INFO  23:38:42,645 - #8 c
INFO  23:38:42,646 - #24 =
INFO  23:38:42,646 - #9 10
INFO  23:38:42,646 - #28 ,
INFO  23:38:42,647 - #8 d
INFO  23:38:42,647 - #24 =
INFO  23:38:42,647 - #9 99
INFO  23:38:42,647 - #28 ,
INFO  23:38:42,648 - #8 g
INFO  23:38:42,648 - #24 =
INFO  23:38:42,648 - #9 2
INFO  23:38:42,648 - #27 ;
INFO  23:38:42,648 - #8 int
INFO  23:38:42,649 - #8 e
INFO  23:38:42,649 - #27 ;
INFO  23:38:42,650 - #8 char
INFO  23:38:42,651 - #8 z
INFO  23:38:42,651 - #22 [
INFO  23:38:42,651 - #23 ]
INFO  23:38:42,651 - #27 ;
INFO  23:38:42,651 - #20 {
INFO  23:38:42,651 - #6 void
INFO  23:38:42,652 - #8 main
INFO  23:38:42,652 - #29 (
INFO  23:38:42,652 - #30 )
INFO  23:38:42,652 - #20 {
INFO  23:38:42,653 - #31 if
INFO  23:38:42,653 - #29 (
INFO  23:38:42,653 - #12 false
INFO  23:38:42,653 - #30 )
INFO  23:38:42,654 - #20 {
INFO  23:38:42,654 - #3 print
INFO  23:38:42,654 - #29 (
INFO  23:38:42,654 - #9 32
INFO  23:38:42,654 - #30 )
INFO  23:38:42,655 - #27 ;
INFO  23:38:42,655 - #3 print
INFO  23:38:42,655 - #29 (
INFO  23:38:42,655 - #9 64
INFO  23:38:42,655 - #30 )
INFO  23:38:42,655 - #27 ;
INFO  23:38:42,655 - #21 }
INFO  23:38:42,655 - #3 print
INFO  23:38:42,656 - #29 (
INFO  23:38:42,656 - #9 65
INFO  23:38:42,656 - #30 )
INFO  23:38:42,656 - #27 ;
INFO  23:38:42,656 - #3 print
INFO  23:38:42,656 - #29 (
INFO  23:38:42,656 - #9 77
INFO  23:38:42,656 - #30 )
INFO  23:38:42,656 - #27 ;
INFO  23:38:42,657 - #21 }
INFO  23:38:42,657 - #21 }
INFO  23:38:42,658 - =====================SINTAKSNO_STABLO=========================
INFO  23:38:42,659 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:38:42,660 - ==============================================================
INFO  23:38:42,674 - Pocetak obrade programa Program na liniji 1
INFO  23:38:42,675 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:38:42,676 - Deklarisana konstanta c na liniji 2
INFO  23:38:42,677 - Deklarisana konstanta d na liniji 2
INFO  23:38:42,677 - Deklarisana konstanta g na liniji 2
INFO  23:38:42,677 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:38:42,677 - Deklarisana promenljiva e na liniji 3
INFO  23:38:42,677 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:38:42,677 - Deklarisan niz z na liniji 3
INFO  23:38:42,678 - Pocetak obrade metode main na liniji 5
INFO  23:38:42,679 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:38:42,679 - Zavrsetak obrade programa Program na liniji 1
INFO  23:38:42,679 - ======================TABELA_SIMBOLA==========================
INFO  23:38:42,681 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:38:42,684 - ==============================================================
INFO  23:38:42,684 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:38:42,684 - ==============================================================
INFO  23:38:42,684 - ======================GENERISANJE_KODA========================
INFO  23:38:42,690 - Generisanje koda uspesno zavrseno!
INFO  23:38:42,690 - Generisanje izlaznog fajla test\program.obj
INFO  23:38:42,690 - ==============================================================
INFO  23:39:15,204 - Obrada ulaznog fajla test\program.mj
INFO  23:39:15,279 - #2 program
INFO  23:39:15,279 - #8 Program
INFO  23:39:15,279 - #5 const
INFO  23:39:15,280 - #8 int
INFO  23:39:15,280 - #8 c
INFO  23:39:15,281 - #24 =
INFO  23:39:15,281 - #9 10
INFO  23:39:15,281 - #28 ,
INFO  23:39:15,282 - #8 d
INFO  23:39:15,282 - #24 =
INFO  23:39:15,282 - #9 99
INFO  23:39:15,282 - #28 ,
INFO  23:39:15,282 - #8 g
INFO  23:39:15,283 - #24 =
INFO  23:39:15,283 - #9 2
INFO  23:39:15,283 - #27 ;
INFO  23:39:15,283 - #8 int
INFO  23:39:15,284 - #8 e
INFO  23:39:15,284 - #27 ;
INFO  23:39:15,285 - #8 char
INFO  23:39:15,286 - #8 z
INFO  23:39:15,286 - #22 [
INFO  23:39:15,286 - #23 ]
INFO  23:39:15,286 - #27 ;
INFO  23:39:15,286 - #20 {
INFO  23:39:15,286 - #6 void
INFO  23:39:15,287 - #8 main
INFO  23:39:15,287 - #29 (
INFO  23:39:15,287 - #30 )
INFO  23:39:15,288 - #20 {
INFO  23:39:15,288 - #31 if
INFO  23:39:15,288 - #29 (
INFO  23:39:15,288 - #12 false
INFO  23:39:15,288 - #30 )
INFO  23:39:15,289 - #20 {
INFO  23:39:15,289 - #3 print
INFO  23:39:15,289 - #29 (
INFO  23:39:15,289 - #9 32
INFO  23:39:15,289 - #30 )
INFO  23:39:15,289 - #27 ;
INFO  23:39:15,289 - #3 print
INFO  23:39:15,290 - #29 (
INFO  23:39:15,290 - #9 64
INFO  23:39:15,290 - #30 )
INFO  23:39:15,290 - #27 ;
INFO  23:39:15,290 - #21 }
INFO  23:39:15,290 - #3 print
INFO  23:39:15,291 - #29 (
INFO  23:39:15,291 - #9 65
INFO  23:39:15,291 - #30 )
INFO  23:39:15,291 - #27 ;
INFO  23:39:15,291 - #3 print
INFO  23:39:15,291 - #29 (
INFO  23:39:15,291 - #9 77
INFO  23:39:15,291 - #30 )
INFO  23:39:15,291 - #27 ;
INFO  23:39:15,291 - #21 }
INFO  23:39:15,292 - #21 }
INFO  23:39:15,292 - =====================SINTAKSNO_STABLO=========================
INFO  23:39:15,294 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:39:15,295 - ==============================================================
INFO  23:39:15,309 - Pocetak obrade programa Program na liniji 1
INFO  23:39:15,309 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:39:15,311 - Deklarisana konstanta c na liniji 2
INFO  23:39:15,311 - Deklarisana konstanta d na liniji 2
INFO  23:39:15,311 - Deklarisana konstanta g na liniji 2
INFO  23:39:15,311 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:39:15,311 - Deklarisana promenljiva e na liniji 3
INFO  23:39:15,311 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:39:15,311 - Deklarisan niz z na liniji 3
INFO  23:39:15,312 - Pocetak obrade metode main na liniji 5
INFO  23:39:15,312 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:39:15,313 - Zavrsetak obrade programa Program na liniji 1
INFO  23:39:15,313 - ======================TABELA_SIMBOLA==========================
INFO  23:39:15,313 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:39:15,315 - ==============================================================
INFO  23:39:15,315 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:39:15,315 - ==============================================================
INFO  23:39:15,315 - ======================GENERISANJE_KODA========================
INFO  23:39:15,320 - Generisanje koda uspesno zavrseno!
INFO  23:39:15,321 - Generisanje izlaznog fajla test\program.obj
INFO  23:39:15,321 - ==============================================================
INFO  23:47:46,935 - Obrada ulaznog fajla test\program.mj
INFO  23:47:47,027 - #2 program
INFO  23:47:47,028 - #8 Program
INFO  23:47:47,028 - #5 const
INFO  23:47:47,029 - #8 int
INFO  23:47:47,029 - #8 c
INFO  23:47:47,030 - #24 =
INFO  23:47:47,030 - #9 10
INFO  23:47:47,030 - #28 ,
INFO  23:47:47,032 - #8 d
INFO  23:47:47,032 - #24 =
INFO  23:47:47,033 - #9 99
INFO  23:47:47,033 - #28 ,
INFO  23:47:47,033 - #8 g
INFO  23:47:47,033 - #24 =
INFO  23:47:47,033 - #9 2
INFO  23:47:47,033 - #27 ;
INFO  23:47:47,033 - #8 int
INFO  23:47:47,035 - #8 e
INFO  23:47:47,035 - #27 ;
INFO  23:47:47,035 - #8 char
INFO  23:47:47,037 - #8 z
INFO  23:47:47,037 - #22 [
INFO  23:47:47,037 - #23 ]
INFO  23:47:47,037 - #27 ;
INFO  23:47:47,037 - #20 {
INFO  23:47:47,038 - #6 void
INFO  23:47:47,038 - #8 main
INFO  23:47:47,038 - #29 (
INFO  23:47:47,038 - #30 )
INFO  23:47:47,039 - #20 {
INFO  23:47:47,039 - #31 if
INFO  23:47:47,039 - #29 (
INFO  23:47:47,039 - #12 false
INFO  23:47:47,039 - #30 )
INFO  23:47:47,040 - #20 {
INFO  23:47:47,040 - #3 print
INFO  23:47:47,040 - #29 (
INFO  23:47:47,040 - #9 32
INFO  23:47:47,040 - #30 )
INFO  23:47:47,040 - #27 ;
INFO  23:47:47,041 - #3 print
INFO  23:47:47,041 - #29 (
INFO  23:47:47,041 - #9 64
INFO  23:47:47,041 - #30 )
INFO  23:47:47,041 - #27 ;
INFO  23:47:47,041 - #21 }
INFO  23:47:47,041 - #3 print
INFO  23:47:47,042 - #29 (
INFO  23:47:47,042 - #9 65
INFO  23:47:47,042 - #30 )
INFO  23:47:47,042 - #27 ;
INFO  23:47:47,042 - #3 print
INFO  23:47:47,042 - #29 (
INFO  23:47:47,042 - #9 77
INFO  23:47:47,042 - #30 )
INFO  23:47:47,042 - #27 ;
INFO  23:47:47,043 - #21 }
INFO  23:47:47,043 - #21 }
INFO  23:47:47,044 - =====================SINTAKSNO_STABLO=========================
INFO  23:47:47,045 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:47:47,046 - ==============================================================
INFO  23:47:47,059 - Pocetak obrade programa Program na liniji 1
INFO  23:47:47,059 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:47:47,060 - Deklarisana konstanta c na liniji 2
INFO  23:47:47,060 - Deklarisana konstanta d na liniji 2
INFO  23:47:47,060 - Deklarisana konstanta g na liniji 2
INFO  23:47:47,060 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:47:47,060 - Deklarisana promenljiva e na liniji 3
INFO  23:47:47,060 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:47:47,060 - Deklarisan niz z na liniji 3
INFO  23:47:47,061 - Pocetak obrade metode main na liniji 5
INFO  23:47:47,061 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:47:47,061 - Zavrsetak obrade programa Program na liniji 1
INFO  23:47:47,061 - ======================TABELA_SIMBOLA==========================
INFO  23:47:47,062 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:47:47,064 - ==============================================================
INFO  23:47:47,064 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:47:47,064 - ==============================================================
INFO  23:47:47,064 - ======================GENERISANJE_KODA========================
INFO  23:47:47,070 - Generisanje koda uspesno zavrseno!
INFO  23:47:47,070 - Generisanje izlaznog fajla test\program.obj
INFO  23:47:47,070 - ==============================================================
INFO  23:48:55,599 - Obrada ulaznog fajla test\program.mj
INFO  23:48:55,675 - #2 program
INFO  23:48:55,676 - #8 Program
INFO  23:48:55,676 - #5 const
INFO  23:48:55,677 - #8 int
INFO  23:48:55,677 - #8 c
INFO  23:48:55,678 - #24 =
INFO  23:48:55,678 - #9 10
INFO  23:48:55,678 - #28 ,
INFO  23:48:55,679 - #8 d
INFO  23:48:55,679 - #24 =
INFO  23:48:55,679 - #9 99
INFO  23:48:55,679 - #28 ,
INFO  23:48:55,680 - #8 g
INFO  23:48:55,680 - #24 =
INFO  23:48:55,680 - #9 2
INFO  23:48:55,680 - #27 ;
INFO  23:48:55,680 - #8 int
INFO  23:48:55,681 - #8 e
INFO  23:48:55,681 - #27 ;
INFO  23:48:55,682 - #8 char
INFO  23:48:55,683 - #8 z
INFO  23:48:55,683 - #22 [
INFO  23:48:55,683 - #23 ]
INFO  23:48:55,684 - #27 ;
INFO  23:48:55,684 - #20 {
INFO  23:48:55,684 - #6 void
INFO  23:48:55,684 - #8 main
INFO  23:48:55,684 - #29 (
INFO  23:48:55,685 - #30 )
INFO  23:48:55,685 - #20 {
INFO  23:48:55,685 - #31 if
INFO  23:48:55,685 - #29 (
INFO  23:48:55,685 - #12 false
INFO  23:48:55,685 - #30 )
INFO  23:48:55,687 - #20 {
INFO  23:48:55,687 - #3 print
INFO  23:48:55,687 - #29 (
INFO  23:48:55,687 - #9 32
INFO  23:48:55,687 - #30 )
INFO  23:48:55,687 - #27 ;
INFO  23:48:55,688 - #3 print
INFO  23:48:55,688 - #29 (
INFO  23:48:55,688 - #9 64
INFO  23:48:55,688 - #30 )
INFO  23:48:55,688 - #27 ;
INFO  23:48:55,688 - #21 }
INFO  23:48:55,689 - #3 print
INFO  23:48:55,689 - #29 (
INFO  23:48:55,689 - #9 65
INFO  23:48:55,689 - #30 )
INFO  23:48:55,689 - #27 ;
INFO  23:48:55,689 - #3 print
INFO  23:48:55,689 - #29 (
INFO  23:48:55,689 - #9 77
INFO  23:48:55,690 - #30 )
INFO  23:48:55,690 - #27 ;
INFO  23:48:55,690 - #21 }
INFO  23:48:55,690 - #21 }
INFO  23:48:55,691 - =====================SINTAKSNO_STABLO=========================
INFO  23:48:55,692 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:48:55,693 - ==============================================================
INFO  23:48:55,706 - Pocetak obrade programa Program na liniji 1
INFO  23:48:55,706 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:48:55,707 - Deklarisana konstanta c na liniji 2
INFO  23:48:55,708 - Deklarisana konstanta d na liniji 2
INFO  23:48:55,708 - Deklarisana konstanta g na liniji 2
INFO  23:48:55,708 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:48:55,708 - Deklarisana promenljiva e na liniji 3
INFO  23:48:55,708 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:48:55,708 - Deklarisan niz z na liniji 3
INFO  23:48:55,709 - Pocetak obrade metode main na liniji 5
INFO  23:48:55,709 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:48:55,709 - Zavrsetak obrade programa Program na liniji 1
INFO  23:48:55,709 - ======================TABELA_SIMBOLA==========================
INFO  23:48:55,710 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:48:55,711 - ==============================================================
INFO  23:48:55,711 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:48:55,711 - ==============================================================
INFO  23:48:55,711 - ======================GENERISANJE_KODA========================
INFO  23:48:55,716 - Generisanje koda uspesno zavrseno!
INFO  23:48:55,716 - Generisanje izlaznog fajla test\program.obj
INFO  23:48:55,716 - ==============================================================
INFO  23:51:17,248 - Obrada ulaznog fajla test\program.mj
INFO  23:51:17,324 - #2 program
INFO  23:51:17,324 - #8 Program
INFO  23:51:17,324 - #5 const
INFO  23:51:17,325 - #8 int
INFO  23:51:17,326 - #8 c
INFO  23:51:17,327 - #24 =
INFO  23:51:17,327 - #9 10
INFO  23:51:17,327 - #28 ,
INFO  23:51:17,328 - #8 d
INFO  23:51:17,328 - #24 =
INFO  23:51:17,328 - #9 99
INFO  23:51:17,328 - #28 ,
INFO  23:51:17,329 - #8 g
INFO  23:51:17,329 - #24 =
INFO  23:51:17,329 - #9 2
INFO  23:51:17,329 - #27 ;
INFO  23:51:17,329 - #8 int
INFO  23:51:17,330 - #8 e
INFO  23:51:17,331 - #27 ;
INFO  23:51:17,331 - #8 char
INFO  23:51:17,332 - #8 z
INFO  23:51:17,332 - #22 [
INFO  23:51:17,332 - #23 ]
INFO  23:51:17,333 - #27 ;
INFO  23:51:17,333 - #20 {
INFO  23:51:17,333 - #6 void
INFO  23:51:17,333 - #8 main
INFO  23:51:17,333 - #29 (
INFO  23:51:17,334 - #30 )
INFO  23:51:17,334 - #20 {
INFO  23:51:17,334 - #31 if
INFO  23:51:17,334 - #29 (
INFO  23:51:17,334 - #12 false
INFO  23:51:17,335 - #30 )
INFO  23:51:17,336 - #20 {
INFO  23:51:17,336 - #3 print
INFO  23:51:17,336 - #29 (
INFO  23:51:17,336 - #9 32
INFO  23:51:17,336 - #30 )
INFO  23:51:17,337 - #27 ;
INFO  23:51:17,337 - #3 print
INFO  23:51:17,337 - #29 (
INFO  23:51:17,338 - #9 64
INFO  23:51:17,338 - #30 )
INFO  23:51:17,338 - #27 ;
INFO  23:51:17,338 - #21 }
INFO  23:51:17,338 - #3 print
INFO  23:51:17,339 - #29 (
INFO  23:51:17,339 - #9 65
INFO  23:51:17,339 - #30 )
INFO  23:51:17,339 - #27 ;
INFO  23:51:17,339 - #3 print
INFO  23:51:17,339 - #29 (
INFO  23:51:17,339 - #9 77
INFO  23:51:17,339 - #30 )
INFO  23:51:17,339 - #27 ;
INFO  23:51:17,340 - #21 }
INFO  23:51:17,340 - #21 }
INFO  23:51:17,341 - =====================SINTAKSNO_STABLO=========================
INFO  23:51:17,342 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:51:17,343 - ==============================================================
INFO  23:51:17,357 - Pocetak obrade programa Program na liniji 1
INFO  23:51:17,357 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:51:17,359 - Deklarisana konstanta c na liniji 2
INFO  23:51:17,360 - Deklarisana konstanta d na liniji 2
INFO  23:51:17,360 - Deklarisana konstanta g na liniji 2
INFO  23:51:17,360 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:51:17,360 - Deklarisana promenljiva e na liniji 3
INFO  23:51:17,360 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:51:17,360 - Deklarisan niz z na liniji 3
INFO  23:51:17,361 - Pocetak obrade metode main na liniji 5
INFO  23:51:17,361 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:51:17,362 - Zavrsetak obrade programa Program na liniji 1
INFO  23:51:17,362 - ======================TABELA_SIMBOLA==========================
INFO  23:51:17,363 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:51:17,365 - ==============================================================
INFO  23:51:17,365 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:51:17,365 - ==============================================================
INFO  23:51:17,365 - ======================GENERISANJE_KODA========================
INFO  23:52:11,887 - Obrada ulaznog fajla test\program.mj
INFO  23:52:12,009 - #2 program
INFO  23:52:12,009 - #8 Program
INFO  23:52:12,009 - #5 const
INFO  23:52:12,010 - #8 int
INFO  23:52:12,010 - #8 c
INFO  23:52:12,011 - #24 =
INFO  23:52:12,011 - #9 10
INFO  23:52:12,011 - #28 ,
INFO  23:52:12,013 - #8 d
INFO  23:52:12,013 - #24 =
INFO  23:52:12,013 - #9 99
INFO  23:52:12,013 - #28 ,
INFO  23:52:12,014 - #8 g
INFO  23:52:12,014 - #24 =
INFO  23:52:12,014 - #9 2
INFO  23:52:12,014 - #27 ;
INFO  23:52:12,015 - #8 int
INFO  23:52:12,016 - #8 e
INFO  23:52:12,016 - #27 ;
INFO  23:52:12,017 - #8 char
INFO  23:52:12,018 - #8 z
INFO  23:52:12,018 - #22 [
INFO  23:52:12,018 - #23 ]
INFO  23:52:12,018 - #27 ;
INFO  23:52:12,018 - #20 {
INFO  23:52:12,019 - #6 void
INFO  23:52:12,019 - #8 main
INFO  23:52:12,019 - #29 (
INFO  23:52:12,020 - #30 )
INFO  23:52:12,020 - #20 {
INFO  23:52:12,020 - #31 if
INFO  23:52:12,020 - #29 (
INFO  23:52:12,020 - #12 false
INFO  23:52:12,021 - #30 )
INFO  23:52:12,022 - #20 {
INFO  23:52:12,022 - #3 print
INFO  23:52:12,022 - #29 (
INFO  23:52:12,022 - #9 32
INFO  23:52:12,022 - #30 )
INFO  23:52:12,022 - #27 ;
INFO  23:52:12,022 - #3 print
INFO  23:52:12,023 - #29 (
INFO  23:52:12,023 - #9 64
INFO  23:52:12,023 - #30 )
INFO  23:52:12,023 - #27 ;
INFO  23:52:12,023 - #21 }
INFO  23:52:12,024 - #3 print
INFO  23:52:12,024 - #29 (
INFO  23:52:12,024 - #9 65
INFO  23:52:12,024 - #30 )
INFO  23:52:12,024 - #27 ;
INFO  23:52:12,025 - #3 print
INFO  23:52:12,025 - #29 (
INFO  23:52:12,025 - #9 77
INFO  23:52:12,025 - #30 )
INFO  23:52:12,025 - #27 ;
INFO  23:52:12,025 - #21 }
INFO  23:52:12,025 - #21 }
INFO  23:52:12,026 - =====================SINTAKSNO_STABLO=========================
INFO  23:52:12,029 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:52:12,029 - ==============================================================
INFO  23:52:12,045 - Pocetak obrade programa Program na liniji 1
INFO  23:52:12,045 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:52:12,046 - Deklarisana konstanta c na liniji 2
INFO  23:52:12,046 - Deklarisana konstanta d na liniji 2
INFO  23:52:12,046 - Deklarisana konstanta g na liniji 2
INFO  23:52:12,046 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:52:12,047 - Deklarisana promenljiva e na liniji 3
INFO  23:52:12,047 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:52:12,047 - Deklarisan niz z na liniji 3
INFO  23:52:12,048 - Pocetak obrade metode main na liniji 5
INFO  23:52:12,048 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:52:12,048 - Zavrsetak obrade programa Program na liniji 1
INFO  23:52:12,048 - ======================TABELA_SIMBOLA==========================
INFO  23:52:12,049 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:52:12,051 - ==============================================================
INFO  23:52:12,051 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:52:12,051 - ==============================================================
INFO  23:52:12,051 - ======================GENERISANJE_KODA========================
INFO  23:52:13,656 - Obrada ulaznog fajla test\program.mj
INFO  23:52:13,750 - #2 program
INFO  23:52:13,750 - #8 Program
INFO  23:52:13,750 - #5 const
INFO  23:52:13,751 - #8 int
INFO  23:52:13,752 - #8 c
INFO  23:52:13,752 - #24 =
INFO  23:52:13,752 - #9 10
INFO  23:52:13,753 - #28 ,
INFO  23:52:13,754 - #8 d
INFO  23:52:13,754 - #24 =
INFO  23:52:13,754 - #9 99
INFO  23:52:13,754 - #28 ,
INFO  23:52:13,754 - #8 g
INFO  23:52:13,755 - #24 =
INFO  23:52:13,755 - #9 2
INFO  23:52:13,755 - #27 ;
INFO  23:52:13,755 - #8 int
INFO  23:52:13,756 - #8 e
INFO  23:52:13,756 - #27 ;
INFO  23:52:13,757 - #8 char
INFO  23:52:13,758 - #8 z
INFO  23:52:13,758 - #22 [
INFO  23:52:13,758 - #23 ]
INFO  23:52:13,758 - #27 ;
INFO  23:52:13,759 - #20 {
INFO  23:52:13,759 - #6 void
INFO  23:52:13,759 - #8 main
INFO  23:52:13,759 - #29 (
INFO  23:52:13,760 - #30 )
INFO  23:52:13,760 - #20 {
INFO  23:52:13,760 - #31 if
INFO  23:52:13,760 - #29 (
INFO  23:52:13,760 - #12 false
INFO  23:52:13,760 - #30 )
INFO  23:52:13,761 - #20 {
INFO  23:52:13,761 - #3 print
INFO  23:52:13,762 - #29 (
INFO  23:52:13,762 - #9 32
INFO  23:52:13,762 - #30 )
INFO  23:52:13,763 - #27 ;
INFO  23:52:13,763 - #3 print
INFO  23:52:13,763 - #29 (
INFO  23:52:13,764 - #9 64
INFO  23:52:13,764 - #30 )
INFO  23:52:13,764 - #27 ;
INFO  23:52:13,764 - #21 }
INFO  23:52:13,764 - #3 print
INFO  23:52:13,765 - #29 (
INFO  23:52:13,765 - #9 65
INFO  23:52:13,765 - #30 )
INFO  23:52:13,766 - #27 ;
INFO  23:52:13,766 - #3 print
INFO  23:52:13,766 - #29 (
INFO  23:52:13,766 - #9 77
INFO  23:52:13,766 - #30 )
INFO  23:52:13,766 - #27 ;
INFO  23:52:13,766 - #21 }
INFO  23:52:13,767 - #21 }
INFO  23:52:13,768 - =====================SINTAKSNO_STABLO=========================
INFO  23:52:13,769 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:52:13,770 - ==============================================================
INFO  23:52:13,784 - Pocetak obrade programa Program na liniji 1
INFO  23:52:13,784 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:52:13,785 - Deklarisana konstanta c na liniji 2
INFO  23:52:13,785 - Deklarisana konstanta d na liniji 2
INFO  23:52:13,785 - Deklarisana konstanta g na liniji 2
INFO  23:52:13,786 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:52:13,786 - Deklarisana promenljiva e na liniji 3
INFO  23:52:13,786 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:52:13,786 - Deklarisan niz z na liniji 3
INFO  23:52:13,787 - Pocetak obrade metode main na liniji 5
INFO  23:52:13,787 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:52:13,787 - Zavrsetak obrade programa Program na liniji 1
INFO  23:52:13,787 - ======================TABELA_SIMBOLA==========================
INFO  23:52:13,788 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:52:13,789 - ==============================================================
INFO  23:52:13,789 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:52:13,789 - ==============================================================
INFO  23:52:13,789 - ======================GENERISANJE_KODA========================
INFO  23:54:21,645 - Obrada ulaznog fajla test\program.mj
INFO  23:54:21,725 - #2 program
INFO  23:54:21,726 - #8 Program
INFO  23:54:21,726 - #5 const
INFO  23:54:21,726 - #8 int
INFO  23:54:21,727 - #8 c
INFO  23:54:21,727 - #24 =
INFO  23:54:21,727 - #9 10
INFO  23:54:21,727 - #28 ,
INFO  23:54:21,728 - #8 d
INFO  23:54:21,728 - #24 =
INFO  23:54:21,729 - #9 99
INFO  23:54:21,729 - #28 ,
INFO  23:54:21,730 - #8 g
INFO  23:54:21,730 - #24 =
INFO  23:54:21,730 - #9 2
INFO  23:54:21,730 - #27 ;
INFO  23:54:21,730 - #8 int
INFO  23:54:21,732 - #8 e
INFO  23:54:21,732 - #27 ;
INFO  23:54:21,732 - #8 char
INFO  23:54:21,733 - #8 z
INFO  23:54:21,733 - #22 [
INFO  23:54:21,734 - #23 ]
INFO  23:54:21,734 - #27 ;
INFO  23:54:21,734 - #20 {
INFO  23:54:21,734 - #6 void
INFO  23:54:21,734 - #8 main
INFO  23:54:21,734 - #29 (
INFO  23:54:21,735 - #30 )
INFO  23:54:21,735 - #20 {
INFO  23:54:21,735 - #31 if
INFO  23:54:21,735 - #29 (
INFO  23:54:21,736 - #12 false
INFO  23:54:21,736 - #30 )
INFO  23:54:21,737 - #20 {
INFO  23:54:21,737 - #3 print
INFO  23:54:21,737 - #29 (
INFO  23:54:21,737 - #9 32
INFO  23:54:21,737 - #30 )
INFO  23:54:21,737 - #27 ;
INFO  23:54:21,737 - #3 print
INFO  23:54:21,737 - #29 (
INFO  23:54:21,737 - #9 64
INFO  23:54:21,738 - #30 )
INFO  23:54:21,738 - #27 ;
INFO  23:54:21,738 - #21 }
INFO  23:54:21,738 - #3 print
INFO  23:54:21,738 - #29 (
INFO  23:54:21,738 - #9 65
INFO  23:54:21,739 - #30 )
INFO  23:54:21,739 - #27 ;
INFO  23:54:21,739 - #3 print
INFO  23:54:21,739 - #29 (
INFO  23:54:21,739 - #9 77
INFO  23:54:21,739 - #30 )
INFO  23:54:21,739 - #27 ;
INFO  23:54:21,739 - #21 }
INFO  23:54:21,739 - #21 }
INFO  23:54:21,740 - =====================SINTAKSNO_STABLO=========================
INFO  23:54:21,742 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:54:21,742 - ==============================================================
INFO  23:54:21,757 - Pocetak obrade programa Program na liniji 1
INFO  23:54:21,758 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:54:21,759 - Deklarisana konstanta c na liniji 2
INFO  23:54:21,759 - Deklarisana konstanta d na liniji 2
INFO  23:54:21,759 - Deklarisana konstanta g na liniji 2
INFO  23:54:21,759 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:54:21,759 - Deklarisana promenljiva e na liniji 3
INFO  23:54:21,759 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:54:21,760 - Deklarisan niz z na liniji 3
INFO  23:54:21,761 - Pocetak obrade metode main na liniji 5
INFO  23:54:21,761 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:54:21,762 - Zavrsetak obrade programa Program na liniji 1
INFO  23:54:21,762 - ======================TABELA_SIMBOLA==========================
INFO  23:54:21,763 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:54:21,765 - ==============================================================
INFO  23:54:21,765 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:54:21,765 - ==============================================================
INFO  23:54:21,765 - ======================GENERISANJE_KODA========================
INFO  23:54:23,793 - Obrada ulaznog fajla test\program.mj
INFO  23:54:23,899 - #2 program
INFO  23:54:23,900 - #8 Program
INFO  23:54:23,900 - #5 const
INFO  23:54:23,901 - #8 int
INFO  23:54:23,901 - #8 c
INFO  23:54:23,902 - #24 =
INFO  23:54:23,902 - #9 10
INFO  23:54:23,903 - #28 ,
INFO  23:54:23,904 - #8 d
INFO  23:54:23,904 - #24 =
INFO  23:54:23,904 - #9 99
INFO  23:54:23,904 - #28 ,
INFO  23:54:23,904 - #8 g
INFO  23:54:23,905 - #24 =
INFO  23:54:23,905 - #9 2
INFO  23:54:23,905 - #27 ;
INFO  23:54:23,905 - #8 int
INFO  23:54:23,906 - #8 e
INFO  23:54:23,907 - #27 ;
INFO  23:54:23,907 - #8 char
INFO  23:54:23,908 - #8 z
INFO  23:54:23,908 - #22 [
INFO  23:54:23,908 - #23 ]
INFO  23:54:23,908 - #27 ;
INFO  23:54:23,909 - #20 {
INFO  23:54:23,909 - #6 void
INFO  23:54:23,909 - #8 main
INFO  23:54:23,909 - #29 (
INFO  23:54:23,910 - #30 )
INFO  23:54:23,910 - #20 {
INFO  23:54:23,911 - #31 if
INFO  23:54:23,911 - #29 (
INFO  23:54:23,911 - #12 false
INFO  23:54:23,911 - #30 )
INFO  23:54:23,912 - #20 {
INFO  23:54:23,912 - #3 print
INFO  23:54:23,913 - #29 (
INFO  23:54:23,913 - #9 32
INFO  23:54:23,913 - #30 )
INFO  23:54:23,913 - #27 ;
INFO  23:54:23,913 - #3 print
INFO  23:54:23,914 - #29 (
INFO  23:54:23,915 - #9 64
INFO  23:54:23,915 - #30 )
INFO  23:54:23,915 - #27 ;
INFO  23:54:23,916 - #21 }
INFO  23:54:23,916 - #3 print
INFO  23:54:23,916 - #29 (
INFO  23:54:23,916 - #9 65
INFO  23:54:23,916 - #30 )
INFO  23:54:23,917 - #27 ;
INFO  23:54:23,917 - #3 print
INFO  23:54:23,917 - #29 (
INFO  23:54:23,917 - #9 77
INFO  23:54:23,917 - #30 )
INFO  23:54:23,917 - #27 ;
INFO  23:54:23,917 - #21 }
INFO  23:54:23,917 - #21 }
INFO  23:54:23,918 - =====================SINTAKSNO_STABLO=========================
INFO  23:54:23,920 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_multi(
      Program_con_vars_single(
        Part_const_decl(
          Const_declaration(
            Type(
             int
            ) [Type]
            Const_multi(
              Const_multi(
                Const_single(
                  Const_part(
                   c
                    Val_Num_const(
                     10
                    ) [Val_Num_const]
                  ) [Const_part]
                ) [Const_single]
                Const_part(
                 d
                  Val_Num_const(
                   99
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_multi]
              Const_part(
               g
                Val_Num_const(
                 2
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
          ) [Const_declaration]
        ) [Part_const_decl]
      ) [Program_con_vars_single]
      Part_var_decl(
        Var_declaration(
          Type(
           int
          ) [Type]
          Var_single(
            Var_normal(
             e
            ) [Var_normal]
          ) [Var_single]
        ) [Var_declaration]
      ) [Part_var_decl]
    ) [Program_con_vars_multi]
    Part_var_decl(
      Var_declaration(
        Type(
         char
        ) [Type]
        Var_single(
          Var_array(
           z
          ) [Var_array]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_multi(
            Statement_single(
              Stmt_if(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Stmt_list(
                  Statement_multi(
                    Statement_single(
                      Stmt_print_1(
                        Expr_single(
                          Term_single(
                            Factor_num_const(
                             32
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_single]
                      ) [Stmt_print_1]
                    ) [Statement_single]
                    Stmt_print_1(
                      Expr_single(
                        Term_single(
                          Factor_num_const(
                           64
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_single]
                    ) [Stmt_print_1]
                  ) [Statement_multi]
                ) [Stmt_list]
              ) [Stmt_if]
            ) [Statement_single]
            Stmt_print_1(
              Expr_single(
                Term_single(
                  Factor_num_const(
                   65
                  ) [Factor_num_const]
                ) [Term_single]
              ) [Expr_single]
            ) [Stmt_print_1]
          ) [Statement_multi]
          Stmt_print_1(
            Expr_single(
              Term_single(
                Factor_num_const(
                 77
                ) [Factor_num_const]
              ) [Term_single]
            ) [Expr_single]
          ) [Stmt_print_1]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  23:54:23,921 - ==============================================================
INFO  23:54:23,933 - Pocetak obrade programa Program na liniji 1
INFO  23:54:23,933 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  23:54:23,935 - Deklarisana konstanta c na liniji 2
INFO  23:54:23,935 - Deklarisana konstanta d na liniji 2
INFO  23:54:23,935 - Deklarisana konstanta g na liniji 2
INFO  23:54:23,935 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  23:54:23,935 - Deklarisana promenljiva e na liniji 3
INFO  23:54:23,936 - Pronadjen tip char u tabeli simbola na liniji 3
INFO  23:54:23,936 - Deklarisan niz z na liniji 3
INFO  23:54:23,937 - Pocetak obrade metode main na liniji 5
INFO  23:54:23,938 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  23:54:23,938 - Zavrsetak obrade programa Program na liniji 1
INFO  23:54:23,938 - ======================TABELA_SIMBOLA==========================
INFO  23:54:23,939 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
	Globl Var z: array of char
Meth main: none

INFO  23:54:23,942 - ==============================================================
INFO  23:54:23,942 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  23:54:23,942 - ==============================================================
INFO  23:54:23,942 - ======================GENERISANJE_KODA========================
