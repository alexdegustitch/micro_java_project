INFO  03:29:15,078 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatDX35\workspace\MJCompiler\test\program.mj
INFO  03:29:15,078 - #33 program
INFO  03:29:15,078 - #1 Program
INFO  03:29:15,078 - #29 {
INFO  03:29:15,078 - #34 const
INFO  03:29:15,078 - #1 int
INFO  03:29:15,078 - #1 c
INFO  03:29:15,078 - #7 =
INFO  03:29:15,078 - #2 10
INFO  03:29:15,078 - #6 ;
INFO  03:29:15,078 - #34 const
INFO  03:29:15,078 - #1 int
INFO  03:29:15,078 - #1 d
INFO  03:29:15,078 - #7 =
INFO  03:29:15,078 - #2 99
INFO  03:29:15,078 - #14 ,
INFO  03:29:15,078 - #1 eps
INFO  03:29:15,078 - #7 =
INFO  03:29:15,088 - #2 2
INFO  03:29:15,088 - #6 ;
INFO  03:29:15,088 - #1 int
INFO  03:29:15,088 - #1 e
INFO  03:29:15,088 - #6 ;
INFO  03:29:15,088 - #35 void
INFO  03:29:15,088 - #1 test
INFO  03:29:15,088 - #10 (
INFO  03:29:15,088 - #11 )
INFO  03:29:15,088 - #29 {
INFO  03:29:15,088 - #1 int
INFO  03:29:15,088 - #1 a
INFO  03:29:15,088 - #14 ,
INFO  03:29:15,088 - #1 b
INFO  03:29:15,088 - #6 ;
INFO  03:29:15,088 - #1 bool
INFO  03:29:15,088 - #1 cond
INFO  03:29:15,088 - #6 ;
INFO  03:29:15,088 - #1 a
INFO  03:29:15,088 - #7 =
INFO  03:29:15,088 - #2 3
INFO  03:29:15,088 - #6 ;
INFO  03:29:15,088 - #1 b
INFO  03:29:15,088 - #7 =
INFO  03:29:15,088 - #2 5
INFO  03:29:15,088 - #6 ;
INFO  03:29:15,088 - #1 cond
INFO  03:29:15,088 - #7 =
INFO  03:29:15,088 - #4 true
INFO  03:29:15,088 - #6 ;
INFO  03:29:15,088 - #23 if
INFO  03:29:15,088 - #10 (
INFO  03:29:15,088 - #2 2
INFO  03:29:15,088 - #18 *
INFO  03:29:15,088 - #10 (
INFO  03:29:15,088 - #1 a
INFO  03:29:15,088 - #17 -
INFO  03:29:15,088 - #1 b
INFO  03:29:15,088 - #17 -
INFO  03:29:15,088 - #2 1
INFO  03:29:15,088 - #11 )
INFO  03:29:15,088 - #17 -
INFO  03:29:15,088 - #2 14
INFO  03:29:15,088 - #40 >
INFO  03:29:15,088 - #2 0
INFO  03:29:15,088 - #31 ||
INFO  03:29:15,088 - #1 cond
INFO  03:29:15,088 - #11 )
INFO  03:29:15,088 - #13 print
INFO  03:29:15,088 - #10 (
INFO  03:29:15,088 - #1 a
INFO  03:29:15,088 - #16 +
INFO  03:29:15,088 - #1 b
INFO  03:29:15,088 - #11 )
INFO  03:29:15,088 - #6 ;
INFO  03:29:15,088 - #30 }
INFO  03:29:15,088 - #1 int
INFO  03:29:15,088 - #1 max
INFO  03:29:15,088 - #10 (
INFO  03:29:15,088 - #1 int
INFO  03:29:15,088 - #1 a
INFO  03:29:15,088 - #14 ,
INFO  03:29:15,088 - #1 int
INFO  03:29:15,088 - #1 b
INFO  03:29:15,088 - #11 )
INFO  03:29:15,088 - #29 {
INFO  03:29:15,088 - #23 if
INFO  03:29:15,088 - #10 (
INFO  03:29:15,088 - #1 a
INFO  03:29:15,088 - #40 >
INFO  03:29:15,088 - #1 b
INFO  03:29:15,088 - #11 )
INFO  03:29:15,088 - #29 {
INFO  03:29:15,088 - #36 return
INFO  03:29:15,088 - #1 a
INFO  03:29:15,088 - #6 ;
INFO  03:29:15,088 - #30 }
INFO  03:29:15,088 - #24 else
INFO  03:29:15,088 - #36 return
INFO  03:29:15,088 - #1 b
INFO  03:29:15,088 - #6 ;
INFO  03:29:15,088 - #30 }
INFO  03:29:15,088 - #1 int
INFO  03:29:15,088 - #1 min
INFO  03:29:15,088 - #10 (
INFO  03:29:15,088 - #1 int
INFO  03:29:15,088 - #1 a
INFO  03:29:15,088 - #14 ,
INFO  03:29:15,088 - #1 int
INFO  03:29:15,088 - #1 b
INFO  03:29:15,088 - #11 )
INFO  03:29:15,088 - #29 {
INFO  03:29:15,088 - #23 if
INFO  03:29:15,088 - #10 (
INFO  03:29:15,088 - #1 a
INFO  03:29:15,088 - #39 <
INFO  03:29:15,088 - #1 b
INFO  03:29:15,088 - #11 )
INFO  03:29:15,088 - #29 {
INFO  03:29:15,088 - #36 return
INFO  03:29:15,088 - #1 a
INFO  03:29:15,088 - #6 ;
INFO  03:29:15,088 - #30 }
INFO  03:29:15,088 - #24 else
INFO  03:29:15,088 - #29 {
INFO  03:29:15,088 - #36 return
INFO  03:29:15,088 - #1 b
INFO  03:29:15,088 - #6 ;
INFO  03:29:15,088 - #30 }
INFO  03:29:15,088 - #30 }
INFO  03:29:15,088 - #35 void
INFO  03:29:15,088 - #1 main
INFO  03:29:15,088 - #10 (
INFO  03:29:15,088 - #11 )
INFO  03:29:15,088 - #29 {
INFO  03:29:15,088 - #1 int
INFO  03:29:15,098 - #1 a
INFO  03:29:15,098 - #21 [
INFO  03:29:15,098 - #22 ]
INFO  03:29:15,098 - #6 ;
INFO  03:29:15,098 - #1 int
INFO  03:29:15,098 - #1 length
INFO  03:29:15,098 - #6 ;
INFO  03:29:15,098 - #1 int
INFO  03:29:15,098 - #1 i
INFO  03:29:15,098 - #6 ;
INFO  03:29:15,098 - #1 length
INFO  03:29:15,098 - #7 =
INFO  03:29:15,098 - #1 c
INFO  03:29:15,098 - #6 ;
INFO  03:29:15,098 - #1 test
INFO  03:29:15,098 - #10 (
INFO  03:29:15,098 - #11 )
INFO  03:29:15,098 - #6 ;
INFO  03:29:15,098 - #23 if
INFO  03:29:15,098 - #10 (
INFO  03:29:15,098 - #1 length
INFO  03:29:15,098 - #40 >
INFO  03:29:15,098 - #2 0
INFO  03:29:15,098 - #32 &&
INFO  03:29:15,098 - #1 length
INFO  03:29:15,098 - #41 <=
INFO  03:29:15,098 - #1 d
INFO  03:29:15,098 - #11 )
INFO  03:29:15,098 - #1 a
INFO  03:29:15,098 - #7 =
INFO  03:29:15,098 - #15 new
INFO  03:29:15,098 - #1 int
INFO  03:29:15,098 - #21 [
INFO  03:29:15,098 - #1 length
INFO  03:29:15,098 - #22 ]
INFO  03:29:15,098 - #6 ;
INFO  03:29:15,098 - #24 else
INFO  03:29:15,098 - #1 a
INFO  03:29:15,098 - #7 =
INFO  03:29:15,098 - #15 new
INFO  03:29:15,098 - #1 int
INFO  03:29:15,098 - #21 [
INFO  03:29:15,098 - #2 5
INFO  03:29:15,098 - #22 ]
INFO  03:29:15,098 - #6 ;
INFO  03:29:15,098 - #25 do
INFO  03:29:15,098 - #29 {
INFO  03:29:15,098 - #12 read
INFO  03:29:15,098 - #10 (
INFO  03:29:15,098 - #1 a
INFO  03:29:15,098 - #21 [
INFO  03:29:15,098 - #1 i
INFO  03:29:15,098 - #22 ]
INFO  03:29:15,098 - #11 )
INFO  03:29:15,098 - #6 ;
INFO  03:29:15,098 - #23 if
INFO  03:29:15,098 - #10 (
INFO  03:29:15,098 - #1 a
INFO  03:29:15,098 - #21 [
INFO  03:29:15,098 - #1 i
INFO  03:29:15,098 - #22 ]
INFO  03:29:15,098 - #20 %
INFO  03:29:15,098 - #2 3
INFO  03:29:15,098 - #37 ==
INFO  03:29:15,098 - #2 0
INFO  03:29:15,098 - #11 )
INFO  03:29:15,098 - #13 print
INFO  03:29:15,098 - #10 (
INFO  03:29:15,098 - #1 a
INFO  03:29:15,098 - #21 [
INFO  03:29:15,098 - #1 i
INFO  03:29:15,098 - #22 ]
INFO  03:29:15,098 - #11 )
INFO  03:29:15,098 - #6 ;
INFO  03:29:15,098 - #24 else
INFO  03:29:15,098 - #13 print
INFO  03:29:15,098 - #10 (
INFO  03:29:15,098 - #1 max
INFO  03:29:15,098 - #10 (
INFO  03:29:15,098 - #1 a
INFO  03:29:15,098 - #21 [
INFO  03:29:15,098 - #1 i
INFO  03:29:15,098 - #22 ]
INFO  03:29:15,098 - #14 ,
INFO  03:29:15,098 - #2 0
INFO  03:29:15,098 - #11 )
INFO  03:29:15,098 - #11 )
INFO  03:29:15,098 - #6 ;
INFO  03:29:15,098 - #1 i
INFO  03:29:15,098 - #8 ++
INFO  03:29:15,098 - #6 ;
INFO  03:29:15,098 - #30 }
INFO  03:29:15,098 - #26 while
INFO  03:29:15,098 - #10 (
INFO  03:29:15,098 - #1 i
INFO  03:29:15,098 - #41 <=
INFO  03:29:15,098 - #1 length
INFO  03:29:15,098 - #17 -
INFO  03:29:15,098 - #2 1
INFO  03:29:15,098 - #11 )
INFO  03:29:15,098 - #6 ;
INFO  03:29:15,098 - #13 print
INFO  03:29:15,098 - #10 (
INFO  03:29:15,098 - #1 d
INFO  03:29:15,098 - #11 )
INFO  03:29:15,098 - #6 ;
INFO  03:29:15,098 - #30 }
INFO  03:29:15,098 - #30 }
