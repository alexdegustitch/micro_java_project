INFO  20:46:23,700 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatCX15\workspace\MJCompiler\test\program.mj
INFO  20:46:23,711 - #11 program
INFO  20:46:23,711 - #11 Program
INFO  20:46:23,711 - #11 {
INFO  20:46:23,712 - #11 const
INFO  20:46:23,712 - #11 int
INFO  20:46:23,712 - #11 c
INFO  20:46:23,712 - #11 =
INFO  20:46:23,712 - #11 10
INFO  20:46:23,712 - #11 ;
INFO  20:46:23,712 - #11 const
INFO  20:46:23,713 - #11 int
INFO  20:46:23,713 - #11 d
INFO  20:46:23,713 - #11 =
INFO  20:46:23,713 - #11 99
INFO  20:46:23,713 - #11 ,
INFO  20:46:23,713 - #11 eps
INFO  20:46:23,713 - #11 =
INFO  20:46:23,713 - #11 2
INFO  20:46:23,713 - #11 ;
INFO  20:46:23,714 - #11 int
INFO  20:46:23,714 - #11 e
INFO  20:46:23,714 - #11 ;
INFO  20:46:23,714 - #11 void
INFO  20:46:23,714 - #11 test
INFO  20:46:23,714 - #11 (
INFO  20:46:23,714 - #11 )
INFO  20:46:23,714 - #11 {
INFO  20:46:23,715 - #11 int
INFO  20:46:23,715 - #11 a
INFO  20:46:23,715 - #11 ,
INFO  20:46:23,715 - #11 b
INFO  20:46:23,717 - #11 ;
INFO  20:46:23,717 - #11 bool
INFO  20:46:23,717 - #11 cond
INFO  20:46:23,717 - #11 ;
INFO  20:46:23,718 - #11 a
INFO  20:46:23,718 - #11 =
INFO  20:46:23,718 - #11 3
INFO  20:46:23,718 - #11 ;
INFO  20:46:23,718 - #11 b
INFO  20:46:23,718 - #11 =
INFO  20:46:23,719 - #11 5
INFO  20:46:23,719 - #11 ;
INFO  20:46:23,719 - #11 cond
INFO  20:46:23,719 - #11 =
INFO  20:46:23,719 - #11 true
INFO  20:46:23,720 - #11 ;
INFO  20:46:23,720 - #11 if
INFO  20:46:23,720 - #11 (
INFO  20:46:23,720 - #11 2
INFO  20:46:23,720 - #11 *
INFO  20:46:23,720 - #11 (
INFO  20:46:23,721 - #11 a
INFO  20:46:23,721 - #11 -
INFO  20:46:23,721 - #11 b
INFO  20:46:23,721 - #11 -
INFO  20:46:23,721 - #11 1
INFO  20:46:23,721 - #11 )
INFO  20:46:23,721 - #11 -
INFO  20:46:23,724 - #11 14
INFO  20:46:23,725 - #11 >
INFO  20:46:23,725 - #11 0
INFO  20:46:23,725 - #11 ||
INFO  20:46:23,725 - #11 cond
INFO  20:46:23,725 - #11 )
INFO  20:46:23,725 - #11 print
INFO  20:46:23,725 - #11 (
INFO  20:46:23,725 - #11 a
INFO  20:46:23,725 - #11 +
INFO  20:46:23,725 - #11 b
INFO  20:46:23,725 - #11 )
INFO  20:46:23,726 - #11 ;
INFO  20:46:23,726 - #11 }
INFO  20:46:23,726 - #11 int
INFO  20:46:23,726 - #11 max
INFO  20:46:23,726 - #11 (
INFO  20:46:23,726 - #11 int
INFO  20:46:23,726 - #11 a
INFO  20:46:23,726 - #11 ,
INFO  20:46:23,726 - #11 int
INFO  20:46:23,726 - #11 b
INFO  20:46:23,727 - #11 )
INFO  20:46:23,727 - #11 {
INFO  20:46:23,728 - #11 if
INFO  20:46:23,728 - #11 (
INFO  20:46:23,728 - #11 a
INFO  20:46:23,728 - #11 >
INFO  20:46:23,728 - #11 b
INFO  20:46:23,729 - #11 )
INFO  20:46:23,729 - #11 {
INFO  20:46:23,729 - #11 return
INFO  20:46:23,729 - #11 a
INFO  20:46:23,729 - #11 ;
INFO  20:46:23,729 - #11 }
INFO  20:46:23,729 - #11 else
INFO  20:46:23,730 - #11 return
INFO  20:46:23,730 - #11 b
INFO  20:46:23,730 - #11 ;
INFO  20:46:23,730 - #11 }
INFO  20:46:23,730 - #11 int
INFO  20:46:23,730 - #11 min
INFO  20:46:23,730 - #11 (
INFO  20:46:23,731 - #11 int
INFO  20:46:23,731 - #11 a
INFO  20:46:23,731 - #11 ,
INFO  20:46:23,731 - #11 int
INFO  20:46:23,731 - #11 b
INFO  20:46:23,731 - #11 )
INFO  20:46:23,731 - #11 {
INFO  20:46:23,732 - #11 if
INFO  20:46:23,732 - #11 (
INFO  20:46:23,732 - #11 a
INFO  20:46:23,732 - #11 <
INFO  20:46:23,732 - #11 b
INFO  20:46:23,732 - #11 )
INFO  20:46:23,733 - #11 {
INFO  20:46:23,733 - #11 return
INFO  20:46:23,734 - #11 a
INFO  20:46:23,734 - #11 ;
INFO  20:46:23,734 - #11 }
INFO  20:46:23,734 - #11 else
INFO  20:46:23,735 - #11 {
INFO  20:46:23,735 - #11 return
INFO  20:46:23,735 - #11 b
INFO  20:46:23,735 - #11 ;
INFO  20:46:23,735 - #11 }
INFO  20:46:23,735 - #11 }
INFO  20:46:23,735 - #11 void
INFO  20:46:23,735 - #11 main
INFO  20:46:23,735 - #11 (
INFO  20:46:23,735 - #11 )
INFO  20:46:23,735 - #11 {
INFO  20:46:23,735 - #11 int
INFO  20:46:23,735 - #11 a
INFO  20:46:23,735 - #11 [
INFO  20:46:23,736 - #11 ]
INFO  20:46:23,736 - #11 ;
INFO  20:46:23,736 - #11 int
INFO  20:46:23,736 - #11 length
INFO  20:46:23,736 - #11 ;
INFO  20:46:23,736 - #11 length
INFO  20:46:23,738 - #11 =
INFO  20:46:23,738 - #11 c
INFO  20:46:23,738 - #11 ;
INFO  20:46:23,738 - #11 test
INFO  20:46:23,739 - #11 (
INFO  20:46:23,739 - #11 )
INFO  20:46:23,739 - #11 ;
INFO  20:46:23,739 - #11 if
INFO  20:46:23,739 - #11 (
INFO  20:46:23,739 - #11 length
INFO  20:46:23,739 - #11 >
INFO  20:46:23,739 - #11 0
INFO  20:46:23,740 - #11 &&
INFO  20:46:23,740 - #11 length
INFO  20:46:23,740 - #11 <=
INFO  20:46:23,740 - #11 d
INFO  20:46:23,740 - #11 )
INFO  20:46:23,740 - #11 a
INFO  20:46:23,740 - #11 =
INFO  20:46:23,740 - #11 new
INFO  20:46:23,740 - #11 int
INFO  20:46:23,740 - #11 [
INFO  20:46:23,740 - #11 length
INFO  20:46:23,741 - #11 ]
INFO  20:46:23,741 - #11 ;
INFO  20:46:23,741 - #11 else
INFO  20:46:23,741 - #11 a
INFO  20:46:23,741 - #11 =
INFO  20:46:23,741 - #11 new
INFO  20:46:23,741 - #11 int
INFO  20:46:23,741 - #11 [
INFO  20:46:23,742 - #11 5
INFO  20:46:23,742 - #11 ]
INFO  20:46:23,742 - #11 ;
INFO  20:46:23,742 - #11 do
INFO  20:46:23,742 - #11 {
INFO  20:46:23,742 - #11 read
INFO  20:46:23,742 - #11 (
INFO  20:46:23,742 - #11 a
INFO  20:46:23,742 - #11 [
INFO  20:46:23,742 - #11 i
INFO  20:46:23,742 - #11 ]
INFO  20:46:23,742 - #11 )
INFO  20:46:23,742 - #11 ;
INFO  20:46:23,742 - #11 if
INFO  20:46:23,743 - #11 (
INFO  20:46:23,743 - #11 a
INFO  20:46:23,743 - #11 [
INFO  20:46:23,743 - #11 i
INFO  20:46:23,743 - #11 ]
INFO  20:46:23,743 - #11 %
INFO  20:46:23,743 - #11 3
INFO  20:46:23,743 - #11 ==
INFO  20:46:23,743 - #11 0
INFO  20:46:23,744 - #11 )
INFO  20:46:23,744 - #11 print
INFO  20:46:23,744 - #11 (
INFO  20:46:23,744 - #11 a
INFO  20:46:23,744 - #11 [
INFO  20:46:23,744 - #11 i
INFO  20:46:23,744 - #11 ]
INFO  20:46:23,744 - #11 )
INFO  20:46:23,744 - #11 ;
INFO  20:46:23,744 - #11 else
INFO  20:46:23,744 - #11 print
INFO  20:46:23,744 - #11 (
INFO  20:46:23,744 - #11 max
INFO  20:46:23,744 - #11 (
INFO  20:46:23,744 - #11 a
INFO  20:46:23,745 - #11 [
INFO  20:46:23,745 - #11 i
INFO  20:46:23,745 - #11 ]
INFO  20:46:23,745 - #11 ,
INFO  20:46:23,745 - #11 0
INFO  20:46:23,745 - #11 )
INFO  20:46:23,745 - #11 )
INFO  20:46:23,745 - #11 ;
INFO  20:46:23,745 - #11 }
INFO  20:46:23,745 - #11 while
INFO  20:46:23,745 - #11 (
INFO  20:46:23,745 - #11 i
INFO  20:46:23,745 - #11 <=
INFO  20:46:23,745 - #11 length
INFO  20:46:23,745 - #11 -
INFO  20:46:23,745 - #11 1
INFO  20:46:23,746 - #11 )
INFO  20:46:23,746 - #11 ;
INFO  20:46:23,746 - #11 print
INFO  20:46:23,746 - #11 (
INFO  20:46:23,746 - #11 d
INFO  20:46:23,746 - #11 )
INFO  20:46:23,746 - #11 ;
INFO  20:46:23,746 - #11 }
INFO  20:46:23,746 - #11 }
