INFO  00:39:29,399 - Obrada ulaznog fajla test\program.mj
INFO  00:39:29,514 - #2 program
INFO  00:39:29,514 - #8 Program
INFO  00:39:29,514 - #5 const
INFO  00:39:29,516 - #8 int
INFO  00:39:29,516 - #8 c
INFO  00:39:29,518 - #24 =
INFO  00:39:29,518 - #9 10
INFO  00:39:29,519 - #28 ,
INFO  00:39:29,520 - #8 d
INFO  00:39:29,520 - #24 =
INFO  00:39:29,520 - #9 99
INFO  00:39:29,521 - #28 ,
INFO  00:39:29,521 - #8 g
INFO  00:39:29,521 - #24 =
INFO  00:39:29,521 - #9 2
INFO  00:39:29,521 - #27 ;
INFO  00:39:29,522 - #8 int
INFO  00:39:29,524 - #8 e
INFO  00:39:29,524 - #27 ;
INFO  00:39:29,525 - #20 {
INFO  00:39:29,527 - #6 void
INFO  00:39:29,527 - #8 main
INFO  00:39:29,528 - #29 (
INFO  00:39:29,529 - #30 )
INFO  00:39:29,529 - #20 {
INFO  00:39:29,529 - #8 e
INFO  00:39:29,529 - #24 =
INFO  00:39:29,531 - #9 10
INFO  00:39:29,531 - #27 ;
INFO  00:39:29,532 - #31 if
INFO  00:39:29,533 - #29 (
INFO  00:39:29,533 - #8 e
INFO  00:39:29,533 - #42 <=
INFO  00:39:29,533 - #8 d
INFO  00:39:29,535 - #30 )
INFO  00:39:29,537 - #20 {
INFO  00:39:29,537 - #8 e
INFO  00:39:29,537 - #25 ++
INFO  00:39:29,537 - #27 ;
INFO  00:39:29,538 - #3 print
INFO  00:39:29,538 - #29 (
INFO  00:39:29,538 - #8 e
INFO  00:39:29,538 - #30 )
INFO  00:39:29,538 - #27 ;
INFO  00:39:29,538 - #21 }
INFO  00:39:29,538 - #21 }
INFO  00:39:29,540 - #21 }
INFO  00:39:29,541 - =====================SINTAKSNO_STABLO=========================
INFO  00:39:29,546 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:39:29,547 - ==============================================================
INFO  00:39:29,562 - Pocetak obrade programa Program na liniji 1
INFO  00:39:29,562 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:39:29,564 - Deklarisana konstanta c na liniji 2
INFO  00:39:29,564 - Deklarisana konstanta d na liniji 2
INFO  00:39:29,564 - Deklarisana konstanta g na liniji 2
INFO  00:39:29,564 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:39:29,564 - Deklarisana promenljiva e na liniji 3
INFO  00:39:29,566 - Pocetak obrade metode main na liniji 5
INFO  00:39:29,567 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:39:29,567 - Zavrsetak obrade programa Program na liniji 1
INFO  00:39:29,567 - ======================TABELA_SIMBOLA==========================
INFO  00:39:29,568 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:39:29,569 - ==============================================================
INFO  00:39:29,569 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:39:29,569 - ==============================================================
INFO  00:39:29,569 - ======================GENERISANJE_KODA========================
INFO  00:39:29,576 - 1
INFO  00:39:29,576 - 3
INFO  00:39:29,576 - Final!
INFO  00:39:29,579 - Generisanje koda uspesno zavrseno!
INFO  00:39:29,579 - Generisanje izlaznog fajla test\program.obj
INFO  00:39:29,579 - ==============================================================
INFO  00:40:11,055 - Obrada ulaznog fajla test\program.mj
INFO  00:40:11,133 - #2 program
INFO  00:40:11,134 - #8 Program
INFO  00:40:11,134 - #5 const
INFO  00:40:11,135 - #8 int
INFO  00:40:11,135 - #8 c
INFO  00:40:11,136 - #24 =
INFO  00:40:11,136 - #9 10
INFO  00:40:11,136 - #28 ,
INFO  00:40:11,137 - #8 d
INFO  00:40:11,137 - #24 =
INFO  00:40:11,137 - #9 99
INFO  00:40:11,138 - #28 ,
INFO  00:40:11,138 - #8 g
INFO  00:40:11,138 - #24 =
INFO  00:40:11,138 - #9 2
INFO  00:40:11,138 - #27 ;
INFO  00:40:11,138 - #8 int
INFO  00:40:11,140 - #8 e
INFO  00:40:11,140 - #27 ;
INFO  00:40:11,140 - #20 {
INFO  00:40:11,141 - #6 void
INFO  00:40:11,141 - #8 main
INFO  00:40:11,141 - #29 (
INFO  00:40:11,142 - #30 )
INFO  00:40:11,142 - #20 {
INFO  00:40:11,142 - #8 e
INFO  00:40:11,143 - #24 =
INFO  00:40:11,143 - #9 10
INFO  00:40:11,143 - #27 ;
INFO  00:40:11,143 - #31 if
INFO  00:40:11,144 - #29 (
INFO  00:40:11,144 - #8 e
INFO  00:40:11,144 - #38 >
INFO  00:40:11,144 - #9 0
INFO  00:40:11,145 - #13 &&
INFO  00:40:11,146 - #8 e
INFO  00:40:11,146 - #42 <=
INFO  00:40:11,146 - #8 d
INFO  00:40:11,146 - #30 )
INFO  00:40:11,147 - #20 {
INFO  00:40:11,147 - #8 e
INFO  00:40:11,147 - #25 ++
INFO  00:40:11,148 - #27 ;
INFO  00:40:11,148 - #3 print
INFO  00:40:11,148 - #29 (
INFO  00:40:11,148 - #8 e
INFO  00:40:11,148 - #30 )
INFO  00:40:11,148 - #27 ;
INFO  00:40:11,148 - #21 }
INFO  00:40:11,148 - #21 }
INFO  00:40:11,149 - #21 }
INFO  00:40:11,150 - =====================SINTAKSNO_STABLO=========================
INFO  00:40:11,152 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:40:11,153 - ==============================================================
INFO  00:40:11,166 - Pocetak obrade programa Program na liniji 1
INFO  00:40:11,166 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:40:11,167 - Deklarisana konstanta c na liniji 2
INFO  00:40:11,168 - Deklarisana konstanta d na liniji 2
INFO  00:40:11,168 - Deklarisana konstanta g na liniji 2
INFO  00:40:11,168 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:40:11,168 - Deklarisana promenljiva e na liniji 3
INFO  00:40:11,169 - Pocetak obrade metode main na liniji 5
INFO  00:40:11,170 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:40:11,170 - Zavrsetak obrade programa Program na liniji 1
INFO  00:40:11,170 - ======================TABELA_SIMBOLA==========================
INFO  00:40:11,171 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:40:11,171 - ==============================================================
INFO  00:40:11,171 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:40:11,171 - ==============================================================
INFO  00:40:11,171 - ======================GENERISANJE_KODA========================
INFO  00:40:11,175 - 1
INFO  00:40:11,175 - 2
INFO  00:40:11,175 - 3
INFO  00:40:11,175 - Final!
INFO  00:42:39,826 - Obrada ulaznog fajla test\program.mj
INFO  00:42:39,905 - #2 program
INFO  00:42:39,905 - #8 Program
INFO  00:42:39,905 - #5 const
INFO  00:42:39,906 - #8 int
INFO  00:42:39,906 - #8 c
INFO  00:42:39,907 - #24 =
INFO  00:42:39,907 - #9 10
INFO  00:42:39,907 - #28 ,
INFO  00:42:39,909 - #8 d
INFO  00:42:39,909 - #24 =
INFO  00:42:39,909 - #9 99
INFO  00:42:39,909 - #28 ,
INFO  00:42:39,909 - #8 g
INFO  00:42:39,909 - #24 =
INFO  00:42:39,909 - #9 2
INFO  00:42:39,910 - #27 ;
INFO  00:42:39,910 - #8 int
INFO  00:42:39,911 - #8 e
INFO  00:42:39,911 - #27 ;
INFO  00:42:39,912 - #20 {
INFO  00:42:39,913 - #6 void
INFO  00:42:39,913 - #8 main
INFO  00:42:39,913 - #29 (
INFO  00:42:39,915 - #30 )
INFO  00:42:39,915 - #20 {
INFO  00:42:39,915 - #8 e
INFO  00:42:39,915 - #24 =
INFO  00:42:39,915 - #9 10
INFO  00:42:39,915 - #27 ;
INFO  00:42:39,916 - #31 if
INFO  00:42:39,916 - #29 (
INFO  00:42:39,916 - #8 e
INFO  00:42:39,916 - #38 >
INFO  00:42:39,917 - #9 0
INFO  00:42:39,918 - #13 &&
INFO  00:42:39,918 - #8 e
INFO  00:42:39,918 - #42 <=
INFO  00:42:39,919 - #8 d
INFO  00:42:39,919 - #30 )
INFO  00:42:39,920 - #20 {
INFO  00:42:39,920 - #8 e
INFO  00:42:39,920 - #25 ++
INFO  00:42:39,920 - #27 ;
INFO  00:42:39,921 - #3 print
INFO  00:42:39,921 - #29 (
INFO  00:42:39,921 - #8 e
INFO  00:42:39,921 - #30 )
INFO  00:42:39,921 - #27 ;
INFO  00:42:39,921 - #21 }
INFO  00:42:39,921 - #21 }
INFO  00:42:39,923 - #21 }
INFO  00:42:39,924 - =====================SINTAKSNO_STABLO=========================
INFO  00:42:39,927 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:42:39,927 - ==============================================================
INFO  00:42:39,942 - Pocetak obrade programa Program na liniji 1
INFO  00:42:39,942 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:42:39,943 - Deklarisana konstanta c na liniji 2
INFO  00:42:39,943 - Deklarisana konstanta d na liniji 2
INFO  00:42:39,943 - Deklarisana konstanta g na liniji 2
INFO  00:42:39,943 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:42:39,943 - Deklarisana promenljiva e na liniji 3
INFO  00:42:39,944 - Pocetak obrade metode main na liniji 5
INFO  00:42:39,945 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:42:39,945 - Zavrsetak obrade programa Program na liniji 1
INFO  00:42:39,945 - ======================TABELA_SIMBOLA==========================
INFO  00:42:39,945 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:42:39,946 - ==============================================================
INFO  00:42:39,946 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:42:39,946 - ==============================================================
INFO  00:42:39,946 - ======================GENERISANJE_KODA========================
INFO  00:42:39,950 - 1
INFO  00:42:39,950 - 2
INFO  00:42:39,950 - 3
INFO  00:42:39,951 - Final!
INFO  00:42:51,670 - Obrada ulaznog fajla test\program.mj
INFO  00:42:51,746 - #2 program
INFO  00:42:51,746 - #8 Program
INFO  00:42:51,746 - #5 const
INFO  00:42:51,747 - #8 int
INFO  00:42:51,747 - #8 c
INFO  00:42:51,748 - #24 =
INFO  00:42:51,748 - #9 10
INFO  00:42:51,748 - #28 ,
INFO  00:42:51,750 - #8 d
INFO  00:42:51,750 - #24 =
INFO  00:42:51,750 - #9 99
INFO  00:42:51,750 - #28 ,
INFO  00:42:51,750 - #8 g
INFO  00:42:51,750 - #24 =
INFO  00:42:51,750 - #9 2
INFO  00:42:51,750 - #27 ;
INFO  00:42:51,751 - #8 int
INFO  00:42:51,752 - #8 e
INFO  00:42:51,752 - #27 ;
INFO  00:42:51,752 - #20 {
INFO  00:42:51,753 - #6 void
INFO  00:42:51,753 - #8 main
INFO  00:42:51,753 - #29 (
INFO  00:42:51,754 - #30 )
INFO  00:42:51,754 - #20 {
INFO  00:42:51,754 - #8 e
INFO  00:42:51,754 - #24 =
INFO  00:42:51,755 - #9 10
INFO  00:42:51,755 - #27 ;
INFO  00:42:51,755 - #31 if
INFO  00:42:51,756 - #29 (
INFO  00:42:51,756 - #8 e
INFO  00:42:51,756 - #38 >
INFO  00:42:51,756 - #9 0
INFO  00:42:51,758 - #13 &&
INFO  00:42:51,759 - #8 e
INFO  00:42:51,759 - #42 <=
INFO  00:42:51,759 - #8 d
INFO  00:42:51,760 - #30 )
INFO  00:42:51,761 - #20 {
INFO  00:42:51,761 - #8 e
INFO  00:42:51,761 - #25 ++
INFO  00:42:51,762 - #27 ;
INFO  00:42:51,762 - #3 print
INFO  00:42:51,762 - #29 (
INFO  00:42:51,762 - #8 e
INFO  00:42:51,762 - #30 )
INFO  00:42:51,762 - #27 ;
INFO  00:42:51,762 - #21 }
INFO  00:42:51,763 - #21 }
INFO  00:42:51,764 - #21 }
INFO  00:42:51,765 - =====================SINTAKSNO_STABLO=========================
INFO  00:42:51,767 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:42:51,768 - ==============================================================
INFO  00:42:51,781 - Pocetak obrade programa Program na liniji 1
INFO  00:42:51,781 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:42:51,782 - Deklarisana konstanta c na liniji 2
INFO  00:42:51,782 - Deklarisana konstanta d na liniji 2
INFO  00:42:51,782 - Deklarisana konstanta g na liniji 2
INFO  00:42:51,783 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:42:51,783 - Deklarisana promenljiva e na liniji 3
INFO  00:42:51,784 - Pocetak obrade metode main na liniji 5
INFO  00:42:51,784 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:42:51,784 - Zavrsetak obrade programa Program na liniji 1
INFO  00:42:51,784 - ======================TABELA_SIMBOLA==========================
INFO  00:42:51,785 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:42:51,785 - ==============================================================
INFO  00:42:51,785 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:42:51,785 - ==============================================================
INFO  00:42:51,785 - ======================GENERISANJE_KODA========================
INFO  00:42:51,791 - 1
INFO  00:42:51,791 - 2
INFO  00:42:51,791 - 3
INFO  00:42:51,791 - Final!
INFO  00:49:29,329 - Obrada ulaznog fajla test\program.mj
INFO  00:49:29,409 - #2 program
INFO  00:49:29,409 - #8 Program
INFO  00:49:29,409 - #5 const
INFO  00:49:29,410 - #8 int
INFO  00:49:29,410 - #8 c
INFO  00:49:29,411 - #24 =
INFO  00:49:29,411 - #9 10
INFO  00:49:29,411 - #28 ,
INFO  00:49:29,412 - #8 d
INFO  00:49:29,412 - #24 =
INFO  00:49:29,412 - #9 99
INFO  00:49:29,412 - #28 ,
INFO  00:49:29,412 - #8 g
INFO  00:49:29,412 - #24 =
INFO  00:49:29,413 - #9 2
INFO  00:49:29,413 - #27 ;
INFO  00:49:29,413 - #8 int
INFO  00:49:29,414 - #8 e
INFO  00:49:29,414 - #27 ;
INFO  00:49:29,414 - #20 {
INFO  00:49:29,415 - #6 void
INFO  00:49:29,415 - #8 main
INFO  00:49:29,416 - #29 (
INFO  00:49:29,416 - #30 )
INFO  00:49:29,416 - #20 {
INFO  00:49:29,417 - #8 e
INFO  00:49:29,417 - #24 =
INFO  00:49:29,417 - #9 10
INFO  00:49:29,417 - #27 ;
INFO  00:49:29,418 - #31 if
INFO  00:49:29,418 - #29 (
INFO  00:49:29,418 - #8 e
INFO  00:49:29,418 - #38 >
INFO  00:49:29,418 - #9 0
INFO  00:49:29,420 - #13 &&
INFO  00:49:29,420 - #8 e
INFO  00:49:29,420 - #42 <=
INFO  00:49:29,420 - #8 d
INFO  00:49:29,421 - #30 )
INFO  00:49:29,423 - #20 {
INFO  00:49:29,423 - #8 e
INFO  00:49:29,423 - #25 ++
INFO  00:49:29,423 - #27 ;
INFO  00:49:29,423 - #3 print
INFO  00:49:29,423 - #29 (
INFO  00:49:29,423 - #8 e
INFO  00:49:29,424 - #30 )
INFO  00:49:29,424 - #27 ;
INFO  00:49:29,424 - #21 }
INFO  00:49:29,424 - #21 }
INFO  00:49:29,425 - #21 }
INFO  00:49:29,426 - =====================SINTAKSNO_STABLO=========================
INFO  00:49:29,428 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:49:29,429 - ==============================================================
INFO  00:49:29,442 - Pocetak obrade programa Program na liniji 1
INFO  00:49:29,443 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:49:29,444 - Deklarisana konstanta c na liniji 2
INFO  00:49:29,444 - Deklarisana konstanta d na liniji 2
INFO  00:49:29,444 - Deklarisana konstanta g na liniji 2
INFO  00:49:29,444 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:49:29,444 - Deklarisana promenljiva e na liniji 3
INFO  00:49:29,445 - Pocetak obrade metode main na liniji 5
INFO  00:49:29,445 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:49:29,445 - Zavrsetak obrade programa Program na liniji 1
INFO  00:49:29,445 - ======================TABELA_SIMBOLA==========================
INFO  00:49:29,446 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:49:29,446 - ==============================================================
INFO  00:49:29,446 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:49:29,446 - ==============================================================
INFO  00:49:29,446 - ======================GENERISANJE_KODA========================
INFO  00:49:29,451 - 1
INFO  00:49:29,452 - 2
INFO  00:49:29,452 - 3
INFO  00:49:29,452 - Final!
INFO  00:49:29,454 - Generisanje koda uspesno zavrseno!
INFO  00:49:29,455 - Generisanje izlaznog fajla test\program.obj
INFO  00:49:29,455 - ==============================================================
INFO  00:49:50,066 - Obrada ulaznog fajla test\program.mj
INFO  00:49:50,155 - #2 program
INFO  00:49:50,155 - #8 Program
INFO  00:49:50,155 - #5 const
INFO  00:49:50,156 - #8 int
INFO  00:49:50,156 - #8 c
INFO  00:49:50,157 - #24 =
INFO  00:49:50,157 - #9 10
INFO  00:49:50,157 - #28 ,
INFO  00:49:50,158 - #8 d
INFO  00:49:50,158 - #24 =
INFO  00:49:50,159 - #9 99
INFO  00:49:50,159 - #28 ,
INFO  00:49:50,159 - #8 g
INFO  00:49:50,159 - #24 =
INFO  00:49:50,159 - #9 2
INFO  00:49:50,159 - #27 ;
INFO  00:49:50,159 - #8 int
INFO  00:49:50,160 - #8 e
INFO  00:49:50,160 - #27 ;
INFO  00:49:50,161 - #20 {
INFO  00:49:50,162 - #6 void
INFO  00:49:50,162 - #8 main
INFO  00:49:50,162 - #29 (
INFO  00:49:50,163 - #30 )
INFO  00:49:50,163 - #20 {
INFO  00:49:50,163 - #8 e
INFO  00:49:50,163 - #24 =
INFO  00:49:50,163 - #9 10
INFO  00:49:50,163 - #27 ;
INFO  00:49:50,164 - #31 if
INFO  00:49:50,164 - #29 (
INFO  00:49:50,164 - #8 e
INFO  00:49:50,165 - #38 >
INFO  00:49:50,165 - #9 0
INFO  00:49:50,166 - #13 &&
INFO  00:49:50,166 - #8 e
INFO  00:49:50,166 - #42 <=
INFO  00:49:50,166 - #8 d
INFO  00:49:50,168 - #30 )
INFO  00:49:50,169 - #20 {
INFO  00:49:50,169 - #8 e
INFO  00:49:50,169 - #25 ++
INFO  00:49:50,169 - #27 ;
INFO  00:49:50,170 - #3 print
INFO  00:49:50,170 - #29 (
INFO  00:49:50,170 - #8 e
INFO  00:49:50,170 - #30 )
INFO  00:49:50,170 - #27 ;
INFO  00:49:50,170 - #21 }
INFO  00:49:50,170 - #21 }
INFO  00:49:50,172 - #21 }
INFO  00:49:50,173 - =====================SINTAKSNO_STABLO=========================
INFO  00:49:50,174 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:49:50,175 - ==============================================================
INFO  00:49:50,189 - Pocetak obrade programa Program na liniji 1
INFO  00:49:50,189 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:49:50,190 - Deklarisana konstanta c na liniji 2
INFO  00:49:50,190 - Deklarisana konstanta d na liniji 2
INFO  00:49:50,190 - Deklarisana konstanta g na liniji 2
INFO  00:49:50,191 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:49:50,191 - Deklarisana promenljiva e na liniji 3
INFO  00:49:50,191 - Pocetak obrade metode main na liniji 5
INFO  00:49:50,192 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:49:50,192 - Zavrsetak obrade programa Program na liniji 1
INFO  00:49:50,192 - ======================TABELA_SIMBOLA==========================
INFO  00:49:50,193 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:49:50,193 - ==============================================================
INFO  00:49:50,193 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:49:50,193 - ==============================================================
INFO  00:49:50,193 - ======================GENERISANJE_KODA========================
INFO  00:49:50,197 - 1
INFO  00:49:50,198 - 2
INFO  00:49:50,198 - 3
INFO  00:49:50,198 - Final!
INFO  00:49:50,199 - Generisanje koda uspesno zavrseno!
INFO  00:49:50,201 - Generisanje izlaznog fajla test\program.obj
INFO  00:49:50,201 - ==============================================================
INFO  00:50:15,598 - Obrada ulaznog fajla test\program.mj
INFO  00:50:15,677 - #2 program
INFO  00:50:15,677 - #8 Program
INFO  00:50:15,677 - #5 const
INFO  00:50:15,678 - #8 int
INFO  00:50:15,678 - #8 c
INFO  00:50:15,679 - #24 =
INFO  00:50:15,679 - #9 10
INFO  00:50:15,679 - #28 ,
INFO  00:50:15,680 - #8 d
INFO  00:50:15,680 - #24 =
INFO  00:50:15,680 - #9 99
INFO  00:50:15,680 - #28 ,
INFO  00:50:15,681 - #8 g
INFO  00:50:15,681 - #24 =
INFO  00:50:15,681 - #9 2
INFO  00:50:15,681 - #27 ;
INFO  00:50:15,681 - #8 int
INFO  00:50:15,683 - #8 e
INFO  00:50:15,683 - #27 ;
INFO  00:50:15,683 - #20 {
INFO  00:50:15,684 - #6 void
INFO  00:50:15,685 - #8 main
INFO  00:50:15,685 - #29 (
INFO  00:50:15,685 - #30 )
INFO  00:50:15,686 - #20 {
INFO  00:50:15,686 - #8 e
INFO  00:50:15,686 - #24 =
INFO  00:50:15,686 - #9 10
INFO  00:50:15,686 - #27 ;
INFO  00:50:15,687 - #31 if
INFO  00:50:15,687 - #29 (
INFO  00:50:15,688 - #8 e
INFO  00:50:15,688 - #38 >
INFO  00:50:15,688 - #9 0
INFO  00:50:15,689 - #14 ||
INFO  00:50:15,690 - #8 e
INFO  00:50:15,690 - #42 <=
INFO  00:50:15,690 - #8 d
INFO  00:50:15,691 - #30 )
INFO  00:50:15,692 - #20 {
INFO  00:50:15,692 - #8 e
INFO  00:50:15,692 - #25 ++
INFO  00:50:15,693 - #27 ;
INFO  00:50:15,693 - #3 print
INFO  00:50:15,693 - #29 (
INFO  00:50:15,693 - #8 e
INFO  00:50:15,693 - #30 )
INFO  00:50:15,693 - #27 ;
INFO  00:50:15,693 - #21 }
INFO  00:50:15,694 - #21 }
INFO  00:50:15,695 - #21 }
INFO  00:50:15,696 - =====================SINTAKSNO_STABLO=========================
INFO  00:50:15,697 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  00:50:15,698 - ==============================================================
INFO  00:50:15,710 - Pocetak obrade programa Program na liniji 1
INFO  00:50:15,710 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  00:50:15,711 - Deklarisana konstanta c na liniji 2
INFO  00:50:15,712 - Deklarisana konstanta d na liniji 2
INFO  00:50:15,712 - Deklarisana konstanta g na liniji 2
INFO  00:50:15,712 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  00:50:15,712 - Deklarisana promenljiva e na liniji 3
INFO  00:50:15,713 - Pocetak obrade metode main na liniji 5
INFO  00:50:15,713 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  00:50:15,714 - Zavrsetak obrade programa Program na liniji 1
INFO  00:50:15,714 - ======================TABELA_SIMBOLA==========================
INFO  00:50:15,715 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  00:50:15,715 - ==============================================================
INFO  00:50:15,715 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  00:50:15,715 - ==============================================================
INFO  00:50:15,715 - ======================GENERISANJE_KODA========================
INFO  00:50:15,719 - 1
INFO  00:50:15,719 - 3
INFO  00:50:15,719 - 1
INFO  00:50:15,721 - 4
INFO  00:50:15,721 - Final!
INFO  00:50:15,725 - Generisanje koda uspesno zavrseno!
INFO  00:50:15,725 - Generisanje izlaznog fajla test\program.obj
INFO  00:50:15,725 - ==============================================================
INFO  01:46:23,811 - Obrada ulaznog fajla test\program.mj
INFO  01:46:23,897 - #2 program
INFO  01:46:23,897 - #8 Program
INFO  01:46:23,897 - #5 const
INFO  01:46:23,898 - #8 int
INFO  01:46:23,899 - #8 c
INFO  01:46:23,899 - #24 =
INFO  01:46:23,899 - #9 10
INFO  01:46:23,899 - #28 ,
INFO  01:46:23,900 - #8 d
INFO  01:46:23,900 - #24 =
INFO  01:46:23,900 - #9 99
INFO  01:46:23,901 - #28 ,
INFO  01:46:23,901 - #8 g
INFO  01:46:23,901 - #24 =
INFO  01:46:23,901 - #9 2
INFO  01:46:23,901 - #27 ;
INFO  01:46:23,901 - #8 int
INFO  01:46:23,903 - #8 e
INFO  01:46:23,903 - #27 ;
INFO  01:46:23,903 - #20 {
INFO  01:46:23,904 - #6 void
INFO  01:46:23,904 - #8 main
INFO  01:46:23,904 - #29 (
INFO  01:46:23,905 - #30 )
INFO  01:46:23,905 - #20 {
INFO  01:46:23,906 - #8 e
INFO  01:46:23,906 - #24 =
INFO  01:46:23,906 - #9 10
INFO  01:46:23,906 - #27 ;
INFO  01:46:23,907 - #31 if
INFO  01:46:23,908 - #29 (
INFO  01:46:23,908 - #8 e
INFO  01:46:23,908 - #38 >
INFO  01:46:23,908 - #9 0
INFO  01:46:23,910 - #14 ||
INFO  01:46:23,911 - #8 e
INFO  01:46:23,911 - #42 <=
INFO  01:46:23,911 - #8 d
INFO  01:46:23,912 - #30 )
INFO  01:46:23,913 - #20 {
INFO  01:46:23,913 - #8 e
INFO  01:46:23,913 - #25 ++
INFO  01:46:23,914 - #27 ;
INFO  01:46:23,914 - #3 print
INFO  01:46:23,914 - #29 (
INFO  01:46:23,914 - #8 e
INFO  01:46:23,914 - #30 )
INFO  01:46:23,914 - #27 ;
INFO  01:46:23,914 - #21 }
INFO  01:46:23,915 - #21 }
INFO  01:46:23,916 - #21 }
INFO  01:46:23,917 - =====================SINTAKSNO_STABLO=========================
INFO  01:46:23,919 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  01:46:23,920 - ==============================================================
INFO  01:46:23,934 - Pocetak obrade programa Program na liniji 1
INFO  01:46:23,934 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  01:46:23,935 - Deklarisana konstanta c na liniji 2
INFO  01:46:23,935 - Deklarisana konstanta d na liniji 2
INFO  01:46:23,935 - Deklarisana konstanta g na liniji 2
INFO  01:46:23,935 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  01:46:23,935 - Deklarisana promenljiva e na liniji 3
INFO  01:46:23,937 - Pocetak obrade metode main na liniji 5
INFO  01:46:23,938 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  01:46:23,938 - Zavrsetak obrade programa Program na liniji 1
INFO  01:46:23,938 - ======================TABELA_SIMBOLA==========================
INFO  01:46:23,939 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  01:46:23,939 - ==============================================================
INFO  01:46:23,939 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  01:46:23,939 - ==============================================================
INFO  01:46:23,939 - ======================GENERISANJE_KODA========================
INFO  01:46:23,943 - 1
INFO  01:46:23,943 - 3
INFO  01:46:23,943 - 1
INFO  01:46:23,944 - 4
INFO  01:46:23,944 - Final!
INFO  01:46:23,946 - Generisanje koda uspesno zavrseno!
INFO  01:46:23,947 - Generisanje izlaznog fajla test\program.obj
INFO  01:46:23,947 - ==============================================================
INFO  01:59:32,452 - Obrada ulaznog fajla test\program.mj
INFO  01:59:32,537 - #2 program
INFO  01:59:32,537 - #8 Program
INFO  01:59:32,537 - #5 const
INFO  01:59:32,539 - #8 int
INFO  01:59:32,539 - #8 c
INFO  01:59:32,540 - #24 =
INFO  01:59:32,540 - #9 10
INFO  01:59:32,540 - #28 ,
INFO  01:59:32,541 - #8 d
INFO  01:59:32,541 - #24 =
INFO  01:59:32,542 - #9 99
INFO  01:59:32,542 - #28 ,
INFO  01:59:32,542 - #8 g
INFO  01:59:32,542 - #24 =
INFO  01:59:32,542 - #9 2
INFO  01:59:32,542 - #27 ;
INFO  01:59:32,542 - #8 int
INFO  01:59:32,544 - #8 e
INFO  01:59:32,544 - #27 ;
INFO  01:59:32,545 - #20 {
INFO  01:59:32,546 - #6 void
INFO  01:59:32,546 - #8 main
INFO  01:59:32,546 - #29 (
INFO  01:59:32,547 - #30 )
INFO  01:59:32,547 - #20 {
INFO  01:59:32,547 - #8 e
INFO  01:59:32,547 - #24 =
INFO  01:59:32,548 - #9 10
INFO  01:59:32,548 - #27 ;
INFO  01:59:32,549 - #31 if
INFO  01:59:32,549 - #29 (
INFO  01:59:32,549 - #8 e
INFO  01:59:32,549 - #38 >
INFO  01:59:32,549 - #9 0
INFO  01:59:32,551 - #14 ||
INFO  01:59:32,551 - #8 e
INFO  01:59:32,551 - #42 <=
INFO  01:59:32,551 - #8 d
INFO  01:59:32,552 - #30 )
INFO  01:59:32,553 - #20 {
INFO  01:59:32,553 - #8 e
INFO  01:59:32,553 - #25 ++
INFO  01:59:32,553 - #27 ;
INFO  01:59:32,554 - #3 print
INFO  01:59:32,554 - #29 (
INFO  01:59:32,554 - #8 e
INFO  01:59:32,554 - #30 )
INFO  01:59:32,554 - #27 ;
INFO  01:59:32,554 - #21 }
INFO  01:59:32,555 - #21 }
INFO  01:59:32,556 - #21 }
INFO  01:59:32,557 - =====================SINTAKSNO_STABLO=========================
INFO  01:59:32,559 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  01:59:32,560 - ==============================================================
INFO  01:59:32,575 - Pocetak obrade programa Program na liniji 1
INFO  01:59:32,575 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  01:59:32,576 - Deklarisana konstanta c na liniji 2
INFO  01:59:32,576 - Deklarisana konstanta d na liniji 2
INFO  01:59:32,576 - Deklarisana konstanta g na liniji 2
INFO  01:59:32,577 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  01:59:32,577 - Deklarisana promenljiva e na liniji 3
INFO  01:59:32,577 - Pocetak obrade metode main na liniji 5
INFO  01:59:32,578 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  01:59:32,578 - Zavrsetak obrade programa Program na liniji 1
INFO  01:59:32,578 - ======================TABELA_SIMBOLA==========================
INFO  01:59:32,579 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  01:59:32,579 - ==============================================================
INFO  01:59:32,579 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  01:59:32,579 - ==============================================================
INFO  01:59:32,579 - ======================GENERISANJE_KODA========================
INFO  01:59:32,583 - 1
INFO  01:59:32,583 - 3
INFO  01:59:32,583 - 1
INFO  01:59:32,583 - 4
INFO  01:59:32,583 - Final!
INFO  02:02:23,615 - Obrada ulaznog fajla test\program.mj
INFO  02:02:23,720 - #2 program
INFO  02:02:23,721 - #8 Program
INFO  02:02:23,721 - #5 const
INFO  02:02:23,723 - #8 int
INFO  02:02:23,723 - #8 c
INFO  02:02:23,724 - #24 =
INFO  02:02:23,725 - #9 10
INFO  02:02:23,725 - #28 ,
INFO  02:02:23,727 - #8 d
INFO  02:02:23,727 - #24 =
INFO  02:02:23,727 - #9 99
INFO  02:02:23,727 - #28 ,
INFO  02:02:23,727 - #8 g
INFO  02:02:23,727 - #24 =
INFO  02:02:23,728 - #9 2
INFO  02:02:23,728 - #27 ;
INFO  02:02:23,728 - #8 int
INFO  02:02:23,731 - #8 e
INFO  02:02:23,731 - #27 ;
INFO  02:02:23,731 - #20 {
INFO  02:02:23,733 - #6 void
INFO  02:02:23,733 - #8 main
INFO  02:02:23,734 - #29 (
INFO  02:02:23,735 - #30 )
INFO  02:02:23,736 - #20 {
INFO  02:02:23,736 - #8 e
INFO  02:02:23,736 - #24 =
INFO  02:02:23,736 - #9 10
INFO  02:02:23,736 - #27 ;
INFO  02:02:23,737 - #31 if
INFO  02:02:23,738 - #29 (
INFO  02:02:23,738 - #8 e
INFO  02:02:23,738 - #38 >
INFO  02:02:23,738 - #9 0
INFO  02:02:23,740 - #14 ||
INFO  02:02:23,741 - #8 e
INFO  02:02:23,741 - #42 <=
INFO  02:02:23,742 - #8 d
INFO  02:02:23,743 - #30 )
INFO  02:02:23,744 - #20 {
INFO  02:02:23,744 - #8 e
INFO  02:02:23,744 - #25 ++
INFO  02:02:23,745 - #27 ;
INFO  02:02:23,745 - #3 print
INFO  02:02:23,745 - #29 (
INFO  02:02:23,745 - #8 e
INFO  02:02:23,745 - #30 )
INFO  02:02:23,745 - #27 ;
INFO  02:02:23,746 - #21 }
INFO  02:02:23,746 - #21 }
INFO  02:02:23,748 - #21 }
INFO  02:02:23,749 - =====================SINTAKSNO_STABLO=========================
INFO  02:02:23,752 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:02:23,753 - ==============================================================
INFO  02:02:23,773 - Pocetak obrade programa Program na liniji 1
INFO  02:02:23,773 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:02:23,775 - Deklarisana konstanta c na liniji 2
INFO  02:02:23,775 - Deklarisana konstanta d na liniji 2
INFO  02:02:23,775 - Deklarisana konstanta g na liniji 2
INFO  02:02:23,775 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:02:23,776 - Deklarisana promenljiva e na liniji 3
INFO  02:02:23,777 - Pocetak obrade metode main na liniji 5
INFO  02:02:23,778 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:02:23,778 - Zavrsetak obrade programa Program na liniji 1
INFO  02:02:23,778 - ======================TABELA_SIMBOLA==========================
INFO  02:02:23,780 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:02:23,780 - ==============================================================
INFO  02:02:23,780 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:02:23,780 - ==============================================================
INFO  02:02:23,780 - ======================GENERISANJE_KODA========================
INFO  02:02:23,787 - 1
INFO  02:02:23,787 - 3
INFO  02:02:23,787 - 1
INFO  02:02:23,787 - 4
INFO  02:02:23,787 - Final!
INFO  02:05:39,345 - Obrada ulaznog fajla test\program.mj
INFO  02:05:39,480 - #2 program
INFO  02:05:39,480 - #8 Program
INFO  02:05:39,480 - #5 const
INFO  02:05:39,482 - #8 int
INFO  02:05:39,482 - #8 c
INFO  02:05:39,484 - #24 =
INFO  02:05:39,484 - #9 10
INFO  02:05:39,484 - #28 ,
INFO  02:05:39,486 - #8 d
INFO  02:05:39,487 - #24 =
INFO  02:05:39,487 - #9 99
INFO  02:05:39,487 - #28 ,
INFO  02:05:39,487 - #8 g
INFO  02:05:39,487 - #24 =
INFO  02:05:39,488 - #9 2
INFO  02:05:39,488 - #27 ;
INFO  02:05:39,488 - #8 int
INFO  02:05:39,490 - #8 e
INFO  02:05:39,490 - #27 ;
INFO  02:05:39,491 - #20 {
INFO  02:05:39,493 - #6 void
INFO  02:05:39,493 - #8 main
INFO  02:05:39,494 - #29 (
INFO  02:05:39,495 - #30 )
INFO  02:05:39,495 - #20 {
INFO  02:05:39,496 - #8 e
INFO  02:05:39,496 - #24 =
INFO  02:05:39,496 - #9 10
INFO  02:05:39,496 - #27 ;
INFO  02:05:39,497 - #31 if
INFO  02:05:39,498 - #29 (
INFO  02:05:39,498 - #8 e
INFO  02:05:39,498 - #38 >
INFO  02:05:39,498 - #9 0
INFO  02:05:39,501 - #14 ||
INFO  02:05:39,502 - #8 e
INFO  02:05:39,502 - #42 <=
INFO  02:05:39,502 - #8 d
INFO  02:05:39,504 - #30 )
INFO  02:05:39,505 - #20 {
INFO  02:05:39,505 - #8 e
INFO  02:05:39,505 - #25 ++
INFO  02:05:39,505 - #27 ;
INFO  02:05:39,506 - #3 print
INFO  02:05:39,506 - #29 (
INFO  02:05:39,506 - #8 e
INFO  02:05:39,506 - #30 )
INFO  02:05:39,506 - #27 ;
INFO  02:05:39,507 - #21 }
INFO  02:05:39,507 - #21 }
INFO  02:05:39,509 - #21 }
INFO  02:05:39,510 - =====================SINTAKSNO_STABLO=========================
INFO  02:05:39,512 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:05:39,513 - ==============================================================
INFO  02:05:39,533 - Pocetak obrade programa Program na liniji 1
INFO  02:05:39,534 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:05:39,535 - Deklarisana konstanta c na liniji 2
INFO  02:05:39,535 - Deklarisana konstanta d na liniji 2
INFO  02:05:39,535 - Deklarisana konstanta g na liniji 2
INFO  02:05:39,536 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:05:39,536 - Deklarisana promenljiva e na liniji 3
INFO  02:05:39,537 - Pocetak obrade metode main na liniji 5
INFO  02:05:39,538 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:05:39,538 - Zavrsetak obrade programa Program na liniji 1
INFO  02:05:39,538 - ======================TABELA_SIMBOLA==========================
INFO  02:05:39,539 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:05:39,539 - ==============================================================
INFO  02:05:39,539 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:05:39,540 - ==============================================================
INFO  02:05:39,540 - ======================GENERISANJE_KODA========================
INFO  02:05:39,546 - 1
INFO  02:05:39,546 - 3
INFO  02:05:39,546 - 1
INFO  02:05:39,546 - 4
INFO  02:05:39,546 - Final!
INFO  02:06:23,949 - Obrada ulaznog fajla test\program.mj
INFO  02:06:24,033 - #2 program
INFO  02:06:24,034 - #8 Program
INFO  02:06:24,034 - #5 const
INFO  02:06:24,035 - #8 int
INFO  02:06:24,035 - #8 c
INFO  02:06:24,036 - #24 =
INFO  02:06:24,037 - #9 10
INFO  02:06:24,037 - #28 ,
INFO  02:06:24,039 - #8 d
INFO  02:06:24,039 - #24 =
INFO  02:06:24,039 - #9 99
INFO  02:06:24,039 - #28 ,
INFO  02:06:24,039 - #8 g
INFO  02:06:24,039 - #24 =
INFO  02:06:24,040 - #9 2
INFO  02:06:24,040 - #27 ;
INFO  02:06:24,040 - #8 int
INFO  02:06:24,041 - #8 e
INFO  02:06:24,042 - #27 ;
INFO  02:06:24,042 - #20 {
INFO  02:06:24,043 - #6 void
INFO  02:06:24,043 - #8 main
INFO  02:06:24,043 - #29 (
INFO  02:06:24,044 - #30 )
INFO  02:06:24,044 - #20 {
INFO  02:06:24,044 - #8 e
INFO  02:06:24,044 - #24 =
INFO  02:06:24,045 - #9 10
INFO  02:06:24,045 - #27 ;
INFO  02:06:24,046 - #31 if
INFO  02:06:24,046 - #29 (
INFO  02:06:24,046 - #8 e
INFO  02:06:24,046 - #38 >
INFO  02:06:24,046 - #9 0
INFO  02:06:24,048 - #14 ||
INFO  02:06:24,048 - #8 e
INFO  02:06:24,048 - #42 <=
INFO  02:06:24,048 - #8 d
INFO  02:06:24,049 - #30 )
INFO  02:06:24,050 - #20 {
INFO  02:06:24,050 - #8 e
INFO  02:06:24,050 - #25 ++
INFO  02:06:24,050 - #27 ;
INFO  02:06:24,050 - #3 print
INFO  02:06:24,051 - #29 (
INFO  02:06:24,051 - #8 e
INFO  02:06:24,052 - #30 )
INFO  02:06:24,052 - #27 ;
INFO  02:06:24,053 - #21 }
INFO  02:06:24,053 - #21 }
INFO  02:06:24,054 - #21 }
INFO  02:06:24,055 - =====================SINTAKSNO_STABLO=========================
INFO  02:06:24,057 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:06:24,058 - ==============================================================
INFO  02:06:24,071 - Pocetak obrade programa Program na liniji 1
INFO  02:06:24,071 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:06:24,072 - Deklarisana konstanta c na liniji 2
INFO  02:06:24,072 - Deklarisana konstanta d na liniji 2
INFO  02:06:24,072 - Deklarisana konstanta g na liniji 2
INFO  02:06:24,073 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:06:24,073 - Deklarisana promenljiva e na liniji 3
INFO  02:06:24,073 - Pocetak obrade metode main na liniji 5
INFO  02:06:24,074 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:06:24,074 - Zavrsetak obrade programa Program na liniji 1
INFO  02:06:24,074 - ======================TABELA_SIMBOLA==========================
INFO  02:06:24,074 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:06:24,074 - ==============================================================
INFO  02:06:24,075 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:06:24,075 - ==============================================================
INFO  02:06:24,075 - ======================GENERISANJE_KODA========================
INFO  02:06:24,079 - 1
INFO  02:06:24,079 - 3
INFO  02:06:24,079 - 1
INFO  02:06:24,079 - 4
INFO  02:06:24,079 - Final!
INFO  02:06:24,081 - x
INFO  02:06:24,081 - x
INFO  02:09:46,725 - Obrada ulaznog fajla test\program.mj
INFO  02:09:46,805 - #2 program
INFO  02:09:46,806 - #8 Program
INFO  02:09:46,806 - #5 const
INFO  02:09:46,807 - #8 int
INFO  02:09:46,807 - #8 c
INFO  02:09:46,808 - #24 =
INFO  02:09:46,808 - #9 10
INFO  02:09:46,808 - #28 ,
INFO  02:09:46,810 - #8 d
INFO  02:09:46,810 - #24 =
INFO  02:09:46,810 - #9 99
INFO  02:09:46,810 - #28 ,
INFO  02:09:46,811 - #8 g
INFO  02:09:46,811 - #24 =
INFO  02:09:46,811 - #9 2
INFO  02:09:46,811 - #27 ;
INFO  02:09:46,811 - #8 int
INFO  02:09:46,813 - #8 e
INFO  02:09:46,813 - #27 ;
INFO  02:09:46,813 - #20 {
INFO  02:09:46,814 - #6 void
INFO  02:09:46,815 - #8 main
INFO  02:09:46,815 - #29 (
INFO  02:09:46,815 - #30 )
INFO  02:09:46,815 - #20 {
INFO  02:09:46,816 - #8 e
INFO  02:09:46,816 - #24 =
INFO  02:09:46,816 - #9 10
INFO  02:09:46,816 - #27 ;
INFO  02:09:46,817 - #31 if
INFO  02:09:46,817 - #29 (
INFO  02:09:46,817 - #8 e
INFO  02:09:46,817 - #38 >
INFO  02:09:46,818 - #9 0
INFO  02:09:46,819 - #14 ||
INFO  02:09:46,819 - #8 e
INFO  02:09:46,819 - #42 <=
INFO  02:09:46,820 - #8 d
INFO  02:09:46,820 - #30 )
INFO  02:09:46,822 - #20 {
INFO  02:09:46,822 - #8 e
INFO  02:09:46,823 - #25 ++
INFO  02:09:46,823 - #27 ;
INFO  02:09:46,823 - #3 print
INFO  02:09:46,823 - #29 (
INFO  02:09:46,823 - #8 e
INFO  02:09:46,823 - #30 )
INFO  02:09:46,823 - #27 ;
INFO  02:09:46,824 - #21 }
INFO  02:09:46,824 - #21 }
INFO  02:09:46,825 - #21 }
INFO  02:09:46,827 - =====================SINTAKSNO_STABLO=========================
INFO  02:09:46,829 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:09:46,835 - ==============================================================
INFO  02:09:46,848 - Pocetak obrade programa Program na liniji 1
INFO  02:09:46,849 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:09:46,849 - Deklarisana konstanta c na liniji 2
INFO  02:09:46,850 - Deklarisana konstanta d na liniji 2
INFO  02:09:46,850 - Deklarisana konstanta g na liniji 2
INFO  02:09:46,850 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:09:46,850 - Deklarisana promenljiva e na liniji 3
INFO  02:09:46,850 - Pocetak obrade metode main na liniji 5
INFO  02:09:46,851 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:09:46,851 - Zavrsetak obrade programa Program na liniji 1
INFO  02:09:46,851 - ======================TABELA_SIMBOLA==========================
INFO  02:09:46,851 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:09:46,852 - ==============================================================
INFO  02:09:46,852 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:09:46,852 - ==============================================================
INFO  02:09:46,852 - ======================GENERISANJE_KODA========================
INFO  02:09:46,857 - 1
INFO  02:09:46,857 - 3
INFO  02:09:46,857 - 1
INFO  02:09:46,857 - 4
INFO  02:09:46,857 - Final!
INFO  02:09:46,859 - x
INFO  02:09:46,859 - x
INFO  02:12:57,193 - Obrada ulaznog fajla test\program.mj
INFO  02:12:57,312 - #2 program
INFO  02:12:57,312 - #8 Program
INFO  02:12:57,312 - #5 const
INFO  02:12:57,313 - #8 int
INFO  02:12:57,313 - #8 c
INFO  02:12:57,314 - #24 =
INFO  02:12:57,314 - #9 10
INFO  02:12:57,315 - #28 ,
INFO  02:12:57,316 - #8 d
INFO  02:12:57,316 - #24 =
INFO  02:12:57,316 - #9 99
INFO  02:12:57,316 - #28 ,
INFO  02:12:57,317 - #8 g
INFO  02:12:57,317 - #24 =
INFO  02:12:57,317 - #9 2
INFO  02:12:57,317 - #27 ;
INFO  02:12:57,317 - #8 int
INFO  02:12:57,319 - #8 e
INFO  02:12:57,319 - #27 ;
INFO  02:12:57,319 - #20 {
INFO  02:12:57,321 - #6 void
INFO  02:12:57,321 - #8 main
INFO  02:12:57,321 - #29 (
INFO  02:12:57,322 - #30 )
INFO  02:12:57,322 - #20 {
INFO  02:12:57,322 - #8 e
INFO  02:12:57,322 - #24 =
INFO  02:12:57,323 - #9 10
INFO  02:12:57,323 - #27 ;
INFO  02:12:57,323 - #31 if
INFO  02:12:57,324 - #29 (
INFO  02:12:57,324 - #8 e
INFO  02:12:57,324 - #38 >
INFO  02:12:57,324 - #9 0
INFO  02:12:57,328 - #13 &&
INFO  02:12:57,328 - #8 e
INFO  02:12:57,328 - #42 <=
INFO  02:12:57,328 - #8 d
INFO  02:12:57,329 - #30 )
INFO  02:12:57,331 - #20 {
INFO  02:12:57,331 - #8 e
INFO  02:12:57,331 - #25 ++
INFO  02:12:57,331 - #27 ;
INFO  02:12:57,331 - #3 print
INFO  02:12:57,332 - #29 (
INFO  02:12:57,332 - #8 e
INFO  02:12:57,332 - #30 )
INFO  02:12:57,332 - #27 ;
INFO  02:12:57,333 - #21 }
INFO  02:12:57,333 - #21 }
INFO  02:12:57,334 - #21 }
INFO  02:12:57,335 - =====================SINTAKSNO_STABLO=========================
INFO  02:12:57,339 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:12:57,339 - ==============================================================
INFO  02:12:57,353 - Pocetak obrade programa Program na liniji 1
INFO  02:12:57,353 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:12:57,354 - Deklarisana konstanta c na liniji 2
INFO  02:12:57,354 - Deklarisana konstanta d na liniji 2
INFO  02:12:57,354 - Deklarisana konstanta g na liniji 2
INFO  02:12:57,354 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:12:57,355 - Deklarisana promenljiva e na liniji 3
INFO  02:12:57,355 - Pocetak obrade metode main na liniji 5
INFO  02:12:57,356 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:12:57,356 - Zavrsetak obrade programa Program na liniji 1
INFO  02:12:57,356 - ======================TABELA_SIMBOLA==========================
INFO  02:12:57,356 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:12:57,357 - ==============================================================
INFO  02:12:57,357 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:12:57,357 - ==============================================================
INFO  02:12:57,357 - ======================GENERISANJE_KODA========================
INFO  02:12:57,364 - 1
INFO  02:12:57,364 - 2
INFO  02:12:57,364 - 3
INFO  02:12:57,364 - Final!
INFO  02:12:57,364 - x
INFO  02:12:57,365 - x
INFO  02:13:59,519 - Obrada ulaznog fajla test\program.mj
INFO  02:13:59,609 - #2 program
INFO  02:13:59,609 - #8 Program
INFO  02:13:59,609 - #5 const
INFO  02:13:59,611 - #8 int
INFO  02:13:59,611 - #8 c
INFO  02:13:59,612 - #24 =
INFO  02:13:59,612 - #9 10
INFO  02:13:59,612 - #28 ,
INFO  02:13:59,614 - #8 d
INFO  02:13:59,614 - #24 =
INFO  02:13:59,614 - #9 99
INFO  02:13:59,614 - #28 ,
INFO  02:13:59,614 - #8 g
INFO  02:13:59,614 - #24 =
INFO  02:13:59,614 - #9 2
INFO  02:13:59,615 - #27 ;
INFO  02:13:59,615 - #8 int
INFO  02:13:59,616 - #8 e
INFO  02:13:59,616 - #27 ;
INFO  02:13:59,617 - #20 {
INFO  02:13:59,619 - #6 void
INFO  02:13:59,619 - #8 main
INFO  02:13:59,619 - #29 (
INFO  02:13:59,620 - #30 )
INFO  02:13:59,620 - #20 {
INFO  02:13:59,620 - #8 e
INFO  02:13:59,620 - #24 =
INFO  02:13:59,620 - #9 10
INFO  02:13:59,620 - #27 ;
INFO  02:13:59,621 - #31 if
INFO  02:13:59,621 - #29 (
INFO  02:13:59,621 - #8 e
INFO  02:13:59,621 - #38 >
INFO  02:13:59,621 - #9 0
INFO  02:13:59,623 - #13 &&
INFO  02:13:59,624 - #8 e
INFO  02:13:59,624 - #42 <=
INFO  02:13:59,624 - #8 d
INFO  02:13:59,625 - #30 )
INFO  02:13:59,626 - #20 {
INFO  02:13:59,626 - #8 e
INFO  02:13:59,626 - #25 ++
INFO  02:13:59,626 - #27 ;
INFO  02:13:59,626 - #3 print
INFO  02:13:59,626 - #29 (
INFO  02:13:59,627 - #8 e
INFO  02:13:59,627 - #30 )
INFO  02:13:59,627 - #27 ;
INFO  02:13:59,627 - #21 }
INFO  02:13:59,627 - #21 }
INFO  02:13:59,628 - #21 }
INFO  02:13:59,629 - =====================SINTAKSNO_STABLO=========================
INFO  02:13:59,631 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:13:59,631 - ==============================================================
INFO  02:13:59,645 - Pocetak obrade programa Program na liniji 1
INFO  02:13:59,645 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:13:59,646 - Deklarisana konstanta c na liniji 2
INFO  02:13:59,646 - Deklarisana konstanta d na liniji 2
INFO  02:13:59,646 - Deklarisana konstanta g na liniji 2
INFO  02:13:59,646 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:13:59,647 - Deklarisana promenljiva e na liniji 3
INFO  02:13:59,647 - Pocetak obrade metode main na liniji 5
INFO  02:13:59,648 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:13:59,648 - Zavrsetak obrade programa Program na liniji 1
INFO  02:13:59,648 - ======================TABELA_SIMBOLA==========================
INFO  02:13:59,648 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:13:59,648 - ==============================================================
INFO  02:13:59,649 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:13:59,649 - ==============================================================
INFO  02:13:59,649 - ======================GENERISANJE_KODA========================
INFO  02:13:59,652 - 1
INFO  02:13:59,654 - 2
INFO  02:13:59,654 - 3
INFO  02:13:59,654 - Final!
INFO  02:13:59,654 - x
INFO  02:13:59,658 - Generisanje koda uspesno zavrseno!
INFO  02:13:59,658 - Generisanje izlaznog fajla test\program.obj
INFO  02:13:59,659 - ==============================================================
INFO  02:15:36,608 - Obrada ulaznog fajla test\program.mj
INFO  02:15:36,687 - #2 program
INFO  02:15:36,687 - #8 Program
INFO  02:15:36,687 - #5 const
INFO  02:15:36,689 - #8 int
INFO  02:15:36,689 - #8 c
INFO  02:15:36,689 - #24 =
INFO  02:15:36,689 - #9 10
INFO  02:15:36,689 - #28 ,
INFO  02:15:36,691 - #8 d
INFO  02:15:36,691 - #24 =
INFO  02:15:36,691 - #9 99
INFO  02:15:36,691 - #28 ,
INFO  02:15:36,692 - #8 g
INFO  02:15:36,692 - #24 =
INFO  02:15:36,692 - #9 2
INFO  02:15:36,692 - #27 ;
INFO  02:15:36,692 - #8 int
INFO  02:15:36,693 - #8 e
INFO  02:15:36,694 - #27 ;
INFO  02:15:36,694 - #20 {
INFO  02:15:36,695 - #6 void
INFO  02:15:36,695 - #8 main
INFO  02:15:36,695 - #29 (
INFO  02:15:36,696 - #30 )
INFO  02:15:36,697 - #20 {
INFO  02:15:36,697 - #8 e
INFO  02:15:36,697 - #24 =
INFO  02:15:36,697 - #9 10
INFO  02:15:36,697 - #27 ;
INFO  02:15:36,698 - #31 if
INFO  02:15:36,698 - #29 (
INFO  02:15:36,698 - #8 e
INFO  02:15:36,698 - #38 >
INFO  02:15:36,698 - #9 0
INFO  02:15:36,699 - #13 &&
INFO  02:15:36,700 - #8 e
INFO  02:15:36,700 - #42 <=
INFO  02:15:36,700 - #8 d
INFO  02:15:36,702 - #30 )
INFO  02:15:36,703 - #20 {
INFO  02:15:36,703 - #8 e
INFO  02:15:36,703 - #25 ++
INFO  02:15:36,703 - #27 ;
INFO  02:15:36,704 - #3 print
INFO  02:15:36,704 - #29 (
INFO  02:15:36,704 - #8 e
INFO  02:15:36,704 - #30 )
INFO  02:15:36,704 - #27 ;
INFO  02:15:36,704 - #21 }
INFO  02:15:36,704 - #21 }
INFO  02:15:36,706 - #21 }
INFO  02:15:36,707 - =====================SINTAKSNO_STABLO=========================
INFO  02:15:36,709 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:15:36,709 - ==============================================================
INFO  02:15:36,725 - Pocetak obrade programa Program na liniji 1
INFO  02:15:36,726 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:15:36,727 - Deklarisana konstanta c na liniji 2
INFO  02:15:36,727 - Deklarisana konstanta d na liniji 2
INFO  02:15:36,727 - Deklarisana konstanta g na liniji 2
INFO  02:15:36,727 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:15:36,727 - Deklarisana promenljiva e na liniji 3
INFO  02:15:36,728 - Pocetak obrade metode main na liniji 5
INFO  02:15:36,729 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:15:36,729 - Zavrsetak obrade programa Program na liniji 1
INFO  02:15:36,729 - ======================TABELA_SIMBOLA==========================
INFO  02:15:36,730 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:15:36,730 - ==============================================================
INFO  02:15:36,730 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:15:36,730 - ==============================================================
INFO  02:15:36,730 - ======================GENERISANJE_KODA========================
INFO  02:15:36,737 - 1
INFO  02:15:36,738 - 2
INFO  02:15:36,738 - 3
INFO  02:15:36,738 - Final!
INFO  02:15:36,738 - x
INFO  02:15:36,740 - Generisanje koda uspesno zavrseno!
INFO  02:15:36,741 - Generisanje izlaznog fajla test\program.obj
INFO  02:15:36,741 - ==============================================================
INFO  02:31:11,783 - Obrada ulaznog fajla test\program.mj
INFO  02:31:11,869 - #2 program
INFO  02:31:11,869 - #8 Program
INFO  02:31:11,869 - #5 const
INFO  02:31:11,870 - #8 int
INFO  02:31:11,870 - #8 c
INFO  02:31:11,871 - #24 =
INFO  02:31:11,871 - #9 10
INFO  02:31:11,871 - #28 ,
INFO  02:31:11,872 - #8 d
INFO  02:31:11,872 - #24 =
INFO  02:31:11,872 - #9 99
INFO  02:31:11,872 - #28 ,
INFO  02:31:11,873 - #8 g
INFO  02:31:11,873 - #24 =
INFO  02:31:11,873 - #9 2
INFO  02:31:11,873 - #27 ;
INFO  02:31:11,873 - #8 int
INFO  02:31:11,874 - #8 e
INFO  02:31:11,874 - #27 ;
INFO  02:31:11,875 - #20 {
INFO  02:31:11,876 - #6 void
INFO  02:31:11,877 - #8 main
INFO  02:31:11,878 - #29 (
INFO  02:31:11,879 - #30 )
INFO  02:31:11,879 - #20 {
INFO  02:31:11,879 - #8 e
INFO  02:31:11,879 - #24 =
INFO  02:31:11,880 - #9 10
INFO  02:31:11,880 - #27 ;
INFO  02:31:11,882 - #31 if
INFO  02:31:11,882 - #29 (
INFO  02:31:11,882 - #8 e
INFO  02:31:11,882 - #38 >
INFO  02:31:11,883 - #9 0
INFO  02:31:11,884 - #13 &&
INFO  02:31:11,884 - #8 e
INFO  02:31:11,884 - #42 <=
INFO  02:31:11,885 - #8 d
INFO  02:31:11,885 - #30 )
INFO  02:31:11,887 - #20 {
INFO  02:31:11,887 - #8 e
INFO  02:31:11,887 - #25 ++
INFO  02:31:11,887 - #27 ;
INFO  02:31:11,888 - #3 print
INFO  02:31:11,888 - #29 (
INFO  02:31:11,888 - #8 e
INFO  02:31:11,888 - #30 )
INFO  02:31:11,888 - #27 ;
INFO  02:31:11,888 - #21 }
INFO  02:31:11,889 - #21 }
INFO  02:31:11,890 - #21 }
INFO  02:31:11,891 - =====================SINTAKSNO_STABLO=========================
INFO  02:31:11,893 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:31:11,894 - ==============================================================
INFO  02:31:11,907 - Pocetak obrade programa Program na liniji 1
INFO  02:31:11,907 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:31:11,908 - Deklarisana konstanta c na liniji 2
INFO  02:31:11,908 - Deklarisana konstanta d na liniji 2
INFO  02:31:11,908 - Deklarisana konstanta g na liniji 2
INFO  02:31:11,908 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:31:11,909 - Deklarisana promenljiva e na liniji 3
INFO  02:31:11,909 - Pocetak obrade metode main na liniji 5
INFO  02:31:11,910 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:31:11,910 - Zavrsetak obrade programa Program na liniji 1
INFO  02:31:11,910 - ======================TABELA_SIMBOLA==========================
INFO  02:31:11,910 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:31:11,910 - ==============================================================
INFO  02:31:11,911 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:31:11,911 - ==============================================================
INFO  02:31:11,911 - ======================GENERISANJE_KODA========================
INFO  02:31:11,915 - 1
INFO  02:31:11,915 - 2
INFO  02:31:11,915 - 3
INFO  02:31:11,915 - Final!
INFO  02:31:11,915 - z
INFO  02:31:11,917 - z
INFO  02:31:33,859 - Obrada ulaznog fajla test\program.mj
INFO  02:31:33,949 - #2 program
INFO  02:31:33,950 - #8 Program
INFO  02:31:33,950 - #5 const
INFO  02:31:33,951 - #8 int
INFO  02:31:33,951 - #8 c
INFO  02:31:33,952 - #24 =
INFO  02:31:33,952 - #9 10
INFO  02:31:33,952 - #28 ,
INFO  02:31:33,953 - #8 d
INFO  02:31:33,953 - #24 =
INFO  02:31:33,953 - #9 99
INFO  02:31:33,953 - #28 ,
INFO  02:31:33,954 - #8 g
INFO  02:31:33,955 - #24 =
INFO  02:31:33,955 - #9 2
INFO  02:31:33,955 - #27 ;
INFO  02:31:33,955 - #8 int
INFO  02:31:33,957 - #8 e
INFO  02:31:33,957 - #27 ;
INFO  02:31:33,957 - #20 {
INFO  02:31:33,959 - #6 void
INFO  02:31:33,959 - #8 main
INFO  02:31:33,959 - #29 (
INFO  02:31:33,961 - #30 )
INFO  02:31:33,961 - #20 {
INFO  02:31:33,961 - #8 e
INFO  02:31:33,962 - #24 =
INFO  02:31:33,962 - #9 10
INFO  02:31:33,962 - #27 ;
INFO  02:31:33,963 - #31 if
INFO  02:31:33,963 - #29 (
INFO  02:31:33,963 - #8 e
INFO  02:31:33,963 - #38 >
INFO  02:31:33,964 - #9 0
INFO  02:31:33,966 - #13 &&
INFO  02:31:33,966 - #8 e
INFO  02:31:33,967 - #42 <=
INFO  02:31:33,967 - #8 d
INFO  02:31:33,968 - #30 )
INFO  02:31:33,969 - #20 {
INFO  02:31:33,969 - #8 e
INFO  02:31:33,969 - #25 ++
INFO  02:31:33,970 - #27 ;
INFO  02:31:33,970 - #3 print
INFO  02:31:33,970 - #29 (
INFO  02:31:33,970 - #8 e
INFO  02:31:33,971 - #30 )
INFO  02:31:33,971 - #27 ;
INFO  02:31:33,971 - #21 }
INFO  02:31:33,971 - #21 }
INFO  02:31:33,973 - #21 }
INFO  02:31:33,974 - =====================SINTAKSNO_STABLO=========================
INFO  02:31:33,976 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  02:31:33,978 - ==============================================================
INFO  02:31:33,995 - Pocetak obrade programa Program na liniji 1
INFO  02:31:33,996 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  02:31:33,997 - Deklarisana konstanta c na liniji 2
INFO  02:31:33,997 - Deklarisana konstanta d na liniji 2
INFO  02:31:33,997 - Deklarisana konstanta g na liniji 2
INFO  02:31:33,997 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  02:31:33,997 - Deklarisana promenljiva e na liniji 3
INFO  02:31:33,998 - Pocetak obrade metode main na liniji 5
INFO  02:31:33,999 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  02:31:33,999 - Zavrsetak obrade programa Program na liniji 1
INFO  02:31:33,999 - ======================TABELA_SIMBOLA==========================
INFO  02:31:33,999 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  02:31:34,000 - ==============================================================
INFO  02:31:34,000 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  02:31:34,000 - ==============================================================
INFO  02:31:34,000 - ======================GENERISANJE_KODA========================
INFO  02:31:34,005 - 1
INFO  02:31:34,005 - 2
INFO  02:31:34,005 - 3
INFO  02:31:34,006 - Final!
INFO  02:31:34,006 - x
INFO  02:31:34,007 - z
INFO  03:32:01,346 - Obrada ulaznog fajla test\program.mj
INFO  03:32:01,428 - #2 program
INFO  03:32:01,428 - #8 Program
INFO  03:32:01,428 - #5 const
INFO  03:32:01,430 - #8 int
INFO  03:32:01,430 - #8 c
INFO  03:32:01,431 - #24 =
INFO  03:32:01,431 - #9 10
INFO  03:32:01,432 - #28 ,
INFO  03:32:01,433 - #8 d
INFO  03:32:01,433 - #24 =
INFO  03:32:01,433 - #9 99
INFO  03:32:01,433 - #28 ,
INFO  03:32:01,434 - #8 g
INFO  03:32:01,434 - #24 =
INFO  03:32:01,434 - #9 2
INFO  03:32:01,434 - #27 ;
INFO  03:32:01,434 - #8 int
INFO  03:32:01,436 - #8 e
INFO  03:32:01,436 - #27 ;
INFO  03:32:01,437 - #20 {
INFO  03:32:01,438 - #6 void
INFO  03:32:01,438 - #8 main
INFO  03:32:01,438 - #29 (
INFO  03:32:01,439 - #30 )
INFO  03:32:01,439 - #20 {
INFO  03:32:01,441 - #8 e
INFO  03:32:01,441 - #24 =
INFO  03:32:01,441 - #9 10
INFO  03:32:01,441 - #27 ;
INFO  03:32:01,442 - #31 if
INFO  03:32:01,442 - #29 (
INFO  03:32:01,442 - #8 e
INFO  03:32:01,442 - #38 >
INFO  03:32:01,443 - #9 0
INFO  03:32:01,444 - #13 &&
INFO  03:32:01,444 - #8 e
INFO  03:32:01,444 - #42 <=
INFO  03:32:01,444 - #8 d
INFO  03:32:01,445 - #30 )
INFO  03:32:01,446 - #20 {
INFO  03:32:01,446 - #8 e
INFO  03:32:01,446 - #25 ++
INFO  03:32:01,446 - #27 ;
INFO  03:32:01,446 - #3 print
INFO  03:32:01,447 - #29 (
INFO  03:32:01,447 - #8 e
INFO  03:32:01,447 - #30 )
INFO  03:32:01,447 - #27 ;
INFO  03:32:01,447 - #21 }
INFO  03:32:01,447 - #21 }
INFO  03:32:01,449 - #21 }
INFO  03:32:01,450 - =====================SINTAKSNO_STABLO=========================
INFO  03:32:01,453 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:32:01,454 - ==============================================================
INFO  03:32:01,465 - Pocetak obrade programa Program na liniji 1
INFO  03:32:01,466 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:32:01,466 - Deklarisana konstanta c na liniji 2
INFO  03:32:01,466 - Deklarisana konstanta d na liniji 2
INFO  03:32:01,466 - Deklarisana konstanta g na liniji 2
INFO  03:32:01,467 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:32:01,467 - Deklarisana promenljiva e na liniji 3
INFO  03:32:01,467 - Pocetak obrade metode main na liniji 5
INFO  03:32:01,468 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:32:01,468 - Zavrsetak obrade programa Program na liniji 1
INFO  03:32:01,468 - ======================TABELA_SIMBOLA==========================
INFO  03:32:01,468 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:32:01,469 - ==============================================================
INFO  03:32:01,469 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:32:01,469 - ==============================================================
INFO  03:32:01,469 - ======================GENERISANJE_KODA========================
INFO  03:32:01,473 - 1
INFO  03:32:01,473 - 2
INFO  03:32:01,473 - 3
INFO  03:32:01,473 - Final!
INFO  03:32:01,474 - x
INFO  03:32:01,475 - z
INFO  03:32:04,242 - Obrada ulaznog fajla test\program.mj
INFO  03:32:04,339 - #2 program
INFO  03:32:04,339 - #8 Program
INFO  03:32:04,339 - #5 const
INFO  03:32:04,341 - #8 int
INFO  03:32:04,341 - #8 c
INFO  03:32:04,343 - #24 =
INFO  03:32:04,343 - #9 10
INFO  03:32:04,343 - #28 ,
INFO  03:32:04,344 - #8 d
INFO  03:32:04,344 - #24 =
INFO  03:32:04,345 - #9 99
INFO  03:32:04,345 - #28 ,
INFO  03:32:04,345 - #8 g
INFO  03:32:04,345 - #24 =
INFO  03:32:04,345 - #9 2
INFO  03:32:04,345 - #27 ;
INFO  03:32:04,345 - #8 int
INFO  03:32:04,347 - #8 e
INFO  03:32:04,347 - #27 ;
INFO  03:32:04,347 - #20 {
INFO  03:32:04,349 - #6 void
INFO  03:32:04,349 - #8 main
INFO  03:32:04,349 - #29 (
INFO  03:32:04,350 - #30 )
INFO  03:32:04,350 - #20 {
INFO  03:32:04,350 - #8 e
INFO  03:32:04,350 - #24 =
INFO  03:32:04,351 - #9 10
INFO  03:32:04,351 - #27 ;
INFO  03:32:04,352 - #31 if
INFO  03:32:04,352 - #29 (
INFO  03:32:04,352 - #8 e
INFO  03:32:04,352 - #38 >
INFO  03:32:04,352 - #9 0
INFO  03:32:04,354 - #13 &&
INFO  03:32:04,355 - #8 e
INFO  03:32:04,355 - #42 <=
INFO  03:32:04,355 - #8 d
INFO  03:32:04,356 - #30 )
INFO  03:32:04,357 - #20 {
INFO  03:32:04,357 - #8 e
INFO  03:32:04,357 - #25 ++
INFO  03:32:04,357 - #27 ;
INFO  03:32:04,358 - #3 print
INFO  03:32:04,358 - #29 (
INFO  03:32:04,358 - #8 e
INFO  03:32:04,358 - #30 )
INFO  03:32:04,358 - #27 ;
INFO  03:32:04,358 - #21 }
INFO  03:32:04,358 - #21 }
INFO  03:32:04,360 - #21 }
INFO  03:32:04,361 - =====================SINTAKSNO_STABLO=========================
INFO  03:32:04,363 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:32:04,366 - ==============================================================
INFO  03:32:04,382 - Pocetak obrade programa Program na liniji 1
INFO  03:32:04,382 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:32:04,383 - Deklarisana konstanta c na liniji 2
INFO  03:32:04,383 - Deklarisana konstanta d na liniji 2
INFO  03:32:04,383 - Deklarisana konstanta g na liniji 2
INFO  03:32:04,383 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:32:04,383 - Deklarisana promenljiva e na liniji 3
INFO  03:32:04,384 - Pocetak obrade metode main na liniji 5
INFO  03:32:04,385 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:32:04,385 - Zavrsetak obrade programa Program na liniji 1
INFO  03:32:04,385 - ======================TABELA_SIMBOLA==========================
INFO  03:32:04,386 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:32:04,386 - ==============================================================
INFO  03:32:04,386 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:32:04,386 - ==============================================================
INFO  03:32:04,386 - ======================GENERISANJE_KODA========================
INFO  03:33:11,660 - Obrada ulaznog fajla test\program.mj
INFO  03:33:11,755 - #2 program
INFO  03:33:11,755 - #8 Program
INFO  03:33:11,755 - #5 const
INFO  03:33:11,756 - #8 int
INFO  03:33:11,756 - #8 c
INFO  03:33:11,757 - #24 =
INFO  03:33:11,757 - #9 10
INFO  03:33:11,757 - #28 ,
INFO  03:33:11,758 - #8 d
INFO  03:33:11,758 - #24 =
INFO  03:33:11,759 - #9 99
INFO  03:33:11,759 - #28 ,
INFO  03:33:11,759 - #8 g
INFO  03:33:11,759 - #24 =
INFO  03:33:11,759 - #9 2
INFO  03:33:11,759 - #27 ;
INFO  03:33:11,759 - #8 int
INFO  03:33:11,761 - #8 e
INFO  03:33:11,761 - #27 ;
INFO  03:33:11,761 - #20 {
INFO  03:33:11,762 - #6 void
INFO  03:33:11,763 - #8 main
INFO  03:33:11,763 - #29 (
INFO  03:33:11,764 - #30 )
INFO  03:33:11,764 - #20 {
INFO  03:33:11,764 - #8 e
INFO  03:33:11,764 - #24 =
INFO  03:33:11,764 - #9 10
INFO  03:33:11,764 - #27 ;
INFO  03:33:11,765 - #31 if
INFO  03:33:11,765 - #29 (
INFO  03:33:11,765 - #8 e
INFO  03:33:11,766 - #38 >
INFO  03:33:11,766 - #9 0
INFO  03:33:11,767 - #13 &&
INFO  03:33:11,768 - #8 e
INFO  03:33:11,768 - #42 <=
INFO  03:33:11,768 - #8 d
INFO  03:33:11,769 - #30 )
INFO  03:33:11,770 - #20 {
INFO  03:33:11,771 - #8 e
INFO  03:33:11,771 - #25 ++
INFO  03:33:11,771 - #27 ;
INFO  03:33:11,771 - #3 print
INFO  03:33:11,771 - #29 (
INFO  03:33:11,771 - #8 e
INFO  03:33:11,772 - #30 )
INFO  03:33:11,772 - #27 ;
INFO  03:33:11,772 - #21 }
INFO  03:33:11,772 - #21 }
INFO  03:33:11,774 - #21 }
INFO  03:33:11,775 - =====================SINTAKSNO_STABLO=========================
INFO  03:33:11,777 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:33:11,778 - ==============================================================
INFO  03:33:11,795 - Pocetak obrade programa Program na liniji 1
INFO  03:33:11,796 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:33:11,797 - Deklarisana konstanta c na liniji 2
INFO  03:33:11,797 - Deklarisana konstanta d na liniji 2
INFO  03:33:11,797 - Deklarisana konstanta g na liniji 2
INFO  03:33:11,797 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:33:11,797 - Deklarisana promenljiva e na liniji 3
INFO  03:33:11,798 - Pocetak obrade metode main na liniji 5
INFO  03:33:11,799 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:33:11,799 - Zavrsetak obrade programa Program na liniji 1
INFO  03:33:11,799 - ======================TABELA_SIMBOLA==========================
INFO  03:33:11,800 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:33:11,800 - ==============================================================
INFO  03:33:11,800 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:33:11,800 - ==============================================================
INFO  03:33:11,800 - ======================GENERISANJE_KODA========================
INFO  03:33:11,806 - 1
INFO  03:33:11,807 - 2
INFO  03:33:11,807 - 3
INFO  03:33:11,807 - Final!
INFO  03:33:11,807 - x
INFO  03:33:11,809 - z
INFO  03:33:15,822 - Obrada ulaznog fajla test\program.mj
INFO  03:33:15,933 - #2 program
INFO  03:33:15,933 - #8 Program
INFO  03:33:15,933 - #5 const
INFO  03:33:15,935 - #8 int
INFO  03:33:15,935 - #8 c
INFO  03:33:15,936 - #24 =
INFO  03:33:15,936 - #9 10
INFO  03:33:15,936 - #28 ,
INFO  03:33:15,937 - #8 d
INFO  03:33:15,938 - #24 =
INFO  03:33:15,938 - #9 99
INFO  03:33:15,938 - #28 ,
INFO  03:33:15,938 - #8 g
INFO  03:33:15,938 - #24 =
INFO  03:33:15,938 - #9 2
INFO  03:33:15,938 - #27 ;
INFO  03:33:15,939 - #8 int
INFO  03:33:15,940 - #8 e
INFO  03:33:15,940 - #27 ;
INFO  03:33:15,941 - #20 {
INFO  03:33:15,942 - #6 void
INFO  03:33:15,942 - #8 main
INFO  03:33:15,942 - #29 (
INFO  03:33:15,943 - #30 )
INFO  03:33:15,944 - #20 {
INFO  03:33:15,944 - #8 e
INFO  03:33:15,944 - #24 =
INFO  03:33:15,944 - #9 10
INFO  03:33:15,944 - #27 ;
INFO  03:33:15,945 - #31 if
INFO  03:33:15,946 - #29 (
INFO  03:33:15,946 - #8 e
INFO  03:33:15,946 - #38 >
INFO  03:33:15,946 - #9 0
INFO  03:33:15,948 - #13 &&
INFO  03:33:15,948 - #8 e
INFO  03:33:15,948 - #42 <=
INFO  03:33:15,949 - #8 d
INFO  03:33:15,950 - #30 )
INFO  03:33:15,951 - #20 {
INFO  03:33:15,951 - #8 e
INFO  03:33:15,951 - #25 ++
INFO  03:33:15,952 - #27 ;
INFO  03:33:15,952 - #3 print
INFO  03:33:15,952 - #29 (
INFO  03:33:15,953 - #8 e
INFO  03:33:15,954 - #30 )
INFO  03:33:15,954 - #27 ;
INFO  03:33:15,954 - #21 }
INFO  03:33:15,954 - #21 }
INFO  03:33:15,956 - #21 }
INFO  03:33:15,957 - =====================SINTAKSNO_STABLO=========================
INFO  03:33:15,960 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:33:15,961 - ==============================================================
INFO  03:33:15,978 - Pocetak obrade programa Program na liniji 1
INFO  03:33:15,978 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:33:15,980 - Deklarisana konstanta c na liniji 2
INFO  03:33:15,980 - Deklarisana konstanta d na liniji 2
INFO  03:33:15,980 - Deklarisana konstanta g na liniji 2
INFO  03:33:15,980 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:33:15,980 - Deklarisana promenljiva e na liniji 3
INFO  03:33:15,981 - Pocetak obrade metode main na liniji 5
INFO  03:33:15,982 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:33:15,982 - Zavrsetak obrade programa Program na liniji 1
INFO  03:33:15,982 - ======================TABELA_SIMBOLA==========================
INFO  03:33:15,983 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:33:15,983 - ==============================================================
INFO  03:33:15,983 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:33:15,983 - ==============================================================
INFO  03:33:15,983 - ======================GENERISANJE_KODA========================
INFO  03:33:16,014 - 1
INFO  03:33:16,014 - 2
INFO  03:33:16,015 - 3
INFO  03:33:16,015 - Final!
INFO  03:36:59,930 - Obrada ulaznog fajla test\program.mj
INFO  03:37:00,010 - #2 program
INFO  03:37:00,011 - #8 Program
INFO  03:37:00,011 - #5 const
INFO  03:37:00,012 - #8 int
INFO  03:37:00,012 - #8 c
INFO  03:37:00,013 - #24 =
INFO  03:37:00,013 - #9 10
INFO  03:37:00,013 - #28 ,
INFO  03:37:00,014 - #8 d
INFO  03:37:00,014 - #24 =
INFO  03:37:00,014 - #9 99
INFO  03:37:00,015 - #28 ,
INFO  03:37:00,015 - #8 g
INFO  03:37:00,015 - #24 =
INFO  03:37:00,015 - #9 2
INFO  03:37:00,015 - #27 ;
INFO  03:37:00,015 - #8 int
INFO  03:37:00,017 - #8 e
INFO  03:37:00,018 - #27 ;
INFO  03:37:00,018 - #20 {
INFO  03:37:00,020 - #6 void
INFO  03:37:00,020 - #8 main
INFO  03:37:00,020 - #29 (
INFO  03:37:00,021 - #30 )
INFO  03:37:00,021 - #20 {
INFO  03:37:00,021 - #8 e
INFO  03:37:00,021 - #24 =
INFO  03:37:00,021 - #9 10
INFO  03:37:00,022 - #27 ;
INFO  03:37:00,022 - #31 if
INFO  03:37:00,022 - #29 (
INFO  03:37:00,022 - #8 e
INFO  03:37:00,022 - #38 >
INFO  03:37:00,023 - #9 0
INFO  03:37:00,024 - #13 &&
INFO  03:37:00,024 - #8 e
INFO  03:37:00,024 - #42 <=
INFO  03:37:00,024 - #8 d
INFO  03:37:00,025 - #30 )
INFO  03:37:00,026 - #20 {
INFO  03:37:00,026 - #8 e
INFO  03:37:00,026 - #25 ++
INFO  03:37:00,026 - #27 ;
INFO  03:37:00,026 - #3 print
INFO  03:37:00,026 - #29 (
INFO  03:37:00,027 - #8 e
INFO  03:37:00,027 - #30 )
INFO  03:37:00,027 - #27 ;
INFO  03:37:00,027 - #21 }
INFO  03:37:00,027 - #21 }
INFO  03:37:00,029 - #21 }
INFO  03:37:00,029 - =====================SINTAKSNO_STABLO=========================
INFO  03:37:00,033 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:37:00,034 - ==============================================================
INFO  03:37:00,052 - Pocetak obrade programa Program na liniji 1
INFO  03:37:00,052 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:37:00,053 - Deklarisana konstanta c na liniji 2
INFO  03:37:00,053 - Deklarisana konstanta d na liniji 2
INFO  03:37:00,053 - Deklarisana konstanta g na liniji 2
INFO  03:37:00,054 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:37:00,054 - Deklarisana promenljiva e na liniji 3
INFO  03:37:00,054 - Pocetak obrade metode main na liniji 5
INFO  03:37:00,055 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:37:00,055 - Zavrsetak obrade programa Program na liniji 1
INFO  03:37:00,055 - ======================TABELA_SIMBOLA==========================
INFO  03:37:00,056 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:37:00,056 - ==============================================================
INFO  03:37:00,056 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:37:00,056 - ==============================================================
INFO  03:37:00,056 - ======================GENERISANJE_KODA========================
INFO  03:37:00,060 - 1
INFO  03:37:00,060 - 2
INFO  03:37:00,060 - 3
INFO  03:37:00,061 - Final!
INFO  03:37:00,061 - x
INFO  03:37:00,064 - Generisanje koda uspesno zavrseno!
INFO  03:37:00,064 - Generisanje izlaznog fajla test\program.obj
INFO  03:37:00,064 - ==============================================================
INFO  03:42:25,208 - Obrada ulaznog fajla test\program.mj
INFO  03:42:25,289 - #2 program
INFO  03:42:25,289 - #8 Program
INFO  03:42:25,289 - #5 const
INFO  03:42:25,290 - #8 int
INFO  03:42:25,290 - #8 c
INFO  03:42:25,291 - #24 =
INFO  03:42:25,291 - #9 10
INFO  03:42:25,291 - #28 ,
INFO  03:42:25,292 - #8 d
INFO  03:42:25,293 - #24 =
INFO  03:42:25,293 - #9 99
INFO  03:42:25,293 - #28 ,
INFO  03:42:25,293 - #8 g
INFO  03:42:25,293 - #24 =
INFO  03:42:25,293 - #9 2
INFO  03:42:25,293 - #27 ;
INFO  03:42:25,293 - #8 int
INFO  03:42:25,295 - #8 e
INFO  03:42:25,295 - #27 ;
INFO  03:42:25,295 - #20 {
INFO  03:42:25,297 - #6 void
INFO  03:42:25,297 - #8 main
INFO  03:42:25,297 - #29 (
INFO  03:42:25,298 - #30 )
INFO  03:42:25,298 - #20 {
INFO  03:42:25,298 - #8 e
INFO  03:42:25,298 - #24 =
INFO  03:42:25,299 - #9 10
INFO  03:42:25,299 - #27 ;
INFO  03:42:25,299 - #31 if
INFO  03:42:25,300 - #29 (
INFO  03:42:25,300 - #8 e
INFO  03:42:25,300 - #38 >
INFO  03:42:25,300 - #9 0
INFO  03:42:25,301 - #13 &&
INFO  03:42:25,302 - #8 e
INFO  03:42:25,302 - #42 <=
INFO  03:42:25,302 - #8 d
INFO  03:42:25,302 - #30 )
INFO  03:42:25,303 - #20 {
INFO  03:42:25,303 - #8 e
INFO  03:42:25,304 - #25 ++
INFO  03:42:25,304 - #27 ;
INFO  03:42:25,304 - #3 print
INFO  03:42:25,304 - #29 (
INFO  03:42:25,304 - #8 e
INFO  03:42:25,304 - #30 )
INFO  03:42:25,304 - #27 ;
INFO  03:42:25,304 - #21 }
INFO  03:42:25,305 - #21 }
INFO  03:42:25,306 - #21 }
INFO  03:42:25,307 - =====================SINTAKSNO_STABLO=========================
INFO  03:42:25,308 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:42:25,310 - ==============================================================
INFO  03:42:25,323 - Pocetak obrade programa Program na liniji 1
INFO  03:42:25,324 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:42:25,324 - Deklarisana konstanta c na liniji 2
INFO  03:42:25,324 - Deklarisana konstanta d na liniji 2
INFO  03:42:25,324 - Deklarisana konstanta g na liniji 2
INFO  03:42:25,325 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:42:25,325 - Deklarisana promenljiva e na liniji 3
INFO  03:42:25,326 - Pocetak obrade metode main na liniji 5
INFO  03:42:25,326 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:42:25,327 - Zavrsetak obrade programa Program na liniji 1
INFO  03:42:25,327 - ======================TABELA_SIMBOLA==========================
INFO  03:42:25,327 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:42:25,327 - ==============================================================
INFO  03:42:25,328 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:42:25,328 - ==============================================================
INFO  03:42:25,328 - ======================GENERISANJE_KODA========================
INFO  03:42:25,331 - 1
INFO  03:42:25,332 - 2
INFO  03:42:25,332 - 3
INFO  03:42:25,332 - Final!
INFO  03:42:25,332 - x
INFO  03:42:25,335 - Generisanje koda uspesno zavrseno!
INFO  03:42:25,335 - Generisanje izlaznog fajla test\program.obj
INFO  03:42:25,335 - ==============================================================
INFO  03:43:34,015 - Obrada ulaznog fajla test\program.mj
INFO  03:43:34,101 - #2 program
INFO  03:43:34,102 - #8 Program
INFO  03:43:34,102 - #5 const
INFO  03:43:34,103 - #8 int
INFO  03:43:34,103 - #8 c
INFO  03:43:34,104 - #24 =
INFO  03:43:34,104 - #9 10
INFO  03:43:34,104 - #28 ,
INFO  03:43:34,106 - #8 d
INFO  03:43:34,106 - #24 =
INFO  03:43:34,106 - #9 99
INFO  03:43:34,106 - #28 ,
INFO  03:43:34,106 - #8 g
INFO  03:43:34,106 - #24 =
INFO  03:43:34,107 - #9 2
INFO  03:43:34,107 - #27 ;
INFO  03:43:34,107 - #8 int
INFO  03:43:34,108 - #8 e
INFO  03:43:34,108 - #27 ;
INFO  03:43:34,109 - #20 {
INFO  03:43:34,110 - #6 void
INFO  03:43:34,110 - #8 main
INFO  03:43:34,110 - #29 (
INFO  03:43:34,111 - #30 )
INFO  03:43:34,111 - #20 {
INFO  03:43:34,111 - #8 e
INFO  03:43:34,111 - #24 =
INFO  03:43:34,112 - #9 10
INFO  03:43:34,112 - #27 ;
INFO  03:43:34,112 - #31 if
INFO  03:43:34,113 - #29 (
INFO  03:43:34,113 - #8 e
INFO  03:43:34,113 - #38 >
INFO  03:43:34,113 - #9 0
INFO  03:43:34,114 - #14 ||
INFO  03:43:34,115 - #8 e
INFO  03:43:34,115 - #42 <=
INFO  03:43:34,115 - #8 d
INFO  03:43:34,115 - #30 )
INFO  03:43:34,117 - #20 {
INFO  03:43:34,117 - #8 e
INFO  03:43:34,117 - #25 ++
INFO  03:43:34,117 - #27 ;
INFO  03:43:34,117 - #3 print
INFO  03:43:34,117 - #29 (
INFO  03:43:34,117 - #8 e
INFO  03:43:34,117 - #30 )
INFO  03:43:34,118 - #27 ;
INFO  03:43:34,118 - #21 }
INFO  03:43:34,118 - #21 }
INFO  03:43:34,119 - #21 }
INFO  03:43:34,120 - =====================SINTAKSNO_STABLO=========================
INFO  03:43:34,128 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:43:34,128 - ==============================================================
INFO  03:43:34,140 - Pocetak obrade programa Program na liniji 1
INFO  03:43:34,140 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:43:34,141 - Deklarisana konstanta c na liniji 2
INFO  03:43:34,141 - Deklarisana konstanta d na liniji 2
INFO  03:43:34,141 - Deklarisana konstanta g na liniji 2
INFO  03:43:34,141 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:43:34,141 - Deklarisana promenljiva e na liniji 3
INFO  03:43:34,142 - Pocetak obrade metode main na liniji 5
INFO  03:43:34,142 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:43:34,142 - Zavrsetak obrade programa Program na liniji 1
INFO  03:43:34,142 - ======================TABELA_SIMBOLA==========================
INFO  03:43:34,143 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:43:34,143 - ==============================================================
INFO  03:43:34,143 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:43:34,143 - ==============================================================
INFO  03:43:34,144 - ======================GENERISANJE_KODA========================
INFO  03:43:34,148 - 1
INFO  03:43:34,148 - 3
INFO  03:43:34,148 - 1
INFO  03:43:34,148 - 4
INFO  03:43:34,148 - Final!
INFO  03:43:34,150 - y
INFO  03:43:34,151 - Generisanje koda uspesno zavrseno!
INFO  03:43:34,152 - Generisanje izlaznog fajla test\program.obj
INFO  03:43:34,152 - ==============================================================
INFO  03:44:38,687 - Obrada ulaznog fajla test\program.mj
INFO  03:44:38,775 - #2 program
INFO  03:44:38,775 - #8 Program
INFO  03:44:38,775 - #5 const
INFO  03:44:38,776 - #8 int
INFO  03:44:38,776 - #8 c
INFO  03:44:38,777 - #24 =
INFO  03:44:38,777 - #9 10
INFO  03:44:38,777 - #28 ,
INFO  03:44:38,778 - #8 d
INFO  03:44:38,779 - #24 =
INFO  03:44:38,779 - #9 99
INFO  03:44:38,779 - #28 ,
INFO  03:44:38,779 - #8 g
INFO  03:44:38,779 - #24 =
INFO  03:44:38,779 - #9 2
INFO  03:44:38,779 - #27 ;
INFO  03:44:38,780 - #8 int
INFO  03:44:38,781 - #8 e
INFO  03:44:38,781 - #27 ;
INFO  03:44:38,781 - #20 {
INFO  03:44:38,783 - #6 void
INFO  03:44:38,783 - #8 main
INFO  03:44:38,783 - #29 (
INFO  03:44:38,784 - #30 )
INFO  03:44:38,784 - #20 {
INFO  03:44:38,784 - #8 e
INFO  03:44:38,784 - #24 =
INFO  03:44:38,785 - #9 10
INFO  03:44:38,785 - #27 ;
INFO  03:44:38,786 - #31 if
INFO  03:44:38,786 - #29 (
INFO  03:44:38,786 - #8 e
INFO  03:44:38,786 - #38 >
INFO  03:44:38,786 - #9 0
INFO  03:44:38,788 - #14 ||
INFO  03:44:38,788 - #8 e
INFO  03:44:38,788 - #42 <=
INFO  03:44:38,788 - #8 d
INFO  03:44:38,789 - #30 )
INFO  03:44:38,790 - #20 {
INFO  03:44:38,790 - #8 e
INFO  03:44:38,790 - #25 ++
INFO  03:44:38,790 - #27 ;
INFO  03:44:38,790 - #3 print
INFO  03:44:38,791 - #29 (
INFO  03:44:38,791 - #8 e
INFO  03:44:38,791 - #30 )
INFO  03:44:38,791 - #27 ;
INFO  03:44:38,791 - #21 }
INFO  03:44:38,791 - #21 }
INFO  03:44:38,793 - #21 }
INFO  03:44:38,794 - =====================SINTAKSNO_STABLO=========================
INFO  03:44:38,795 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:44:38,796 - ==============================================================
INFO  03:44:38,810 - Pocetak obrade programa Program na liniji 1
INFO  03:44:38,810 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:44:38,811 - Deklarisana konstanta c na liniji 2
INFO  03:44:38,811 - Deklarisana konstanta d na liniji 2
INFO  03:44:38,811 - Deklarisana konstanta g na liniji 2
INFO  03:44:38,811 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:44:38,811 - Deklarisana promenljiva e na liniji 3
INFO  03:44:38,812 - Pocetak obrade metode main na liniji 5
INFO  03:44:38,812 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:44:38,812 - Zavrsetak obrade programa Program na liniji 1
INFO  03:44:38,812 - ======================TABELA_SIMBOLA==========================
INFO  03:44:38,813 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:44:38,813 - ==============================================================
INFO  03:44:38,813 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:44:38,813 - ==============================================================
INFO  03:44:38,813 - ======================GENERISANJE_KODA========================
INFO  03:44:38,817 - 1
INFO  03:44:38,817 - 3
INFO  03:44:38,817 - 1
INFO  03:44:38,818 - 4
INFO  03:44:38,818 - Final!
INFO  03:44:38,820 - y
INFO  03:44:38,822 - Generisanje koda uspesno zavrseno!
INFO  03:44:38,823 - Generisanje izlaznog fajla test\program.obj
INFO  03:44:38,823 - ==============================================================
INFO  03:46:28,735 - Obrada ulaznog fajla test\program.mj
INFO  03:46:28,814 - #2 program
INFO  03:46:28,814 - #8 Program
INFO  03:46:28,814 - #5 const
INFO  03:46:28,818 - #8 int
INFO  03:46:28,818 - #8 c
INFO  03:46:28,819 - #24 =
INFO  03:46:28,819 - #9 10
INFO  03:46:28,819 - #28 ,
INFO  03:46:28,821 - #8 d
INFO  03:46:28,821 - #24 =
INFO  03:46:28,821 - #9 99
INFO  03:46:28,821 - #28 ,
INFO  03:46:28,821 - #8 g
INFO  03:46:28,821 - #24 =
INFO  03:46:28,822 - #9 2
INFO  03:46:28,822 - #27 ;
INFO  03:46:28,822 - #8 int
INFO  03:46:28,823 - #8 e
INFO  03:46:28,823 - #27 ;
INFO  03:46:28,824 - #20 {
INFO  03:46:28,825 - #6 void
INFO  03:46:28,825 - #8 main
INFO  03:46:28,825 - #29 (
INFO  03:46:28,826 - #30 )
INFO  03:46:28,826 - #20 {
INFO  03:46:28,827 - #8 e
INFO  03:46:28,827 - #24 =
INFO  03:46:28,827 - #9 10
INFO  03:46:28,827 - #27 ;
INFO  03:46:28,827 - #31 if
INFO  03:46:28,828 - #29 (
INFO  03:46:28,828 - #8 e
INFO  03:46:28,828 - #38 >
INFO  03:46:28,828 - #9 0
INFO  03:46:28,829 - #14 ||
INFO  03:46:28,830 - #8 e
INFO  03:46:28,830 - #42 <=
INFO  03:46:28,830 - #8 d
INFO  03:46:28,830 - #30 )
INFO  03:46:28,831 - #20 {
INFO  03:46:28,831 - #8 e
INFO  03:46:28,831 - #25 ++
INFO  03:46:28,832 - #27 ;
INFO  03:46:28,832 - #3 print
INFO  03:46:28,832 - #29 (
INFO  03:46:28,832 - #8 e
INFO  03:46:28,832 - #30 )
INFO  03:46:28,832 - #27 ;
INFO  03:46:28,832 - #21 }
INFO  03:46:28,833 - #21 }
INFO  03:46:28,834 - #21 }
INFO  03:46:28,834 - =====================SINTAKSNO_STABLO=========================
INFO  03:46:28,836 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:46:28,837 - ==============================================================
INFO  03:46:28,851 - Pocetak obrade programa Program na liniji 1
INFO  03:46:28,852 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:46:28,853 - Deklarisana konstanta c na liniji 2
INFO  03:46:28,853 - Deklarisana konstanta d na liniji 2
INFO  03:46:28,853 - Deklarisana konstanta g na liniji 2
INFO  03:46:28,853 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:46:28,853 - Deklarisana promenljiva e na liniji 3
INFO  03:46:28,854 - Pocetak obrade metode main na liniji 5
INFO  03:46:28,854 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:46:28,855 - Zavrsetak obrade programa Program na liniji 1
INFO  03:46:28,855 - ======================TABELA_SIMBOLA==========================
INFO  03:46:28,855 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:46:28,856 - ==============================================================
INFO  03:46:28,856 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:46:28,856 - ==============================================================
INFO  03:46:28,856 - ======================GENERISANJE_KODA========================
INFO  03:46:28,860 - 1
INFO  03:46:28,860 - 3
INFO  03:46:28,860 - 1
INFO  03:46:28,861 - 4
INFO  03:46:28,861 - Final!
INFO  03:46:28,862 - y
INFO  03:46:28,864 - Generisanje koda uspesno zavrseno!
INFO  03:46:28,864 - Generisanje izlaznog fajla test\program.obj
INFO  03:46:28,864 - ==============================================================
INFO  03:47:12,413 - Obrada ulaznog fajla test\program.mj
INFO  03:47:12,494 - #2 program
INFO  03:47:12,494 - #8 Program
INFO  03:47:12,494 - #5 const
INFO  03:47:12,495 - #8 int
INFO  03:47:12,495 - #8 c
INFO  03:47:12,496 - #24 =
INFO  03:47:12,496 - #9 10
INFO  03:47:12,496 - #28 ,
INFO  03:47:12,497 - #8 d
INFO  03:47:12,497 - #24 =
INFO  03:47:12,497 - #9 99
INFO  03:47:12,497 - #28 ,
INFO  03:47:12,498 - #8 g
INFO  03:47:12,498 - #24 =
INFO  03:47:12,498 - #9 2
INFO  03:47:12,498 - #27 ;
INFO  03:47:12,498 - #8 int
INFO  03:47:12,499 - #8 e
INFO  03:47:12,499 - #27 ;
INFO  03:47:12,500 - #20 {
INFO  03:47:12,501 - #6 void
INFO  03:47:12,501 - #8 main
INFO  03:47:12,501 - #29 (
INFO  03:47:12,502 - #30 )
INFO  03:47:12,502 - #20 {
INFO  03:47:12,502 - #8 e
INFO  03:47:12,502 - #24 =
INFO  03:47:12,503 - #9 10
INFO  03:47:12,503 - #27 ;
INFO  03:47:12,503 - #31 if
INFO  03:47:12,504 - #29 (
INFO  03:47:12,504 - #8 e
INFO  03:47:12,504 - #38 >
INFO  03:47:12,504 - #9 0
INFO  03:47:12,505 - #14 ||
INFO  03:47:12,506 - #8 e
INFO  03:47:12,507 - #42 <=
INFO  03:47:12,507 - #8 d
INFO  03:47:12,507 - #30 )
INFO  03:47:12,508 - #20 {
INFO  03:47:12,508 - #8 e
INFO  03:47:12,508 - #25 ++
INFO  03:47:12,509 - #27 ;
INFO  03:47:12,509 - #3 print
INFO  03:47:12,509 - #29 (
INFO  03:47:12,509 - #8 e
INFO  03:47:12,509 - #30 )
INFO  03:47:12,509 - #27 ;
INFO  03:47:12,509 - #21 }
INFO  03:47:12,510 - #21 }
INFO  03:47:12,511 - #21 }
INFO  03:47:12,511 - =====================SINTAKSNO_STABLO=========================
INFO  03:47:12,513 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:47:12,514 - ==============================================================
INFO  03:47:12,527 - Pocetak obrade programa Program na liniji 1
INFO  03:47:12,527 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:47:12,528 - Deklarisana konstanta c na liniji 2
INFO  03:47:12,528 - Deklarisana konstanta d na liniji 2
INFO  03:47:12,528 - Deklarisana konstanta g na liniji 2
INFO  03:47:12,528 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:47:12,529 - Deklarisana promenljiva e na liniji 3
INFO  03:47:12,529 - Pocetak obrade metode main na liniji 5
INFO  03:47:12,530 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:47:12,530 - Zavrsetak obrade programa Program na liniji 1
INFO  03:47:12,530 - ======================TABELA_SIMBOLA==========================
INFO  03:47:12,531 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:47:12,531 - ==============================================================
INFO  03:47:12,531 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:47:12,531 - ==============================================================
INFO  03:47:12,531 - ======================GENERISANJE_KODA========================
INFO  03:47:12,534 - 1
INFO  03:47:12,534 - 3
INFO  03:47:12,535 - 1
INFO  03:47:12,535 - 4
INFO  03:47:12,536 - Final!
INFO  03:47:12,537 - y
INFO  03:47:12,538 - Generisanje koda uspesno zavrseno!
INFO  03:47:12,539 - Generisanje izlaznog fajla test\program.obj
INFO  03:47:12,539 - ==============================================================
INFO  03:47:45,214 - Obrada ulaznog fajla test\program.mj
INFO  03:47:45,293 - #2 program
INFO  03:47:45,293 - #8 Program
INFO  03:47:45,293 - #5 const
INFO  03:47:45,294 - #8 int
INFO  03:47:45,294 - #8 c
INFO  03:47:45,294 - #24 =
INFO  03:47:45,295 - #9 10
INFO  03:47:45,295 - #28 ,
INFO  03:47:45,296 - #8 d
INFO  03:47:45,296 - #24 =
INFO  03:47:45,296 - #9 99
INFO  03:47:45,296 - #28 ,
INFO  03:47:45,297 - #8 g
INFO  03:47:45,297 - #24 =
INFO  03:47:45,297 - #9 2
INFO  03:47:45,297 - #27 ;
INFO  03:47:45,297 - #8 int
INFO  03:47:45,298 - #8 e
INFO  03:47:45,299 - #27 ;
INFO  03:47:45,299 - #20 {
INFO  03:47:45,300 - #6 void
INFO  03:47:45,300 - #8 main
INFO  03:47:45,300 - #29 (
INFO  03:47:45,301 - #30 )
INFO  03:47:45,301 - #20 {
INFO  03:47:45,301 - #8 e
INFO  03:47:45,301 - #24 =
INFO  03:47:45,301 - #9 10
INFO  03:47:45,301 - #27 ;
INFO  03:47:45,302 - #31 if
INFO  03:47:45,303 - #29 (
INFO  03:47:45,303 - #8 e
INFO  03:47:45,303 - #38 >
INFO  03:47:45,303 - #9 0
INFO  03:47:45,305 - #14 ||
INFO  03:47:45,305 - #8 e
INFO  03:47:45,305 - #42 <=
INFO  03:47:45,305 - #8 d
INFO  03:47:45,306 - #30 )
INFO  03:47:45,307 - #20 {
INFO  03:47:45,307 - #8 e
INFO  03:47:45,308 - #25 ++
INFO  03:47:45,308 - #27 ;
INFO  03:47:45,308 - #3 print
INFO  03:47:45,308 - #29 (
INFO  03:47:45,308 - #8 e
INFO  03:47:45,308 - #30 )
INFO  03:47:45,308 - #27 ;
INFO  03:47:45,308 - #21 }
INFO  03:47:45,309 - #21 }
INFO  03:47:45,310 - #21 }
INFO  03:47:45,311 - =====================SINTAKSNO_STABLO=========================
INFO  03:47:45,312 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:47:45,315 - ==============================================================
INFO  03:47:45,328 - Pocetak obrade programa Program na liniji 1
INFO  03:47:45,329 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:47:45,330 - Deklarisana konstanta c na liniji 2
INFO  03:47:45,331 - Deklarisana konstanta d na liniji 2
INFO  03:47:45,331 - Deklarisana konstanta g na liniji 2
INFO  03:47:45,331 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:47:45,331 - Deklarisana promenljiva e na liniji 3
INFO  03:47:45,332 - Pocetak obrade metode main na liniji 5
INFO  03:47:45,332 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:47:45,332 - Zavrsetak obrade programa Program na liniji 1
INFO  03:47:45,333 - ======================TABELA_SIMBOLA==========================
INFO  03:47:45,333 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:47:45,333 - ==============================================================
INFO  03:47:45,333 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:47:45,334 - ==============================================================
INFO  03:47:45,334 - ======================GENERISANJE_KODA========================
INFO  03:47:45,337 - 1
INFO  03:47:45,337 - 3
INFO  03:47:45,337 - 1
INFO  03:47:45,338 - 4
INFO  03:47:45,338 - Final!
INFO  03:47:45,339 - y
INFO  03:47:45,341 - Generisanje koda uspesno zavrseno!
INFO  03:47:45,341 - Generisanje izlaznog fajla test\program.obj
INFO  03:47:45,341 - ==============================================================
INFO  03:48:17,861 - Obrada ulaznog fajla test\program.mj
INFO  03:48:17,941 - #2 program
INFO  03:48:17,941 - #8 Program
INFO  03:48:17,941 - #5 const
INFO  03:48:17,942 - #8 int
INFO  03:48:17,942 - #8 c
INFO  03:48:17,943 - #24 =
INFO  03:48:17,943 - #9 10
INFO  03:48:17,943 - #28 ,
INFO  03:48:17,944 - #8 d
INFO  03:48:17,944 - #24 =
INFO  03:48:17,944 - #9 99
INFO  03:48:17,944 - #28 ,
INFO  03:48:17,945 - #8 g
INFO  03:48:17,945 - #24 =
INFO  03:48:17,945 - #9 2
INFO  03:48:17,945 - #27 ;
INFO  03:48:17,945 - #8 int
INFO  03:48:17,946 - #8 e
INFO  03:48:17,946 - #27 ;
INFO  03:48:17,947 - #20 {
INFO  03:48:17,948 - #6 void
INFO  03:48:17,948 - #8 main
INFO  03:48:17,948 - #29 (
INFO  03:48:17,948 - #30 )
INFO  03:48:17,948 - #20 {
INFO  03:48:17,949 - #8 e
INFO  03:48:17,949 - #24 =
INFO  03:48:17,949 - #9 10
INFO  03:48:17,949 - #27 ;
INFO  03:48:17,950 - #31 if
INFO  03:48:17,950 - #29 (
INFO  03:48:17,950 - #8 e
INFO  03:48:17,951 - #38 >
INFO  03:48:17,951 - #9 0
INFO  03:48:17,952 - #14 ||
INFO  03:48:17,953 - #8 e
INFO  03:48:17,953 - #42 <=
INFO  03:48:17,953 - #8 d
INFO  03:48:17,954 - #30 )
INFO  03:48:17,955 - #20 {
INFO  03:48:17,955 - #8 e
INFO  03:48:17,955 - #25 ++
INFO  03:48:17,955 - #27 ;
INFO  03:48:17,956 - #3 print
INFO  03:48:17,956 - #29 (
INFO  03:48:17,956 - #8 e
INFO  03:48:17,956 - #30 )
INFO  03:48:17,956 - #27 ;
INFO  03:48:17,956 - #21 }
INFO  03:48:17,956 - #21 }
INFO  03:48:17,958 - #21 }
INFO  03:48:17,958 - =====================SINTAKSNO_STABLO=========================
INFO  03:48:17,960 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:48:17,961 - ==============================================================
INFO  03:48:17,978 - Pocetak obrade programa Program na liniji 1
INFO  03:48:17,978 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:48:17,979 - Deklarisana konstanta c na liniji 2
INFO  03:48:17,979 - Deklarisana konstanta d na liniji 2
INFO  03:48:17,979 - Deklarisana konstanta g na liniji 2
INFO  03:48:17,979 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:48:17,979 - Deklarisana promenljiva e na liniji 3
INFO  03:48:17,980 - Pocetak obrade metode main na liniji 5
INFO  03:48:17,980 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:48:17,980 - Zavrsetak obrade programa Program na liniji 1
INFO  03:48:17,981 - ======================TABELA_SIMBOLA==========================
INFO  03:48:17,981 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:48:17,981 - ==============================================================
INFO  03:48:17,981 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:48:17,981 - ==============================================================
INFO  03:48:17,982 - ======================GENERISANJE_KODA========================
INFO  03:48:17,986 - 1
INFO  03:48:17,986 - 3
INFO  03:48:17,986 - 1
INFO  03:48:17,987 - 4
INFO  03:48:17,987 - Final!
INFO  03:48:17,988 - y
INFO  03:48:17,990 - Generisanje koda uspesno zavrseno!
INFO  03:48:17,990 - Generisanje izlaznog fajla test\program.obj
INFO  03:48:17,990 - ==============================================================
INFO  03:53:14,619 - Obrada ulaznog fajla test\program.mj
INFO  03:53:14,702 - #2 program
INFO  03:53:14,702 - #8 Program
INFO  03:53:14,702 - #5 const
INFO  03:53:14,703 - #8 int
INFO  03:53:14,703 - #8 c
INFO  03:53:14,703 - #24 =
INFO  03:53:14,704 - #9 10
INFO  03:53:14,704 - #28 ,
INFO  03:53:14,705 - #8 d
INFO  03:53:14,705 - #24 =
INFO  03:53:14,705 - #9 99
INFO  03:53:14,705 - #28 ,
INFO  03:53:14,705 - #8 g
INFO  03:53:14,705 - #24 =
INFO  03:53:14,705 - #9 2
INFO  03:53:14,705 - #27 ;
INFO  03:53:14,705 - #8 int
INFO  03:53:14,707 - #8 e
INFO  03:53:14,707 - #27 ;
INFO  03:53:14,707 - #20 {
INFO  03:53:14,709 - #6 void
INFO  03:53:14,709 - #8 main
INFO  03:53:14,709 - #29 (
INFO  03:53:14,710 - #30 )
INFO  03:53:14,710 - #20 {
INFO  03:53:14,710 - #8 e
INFO  03:53:14,710 - #24 =
INFO  03:53:14,710 - #9 10
INFO  03:53:14,710 - #27 ;
INFO  03:53:14,711 - #31 if
INFO  03:53:14,711 - #29 (
INFO  03:53:14,711 - #8 e
INFO  03:53:14,711 - #38 >
INFO  03:53:14,712 - #9 0
INFO  03:53:14,714 - #14 ||
INFO  03:53:14,714 - #8 e
INFO  03:53:14,714 - #42 <=
INFO  03:53:14,714 - #8 d
INFO  03:53:14,715 - #14 ||
INFO  03:53:14,715 - #8 e
INFO  03:53:14,716 - #41 >=
INFO  03:53:14,716 - #9 0
INFO  03:53:14,716 - #30 )
INFO  03:53:14,718 - #20 {
INFO  03:53:14,718 - #8 e
INFO  03:53:14,718 - #25 ++
INFO  03:53:14,718 - #27 ;
INFO  03:53:14,718 - #3 print
INFO  03:53:14,718 - #29 (
INFO  03:53:14,718 - #8 e
INFO  03:53:14,718 - #30 )
INFO  03:53:14,718 - #27 ;
INFO  03:53:14,719 - #21 }
INFO  03:53:14,719 - #21 }
INFO  03:53:14,720 - #21 }
INFO  03:53:14,721 - =====================SINTAKSNO_STABLO=========================
INFO  03:53:14,725 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:53:14,725 - ==============================================================
INFO  03:53:14,741 - Pocetak obrade programa Program na liniji 1
INFO  03:53:14,741 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:53:14,742 - Deklarisana konstanta c na liniji 2
INFO  03:53:14,742 - Deklarisana konstanta d na liniji 2
INFO  03:53:14,742 - Deklarisana konstanta g na liniji 2
INFO  03:53:14,742 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:53:14,742 - Deklarisana promenljiva e na liniji 3
INFO  03:53:14,743 - Pocetak obrade metode main na liniji 5
INFO  03:53:14,744 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:53:14,744 - Zavrsetak obrade programa Program na liniji 1
INFO  03:53:14,744 - ======================TABELA_SIMBOLA==========================
INFO  03:53:14,745 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:53:14,745 - ==============================================================
INFO  03:53:14,745 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:53:14,745 - ==============================================================
INFO  03:53:14,745 - ======================GENERISANJE_KODA========================
INFO  03:53:14,749 - 1
INFO  03:53:14,751 - 3
INFO  03:53:14,751 - 1
INFO  03:53:14,752 - 4
INFO  03:53:14,752 - 1
INFO  03:53:14,752 - 4
INFO  03:53:14,752 - Final!
INFO  03:53:14,752 - y
INFO  03:53:14,752 - y
INFO  03:56:16,698 - Obrada ulaznog fajla test\program.mj
INFO  03:56:16,798 - #2 program
INFO  03:56:16,798 - #8 Program
INFO  03:56:16,798 - #5 const
INFO  03:56:16,799 - #8 int
INFO  03:56:16,799 - #8 c
INFO  03:56:16,800 - #24 =
INFO  03:56:16,800 - #9 10
INFO  03:56:16,800 - #28 ,
INFO  03:56:16,802 - #8 d
INFO  03:56:16,802 - #24 =
INFO  03:56:16,802 - #9 99
INFO  03:56:16,802 - #28 ,
INFO  03:56:16,802 - #8 g
INFO  03:56:16,802 - #24 =
INFO  03:56:16,802 - #9 2
INFO  03:56:16,803 - #27 ;
INFO  03:56:16,803 - #8 int
INFO  03:56:16,804 - #8 e
INFO  03:56:16,804 - #27 ;
INFO  03:56:16,804 - #20 {
INFO  03:56:16,806 - #6 void
INFO  03:56:16,806 - #8 main
INFO  03:56:16,806 - #29 (
INFO  03:56:16,807 - #30 )
INFO  03:56:16,807 - #20 {
INFO  03:56:16,807 - #8 e
INFO  03:56:16,807 - #24 =
INFO  03:56:16,808 - #9 10
INFO  03:56:16,808 - #27 ;
INFO  03:56:16,812 - #31 if
INFO  03:56:16,813 - #29 (
INFO  03:56:16,813 - #8 e
INFO  03:56:16,813 - #38 >
INFO  03:56:16,813 - #9 0
INFO  03:56:16,815 - #14 ||
INFO  03:56:16,815 - #8 e
INFO  03:56:16,815 - #42 <=
INFO  03:56:16,816 - #8 d
INFO  03:56:16,816 - #14 ||
INFO  03:56:16,817 - #8 e
INFO  03:56:16,817 - #41 >=
INFO  03:56:16,817 - #9 0
INFO  03:56:16,818 - #30 )
INFO  03:56:16,819 - #20 {
INFO  03:56:16,819 - #8 e
INFO  03:56:16,819 - #25 ++
INFO  03:56:16,819 - #27 ;
INFO  03:56:16,819 - #3 print
INFO  03:56:16,819 - #29 (
INFO  03:56:16,820 - #8 e
INFO  03:56:16,820 - #30 )
INFO  03:56:16,820 - #27 ;
INFO  03:56:16,820 - #21 }
INFO  03:56:16,820 - #21 }
INFO  03:56:16,821 - #21 }
INFO  03:56:16,822 - =====================SINTAKSNO_STABLO=========================
INFO  03:56:16,824 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  03:56:16,825 - ==============================================================
INFO  03:56:16,839 - Pocetak obrade programa Program na liniji 1
INFO  03:56:16,840 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  03:56:16,841 - Deklarisana konstanta c na liniji 2
INFO  03:56:16,841 - Deklarisana konstanta d na liniji 2
INFO  03:56:16,841 - Deklarisana konstanta g na liniji 2
INFO  03:56:16,841 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  03:56:16,842 - Deklarisana promenljiva e na liniji 3
INFO  03:56:16,842 - Pocetak obrade metode main na liniji 5
INFO  03:56:16,843 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  03:56:16,843 - Zavrsetak obrade programa Program na liniji 1
INFO  03:56:16,843 - ======================TABELA_SIMBOLA==========================
INFO  03:56:16,844 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  03:56:16,844 - ==============================================================
INFO  03:56:16,844 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  03:56:16,844 - ==============================================================
INFO  03:56:16,844 - ======================GENERISANJE_KODA========================
INFO  03:56:16,848 - 1
INFO  03:56:16,850 - 3
INFO  03:56:16,850 - 1
INFO  03:56:16,850 - 4
INFO  03:56:16,850 - 1
INFO  03:56:16,851 - 4
INFO  03:56:16,851 - Final!
INFO  03:56:16,851 - y
INFO  03:56:16,851 - y
INFO  03:56:16,852 - Generisanje koda uspesno zavrseno!
INFO  03:56:16,853 - Generisanje izlaznog fajla test\program.obj
INFO  03:56:16,853 - ==============================================================
INFO  04:14:03,170 - Obrada ulaznog fajla test\program.mj
INFO  04:14:03,268 - #2 program
INFO  04:14:03,269 - #8 Program
INFO  04:14:03,269 - #5 const
INFO  04:14:03,270 - #8 int
INFO  04:14:03,270 - #8 c
INFO  04:14:03,271 - #24 =
INFO  04:14:03,271 - #9 10
INFO  04:14:03,271 - #28 ,
INFO  04:14:03,273 - #8 d
INFO  04:14:03,273 - #24 =
INFO  04:14:03,273 - #9 99
INFO  04:14:03,274 - #28 ,
INFO  04:14:03,274 - #8 g
INFO  04:14:03,274 - #24 =
INFO  04:14:03,274 - #9 2
INFO  04:14:03,274 - #27 ;
INFO  04:14:03,274 - #8 int
INFO  04:14:03,276 - #8 e
INFO  04:14:03,277 - #27 ;
INFO  04:14:03,277 - #20 {
INFO  04:14:03,279 - #6 void
INFO  04:14:03,279 - #8 main
INFO  04:14:03,279 - #29 (
INFO  04:14:03,281 - #30 )
INFO  04:14:03,281 - #20 {
INFO  04:14:03,282 - #8 e
INFO  04:14:03,282 - #24 =
INFO  04:14:03,282 - #9 10
INFO  04:14:03,282 - #27 ;
INFO  04:14:03,283 - #31 if
INFO  04:14:03,284 - #29 (
INFO  04:14:03,285 - #8 e
INFO  04:14:03,285 - #38 >
INFO  04:14:03,285 - #9 0
INFO  04:14:03,286 - #14 ||
INFO  04:14:03,287 - #8 e
INFO  04:14:03,287 - #42 <=
INFO  04:14:03,287 - #8 d
INFO  04:14:03,288 - #14 ||
INFO  04:14:03,289 - #8 e
INFO  04:14:03,289 - #41 >=
INFO  04:14:03,289 - #9 0
INFO  04:14:03,290 - #30 )
INFO  04:14:03,291 - #20 {
INFO  04:14:03,291 - #8 e
INFO  04:14:03,291 - #25 ++
INFO  04:14:03,291 - #27 ;
INFO  04:14:03,291 - #3 print
INFO  04:14:03,291 - #29 (
INFO  04:14:03,291 - #8 e
INFO  04:14:03,292 - #30 )
INFO  04:14:03,292 - #27 ;
INFO  04:14:03,292 - #21 }
INFO  04:14:03,292 - #21 }
INFO  04:14:03,293 - #21 }
INFO  04:14:03,294 - =====================SINTAKSNO_STABLO=========================
INFO  04:14:03,297 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:14:03,297 - ==============================================================
INFO  04:14:03,311 - Pocetak obrade programa Program na liniji 1
INFO  04:14:03,311 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:14:03,312 - Deklarisana konstanta c na liniji 2
INFO  04:14:03,313 - Deklarisana konstanta d na liniji 2
INFO  04:14:03,313 - Deklarisana konstanta g na liniji 2
INFO  04:14:03,313 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:14:03,313 - Deklarisana promenljiva e na liniji 3
INFO  04:14:03,314 - Pocetak obrade metode main na liniji 5
INFO  04:14:03,315 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:14:03,315 - Zavrsetak obrade programa Program na liniji 1
INFO  04:14:03,315 - ======================TABELA_SIMBOLA==========================
INFO  04:14:03,315 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:14:03,316 - ==============================================================
INFO  04:14:03,316 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:14:03,316 - ==============================================================
INFO  04:14:03,316 - ======================GENERISANJE_KODA========================
INFO  04:14:03,320 - 1
INFO  04:14:03,322 - 3
INFO  04:14:03,322 - 1
INFO  04:14:03,323 - 4
INFO  04:14:03,323 - 1
INFO  04:14:03,323 - 4
INFO  04:14:03,323 - Final!
INFO  04:14:03,324 - y
INFO  04:14:03,324 - y
INFO  04:14:03,326 - Generisanje koda uspesno zavrseno!
INFO  04:14:03,326 - Generisanje izlaznog fajla test\program.obj
INFO  04:14:03,326 - ==============================================================
INFO  04:31:32,310 - Obrada ulaznog fajla test\program.mj
INFO  04:31:32,402 - #2 program
INFO  04:31:32,402 - #8 Program
INFO  04:31:32,402 - #5 const
INFO  04:31:32,404 - #8 int
INFO  04:31:32,405 - #8 c
INFO  04:31:32,406 - #24 =
INFO  04:31:32,406 - #9 10
INFO  04:31:32,406 - #28 ,
INFO  04:31:32,408 - #8 d
INFO  04:31:32,408 - #24 =
INFO  04:31:32,408 - #9 99
INFO  04:31:32,408 - #28 ,
INFO  04:31:32,408 - #8 g
INFO  04:31:32,409 - #24 =
INFO  04:31:32,409 - #9 2
INFO  04:31:32,409 - #27 ;
INFO  04:31:32,409 - #8 int
INFO  04:31:32,411 - #8 e
INFO  04:31:32,411 - #27 ;
INFO  04:31:32,411 - #20 {
INFO  04:31:32,413 - #6 void
INFO  04:31:32,413 - #8 main
INFO  04:31:32,413 - #29 (
INFO  04:31:32,414 - #30 )
INFO  04:31:32,415 - #20 {
INFO  04:31:32,415 - #8 e
INFO  04:31:32,415 - #24 =
INFO  04:31:32,415 - #9 10
INFO  04:31:32,415 - #27 ;
INFO  04:31:32,416 - #31 if
INFO  04:31:32,417 - #29 (
INFO  04:31:32,417 - #8 e
INFO  04:31:32,417 - #38 >
INFO  04:31:32,417 - #9 0
INFO  04:31:32,420 - #14 ||
INFO  04:31:32,420 - #8 e
INFO  04:31:32,421 - #42 <=
INFO  04:31:32,421 - #8 d
INFO  04:31:32,422 - #14 ||
INFO  04:31:32,422 - #8 e
INFO  04:31:32,422 - #41 >=
INFO  04:31:32,423 - #9 0
INFO  04:31:32,424 - #30 )
INFO  04:31:32,425 - #20 {
INFO  04:31:32,425 - #8 e
INFO  04:31:32,425 - #25 ++
INFO  04:31:32,425 - #27 ;
INFO  04:31:32,426 - #3 print
INFO  04:31:32,426 - #29 (
INFO  04:31:32,426 - #8 e
INFO  04:31:32,426 - #30 )
INFO  04:31:32,426 - #27 ;
INFO  04:31:32,426 - #21 }
INFO  04:31:32,427 - #21 }
INFO  04:31:32,428 - #21 }
INFO  04:31:32,429 - =====================SINTAKSNO_STABLO=========================
INFO  04:31:32,431 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:31:32,434 - ==============================================================
INFO  04:31:32,446 - Pocetak obrade programa Program na liniji 1
INFO  04:31:32,447 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:31:32,448 - Deklarisana konstanta c na liniji 2
INFO  04:31:32,448 - Deklarisana konstanta d na liniji 2
INFO  04:31:32,448 - Deklarisana konstanta g na liniji 2
INFO  04:31:32,448 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:31:32,448 - Deklarisana promenljiva e na liniji 3
INFO  04:31:32,449 - Pocetak obrade metode main na liniji 5
INFO  04:31:32,450 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:31:32,450 - Zavrsetak obrade programa Program na liniji 1
INFO  04:31:32,450 - ======================TABELA_SIMBOLA==========================
INFO  04:31:32,451 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:31:32,451 - ==============================================================
INFO  04:31:32,451 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:31:32,451 - ==============================================================
INFO  04:31:32,451 - ======================GENERISANJE_KODA========================
INFO  04:31:32,457 - 1
INFO  04:31:32,459 - 3
INFO  04:31:32,459 - 1
INFO  04:31:32,460 - 4
INFO  04:31:32,460 - 1
INFO  04:31:32,460 - 4
INFO  04:31:32,460 - Final!
INFO  04:31:32,461 - y
INFO  04:31:32,462 - y
INFO  04:31:32,464 - Generisanje koda uspesno zavrseno!
INFO  04:31:32,468 - Generisanje izlaznog fajla test\program.obj
INFO  04:31:32,468 - ==============================================================
INFO  04:36:28,618 - Obrada ulaznog fajla test\program.mj
INFO  04:36:28,746 - #2 program
INFO  04:36:28,747 - #8 Program
INFO  04:36:28,747 - #5 const
INFO  04:36:28,748 - #8 int
INFO  04:36:28,748 - #8 c
INFO  04:36:28,749 - #24 =
INFO  04:36:28,749 - #9 10
INFO  04:36:28,749 - #28 ,
INFO  04:36:28,750 - #8 d
INFO  04:36:28,751 - #24 =
INFO  04:36:28,751 - #9 99
INFO  04:36:28,751 - #28 ,
INFO  04:36:28,751 - #8 g
INFO  04:36:28,751 - #24 =
INFO  04:36:28,751 - #9 2
INFO  04:36:28,752 - #27 ;
INFO  04:36:28,752 - #8 int
INFO  04:36:28,753 - #8 e
INFO  04:36:28,753 - #27 ;
INFO  04:36:28,754 - #20 {
INFO  04:36:28,755 - #6 void
INFO  04:36:28,755 - #8 main
INFO  04:36:28,755 - #29 (
INFO  04:36:28,757 - #30 )
INFO  04:36:28,757 - #20 {
INFO  04:36:28,757 - #8 e
INFO  04:36:28,757 - #24 =
INFO  04:36:28,758 - #9 10
INFO  04:36:28,758 - #27 ;
INFO  04:36:28,759 - #31 if
INFO  04:36:28,760 - #29 (
INFO  04:36:28,760 - #8 e
INFO  04:36:28,760 - #38 >
INFO  04:36:28,760 - #9 0
INFO  04:36:28,762 - #14 ||
INFO  04:36:28,762 - #8 e
INFO  04:36:28,763 - #42 <=
INFO  04:36:28,763 - #8 d
INFO  04:36:28,764 - #14 ||
INFO  04:36:28,764 - #8 e
INFO  04:36:28,764 - #41 >=
INFO  04:36:28,764 - #9 0
INFO  04:36:28,765 - #30 )
INFO  04:36:28,766 - #20 {
INFO  04:36:28,766 - #8 e
INFO  04:36:28,766 - #25 ++
INFO  04:36:28,767 - #27 ;
INFO  04:36:28,767 - #3 print
INFO  04:36:28,767 - #29 (
INFO  04:36:28,767 - #8 e
INFO  04:36:28,767 - #30 )
INFO  04:36:28,767 - #27 ;
INFO  04:36:28,767 - #21 }
INFO  04:36:28,768 - #21 }
INFO  04:36:28,769 - #21 }
INFO  04:36:28,770 - =====================SINTAKSNO_STABLO=========================
INFO  04:36:28,773 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:36:28,773 - ==============================================================
INFO  04:36:28,789 - Pocetak obrade programa Program na liniji 1
INFO  04:36:28,789 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:36:28,790 - Deklarisana konstanta c na liniji 2
INFO  04:36:28,790 - Deklarisana konstanta d na liniji 2
INFO  04:36:28,790 - Deklarisana konstanta g na liniji 2
INFO  04:36:28,790 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:36:28,791 - Deklarisana promenljiva e na liniji 3
INFO  04:36:28,792 - Pocetak obrade metode main na liniji 5
INFO  04:36:28,792 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:36:28,792 - Zavrsetak obrade programa Program na liniji 1
INFO  04:36:28,792 - ======================TABELA_SIMBOLA==========================
INFO  04:36:28,793 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:36:28,793 - ==============================================================
INFO  04:36:28,793 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:36:28,793 - ==============================================================
INFO  04:36:28,793 - ======================GENERISANJE_KODA========================
INFO  04:36:28,816 - 1
INFO  04:36:28,818 - 3
INFO  04:36:28,818 - 1
INFO  04:36:28,823 - 4
INFO  04:36:28,823 - 1
INFO  04:36:28,823 - 4
INFO  04:36:28,823 - Final!
INFO  04:36:35,795 - Obrada ulaznog fajla test\program.mj
INFO  04:36:35,877 - #2 program
INFO  04:36:35,877 - #8 Program
INFO  04:36:35,877 - #5 const
INFO  04:36:35,878 - #8 int
INFO  04:36:35,878 - #8 c
INFO  04:36:35,880 - #24 =
INFO  04:36:35,880 - #9 10
INFO  04:36:35,880 - #28 ,
INFO  04:36:35,881 - #8 d
INFO  04:36:35,882 - #24 =
INFO  04:36:35,882 - #9 99
INFO  04:36:35,882 - #28 ,
INFO  04:36:35,882 - #8 g
INFO  04:36:35,884 - #24 =
INFO  04:36:35,884 - #9 2
INFO  04:36:35,885 - #27 ;
INFO  04:36:35,885 - #8 int
INFO  04:36:35,886 - #8 e
INFO  04:36:35,886 - #27 ;
INFO  04:36:35,887 - #20 {
INFO  04:36:35,888 - #6 void
INFO  04:36:35,888 - #8 main
INFO  04:36:35,889 - #29 (
INFO  04:36:35,889 - #30 )
INFO  04:36:35,890 - #20 {
INFO  04:36:35,890 - #8 e
INFO  04:36:35,890 - #24 =
INFO  04:36:35,890 - #9 10
INFO  04:36:35,890 - #27 ;
INFO  04:36:35,891 - #31 if
INFO  04:36:35,892 - #29 (
INFO  04:36:35,892 - #8 e
INFO  04:36:35,892 - #38 >
INFO  04:36:35,892 - #9 0
INFO  04:36:35,894 - #14 ||
INFO  04:36:35,894 - #8 e
INFO  04:36:35,894 - #42 <=
INFO  04:36:35,896 - #8 d
INFO  04:36:35,897 - #14 ||
INFO  04:36:35,898 - #8 e
INFO  04:36:35,898 - #41 >=
INFO  04:36:35,898 - #9 0
INFO  04:36:35,899 - #30 )
INFO  04:36:35,900 - #20 {
INFO  04:36:35,900 - #8 e
INFO  04:36:35,900 - #25 ++
INFO  04:36:35,901 - #27 ;
INFO  04:36:35,901 - #3 print
INFO  04:36:35,902 - #29 (
INFO  04:36:35,902 - #8 e
INFO  04:36:35,903 - #30 )
INFO  04:36:35,903 - #27 ;
INFO  04:36:35,903 - #21 }
INFO  04:36:35,903 - #21 }
INFO  04:36:35,905 - #21 }
INFO  04:36:35,906 - =====================SINTAKSNO_STABLO=========================
INFO  04:36:35,909 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:36:35,910 - ==============================================================
INFO  04:36:35,924 - Pocetak obrade programa Program na liniji 1
INFO  04:36:35,924 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:36:35,925 - Deklarisana konstanta c na liniji 2
INFO  04:36:35,926 - Deklarisana konstanta d na liniji 2
INFO  04:36:35,926 - Deklarisana konstanta g na liniji 2
INFO  04:36:35,926 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:36:35,926 - Deklarisana promenljiva e na liniji 3
INFO  04:36:35,927 - Pocetak obrade metode main na liniji 5
INFO  04:36:35,928 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:36:35,928 - Zavrsetak obrade programa Program na liniji 1
INFO  04:36:35,928 - ======================TABELA_SIMBOLA==========================
INFO  04:36:35,929 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:36:35,929 - ==============================================================
INFO  04:36:35,929 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:36:35,929 - ==============================================================
INFO  04:36:35,929 - ======================GENERISANJE_KODA========================
INFO  04:36:35,933 - 1
INFO  04:36:35,934 - 3
INFO  04:36:35,934 - 1
INFO  04:36:35,935 - 4
INFO  04:36:35,935 - 1
INFO  04:36:35,935 - 4
INFO  04:36:35,935 - Final!
INFO  04:36:35,936 - y
INFO  04:36:35,936 - y
INFO  04:36:35,939 - Generisanje koda uspesno zavrseno!
INFO  04:36:35,939 - Generisanje izlaznog fajla test\program.obj
INFO  04:36:35,939 - ==============================================================
INFO  04:36:38,076 - Obrada ulaznog fajla test\program.mj
INFO  04:36:38,175 - #2 program
INFO  04:36:38,175 - #8 Program
INFO  04:36:38,175 - #5 const
INFO  04:36:38,176 - #8 int
INFO  04:36:38,177 - #8 c
INFO  04:36:38,177 - #24 =
INFO  04:36:38,177 - #9 10
INFO  04:36:38,178 - #28 ,
INFO  04:36:38,179 - #8 d
INFO  04:36:38,179 - #24 =
INFO  04:36:38,179 - #9 99
INFO  04:36:38,179 - #28 ,
INFO  04:36:38,179 - #8 g
INFO  04:36:38,179 - #24 =
INFO  04:36:38,179 - #9 2
INFO  04:36:38,179 - #27 ;
INFO  04:36:38,179 - #8 int
INFO  04:36:38,181 - #8 e
INFO  04:36:38,181 - #27 ;
INFO  04:36:38,181 - #20 {
INFO  04:36:38,183 - #6 void
INFO  04:36:38,183 - #8 main
INFO  04:36:38,183 - #29 (
INFO  04:36:38,184 - #30 )
INFO  04:36:38,185 - #20 {
INFO  04:36:38,185 - #8 e
INFO  04:36:38,185 - #24 =
INFO  04:36:38,185 - #9 10
INFO  04:36:38,185 - #27 ;
INFO  04:36:38,186 - #31 if
INFO  04:36:38,186 - #29 (
INFO  04:36:38,186 - #8 e
INFO  04:36:38,186 - #38 >
INFO  04:36:38,187 - #9 0
INFO  04:36:38,188 - #14 ||
INFO  04:36:38,189 - #8 e
INFO  04:36:38,189 - #42 <=
INFO  04:36:38,189 - #8 d
INFO  04:36:38,190 - #14 ||
INFO  04:36:38,190 - #8 e
INFO  04:36:38,190 - #41 >=
INFO  04:36:38,190 - #9 0
INFO  04:36:38,191 - #30 )
INFO  04:36:38,192 - #20 {
INFO  04:36:38,192 - #8 e
INFO  04:36:38,192 - #25 ++
INFO  04:36:38,192 - #27 ;
INFO  04:36:38,192 - #3 print
INFO  04:36:38,192 - #29 (
INFO  04:36:38,192 - #8 e
INFO  04:36:38,193 - #30 )
INFO  04:36:38,193 - #27 ;
INFO  04:36:38,193 - #21 }
INFO  04:36:38,193 - #21 }
INFO  04:36:38,194 - #21 }
INFO  04:36:38,195 - =====================SINTAKSNO_STABLO=========================
INFO  04:36:38,198 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:36:38,199 - ==============================================================
INFO  04:36:38,213 - Pocetak obrade programa Program na liniji 1
INFO  04:36:38,213 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:36:38,214 - Deklarisana konstanta c na liniji 2
INFO  04:36:38,214 - Deklarisana konstanta d na liniji 2
INFO  04:36:38,214 - Deklarisana konstanta g na liniji 2
INFO  04:36:38,214 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:36:38,215 - Deklarisana promenljiva e na liniji 3
INFO  04:36:38,215 - Pocetak obrade metode main na liniji 5
INFO  04:36:38,216 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:36:38,216 - Zavrsetak obrade programa Program na liniji 1
INFO  04:36:38,216 - ======================TABELA_SIMBOLA==========================
INFO  04:36:38,216 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:36:38,217 - ==============================================================
INFO  04:36:38,217 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:36:38,217 - ==============================================================
INFO  04:36:38,217 - ======================GENERISANJE_KODA========================
INFO  04:36:38,237 - 1
INFO  04:36:38,239 - 3
INFO  04:36:38,239 - 1
INFO  04:36:38,242 - 4
INFO  04:36:38,242 - 1
INFO  04:36:38,243 - 4
INFO  04:36:38,243 - Final!
INFO  04:36:38,244 - y
INFO  04:36:38,245 - y
INFO  04:38:51,343 - Obrada ulaznog fajla test\program.mj
INFO  04:38:51,421 - #2 program
INFO  04:38:51,421 - #8 Program
INFO  04:38:51,421 - #5 const
INFO  04:38:51,422 - #8 int
INFO  04:38:51,422 - #8 c
INFO  04:38:51,423 - #24 =
INFO  04:38:51,423 - #9 10
INFO  04:38:51,424 - #28 ,
INFO  04:38:51,425 - #8 d
INFO  04:38:51,425 - #24 =
INFO  04:38:51,425 - #9 99
INFO  04:38:51,425 - #28 ,
INFO  04:38:51,425 - #8 g
INFO  04:38:51,425 - #24 =
INFO  04:38:51,426 - #9 2
INFO  04:38:51,426 - #27 ;
INFO  04:38:51,426 - #8 int
INFO  04:38:51,427 - #8 e
INFO  04:38:51,427 - #27 ;
INFO  04:38:51,428 - #20 {
INFO  04:38:51,429 - #6 void
INFO  04:38:51,429 - #8 main
INFO  04:38:51,429 - #29 (
INFO  04:38:51,430 - #30 )
INFO  04:38:51,430 - #20 {
INFO  04:38:51,430 - #8 e
INFO  04:38:51,430 - #24 =
INFO  04:38:51,430 - #9 10
INFO  04:38:51,430 - #27 ;
INFO  04:38:51,431 - #31 if
INFO  04:38:51,431 - #29 (
INFO  04:38:51,431 - #8 e
INFO  04:38:51,431 - #38 >
INFO  04:38:51,432 - #9 0
INFO  04:38:51,433 - #14 ||
INFO  04:38:51,434 - #8 e
INFO  04:38:51,434 - #42 <=
INFO  04:38:51,434 - #8 d
INFO  04:38:51,434 - #14 ||
INFO  04:38:51,435 - #8 e
INFO  04:38:51,435 - #41 >=
INFO  04:38:51,435 - #9 0
INFO  04:38:51,435 - #30 )
INFO  04:38:51,437 - #20 {
INFO  04:38:51,437 - #8 e
INFO  04:38:51,437 - #25 ++
INFO  04:38:51,437 - #27 ;
INFO  04:38:51,438 - #3 print
INFO  04:38:51,438 - #29 (
INFO  04:38:51,438 - #8 e
INFO  04:38:51,439 - #30 )
INFO  04:38:51,439 - #27 ;
INFO  04:38:51,439 - #21 }
INFO  04:38:51,439 - #21 }
INFO  04:38:51,440 - #21 }
INFO  04:38:51,441 - =====================SINTAKSNO_STABLO=========================
INFO  04:38:51,443 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:38:51,444 - ==============================================================
INFO  04:38:51,461 - Pocetak obrade programa Program na liniji 1
INFO  04:38:51,461 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:38:51,462 - Deklarisana konstanta c na liniji 2
INFO  04:38:51,462 - Deklarisana konstanta d na liniji 2
INFO  04:38:51,463 - Deklarisana konstanta g na liniji 2
INFO  04:38:51,463 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:38:51,463 - Deklarisana promenljiva e na liniji 3
INFO  04:38:51,464 - Pocetak obrade metode main na liniji 5
INFO  04:38:51,465 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:38:51,465 - Zavrsetak obrade programa Program na liniji 1
INFO  04:38:51,465 - ======================TABELA_SIMBOLA==========================
INFO  04:38:51,466 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:38:51,466 - ==============================================================
INFO  04:38:51,466 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:38:51,466 - ==============================================================
INFO  04:38:51,466 - ======================GENERISANJE_KODA========================
INFO  04:38:51,471 - 1
INFO  04:38:51,473 - 3
INFO  04:38:51,473 - 1
INFO  04:38:51,474 - 4
INFO  04:38:51,474 - 1
INFO  04:38:51,474 - 4
INFO  04:38:51,474 - Final!
INFO  04:38:51,475 - y
INFO  04:38:51,475 - y
INFO  04:38:51,476 - Generisanje koda uspesno zavrseno!
INFO  04:38:51,477 - Generisanje izlaznog fajla test\program.obj
INFO  04:38:51,477 - ==============================================================
INFO  04:39:26,607 - Obrada ulaznog fajla test\program.mj
INFO  04:39:26,730 - #2 program
INFO  04:39:26,731 - #8 Program
INFO  04:39:26,731 - #5 const
INFO  04:39:26,733 - #8 int
INFO  04:39:26,733 - #8 c
INFO  04:39:26,734 - #24 =
INFO  04:39:26,734 - #9 10
INFO  04:39:26,734 - #28 ,
INFO  04:39:26,736 - #8 d
INFO  04:39:26,736 - #24 =
INFO  04:39:26,736 - #9 99
INFO  04:39:26,736 - #28 ,
INFO  04:39:26,736 - #8 g
INFO  04:39:26,736 - #24 =
INFO  04:39:26,736 - #9 2
INFO  04:39:26,737 - #27 ;
INFO  04:39:26,737 - #8 int
INFO  04:39:26,738 - #8 e
INFO  04:39:26,739 - #27 ;
INFO  04:39:26,739 - #20 {
INFO  04:39:26,741 - #6 void
INFO  04:39:26,741 - #8 main
INFO  04:39:26,741 - #29 (
INFO  04:39:26,742 - #30 )
INFO  04:39:26,742 - #20 {
INFO  04:39:26,742 - #8 e
INFO  04:39:26,742 - #24 =
INFO  04:39:26,743 - #9 10
INFO  04:39:26,743 - #27 ;
INFO  04:39:26,743 - #31 if
INFO  04:39:26,744 - #29 (
INFO  04:39:26,744 - #8 e
INFO  04:39:26,744 - #38 >
INFO  04:39:26,744 - #9 0
INFO  04:39:26,746 - #14 ||
INFO  04:39:26,747 - #8 e
INFO  04:39:26,747 - #42 <=
INFO  04:39:26,747 - #8 d
INFO  04:39:26,748 - #14 ||
INFO  04:39:26,749 - #8 e
INFO  04:39:26,749 - #41 >=
INFO  04:39:26,749 - #9 0
INFO  04:39:26,750 - #30 )
INFO  04:39:26,752 - #20 {
INFO  04:39:26,752 - #8 e
INFO  04:39:26,752 - #25 ++
INFO  04:39:26,752 - #27 ;
INFO  04:39:26,752 - #3 print
INFO  04:39:26,752 - #29 (
INFO  04:39:26,752 - #8 e
INFO  04:39:26,752 - #30 )
INFO  04:39:26,752 - #27 ;
INFO  04:39:26,753 - #21 }
INFO  04:39:26,753 - #21 }
INFO  04:39:26,755 - #21 }
INFO  04:39:26,757 - =====================SINTAKSNO_STABLO=========================
INFO  04:39:26,759 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:39:26,759 - ==============================================================
INFO  04:39:26,774 - Pocetak obrade programa Program na liniji 1
INFO  04:39:26,774 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:39:26,775 - Deklarisana konstanta c na liniji 2
INFO  04:39:26,776 - Deklarisana konstanta d na liniji 2
INFO  04:39:26,776 - Deklarisana konstanta g na liniji 2
INFO  04:39:26,776 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:39:26,776 - Deklarisana promenljiva e na liniji 3
INFO  04:39:26,777 - Pocetak obrade metode main na liniji 5
INFO  04:39:26,777 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:39:26,777 - Zavrsetak obrade programa Program na liniji 1
INFO  04:39:26,777 - ======================TABELA_SIMBOLA==========================
INFO  04:39:26,778 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:39:26,778 - ==============================================================
INFO  04:39:26,778 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:39:26,778 - ==============================================================
INFO  04:39:26,778 - ======================GENERISANJE_KODA========================
INFO  04:39:26,800 - 1
INFO  04:39:26,802 - 3
INFO  04:39:26,802 - 1
INFO  04:39:26,807 - 4
INFO  04:39:26,807 - 1
INFO  04:39:26,807 - 4
INFO  04:39:26,807 - Final!
INFO  04:39:26,808 - y
INFO  04:39:26,808 - y
INFO  04:40:26,061 - Generisanje koda uspesno zavrseno!
INFO  04:40:27,918 - Generisanje izlaznog fajla test\program.obj
INFO  04:40:28,655 - ==============================================================
INFO  04:40:46,013 - Obrada ulaznog fajla test\program.mj
INFO  04:40:46,119 - #2 program
INFO  04:40:46,119 - #8 Program
INFO  04:40:46,119 - #5 const
INFO  04:40:46,120 - #8 int
INFO  04:40:46,120 - #8 c
INFO  04:40:46,121 - #24 =
INFO  04:40:46,121 - #9 10
INFO  04:40:46,121 - #28 ,
INFO  04:40:46,123 - #8 d
INFO  04:40:46,123 - #24 =
INFO  04:40:46,123 - #9 99
INFO  04:40:46,123 - #28 ,
INFO  04:40:46,123 - #8 g
INFO  04:40:46,123 - #24 =
INFO  04:40:46,124 - #9 2
INFO  04:40:46,124 - #27 ;
INFO  04:40:46,124 - #8 int
INFO  04:40:46,125 - #8 e
INFO  04:40:46,125 - #27 ;
INFO  04:40:46,126 - #20 {
INFO  04:40:46,127 - #6 void
INFO  04:40:46,127 - #8 main
INFO  04:40:46,127 - #29 (
INFO  04:40:46,130 - #30 )
INFO  04:40:46,130 - #20 {
INFO  04:40:46,130 - #8 e
INFO  04:40:46,130 - #24 =
INFO  04:40:46,131 - #9 10
INFO  04:40:46,131 - #27 ;
INFO  04:40:46,131 - #31 if
INFO  04:40:46,132 - #29 (
INFO  04:40:46,133 - #8 e
INFO  04:40:46,133 - #38 >
INFO  04:40:46,134 - #9 0
INFO  04:40:46,135 - #14 ||
INFO  04:40:46,136 - #8 e
INFO  04:40:46,136 - #42 <=
INFO  04:40:46,136 - #8 d
INFO  04:40:46,137 - #14 ||
INFO  04:40:46,137 - #8 e
INFO  04:40:46,137 - #41 >=
INFO  04:40:46,137 - #9 0
INFO  04:40:46,138 - #30 )
INFO  04:40:46,140 - #20 {
INFO  04:40:46,140 - #8 e
INFO  04:40:46,140 - #25 ++
INFO  04:40:46,140 - #27 ;
INFO  04:40:46,140 - #3 print
INFO  04:40:46,140 - #29 (
INFO  04:40:46,140 - #8 e
INFO  04:40:46,140 - #30 )
INFO  04:40:46,140 - #27 ;
INFO  04:40:46,141 - #21 }
INFO  04:40:46,141 - #21 }
INFO  04:40:46,143 - #21 }
INFO  04:40:46,144 - =====================SINTAKSNO_STABLO=========================
INFO  04:40:46,146 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:40:46,146 - ==============================================================
INFO  04:40:46,160 - Pocetak obrade programa Program na liniji 1
INFO  04:40:46,160 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:40:46,161 - Deklarisana konstanta c na liniji 2
INFO  04:40:46,161 - Deklarisana konstanta d na liniji 2
INFO  04:40:46,161 - Deklarisana konstanta g na liniji 2
INFO  04:40:46,162 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:40:46,162 - Deklarisana promenljiva e na liniji 3
INFO  04:40:46,163 - Pocetak obrade metode main na liniji 5
INFO  04:40:46,163 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:40:46,164 - Zavrsetak obrade programa Program na liniji 1
INFO  04:40:46,164 - ======================TABELA_SIMBOLA==========================
INFO  04:40:46,164 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:40:46,164 - ==============================================================
INFO  04:40:46,164 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:40:46,164 - ==============================================================
INFO  04:40:46,165 - ======================GENERISANJE_KODA========================
INFO  04:40:46,169 - 1
INFO  04:40:46,170 - 3
INFO  04:40:46,171 - 1
INFO  04:40:46,171 - 4
INFO  04:40:46,172 - 1
INFO  04:40:46,172 - 4
INFO  04:40:46,172 - Final!
INFO  04:40:46,173 - y
INFO  04:40:46,173 - y
INFO  04:40:46,175 - Generisanje koda uspesno zavrseno!
INFO  04:40:46,176 - Generisanje izlaznog fajla test\program.obj
INFO  04:40:46,176 - ==============================================================
INFO  04:40:47,454 - Obrada ulaznog fajla test\program.mj
INFO  04:40:47,528 - #2 program
INFO  04:40:47,528 - #8 Program
INFO  04:40:47,528 - #5 const
INFO  04:40:47,529 - #8 int
INFO  04:40:47,529 - #8 c
INFO  04:40:47,530 - #24 =
INFO  04:40:47,530 - #9 10
INFO  04:40:47,530 - #28 ,
INFO  04:40:47,532 - #8 d
INFO  04:40:47,532 - #24 =
INFO  04:40:47,532 - #9 99
INFO  04:40:47,532 - #28 ,
INFO  04:40:47,532 - #8 g
INFO  04:40:47,532 - #24 =
INFO  04:40:47,533 - #9 2
INFO  04:40:47,533 - #27 ;
INFO  04:40:47,533 - #8 int
INFO  04:40:47,534 - #8 e
INFO  04:40:47,534 - #27 ;
INFO  04:40:47,535 - #20 {
INFO  04:40:47,536 - #6 void
INFO  04:40:47,536 - #8 main
INFO  04:40:47,536 - #29 (
INFO  04:40:47,537 - #30 )
INFO  04:40:47,537 - #20 {
INFO  04:40:47,537 - #8 e
INFO  04:40:47,538 - #24 =
INFO  04:40:47,538 - #9 10
INFO  04:40:47,538 - #27 ;
INFO  04:40:47,538 - #31 if
INFO  04:40:47,539 - #29 (
INFO  04:40:47,539 - #8 e
INFO  04:40:47,539 - #38 >
INFO  04:40:47,539 - #9 0
INFO  04:40:47,541 - #14 ||
INFO  04:40:47,541 - #8 e
INFO  04:40:47,541 - #42 <=
INFO  04:40:47,541 - #8 d
INFO  04:40:47,542 - #14 ||
INFO  04:40:47,542 - #8 e
INFO  04:40:47,542 - #41 >=
INFO  04:40:47,542 - #9 0
INFO  04:40:47,543 - #30 )
INFO  04:40:47,544 - #20 {
INFO  04:40:47,544 - #8 e
INFO  04:40:47,544 - #25 ++
INFO  04:40:47,544 - #27 ;
INFO  04:40:47,544 - #3 print
INFO  04:40:47,544 - #29 (
INFO  04:40:47,544 - #8 e
INFO  04:40:47,544 - #30 )
INFO  04:40:47,545 - #27 ;
INFO  04:40:47,545 - #21 }
INFO  04:40:47,545 - #21 }
INFO  04:40:47,546 - #21 }
INFO  04:40:47,547 - =====================SINTAKSNO_STABLO=========================
INFO  04:40:47,550 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:40:47,551 - ==============================================================
INFO  04:40:47,565 - Pocetak obrade programa Program na liniji 1
INFO  04:40:47,566 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:40:47,566 - Deklarisana konstanta c na liniji 2
INFO  04:40:47,567 - Deklarisana konstanta d na liniji 2
INFO  04:40:47,567 - Deklarisana konstanta g na liniji 2
INFO  04:40:47,567 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:40:47,567 - Deklarisana promenljiva e na liniji 3
INFO  04:40:47,568 - Pocetak obrade metode main na liniji 5
INFO  04:40:47,569 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:40:47,569 - Zavrsetak obrade programa Program na liniji 1
INFO  04:40:47,569 - ======================TABELA_SIMBOLA==========================
INFO  04:40:47,569 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:40:47,569 - ==============================================================
INFO  04:40:47,570 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:40:47,570 - ==============================================================
INFO  04:40:47,570 - ======================GENERISANJE_KODA========================
INFO  04:40:47,574 - 1
INFO  04:40:47,576 - 3
INFO  04:40:47,576 - 1
INFO  04:40:47,576 - 4
INFO  04:40:47,577 - 1
INFO  04:40:47,577 - 4
INFO  04:40:47,577 - Final!
INFO  04:40:47,578 - y
INFO  04:40:47,578 - y
INFO  04:40:47,579 - Generisanje koda uspesno zavrseno!
INFO  04:40:47,580 - Generisanje izlaznog fajla test\program.obj
INFO  04:40:47,580 - ==============================================================
INFO  04:40:49,321 - Obrada ulaznog fajla test\program.mj
INFO  04:40:49,416 - #2 program
INFO  04:40:49,416 - #8 Program
INFO  04:40:49,416 - #5 const
INFO  04:40:49,417 - #8 int
INFO  04:40:49,418 - #8 c
INFO  04:40:49,418 - #24 =
INFO  04:40:49,418 - #9 10
INFO  04:40:49,419 - #28 ,
INFO  04:40:49,420 - #8 d
INFO  04:40:49,420 - #24 =
INFO  04:40:49,420 - #9 99
INFO  04:40:49,421 - #28 ,
INFO  04:40:49,421 - #8 g
INFO  04:40:49,421 - #24 =
INFO  04:40:49,421 - #9 2
INFO  04:40:49,421 - #27 ;
INFO  04:40:49,421 - #8 int
INFO  04:40:49,422 - #8 e
INFO  04:40:49,422 - #27 ;
INFO  04:40:49,423 - #20 {
INFO  04:40:49,424 - #6 void
INFO  04:40:49,424 - #8 main
INFO  04:40:49,424 - #29 (
INFO  04:40:49,425 - #30 )
INFO  04:40:49,425 - #20 {
INFO  04:40:49,425 - #8 e
INFO  04:40:49,425 - #24 =
INFO  04:40:49,426 - #9 10
INFO  04:40:49,426 - #27 ;
INFO  04:40:49,427 - #31 if
INFO  04:40:49,427 - #29 (
INFO  04:40:49,427 - #8 e
INFO  04:40:49,427 - #38 >
INFO  04:40:49,428 - #9 0
INFO  04:40:49,429 - #14 ||
INFO  04:40:49,430 - #8 e
INFO  04:40:49,430 - #42 <=
INFO  04:40:49,430 - #8 d
INFO  04:40:49,431 - #14 ||
INFO  04:40:49,431 - #8 e
INFO  04:40:49,431 - #41 >=
INFO  04:40:49,432 - #9 0
INFO  04:40:49,433 - #30 )
INFO  04:40:49,434 - #20 {
INFO  04:40:49,434 - #8 e
INFO  04:40:49,434 - #25 ++
INFO  04:40:49,434 - #27 ;
INFO  04:40:49,434 - #3 print
INFO  04:40:49,434 - #29 (
INFO  04:40:49,435 - #8 e
INFO  04:40:49,435 - #30 )
INFO  04:40:49,435 - #27 ;
INFO  04:40:49,435 - #21 }
INFO  04:40:49,435 - #21 }
INFO  04:40:49,437 - #21 }
INFO  04:40:49,437 - =====================SINTAKSNO_STABLO=========================
INFO  04:40:49,440 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:40:49,440 - ==============================================================
INFO  04:40:49,456 - Pocetak obrade programa Program na liniji 1
INFO  04:40:49,457 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:40:49,458 - Deklarisana konstanta c na liniji 2
INFO  04:40:49,458 - Deklarisana konstanta d na liniji 2
INFO  04:40:49,458 - Deklarisana konstanta g na liniji 2
INFO  04:40:49,458 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:40:49,459 - Deklarisana promenljiva e na liniji 3
INFO  04:40:49,459 - Pocetak obrade metode main na liniji 5
INFO  04:40:49,460 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:40:49,460 - Zavrsetak obrade programa Program na liniji 1
INFO  04:40:49,460 - ======================TABELA_SIMBOLA==========================
INFO  04:40:49,460 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:40:49,461 - ==============================================================
INFO  04:40:49,461 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:40:49,461 - ==============================================================
INFO  04:40:49,461 - ======================GENERISANJE_KODA========================
INFO  04:40:49,482 - 1
INFO  04:40:49,484 - 3
INFO  04:40:49,484 - 1
INFO  04:40:49,488 - 4
INFO  04:40:49,488 - 1
INFO  04:40:49,488 - 4
INFO  04:40:49,488 - Final!
INFO  04:40:49,489 - y
INFO  04:40:49,489 - y
INFO  04:41:14,472 - Obrada ulaznog fajla test\program.mj
INFO  04:41:14,579 - #2 program
INFO  04:41:14,579 - #8 Program
INFO  04:41:14,579 - #5 const
INFO  04:41:14,581 - #8 int
INFO  04:41:14,581 - #8 c
INFO  04:41:14,582 - #24 =
INFO  04:41:14,582 - #9 10
INFO  04:41:14,582 - #28 ,
INFO  04:41:14,584 - #8 d
INFO  04:41:14,584 - #24 =
INFO  04:41:14,584 - #9 99
INFO  04:41:14,584 - #28 ,
INFO  04:41:14,584 - #8 g
INFO  04:41:14,584 - #24 =
INFO  04:41:14,585 - #9 2
INFO  04:41:14,585 - #27 ;
INFO  04:41:14,585 - #8 int
INFO  04:41:14,586 - #8 e
INFO  04:41:14,586 - #27 ;
INFO  04:41:14,587 - #20 {
INFO  04:41:14,588 - #6 void
INFO  04:41:14,589 - #8 main
INFO  04:41:14,589 - #29 (
INFO  04:41:14,591 - #30 )
INFO  04:41:14,591 - #20 {
INFO  04:41:14,591 - #8 e
INFO  04:41:14,592 - #24 =
INFO  04:41:14,592 - #9 10
INFO  04:41:14,592 - #27 ;
INFO  04:41:14,593 - #31 if
INFO  04:41:14,593 - #29 (
INFO  04:41:14,594 - #8 e
INFO  04:41:14,594 - #38 >
INFO  04:41:14,594 - #9 0
INFO  04:41:14,596 - #14 ||
INFO  04:41:14,596 - #8 e
INFO  04:41:14,597 - #42 <=
INFO  04:41:14,597 - #8 d
INFO  04:41:14,598 - #14 ||
INFO  04:41:14,598 - #8 e
INFO  04:41:14,598 - #41 >=
INFO  04:41:14,598 - #9 0
INFO  04:41:14,599 - #30 )
INFO  04:41:14,601 - #20 {
INFO  04:41:14,601 - #8 e
INFO  04:41:14,601 - #25 ++
INFO  04:41:14,601 - #27 ;
INFO  04:41:14,601 - #3 print
INFO  04:41:14,601 - #29 (
INFO  04:41:14,601 - #8 e
INFO  04:41:14,602 - #30 )
INFO  04:41:14,602 - #27 ;
INFO  04:41:14,602 - #21 }
INFO  04:41:14,602 - #21 }
INFO  04:41:14,604 - #21 }
INFO  04:41:14,605 - =====================SINTAKSNO_STABLO=========================
INFO  04:41:14,606 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:41:14,607 - ==============================================================
INFO  04:41:14,624 - Pocetak obrade programa Program na liniji 1
INFO  04:41:14,625 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:41:14,627 - Deklarisana konstanta c na liniji 2
INFO  04:41:14,627 - Deklarisana konstanta d na liniji 2
INFO  04:41:14,627 - Deklarisana konstanta g na liniji 2
INFO  04:41:14,627 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:41:14,627 - Deklarisana promenljiva e na liniji 3
INFO  04:41:14,629 - Pocetak obrade metode main na liniji 5
INFO  04:41:14,629 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:41:14,629 - Zavrsetak obrade programa Program na liniji 1
INFO  04:41:14,629 - ======================TABELA_SIMBOLA==========================
INFO  04:41:14,630 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:41:14,630 - ==============================================================
INFO  04:41:14,631 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:41:14,631 - ==============================================================
INFO  04:41:14,631 - ======================GENERISANJE_KODA========================
INFO  04:41:14,661 - 1
INFO  04:41:14,663 - 3
INFO  04:41:14,663 - 1
INFO  04:41:14,666 - 4
INFO  04:41:14,666 - 1
INFO  04:41:14,667 - 4
INFO  04:41:14,667 - Final!
INFO  04:41:14,668 - y
INFO  04:41:14,668 - y
INFO  04:41:27,542 - Obrada ulaznog fajla test\program.mj
INFO  04:41:27,639 - #2 program
INFO  04:41:27,639 - #8 Program
INFO  04:41:27,639 - #5 const
INFO  04:41:27,640 - #8 int
INFO  04:41:27,640 - #8 c
INFO  04:41:27,641 - #24 =
INFO  04:41:27,641 - #9 10
INFO  04:41:27,641 - #28 ,
INFO  04:41:27,642 - #8 d
INFO  04:41:27,642 - #24 =
INFO  04:41:27,643 - #9 99
INFO  04:41:27,643 - #28 ,
INFO  04:41:27,643 - #8 g
INFO  04:41:27,643 - #24 =
INFO  04:41:27,643 - #9 2
INFO  04:41:27,643 - #27 ;
INFO  04:41:27,643 - #8 int
INFO  04:41:27,645 - #8 e
INFO  04:41:27,645 - #27 ;
INFO  04:41:27,645 - #20 {
INFO  04:41:27,646 - #6 void
INFO  04:41:27,648 - #8 main
INFO  04:41:27,648 - #29 (
INFO  04:41:27,649 - #30 )
INFO  04:41:27,649 - #20 {
INFO  04:41:27,649 - #8 e
INFO  04:41:27,649 - #24 =
INFO  04:41:27,650 - #9 10
INFO  04:41:27,650 - #27 ;
INFO  04:41:27,651 - #31 if
INFO  04:41:27,651 - #29 (
INFO  04:41:27,651 - #8 e
INFO  04:41:27,651 - #38 >
INFO  04:41:27,652 - #9 0
INFO  04:41:27,653 - #14 ||
INFO  04:41:27,654 - #8 e
INFO  04:41:27,654 - #42 <=
INFO  04:41:27,654 - #8 d
INFO  04:41:27,656 - #14 ||
INFO  04:41:27,657 - #8 e
INFO  04:41:27,657 - #41 >=
INFO  04:41:27,657 - #9 0
INFO  04:41:27,658 - #30 )
INFO  04:41:27,660 - #20 {
INFO  04:41:27,660 - #8 e
INFO  04:41:27,660 - #25 ++
INFO  04:41:27,661 - #27 ;
INFO  04:41:27,661 - #3 print
INFO  04:41:27,661 - #29 (
INFO  04:41:27,661 - #8 e
INFO  04:41:27,661 - #30 )
INFO  04:41:27,662 - #27 ;
INFO  04:41:27,662 - #21 }
INFO  04:41:27,662 - #21 }
INFO  04:41:27,664 - #21 }
INFO  04:41:27,665 - =====================SINTAKSNO_STABLO=========================
INFO  04:41:27,669 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:41:27,670 - ==============================================================
INFO  04:41:27,688 - Pocetak obrade programa Program na liniji 1
INFO  04:41:27,689 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:41:27,690 - Deklarisana konstanta c na liniji 2
INFO  04:41:27,690 - Deklarisana konstanta d na liniji 2
INFO  04:41:27,690 - Deklarisana konstanta g na liniji 2
INFO  04:41:27,690 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:41:27,690 - Deklarisana promenljiva e na liniji 3
INFO  04:41:27,692 - Pocetak obrade metode main na liniji 5
INFO  04:41:27,692 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:41:27,692 - Zavrsetak obrade programa Program na liniji 1
INFO  04:41:27,692 - ======================TABELA_SIMBOLA==========================
INFO  04:41:27,693 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:41:27,693 - ==============================================================
INFO  04:41:27,693 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:41:27,693 - ==============================================================
INFO  04:41:27,693 - ======================GENERISANJE_KODA========================
INFO  04:41:27,698 - 1
INFO  04:41:27,700 - 3
INFO  04:41:27,700 - 1
INFO  04:41:27,701 - 4
INFO  04:41:27,701 - 1
INFO  04:41:27,701 - 4
INFO  04:41:27,701 - Final!
INFO  04:41:27,702 - y
INFO  04:41:27,702 - y
INFO  04:41:27,704 - Generisanje koda uspesno zavrseno!
INFO  04:41:27,704 - Generisanje izlaznog fajla test\program.obj
INFO  04:41:27,705 - ==============================================================
INFO  04:41:29,817 - Obrada ulaznog fajla test\program.mj
INFO  04:41:29,941 - #2 program
INFO  04:41:29,941 - #8 Program
INFO  04:41:29,941 - #5 const
INFO  04:41:29,942 - #8 int
INFO  04:41:29,942 - #8 c
INFO  04:41:29,943 - #24 =
INFO  04:41:29,944 - #9 10
INFO  04:41:29,944 - #28 ,
INFO  04:41:29,945 - #8 d
INFO  04:41:29,945 - #24 =
INFO  04:41:29,945 - #9 99
INFO  04:41:29,945 - #28 ,
INFO  04:41:29,946 - #8 g
INFO  04:41:29,946 - #24 =
INFO  04:41:29,946 - #9 2
INFO  04:41:29,946 - #27 ;
INFO  04:41:29,946 - #8 int
INFO  04:41:29,948 - #8 e
INFO  04:41:29,948 - #27 ;
INFO  04:41:29,949 - #20 {
INFO  04:41:29,950 - #6 void
INFO  04:41:29,951 - #8 main
INFO  04:41:29,951 - #29 (
INFO  04:41:29,952 - #30 )
INFO  04:41:29,952 - #20 {
INFO  04:41:29,952 - #8 e
INFO  04:41:29,953 - #24 =
INFO  04:41:29,953 - #9 10
INFO  04:41:29,953 - #27 ;
INFO  04:41:29,954 - #31 if
INFO  04:41:29,954 - #29 (
INFO  04:41:29,954 - #8 e
INFO  04:41:29,954 - #38 >
INFO  04:41:29,955 - #9 0
INFO  04:41:29,956 - #14 ||
INFO  04:41:29,957 - #8 e
INFO  04:41:29,957 - #42 <=
INFO  04:41:29,958 - #8 d
INFO  04:41:29,958 - #14 ||
INFO  04:41:29,959 - #8 e
INFO  04:41:29,959 - #41 >=
INFO  04:41:29,959 - #9 0
INFO  04:41:29,960 - #30 )
INFO  04:41:29,961 - #20 {
INFO  04:41:29,961 - #8 e
INFO  04:41:29,961 - #25 ++
INFO  04:41:29,961 - #27 ;
INFO  04:41:29,962 - #3 print
INFO  04:41:29,962 - #29 (
INFO  04:41:29,962 - #8 e
INFO  04:41:29,962 - #30 )
INFO  04:41:29,962 - #27 ;
INFO  04:41:29,962 - #21 }
INFO  04:41:29,963 - #21 }
INFO  04:41:29,965 - #21 }
INFO  04:41:29,967 - =====================SINTAKSNO_STABLO=========================
INFO  04:41:29,970 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:41:29,970 - ==============================================================
INFO  04:41:29,986 - Pocetak obrade programa Program na liniji 1
INFO  04:41:29,986 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:41:29,987 - Deklarisana konstanta c na liniji 2
INFO  04:41:29,987 - Deklarisana konstanta d na liniji 2
INFO  04:41:29,987 - Deklarisana konstanta g na liniji 2
INFO  04:41:29,987 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:41:29,987 - Deklarisana promenljiva e na liniji 3
INFO  04:41:29,988 - Pocetak obrade metode main na liniji 5
INFO  04:41:29,989 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:41:29,989 - Zavrsetak obrade programa Program na liniji 1
INFO  04:41:29,989 - ======================TABELA_SIMBOLA==========================
INFO  04:41:29,990 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:41:29,990 - ==============================================================
INFO  04:41:29,990 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:41:29,990 - ==============================================================
INFO  04:41:29,990 - ======================GENERISANJE_KODA========================
INFO  04:41:30,017 - 1
INFO  04:41:30,019 - 3
INFO  04:41:30,019 - 1
INFO  04:41:30,026 - 4
INFO  04:41:30,026 - 1
INFO  04:41:30,026 - 4
INFO  04:41:30,026 - Final!
INFO  04:41:30,028 - y
INFO  04:41:30,028 - y
INFO  04:42:14,547 - Obrada ulaznog fajla test\program.mj
INFO  04:42:14,636 - #2 program
INFO  04:42:14,636 - #8 Program
INFO  04:42:14,636 - #5 const
INFO  04:42:14,638 - #8 int
INFO  04:42:14,638 - #8 c
INFO  04:42:14,640 - #24 =
INFO  04:42:14,640 - #9 10
INFO  04:42:14,640 - #28 ,
INFO  04:42:14,643 - #8 d
INFO  04:42:14,643 - #24 =
INFO  04:42:14,643 - #9 99
INFO  04:42:14,643 - #28 ,
INFO  04:42:14,644 - #8 g
INFO  04:42:14,644 - #24 =
INFO  04:42:14,644 - #9 2
INFO  04:42:14,644 - #27 ;
INFO  04:42:14,644 - #8 int
INFO  04:42:14,645 - #8 e
INFO  04:42:14,645 - #27 ;
INFO  04:42:14,646 - #20 {
INFO  04:42:14,648 - #6 void
INFO  04:42:14,648 - #8 main
INFO  04:42:14,649 - #29 (
INFO  04:42:14,649 - #30 )
INFO  04:42:14,650 - #20 {
INFO  04:42:14,650 - #8 e
INFO  04:42:14,650 - #24 =
INFO  04:42:14,650 - #9 10
INFO  04:42:14,650 - #27 ;
INFO  04:42:14,651 - #31 if
INFO  04:42:14,651 - #29 (
INFO  04:42:14,651 - #8 e
INFO  04:42:14,651 - #38 >
INFO  04:42:14,651 - #9 0
INFO  04:42:14,653 - #14 ||
INFO  04:42:14,653 - #8 e
INFO  04:42:14,653 - #42 <=
INFO  04:42:14,654 - #8 d
INFO  04:42:14,654 - #14 ||
INFO  04:42:14,655 - #8 e
INFO  04:42:14,655 - #41 >=
INFO  04:42:14,655 - #9 0
INFO  04:42:14,656 - #30 )
INFO  04:42:14,657 - #20 {
INFO  04:42:14,657 - #8 e
INFO  04:42:14,657 - #25 ++
INFO  04:42:14,658 - #27 ;
INFO  04:42:14,658 - #3 print
INFO  04:42:14,658 - #29 (
INFO  04:42:14,658 - #8 e
INFO  04:42:14,658 - #30 )
INFO  04:42:14,658 - #27 ;
INFO  04:42:14,658 - #21 }
INFO  04:42:14,659 - #21 }
INFO  04:42:14,660 - #21 }
INFO  04:42:14,661 - =====================SINTAKSNO_STABLO=========================
INFO  04:42:14,663 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_ge(
                      ) [Rel_op_ge]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:42:14,664 - ==============================================================
INFO  04:42:14,679 - Pocetak obrade programa Program na liniji 1
INFO  04:42:14,679 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:42:14,680 - Deklarisana konstanta c na liniji 2
INFO  04:42:14,681 - Deklarisana konstanta d na liniji 2
INFO  04:42:14,681 - Deklarisana konstanta g na liniji 2
INFO  04:42:14,681 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:42:14,681 - Deklarisana promenljiva e na liniji 3
INFO  04:42:14,682 - Pocetak obrade metode main na liniji 5
INFO  04:42:14,683 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:42:14,683 - Zavrsetak obrade programa Program na liniji 1
INFO  04:42:14,683 - ======================TABELA_SIMBOLA==========================
INFO  04:42:14,684 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:42:14,684 - ==============================================================
INFO  04:42:14,684 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:42:14,684 - ==============================================================
INFO  04:42:14,684 - ======================GENERISANJE_KODA========================
INFO  04:42:14,689 - 1
INFO  04:42:14,689 - 3
INFO  04:42:14,689 - 1
INFO  04:42:14,692 - 4
INFO  04:42:14,692 - 1
INFO  04:42:14,692 - 4
INFO  04:42:14,692 - Final!
INFO  04:42:14,693 - y
INFO  04:42:14,693 - y
INFO  04:42:14,695 - Generisanje koda uspesno zavrseno!
INFO  04:42:14,695 - Generisanje izlaznog fajla test\program.obj
INFO  04:42:14,695 - ==============================================================
INFO  04:44:33,510 - Obrada ulaznog fajla test\program.mj
INFO  04:44:33,589 - #2 program
INFO  04:44:33,590 - #8 Program
INFO  04:44:33,590 - #5 const
INFO  04:44:33,591 - #8 int
INFO  04:44:33,591 - #8 c
INFO  04:44:33,593 - #24 =
INFO  04:44:33,593 - #9 10
INFO  04:44:33,593 - #28 ,
INFO  04:44:33,595 - #8 d
INFO  04:44:33,597 - #24 =
INFO  04:44:33,597 - #9 99
INFO  04:44:33,597 - #28 ,
INFO  04:44:33,597 - #8 g
INFO  04:44:33,598 - #24 =
INFO  04:44:33,598 - #9 2
INFO  04:44:33,598 - #27 ;
INFO  04:44:33,598 - #8 int
INFO  04:44:33,599 - #8 e
INFO  04:44:33,600 - #27 ;
INFO  04:44:33,600 - #20 {
INFO  04:44:33,601 - #6 void
INFO  04:44:33,602 - #8 main
INFO  04:44:33,602 - #29 (
INFO  04:44:33,603 - #30 )
INFO  04:44:33,603 - #20 {
INFO  04:44:33,603 - #8 e
INFO  04:44:33,603 - #24 =
INFO  04:44:33,603 - #9 10
INFO  04:44:33,603 - #27 ;
INFO  04:44:33,604 - #31 if
INFO  04:44:33,604 - #29 (
INFO  04:44:33,604 - #8 e
INFO  04:44:33,604 - #38 >
INFO  04:44:33,604 - #9 0
INFO  04:44:33,605 - #14 ||
INFO  04:44:33,606 - #8 e
INFO  04:44:33,606 - #42 <=
INFO  04:44:33,606 - #8 d
INFO  04:44:33,607 - #30 )
INFO  04:44:33,608 - #20 {
INFO  04:44:33,608 - #8 e
INFO  04:44:33,608 - #25 ++
INFO  04:44:33,609 - #27 ;
INFO  04:44:33,609 - #3 print
INFO  04:44:33,609 - #29 (
INFO  04:44:33,609 - #8 e
INFO  04:44:33,609 - #30 )
INFO  04:44:33,609 - #27 ;
INFO  04:44:33,609 - #21 }
INFO  04:44:33,610 - #21 }
INFO  04:44:33,611 - #21 }
INFO  04:44:33,612 - =====================SINTAKSNO_STABLO=========================
INFO  04:44:33,616 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:44:33,616 - ==============================================================
INFO  04:44:33,630 - Pocetak obrade programa Program na liniji 1
INFO  04:44:33,630 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:44:33,631 - Deklarisana konstanta c na liniji 2
INFO  04:44:33,631 - Deklarisana konstanta d na liniji 2
INFO  04:44:33,632 - Deklarisana konstanta g na liniji 2
INFO  04:44:33,632 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:44:33,632 - Deklarisana promenljiva e na liniji 3
INFO  04:44:33,632 - Pocetak obrade metode main na liniji 5
INFO  04:44:33,633 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:44:33,633 - Zavrsetak obrade programa Program na liniji 1
INFO  04:44:33,633 - ======================TABELA_SIMBOLA==========================
INFO  04:44:33,634 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:44:33,634 - ==============================================================
INFO  04:44:33,634 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:44:33,634 - ==============================================================
INFO  04:44:33,634 - ======================GENERISANJE_KODA========================
INFO  04:44:33,637 - 1
INFO  04:44:33,637 - 3
INFO  04:44:33,638 - 1
INFO  04:44:33,638 - 4
INFO  04:44:33,638 - Final!
INFO  04:44:33,641 - y
INFO  04:44:33,642 - Generisanje koda uspesno zavrseno!
INFO  04:44:33,643 - Generisanje izlaznog fajla test\program.obj
INFO  04:44:33,643 - ==============================================================
INFO  04:45:27,678 - Obrada ulaznog fajla test\program.mj
INFO  04:45:27,756 - #2 program
INFO  04:45:27,756 - #8 Program
INFO  04:45:27,756 - #5 const
INFO  04:45:27,758 - #8 int
INFO  04:45:27,758 - #8 c
INFO  04:45:27,759 - #24 =
INFO  04:45:27,759 - #9 10
INFO  04:45:27,759 - #28 ,
INFO  04:45:27,761 - #8 d
INFO  04:45:27,761 - #24 =
INFO  04:45:27,761 - #9 99
INFO  04:45:27,761 - #28 ,
INFO  04:45:27,761 - #8 g
INFO  04:45:27,762 - #24 =
INFO  04:45:27,762 - #9 2
INFO  04:45:27,762 - #27 ;
INFO  04:45:27,762 - #8 int
INFO  04:45:27,764 - #8 e
INFO  04:45:27,764 - #27 ;
INFO  04:45:27,764 - #20 {
INFO  04:45:27,766 - #6 void
INFO  04:45:27,766 - #8 main
INFO  04:45:27,766 - #29 (
INFO  04:45:27,767 - #30 )
INFO  04:45:27,767 - #20 {
INFO  04:45:27,767 - #8 e
INFO  04:45:27,767 - #24 =
INFO  04:45:27,767 - #9 10
INFO  04:45:27,767 - #27 ;
INFO  04:45:27,768 - #31 if
INFO  04:45:27,769 - #29 (
INFO  04:45:27,769 - #8 e
INFO  04:45:27,769 - #38 >
INFO  04:45:27,769 - #9 0
INFO  04:45:27,770 - #14 ||
INFO  04:45:27,770 - #8 e
INFO  04:45:27,771 - #42 <=
INFO  04:45:27,771 - #8 d
INFO  04:45:27,771 - #30 )
INFO  04:45:27,772 - #20 {
INFO  04:45:27,772 - #8 e
INFO  04:45:27,772 - #25 ++
INFO  04:45:27,772 - #27 ;
INFO  04:45:27,772 - #3 print
INFO  04:45:27,772 - #29 (
INFO  04:45:27,773 - #8 e
INFO  04:45:27,773 - #30 )
INFO  04:45:27,773 - #27 ;
INFO  04:45:27,773 - #21 }
INFO  04:45:27,773 - #21 }
INFO  04:45:27,775 - #21 }
INFO  04:45:27,776 - =====================SINTAKSNO_STABLO=========================
INFO  04:45:27,777 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:45:27,778 - ==============================================================
INFO  04:45:27,791 - Pocetak obrade programa Program na liniji 1
INFO  04:45:27,791 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:45:27,792 - Deklarisana konstanta c na liniji 2
INFO  04:45:27,792 - Deklarisana konstanta d na liniji 2
INFO  04:45:27,792 - Deklarisana konstanta g na liniji 2
INFO  04:45:27,792 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:45:27,793 - Deklarisana promenljiva e na liniji 3
INFO  04:45:27,793 - Pocetak obrade metode main na liniji 5
INFO  04:45:27,794 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:45:27,794 - Zavrsetak obrade programa Program na liniji 1
INFO  04:45:27,794 - ======================TABELA_SIMBOLA==========================
INFO  04:45:27,794 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:45:27,794 - ==============================================================
INFO  04:45:27,794 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:45:27,794 - ==============================================================
INFO  04:45:27,795 - ======================GENERISANJE_KODA========================
INFO  04:45:27,798 - 1
INFO  04:45:27,798 - 3
INFO  04:45:27,798 - 1
INFO  04:45:27,799 - 4
INFO  04:45:27,799 - Final!
INFO  04:45:27,800 - y
INFO  04:45:27,802 - Generisanje koda uspesno zavrseno!
INFO  04:45:27,802 - Generisanje izlaznog fajla test\program.obj
INFO  04:45:27,802 - ==============================================================
INFO  04:47:58,885 - Obrada ulaznog fajla test\program.mj
INFO  04:47:59,007 - #2 program
INFO  04:47:59,007 - #8 Program
INFO  04:47:59,007 - #5 const
INFO  04:47:59,009 - #8 int
INFO  04:47:59,009 - #8 c
INFO  04:47:59,010 - #24 =
INFO  04:47:59,010 - #9 10
INFO  04:47:59,010 - #28 ,
INFO  04:47:59,012 - #8 d
INFO  04:47:59,012 - #24 =
INFO  04:47:59,012 - #9 99
INFO  04:47:59,012 - #28 ,
INFO  04:47:59,013 - #8 g
INFO  04:47:59,013 - #24 =
INFO  04:47:59,013 - #9 2
INFO  04:47:59,013 - #27 ;
INFO  04:47:59,013 - #8 int
INFO  04:47:59,015 - #8 e
INFO  04:47:59,015 - #27 ;
INFO  04:47:59,016 - #20 {
INFO  04:47:59,017 - #6 void
INFO  04:47:59,018 - #8 main
INFO  04:47:59,018 - #29 (
INFO  04:47:59,019 - #30 )
INFO  04:47:59,019 - #20 {
INFO  04:47:59,019 - #8 e
INFO  04:47:59,019 - #24 =
INFO  04:47:59,019 - #9 10
INFO  04:47:59,019 - #27 ;
INFO  04:47:59,020 - #31 if
INFO  04:47:59,021 - #29 (
INFO  04:47:59,021 - #8 e
INFO  04:47:59,021 - #38 >
INFO  04:47:59,021 - #9 0
INFO  04:47:59,023 - #14 ||
INFO  04:47:59,024 - #8 e
INFO  04:47:59,024 - #42 <=
INFO  04:47:59,024 - #8 d
INFO  04:47:59,024 - #30 )
INFO  04:47:59,026 - #20 {
INFO  04:47:59,026 - #8 e
INFO  04:47:59,026 - #25 ++
INFO  04:47:59,026 - #27 ;
INFO  04:47:59,027 - #3 print
INFO  04:47:59,027 - #29 (
INFO  04:47:59,027 - #8 e
INFO  04:47:59,027 - #30 )
INFO  04:47:59,027 - #27 ;
INFO  04:47:59,027 - #21 }
INFO  04:47:59,028 - #21 }
INFO  04:47:59,029 - #21 }
INFO  04:47:59,031 - =====================SINTAKSNO_STABLO=========================
INFO  04:47:59,034 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:47:59,035 - ==============================================================
INFO  04:47:59,055 - Pocetak obrade programa Program na liniji 1
INFO  04:47:59,055 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:47:59,057 - Deklarisana konstanta c na liniji 2
INFO  04:47:59,057 - Deklarisana konstanta d na liniji 2
INFO  04:47:59,057 - Deklarisana konstanta g na liniji 2
INFO  04:47:59,057 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:47:59,057 - Deklarisana promenljiva e na liniji 3
INFO  04:47:59,058 - Pocetak obrade metode main na liniji 5
INFO  04:47:59,059 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:47:59,059 - Zavrsetak obrade programa Program na liniji 1
INFO  04:47:59,059 - ======================TABELA_SIMBOLA==========================
INFO  04:47:59,060 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:47:59,060 - ==============================================================
INFO  04:47:59,060 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:47:59,060 - ==============================================================
INFO  04:47:59,060 - ======================GENERISANJE_KODA========================
INFO  04:47:59,083 - 1
INFO  04:47:59,084 - 3
INFO  04:47:59,084 - 1
INFO  04:47:59,086 - 4
INFO  04:47:59,087 - Final!
INFO  04:47:59,089 - y
INFO  04:50:12,229 - Obrada ulaznog fajla test\program.mj
INFO  04:50:12,307 - #2 program
INFO  04:50:12,307 - #8 Program
INFO  04:50:12,307 - #5 const
INFO  04:50:12,308 - #8 int
INFO  04:50:12,308 - #8 c
INFO  04:50:12,309 - #24 =
INFO  04:50:12,309 - #9 10
INFO  04:50:12,309 - #28 ,
INFO  04:50:12,310 - #8 d
INFO  04:50:12,310 - #24 =
INFO  04:50:12,310 - #9 99
INFO  04:50:12,310 - #28 ,
INFO  04:50:12,311 - #8 g
INFO  04:50:12,311 - #24 =
INFO  04:50:12,311 - #9 2
INFO  04:50:12,311 - #27 ;
INFO  04:50:12,311 - #8 int
INFO  04:50:12,313 - #8 e
INFO  04:50:12,313 - #27 ;
INFO  04:50:12,313 - #20 {
INFO  04:50:12,314 - #6 void
INFO  04:50:12,314 - #8 main
INFO  04:50:12,314 - #29 (
INFO  04:50:12,315 - #30 )
INFO  04:50:12,315 - #20 {
INFO  04:50:12,315 - #8 e
INFO  04:50:12,315 - #24 =
INFO  04:50:12,316 - #9 10
INFO  04:50:12,316 - #27 ;
INFO  04:50:12,316 - #31 if
INFO  04:50:12,317 - #29 (
INFO  04:50:12,317 - #8 e
INFO  04:50:12,317 - #38 >
INFO  04:50:12,317 - #9 0
INFO  04:50:12,319 - #14 ||
INFO  04:50:12,319 - #8 e
INFO  04:50:12,319 - #42 <=
INFO  04:50:12,320 - #8 d
INFO  04:50:12,320 - #30 )
INFO  04:50:12,321 - #20 {
INFO  04:50:12,321 - #8 e
INFO  04:50:12,321 - #25 ++
INFO  04:50:12,321 - #27 ;
INFO  04:50:12,321 - #3 print
INFO  04:50:12,321 - #29 (
INFO  04:50:12,321 - #8 e
INFO  04:50:12,322 - #30 )
INFO  04:50:12,322 - #27 ;
INFO  04:50:12,322 - #21 }
INFO  04:50:12,322 - #21 }
INFO  04:50:12,323 - #21 }
INFO  04:50:12,324 - =====================SINTAKSNO_STABLO=========================
INFO  04:50:12,325 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:50:12,326 - ==============================================================
INFO  04:50:12,341 - Pocetak obrade programa Program na liniji 1
INFO  04:50:12,342 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:50:12,343 - Deklarisana konstanta c na liniji 2
INFO  04:50:12,343 - Deklarisana konstanta d na liniji 2
INFO  04:50:12,343 - Deklarisana konstanta g na liniji 2
INFO  04:50:12,343 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:50:12,343 - Deklarisana promenljiva e na liniji 3
INFO  04:50:12,344 - Pocetak obrade metode main na liniji 5
INFO  04:50:12,344 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:50:12,345 - Zavrsetak obrade programa Program na liniji 1
INFO  04:50:12,345 - ======================TABELA_SIMBOLA==========================
INFO  04:50:12,346 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:50:12,346 - ==============================================================
INFO  04:50:12,346 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:50:12,346 - ==============================================================
INFO  04:50:12,346 - ======================GENERISANJE_KODA========================
INFO  04:50:12,350 - 1
INFO  04:50:12,350 - 3
INFO  04:50:12,350 - 1
INFO  04:50:12,351 - 4
INFO  04:50:12,351 - Final!
INFO  04:50:12,354 - y
INFO  04:50:12,357 - Generisanje koda uspesno zavrseno!
INFO  04:50:12,357 - Generisanje izlaznog fajla test\program.obj
INFO  04:50:12,357 - ==============================================================
INFO  04:50:44,838 - Obrada ulaznog fajla test\program.mj
INFO  04:50:44,921 - #2 program
INFO  04:50:44,922 - #8 Program
INFO  04:50:44,922 - #5 const
INFO  04:50:44,923 - #8 int
INFO  04:50:44,923 - #8 c
INFO  04:50:44,924 - #24 =
INFO  04:50:44,924 - #9 10
INFO  04:50:44,925 - #28 ,
INFO  04:50:44,926 - #8 d
INFO  04:50:44,926 - #24 =
INFO  04:50:44,926 - #9 99
INFO  04:50:44,927 - #28 ,
INFO  04:50:44,927 - #8 g
INFO  04:50:44,927 - #24 =
INFO  04:50:44,927 - #9 2
INFO  04:50:44,927 - #27 ;
INFO  04:50:44,927 - #8 int
INFO  04:50:44,928 - #8 e
INFO  04:50:44,929 - #27 ;
INFO  04:50:44,929 - #20 {
INFO  04:50:44,930 - #6 void
INFO  04:50:44,930 - #8 main
INFO  04:50:44,930 - #29 (
INFO  04:50:44,931 - #30 )
INFO  04:50:44,931 - #20 {
INFO  04:50:44,931 - #8 e
INFO  04:50:44,932 - #24 =
INFO  04:50:44,932 - #9 10
INFO  04:50:44,932 - #27 ;
INFO  04:50:44,933 - #31 if
INFO  04:50:44,933 - #29 (
INFO  04:50:44,933 - #8 e
INFO  04:50:44,933 - #38 >
INFO  04:50:44,933 - #9 0
INFO  04:50:44,934 - #14 ||
INFO  04:50:44,935 - #8 e
INFO  04:50:44,935 - #42 <=
INFO  04:50:44,935 - #8 d
INFO  04:50:44,936 - #14 ||
INFO  04:50:44,936 - #8 e
INFO  04:50:44,936 - #39 ==
INFO  04:50:44,936 - #9 5
INFO  04:50:44,937 - #30 )
INFO  04:50:44,938 - #20 {
INFO  04:50:44,938 - #8 e
INFO  04:50:44,938 - #25 ++
INFO  04:50:44,938 - #27 ;
INFO  04:50:44,938 - #3 print
INFO  04:50:44,938 - #29 (
INFO  04:50:44,939 - #8 e
INFO  04:50:44,939 - #30 )
INFO  04:50:44,939 - #27 ;
INFO  04:50:44,939 - #21 }
INFO  04:50:44,939 - #21 }
INFO  04:50:44,941 - #21 }
INFO  04:50:44,942 - =====================SINTAKSNO_STABLO=========================
INFO  04:50:44,944 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           5
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  04:50:44,952 - ==============================================================
INFO  04:50:44,963 - Pocetak obrade programa Program na liniji 1
INFO  04:50:44,963 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  04:50:44,964 - Deklarisana konstanta c na liniji 2
INFO  04:50:44,964 - Deklarisana konstanta d na liniji 2
INFO  04:50:44,964 - Deklarisana konstanta g na liniji 2
INFO  04:50:44,965 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  04:50:44,965 - Deklarisana promenljiva e na liniji 3
INFO  04:50:44,966 - Pocetak obrade metode main na liniji 5
INFO  04:50:44,966 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  04:50:44,966 - Zavrsetak obrade programa Program na liniji 1
INFO  04:50:44,966 - ======================TABELA_SIMBOLA==========================
INFO  04:50:44,967 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  04:50:44,967 - ==============================================================
INFO  04:50:44,967 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  04:50:44,967 - ==============================================================
INFO  04:50:44,967 - ======================GENERISANJE_KODA========================
INFO  04:50:44,971 - 1
INFO  04:50:44,973 - 3
INFO  04:50:44,973 - 1
INFO  04:50:44,973 - 4
INFO  04:50:44,973 - 1
INFO  04:50:44,973 - 4
INFO  04:50:44,974 - Final!
INFO  04:50:44,975 - y
INFO  04:50:44,975 - y
INFO  04:50:44,976 - Generisanje koda uspesno zavrseno!
INFO  04:50:44,976 - Generisanje izlaznog fajla test\program.obj
INFO  04:50:44,976 - ==============================================================
INFO  06:09:11,860 - Obrada ulaznog fajla test\program.mj
INFO  06:09:11,968 - #2 program
INFO  06:09:11,968 - #8 Program
INFO  06:09:11,968 - #5 const
INFO  06:09:11,969 - #8 int
INFO  06:09:11,969 - #8 c
INFO  06:09:11,971 - #24 =
INFO  06:09:11,971 - #9 10
INFO  06:09:11,971 - #28 ,
INFO  06:09:11,972 - #8 d
INFO  06:09:11,973 - #24 =
INFO  06:09:11,973 - #9 99
INFO  06:09:11,973 - #28 ,
INFO  06:09:11,973 - #8 g
INFO  06:09:11,973 - #24 =
INFO  06:09:11,973 - #9 2
INFO  06:09:11,973 - #27 ;
INFO  06:09:11,974 - #8 int
INFO  06:09:11,975 - #8 e
INFO  06:09:11,975 - #27 ;
INFO  06:09:11,976 - #20 {
INFO  06:09:11,978 - #6 void
INFO  06:09:11,978 - #8 main
INFO  06:09:11,978 - #29 (
INFO  06:09:11,979 - #30 )
INFO  06:09:11,979 - #20 {
INFO  06:09:11,979 - #8 e
INFO  06:09:11,979 - #24 =
INFO  06:09:11,979 - #9 10
INFO  06:09:11,979 - #27 ;
INFO  06:09:11,980 - #31 if
INFO  06:09:11,980 - #29 (
INFO  06:09:11,980 - #8 e
INFO  06:09:11,980 - #38 >
INFO  06:09:11,981 - #9 0
INFO  06:09:11,982 - #14 ||
INFO  06:09:11,982 - #8 e
INFO  06:09:11,982 - #42 <=
INFO  06:09:11,982 - #8 d
INFO  06:09:11,983 - #14 ||
INFO  06:09:11,983 - #8 e
INFO  06:09:11,983 - #39 ==
INFO  06:09:11,983 - #9 5
INFO  06:09:11,986 - #30 )
INFO  06:09:11,987 - #20 {
INFO  06:09:11,987 - #8 e
INFO  06:09:11,987 - #25 ++
INFO  06:09:11,987 - #27 ;
INFO  06:09:11,987 - #3 print
INFO  06:09:11,987 - #29 (
INFO  06:09:11,988 - #8 e
INFO  06:09:11,988 - #30 )
INFO  06:09:11,988 - #27 ;
INFO  06:09:11,988 - #21 }
INFO  06:09:11,988 - #21 }
INFO  06:09:11,990 - #21 }
INFO  06:09:11,991 - =====================SINTAKSNO_STABLO=========================
INFO  06:09:11,992 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_two(
                    Condition_one(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                    ) [Condition_one]
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_two]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           5
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:09:11,997 - ==============================================================
INFO  06:09:12,016 - Pocetak obrade programa Program na liniji 1
INFO  06:09:12,016 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:09:12,018 - Deklarisana konstanta c na liniji 2
INFO  06:09:12,019 - Deklarisana konstanta d na liniji 2
INFO  06:09:12,019 - Deklarisana konstanta g na liniji 2
INFO  06:09:12,019 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:09:12,019 - Deklarisana promenljiva e na liniji 3
INFO  06:09:12,022 - Pocetak obrade metode main na liniji 5
INFO  06:09:12,022 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:09:12,022 - Zavrsetak obrade programa Program na liniji 1
INFO  06:09:12,023 - ======================TABELA_SIMBOLA==========================
INFO  06:09:12,024 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  06:09:12,024 - ==============================================================
INFO  06:09:12,024 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:09:12,024 - ==============================================================
INFO  06:09:12,024 - ======================GENERISANJE_KODA========================
INFO  06:09:12,028 - 1
INFO  06:09:12,031 - 3
INFO  06:09:12,031 - 1
INFO  06:09:12,032 - 4
INFO  06:09:12,032 - 1
INFO  06:09:12,032 - 4
INFO  06:09:12,032 - Final!
INFO  06:09:12,033 - y
INFO  06:09:12,033 - y
INFO  06:09:12,035 - Generisanje koda uspesno zavrseno!
INFO  06:09:12,035 - Generisanje izlaznog fajla test\program.obj
INFO  06:09:12,035 - ==============================================================
INFO  06:09:52,978 - Obrada ulaznog fajla test\program.mj
INFO  06:09:53,060 - #2 program
INFO  06:09:53,060 - #8 Program
INFO  06:09:53,060 - #5 const
INFO  06:09:53,061 - #8 int
INFO  06:09:53,061 - #8 c
INFO  06:09:53,062 - #24 =
INFO  06:09:53,062 - #9 10
INFO  06:09:53,062 - #28 ,
INFO  06:09:53,063 - #8 d
INFO  06:09:53,063 - #24 =
INFO  06:09:53,063 - #9 99
INFO  06:09:53,064 - #28 ,
INFO  06:09:53,064 - #8 g
INFO  06:09:53,064 - #24 =
INFO  06:09:53,064 - #9 2
INFO  06:09:53,065 - #27 ;
INFO  06:09:53,065 - #8 int
INFO  06:09:53,067 - #8 e
INFO  06:09:53,068 - #27 ;
INFO  06:09:53,068 - #20 {
INFO  06:09:53,070 - #6 void
INFO  06:09:53,070 - #8 main
INFO  06:09:53,070 - #29 (
INFO  06:09:53,071 - #30 )
INFO  06:09:53,071 - #20 {
INFO  06:09:53,071 - #8 e
INFO  06:09:53,071 - #24 =
INFO  06:09:53,072 - #9 10
INFO  06:09:53,072 - #27 ;
INFO  06:09:53,072 - #31 if
INFO  06:09:53,073 - #29 (
INFO  06:09:53,073 - #8 e
INFO  06:09:53,073 - #38 >
INFO  06:09:53,073 - #9 0
INFO  06:09:53,074 - #13 &&
INFO  06:09:53,075 - #8 e
INFO  06:09:53,075 - #42 <=
INFO  06:09:53,075 - #8 d
INFO  06:09:53,076 - #13 &&
INFO  06:09:53,076 - #8 e
INFO  06:09:53,076 - #39 ==
INFO  06:09:53,076 - #9 5
INFO  06:09:53,077 - #30 )
INFO  06:09:53,079 - #20 {
INFO  06:09:53,079 - #8 e
INFO  06:09:53,080 - #25 ++
INFO  06:09:53,080 - #27 ;
INFO  06:09:53,080 - #3 print
INFO  06:09:53,080 - #29 (
INFO  06:09:53,080 - #8 e
INFO  06:09:53,081 - #30 )
INFO  06:09:53,081 - #27 ;
INFO  06:09:53,081 - #21 }
INFO  06:09:53,081 - #21 }
INFO  06:09:53,083 - #21 }
INFO  06:09:53,084 - =====================SINTAKSNO_STABLO=========================
INFO  06:09:53,086 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_two(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_gt(
                          ) [Rel_op_gt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_two]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           5
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:09:53,086 - ==============================================================
INFO  06:09:53,101 - Pocetak obrade programa Program na liniji 1
INFO  06:09:53,101 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:09:53,102 - Deklarisana konstanta c na liniji 2
INFO  06:09:53,102 - Deklarisana konstanta d na liniji 2
INFO  06:09:53,102 - Deklarisana konstanta g na liniji 2
INFO  06:09:53,102 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:09:53,103 - Deklarisana promenljiva e na liniji 3
INFO  06:09:53,103 - Pocetak obrade metode main na liniji 5
INFO  06:09:53,104 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:09:53,104 - Zavrsetak obrade programa Program na liniji 1
INFO  06:09:53,104 - ======================TABELA_SIMBOLA==========================
INFO  06:09:53,104 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  06:09:53,104 - ==============================================================
INFO  06:09:53,105 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:09:53,105 - ==============================================================
INFO  06:09:53,105 - ======================GENERISANJE_KODA========================
INFO  06:09:53,108 - 1
INFO  06:09:53,110 - 2
INFO  06:09:53,110 - 2
INFO  06:09:53,110 - 3
INFO  06:09:53,111 - Final!
INFO  06:09:53,111 - x
INFO  06:09:53,111 - x
INFO  06:09:53,113 - Generisanje koda uspesno zavrseno!
INFO  06:09:53,113 - Generisanje izlaznog fajla test\program.obj
INFO  06:09:53,113 - ==============================================================
INFO  06:10:15,058 - Obrada ulaznog fajla test\program.mj
INFO  06:10:15,146 - #2 program
INFO  06:10:15,146 - #8 Program
INFO  06:10:15,146 - #5 const
INFO  06:10:15,147 - #8 int
INFO  06:10:15,147 - #8 c
INFO  06:10:15,148 - #24 =
INFO  06:10:15,148 - #9 10
INFO  06:10:15,148 - #28 ,
INFO  06:10:15,149 - #8 d
INFO  06:10:15,149 - #24 =
INFO  06:10:15,149 - #9 99
INFO  06:10:15,149 - #28 ,
INFO  06:10:15,149 - #8 g
INFO  06:10:15,150 - #24 =
INFO  06:10:15,150 - #9 2
INFO  06:10:15,150 - #27 ;
INFO  06:10:15,150 - #8 int
INFO  06:10:15,151 - #8 e
INFO  06:10:15,151 - #27 ;
INFO  06:10:15,151 - #20 {
INFO  06:10:15,153 - #6 void
INFO  06:10:15,153 - #8 main
INFO  06:10:15,153 - #29 (
INFO  06:10:15,154 - #30 )
INFO  06:10:15,155 - #20 {
INFO  06:10:15,155 - #8 e
INFO  06:10:15,155 - #24 =
INFO  06:10:15,155 - #9 10
INFO  06:10:15,156 - #27 ;
INFO  06:10:15,156 - #31 if
INFO  06:10:15,157 - #29 (
INFO  06:10:15,157 - #8 e
INFO  06:10:15,157 - #38 >
INFO  06:10:15,158 - #9 0
INFO  06:10:15,159 - #13 &&
INFO  06:10:15,160 - #8 e
INFO  06:10:15,160 - #42 <=
INFO  06:10:15,160 - #8 d
INFO  06:10:15,161 - #30 )
INFO  06:10:15,162 - #20 {
INFO  06:10:15,162 - #8 e
INFO  06:10:15,162 - #25 ++
INFO  06:10:15,162 - #27 ;
INFO  06:10:15,163 - #3 print
INFO  06:10:15,163 - #29 (
INFO  06:10:15,163 - #8 e
INFO  06:10:15,163 - #30 )
INFO  06:10:15,163 - #27 ;
INFO  06:10:15,163 - #21 }
INFO  06:10:15,164 - #21 }
INFO  06:10:15,165 - #21 }
INFO  06:10:15,166 - =====================SINTAKSNO_STABLO=========================
INFO  06:10:15,168 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:10:15,169 - ==============================================================
INFO  06:10:15,180 - Pocetak obrade programa Program na liniji 1
INFO  06:10:15,181 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:10:15,181 - Deklarisana konstanta c na liniji 2
INFO  06:10:15,182 - Deklarisana konstanta d na liniji 2
INFO  06:10:15,182 - Deklarisana konstanta g na liniji 2
INFO  06:10:15,182 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:10:15,182 - Deklarisana promenljiva e na liniji 3
INFO  06:10:15,183 - Pocetak obrade metode main na liniji 5
INFO  06:10:15,184 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:10:15,184 - Zavrsetak obrade programa Program na liniji 1
INFO  06:10:15,184 - ======================TABELA_SIMBOLA==========================
INFO  06:10:15,185 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  06:10:15,186 - ==============================================================
INFO  06:10:15,186 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:10:15,186 - ==============================================================
INFO  06:10:15,186 - ======================GENERISANJE_KODA========================
INFO  06:10:15,189 - 1
INFO  06:10:15,190 - 2
INFO  06:10:15,190 - 3
INFO  06:10:15,190 - Final!
INFO  06:10:15,191 - x
INFO  06:10:15,194 - Generisanje koda uspesno zavrseno!
INFO  06:10:15,194 - Generisanje izlaznog fajla test\program.obj
INFO  06:10:15,194 - ==============================================================
INFO  06:12:54,191 - Obrada ulaznog fajla test\program.mj
INFO  06:12:54,296 - #2 program
INFO  06:12:54,296 - #8 Program
INFO  06:12:54,296 - #5 const
INFO  06:12:54,297 - #8 int
INFO  06:12:54,297 - #8 c
INFO  06:12:54,299 - #24 =
INFO  06:12:54,299 - #9 10
INFO  06:12:54,299 - #28 ,
INFO  06:12:54,301 - #8 d
INFO  06:12:54,301 - #24 =
INFO  06:12:54,301 - #9 99
INFO  06:12:54,301 - #28 ,
INFO  06:12:54,301 - #8 g
INFO  06:12:54,301 - #24 =
INFO  06:12:54,302 - #9 2
INFO  06:12:54,302 - #27 ;
INFO  06:12:54,302 - #8 int
INFO  06:12:54,304 - #8 e
INFO  06:12:54,305 - #27 ;
INFO  06:12:54,305 - #20 {
INFO  06:12:54,307 - #6 void
INFO  06:12:54,307 - #8 main
INFO  06:12:54,307 - #29 (
INFO  06:12:54,308 - #30 )
INFO  06:12:54,308 - #20 {
INFO  06:12:54,308 - #8 e
INFO  06:12:54,308 - #24 =
INFO  06:12:54,309 - #9 10
INFO  06:12:54,309 - #27 ;
INFO  06:12:54,310 - #31 if
INFO  06:12:54,311 - #29 (
INFO  06:12:54,311 - #8 e
INFO  06:12:54,311 - #38 >
INFO  06:12:54,311 - #9 0
INFO  06:12:54,313 - #13 &&
INFO  06:12:54,314 - #8 e
INFO  06:12:54,314 - #42 <=
INFO  06:12:54,315 - #8 d
INFO  06:12:54,317 - #30 )
INFO  06:12:54,319 - #20 {
INFO  06:12:54,319 - #8 e
INFO  06:12:54,319 - #25 ++
INFO  06:12:54,320 - #27 ;
INFO  06:12:54,320 - #3 print
INFO  06:12:54,320 - #29 (
INFO  06:12:54,320 - #8 e
INFO  06:12:54,320 - #30 )
INFO  06:12:54,320 - #27 ;
INFO  06:12:54,320 - #21 }
INFO  06:12:54,321 - #21 }
INFO  06:12:54,322 - #21 }
INFO  06:12:54,323 - =====================SINTAKSNO_STABLO=========================
INFO  06:12:54,325 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:12:54,326 - ==============================================================
INFO  06:12:54,344 - Pocetak obrade programa Program na liniji 1
INFO  06:12:54,344 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:12:54,345 - Deklarisana konstanta c na liniji 2
INFO  06:12:54,345 - Deklarisana konstanta d na liniji 2
INFO  06:12:54,345 - Deklarisana konstanta g na liniji 2
INFO  06:12:54,345 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:12:54,345 - Deklarisana promenljiva e na liniji 3
INFO  06:12:54,346 - Pocetak obrade metode main na liniji 5
INFO  06:12:54,347 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:12:54,347 - Zavrsetak obrade programa Program na liniji 1
INFO  06:12:54,347 - ======================TABELA_SIMBOLA==========================
INFO  06:12:54,348 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  06:12:54,348 - ==============================================================
INFO  06:12:54,348 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:12:54,348 - ==============================================================
INFO  06:12:54,348 - ======================GENERISANJE_KODA========================
INFO  06:12:54,354 - Final!
INFO  06:12:54,357 - Generisanje koda uspesno zavrseno!
INFO  06:12:54,357 - Generisanje izlaznog fajla test\program.obj
INFO  06:12:54,357 - ==============================================================
INFO  06:13:20,671 - Obrada ulaznog fajla test\program.mj
INFO  06:13:20,762 - #2 program
INFO  06:13:20,762 - #8 Program
INFO  06:13:20,763 - #5 const
INFO  06:13:20,765 - #8 int
INFO  06:13:20,765 - #8 c
INFO  06:13:20,766 - #24 =
INFO  06:13:20,766 - #9 10
INFO  06:13:20,766 - #28 ,
INFO  06:13:20,767 - #8 d
INFO  06:13:20,768 - #24 =
INFO  06:13:20,768 - #9 99
INFO  06:13:20,768 - #28 ,
INFO  06:13:20,768 - #8 g
INFO  06:13:20,768 - #24 =
INFO  06:13:20,768 - #9 2
INFO  06:13:20,768 - #27 ;
INFO  06:13:20,768 - #8 int
INFO  06:13:20,770 - #8 e
INFO  06:13:20,770 - #27 ;
INFO  06:13:20,770 - #20 {
INFO  06:13:20,771 - #6 void
INFO  06:13:20,772 - #8 main
INFO  06:13:20,772 - #29 (
INFO  06:13:20,773 - #30 )
INFO  06:13:20,773 - #20 {
INFO  06:13:20,773 - #8 e
INFO  06:13:20,774 - #24 =
INFO  06:13:20,774 - #9 10
INFO  06:13:20,774 - #27 ;
INFO  06:13:20,775 - #31 if
INFO  06:13:20,775 - #29 (
INFO  06:13:20,775 - #8 e
INFO  06:13:20,775 - #40 <
INFO  06:13:20,775 - #9 0
INFO  06:13:20,777 - #13 &&
INFO  06:13:20,778 - #8 e
INFO  06:13:20,778 - #42 <=
INFO  06:13:20,778 - #8 d
INFO  06:13:20,780 - #14 ||
INFO  06:13:20,781 - #8 e
INFO  06:13:20,781 - #39 ==
INFO  06:13:20,781 - #9 10
INFO  06:13:20,782 - #30 )
INFO  06:13:20,784 - #20 {
INFO  06:13:20,784 - #8 e
INFO  06:13:20,784 - #25 ++
INFO  06:13:20,784 - #27 ;
INFO  06:13:20,784 - #3 print
INFO  06:13:20,784 - #29 (
INFO  06:13:20,784 - #8 e
INFO  06:13:20,785 - #30 )
INFO  06:13:20,785 - #27 ;
INFO  06:13:20,785 - #21 }
INFO  06:13:20,785 - #21 }
INFO  06:13:20,787 - #21 }
INFO  06:13:20,787 - =====================SINTAKSNO_STABLO=========================
INFO  06:13:20,790 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_two(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_lt(
                          ) [Rel_op_lt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_two]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:13:20,791 - ==============================================================
INFO  06:13:20,806 - Pocetak obrade programa Program na liniji 1
INFO  06:13:20,806 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:13:20,807 - Deklarisana konstanta c na liniji 2
INFO  06:13:20,807 - Deklarisana konstanta d na liniji 2
INFO  06:13:20,807 - Deklarisana konstanta g na liniji 2
INFO  06:13:20,807 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:13:20,808 - Deklarisana promenljiva e na liniji 3
INFO  06:13:20,809 - Pocetak obrade metode main na liniji 5
INFO  06:13:20,810 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:13:20,810 - Zavrsetak obrade programa Program na liniji 1
INFO  06:13:20,810 - ======================TABELA_SIMBOLA==========================
INFO  06:13:20,811 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  06:13:20,811 - ==============================================================
INFO  06:13:20,811 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:13:20,812 - ==============================================================
INFO  06:13:20,812 - ======================GENERISANJE_KODA========================
INFO  06:13:20,817 - Final!
INFO  06:13:20,821 - Generisanje koda uspesno zavrseno!
INFO  06:13:20,821 - Generisanje izlaznog fajla test\program.obj
INFO  06:13:20,821 - ==============================================================
INFO  06:13:37,488 - Obrada ulaznog fajla test\program.mj
INFO  06:13:37,576 - #2 program
INFO  06:13:37,576 - #8 Program
INFO  06:13:37,576 - #5 const
INFO  06:13:37,577 - #8 int
INFO  06:13:37,577 - #8 c
INFO  06:13:37,578 - #24 =
INFO  06:13:37,578 - #9 10
INFO  06:13:37,578 - #28 ,
INFO  06:13:37,580 - #8 d
INFO  06:13:37,580 - #24 =
INFO  06:13:37,580 - #9 99
INFO  06:13:37,580 - #28 ,
INFO  06:13:37,580 - #8 g
INFO  06:13:37,580 - #24 =
INFO  06:13:37,580 - #9 2
INFO  06:13:37,581 - #27 ;
INFO  06:13:37,581 - #8 int
INFO  06:13:37,582 - #8 e
INFO  06:13:37,582 - #27 ;
INFO  06:13:37,583 - #20 {
INFO  06:13:37,584 - #6 void
INFO  06:13:37,584 - #8 main
INFO  06:13:37,584 - #29 (
INFO  06:13:37,585 - #30 )
INFO  06:13:37,585 - #20 {
INFO  06:13:37,585 - #8 e
INFO  06:13:37,585 - #24 =
INFO  06:13:37,585 - #9 10
INFO  06:13:37,585 - #27 ;
INFO  06:13:37,586 - #31 if
INFO  06:13:37,586 - #29 (
INFO  06:13:37,587 - #8 e
INFO  06:13:37,587 - #40 <
INFO  06:13:37,587 - #9 0
INFO  06:13:37,588 - #13 &&
INFO  06:13:37,589 - #8 e
INFO  06:13:37,589 - #41 >=
INFO  06:13:37,589 - #8 d
INFO  06:13:37,591 - #14 ||
INFO  06:13:37,591 - #8 e
INFO  06:13:37,591 - #39 ==
INFO  06:13:37,591 - #9 10
INFO  06:13:37,593 - #30 )
INFO  06:13:37,596 - #20 {
INFO  06:13:37,596 - #8 e
INFO  06:13:37,596 - #25 ++
INFO  06:13:37,596 - #27 ;
INFO  06:13:37,597 - #3 print
INFO  06:13:37,597 - #29 (
INFO  06:13:37,597 - #8 e
INFO  06:13:37,597 - #30 )
INFO  06:13:37,597 - #27 ;
INFO  06:13:37,597 - #21 }
INFO  06:13:37,598 - #21 }
INFO  06:13:37,599 - #21 }
INFO  06:13:37,600 - =====================SINTAKSNO_STABLO=========================
INFO  06:13:37,603 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_two(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_lt(
                          ) [Rel_op_lt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_ge(
                        ) [Rel_op_ge]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_two]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:13:37,603 - ==============================================================
INFO  06:13:37,621 - Pocetak obrade programa Program na liniji 1
INFO  06:13:37,621 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:13:37,623 - Deklarisana konstanta c na liniji 2
INFO  06:13:37,623 - Deklarisana konstanta d na liniji 2
INFO  06:13:37,623 - Deklarisana konstanta g na liniji 2
INFO  06:13:37,623 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:13:37,623 - Deklarisana promenljiva e na liniji 3
INFO  06:13:37,624 - Pocetak obrade metode main na liniji 5
INFO  06:13:37,625 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:13:37,625 - Zavrsetak obrade programa Program na liniji 1
INFO  06:13:37,625 - ======================TABELA_SIMBOLA==========================
INFO  06:13:37,626 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  06:13:37,626 - ==============================================================
INFO  06:13:37,626 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:13:37,626 - ==============================================================
INFO  06:13:37,626 - ======================GENERISANJE_KODA========================
INFO  06:13:37,631 - Final!
INFO  06:13:37,635 - Generisanje koda uspesno zavrseno!
INFO  06:13:37,635 - Generisanje izlaznog fajla test\program.obj
INFO  06:13:37,635 - ==============================================================
INFO  06:18:14,625 - Obrada ulaznog fajla test\program.mj
INFO  06:18:14,713 - #2 program
INFO  06:18:14,713 - #8 Program
INFO  06:18:14,713 - #5 const
INFO  06:18:14,714 - #8 int
INFO  06:18:14,714 - #8 c
INFO  06:18:14,714 - #24 =
INFO  06:18:14,714 - #9 10
INFO  06:18:14,715 - #28 ,
INFO  06:18:14,717 - #8 d
INFO  06:18:14,717 - #24 =
INFO  06:18:14,718 - #9 99
INFO  06:18:14,718 - #28 ,
INFO  06:18:14,718 - #8 g
INFO  06:18:14,718 - #24 =
INFO  06:18:14,719 - #9 2
INFO  06:18:14,719 - #27 ;
INFO  06:18:14,719 - #8 int
INFO  06:18:14,720 - #8 e
INFO  06:18:14,721 - #27 ;
INFO  06:18:14,721 - #20 {
INFO  06:18:14,723 - #6 void
INFO  06:18:14,723 - #8 main
INFO  06:18:14,723 - #29 (
INFO  06:18:14,724 - #30 )
INFO  06:18:14,724 - #20 {
INFO  06:18:14,724 - #8 e
INFO  06:18:14,724 - #24 =
INFO  06:18:14,725 - #9 10
INFO  06:18:14,725 - #27 ;
INFO  06:18:14,725 - #31 if
INFO  06:18:14,726 - #29 (
INFO  06:18:14,726 - #8 e
INFO  06:18:14,726 - #40 <
INFO  06:18:14,726 - #9 0
INFO  06:18:14,727 - #13 &&
INFO  06:18:14,728 - #8 e
INFO  06:18:14,728 - #41 >=
INFO  06:18:14,728 - #8 d
INFO  06:18:14,729 - #14 ||
INFO  06:18:14,729 - #8 e
INFO  06:18:14,729 - #39 ==
INFO  06:18:14,729 - #9 10
INFO  06:18:14,730 - #30 )
INFO  06:18:14,731 - #20 {
INFO  06:18:14,732 - #8 e
INFO  06:18:14,732 - #25 ++
INFO  06:18:14,732 - #27 ;
INFO  06:18:14,732 - #3 print
INFO  06:18:14,733 - #29 (
INFO  06:18:14,733 - #8 e
INFO  06:18:14,733 - #30 )
INFO  06:18:14,733 - #27 ;
INFO  06:18:14,733 - #21 }
INFO  06:18:14,734 - #21 }
INFO  06:18:14,735 - #21 }
INFO  06:18:14,736 - =====================SINTAKSNO_STABLO=========================
INFO  06:18:14,738 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_two(
                      Cond_term_one(
                        Cond_fact_two(
                          Expr_term_single(
                            Term_single(
                              Factor_designator(
                                Designator_1(
                                 e
                                ) [Designator_1]
                              ) [Factor_designator]
                            ) [Term_single]
                          ) [Expr_term_single]
                          Rel_op_lt(
                          ) [Rel_op_lt]
                          Expr_term_single(
                            Term_single(
                              Factor_num_const(
                               0
                              ) [Factor_num_const]
                            ) [Term_single]
                          ) [Expr_term_single]
                        ) [Cond_fact_two]
                      ) [Cond_term_one]
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_ge(
                        ) [Rel_op_ge]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_two]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:18:14,739 - ==============================================================
INFO  06:18:14,753 - Pocetak obrade programa Program na liniji 1
INFO  06:18:14,753 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:18:14,754 - Deklarisana konstanta c na liniji 2
INFO  06:18:14,754 - Deklarisana konstanta d na liniji 2
INFO  06:18:14,754 - Deklarisana konstanta g na liniji 2
INFO  06:18:14,755 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:18:14,755 - Deklarisana promenljiva e na liniji 3
INFO  06:18:14,756 - Pocetak obrade metode main na liniji 5
INFO  06:18:14,756 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:18:14,756 - Zavrsetak obrade programa Program na liniji 1
INFO  06:18:14,756 - ======================TABELA_SIMBOLA==========================
INFO  06:18:14,757 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  06:18:14,757 - ==============================================================
INFO  06:18:14,757 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:18:14,757 - ==============================================================
INFO  06:18:14,757 - ======================GENERISANJE_KODA========================
INFO  06:18:14,762 - Final!
INFO  06:18:14,766 - Generisanje koda uspesno zavrseno!
INFO  06:18:14,767 - Generisanje izlaznog fajla test\program.obj
INFO  06:18:14,768 - ==============================================================
INFO  06:20:30,118 - Obrada ulaznog fajla test\program.mj
INFO  06:20:30,233 - #2 program
INFO  06:20:30,233 - #8 Program
INFO  06:20:30,233 - #5 const
INFO  06:20:30,234 - #8 int
INFO  06:20:30,234 - #8 c
INFO  06:20:30,236 - #24 =
INFO  06:20:30,236 - #9 10
INFO  06:20:30,237 - #28 ,
INFO  06:20:30,238 - #8 d
INFO  06:20:30,238 - #24 =
INFO  06:20:30,238 - #9 99
INFO  06:20:30,238 - #28 ,
INFO  06:20:30,239 - #8 g
INFO  06:20:30,239 - #24 =
INFO  06:20:30,239 - #9 2
INFO  06:20:30,239 - #27 ;
INFO  06:20:30,239 - #8 int
INFO  06:20:30,240 - #8 e
INFO  06:20:30,240 - #27 ;
INFO  06:20:30,241 - #20 {
INFO  06:20:30,242 - #6 void
INFO  06:20:30,242 - #8 main
INFO  06:20:30,242 - #29 (
INFO  06:20:30,243 - #30 )
INFO  06:20:30,244 - #20 {
INFO  06:20:30,244 - #8 e
INFO  06:20:30,244 - #24 =
INFO  06:20:30,244 - #9 10
INFO  06:20:30,244 - #27 ;
INFO  06:20:30,245 - #31 if
INFO  06:20:30,245 - #29 (
INFO  06:20:30,245 - #8 e
INFO  06:20:30,245 - #40 <
INFO  06:20:30,246 - #9 0
INFO  06:20:30,248 - #14 ||
INFO  06:20:30,249 - #8 e
INFO  06:20:30,249 - #41 >=
INFO  06:20:30,249 - #8 d
INFO  06:20:30,250 - #13 &&
INFO  06:20:30,250 - #8 e
INFO  06:20:30,250 - #39 ==
INFO  06:20:30,250 - #9 10
INFO  06:20:30,251 - #30 )
INFO  06:20:30,253 - #20 {
INFO  06:20:30,253 - #8 e
INFO  06:20:30,253 - #25 ++
INFO  06:20:30,253 - #27 ;
INFO  06:20:30,254 - #3 print
INFO  06:20:30,254 - #29 (
INFO  06:20:30,254 - #8 e
INFO  06:20:30,254 - #30 )
INFO  06:20:30,254 - #27 ;
INFO  06:20:30,254 - #21 }
INFO  06:20:30,255 - #21 }
INFO  06:20:30,256 - #21 }
INFO  06:20:30,257 - =====================SINTAKSNO_STABLO=========================
INFO  06:20:30,259 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_lt(
                        ) [Rel_op_lt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_ge(
                        ) [Rel_op_ge]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:20:30,260 - ==============================================================
INFO  06:20:30,272 - Pocetak obrade programa Program na liniji 1
INFO  06:20:30,272 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:20:30,273 - Deklarisana konstanta c na liniji 2
INFO  06:20:30,273 - Deklarisana konstanta d na liniji 2
INFO  06:20:30,273 - Deklarisana konstanta g na liniji 2
INFO  06:20:30,273 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:20:30,273 - Deklarisana promenljiva e na liniji 3
INFO  06:20:30,274 - Pocetak obrade metode main na liniji 5
INFO  06:20:30,274 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:20:30,274 - Zavrsetak obrade programa Program na liniji 1
INFO  06:20:30,274 - ======================TABELA_SIMBOLA==========================
INFO  06:20:30,275 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  06:20:30,275 - ==============================================================
INFO  06:20:30,275 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:20:30,275 - ==============================================================
INFO  06:20:30,275 - ======================GENERISANJE_KODA========================
INFO  06:20:30,279 - Final!
INFO  06:20:30,284 - Generisanje koda uspesno zavrseno!
INFO  06:20:30,285 - Generisanje izlaznog fajla test\program.obj
INFO  06:20:30,285 - ==============================================================
INFO  06:20:43,295 - Obrada ulaznog fajla test\program.mj
INFO  06:20:43,374 - #2 program
INFO  06:20:43,375 - #8 Program
INFO  06:20:43,375 - #5 const
INFO  06:20:43,376 - #8 int
INFO  06:20:43,376 - #8 c
INFO  06:20:43,377 - #24 =
INFO  06:20:43,377 - #9 10
INFO  06:20:43,377 - #28 ,
INFO  06:20:43,379 - #8 d
INFO  06:20:43,379 - #24 =
INFO  06:20:43,379 - #9 99
INFO  06:20:43,379 - #28 ,
INFO  06:20:43,379 - #8 g
INFO  06:20:43,379 - #24 =
INFO  06:20:43,379 - #9 2
INFO  06:20:43,380 - #27 ;
INFO  06:20:43,380 - #8 int
INFO  06:20:43,382 - #8 e
INFO  06:20:43,382 - #27 ;
INFO  06:20:43,382 - #20 {
INFO  06:20:43,384 - #6 void
INFO  06:20:43,384 - #8 main
INFO  06:20:43,385 - #29 (
INFO  06:20:43,387 - #30 )
INFO  06:20:43,387 - #20 {
INFO  06:20:43,388 - #8 e
INFO  06:20:43,388 - #24 =
INFO  06:20:43,388 - #9 10
INFO  06:20:43,388 - #27 ;
INFO  06:20:43,389 - #31 if
INFO  06:20:43,390 - #29 (
INFO  06:20:43,390 - #8 e
INFO  06:20:43,390 - #40 <
INFO  06:20:43,391 - #9 0
INFO  06:20:43,392 - #14 ||
INFO  06:20:43,393 - #8 e
INFO  06:20:43,393 - #42 <=
INFO  06:20:43,393 - #8 d
INFO  06:20:43,394 - #13 &&
INFO  06:20:43,394 - #8 e
INFO  06:20:43,394 - #39 ==
INFO  06:20:43,395 - #9 10
INFO  06:20:43,396 - #30 )
INFO  06:20:43,397 - #20 {
INFO  06:20:43,398 - #8 e
INFO  06:20:43,398 - #25 ++
INFO  06:20:43,398 - #27 ;
INFO  06:20:43,398 - #3 print
INFO  06:20:43,398 - #29 (
INFO  06:20:43,399 - #8 e
INFO  06:20:43,399 - #30 )
INFO  06:20:43,399 - #27 ;
INFO  06:20:43,400 - #21 }
INFO  06:20:43,400 - #21 }
INFO  06:20:43,402 - #21 }
INFO  06:20:43,404 - =====================SINTAKSNO_STABLO=========================
INFO  06:20:43,406 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_lt(
                        ) [Rel_op_lt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:20:43,407 - ==============================================================
INFO  06:20:43,423 - Pocetak obrade programa Program na liniji 1
INFO  06:20:43,423 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:20:43,424 - Deklarisana konstanta c na liniji 2
INFO  06:20:43,424 - Deklarisana konstanta d na liniji 2
INFO  06:20:43,424 - Deklarisana konstanta g na liniji 2
INFO  06:20:43,425 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:20:43,425 - Deklarisana promenljiva e na liniji 3
INFO  06:20:43,425 - Pocetak obrade metode main na liniji 5
INFO  06:20:43,426 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:20:43,426 - Zavrsetak obrade programa Program na liniji 1
INFO  06:20:43,426 - ======================TABELA_SIMBOLA==========================
INFO  06:20:43,426 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  06:20:43,426 - ==============================================================
INFO  06:20:43,427 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:20:43,427 - ==============================================================
INFO  06:20:43,427 - ======================GENERISANJE_KODA========================
INFO  06:20:43,431 - Final!
INFO  06:20:43,435 - Generisanje koda uspesno zavrseno!
INFO  06:20:43,435 - Generisanje izlaznog fajla test\program.obj
INFO  06:20:43,435 - ==============================================================
INFO  06:46:41,948 - Obrada ulaznog fajla test\program.mj
INFO  06:46:42,050 - #2 program
INFO  06:46:42,051 - #8 Program
INFO  06:46:42,051 - #5 const
INFO  06:46:42,052 - #8 int
INFO  06:46:42,053 - #8 c
INFO  06:46:42,054 - #24 =
INFO  06:46:42,054 - #9 10
INFO  06:46:42,054 - #28 ,
INFO  06:46:42,056 - #8 d
INFO  06:46:42,056 - #24 =
INFO  06:46:42,056 - #9 99
INFO  06:46:42,056 - #28 ,
INFO  06:46:42,056 - #8 g
INFO  06:46:42,057 - #24 =
INFO  06:46:42,057 - #9 2
INFO  06:46:42,057 - #27 ;
INFO  06:46:42,057 - #8 int
INFO  06:46:42,058 - #8 e
INFO  06:46:42,058 - #27 ;
INFO  06:46:42,059 - #20 {
INFO  06:46:42,060 - #6 void
INFO  06:46:42,060 - #8 main
INFO  06:46:42,060 - #29 (
INFO  06:46:42,061 - #30 )
INFO  06:46:42,061 - #20 {
INFO  06:46:42,062 - #8 e
INFO  06:46:42,062 - #24 =
INFO  06:46:42,062 - #9 10
INFO  06:46:42,062 - #27 ;
INFO  06:46:42,063 - #31 if
INFO  06:46:42,063 - #29 (
INFO  06:46:42,063 - #8 e
INFO  06:46:42,063 - #40 <
INFO  06:46:42,063 - #9 0
INFO  06:46:42,065 - #14 ||
INFO  06:46:42,065 - #8 e
INFO  06:46:42,066 - #42 <=
INFO  06:46:42,066 - #8 d
INFO  06:46:42,067 - #13 &&
INFO  06:46:42,067 - #8 e
INFO  06:46:42,068 - #39 ==
INFO  06:46:42,068 - #9 10
INFO  06:46:42,069 - #30 )
INFO  06:46:42,070 - #20 {
INFO  06:46:42,070 - #8 e
INFO  06:46:42,070 - #25 ++
INFO  06:46:42,070 - #27 ;
INFO  06:46:42,070 - #3 print
INFO  06:46:42,071 - #29 (
INFO  06:46:42,071 - #8 e
INFO  06:46:42,071 - #30 )
INFO  06:46:42,071 - #27 ;
INFO  06:46:42,071 - #21 }
INFO  06:46:42,071 - #21 }
INFO  06:46:42,073 - #21 }
INFO  06:46:42,073 - =====================SINTAKSNO_STABLO=========================
INFO  06:46:42,076 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_lt(
                        ) [Rel_op_lt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:46:42,076 - ==============================================================
INFO  06:46:42,093 - Pocetak obrade programa Program na liniji 1
INFO  06:46:42,093 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:46:42,094 - Deklarisana konstanta c na liniji 2
INFO  06:46:42,095 - Deklarisana konstanta d na liniji 2
INFO  06:46:42,095 - Deklarisana konstanta g na liniji 2
INFO  06:46:42,095 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:46:42,095 - Deklarisana promenljiva e na liniji 3
INFO  06:46:42,096 - Pocetak obrade metode main na liniji 5
INFO  06:46:42,097 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:46:42,097 - Zavrsetak obrade programa Program na liniji 1
INFO  06:46:42,097 - ======================TABELA_SIMBOLA==========================
INFO  06:46:42,098 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  06:46:42,098 - ==============================================================
INFO  06:46:42,098 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:46:42,098 - ==============================================================
INFO  06:46:42,098 - ======================GENERISANJE_KODA========================
INFO  06:46:42,108 - Generisanje koda uspesno zavrseno!
INFO  06:46:42,110 - Generisanje izlaznog fajla test\program.obj
INFO  06:46:42,110 - ==============================================================
INFO  06:59:51,299 - Obrada ulaznog fajla test\program.mj
INFO  06:59:51,421 - #2 program
INFO  06:59:51,422 - #8 Program
INFO  06:59:51,422 - #5 const
INFO  06:59:51,423 - #8 int
INFO  06:59:51,423 - #8 c
INFO  06:59:51,424 - #24 =
INFO  06:59:51,424 - #9 10
INFO  06:59:51,424 - #28 ,
INFO  06:59:51,425 - #8 d
INFO  06:59:51,426 - #24 =
INFO  06:59:51,426 - #9 99
INFO  06:59:51,426 - #28 ,
INFO  06:59:51,426 - #8 g
INFO  06:59:51,426 - #24 =
INFO  06:59:51,426 - #9 2
INFO  06:59:51,426 - #27 ;
INFO  06:59:51,427 - #8 int
INFO  06:59:51,428 - #8 e
INFO  06:59:51,428 - #27 ;
INFO  06:59:51,428 - #20 {
INFO  06:59:51,430 - #6 void
INFO  06:59:51,430 - #8 main
INFO  06:59:51,430 - #29 (
INFO  06:59:51,431 - #30 )
INFO  06:59:51,431 - #20 {
INFO  06:59:51,431 - #8 e
INFO  06:59:51,432 - #24 =
INFO  06:59:51,432 - #9 10
INFO  06:59:51,432 - #27 ;
INFO  06:59:51,433 - #31 if
INFO  06:59:51,433 - #29 (
INFO  06:59:51,433 - #8 e
INFO  06:59:51,433 - #40 <
INFO  06:59:51,434 - #9 0
INFO  06:59:51,436 - #14 ||
INFO  06:59:51,437 - #8 e
INFO  06:59:51,437 - #42 <=
INFO  06:59:51,437 - #8 d
INFO  06:59:51,438 - #13 &&
INFO  06:59:51,438 - #8 e
INFO  06:59:51,438 - #39 ==
INFO  06:59:51,438 - #9 10
INFO  06:59:51,439 - #30 )
INFO  06:59:51,441 - #20 {
INFO  06:59:51,441 - #8 e
INFO  06:59:51,441 - #25 ++
INFO  06:59:51,441 - #27 ;
INFO  06:59:51,441 - #3 print
INFO  06:59:51,441 - #29 (
INFO  06:59:51,441 - #8 e
INFO  06:59:51,441 - #30 )
INFO  06:59:51,441 - #27 ;
INFO  06:59:51,442 - #21 }
INFO  06:59:51,442 - #21 }
INFO  06:59:51,443 - #21 }
INFO  06:59:51,444 - =====================SINTAKSNO_STABLO=========================
INFO  06:59:51,446 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_lt(
                        ) [Rel_op_lt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  06:59:51,450 - ==============================================================
INFO  06:59:51,463 - Pocetak obrade programa Program na liniji 1
INFO  06:59:51,463 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  06:59:51,464 - Deklarisana konstanta c na liniji 2
INFO  06:59:51,464 - Deklarisana konstanta d na liniji 2
INFO  06:59:51,464 - Deklarisana konstanta g na liniji 2
INFO  06:59:51,466 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  06:59:51,466 - Deklarisana promenljiva e na liniji 3
INFO  06:59:51,467 - Pocetak obrade metode main na liniji 5
INFO  06:59:51,467 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  06:59:51,468 - Zavrsetak obrade programa Program na liniji 1
INFO  06:59:51,468 - ======================TABELA_SIMBOLA==========================
INFO  06:59:51,468 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  06:59:51,468 - ==============================================================
INFO  06:59:51,469 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  06:59:51,469 - ==============================================================
INFO  06:59:51,469 - ======================GENERISANJE_KODA========================
INFO  06:59:51,478 - Generisanje koda uspesno zavrseno!
INFO  06:59:51,481 - Generisanje izlaznog fajla test\program.obj
INFO  06:59:51,482 - ==============================================================
INFO  18:16:39,045 - Obrada ulaznog fajla test\program.mj
INFO  18:16:39,164 - #2 program
INFO  18:16:39,165 - #8 Program
INFO  18:16:39,165 - #5 const
INFO  18:16:39,166 - #8 int
INFO  18:16:39,166 - #8 c
INFO  18:16:39,167 - #24 =
INFO  18:16:39,167 - #9 10
INFO  18:16:39,167 - #28 ,
INFO  18:16:39,169 - #8 d
INFO  18:16:39,169 - #24 =
INFO  18:16:39,169 - #9 99
INFO  18:16:39,169 - #28 ,
INFO  18:16:39,170 - #8 g
INFO  18:16:39,170 - #24 =
INFO  18:16:39,170 - #9 2
INFO  18:16:39,170 - #27 ;
INFO  18:16:39,170 - #8 int
INFO  18:16:39,173 - #8 e
INFO  18:16:39,173 - #27 ;
INFO  18:16:39,174 - #20 {
INFO  18:16:39,175 - #6 void
INFO  18:16:39,175 - #8 main
INFO  18:16:39,176 - #29 (
INFO  18:16:39,177 - #30 )
INFO  18:16:39,177 - #20 {
INFO  18:16:39,177 - #8 e
INFO  18:16:39,177 - #24 =
INFO  18:16:39,177 - #9 10
INFO  18:16:39,177 - #27 ;
INFO  18:16:39,178 - #31 if
INFO  18:16:39,178 - #29 (
INFO  18:16:39,178 - #8 e
INFO  18:16:39,178 - #40 <
INFO  18:16:39,179 - #9 0
INFO  18:16:39,180 - #14 ||
INFO  18:16:39,181 - #8 e
INFO  18:16:39,181 - #42 <=
INFO  18:16:39,181 - #8 d
INFO  18:16:39,182 - #13 &&
INFO  18:16:39,182 - #8 e
INFO  18:16:39,182 - #39 ==
INFO  18:16:39,182 - #9 10
INFO  18:16:39,183 - #30 )
INFO  18:16:39,185 - #20 {
INFO  18:16:39,185 - #8 e
INFO  18:16:39,185 - #25 ++
INFO  18:16:39,185 - #27 ;
INFO  18:16:39,185 - #3 print
INFO  18:16:39,185 - #29 (
INFO  18:16:39,185 - #8 e
INFO  18:16:39,186 - #30 )
INFO  18:16:39,186 - #27 ;
INFO  18:16:39,186 - #21 }
INFO  18:16:39,186 - #21 }
INFO  18:16:39,187 - #21 }
INFO  18:16:39,188 - =====================SINTAKSNO_STABLO=========================
INFO  18:16:39,190 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_lt(
                        ) [Rel_op_lt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:16:39,191 - ==============================================================
INFO  18:16:39,207 - Pocetak obrade programa Program na liniji 1
INFO  18:16:39,207 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:16:39,208 - Deklarisana konstanta c na liniji 2
INFO  18:16:39,208 - Deklarisana konstanta d na liniji 2
INFO  18:16:39,209 - Deklarisana konstanta g na liniji 2
INFO  18:16:39,209 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:16:39,209 - Deklarisana promenljiva e na liniji 3
INFO  18:16:39,210 - Pocetak obrade metode main na liniji 5
INFO  18:16:39,211 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:16:39,211 - Zavrsetak obrade programa Program na liniji 1
INFO  18:16:39,211 - ======================TABELA_SIMBOLA==========================
INFO  18:16:39,211 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  18:16:39,212 - ==============================================================
INFO  18:16:39,212 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:16:39,212 - ==============================================================
INFO  18:16:39,212 - ======================GENERISANJE_KODA========================
INFO  18:17:07,709 - Obrada ulaznog fajla test\program.mj
INFO  18:17:07,784 - #2 program
INFO  18:17:07,785 - #8 Program
INFO  18:17:07,785 - #5 const
INFO  18:17:07,786 - #8 int
INFO  18:17:07,786 - #8 c
INFO  18:17:07,787 - #24 =
INFO  18:17:07,787 - #9 10
INFO  18:17:07,787 - #28 ,
INFO  18:17:07,788 - #8 d
INFO  18:17:07,789 - #24 =
INFO  18:17:07,789 - #9 99
INFO  18:17:07,789 - #28 ,
INFO  18:17:07,789 - #8 g
INFO  18:17:07,789 - #24 =
INFO  18:17:07,789 - #9 2
INFO  18:17:07,789 - #27 ;
INFO  18:17:07,789 - #8 int
INFO  18:17:07,791 - #8 e
INFO  18:17:07,791 - #27 ;
INFO  18:17:07,791 - #20 {
INFO  18:17:07,792 - #6 void
INFO  18:17:07,792 - #8 main
INFO  18:17:07,793 - #29 (
INFO  18:17:07,793 - #30 )
INFO  18:17:07,793 - #20 {
INFO  18:17:07,794 - #8 e
INFO  18:17:07,794 - #24 =
INFO  18:17:07,794 - #9 10
INFO  18:17:07,794 - #27 ;
INFO  18:17:07,795 - #31 if
INFO  18:17:07,795 - #29 (
INFO  18:17:07,795 - #8 e
INFO  18:17:07,795 - #40 <
INFO  18:17:07,796 - #9 0
INFO  18:17:07,797 - #14 ||
INFO  18:17:07,798 - #8 e
INFO  18:17:07,798 - #42 <=
INFO  18:17:07,798 - #8 d
INFO  18:17:07,798 - #13 &&
INFO  18:17:07,799 - #8 e
INFO  18:17:07,799 - #39 ==
INFO  18:17:07,799 - #9 10
INFO  18:17:07,800 - #30 )
INFO  18:17:07,801 - #20 {
INFO  18:17:07,801 - #8 e
INFO  18:17:07,801 - #25 ++
INFO  18:17:07,801 - #27 ;
INFO  18:17:07,801 - #3 print
INFO  18:17:07,802 - #29 (
INFO  18:17:07,802 - #8 e
INFO  18:17:07,802 - #30 )
INFO  18:17:07,802 - #27 ;
INFO  18:17:07,802 - #21 }
INFO  18:17:07,802 - #21 }
INFO  18:17:07,805 - #21 }
INFO  18:17:07,806 - =====================SINTAKSNO_STABLO=========================
INFO  18:17:07,807 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_lt(
                        ) [Rel_op_lt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:17:07,808 - ==============================================================
INFO  18:17:07,819 - Pocetak obrade programa Program na liniji 1
INFO  18:17:07,820 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:17:07,820 - Deklarisana konstanta c na liniji 2
INFO  18:17:07,820 - Deklarisana konstanta d na liniji 2
INFO  18:17:07,821 - Deklarisana konstanta g na liniji 2
INFO  18:17:07,821 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:17:07,821 - Deklarisana promenljiva e na liniji 3
INFO  18:17:07,822 - Pocetak obrade metode main na liniji 5
INFO  18:17:07,822 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:17:07,822 - Zavrsetak obrade programa Program na liniji 1
INFO  18:17:07,822 - ======================TABELA_SIMBOLA==========================
INFO  18:17:07,823 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  18:17:07,823 - ==============================================================
INFO  18:17:07,823 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:17:07,823 - ==============================================================
INFO  18:17:07,823 - ======================GENERISANJE_KODA========================
INFO  18:17:07,829 - Generisanje koda uspesno zavrseno!
INFO  18:17:07,832 - Generisanje izlaznog fajla test\program.obj
INFO  18:17:07,832 - ==============================================================
INFO  18:20:38,435 - Obrada ulaznog fajla test\program.mj
INFO  18:20:38,512 - #2 program
INFO  18:20:38,512 - #8 Program
INFO  18:20:38,512 - #5 const
INFO  18:20:38,513 - #8 int
INFO  18:20:38,513 - #8 c
INFO  18:20:38,514 - #24 =
INFO  18:20:38,514 - #9 10
INFO  18:20:38,514 - #28 ,
INFO  18:20:38,515 - #8 d
INFO  18:20:38,516 - #24 =
INFO  18:20:38,516 - #9 99
INFO  18:20:38,516 - #28 ,
INFO  18:20:38,516 - #8 g
INFO  18:20:38,516 - #24 =
INFO  18:20:38,516 - #9 2
INFO  18:20:38,516 - #27 ;
INFO  18:20:38,516 - #8 int
INFO  18:20:38,518 - #8 e
INFO  18:20:38,518 - #27 ;
INFO  18:20:38,518 - #20 {
INFO  18:20:38,520 - #6 void
INFO  18:20:38,520 - #8 main
INFO  18:20:38,520 - #29 (
INFO  18:20:38,520 - #30 )
INFO  18:20:38,521 - #20 {
INFO  18:20:38,521 - #8 e
INFO  18:20:38,521 - #24 =
INFO  18:20:38,521 - #9 10
INFO  18:20:38,521 - #27 ;
INFO  18:20:38,522 - #31 if
INFO  18:20:38,522 - #29 (
INFO  18:20:38,522 - #12 false
INFO  18:20:38,522 - #14 ||
INFO  18:20:38,523 - #8 e
INFO  18:20:38,524 - #42 <=
INFO  18:20:38,524 - #8 d
INFO  18:20:38,525 - #13 &&
INFO  18:20:38,525 - #8 e
INFO  18:20:38,525 - #39 ==
INFO  18:20:38,526 - #9 10
INFO  18:20:38,526 - #30 )
INFO  18:20:38,527 - #20 {
INFO  18:20:38,527 - #8 e
INFO  18:20:38,527 - #25 ++
INFO  18:20:38,527 - #27 ;
INFO  18:20:38,528 - #3 print
INFO  18:20:38,528 - #29 (
INFO  18:20:38,528 - #8 e
INFO  18:20:38,528 - #30 )
INFO  18:20:38,528 - #27 ;
INFO  18:20:38,528 - #21 }
INFO  18:20:38,528 - #21 }
INFO  18:20:38,529 - #21 }
INFO  18:20:38,530 - =====================SINTAKSNO_STABLO=========================
INFO  18:20:38,532 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_one(
                        Expr_term_single(
                          Term_single(
                            Factor_bool_const(
                              Bool_const_false(
                               false
                              ) [Bool_const_false]
                            ) [Factor_bool_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_one]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:20:38,533 - ==============================================================
INFO  18:20:38,547 - Pocetak obrade programa Program na liniji 1
INFO  18:20:38,547 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:20:38,548 - Deklarisana konstanta c na liniji 2
INFO  18:20:38,549 - Deklarisana konstanta d na liniji 2
INFO  18:20:38,549 - Deklarisana konstanta g na liniji 2
INFO  18:20:38,549 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:20:38,549 - Deklarisana promenljiva e na liniji 3
INFO  18:20:38,550 - Pocetak obrade metode main na liniji 5
INFO  18:20:38,550 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:20:38,551 - Zavrsetak obrade programa Program na liniji 1
INFO  18:20:38,551 - ======================TABELA_SIMBOLA==========================
INFO  18:20:38,551 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  18:20:38,551 - ==============================================================
INFO  18:20:38,552 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:20:38,552 - ==============================================================
INFO  18:20:38,552 - ======================GENERISANJE_KODA========================
INFO  18:26:52,550 - Obrada ulaznog fajla test\program.mj
INFO  18:26:52,627 - #2 program
INFO  18:26:52,627 - #8 Program
INFO  18:26:52,627 - #5 const
INFO  18:26:52,628 - #8 int
INFO  18:26:52,628 - #8 c
INFO  18:26:52,629 - #24 =
INFO  18:26:52,629 - #9 10
INFO  18:26:52,629 - #28 ,
INFO  18:26:52,631 - #8 d
INFO  18:26:52,631 - #24 =
INFO  18:26:52,631 - #9 99
INFO  18:26:52,631 - #28 ,
INFO  18:26:52,631 - #8 g
INFO  18:26:52,631 - #24 =
INFO  18:26:52,632 - #9 2
INFO  18:26:52,632 - #27 ;
INFO  18:26:52,632 - #8 int
INFO  18:26:52,633 - #8 e
INFO  18:26:52,633 - #27 ;
INFO  18:26:52,634 - #20 {
INFO  18:26:52,635 - #6 void
INFO  18:26:52,635 - #8 main
INFO  18:26:52,635 - #29 (
INFO  18:26:52,636 - #30 )
INFO  18:26:52,636 - #20 {
INFO  18:26:52,636 - #8 e
INFO  18:26:52,636 - #24 =
INFO  18:26:52,636 - #9 10
INFO  18:26:52,637 - #27 ;
INFO  18:26:52,637 - #31 if
INFO  18:26:52,637 - #29 (
INFO  18:26:52,638 - #12 false
INFO  18:26:52,638 - #14 ||
INFO  18:26:52,638 - #8 e
INFO  18:26:52,638 - #42 <=
INFO  18:26:52,639 - #8 d
INFO  18:26:52,640 - #13 &&
INFO  18:26:52,640 - #8 e
INFO  18:26:52,640 - #39 ==
INFO  18:26:52,640 - #9 10
INFO  18:26:52,641 - #30 )
INFO  18:26:52,643 - #20 {
INFO  18:26:52,643 - #8 e
INFO  18:26:52,643 - #25 ++
INFO  18:26:52,643 - #27 ;
INFO  18:26:52,644 - #3 print
INFO  18:26:52,644 - #29 (
INFO  18:26:52,644 - #8 e
INFO  18:26:52,644 - #30 )
INFO  18:26:52,644 - #27 ;
INFO  18:26:52,644 - #21 }
INFO  18:26:52,645 - #21 }
INFO  18:26:52,648 - #21 }
INFO  18:26:52,649 - =====================SINTAKSNO_STABLO=========================
INFO  18:26:52,651 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_one(
                        Expr_term_single(
                          Term_single(
                            Factor_bool_const(
                              Bool_const_false(
                               false
                              ) [Bool_const_false]
                            ) [Factor_bool_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_one]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:26:52,652 - ==============================================================
INFO  18:26:52,664 - Pocetak obrade programa Program na liniji 1
INFO  18:26:52,665 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:26:52,666 - Deklarisana konstanta c na liniji 2
INFO  18:26:52,666 - Deklarisana konstanta d na liniji 2
INFO  18:26:52,666 - Deklarisana konstanta g na liniji 2
INFO  18:26:52,666 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:26:52,666 - Deklarisana promenljiva e na liniji 3
INFO  18:26:52,667 - Pocetak obrade metode main na liniji 5
INFO  18:26:52,668 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:26:52,668 - Zavrsetak obrade programa Program na liniji 1
INFO  18:26:52,668 - ======================TABELA_SIMBOLA==========================
INFO  18:26:52,668 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  18:26:52,668 - ==============================================================
INFO  18:26:52,669 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:26:52,669 - ==============================================================
INFO  18:26:52,669 - ======================GENERISANJE_KODA========================
INFO  18:26:52,675 - Generisanje koda uspesno zavrseno!
INFO  18:26:52,675 - Generisanje izlaznog fajla test\program.obj
INFO  18:26:52,675 - ==============================================================
INFO  18:28:24,948 - Obrada ulaznog fajla test\program.mj
INFO  18:28:25,024 - #2 program
INFO  18:28:25,024 - #8 Program
INFO  18:28:25,024 - #5 const
INFO  18:28:25,025 - #8 int
INFO  18:28:25,025 - #8 c
INFO  18:28:25,026 - #24 =
INFO  18:28:25,026 - #9 10
INFO  18:28:25,026 - #28 ,
INFO  18:28:25,028 - #8 d
INFO  18:28:25,028 - #24 =
INFO  18:28:25,028 - #9 99
INFO  18:28:25,028 - #28 ,
INFO  18:28:25,029 - #8 g
INFO  18:28:25,029 - #24 =
INFO  18:28:25,029 - #9 2
INFO  18:28:25,029 - #27 ;
INFO  18:28:25,029 - #8 int
INFO  18:28:25,031 - #8 e
INFO  18:28:25,031 - #27 ;
INFO  18:28:25,032 - #20 {
INFO  18:28:25,033 - #6 void
INFO  18:28:25,033 - #8 main
INFO  18:28:25,033 - #29 (
INFO  18:28:25,034 - #30 )
INFO  18:28:25,034 - #20 {
INFO  18:28:25,034 - #8 e
INFO  18:28:25,034 - #24 =
INFO  18:28:25,034 - #9 10
INFO  18:28:25,034 - #27 ;
INFO  18:28:25,035 - #31 if
INFO  18:28:25,035 - #29 (
INFO  18:28:25,036 - #12 false
INFO  18:28:25,036 - #14 ||
INFO  18:28:25,037 - #8 e
INFO  18:28:25,037 - #42 <=
INFO  18:28:25,037 - #8 d
INFO  18:28:25,039 - #13 &&
INFO  18:28:25,039 - #8 e
INFO  18:28:25,039 - #39 ==
INFO  18:28:25,039 - #9 10
INFO  18:28:25,040 - #30 )
INFO  18:28:25,042 - #20 {
INFO  18:28:25,042 - #8 e
INFO  18:28:25,042 - #25 ++
INFO  18:28:25,042 - #27 ;
INFO  18:28:25,042 - #3 print
INFO  18:28:25,043 - #29 (
INFO  18:28:25,043 - #8 e
INFO  18:28:25,043 - #30 )
INFO  18:28:25,043 - #27 ;
INFO  18:28:25,043 - #21 }
INFO  18:28:25,043 - #21 }
INFO  18:28:25,045 - #21 }
INFO  18:28:25,046 - =====================SINTAKSNO_STABLO=========================
INFO  18:28:25,049 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_one(
                        Expr_term_single(
                          Term_single(
                            Factor_bool_const(
                              Bool_const_false(
                               false
                              ) [Bool_const_false]
                            ) [Factor_bool_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_one]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
          ) [Stmt_if]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:28:25,053 - ==============================================================
INFO  18:28:25,068 - Pocetak obrade programa Program na liniji 1
INFO  18:28:25,068 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:28:25,069 - Deklarisana konstanta c na liniji 2
INFO  18:28:25,069 - Deklarisana konstanta d na liniji 2
INFO  18:28:25,069 - Deklarisana konstanta g na liniji 2
INFO  18:28:25,070 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:28:25,070 - Deklarisana promenljiva e na liniji 3
INFO  18:28:25,071 - Pocetak obrade metode main na liniji 5
INFO  18:28:25,071 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:28:25,072 - Zavrsetak obrade programa Program na liniji 1
INFO  18:28:25,072 - ======================TABELA_SIMBOLA==========================
INFO  18:28:25,072 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  18:28:25,072 - ==============================================================
INFO  18:28:25,073 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:28:25,073 - ==============================================================
INFO  18:28:25,073 - ======================GENERISANJE_KODA========================
INFO  18:28:25,081 - Generisanje koda uspesno zavrseno!
INFO  18:28:25,082 - Generisanje izlaznog fajla test\program.obj
INFO  18:28:25,082 - ==============================================================
INFO  18:29:01,655 - Obrada ulaznog fajla test\program.mj
INFO  18:29:01,736 - #2 program
INFO  18:29:01,736 - #8 Program
INFO  18:29:01,736 - #5 const
INFO  18:29:01,737 - #8 int
INFO  18:29:01,737 - #8 c
INFO  18:29:01,738 - #24 =
INFO  18:29:01,738 - #9 10
INFO  18:29:01,738 - #28 ,
INFO  18:29:01,739 - #8 d
INFO  18:29:01,739 - #24 =
INFO  18:29:01,739 - #9 99
INFO  18:29:01,740 - #28 ,
INFO  18:29:01,740 - #8 g
INFO  18:29:01,740 - #24 =
INFO  18:29:01,740 - #9 2
INFO  18:29:01,740 - #27 ;
INFO  18:29:01,740 - #8 int
INFO  18:29:01,741 - #8 e
INFO  18:29:01,741 - #27 ;
INFO  18:29:01,742 - #20 {
INFO  18:29:01,742 - #6 void
INFO  18:29:01,743 - #8 main
INFO  18:29:01,743 - #29 (
INFO  18:29:01,743 - #30 )
INFO  18:29:01,743 - #20 {
INFO  18:29:01,744 - #8 e
INFO  18:29:01,744 - #24 =
INFO  18:29:01,744 - #9 10
INFO  18:29:01,744 - #27 ;
INFO  18:29:01,745 - #31 if
INFO  18:29:01,745 - #29 (
INFO  18:29:01,745 - #12 false
INFO  18:29:01,745 - #14 ||
INFO  18:29:01,746 - #8 e
INFO  18:29:01,746 - #42 <=
INFO  18:29:01,746 - #8 d
INFO  18:29:01,747 - #13 &&
INFO  18:29:01,747 - #8 e
INFO  18:29:01,748 - #39 ==
INFO  18:29:01,748 - #9 10
INFO  18:29:01,748 - #30 )
INFO  18:29:01,750 - #20 {
INFO  18:29:01,750 - #8 e
INFO  18:29:01,750 - #25 ++
INFO  18:29:01,750 - #27 ;
INFO  18:29:01,750 - #3 print
INFO  18:29:01,751 - #29 (
INFO  18:29:01,751 - #8 e
INFO  18:29:01,751 - #30 )
INFO  18:29:01,751 - #27 ;
INFO  18:29:01,751 - #21 }
INFO  18:29:01,751 - #32 else
INFO  18:29:01,753 - #20 {
INFO  18:29:01,753 - #8 e
INFO  18:29:01,753 - #24 =
INFO  18:29:01,753 - #8 d
INFO  18:29:01,753 - #27 ;
INFO  18:29:01,753 - #3 print
INFO  18:29:01,753 - #29 (
INFO  18:29:01,753 - #8 e
INFO  18:29:01,753 - #30 )
INFO  18:29:01,753 - #27 ;
INFO  18:29:01,754 - #21 }
INFO  18:29:01,754 - #21 }
INFO  18:29:01,754 - #21 }
INFO  18:29:01,755 - =====================SINTAKSNO_STABLO=========================
INFO  18:29:01,757 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_one(
                        Expr_term_single(
                          Term_single(
                            Factor_bool_const(
                              Bool_const_false(
                               false
                              ) [Bool_const_false]
                            ) [Factor_bool_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_one]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  18:29:01,757 - ==============================================================
INFO  18:29:01,771 - Pocetak obrade programa Program na liniji 1
INFO  18:29:01,771 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  18:29:01,772 - Deklarisana konstanta c na liniji 2
INFO  18:29:01,772 - Deklarisana konstanta d na liniji 2
INFO  18:29:01,772 - Deklarisana konstanta g na liniji 2
INFO  18:29:01,772 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  18:29:01,773 - Deklarisana promenljiva e na liniji 3
INFO  18:29:01,775 - Pocetak obrade metode main na liniji 5
INFO  18:29:01,775 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  18:29:01,775 - Zavrsetak obrade programa Program na liniji 1
INFO  18:29:01,775 - ======================TABELA_SIMBOLA==========================
INFO  18:29:01,776 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  18:29:01,776 - ==============================================================
INFO  18:29:01,776 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  18:29:01,776 - ==============================================================
INFO  18:29:01,776 - ======================GENERISANJE_KODA========================
INFO  18:29:01,782 - Generisanje koda uspesno zavrseno!
INFO  18:29:01,782 - Generisanje izlaznog fajla test\program.obj
INFO  18:29:01,782 - ==============================================================
INFO  19:36:39,708 - Obrada ulaznog fajla test\program.mj
INFO  19:36:39,789 - #2 program
INFO  19:36:39,789 - #8 Program
INFO  19:36:39,789 - #5 const
INFO  19:36:39,790 - #8 int
INFO  19:36:39,790 - #8 c
INFO  19:36:39,791 - #24 =
INFO  19:36:39,792 - #9 10
INFO  19:36:39,792 - #28 ,
INFO  19:36:39,793 - #8 d
INFO  19:36:39,793 - #24 =
INFO  19:36:39,793 - #9 99
INFO  19:36:39,793 - #28 ,
INFO  19:36:39,794 - #8 g
INFO  19:36:39,794 - #24 =
INFO  19:36:39,794 - #9 2
INFO  19:36:39,794 - #27 ;
INFO  19:36:39,794 - #8 int
INFO  19:36:39,795 - #8 e
INFO  19:36:39,795 - #27 ;
INFO  19:36:39,796 - #20 {
INFO  19:36:39,797 - #6 void
INFO  19:36:39,797 - #8 main
INFO  19:36:39,797 - #29 (
INFO  19:36:39,798 - #30 )
INFO  19:36:39,798 - #20 {
INFO  19:36:39,798 - #8 e
INFO  19:36:39,798 - #24 =
INFO  19:36:39,798 - #9 10
INFO  19:36:39,798 - #27 ;
INFO  19:36:39,799 - #31 if
INFO  19:36:39,799 - #29 (
INFO  19:36:39,799 - #12 false
INFO  19:36:39,799 - #14 ||
INFO  19:36:39,800 - #8 e
INFO  19:36:39,800 - #42 <=
INFO  19:36:39,800 - #8 d
INFO  19:36:39,801 - #13 &&
INFO  19:36:39,802 - #8 e
INFO  19:36:39,802 - #39 ==
INFO  19:36:39,802 - #9 10
INFO  19:36:39,802 - #30 )
INFO  19:36:39,804 - #20 {
INFO  19:36:39,804 - #8 e
INFO  19:36:39,804 - #25 ++
INFO  19:36:39,805 - #27 ;
INFO  19:36:39,805 - #3 print
INFO  19:36:39,805 - #29 (
INFO  19:36:39,805 - #8 e
INFO  19:36:39,805 - #30 )
INFO  19:36:39,806 - #27 ;
INFO  19:36:39,806 - #21 }
INFO  19:36:39,806 - #32 else
INFO  19:36:39,807 - #20 {
INFO  19:36:39,807 - #8 e
INFO  19:36:39,807 - #24 =
INFO  19:36:39,807 - #8 d
INFO  19:36:39,808 - #27 ;
INFO  19:36:39,808 - #3 print
INFO  19:36:39,808 - #29 (
INFO  19:36:39,808 - #8 e
INFO  19:36:39,808 - #30 )
INFO  19:36:39,808 - #27 ;
INFO  19:36:39,808 - #21 }
INFO  19:36:39,808 - #21 }
INFO  19:36:39,809 - #21 }
INFO  19:36:39,810 - =====================SINTAKSNO_STABLO=========================
INFO  19:36:39,812 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_one(
                        Expr_term_single(
                          Term_single(
                            Factor_bool_const(
                              Bool_const_false(
                               false
                              ) [Bool_const_false]
                            ) [Factor_bool_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_one]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:36:39,813 - ==============================================================
INFO  19:36:39,828 - Pocetak obrade programa Program na liniji 1
INFO  19:36:39,828 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:36:39,829 - Deklarisana konstanta c na liniji 2
INFO  19:36:39,829 - Deklarisana konstanta d na liniji 2
INFO  19:36:39,829 - Deklarisana konstanta g na liniji 2
INFO  19:36:39,830 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:36:39,830 - Deklarisana promenljiva e na liniji 3
INFO  19:36:39,832 - Pocetak obrade metode main na liniji 5
INFO  19:36:39,832 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:36:39,832 - Zavrsetak obrade programa Program na liniji 1
INFO  19:36:39,832 - ======================TABELA_SIMBOLA==========================
INFO  19:36:39,833 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  19:36:39,833 - ==============================================================
INFO  19:36:39,833 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:36:39,833 - ==============================================================
INFO  19:36:39,833 - ======================GENERISANJE_KODA========================
INFO  19:36:39,839 - Generisanje koda uspesno zavrseno!
INFO  19:36:39,840 - Generisanje izlaznog fajla test\program.obj
INFO  19:36:39,840 - ==============================================================
INFO  19:36:51,711 - Obrada ulaznog fajla test\program.mj
INFO  19:36:51,789 - #2 program
INFO  19:36:51,789 - #8 Program
INFO  19:36:51,789 - #5 const
INFO  19:36:51,790 - #8 int
INFO  19:36:51,790 - #8 c
INFO  19:36:51,791 - #24 =
INFO  19:36:51,791 - #9 10
INFO  19:36:51,792 - #28 ,
INFO  19:36:51,793 - #8 d
INFO  19:36:51,793 - #24 =
INFO  19:36:51,793 - #9 99
INFO  19:36:51,793 - #28 ,
INFO  19:36:51,793 - #8 g
INFO  19:36:51,793 - #24 =
INFO  19:36:51,793 - #9 2
INFO  19:36:51,793 - #27 ;
INFO  19:36:51,793 - #8 int
INFO  19:36:51,795 - #8 e
INFO  19:36:51,795 - #27 ;
INFO  19:36:51,795 - #20 {
INFO  19:36:51,796 - #6 void
INFO  19:36:51,796 - #8 main
INFO  19:36:51,796 - #29 (
INFO  19:36:51,797 - #30 )
INFO  19:36:51,797 - #20 {
INFO  19:36:51,798 - #8 e
INFO  19:36:51,798 - #24 =
INFO  19:36:51,798 - #9 10
INFO  19:36:51,798 - #27 ;
INFO  19:36:51,799 - #31 if
INFO  19:36:51,799 - #29 (
INFO  19:36:51,799 - #12 false
INFO  19:36:51,800 - #14 ||
INFO  19:36:51,800 - #8 e
INFO  19:36:51,800 - #42 <=
INFO  19:36:51,801 - #8 d
INFO  19:36:51,802 - #13 &&
INFO  19:36:51,802 - #8 e
INFO  19:36:51,802 - #39 ==
INFO  19:36:51,803 - #9 10
INFO  19:36:51,803 - #30 )
INFO  19:36:51,805 - #20 {
INFO  19:36:51,805 - #8 e
INFO  19:36:51,805 - #25 ++
INFO  19:36:51,805 - #27 ;
INFO  19:36:51,805 - #3 print
INFO  19:36:51,805 - #29 (
INFO  19:36:51,806 - #8 e
INFO  19:36:51,806 - #30 )
INFO  19:36:51,806 - #27 ;
INFO  19:36:51,806 - #21 }
INFO  19:36:51,806 - #32 else
INFO  19:36:51,807 - #20 {
INFO  19:36:51,808 - #8 e
INFO  19:36:51,808 - #24 =
INFO  19:36:51,808 - #8 d
INFO  19:36:51,808 - #27 ;
INFO  19:36:51,808 - #3 print
INFO  19:36:51,808 - #29 (
INFO  19:36:51,808 - #8 e
INFO  19:36:51,808 - #30 )
INFO  19:36:51,808 - #27 ;
INFO  19:36:51,809 - #21 }
INFO  19:36:51,809 - #21 }
INFO  19:36:51,809 - #21 }
INFO  19:36:51,810 - =====================SINTAKSNO_STABLO=========================
INFO  19:36:51,812 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_one(
                        Expr_term_single(
                          Term_single(
                            Factor_bool_const(
                              Bool_const_false(
                               false
                              ) [Bool_const_false]
                            ) [Factor_bool_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_one]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_le(
                        ) [Rel_op_le]
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               d
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_eq(
                      ) [Rel_op_eq]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:36:51,813 - ==============================================================
INFO  19:36:51,826 - Pocetak obrade programa Program na liniji 1
INFO  19:36:51,826 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:36:51,827 - Deklarisana konstanta c na liniji 2
INFO  19:36:51,827 - Deklarisana konstanta d na liniji 2
INFO  19:36:51,827 - Deklarisana konstanta g na liniji 2
INFO  19:36:51,827 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:36:51,827 - Deklarisana promenljiva e na liniji 3
INFO  19:36:51,829 - Pocetak obrade metode main na liniji 5
INFO  19:36:51,829 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:36:51,829 - Zavrsetak obrade programa Program na liniji 1
INFO  19:36:51,830 - ======================TABELA_SIMBOLA==========================
INFO  19:36:51,830 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  19:36:51,830 - ==============================================================
INFO  19:36:51,830 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:36:51,830 - ==============================================================
INFO  19:36:51,830 - ======================GENERISANJE_KODA========================
INFO  19:36:51,837 - Generisanje koda uspesno zavrseno!
INFO  19:36:51,837 - Generisanje izlaznog fajla test\program.obj
INFO  19:36:51,838 - ==============================================================
INFO  19:37:02,426 - Obrada ulaznog fajla test\program.mj
INFO  19:37:02,515 - #2 program
INFO  19:37:02,515 - #8 Program
INFO  19:37:02,515 - #5 const
INFO  19:37:02,516 - #8 int
INFO  19:37:02,516 - #8 c
INFO  19:37:02,517 - #24 =
INFO  19:37:02,518 - #9 10
INFO  19:37:02,518 - #28 ,
INFO  19:37:02,519 - #8 d
INFO  19:37:02,519 - #24 =
INFO  19:37:02,519 - #9 99
INFO  19:37:02,519 - #28 ,
INFO  19:37:02,520 - #8 g
INFO  19:37:02,520 - #24 =
INFO  19:37:02,520 - #9 2
INFO  19:37:02,520 - #27 ;
INFO  19:37:02,520 - #8 int
INFO  19:37:02,521 - #8 e
INFO  19:37:02,521 - #27 ;
INFO  19:37:02,522 - #20 {
INFO  19:37:02,523 - #6 void
INFO  19:37:02,523 - #8 main
INFO  19:37:02,523 - #29 (
INFO  19:37:02,524 - #30 )
INFO  19:37:02,525 - #20 {
INFO  19:37:02,525 - #8 e
INFO  19:37:02,525 - #24 =
INFO  19:37:02,525 - #9 10
INFO  19:37:02,525 - #27 ;
INFO  19:37:02,526 - #31 if
INFO  19:37:02,526 - #29 (
INFO  19:37:02,526 - #12 false
INFO  19:37:02,526 - #30 )
INFO  19:37:02,528 - #20 {
INFO  19:37:02,528 - #8 e
INFO  19:37:02,528 - #25 ++
INFO  19:37:02,528 - #27 ;
INFO  19:37:02,528 - #3 print
INFO  19:37:02,529 - #29 (
INFO  19:37:02,529 - #8 e
INFO  19:37:02,529 - #30 )
INFO  19:37:02,529 - #27 ;
INFO  19:37:02,529 - #21 }
INFO  19:37:02,529 - #32 else
INFO  19:37:02,530 - #20 {
INFO  19:37:02,531 - #8 e
INFO  19:37:02,531 - #24 =
INFO  19:37:02,531 - #8 d
INFO  19:37:02,531 - #27 ;
INFO  19:37:02,531 - #3 print
INFO  19:37:02,531 - #29 (
INFO  19:37:02,531 - #8 e
INFO  19:37:02,531 - #30 )
INFO  19:37:02,531 - #27 ;
INFO  19:37:02,532 - #21 }
INFO  19:37:02,532 - #21 }
INFO  19:37:02,532 - #21 }
INFO  19:37:02,533 - =====================SINTAKSNO_STABLO=========================
INFO  19:37:02,534 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_term_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:37:02,535 - ==============================================================
INFO  19:37:02,548 - Pocetak obrade programa Program na liniji 1
INFO  19:37:02,548 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:37:02,549 - Deklarisana konstanta c na liniji 2
INFO  19:37:02,549 - Deklarisana konstanta d na liniji 2
INFO  19:37:02,549 - Deklarisana konstanta g na liniji 2
INFO  19:37:02,549 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:37:02,549 - Deklarisana promenljiva e na liniji 3
INFO  19:37:02,550 - Pocetak obrade metode main na liniji 5
INFO  19:37:02,550 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:37:02,550 - Zavrsetak obrade programa Program na liniji 1
INFO  19:37:02,551 - ======================TABELA_SIMBOLA==========================
INFO  19:37:02,551 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  19:37:02,551 - ==============================================================
INFO  19:37:02,551 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:37:02,551 - ==============================================================
INFO  19:37:02,553 - ======================GENERISANJE_KODA========================
INFO  19:37:02,558 - Generisanje koda uspesno zavrseno!
INFO  19:37:02,558 - Generisanje izlaznog fajla test\program.obj
INFO  19:37:02,558 - ==============================================================
INFO  19:37:43,559 - Obrada ulaznog fajla test\program.mj
INFO  19:37:43,644 - #2 program
INFO  19:37:43,644 - #8 Program
INFO  19:37:43,644 - #5 const
INFO  19:37:43,645 - #8 int
INFO  19:37:43,645 - #8 c
INFO  19:37:43,646 - #24 =
INFO  19:37:43,646 - #9 10
INFO  19:37:43,646 - #28 ,
INFO  19:37:43,647 - #8 d
INFO  19:37:43,647 - #24 =
INFO  19:37:43,647 - #9 99
INFO  19:37:43,647 - #28 ,
INFO  19:37:43,648 - #8 g
INFO  19:37:43,648 - #24 =
INFO  19:37:43,648 - #9 2
INFO  19:37:43,648 - #27 ;
INFO  19:37:43,648 - #8 int
INFO  19:37:43,649 - #8 e
INFO  19:37:43,649 - #27 ;
INFO  19:37:43,650 - #20 {
INFO  19:37:43,651 - #6 void
INFO  19:37:43,651 - #8 main
INFO  19:37:43,651 - #29 (
INFO  19:37:43,652 - #30 )
INFO  19:37:43,652 - #20 {
INFO  19:37:43,652 - #8 e
INFO  19:37:43,652 - #24 =
INFO  19:37:43,652 - #9 10
INFO  19:37:43,652 - #27 ;
INFO  19:37:43,653 - #31 if
INFO  19:37:43,653 - #29 (
INFO  19:37:43,653 - #8 e
INFO  19:37:43,653 - #38 >
INFO  19:37:43,653 - #9 10
INFO  19:37:43,654 - #30 )
INFO  19:37:43,657 - #20 {
INFO  19:37:43,657 - #8 e
INFO  19:37:43,657 - #25 ++
INFO  19:37:43,657 - #27 ;
INFO  19:37:43,657 - #3 print
INFO  19:37:43,657 - #29 (
INFO  19:37:43,657 - #8 e
INFO  19:37:43,657 - #30 )
INFO  19:37:43,657 - #27 ;
INFO  19:37:43,658 - #21 }
INFO  19:37:43,658 - #32 else
INFO  19:37:43,659 - #20 {
INFO  19:37:43,659 - #8 e
INFO  19:37:43,659 - #24 =
INFO  19:37:43,659 - #8 d
INFO  19:37:43,659 - #27 ;
INFO  19:37:43,659 - #3 print
INFO  19:37:43,660 - #29 (
INFO  19:37:43,660 - #8 e
INFO  19:37:43,660 - #30 )
INFO  19:37:43,660 - #27 ;
INFO  19:37:43,660 - #21 }
INFO  19:37:43,660 - #21 }
INFO  19:37:43,661 - #21 }
INFO  19:37:43,662 - =====================SINTAKSNO_STABLO=========================
INFO  19:37:43,664 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:37:43,664 - ==============================================================
INFO  19:37:43,676 - Pocetak obrade programa Program na liniji 1
INFO  19:37:43,677 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:37:43,678 - Deklarisana konstanta c na liniji 2
INFO  19:37:43,678 - Deklarisana konstanta d na liniji 2
INFO  19:37:43,678 - Deklarisana konstanta g na liniji 2
INFO  19:37:43,678 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:37:43,678 - Deklarisana promenljiva e na liniji 3
INFO  19:37:43,678 - Pocetak obrade metode main na liniji 5
INFO  19:37:43,679 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:37:43,679 - Zavrsetak obrade programa Program na liniji 1
INFO  19:37:43,679 - ======================TABELA_SIMBOLA==========================
INFO  19:37:43,680 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  19:37:43,680 - ==============================================================
INFO  19:37:43,681 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:37:43,681 - ==============================================================
INFO  19:37:43,681 - ======================GENERISANJE_KODA========================
INFO  19:37:43,686 - Generisanje koda uspesno zavrseno!
INFO  19:37:43,687 - Generisanje izlaznog fajla test\program.obj
INFO  19:37:43,687 - ==============================================================
INFO  19:37:55,002 - Obrada ulaznog fajla test\program.mj
INFO  19:37:55,100 - #2 program
INFO  19:37:55,100 - #8 Program
INFO  19:37:55,100 - #5 const
INFO  19:37:55,101 - #8 int
INFO  19:37:55,101 - #8 c
INFO  19:37:55,102 - #24 =
INFO  19:37:55,102 - #9 10
INFO  19:37:55,102 - #28 ,
INFO  19:37:55,104 - #8 d
INFO  19:37:55,104 - #24 =
INFO  19:37:55,104 - #9 99
INFO  19:37:55,104 - #28 ,
INFO  19:37:55,104 - #8 g
INFO  19:37:55,105 - #24 =
INFO  19:37:55,105 - #9 2
INFO  19:37:55,105 - #27 ;
INFO  19:37:55,105 - #8 int
INFO  19:37:55,106 - #8 e
INFO  19:37:55,107 - #27 ;
INFO  19:37:55,107 - #20 {
INFO  19:37:55,108 - #6 void
INFO  19:37:55,108 - #8 main
INFO  19:37:55,109 - #29 (
INFO  19:37:55,109 - #30 )
INFO  19:37:55,110 - #20 {
INFO  19:37:55,110 - #8 e
INFO  19:37:55,110 - #24 =
INFO  19:37:55,111 - #9 10
INFO  19:37:55,111 - #27 ;
INFO  19:37:55,111 - #31 if
INFO  19:37:55,112 - #29 (
INFO  19:37:55,112 - #12 false
INFO  19:37:55,112 - #30 )
INFO  19:37:55,114 - #20 {
INFO  19:37:55,114 - #8 e
INFO  19:37:55,114 - #25 ++
INFO  19:37:55,114 - #27 ;
INFO  19:37:55,114 - #3 print
INFO  19:37:55,115 - #29 (
INFO  19:37:55,115 - #8 e
INFO  19:37:55,115 - #30 )
INFO  19:37:55,115 - #27 ;
INFO  19:37:55,115 - #21 }
INFO  19:37:55,115 - #32 else
INFO  19:37:55,116 - #20 {
INFO  19:37:55,117 - #8 e
INFO  19:37:55,117 - #24 =
INFO  19:37:55,117 - #8 d
INFO  19:37:55,117 - #27 ;
INFO  19:37:55,117 - #3 print
INFO  19:37:55,117 - #29 (
INFO  19:37:55,117 - #8 e
INFO  19:37:55,117 - #30 )
INFO  19:37:55,117 - #27 ;
INFO  19:37:55,118 - #21 }
INFO  19:37:55,118 - #21 }
INFO  19:37:55,118 - #21 }
INFO  19:37:55,119 - =====================SINTAKSNO_STABLO=========================
INFO  19:37:55,120 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_term_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:37:55,122 - ==============================================================
INFO  19:37:55,135 - Pocetak obrade programa Program na liniji 1
INFO  19:37:55,136 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:37:55,137 - Deklarisana konstanta c na liniji 2
INFO  19:37:55,137 - Deklarisana konstanta d na liniji 2
INFO  19:37:55,137 - Deklarisana konstanta g na liniji 2
INFO  19:37:55,137 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:37:55,137 - Deklarisana promenljiva e na liniji 3
INFO  19:37:55,138 - Pocetak obrade metode main na liniji 5
INFO  19:37:55,139 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:37:55,139 - Zavrsetak obrade programa Program na liniji 1
INFO  19:37:55,139 - ======================TABELA_SIMBOLA==========================
INFO  19:37:55,139 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  19:37:55,140 - ==============================================================
INFO  19:37:55,140 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:37:55,140 - ==============================================================
INFO  19:37:55,142 - ======================GENERISANJE_KODA========================
INFO  19:37:55,148 - Generisanje koda uspesno zavrseno!
INFO  19:37:55,148 - Generisanje izlaznog fajla test\program.obj
INFO  19:37:55,148 - ==============================================================
INFO  19:52:07,974 - Obrada ulaznog fajla test\program.mj
INFO  19:52:08,069 - #2 program
INFO  19:52:08,069 - #8 Program
INFO  19:52:08,069 - #5 const
INFO  19:52:08,070 - #8 int
INFO  19:52:08,070 - #8 c
INFO  19:52:08,072 - #24 =
INFO  19:52:08,072 - #9 10
INFO  19:52:08,072 - #28 ,
INFO  19:52:08,073 - #8 d
INFO  19:52:08,073 - #24 =
INFO  19:52:08,073 - #9 99
INFO  19:52:08,073 - #28 ,
INFO  19:52:08,073 - #8 g
INFO  19:52:08,074 - #24 =
INFO  19:52:08,074 - #9 2
INFO  19:52:08,074 - #27 ;
INFO  19:52:08,074 - #8 int
INFO  19:52:08,075 - #8 e
INFO  19:52:08,075 - #27 ;
INFO  19:52:08,076 - #20 {
INFO  19:52:08,077 - #6 void
INFO  19:52:08,077 - #8 main
INFO  19:52:08,077 - #29 (
INFO  19:52:08,078 - #30 )
INFO  19:52:08,078 - #20 {
INFO  19:52:08,078 - #8 e
INFO  19:52:08,078 - #24 =
INFO  19:52:08,079 - #9 10
INFO  19:52:08,079 - #27 ;
INFO  19:52:08,079 - #31 if
INFO  19:52:08,080 - #29 (
INFO  19:52:08,080 - #12 false
INFO  19:52:08,080 - #30 )
INFO  19:52:08,081 - #20 {
INFO  19:52:08,081 - #8 e
INFO  19:52:08,082 - #25 ++
INFO  19:52:08,082 - #27 ;
INFO  19:52:08,082 - #3 print
INFO  19:52:08,082 - #29 (
INFO  19:52:08,082 - #8 e
INFO  19:52:08,082 - #30 )
INFO  19:52:08,082 - #27 ;
INFO  19:52:08,082 - #21 }
INFO  19:52:08,083 - #32 else
INFO  19:52:08,084 - #20 {
INFO  19:52:08,084 - #8 e
INFO  19:52:08,084 - #24 =
INFO  19:52:08,084 - #8 d
INFO  19:52:08,084 - #27 ;
INFO  19:52:08,085 - #3 print
INFO  19:52:08,085 - #29 (
INFO  19:52:08,085 - #8 e
INFO  19:52:08,085 - #30 )
INFO  19:52:08,085 - #27 ;
INFO  19:52:08,085 - #21 }
INFO  19:52:08,085 - #21 }
INFO  19:52:08,085 - #21 }
INFO  19:52:08,086 - =====================SINTAKSNO_STABLO=========================
INFO  19:52:08,088 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_term_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:52:08,089 - ==============================================================
INFO  19:52:08,101 - Pocetak obrade programa Program na liniji 1
INFO  19:52:08,101 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:52:08,102 - Deklarisana konstanta c na liniji 2
INFO  19:52:08,102 - Deklarisana konstanta d na liniji 2
INFO  19:52:08,102 - Deklarisana konstanta g na liniji 2
INFO  19:52:08,102 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:52:08,102 - Deklarisana promenljiva e na liniji 3
INFO  19:52:08,103 - Pocetak obrade metode main na liniji 5
INFO  19:52:08,103 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:52:08,103 - Zavrsetak obrade programa Program na liniji 1
INFO  19:52:08,104 - ======================TABELA_SIMBOLA==========================
INFO  19:52:08,104 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  19:52:08,104 - ==============================================================
INFO  19:52:08,104 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:52:08,104 - ==============================================================
INFO  19:52:08,106 - ======================GENERISANJE_KODA========================
INFO  19:52:08,112 - Generisanje koda uspesno zavrseno!
INFO  19:52:08,113 - Generisanje izlaznog fajla test\program.obj
INFO  19:52:08,113 - ==============================================================
INFO  19:55:44,732 - Obrada ulaznog fajla test\program.mj
INFO  19:55:44,834 - #2 program
INFO  19:55:44,834 - #8 Program
INFO  19:55:44,834 - #5 const
INFO  19:55:44,836 - #8 int
INFO  19:55:44,836 - #8 c
INFO  19:55:44,837 - #24 =
INFO  19:55:44,837 - #9 10
INFO  19:55:44,838 - #28 ,
INFO  19:55:44,839 - #8 d
INFO  19:55:44,839 - #24 =
INFO  19:55:44,839 - #9 99
INFO  19:55:44,839 - #28 ,
INFO  19:55:44,840 - #8 g
INFO  19:55:44,840 - #24 =
INFO  19:55:44,840 - #9 2
INFO  19:55:44,840 - #27 ;
INFO  19:55:44,840 - #8 int
INFO  19:55:44,842 - #8 e
INFO  19:55:44,842 - #27 ;
INFO  19:55:44,842 - #20 {
INFO  19:55:44,844 - #6 void
INFO  19:55:44,844 - #8 main
INFO  19:55:44,844 - #29 (
INFO  19:55:44,845 - #30 )
INFO  19:55:44,845 - #20 {
INFO  19:55:44,845 - #8 e
INFO  19:55:44,845 - #24 =
INFO  19:55:44,845 - #9 10
INFO  19:55:44,846 - #27 ;
INFO  19:55:44,846 - #31 if
INFO  19:55:44,846 - #29 (
INFO  19:55:44,847 - #12 false
INFO  19:55:44,847 - #14 ||
INFO  19:55:44,847 - #8 e
INFO  19:55:44,848 - #38 >
INFO  19:55:44,848 - #9 10
INFO  19:55:44,850 - #30 )
INFO  19:55:44,852 - #20 {
INFO  19:55:44,852 - #8 e
INFO  19:55:44,852 - #25 ++
INFO  19:55:44,852 - #27 ;
INFO  19:55:44,852 - #3 print
INFO  19:55:44,852 - #29 (
INFO  19:55:44,852 - #8 e
INFO  19:55:44,852 - #30 )
INFO  19:55:44,852 - #27 ;
INFO  19:55:44,853 - #21 }
INFO  19:55:44,853 - #32 else
INFO  19:55:44,854 - #20 {
INFO  19:55:44,854 - #8 e
INFO  19:55:44,855 - #24 =
INFO  19:55:44,855 - #8 d
INFO  19:55:44,855 - #27 ;
INFO  19:55:44,855 - #3 print
INFO  19:55:44,855 - #29 (
INFO  19:55:44,855 - #8 e
INFO  19:55:44,855 - #30 )
INFO  19:55:44,855 - #27 ;
INFO  19:55:44,855 - #21 }
INFO  19:55:44,855 - #21 }
INFO  19:55:44,856 - #21 }
INFO  19:55:44,856 - =====================SINTAKSNO_STABLO=========================
INFO  19:55:44,858 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     10
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_one(
                        Expr_term_single(
                          Term_single(
                            Factor_bool_const(
                              Bool_const_false(
                               false
                              ) [Bool_const_false]
                            ) [Factor_bool_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_one]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:55:44,859 - ==============================================================
INFO  19:55:44,871 - Pocetak obrade programa Program na liniji 1
INFO  19:55:44,872 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:55:44,873 - Deklarisana konstanta c na liniji 2
INFO  19:55:44,873 - Deklarisana konstanta d na liniji 2
INFO  19:55:44,873 - Deklarisana konstanta g na liniji 2
INFO  19:55:44,873 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:55:44,873 - Deklarisana promenljiva e na liniji 3
INFO  19:55:44,874 - Pocetak obrade metode main na liniji 5
INFO  19:55:44,874 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:55:44,874 - Zavrsetak obrade programa Program na liniji 1
INFO  19:55:44,874 - ======================TABELA_SIMBOLA==========================
INFO  19:55:44,876 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  19:55:44,876 - ==============================================================
INFO  19:55:44,876 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:55:44,876 - ==============================================================
INFO  19:55:44,876 - ======================GENERISANJE_KODA========================
INFO  19:55:44,883 - Generisanje koda uspesno zavrseno!
INFO  19:55:44,883 - Generisanje izlaznog fajla test\program.obj
INFO  19:55:44,883 - ==============================================================
INFO  19:56:11,976 - Obrada ulaznog fajla test\program.mj
INFO  19:56:12,056 - #2 program
INFO  19:56:12,056 - #8 Program
INFO  19:56:12,056 - #5 const
INFO  19:56:12,058 - #8 int
INFO  19:56:12,058 - #8 c
INFO  19:56:12,059 - #24 =
INFO  19:56:12,059 - #9 10
INFO  19:56:12,059 - #28 ,
INFO  19:56:12,060 - #8 d
INFO  19:56:12,060 - #24 =
INFO  19:56:12,060 - #9 99
INFO  19:56:12,060 - #28 ,
INFO  19:56:12,061 - #8 g
INFO  19:56:12,061 - #24 =
INFO  19:56:12,061 - #9 2
INFO  19:56:12,061 - #27 ;
INFO  19:56:12,061 - #8 int
INFO  19:56:12,062 - #8 e
INFO  19:56:12,062 - #27 ;
INFO  19:56:12,063 - #20 {
INFO  19:56:12,064 - #6 void
INFO  19:56:12,064 - #8 main
INFO  19:56:12,064 - #29 (
INFO  19:56:12,065 - #30 )
INFO  19:56:12,065 - #20 {
INFO  19:56:12,066 - #8 e
INFO  19:56:12,066 - #24 =
INFO  19:56:12,066 - #9 0
INFO  19:56:12,066 - #27 ;
INFO  19:56:12,067 - #31 if
INFO  19:56:12,067 - #29 (
INFO  19:56:12,067 - #11 true
INFO  19:56:12,067 - #13 &&
INFO  19:56:12,068 - #8 e
INFO  19:56:12,068 - #38 >
INFO  19:56:12,068 - #9 10
INFO  19:56:12,069 - #30 )
INFO  19:56:12,070 - #20 {
INFO  19:56:12,070 - #8 e
INFO  19:56:12,071 - #25 ++
INFO  19:56:12,071 - #27 ;
INFO  19:56:12,071 - #3 print
INFO  19:56:12,071 - #29 (
INFO  19:56:12,071 - #8 e
INFO  19:56:12,071 - #30 )
INFO  19:56:12,071 - #27 ;
INFO  19:56:12,071 - #21 }
INFO  19:56:12,072 - #32 else
INFO  19:56:12,073 - #20 {
INFO  19:56:12,073 - #8 e
INFO  19:56:12,074 - #24 =
INFO  19:56:12,074 - #8 d
INFO  19:56:12,074 - #27 ;
INFO  19:56:12,074 - #3 print
INFO  19:56:12,074 - #29 (
INFO  19:56:12,074 - #8 e
INFO  19:56:12,074 - #30 )
INFO  19:56:12,075 - #27 ;
INFO  19:56:12,075 - #21 }
INFO  19:56:12,075 - #21 }
INFO  19:56:12,075 - #21 }
INFO  19:56:12,076 - =====================SINTAKSNO_STABLO=========================
INFO  19:56:12,078 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition(
                Condition_one(
                  Cond_term_two(
                    Cond_term_one(
                      Cond_fact_one(
                        Expr_term_single(
                          Term_single(
                            Factor_bool_const(
                              Bool_const_true(
                               true
                              ) [Bool_const_true]
                            ) [Factor_bool_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_one]
                    ) [Cond_term_one]
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_two]
                ) [Condition_one]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:56:12,079 - ==============================================================
INFO  19:56:12,091 - Pocetak obrade programa Program na liniji 1
INFO  19:56:12,092 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:56:12,093 - Deklarisana konstanta c na liniji 2
INFO  19:56:12,093 - Deklarisana konstanta d na liniji 2
INFO  19:56:12,093 - Deklarisana konstanta g na liniji 2
INFO  19:56:12,093 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:56:12,093 - Deklarisana promenljiva e na liniji 3
INFO  19:56:12,094 - Pocetak obrade metode main na liniji 5
INFO  19:56:12,094 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:56:12,094 - Zavrsetak obrade programa Program na liniji 1
INFO  19:56:12,094 - ======================TABELA_SIMBOLA==========================
INFO  19:56:12,096 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  19:56:12,096 - ==============================================================
INFO  19:56:12,096 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:56:12,096 - ==============================================================
INFO  19:56:12,096 - ======================GENERISANJE_KODA========================
INFO  19:56:12,102 - Generisanje koda uspesno zavrseno!
INFO  19:56:12,103 - Generisanje izlaznog fajla test\program.obj
INFO  19:56:12,103 - ==============================================================
INFO  19:56:31,790 - Obrada ulaznog fajla test\program.mj
INFO  19:56:31,872 - #2 program
INFO  19:56:31,873 - #8 Program
INFO  19:56:31,873 - #5 const
INFO  19:56:31,874 - #8 int
INFO  19:56:31,874 - #8 c
INFO  19:56:31,875 - #24 =
INFO  19:56:31,875 - #9 10
INFO  19:56:31,875 - #28 ,
INFO  19:56:31,876 - #8 d
INFO  19:56:31,877 - #24 =
INFO  19:56:31,877 - #9 99
INFO  19:56:31,877 - #28 ,
INFO  19:56:31,877 - #8 g
INFO  19:56:31,877 - #24 =
INFO  19:56:31,877 - #9 2
INFO  19:56:31,878 - #27 ;
INFO  19:56:31,878 - #8 int
INFO  19:56:31,879 - #8 e
INFO  19:56:31,879 - #27 ;
INFO  19:56:31,880 - #20 {
INFO  19:56:31,881 - #6 void
INFO  19:56:31,881 - #8 main
INFO  19:56:31,881 - #29 (
INFO  19:56:31,882 - #30 )
INFO  19:56:31,882 - #20 {
INFO  19:56:31,882 - #8 e
INFO  19:56:31,882 - #24 =
INFO  19:56:31,882 - #9 0
INFO  19:56:31,883 - #27 ;
INFO  19:56:31,883 - #31 if
INFO  19:56:31,883 - #29 (
INFO  19:56:31,884 - #11 true
INFO  19:56:31,884 - #14 ||
INFO  19:56:31,884 - #8 e
INFO  19:56:31,884 - #38 >
INFO  19:56:31,885 - #9 10
INFO  19:56:31,886 - #30 )
INFO  19:56:31,888 - #20 {
INFO  19:56:31,888 - #8 e
INFO  19:56:31,888 - #25 ++
INFO  19:56:31,888 - #27 ;
INFO  19:56:31,889 - #3 print
INFO  19:56:31,889 - #29 (
INFO  19:56:31,889 - #8 e
INFO  19:56:31,889 - #30 )
INFO  19:56:31,889 - #27 ;
INFO  19:56:31,889 - #21 }
INFO  19:56:31,891 - #32 else
INFO  19:56:31,892 - #20 {
INFO  19:56:31,892 - #8 e
INFO  19:56:31,894 - #24 =
INFO  19:56:31,894 - #8 d
INFO  19:56:31,894 - #27 ;
INFO  19:56:31,894 - #3 print
INFO  19:56:31,894 - #29 (
INFO  19:56:31,894 - #8 e
INFO  19:56:31,894 - #30 )
INFO  19:56:31,894 - #27 ;
INFO  19:56:31,894 - #21 }
INFO  19:56:31,894 - #21 }
INFO  19:56:31,895 - #21 }
INFO  19:56:31,896 - =====================SINTAKSNO_STABLO=========================
INFO  19:56:31,898 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_one(
                        Expr_term_single(
                          Term_single(
                            Factor_bool_const(
                              Bool_const_true(
                               true
                              ) [Bool_const_true]
                            ) [Factor_bool_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_one]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           10
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  19:56:31,899 - ==============================================================
INFO  19:56:31,911 - Pocetak obrade programa Program na liniji 1
INFO  19:56:31,911 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  19:56:31,912 - Deklarisana konstanta c na liniji 2
INFO  19:56:31,912 - Deklarisana konstanta d na liniji 2
INFO  19:56:31,912 - Deklarisana konstanta g na liniji 2
INFO  19:56:31,912 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  19:56:31,912 - Deklarisana promenljiva e na liniji 3
INFO  19:56:31,913 - Pocetak obrade metode main na liniji 5
INFO  19:56:31,913 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  19:56:31,913 - Zavrsetak obrade programa Program na liniji 1
INFO  19:56:31,913 - ======================TABELA_SIMBOLA==========================
INFO  19:56:31,915 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  19:56:31,915 - ==============================================================
INFO  19:56:31,916 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  19:56:31,916 - ==============================================================
INFO  19:56:31,916 - ======================GENERISANJE_KODA========================
INFO  19:56:31,922 - Generisanje koda uspesno zavrseno!
INFO  19:56:31,923 - Generisanje izlaznog fajla test\program.obj
INFO  19:56:31,923 - ==============================================================
INFO  20:00:23,800 - Obrada ulaznog fajla test\program.mj
INFO  20:00:23,878 - #2 program
INFO  20:00:23,878 - #8 Program
INFO  20:00:23,878 - #5 const
INFO  20:00:23,879 - #8 int
INFO  20:00:23,880 - #8 c
INFO  20:00:23,881 - #24 =
INFO  20:00:23,881 - #9 10
INFO  20:00:23,881 - #28 ,
INFO  20:00:23,882 - #8 d
INFO  20:00:23,882 - #24 =
INFO  20:00:23,882 - #9 99
INFO  20:00:23,882 - #28 ,
INFO  20:00:23,883 - #8 g
INFO  20:00:23,883 - #24 =
INFO  20:00:23,883 - #9 2
INFO  20:00:23,883 - #27 ;
INFO  20:00:23,883 - #8 int
INFO  20:00:23,884 - #8 e
INFO  20:00:23,885 - #27 ;
INFO  20:00:23,885 - #20 {
INFO  20:00:23,886 - #6 void
INFO  20:00:23,887 - #8 main
INFO  20:00:23,887 - #29 (
INFO  20:00:23,887 - #30 )
INFO  20:00:23,888 - #20 {
INFO  20:00:23,888 - #8 e
INFO  20:00:23,888 - #24 =
INFO  20:00:23,888 - #9 0
INFO  20:00:23,888 - #27 ;
INFO  20:00:23,889 - #31 if
INFO  20:00:23,889 - #29 (
INFO  20:00:23,890 - #8 e
INFO  20:00:23,890 - #38 >
INFO  20:00:23,890 - #9 10
INFO  20:00:23,891 - #14 ||
INFO  20:00:23,892 - #11 true
INFO  20:00:23,892 - #30 )
INFO  20:00:23,893 - #20 {
INFO  20:00:23,893 - #8 e
INFO  20:00:23,893 - #25 ++
INFO  20:00:23,893 - #27 ;
INFO  20:00:23,893 - #3 print
INFO  20:00:23,893 - #29 (
INFO  20:00:23,894 - #8 e
INFO  20:00:23,894 - #30 )
INFO  20:00:23,894 - #27 ;
INFO  20:00:23,894 - #21 }
INFO  20:00:23,894 - #32 else
INFO  20:00:23,896 - #20 {
INFO  20:00:23,896 - #8 e
INFO  20:00:23,896 - #24 =
INFO  20:00:23,896 - #8 d
INFO  20:00:23,896 - #27 ;
INFO  20:00:23,896 - #3 print
INFO  20:00:23,896 - #29 (
INFO  20:00:23,897 - #8 e
INFO  20:00:23,897 - #30 )
INFO  20:00:23,897 - #27 ;
INFO  20:00:23,897 - #21 }
INFO  20:00:23,897 - #21 }
INFO  20:00:23,897 - #21 }
INFO  20:00:23,898 - =====================SINTAKSNO_STABLO=========================
INFO  20:00:23,900 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             10
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_term_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_true(
                             true
                            ) [Bool_const_true]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:00:23,902 - ==============================================================
INFO  20:00:23,918 - Pocetak obrade programa Program na liniji 1
INFO  20:00:23,918 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:00:23,919 - Deklarisana konstanta c na liniji 2
INFO  20:00:23,919 - Deklarisana konstanta d na liniji 2
INFO  20:00:23,919 - Deklarisana konstanta g na liniji 2
INFO  20:00:23,919 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:00:23,919 - Deklarisana promenljiva e na liniji 3
INFO  20:00:23,921 - Pocetak obrade metode main na liniji 5
INFO  20:00:23,921 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:00:23,921 - Zavrsetak obrade programa Program na liniji 1
INFO  20:00:23,921 - ======================TABELA_SIMBOLA==========================
INFO  20:00:23,923 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:00:23,923 - ==============================================================
INFO  20:00:23,923 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:00:23,924 - ==============================================================
INFO  20:00:23,924 - ======================GENERISANJE_KODA========================
INFO  20:00:23,931 - Generisanje koda uspesno zavrseno!
INFO  20:00:23,932 - Generisanje izlaznog fajla test\program.obj
INFO  20:00:23,932 - ==============================================================
INFO  20:00:33,519 - Obrada ulaznog fajla test\program.mj
INFO  20:00:33,604 - #2 program
INFO  20:00:33,604 - #8 Program
INFO  20:00:33,605 - #5 const
INFO  20:00:33,606 - #8 int
INFO  20:00:33,606 - #8 c
INFO  20:00:33,606 - #24 =
INFO  20:00:33,607 - #9 10
INFO  20:00:33,607 - #28 ,
INFO  20:00:33,608 - #8 d
INFO  20:00:33,608 - #24 =
INFO  20:00:33,608 - #9 99
INFO  20:00:33,608 - #28 ,
INFO  20:00:33,609 - #8 g
INFO  20:00:33,609 - #24 =
INFO  20:00:33,609 - #9 2
INFO  20:00:33,609 - #27 ;
INFO  20:00:33,609 - #8 int
INFO  20:00:33,610 - #8 e
INFO  20:00:33,611 - #27 ;
INFO  20:00:33,611 - #20 {
INFO  20:00:33,612 - #6 void
INFO  20:00:33,612 - #8 main
INFO  20:00:33,612 - #29 (
INFO  20:00:33,613 - #30 )
INFO  20:00:33,613 - #20 {
INFO  20:00:33,613 - #8 e
INFO  20:00:33,613 - #24 =
INFO  20:00:33,613 - #9 0
INFO  20:00:33,613 - #27 ;
INFO  20:00:33,614 - #31 if
INFO  20:00:33,614 - #29 (
INFO  20:00:33,614 - #8 e
INFO  20:00:33,615 - #38 >
INFO  20:00:33,615 - #9 10
INFO  20:00:33,616 - #14 ||
INFO  20:00:33,616 - #12 false
INFO  20:00:33,617 - #30 )
INFO  20:00:33,618 - #20 {
INFO  20:00:33,618 - #8 e
INFO  20:00:33,618 - #25 ++
INFO  20:00:33,618 - #27 ;
INFO  20:00:33,618 - #3 print
INFO  20:00:33,618 - #29 (
INFO  20:00:33,618 - #8 e
INFO  20:00:33,618 - #30 )
INFO  20:00:33,618 - #27 ;
INFO  20:00:33,618 - #21 }
INFO  20:00:33,619 - #32 else
INFO  20:00:33,620 - #20 {
INFO  20:00:33,620 - #8 e
INFO  20:00:33,620 - #24 =
INFO  20:00:33,621 - #8 d
INFO  20:00:33,621 - #27 ;
INFO  20:00:33,621 - #3 print
INFO  20:00:33,621 - #29 (
INFO  20:00:33,621 - #8 e
INFO  20:00:33,621 - #30 )
INFO  20:00:33,621 - #27 ;
INFO  20:00:33,621 - #21 }
INFO  20:00:33,621 - #21 }
INFO  20:00:33,622 - #21 }
INFO  20:00:33,622 - =====================SINTAKSNO_STABLO=========================
INFO  20:00:33,624 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             10
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_term_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:00:33,627 - ==============================================================
INFO  20:00:33,640 - Pocetak obrade programa Program na liniji 1
INFO  20:00:33,640 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:00:33,641 - Deklarisana konstanta c na liniji 2
INFO  20:00:33,641 - Deklarisana konstanta d na liniji 2
INFO  20:00:33,641 - Deklarisana konstanta g na liniji 2
INFO  20:00:33,641 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:00:33,641 - Deklarisana promenljiva e na liniji 3
INFO  20:00:33,642 - Pocetak obrade metode main na liniji 5
INFO  20:00:33,643 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:00:33,643 - Zavrsetak obrade programa Program na liniji 1
INFO  20:00:33,643 - ======================TABELA_SIMBOLA==========================
INFO  20:00:33,644 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:00:33,645 - ==============================================================
INFO  20:00:33,645 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:00:33,645 - ==============================================================
INFO  20:00:33,645 - ======================GENERISANJE_KODA========================
INFO  20:00:33,651 - Generisanje koda uspesno zavrseno!
INFO  20:00:33,651 - Generisanje izlaznog fajla test\program.obj
INFO  20:00:33,651 - ==============================================================
INFO  20:00:45,728 - Obrada ulaznog fajla test\program.mj
INFO  20:00:45,807 - #2 program
INFO  20:00:45,808 - #8 Program
INFO  20:00:45,808 - #5 const
INFO  20:00:45,809 - #8 int
INFO  20:00:45,809 - #8 c
INFO  20:00:45,810 - #24 =
INFO  20:00:45,810 - #9 10
INFO  20:00:45,810 - #28 ,
INFO  20:00:45,811 - #8 d
INFO  20:00:45,811 - #24 =
INFO  20:00:45,811 - #9 99
INFO  20:00:45,811 - #28 ,
INFO  20:00:45,812 - #8 g
INFO  20:00:45,812 - #24 =
INFO  20:00:45,812 - #9 2
INFO  20:00:45,812 - #27 ;
INFO  20:00:45,812 - #8 int
INFO  20:00:45,813 - #8 e
INFO  20:00:45,813 - #27 ;
INFO  20:00:45,813 - #20 {
INFO  20:00:45,814 - #6 void
INFO  20:00:45,814 - #8 main
INFO  20:00:45,815 - #29 (
INFO  20:00:45,815 - #30 )
INFO  20:00:45,816 - #20 {
INFO  20:00:45,816 - #8 e
INFO  20:00:45,816 - #24 =
INFO  20:00:45,816 - #9 0
INFO  20:00:45,816 - #27 ;
INFO  20:00:45,817 - #31 if
INFO  20:00:45,817 - #29 (
INFO  20:00:45,817 - #8 e
INFO  20:00:45,817 - #38 >
INFO  20:00:45,818 - #9 0
INFO  20:00:45,819 - #14 ||
INFO  20:00:45,820 - #12 false
INFO  20:00:45,820 - #30 )
INFO  20:00:45,821 - #20 {
INFO  20:00:45,821 - #8 e
INFO  20:00:45,821 - #25 ++
INFO  20:00:45,821 - #27 ;
INFO  20:00:45,822 - #3 print
INFO  20:00:45,822 - #29 (
INFO  20:00:45,822 - #8 e
INFO  20:00:45,822 - #30 )
INFO  20:00:45,822 - #27 ;
INFO  20:00:45,822 - #21 }
INFO  20:00:45,822 - #32 else
INFO  20:00:45,824 - #20 {
INFO  20:00:45,824 - #8 e
INFO  20:00:45,824 - #24 =
INFO  20:00:45,824 - #8 d
INFO  20:00:45,824 - #27 ;
INFO  20:00:45,824 - #3 print
INFO  20:00:45,824 - #29 (
INFO  20:00:45,824 - #8 e
INFO  20:00:45,824 - #30 )
INFO  20:00:45,825 - #27 ;
INFO  20:00:45,825 - #21 }
INFO  20:00:45,825 - #21 }
INFO  20:00:45,825 - #21 }
INFO  20:00:45,826 - =====================SINTAKSNO_STABLO=========================
INFO  20:00:45,828 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_gt(
                        ) [Rel_op_gt]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_term_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:00:45,828 - ==============================================================
INFO  20:00:45,840 - Pocetak obrade programa Program na liniji 1
INFO  20:00:45,841 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:00:45,841 - Deklarisana konstanta c na liniji 2
INFO  20:00:45,841 - Deklarisana konstanta d na liniji 2
INFO  20:00:45,842 - Deklarisana konstanta g na liniji 2
INFO  20:00:45,842 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:00:45,842 - Deklarisana promenljiva e na liniji 3
INFO  20:00:45,842 - Pocetak obrade metode main na liniji 5
INFO  20:00:45,843 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:00:45,843 - Zavrsetak obrade programa Program na liniji 1
INFO  20:00:45,843 - ======================TABELA_SIMBOLA==========================
INFO  20:00:45,845 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:00:45,845 - ==============================================================
INFO  20:00:45,845 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:00:45,845 - ==============================================================
INFO  20:00:45,845 - ======================GENERISANJE_KODA========================
INFO  20:00:45,851 - Generisanje koda uspesno zavrseno!
INFO  20:00:45,851 - Generisanje izlaznog fajla test\program.obj
INFO  20:00:45,851 - ==============================================================
INFO  20:00:58,498 - Obrada ulaznog fajla test\program.mj
INFO  20:00:58,610 - #2 program
INFO  20:00:58,610 - #8 Program
INFO  20:00:58,610 - #5 const
INFO  20:00:58,611 - #8 int
INFO  20:00:58,611 - #8 c
INFO  20:00:58,612 - #24 =
INFO  20:00:58,612 - #9 10
INFO  20:00:58,613 - #28 ,
INFO  20:00:58,614 - #8 d
INFO  20:00:58,614 - #24 =
INFO  20:00:58,614 - #9 99
INFO  20:00:58,615 - #28 ,
INFO  20:00:58,615 - #8 g
INFO  20:00:58,615 - #24 =
INFO  20:00:58,615 - #9 2
INFO  20:00:58,615 - #27 ;
INFO  20:00:58,615 - #8 int
INFO  20:00:58,618 - #8 e
INFO  20:00:58,618 - #27 ;
INFO  20:00:58,619 - #20 {
INFO  20:00:58,621 - #6 void
INFO  20:00:58,621 - #8 main
INFO  20:00:58,621 - #29 (
INFO  20:00:58,622 - #30 )
INFO  20:00:58,622 - #20 {
INFO  20:00:58,622 - #8 e
INFO  20:00:58,622 - #24 =
INFO  20:00:58,623 - #9 0
INFO  20:00:58,623 - #27 ;
INFO  20:00:58,624 - #31 if
INFO  20:00:58,624 - #29 (
INFO  20:00:58,624 - #8 e
INFO  20:00:58,624 - #41 >=
INFO  20:00:58,624 - #9 0
INFO  20:00:58,626 - #14 ||
INFO  20:00:58,627 - #12 false
INFO  20:00:58,627 - #30 )
INFO  20:00:58,628 - #20 {
INFO  20:00:58,629 - #8 e
INFO  20:00:58,629 - #25 ++
INFO  20:00:58,629 - #27 ;
INFO  20:00:58,629 - #3 print
INFO  20:00:58,630 - #29 (
INFO  20:00:58,630 - #8 e
INFO  20:00:58,630 - #30 )
INFO  20:00:58,630 - #27 ;
INFO  20:00:58,630 - #21 }
INFO  20:00:58,631 - #32 else
INFO  20:00:58,633 - #20 {
INFO  20:00:58,633 - #8 e
INFO  20:00:58,633 - #24 =
INFO  20:00:58,633 - #8 d
INFO  20:00:58,633 - #27 ;
INFO  20:00:58,635 - #3 print
INFO  20:00:58,635 - #29 (
INFO  20:00:58,635 - #8 e
INFO  20:00:58,635 - #30 )
INFO  20:00:58,635 - #27 ;
INFO  20:00:58,636 - #21 }
INFO  20:00:58,636 - #21 }
INFO  20:00:58,636 - #21 }
INFO  20:00:58,637 - =====================SINTAKSNO_STABLO=========================
INFO  20:00:58,639 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_if_else(
            Stmt_if_part(
              Condition(
                Condition_two(
                  Condition_one(
                    Cond_term_one(
                      Cond_fact_two(
                        Expr_term_single(
                          Term_single(
                            Factor_designator(
                              Designator_1(
                               e
                              ) [Designator_1]
                            ) [Factor_designator]
                          ) [Term_single]
                        ) [Expr_term_single]
                        Rel_op_ge(
                        ) [Rel_op_ge]
                        Expr_term_single(
                          Term_single(
                            Factor_num_const(
                             0
                            ) [Factor_num_const]
                          ) [Term_single]
                        ) [Expr_term_single]
                      ) [Cond_fact_two]
                    ) [Cond_term_one]
                  ) [Condition_one]
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_term_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_false(
                             false
                            ) [Bool_const_false]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_two]
              ) [Condition]
              Stmt_list(
                Statement_multi(
                  Statement_single(
                    Stmt_design(
                      Increment(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Increment]
                    ) [Stmt_design]
                  ) [Statement_single]
                  Stmt_print_1(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Stmt_print_1]
                ) [Statement_multi]
              ) [Stmt_list]
            ) [Stmt_if_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Assignment(
                      Designator_1(
                       e
                      ) [Designator_1]
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             d
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Assignment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
          ) [Stmt_if_else]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:00:58,640 - ==============================================================
INFO  20:00:58,657 - Pocetak obrade programa Program na liniji 1
INFO  20:00:58,657 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:00:58,658 - Deklarisana konstanta c na liniji 2
INFO  20:00:58,659 - Deklarisana konstanta d na liniji 2
INFO  20:00:58,659 - Deklarisana konstanta g na liniji 2
INFO  20:00:58,659 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:00:58,659 - Deklarisana promenljiva e na liniji 3
INFO  20:00:58,660 - Pocetak obrade metode main na liniji 5
INFO  20:00:58,661 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:00:58,661 - Zavrsetak obrade programa Program na liniji 1
INFO  20:00:58,661 - ======================TABELA_SIMBOLA==========================
INFO  20:00:58,663 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:00:58,663 - ==============================================================
INFO  20:00:58,663 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:00:58,663 - ==============================================================
INFO  20:00:58,663 - ======================GENERISANJE_KODA========================
INFO  20:00:58,672 - Generisanje koda uspesno zavrseno!
INFO  20:00:58,672 - Generisanje izlaznog fajla test\program.obj
INFO  20:00:58,672 - ==============================================================
INFO  20:02:33,613 - Obrada ulaznog fajla test\program.mj
INFO  20:02:33,697 - #2 program
INFO  20:02:33,698 - #8 Program
INFO  20:02:33,698 - #5 const
INFO  20:02:33,699 - #8 int
INFO  20:02:33,699 - #8 c
INFO  20:02:33,700 - #24 =
INFO  20:02:33,700 - #9 10
INFO  20:02:33,700 - #28 ,
INFO  20:02:33,702 - #8 d
INFO  20:02:33,702 - #24 =
INFO  20:02:33,702 - #9 99
INFO  20:02:33,702 - #28 ,
INFO  20:02:33,702 - #8 g
INFO  20:02:33,702 - #24 =
INFO  20:02:33,702 - #9 2
INFO  20:02:33,702 - #27 ;
INFO  20:02:33,703 - #8 int
INFO  20:02:33,704 - #8 e
INFO  20:02:33,704 - #27 ;
INFO  20:02:33,704 - #20 {
INFO  20:02:33,706 - #6 void
INFO  20:02:33,706 - #8 main
INFO  20:02:33,706 - #29 (
INFO  20:02:33,707 - #30 )
INFO  20:02:33,707 - #20 {
INFO  20:02:33,707 - #8 e
INFO  20:02:33,707 - #24 =
INFO  20:02:33,707 - #9 0
INFO  20:02:33,707 - #27 ;
INFO  20:02:33,708 - #33 do
INFO  20:02:33,709 - #20 {
INFO  20:02:33,709 - #8 e
INFO  20:02:33,709 - #25 ++
INFO  20:02:33,709 - #27 ;
INFO  20:02:33,710 - #3 print
INFO  20:02:33,710 - #29 (
INFO  20:02:33,710 - #8 e
INFO  20:02:33,710 - #30 )
INFO  20:02:33,710 - #27 ;
INFO  20:02:33,710 - #21 }
INFO  20:02:33,710 - #34 while
INFO  20:02:33,711 - #29 (
INFO  20:02:33,711 - #11 true
INFO  20:02:33,711 - #30 )
INFO  20:02:33,712 - #27 ;
INFO  20:02:33,712 - #21 }
INFO  20:02:33,713 - #21 }
INFO  20:02:33,713 - =====================SINTAKSNO_STABLO=========================
INFO  20:02:33,715 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_term_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:02:33,716 - ==============================================================
INFO  20:02:33,727 - Pocetak obrade programa Program na liniji 1
INFO  20:02:33,727 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:02:33,728 - Deklarisana konstanta c na liniji 2
INFO  20:02:33,728 - Deklarisana konstanta d na liniji 2
INFO  20:02:33,728 - Deklarisana konstanta g na liniji 2
INFO  20:02:33,728 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:02:33,729 - Deklarisana promenljiva e na liniji 3
INFO  20:02:33,730 - Pocetak obrade metode main na liniji 5
INFO  20:02:33,730 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:02:33,730 - Zavrsetak obrade programa Program na liniji 1
INFO  20:02:33,730 - ======================TABELA_SIMBOLA==========================
INFO  20:02:33,731 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:02:33,731 - ==============================================================
INFO  20:02:33,731 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:02:33,731 - ==============================================================
INFO  20:02:33,731 - ======================GENERISANJE_KODA========================
INFO  20:02:33,737 - Generisanje koda uspesno zavrseno!
INFO  20:02:33,737 - Generisanje izlaznog fajla test\program.obj
INFO  20:02:33,737 - ==============================================================
INFO  20:04:01,435 - Obrada ulaznog fajla test\program.mj
INFO  20:04:01,524 - #2 program
INFO  20:04:01,525 - #8 Program
INFO  20:04:01,525 - #5 const
INFO  20:04:01,528 - #8 int
INFO  20:04:01,528 - #8 c
INFO  20:04:01,530 - #24 =
INFO  20:04:01,530 - #9 10
INFO  20:04:01,530 - #28 ,
INFO  20:04:01,532 - #8 d
INFO  20:04:01,532 - #24 =
INFO  20:04:01,532 - #9 99
INFO  20:04:01,532 - #28 ,
INFO  20:04:01,532 - #8 g
INFO  20:04:01,532 - #24 =
INFO  20:04:01,532 - #9 2
INFO  20:04:01,533 - #27 ;
INFO  20:04:01,533 - #8 int
INFO  20:04:01,534 - #8 e
INFO  20:04:01,534 - #27 ;
INFO  20:04:01,534 - #20 {
INFO  20:04:01,536 - #6 void
INFO  20:04:01,536 - #8 main
INFO  20:04:01,536 - #29 (
INFO  20:04:01,537 - #30 )
INFO  20:04:01,537 - #20 {
INFO  20:04:01,538 - #8 e
INFO  20:04:01,538 - #24 =
INFO  20:04:01,538 - #9 0
INFO  20:04:01,538 - #27 ;
INFO  20:04:01,539 - #33 do
INFO  20:04:01,539 - #20 {
INFO  20:04:01,540 - #8 e
INFO  20:04:01,540 - #25 ++
INFO  20:04:01,540 - #27 ;
INFO  20:04:01,541 - #3 print
INFO  20:04:01,541 - #29 (
INFO  20:04:01,541 - #8 e
INFO  20:04:01,541 - #30 )
INFO  20:04:01,541 - #27 ;
INFO  20:04:01,541 - #21 }
INFO  20:04:01,542 - #34 while
INFO  20:04:01,543 - #29 (
INFO  20:04:01,544 - #11 true
INFO  20:04:01,545 - #30 )
INFO  20:04:01,546 - #27 ;
INFO  20:04:01,547 - #21 }
INFO  20:04:01,547 - #21 }
INFO  20:04:01,549 - =====================SINTAKSNO_STABLO=========================
INFO  20:04:01,550 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_term_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:04:01,552 - ==============================================================
INFO  20:04:01,565 - Pocetak obrade programa Program na liniji 1
INFO  20:04:01,566 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:04:01,566 - Deklarisana konstanta c na liniji 2
INFO  20:04:01,566 - Deklarisana konstanta d na liniji 2
INFO  20:04:01,567 - Deklarisana konstanta g na liniji 2
INFO  20:04:01,567 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:04:01,567 - Deklarisana promenljiva e na liniji 3
INFO  20:04:01,567 - Pocetak obrade metode main na liniji 5
INFO  20:04:01,568 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:04:01,568 - Zavrsetak obrade programa Program na liniji 1
INFO  20:04:01,568 - ======================TABELA_SIMBOLA==========================
INFO  20:04:01,568 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:04:01,569 - ==============================================================
INFO  20:04:01,569 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:04:01,569 - ==============================================================
INFO  20:04:01,569 - ======================GENERISANJE_KODA========================
INFO  20:04:01,574 - Generisanje koda uspesno zavrseno!
INFO  20:04:01,574 - Generisanje izlaznog fajla test\program.obj
INFO  20:04:01,574 - ==============================================================
INFO  20:05:15,141 - Obrada ulaznog fajla test\program.mj
INFO  20:05:15,222 - #2 program
INFO  20:05:15,222 - #8 Program
INFO  20:05:15,222 - #5 const
INFO  20:05:15,223 - #8 int
INFO  20:05:15,223 - #8 c
INFO  20:05:15,224 - #24 =
INFO  20:05:15,224 - #9 10
INFO  20:05:15,224 - #28 ,
INFO  20:05:15,226 - #8 d
INFO  20:05:15,226 - #24 =
INFO  20:05:15,226 - #9 99
INFO  20:05:15,226 - #28 ,
INFO  20:05:15,227 - #8 g
INFO  20:05:15,227 - #24 =
INFO  20:05:15,227 - #9 2
INFO  20:05:15,227 - #27 ;
INFO  20:05:15,227 - #8 int
INFO  20:05:15,228 - #8 e
INFO  20:05:15,228 - #27 ;
INFO  20:05:15,229 - #20 {
INFO  20:05:15,230 - #6 void
INFO  20:05:15,230 - #8 main
INFO  20:05:15,230 - #29 (
INFO  20:05:15,231 - #30 )
INFO  20:05:15,231 - #20 {
INFO  20:05:15,231 - #8 e
INFO  20:05:15,231 - #24 =
INFO  20:05:15,232 - #9 0
INFO  20:05:15,232 - #27 ;
INFO  20:05:15,232 - #33 do
INFO  20:05:15,233 - #20 {
INFO  20:05:15,234 - #8 e
INFO  20:05:15,234 - #25 ++
INFO  20:05:15,234 - #27 ;
INFO  20:05:15,234 - #3 print
INFO  20:05:15,234 - #29 (
INFO  20:05:15,234 - #8 e
INFO  20:05:15,234 - #30 )
INFO  20:05:15,235 - #27 ;
INFO  20:05:15,235 - #21 }
INFO  20:05:15,235 - #34 while
INFO  20:05:15,235 - #29 (
INFO  20:05:15,235 - #11 true
INFO  20:05:15,235 - #30 )
INFO  20:05:15,237 - #27 ;
INFO  20:05:15,237 - #21 }
INFO  20:05:15,238 - #21 }
INFO  20:05:15,239 - =====================SINTAKSNO_STABLO=========================
INFO  20:05:15,241 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_term_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:05:15,242 - ==============================================================
INFO  20:05:15,256 - Pocetak obrade programa Program na liniji 1
INFO  20:05:15,257 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:05:15,258 - Deklarisana konstanta c na liniji 2
INFO  20:05:15,258 - Deklarisana konstanta d na liniji 2
INFO  20:05:15,258 - Deklarisana konstanta g na liniji 2
INFO  20:05:15,258 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:05:15,258 - Deklarisana promenljiva e na liniji 3
INFO  20:05:15,259 - Pocetak obrade metode main na liniji 5
INFO  20:05:15,259 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:05:15,259 - Zavrsetak obrade programa Program na liniji 1
INFO  20:05:15,260 - ======================TABELA_SIMBOLA==========================
INFO  20:05:15,260 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:05:15,260 - ==============================================================
INFO  20:05:15,261 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:05:15,261 - ==============================================================
INFO  20:05:15,261 - ======================GENERISANJE_KODA========================
INFO  20:05:15,266 - Generisanje koda uspesno zavrseno!
INFO  20:05:15,266 - Generisanje izlaznog fajla test\program.obj
INFO  20:05:15,266 - ==============================================================
INFO  20:05:57,814 - Obrada ulaznog fajla test\program.mj
INFO  20:05:57,890 - #2 program
INFO  20:05:57,890 - #8 Program
INFO  20:05:57,890 - #5 const
INFO  20:05:57,891 - #8 int
INFO  20:05:57,891 - #8 c
INFO  20:05:57,892 - #24 =
INFO  20:05:57,892 - #9 10
INFO  20:05:57,893 - #28 ,
INFO  20:05:57,894 - #8 d
INFO  20:05:57,894 - #24 =
INFO  20:05:57,894 - #9 99
INFO  20:05:57,894 - #28 ,
INFO  20:05:57,894 - #8 g
INFO  20:05:57,894 - #24 =
INFO  20:05:57,894 - #9 2
INFO  20:05:57,894 - #27 ;
INFO  20:05:57,895 - #8 int
INFO  20:05:57,896 - #8 e
INFO  20:05:57,896 - #27 ;
INFO  20:05:57,896 - #20 {
INFO  20:05:57,897 - #6 void
INFO  20:05:57,898 - #8 main
INFO  20:05:57,898 - #29 (
INFO  20:05:57,898 - #30 )
INFO  20:05:57,899 - #20 {
INFO  20:05:57,899 - #8 e
INFO  20:05:57,899 - #24 =
INFO  20:05:57,899 - #9 0
INFO  20:05:57,899 - #27 ;
INFO  20:05:57,900 - #33 do
INFO  20:05:57,900 - #20 {
INFO  20:05:57,901 - #8 e
INFO  20:05:57,901 - #25 ++
INFO  20:05:57,901 - #27 ;
INFO  20:05:57,901 - #3 print
INFO  20:05:57,902 - #29 (
INFO  20:05:57,902 - #8 e
INFO  20:05:57,902 - #30 )
INFO  20:05:57,902 - #27 ;
INFO  20:05:57,902 - #21 }
INFO  20:05:57,902 - #34 while
INFO  20:05:57,902 - #29 (
INFO  20:05:57,902 - #8 e
INFO  20:05:57,903 - #42 <=
INFO  20:05:57,903 - #9 99
INFO  20:05:57,904 - #30 )
INFO  20:05:57,905 - #27 ;
INFO  20:05:57,905 - #21 }
INFO  20:05:57,906 - #21 }
INFO  20:05:57,908 - =====================SINTAKSNO_STABLO=========================
INFO  20:05:57,909 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         99
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:05:57,910 - ==============================================================
INFO  20:05:57,924 - Pocetak obrade programa Program na liniji 1
INFO  20:05:57,924 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:05:57,926 - Deklarisana konstanta c na liniji 2
INFO  20:05:57,926 - Deklarisana konstanta d na liniji 2
INFO  20:05:57,926 - Deklarisana konstanta g na liniji 2
INFO  20:05:57,926 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:05:57,926 - Deklarisana promenljiva e na liniji 3
INFO  20:05:57,927 - Pocetak obrade metode main na liniji 5
INFO  20:05:57,928 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:05:57,928 - Zavrsetak obrade programa Program na liniji 1
INFO  20:05:57,928 - ======================TABELA_SIMBOLA==========================
INFO  20:05:57,928 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:05:57,928 - ==============================================================
INFO  20:05:57,929 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:05:57,929 - ==============================================================
INFO  20:05:57,929 - ======================GENERISANJE_KODA========================
INFO  20:05:57,936 - Generisanje koda uspesno zavrseno!
INFO  20:05:57,936 - Generisanje izlaznog fajla test\program.obj
INFO  20:05:57,936 - ==============================================================
INFO  20:06:53,842 - Obrada ulaznog fajla test\program.mj
INFO  20:06:53,924 - #2 program
INFO  20:06:53,924 - #8 Program
INFO  20:06:53,924 - #5 const
INFO  20:06:53,925 - #8 int
INFO  20:06:53,925 - #8 c
INFO  20:06:53,926 - #24 =
INFO  20:06:53,926 - #9 10
INFO  20:06:53,927 - #28 ,
INFO  20:06:53,928 - #8 d
INFO  20:06:53,928 - #24 =
INFO  20:06:53,928 - #9 99
INFO  20:06:53,928 - #28 ,
INFO  20:06:53,928 - #8 g
INFO  20:06:53,928 - #24 =
INFO  20:06:53,929 - #9 2
INFO  20:06:53,929 - #27 ;
INFO  20:06:53,929 - #8 int
INFO  20:06:53,930 - #8 e
INFO  20:06:53,930 - #27 ;
INFO  20:06:53,931 - #20 {
INFO  20:06:53,932 - #6 void
INFO  20:06:53,932 - #8 main
INFO  20:06:53,932 - #29 (
INFO  20:06:53,933 - #30 )
INFO  20:06:53,933 - #20 {
INFO  20:06:53,933 - #8 e
INFO  20:06:53,933 - #24 =
INFO  20:06:53,934 - #9 0
INFO  20:06:53,934 - #27 ;
INFO  20:06:53,934 - #33 do
INFO  20:06:53,935 - #20 {
INFO  20:06:53,936 - #8 e
INFO  20:06:53,936 - #25 ++
INFO  20:06:53,936 - #27 ;
INFO  20:06:53,936 - #3 print
INFO  20:06:53,936 - #29 (
INFO  20:06:53,936 - #8 e
INFO  20:06:53,936 - #30 )
INFO  20:06:53,936 - #27 ;
INFO  20:06:53,937 - #21 }
INFO  20:06:53,937 - #34 while
INFO  20:06:53,937 - #29 (
INFO  20:06:53,937 - #8 c
INFO  20:06:53,937 - #38 >
INFO  20:06:53,937 - #9 0
INFO  20:06:53,939 - #13 &&
INFO  20:06:53,940 - #8 e
INFO  20:06:53,940 - #42 <=
INFO  20:06:53,940 - #9 99
INFO  20:06:53,941 - #30 )
INFO  20:06:53,942 - #27 ;
INFO  20:06:53,942 - #21 }
INFO  20:06:53,943 - #21 }
INFO  20:06:53,943 - =====================SINTAKSNO_STABLO=========================
INFO  20:06:53,945 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         99
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:06:53,947 - ==============================================================
INFO  20:06:53,962 - Pocetak obrade programa Program na liniji 1
INFO  20:06:53,962 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:06:53,963 - Deklarisana konstanta c na liniji 2
INFO  20:06:53,963 - Deklarisana konstanta d na liniji 2
INFO  20:06:53,963 - Deklarisana konstanta g na liniji 2
INFO  20:06:53,963 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:06:53,963 - Deklarisana promenljiva e na liniji 3
INFO  20:06:53,964 - Pocetak obrade metode main na liniji 5
INFO  20:06:53,965 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:06:53,965 - Zavrsetak obrade programa Program na liniji 1
INFO  20:06:53,965 - ======================TABELA_SIMBOLA==========================
INFO  20:06:53,965 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:06:53,965 - ==============================================================
INFO  20:06:53,965 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:06:53,965 - ==============================================================
INFO  20:06:53,965 - ======================GENERISANJE_KODA========================
INFO  20:06:53,971 - Generisanje koda uspesno zavrseno!
INFO  20:06:53,972 - Generisanje izlaznog fajla test\program.obj
INFO  20:06:53,972 - ==============================================================
INFO  20:08:17,180 - Obrada ulaznog fajla test\program.mj
INFO  20:08:17,270 - #2 program
INFO  20:08:17,270 - #8 Program
INFO  20:08:17,270 - #5 const
INFO  20:08:17,271 - #8 int
INFO  20:08:17,271 - #8 c
INFO  20:08:17,272 - #24 =
INFO  20:08:17,272 - #9 10
INFO  20:08:17,273 - #28 ,
INFO  20:08:17,274 - #8 d
INFO  20:08:17,274 - #24 =
INFO  20:08:17,274 - #9 99
INFO  20:08:17,275 - #28 ,
INFO  20:08:17,275 - #8 g
INFO  20:08:17,275 - #24 =
INFO  20:08:17,275 - #9 2
INFO  20:08:17,275 - #27 ;
INFO  20:08:17,275 - #8 int
INFO  20:08:17,277 - #8 e
INFO  20:08:17,277 - #27 ;
INFO  20:08:17,277 - #20 {
INFO  20:08:17,278 - #6 void
INFO  20:08:17,278 - #8 main
INFO  20:08:17,278 - #29 (
INFO  20:08:17,279 - #30 )
INFO  20:08:17,280 - #20 {
INFO  20:08:17,280 - #8 e
INFO  20:08:17,280 - #24 =
INFO  20:08:17,280 - #9 0
INFO  20:08:17,280 - #27 ;
INFO  20:08:17,281 - #33 do
INFO  20:08:17,281 - #20 {
INFO  20:08:17,282 - #8 e
INFO  20:08:17,282 - #25 ++
INFO  20:08:17,282 - #27 ;
INFO  20:08:17,282 - #3 print
INFO  20:08:17,282 - #29 (
INFO  20:08:17,282 - #8 e
INFO  20:08:17,282 - #30 )
INFO  20:08:17,282 - #27 ;
INFO  20:08:17,283 - #21 }
INFO  20:08:17,283 - #34 while
INFO  20:08:17,283 - #29 (
INFO  20:08:17,283 - #8 c
INFO  20:08:17,283 - #38 >
INFO  20:08:17,283 - #9 0
INFO  20:08:17,285 - #13 &&
INFO  20:08:17,285 - #8 e
INFO  20:08:17,285 - #42 <=
INFO  20:08:17,285 - #9 99
INFO  20:08:17,286 - #30 )
INFO  20:08:17,288 - #27 ;
INFO  20:08:17,288 - #21 }
INFO  20:08:17,289 - #21 }
INFO  20:08:17,289 - =====================SINTAKSNO_STABLO=========================
INFO  20:08:17,291 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         99
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:08:17,292 - ==============================================================
INFO  20:08:17,303 - Pocetak obrade programa Program na liniji 1
INFO  20:08:17,303 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:08:17,304 - Deklarisana konstanta c na liniji 2
INFO  20:08:17,304 - Deklarisana konstanta d na liniji 2
INFO  20:08:17,304 - Deklarisana konstanta g na liniji 2
INFO  20:08:17,304 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:08:17,304 - Deklarisana promenljiva e na liniji 3
INFO  20:08:17,305 - Pocetak obrade metode main na liniji 5
INFO  20:08:17,306 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:08:17,306 - Zavrsetak obrade programa Program na liniji 1
INFO  20:08:17,306 - ======================TABELA_SIMBOLA==========================
INFO  20:08:17,307 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:08:17,307 - ==============================================================
INFO  20:08:17,307 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:08:17,307 - ==============================================================
INFO  20:08:17,307 - ======================GENERISANJE_KODA========================
INFO  20:08:17,313 - Generisanje koda uspesno zavrseno!
INFO  20:08:17,313 - Generisanje izlaznog fajla test\program.obj
INFO  20:08:17,313 - ==============================================================
INFO  20:08:54,862 - Obrada ulaznog fajla test\program.mj
INFO  20:08:54,942 - #2 program
INFO  20:08:54,942 - #8 Program
INFO  20:08:54,943 - #5 const
INFO  20:08:54,943 - #8 int
INFO  20:08:54,944 - #8 c
INFO  20:08:54,944 - #24 =
INFO  20:08:54,944 - #9 10
INFO  20:08:54,944 - #28 ,
INFO  20:08:54,946 - #8 d
INFO  20:08:54,946 - #24 =
INFO  20:08:54,946 - #9 99
INFO  20:08:54,946 - #28 ,
INFO  20:08:54,946 - #8 g
INFO  20:08:54,946 - #24 =
INFO  20:08:54,947 - #9 2
INFO  20:08:54,947 - #27 ;
INFO  20:08:54,947 - #8 int
INFO  20:08:54,948 - #8 e
INFO  20:08:54,948 - #27 ;
INFO  20:08:54,949 - #20 {
INFO  20:08:54,950 - #6 void
INFO  20:08:54,950 - #8 main
INFO  20:08:54,950 - #29 (
INFO  20:08:54,951 - #30 )
INFO  20:08:54,951 - #20 {
INFO  20:08:54,952 - #8 e
INFO  20:08:54,952 - #24 =
INFO  20:08:54,952 - #9 0
INFO  20:08:54,952 - #27 ;
INFO  20:08:54,953 - #33 do
INFO  20:08:54,953 - #20 {
INFO  20:08:54,954 - #8 e
INFO  20:08:54,954 - #25 ++
INFO  20:08:54,954 - #27 ;
INFO  20:08:54,955 - #3 print
INFO  20:08:54,955 - #29 (
INFO  20:08:54,955 - #8 e
INFO  20:08:54,955 - #30 )
INFO  20:08:54,955 - #27 ;
INFO  20:08:54,955 - #21 }
INFO  20:08:54,956 - #34 while
INFO  20:08:54,956 - #29 (
INFO  20:08:54,956 - #8 c
INFO  20:08:54,956 - #38 >
INFO  20:08:54,956 - #9 0
INFO  20:08:54,958 - #13 &&
INFO  20:08:54,958 - #8 e
INFO  20:08:54,958 - #42 <=
INFO  20:08:54,958 - #9 99
INFO  20:08:54,959 - #30 )
INFO  20:08:54,961 - #27 ;
INFO  20:08:54,961 - #21 }
INFO  20:08:54,961 - #21 }
INFO  20:08:54,962 - =====================SINTAKSNO_STABLO=========================
INFO  20:08:54,963 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         99
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:08:54,964 - ==============================================================
INFO  20:08:54,979 - Pocetak obrade programa Program na liniji 1
INFO  20:08:54,979 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:08:54,980 - Deklarisana konstanta c na liniji 2
INFO  20:08:54,980 - Deklarisana konstanta d na liniji 2
INFO  20:08:54,980 - Deklarisana konstanta g na liniji 2
INFO  20:08:54,980 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:08:54,981 - Deklarisana promenljiva e na liniji 3
INFO  20:08:54,982 - Pocetak obrade metode main na liniji 5
INFO  20:08:54,982 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:08:54,982 - Zavrsetak obrade programa Program na liniji 1
INFO  20:08:54,983 - ======================TABELA_SIMBOLA==========================
INFO  20:08:54,983 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:08:54,983 - ==============================================================
INFO  20:08:54,983 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:08:54,984 - ==============================================================
INFO  20:08:54,984 - ======================GENERISANJE_KODA========================
INFO  20:08:54,989 - Generisanje koda uspesno zavrseno!
INFO  20:08:54,990 - Generisanje izlaznog fajla test\program.obj
INFO  20:08:54,990 - ==============================================================
INFO  20:09:24,921 - Obrada ulaznog fajla test\program.mj
INFO  20:09:25,006 - #2 program
INFO  20:09:25,007 - #8 Program
INFO  20:09:25,007 - #5 const
INFO  20:09:25,008 - #8 int
INFO  20:09:25,008 - #8 c
INFO  20:09:25,009 - #24 =
INFO  20:09:25,009 - #9 10
INFO  20:09:25,009 - #28 ,
INFO  20:09:25,011 - #8 d
INFO  20:09:25,011 - #24 =
INFO  20:09:25,011 - #9 99
INFO  20:09:25,012 - #28 ,
INFO  20:09:25,012 - #8 g
INFO  20:09:25,012 - #24 =
INFO  20:09:25,012 - #9 2
INFO  20:09:25,012 - #27 ;
INFO  20:09:25,012 - #8 int
INFO  20:09:25,014 - #8 e
INFO  20:09:25,014 - #27 ;
INFO  20:09:25,014 - #20 {
INFO  20:09:25,015 - #6 void
INFO  20:09:25,015 - #8 main
INFO  20:09:25,015 - #29 (
INFO  20:09:25,016 - #30 )
INFO  20:09:25,016 - #20 {
INFO  20:09:25,017 - #8 e
INFO  20:09:25,017 - #24 =
INFO  20:09:25,017 - #9 0
INFO  20:09:25,017 - #27 ;
INFO  20:09:25,018 - #33 do
INFO  20:09:25,018 - #20 {
INFO  20:09:25,019 - #8 e
INFO  20:09:25,019 - #25 ++
INFO  20:09:25,019 - #27 ;
INFO  20:09:25,019 - #3 print
INFO  20:09:25,019 - #29 (
INFO  20:09:25,019 - #8 e
INFO  20:09:25,019 - #30 )
INFO  20:09:25,020 - #27 ;
INFO  20:09:25,020 - #21 }
INFO  20:09:25,020 - #34 while
INFO  20:09:25,020 - #29 (
INFO  20:09:25,020 - #8 c
INFO  20:09:25,021 - #38 >
INFO  20:09:25,021 - #9 0
INFO  20:09:25,022 - #13 &&
INFO  20:09:25,023 - #8 e
INFO  20:09:25,023 - #42 <=
INFO  20:09:25,023 - #9 99
INFO  20:09:25,024 - #30 )
INFO  20:09:25,025 - #27 ;
INFO  20:09:25,025 - #21 }
INFO  20:09:25,025 - #21 }
INFO  20:09:25,026 - =====================SINTAKSNO_STABLO=========================
INFO  20:09:25,028 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         99
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:09:25,029 - ==============================================================
INFO  20:09:25,042 - Pocetak obrade programa Program na liniji 1
INFO  20:09:25,043 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:09:25,043 - Deklarisana konstanta c na liniji 2
INFO  20:09:25,044 - Deklarisana konstanta d na liniji 2
INFO  20:09:25,044 - Deklarisana konstanta g na liniji 2
INFO  20:09:25,044 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:09:25,044 - Deklarisana promenljiva e na liniji 3
INFO  20:09:25,044 - Pocetak obrade metode main na liniji 5
INFO  20:09:25,045 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:09:25,045 - Zavrsetak obrade programa Program na liniji 1
INFO  20:09:25,045 - ======================TABELA_SIMBOLA==========================
INFO  20:09:25,045 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:09:25,046 - ==============================================================
INFO  20:09:25,046 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:09:25,046 - ==============================================================
INFO  20:09:25,046 - ======================GENERISANJE_KODA========================
INFO  20:09:25,051 - Generisanje koda uspesno zavrseno!
INFO  20:09:25,051 - Generisanje izlaznog fajla test\program.obj
INFO  20:09:25,051 - ==============================================================
INFO  20:09:52,939 - Obrada ulaznog fajla test\program.mj
INFO  20:09:53,017 - #2 program
INFO  20:09:53,017 - #8 Program
INFO  20:09:53,018 - #5 const
INFO  20:09:53,018 - #8 int
INFO  20:09:53,018 - #8 c
INFO  20:09:53,019 - #24 =
INFO  20:09:53,019 - #9 10
INFO  20:09:53,019 - #28 ,
INFO  20:09:53,020 - #8 d
INFO  20:09:53,020 - #24 =
INFO  20:09:53,021 - #9 99
INFO  20:09:53,021 - #28 ,
INFO  20:09:53,021 - #8 g
INFO  20:09:53,021 - #24 =
INFO  20:09:53,021 - #9 2
INFO  20:09:53,021 - #27 ;
INFO  20:09:53,021 - #8 int
INFO  20:09:53,022 - #8 e
INFO  20:09:53,022 - #27 ;
INFO  20:09:53,023 - #20 {
INFO  20:09:53,024 - #6 void
INFO  20:09:53,024 - #8 main
INFO  20:09:53,024 - #29 (
INFO  20:09:53,025 - #30 )
INFO  20:09:53,025 - #20 {
INFO  20:09:53,025 - #8 e
INFO  20:09:53,025 - #24 =
INFO  20:09:53,025 - #9 0
INFO  20:09:53,026 - #27 ;
INFO  20:09:53,026 - #33 do
INFO  20:09:53,026 - #20 {
INFO  20:09:53,027 - #8 e
INFO  20:09:53,027 - #25 ++
INFO  20:09:53,027 - #27 ;
INFO  20:09:53,028 - #3 print
INFO  20:09:53,028 - #29 (
INFO  20:09:53,028 - #8 e
INFO  20:09:53,028 - #30 )
INFO  20:09:53,029 - #27 ;
INFO  20:09:53,029 - #21 }
INFO  20:09:53,029 - #34 while
INFO  20:09:53,030 - #29 (
INFO  20:09:53,030 - #8 c
INFO  20:09:53,030 - #38 >
INFO  20:09:53,030 - #9 0
INFO  20:09:53,031 - #14 ||
INFO  20:09:53,032 - #8 e
INFO  20:09:53,032 - #42 <=
INFO  20:09:53,032 - #9 99
INFO  20:09:53,033 - #30 )
INFO  20:09:53,034 - #27 ;
INFO  20:09:53,034 - #21 }
INFO  20:09:53,034 - #21 }
INFO  20:09:53,035 - =====================SINTAKSNO_STABLO=========================
INFO  20:09:53,036 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             c
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_gt(
                      ) [Rel_op_gt]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           0
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         99
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:09:53,037 - ==============================================================
INFO  20:09:53,050 - Pocetak obrade programa Program na liniji 1
INFO  20:09:53,050 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:09:53,051 - Deklarisana konstanta c na liniji 2
INFO  20:09:53,052 - Deklarisana konstanta d na liniji 2
INFO  20:09:53,052 - Deklarisana konstanta g na liniji 2
INFO  20:09:53,052 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:09:53,052 - Deklarisana promenljiva e na liniji 3
INFO  20:09:53,053 - Pocetak obrade metode main na liniji 5
INFO  20:09:53,053 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:09:53,054 - Zavrsetak obrade programa Program na liniji 1
INFO  20:09:53,054 - ======================TABELA_SIMBOLA==========================
INFO  20:09:53,054 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:09:53,054 - ==============================================================
INFO  20:09:53,054 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:09:53,054 - ==============================================================
INFO  20:09:53,054 - ======================GENERISANJE_KODA========================
INFO  20:09:53,061 - Generisanje koda uspesno zavrseno!
INFO  20:09:53,061 - Generisanje izlaznog fajla test\program.obj
INFO  20:09:53,061 - ==============================================================
INFO  20:13:34,124 - Obrada ulaznog fajla test\program.mj
INFO  20:13:34,234 - #2 program
INFO  20:13:34,234 - #8 Program
INFO  20:13:34,234 - #5 const
INFO  20:13:34,235 - #8 int
INFO  20:13:34,235 - #8 c
INFO  20:13:34,236 - #24 =
INFO  20:13:34,236 - #9 10
INFO  20:13:34,236 - #28 ,
INFO  20:13:34,238 - #8 d
INFO  20:13:34,238 - #24 =
INFO  20:13:34,238 - #9 99
INFO  20:13:34,238 - #28 ,
INFO  20:13:34,238 - #8 g
INFO  20:13:34,239 - #24 =
INFO  20:13:34,239 - #9 2
INFO  20:13:34,239 - #27 ;
INFO  20:13:34,239 - #8 int
INFO  20:13:34,240 - #8 e
INFO  20:13:34,240 - #27 ;
INFO  20:13:34,240 - #20 {
INFO  20:13:34,241 - #6 void
INFO  20:13:34,242 - #8 main
INFO  20:13:34,242 - #29 (
INFO  20:13:34,242 - #30 )
INFO  20:13:34,242 - #20 {
INFO  20:13:34,243 - #8 e
INFO  20:13:34,243 - #24 =
INFO  20:13:34,243 - #9 0
INFO  20:13:34,243 - #27 ;
INFO  20:13:34,244 - #33 do
INFO  20:13:34,244 - #20 {
INFO  20:13:34,245 - #8 e
INFO  20:13:34,245 - #25 ++
INFO  20:13:34,245 - #27 ;
INFO  20:13:34,246 - #3 print
INFO  20:13:34,246 - #29 (
INFO  20:13:34,246 - #8 e
INFO  20:13:34,246 - #30 )
INFO  20:13:34,246 - #27 ;
INFO  20:13:34,246 - #21 }
INFO  20:13:34,247 - #34 while
INFO  20:13:34,247 - #29 (
INFO  20:13:34,247 - #11 true
INFO  20:13:34,247 - #30 )
INFO  20:13:34,249 - #27 ;
INFO  20:13:34,249 - #21 }
INFO  20:13:34,249 - #21 }
INFO  20:13:34,250 - =====================SINTAKSNO_STABLO=========================
INFO  20:13:34,252 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_term_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:13:34,253 - ==============================================================
INFO  20:13:34,263 - Pocetak obrade programa Program na liniji 1
INFO  20:13:34,263 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:13:34,264 - Deklarisana konstanta c na liniji 2
INFO  20:13:34,264 - Deklarisana konstanta d na liniji 2
INFO  20:13:34,264 - Deklarisana konstanta g na liniji 2
INFO  20:13:34,264 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:13:34,265 - Deklarisana promenljiva e na liniji 3
INFO  20:13:34,266 - Pocetak obrade metode main na liniji 5
INFO  20:13:34,266 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:13:34,266 - Zavrsetak obrade programa Program na liniji 1
INFO  20:13:34,266 - ======================TABELA_SIMBOLA==========================
INFO  20:13:34,267 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:13:34,267 - ==============================================================
INFO  20:13:34,267 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:13:34,267 - ==============================================================
INFO  20:13:34,267 - ======================GENERISANJE_KODA========================
INFO  20:13:34,276 - Generisanje koda uspesno zavrseno!
INFO  20:13:34,276 - Generisanje izlaznog fajla test\program.obj
INFO  20:13:34,277 - ==============================================================
INFO  20:13:55,618 - Obrada ulaznog fajla test\program.mj
INFO  20:13:55,694 - #2 program
INFO  20:13:55,694 - #8 Program
INFO  20:13:55,694 - #5 const
INFO  20:13:55,695 - #8 int
INFO  20:13:55,695 - #8 c
INFO  20:13:55,696 - #24 =
INFO  20:13:55,696 - #9 10
INFO  20:13:55,696 - #28 ,
INFO  20:13:55,697 - #8 d
INFO  20:13:55,697 - #24 =
INFO  20:13:55,697 - #9 99
INFO  20:13:55,697 - #28 ,
INFO  20:13:55,698 - #8 g
INFO  20:13:55,698 - #24 =
INFO  20:13:55,698 - #9 2
INFO  20:13:55,698 - #27 ;
INFO  20:13:55,698 - #8 int
INFO  20:13:55,699 - #8 e
INFO  20:13:55,699 - #27 ;
INFO  20:13:55,700 - #20 {
INFO  20:13:55,701 - #6 void
INFO  20:13:55,701 - #8 main
INFO  20:13:55,701 - #29 (
INFO  20:13:55,702 - #30 )
INFO  20:13:55,702 - #20 {
INFO  20:13:55,703 - #8 e
INFO  20:13:55,703 - #24 =
INFO  20:13:55,703 - #9 0
INFO  20:13:55,703 - #27 ;
INFO  20:13:55,704 - #33 do
INFO  20:13:55,704 - #20 {
INFO  20:13:55,705 - #8 e
INFO  20:13:55,705 - #25 ++
INFO  20:13:55,705 - #27 ;
INFO  20:13:55,705 - #3 print
INFO  20:13:55,705 - #29 (
INFO  20:13:55,705 - #8 e
INFO  20:13:55,705 - #30 )
INFO  20:13:55,706 - #27 ;
INFO  20:13:55,706 - #21 }
INFO  20:13:55,706 - #34 while
INFO  20:13:55,706 - #29 (
INFO  20:13:55,706 - #11 true
INFO  20:13:55,706 - #30 )
INFO  20:13:55,708 - #27 ;
INFO  20:13:55,708 - #21 }
INFO  20:13:55,709 - #21 }
INFO  20:13:55,709 - =====================SINTAKSNO_STABLO=========================
INFO  20:13:55,711 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_term_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:13:55,712 - ==============================================================
INFO  20:13:55,726 - Pocetak obrade programa Program na liniji 1
INFO  20:13:55,727 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:13:55,729 - Deklarisana konstanta c na liniji 2
INFO  20:13:55,729 - Deklarisana konstanta d na liniji 2
INFO  20:13:55,729 - Deklarisana konstanta g na liniji 2
INFO  20:13:55,729 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:13:55,730 - Deklarisana promenljiva e na liniji 3
INFO  20:13:55,731 - Pocetak obrade metode main na liniji 5
INFO  20:13:55,731 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:13:55,731 - Zavrsetak obrade programa Program na liniji 1
INFO  20:13:55,731 - ======================TABELA_SIMBOLA==========================
INFO  20:13:55,732 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:13:55,732 - ==============================================================
INFO  20:13:55,732 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:13:55,732 - ==============================================================
INFO  20:13:55,732 - ======================GENERISANJE_KODA========================
INFO  20:13:55,738 - Generisanje koda uspesno zavrseno!
INFO  20:13:55,738 - Generisanje izlaznog fajla test\program.obj
INFO  20:13:55,738 - ==============================================================
INFO  20:14:08,609 - Obrada ulaznog fajla test\program.mj
INFO  20:14:08,690 - #2 program
INFO  20:14:08,690 - #8 Program
INFO  20:14:08,690 - #5 const
INFO  20:14:08,691 - #8 int
INFO  20:14:08,691 - #8 c
INFO  20:14:08,692 - #24 =
INFO  20:14:08,692 - #9 10
INFO  20:14:08,693 - #28 ,
INFO  20:14:08,694 - #8 d
INFO  20:14:08,694 - #24 =
INFO  20:14:08,694 - #9 99
INFO  20:14:08,694 - #28 ,
INFO  20:14:08,694 - #8 g
INFO  20:14:08,695 - #24 =
INFO  20:14:08,695 - #9 2
INFO  20:14:08,695 - #27 ;
INFO  20:14:08,695 - #8 int
INFO  20:14:08,696 - #8 e
INFO  20:14:08,697 - #27 ;
INFO  20:14:08,697 - #20 {
INFO  20:14:08,698 - #6 void
INFO  20:14:08,698 - #8 main
INFO  20:14:08,698 - #29 (
INFO  20:14:08,699 - #30 )
INFO  20:14:08,700 - #20 {
INFO  20:14:08,700 - #8 e
INFO  20:14:08,700 - #24 =
INFO  20:14:08,700 - #9 0
INFO  20:14:08,700 - #27 ;
INFO  20:14:08,701 - #33 do
INFO  20:14:08,701 - #20 {
INFO  20:14:08,702 - #8 e
INFO  20:14:08,702 - #25 ++
INFO  20:14:08,702 - #27 ;
INFO  20:14:08,702 - #3 print
INFO  20:14:08,702 - #29 (
INFO  20:14:08,702 - #8 e
INFO  20:14:08,703 - #30 )
INFO  20:14:08,703 - #27 ;
INFO  20:14:08,703 - #21 }
INFO  20:14:08,703 - #34 while
INFO  20:14:08,703 - #29 (
INFO  20:14:08,703 - #11 true
INFO  20:14:08,703 - #30 )
INFO  20:14:08,705 - #27 ;
INFO  20:14:08,705 - #21 }
INFO  20:14:08,705 - #21 }
INFO  20:14:08,706 - =====================SINTAKSNO_STABLO=========================
INFO  20:14:08,707 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    Expr_term_single(
                      Term_single(
                        Factor_bool_const(
                          Bool_const_true(
                           true
                          ) [Bool_const_true]
                        ) [Factor_bool_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:14:08,708 - ==============================================================
INFO  20:14:08,720 - Pocetak obrade programa Program na liniji 1
INFO  20:14:08,721 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:14:08,721 - Deklarisana konstanta c na liniji 2
INFO  20:14:08,722 - Deklarisana konstanta d na liniji 2
INFO  20:14:08,722 - Deklarisana konstanta g na liniji 2
INFO  20:14:08,722 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:14:08,722 - Deklarisana promenljiva e na liniji 3
INFO  20:14:08,722 - Pocetak obrade metode main na liniji 5
INFO  20:14:08,723 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:14:08,723 - Zavrsetak obrade programa Program na liniji 1
INFO  20:14:08,723 - ======================TABELA_SIMBOLA==========================
INFO  20:14:08,724 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:14:08,724 - ==============================================================
INFO  20:14:08,724 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:14:08,724 - ==============================================================
INFO  20:14:08,724 - ======================GENERISANJE_KODA========================
INFO  20:14:08,729 - Generisanje koda uspesno zavrseno!
INFO  20:14:08,730 - Generisanje izlaznog fajla test\program.obj
INFO  20:14:08,730 - ==============================================================
INFO  20:14:58,549 - Obrada ulaznog fajla test\program.mj
INFO  20:14:58,636 - #2 program
INFO  20:14:58,636 - #8 Program
INFO  20:14:58,636 - #5 const
INFO  20:14:58,637 - #8 int
INFO  20:14:58,638 - #8 c
INFO  20:14:58,638 - #24 =
INFO  20:14:58,639 - #9 10
INFO  20:14:58,639 - #28 ,
INFO  20:14:58,640 - #8 d
INFO  20:14:58,640 - #24 =
INFO  20:14:58,640 - #9 99
INFO  20:14:58,640 - #28 ,
INFO  20:14:58,641 - #8 g
INFO  20:14:58,641 - #24 =
INFO  20:14:58,641 - #9 2
INFO  20:14:58,641 - #27 ;
INFO  20:14:58,641 - #8 int
INFO  20:14:58,642 - #8 e
INFO  20:14:58,643 - #27 ;
INFO  20:14:58,643 - #20 {
INFO  20:14:58,644 - #6 void
INFO  20:14:58,644 - #8 main
INFO  20:14:58,644 - #29 (
INFO  20:14:58,645 - #30 )
INFO  20:14:58,645 - #20 {
INFO  20:14:58,646 - #8 e
INFO  20:14:58,646 - #24 =
INFO  20:14:58,646 - #9 0
INFO  20:14:58,646 - #27 ;
INFO  20:14:58,647 - #33 do
INFO  20:14:58,647 - #20 {
INFO  20:14:58,648 - #8 e
INFO  20:14:58,648 - #25 ++
INFO  20:14:58,648 - #27 ;
INFO  20:14:58,648 - #3 print
INFO  20:14:58,648 - #29 (
INFO  20:14:58,649 - #8 e
INFO  20:14:58,649 - #30 )
INFO  20:14:58,649 - #27 ;
INFO  20:14:58,649 - #21 }
INFO  20:14:58,650 - #34 while
INFO  20:14:58,650 - #29 (
INFO  20:14:58,651 - #11 true
INFO  20:14:58,651 - #14 ||
INFO  20:14:58,651 - #8 e
INFO  20:14:58,652 - #40 <
INFO  20:14:58,652 - #9 0
INFO  20:14:58,653 - #30 )
INFO  20:14:58,654 - #27 ;
INFO  20:14:58,655 - #21 }
INFO  20:14:58,655 - #21 }
INFO  20:14:58,656 - =====================SINTAKSNO_STABLO=========================
INFO  20:14:58,660 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_term_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_true(
                             true
                            ) [Bool_const_true]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:14:58,660 - ==============================================================
INFO  20:14:58,673 - Pocetak obrade programa Program na liniji 1
INFO  20:14:58,673 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:14:58,674 - Deklarisana konstanta c na liniji 2
INFO  20:14:58,674 - Deklarisana konstanta d na liniji 2
INFO  20:14:58,674 - Deklarisana konstanta g na liniji 2
INFO  20:14:58,674 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:14:58,674 - Deklarisana promenljiva e na liniji 3
INFO  20:14:58,675 - Pocetak obrade metode main na liniji 5
INFO  20:14:58,675 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:14:58,676 - Zavrsetak obrade programa Program na liniji 1
INFO  20:14:58,676 - ======================TABELA_SIMBOLA==========================
INFO  20:14:58,676 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:14:58,676 - ==============================================================
INFO  20:14:58,676 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:14:58,677 - ==============================================================
INFO  20:14:58,677 - ======================GENERISANJE_KODA========================
INFO  20:14:58,684 - Generisanje koda uspesno zavrseno!
INFO  20:14:58,684 - Generisanje izlaznog fajla test\program.obj
INFO  20:14:58,684 - ==============================================================
INFO  20:15:10,324 - Obrada ulaznog fajla test\program.mj
INFO  20:15:10,403 - #2 program
INFO  20:15:10,403 - #8 Program
INFO  20:15:10,403 - #5 const
INFO  20:15:10,404 - #8 int
INFO  20:15:10,404 - #8 c
INFO  20:15:10,406 - #24 =
INFO  20:15:10,406 - #9 10
INFO  20:15:10,406 - #28 ,
INFO  20:15:10,407 - #8 d
INFO  20:15:10,407 - #24 =
INFO  20:15:10,407 - #9 99
INFO  20:15:10,407 - #28 ,
INFO  20:15:10,407 - #8 g
INFO  20:15:10,407 - #24 =
INFO  20:15:10,407 - #9 2
INFO  20:15:10,407 - #27 ;
INFO  20:15:10,408 - #8 int
INFO  20:15:10,409 - #8 e
INFO  20:15:10,409 - #27 ;
INFO  20:15:10,409 - #20 {
INFO  20:15:10,410 - #6 void
INFO  20:15:10,410 - #8 main
INFO  20:15:10,410 - #29 (
INFO  20:15:10,411 - #30 )
INFO  20:15:10,411 - #20 {
INFO  20:15:10,411 - #8 e
INFO  20:15:10,412 - #24 =
INFO  20:15:10,412 - #9 0
INFO  20:15:10,412 - #27 ;
INFO  20:15:10,412 - #33 do
INFO  20:15:10,413 - #20 {
INFO  20:15:10,414 - #8 e
INFO  20:15:10,414 - #25 ++
INFO  20:15:10,414 - #27 ;
INFO  20:15:10,414 - #3 print
INFO  20:15:10,414 - #29 (
INFO  20:15:10,414 - #8 e
INFO  20:15:10,414 - #30 )
INFO  20:15:10,415 - #27 ;
INFO  20:15:10,415 - #21 }
INFO  20:15:10,415 - #34 while
INFO  20:15:10,415 - #29 (
INFO  20:15:10,415 - #11 true
INFO  20:15:10,416 - #14 ||
INFO  20:15:10,416 - #8 e
INFO  20:15:10,416 - #40 <
INFO  20:15:10,417 - #9 0
INFO  20:15:10,418 - #30 )
INFO  20:15:10,420 - #27 ;
INFO  20:15:10,420 - #21 }
INFO  20:15:10,421 - #21 }
INFO  20:15:10,421 - =====================SINTAKSNO_STABLO=========================
INFO  20:15:10,423 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_term_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_true(
                             true
                            ) [Bool_const_true]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_lt(
                    ) [Rel_op_lt]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:15:10,424 - ==============================================================
INFO  20:15:10,438 - Pocetak obrade programa Program na liniji 1
INFO  20:15:10,439 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:15:10,440 - Deklarisana konstanta c na liniji 2
INFO  20:15:10,440 - Deklarisana konstanta d na liniji 2
INFO  20:15:10,440 - Deklarisana konstanta g na liniji 2
INFO  20:15:10,440 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:15:10,440 - Deklarisana promenljiva e na liniji 3
INFO  20:15:10,441 - Pocetak obrade metode main na liniji 5
INFO  20:15:10,441 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:15:10,441 - Zavrsetak obrade programa Program na liniji 1
INFO  20:15:10,442 - ======================TABELA_SIMBOLA==========================
INFO  20:15:10,442 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:15:10,442 - ==============================================================
INFO  20:15:10,443 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:15:10,443 - ==============================================================
INFO  20:15:10,443 - ======================GENERISANJE_KODA========================
INFO  20:15:10,448 - Generisanje koda uspesno zavrseno!
INFO  20:15:10,448 - Generisanje izlaznog fajla test\program.obj
INFO  20:15:10,449 - ==============================================================
INFO  20:15:56,609 - Obrada ulaznog fajla test\program.mj
INFO  20:15:56,691 - #2 program
INFO  20:15:56,692 - #8 Program
INFO  20:15:56,692 - #5 const
INFO  20:15:56,693 - #8 int
INFO  20:15:56,693 - #8 c
INFO  20:15:56,694 - #24 =
INFO  20:15:56,694 - #9 10
INFO  20:15:56,694 - #28 ,
INFO  20:15:56,695 - #8 d
INFO  20:15:56,695 - #24 =
INFO  20:15:56,695 - #9 99
INFO  20:15:56,695 - #28 ,
INFO  20:15:56,695 - #8 g
INFO  20:15:56,695 - #24 =
INFO  20:15:56,695 - #9 2
INFO  20:15:56,695 - #27 ;
INFO  20:15:56,696 - #8 int
INFO  20:15:56,697 - #8 e
INFO  20:15:56,697 - #27 ;
INFO  20:15:56,697 - #20 {
INFO  20:15:56,698 - #6 void
INFO  20:15:56,698 - #8 main
INFO  20:15:56,698 - #29 (
INFO  20:15:56,699 - #30 )
INFO  20:15:56,699 - #20 {
INFO  20:15:56,699 - #8 e
INFO  20:15:56,699 - #24 =
INFO  20:15:56,700 - #9 0
INFO  20:15:56,700 - #27 ;
INFO  20:15:56,700 - #33 do
INFO  20:15:56,701 - #20 {
INFO  20:15:56,701 - #8 e
INFO  20:15:56,702 - #25 ++
INFO  20:15:56,702 - #27 ;
INFO  20:15:56,702 - #3 print
INFO  20:15:56,702 - #29 (
INFO  20:15:56,702 - #8 e
INFO  20:15:56,702 - #30 )
INFO  20:15:56,703 - #27 ;
INFO  20:15:56,703 - #21 }
INFO  20:15:56,703 - #34 while
INFO  20:15:56,703 - #29 (
INFO  20:15:56,703 - #11 true
INFO  20:15:56,703 - #13 &&
INFO  20:15:56,704 - #8 e
INFO  20:15:56,704 - #42 <=
INFO  20:15:56,704 - #9 99
INFO  20:15:56,706 - #30 )
INFO  20:15:56,707 - #27 ;
INFO  20:15:56,707 - #21 }
INFO  20:15:56,708 - #21 }
INFO  20:15:56,708 - =====================SINTAKSNO_STABLO=========================
INFO  20:15:56,710 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_term_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_true(
                             true
                            ) [Bool_const_true]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         99
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:15:56,711 - ==============================================================
INFO  20:15:56,722 - Pocetak obrade programa Program na liniji 1
INFO  20:15:56,723 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:15:56,723 - Deklarisana konstanta c na liniji 2
INFO  20:15:56,723 - Deklarisana konstanta d na liniji 2
INFO  20:15:56,723 - Deklarisana konstanta g na liniji 2
INFO  20:15:56,724 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:15:56,724 - Deklarisana promenljiva e na liniji 3
INFO  20:15:56,724 - Pocetak obrade metode main na liniji 5
INFO  20:15:56,725 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:15:56,725 - Zavrsetak obrade programa Program na liniji 1
INFO  20:15:56,725 - ======================TABELA_SIMBOLA==========================
INFO  20:15:56,725 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:15:56,725 - ==============================================================
INFO  20:15:56,725 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:15:56,726 - ==============================================================
INFO  20:15:56,726 - ======================GENERISANJE_KODA========================
INFO  20:15:56,731 - Generisanje koda uspesno zavrseno!
INFO  20:15:56,732 - Generisanje izlaznog fajla test\program.obj
INFO  20:15:56,732 - ==============================================================
INFO  20:16:41,540 - Obrada ulaznog fajla test\program.mj
INFO  20:16:41,619 - #2 program
INFO  20:16:41,620 - #8 Program
INFO  20:16:41,620 - #5 const
INFO  20:16:41,621 - #8 int
INFO  20:16:41,621 - #8 c
INFO  20:16:41,622 - #24 =
INFO  20:16:41,622 - #9 10
INFO  20:16:41,622 - #28 ,
INFO  20:16:41,624 - #8 d
INFO  20:16:41,624 - #24 =
INFO  20:16:41,624 - #9 99
INFO  20:16:41,624 - #28 ,
INFO  20:16:41,624 - #8 g
INFO  20:16:41,624 - #24 =
INFO  20:16:41,624 - #9 2
INFO  20:16:41,624 - #27 ;
INFO  20:16:41,625 - #8 int
INFO  20:16:41,626 - #8 e
INFO  20:16:41,626 - #27 ;
INFO  20:16:41,627 - #20 {
INFO  20:16:41,628 - #6 void
INFO  20:16:41,628 - #8 main
INFO  20:16:41,628 - #29 (
INFO  20:16:41,629 - #30 )
INFO  20:16:41,629 - #20 {
INFO  20:16:41,630 - #8 e
INFO  20:16:41,630 - #24 =
INFO  20:16:41,630 - #9 0
INFO  20:16:41,630 - #27 ;
INFO  20:16:41,631 - #33 do
INFO  20:16:41,631 - #20 {
INFO  20:16:41,632 - #8 e
INFO  20:16:41,632 - #25 ++
INFO  20:16:41,632 - #27 ;
INFO  20:16:41,632 - #3 print
INFO  20:16:41,632 - #29 (
INFO  20:16:41,632 - #8 e
INFO  20:16:41,632 - #30 )
INFO  20:16:41,633 - #27 ;
INFO  20:16:41,633 - #21 }
INFO  20:16:41,633 - #34 while
INFO  20:16:41,633 - #29 (
INFO  20:16:41,633 - #11 true
INFO  20:16:41,633 - #14 ||
INFO  20:16:41,634 - #8 e
INFO  20:16:41,634 - #42 <=
INFO  20:16:41,634 - #9 99
INFO  20:16:41,635 - #30 )
INFO  20:16:41,636 - #27 ;
INFO  20:16:41,636 - #21 }
INFO  20:16:41,636 - #21 }
INFO  20:16:41,637 - =====================SINTAKSNO_STABLO=========================
INFO  20:16:41,639 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      Expr_term_single(
                        Term_single(
                          Factor_bool_const(
                            Bool_const_true(
                             true
                            ) [Bool_const_true]
                          ) [Factor_bool_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         99
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:16:41,640 - ==============================================================
INFO  20:16:41,654 - Pocetak obrade programa Program na liniji 1
INFO  20:16:41,655 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:16:41,655 - Deklarisana konstanta c na liniji 2
INFO  20:16:41,656 - Deklarisana konstanta d na liniji 2
INFO  20:16:41,656 - Deklarisana konstanta g na liniji 2
INFO  20:16:41,656 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:16:41,656 - Deklarisana promenljiva e na liniji 3
INFO  20:16:41,656 - Pocetak obrade metode main na liniji 5
INFO  20:16:41,657 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:16:41,657 - Zavrsetak obrade programa Program na liniji 1
INFO  20:16:41,657 - ======================TABELA_SIMBOLA==========================
INFO  20:16:41,658 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:16:41,658 - ==============================================================
INFO  20:16:41,658 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:16:41,658 - ==============================================================
INFO  20:16:41,658 - ======================GENERISANJE_KODA========================
INFO  20:16:41,663 - Generisanje koda uspesno zavrseno!
INFO  20:16:41,664 - Generisanje izlaznog fajla test\program.obj
INFO  20:16:41,664 - ==============================================================
INFO  20:17:04,493 - Obrada ulaznog fajla test\program.mj
INFO  20:17:04,573 - #2 program
INFO  20:17:04,573 - #8 Program
INFO  20:17:04,573 - #5 const
INFO  20:17:04,574 - #8 int
INFO  20:17:04,575 - #8 c
INFO  20:17:04,576 - #24 =
INFO  20:17:04,576 - #9 10
INFO  20:17:04,576 - #28 ,
INFO  20:17:04,577 - #8 d
INFO  20:17:04,577 - #24 =
INFO  20:17:04,577 - #9 99
INFO  20:17:04,577 - #28 ,
INFO  20:17:04,578 - #8 g
INFO  20:17:04,578 - #24 =
INFO  20:17:04,578 - #9 2
INFO  20:17:04,578 - #27 ;
INFO  20:17:04,578 - #8 int
INFO  20:17:04,579 - #8 e
INFO  20:17:04,579 - #27 ;
INFO  20:17:04,580 - #20 {
INFO  20:17:04,581 - #6 void
INFO  20:17:04,581 - #8 main
INFO  20:17:04,581 - #29 (
INFO  20:17:04,582 - #30 )
INFO  20:17:04,582 - #20 {
INFO  20:17:04,582 - #8 e
INFO  20:17:04,582 - #24 =
INFO  20:17:04,582 - #9 0
INFO  20:17:04,582 - #27 ;
INFO  20:17:04,583 - #33 do
INFO  20:17:04,583 - #20 {
INFO  20:17:04,584 - #8 e
INFO  20:17:04,584 - #25 ++
INFO  20:17:04,584 - #27 ;
INFO  20:17:04,584 - #3 print
INFO  20:17:04,584 - #29 (
INFO  20:17:04,585 - #8 e
INFO  20:17:04,585 - #30 )
INFO  20:17:04,585 - #27 ;
INFO  20:17:04,585 - #21 }
INFO  20:17:04,585 - #34 while
INFO  20:17:04,585 - #29 (
INFO  20:17:04,585 - #8 e
INFO  20:17:04,585 - #42 <=
INFO  20:17:04,586 - #9 99
INFO  20:17:04,587 - #30 )
INFO  20:17:04,588 - #27 ;
INFO  20:17:04,588 - #21 }
INFO  20:17:04,588 - #21 }
INFO  20:17:04,590 - =====================SINTAKSNO_STABLO=========================
INFO  20:17:04,591 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         99
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:17:04,592 - ==============================================================
INFO  20:17:04,606 - Pocetak obrade programa Program na liniji 1
INFO  20:17:04,607 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:17:04,607 - Deklarisana konstanta c na liniji 2
INFO  20:17:04,608 - Deklarisana konstanta d na liniji 2
INFO  20:17:04,608 - Deklarisana konstanta g na liniji 2
INFO  20:17:04,608 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:17:04,608 - Deklarisana promenljiva e na liniji 3
INFO  20:17:04,609 - Pocetak obrade metode main na liniji 5
INFO  20:17:04,609 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:17:04,609 - Zavrsetak obrade programa Program na liniji 1
INFO  20:17:04,609 - ======================TABELA_SIMBOLA==========================
INFO  20:17:04,610 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:17:04,610 - ==============================================================
INFO  20:17:04,610 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:17:04,610 - ==============================================================
INFO  20:17:04,610 - ======================GENERISANJE_KODA========================
INFO  20:17:04,616 - Generisanje koda uspesno zavrseno!
INFO  20:17:04,616 - Generisanje izlaznog fajla test\program.obj
INFO  20:17:04,616 - ==============================================================
INFO  20:17:27,078 - Obrada ulaznog fajla test\program.mj
INFO  20:17:27,157 - #2 program
INFO  20:17:27,157 - #8 Program
INFO  20:17:27,158 - #5 const
INFO  20:17:27,159 - #8 int
INFO  20:17:27,159 - #8 c
INFO  20:17:27,160 - #24 =
INFO  20:17:27,160 - #9 10
INFO  20:17:27,160 - #28 ,
INFO  20:17:27,161 - #8 d
INFO  20:17:27,161 - #24 =
INFO  20:17:27,161 - #9 99
INFO  20:17:27,161 - #28 ,
INFO  20:17:27,162 - #8 g
INFO  20:17:27,162 - #24 =
INFO  20:17:27,162 - #9 2
INFO  20:17:27,162 - #27 ;
INFO  20:17:27,162 - #8 int
INFO  20:17:27,164 - #8 e
INFO  20:17:27,164 - #27 ;
INFO  20:17:27,165 - #20 {
INFO  20:17:27,166 - #6 void
INFO  20:17:27,166 - #8 main
INFO  20:17:27,166 - #29 (
INFO  20:17:27,167 - #30 )
INFO  20:17:27,167 - #20 {
INFO  20:17:27,167 - #8 e
INFO  20:17:27,167 - #24 =
INFO  20:17:27,168 - #9 0
INFO  20:17:27,168 - #27 ;
INFO  20:17:27,168 - #33 do
INFO  20:17:27,169 - #20 {
INFO  20:17:27,169 - #8 e
INFO  20:17:27,170 - #25 ++
INFO  20:17:27,170 - #27 ;
INFO  20:17:27,170 - #3 print
INFO  20:17:27,170 - #29 (
INFO  20:17:27,170 - #8 e
INFO  20:17:27,170 - #30 )
INFO  20:17:27,170 - #27 ;
INFO  20:17:27,170 - #21 }
INFO  20:17:27,171 - #34 while
INFO  20:17:27,171 - #29 (
INFO  20:17:27,171 - #8 e
INFO  20:17:27,171 - #42 <=
INFO  20:17:27,171 - #9 99
INFO  20:17:27,172 - #30 )
INFO  20:17:27,174 - #27 ;
INFO  20:17:27,174 - #21 }
INFO  20:17:27,175 - #21 }
INFO  20:17:27,176 - =====================SINTAKSNO_STABLO=========================
INFO  20:17:27,177 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_le(
                    ) [Rel_op_le]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         99
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:17:27,180 - ==============================================================
INFO  20:17:27,194 - Pocetak obrade programa Program na liniji 1
INFO  20:17:27,194 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:17:27,195 - Deklarisana konstanta c na liniji 2
INFO  20:17:27,195 - Deklarisana konstanta d na liniji 2
INFO  20:17:27,195 - Deklarisana konstanta g na liniji 2
INFO  20:17:27,195 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:17:27,195 - Deklarisana promenljiva e na liniji 3
INFO  20:17:27,195 - Pocetak obrade metode main na liniji 5
INFO  20:17:27,196 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:17:27,196 - Zavrsetak obrade programa Program na liniji 1
INFO  20:17:27,196 - ======================TABELA_SIMBOLA==========================
INFO  20:17:27,196 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:17:27,197 - ==============================================================
INFO  20:17:27,197 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:17:27,197 - ==============================================================
INFO  20:17:27,197 - ======================GENERISANJE_KODA========================
INFO  20:17:27,202 - Generisanje koda uspesno zavrseno!
INFO  20:17:27,202 - Generisanje izlaznog fajla test\program.obj
INFO  20:17:27,202 - ==============================================================
INFO  20:18:03,660 - Obrada ulaznog fajla test\program.mj
INFO  20:18:03,758 - #2 program
INFO  20:18:03,758 - #8 Program
INFO  20:18:03,758 - #5 const
INFO  20:18:03,759 - #8 int
INFO  20:18:03,759 - #8 c
INFO  20:18:03,760 - #24 =
INFO  20:18:03,760 - #9 10
INFO  20:18:03,760 - #28 ,
INFO  20:18:03,761 - #8 d
INFO  20:18:03,761 - #24 =
INFO  20:18:03,761 - #9 99
INFO  20:18:03,762 - #28 ,
INFO  20:18:03,762 - #8 g
INFO  20:18:03,762 - #24 =
INFO  20:18:03,762 - #9 2
INFO  20:18:03,762 - #27 ;
INFO  20:18:03,763 - #8 int
INFO  20:18:03,764 - #8 e
INFO  20:18:03,765 - #27 ;
INFO  20:18:03,765 - #20 {
INFO  20:18:03,767 - #6 void
INFO  20:18:03,767 - #8 main
INFO  20:18:03,767 - #29 (
INFO  20:18:03,768 - #30 )
INFO  20:18:03,769 - #20 {
INFO  20:18:03,769 - #8 e
INFO  20:18:03,769 - #24 =
INFO  20:18:03,769 - #9 0
INFO  20:18:03,769 - #27 ;
INFO  20:18:03,770 - #33 do
INFO  20:18:03,770 - #20 {
INFO  20:18:03,771 - #8 e
INFO  20:18:03,771 - #25 ++
INFO  20:18:03,771 - #27 ;
INFO  20:18:03,772 - #3 print
INFO  20:18:03,772 - #29 (
INFO  20:18:03,772 - #8 e
INFO  20:18:03,772 - #30 )
INFO  20:18:03,772 - #27 ;
INFO  20:18:03,772 - #21 }
INFO  20:18:03,772 - #34 while
INFO  20:18:03,772 - #29 (
INFO  20:18:03,773 - #8 e
INFO  20:18:03,773 - #42 <=
INFO  20:18:03,773 - #9 99
INFO  20:18:03,774 - #14 ||
INFO  20:18:03,774 - #8 e
INFO  20:18:03,775 - #38 >
INFO  20:18:03,775 - #9 0
INFO  20:18:03,775 - #30 )
INFO  20:18:03,776 - #27 ;
INFO  20:18:03,776 - #21 }
INFO  20:18:03,776 - #21 }
INFO  20:18:03,777 - =====================SINTAKSNO_STABLO=========================
INFO  20:18:03,779 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_two(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           99
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                ) [Condition_one]
                Cond_term_one(
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_two]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:18:03,779 - ==============================================================
INFO  20:18:03,792 - Pocetak obrade programa Program na liniji 1
INFO  20:18:03,792 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:18:03,793 - Deklarisana konstanta c na liniji 2
INFO  20:18:03,793 - Deklarisana konstanta d na liniji 2
INFO  20:18:03,793 - Deklarisana konstanta g na liniji 2
INFO  20:18:03,793 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:18:03,793 - Deklarisana promenljiva e na liniji 3
INFO  20:18:03,794 - Pocetak obrade metode main na liniji 5
INFO  20:18:03,795 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:18:03,795 - Zavrsetak obrade programa Program na liniji 1
INFO  20:18:03,795 - ======================TABELA_SIMBOLA==========================
INFO  20:18:03,795 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:18:03,796 - ==============================================================
INFO  20:18:03,796 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:18:03,796 - ==============================================================
INFO  20:18:03,796 - ======================GENERISANJE_KODA========================
INFO  20:18:03,801 - Generisanje koda uspesno zavrseno!
INFO  20:18:03,802 - Generisanje izlaznog fajla test\program.obj
INFO  20:18:03,802 - ==============================================================
INFO  20:18:24,826 - Obrada ulaznog fajla test\program.mj
INFO  20:18:24,911 - #2 program
INFO  20:18:24,911 - #8 Program
INFO  20:18:24,911 - #5 const
INFO  20:18:24,912 - #8 int
INFO  20:18:24,912 - #8 c
INFO  20:18:24,912 - #24 =
INFO  20:18:24,913 - #9 10
INFO  20:18:24,913 - #28 ,
INFO  20:18:24,914 - #8 d
INFO  20:18:24,914 - #24 =
INFO  20:18:24,914 - #9 99
INFO  20:18:24,914 - #28 ,
INFO  20:18:24,915 - #8 g
INFO  20:18:24,915 - #24 =
INFO  20:18:24,915 - #9 2
INFO  20:18:24,915 - #27 ;
INFO  20:18:24,916 - #8 int
INFO  20:18:24,917 - #8 e
INFO  20:18:24,917 - #27 ;
INFO  20:18:24,917 - #20 {
INFO  20:18:24,918 - #6 void
INFO  20:18:24,918 - #8 main
INFO  20:18:24,919 - #29 (
INFO  20:18:24,919 - #30 )
INFO  20:18:24,919 - #20 {
INFO  20:18:24,919 - #8 e
INFO  20:18:24,920 - #24 =
INFO  20:18:24,920 - #9 0
INFO  20:18:24,920 - #27 ;
INFO  20:18:24,921 - #33 do
INFO  20:18:24,921 - #20 {
INFO  20:18:24,922 - #8 e
INFO  20:18:24,922 - #25 ++
INFO  20:18:24,922 - #27 ;
INFO  20:18:24,922 - #3 print
INFO  20:18:24,922 - #29 (
INFO  20:18:24,922 - #8 e
INFO  20:18:24,922 - #30 )
INFO  20:18:24,922 - #27 ;
INFO  20:18:24,922 - #21 }
INFO  20:18:24,923 - #34 while
INFO  20:18:24,923 - #29 (
INFO  20:18:24,923 - #8 e
INFO  20:18:24,923 - #42 <=
INFO  20:18:24,923 - #9 99
INFO  20:18:24,924 - #13 &&
INFO  20:18:24,925 - #8 e
INFO  20:18:24,925 - #38 >
INFO  20:18:24,925 - #9 0
INFO  20:18:24,926 - #30 )
INFO  20:18:24,927 - #27 ;
INFO  20:18:24,927 - #21 }
INFO  20:18:24,927 - #21 }
INFO  20:18:24,928 - =====================SINTAKSNO_STABLO=========================
INFO  20:18:24,930 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           99
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:18:24,931 - ==============================================================
INFO  20:18:24,943 - Pocetak obrade programa Program na liniji 1
INFO  20:18:24,943 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:18:24,944 - Deklarisana konstanta c na liniji 2
INFO  20:18:24,944 - Deklarisana konstanta d na liniji 2
INFO  20:18:24,944 - Deklarisana konstanta g na liniji 2
INFO  20:18:24,944 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:18:24,944 - Deklarisana promenljiva e na liniji 3
INFO  20:18:24,946 - Pocetak obrade metode main na liniji 5
INFO  20:18:24,946 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:18:24,946 - Zavrsetak obrade programa Program na liniji 1
INFO  20:18:24,946 - ======================TABELA_SIMBOLA==========================
INFO  20:18:24,947 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:18:24,947 - ==============================================================
INFO  20:18:24,947 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:18:24,947 - ==============================================================
INFO  20:18:24,947 - ======================GENERISANJE_KODA========================
INFO  20:18:24,953 - Generisanje koda uspesno zavrseno!
INFO  20:18:24,953 - Generisanje izlaznog fajla test\program.obj
INFO  20:18:24,953 - ==============================================================
INFO  20:22:25,424 - Obrada ulaznog fajla test\program.mj
INFO  20:22:25,518 - #2 program
INFO  20:22:25,519 - #8 Program
INFO  20:22:25,519 - #5 const
INFO  20:22:25,520 - #8 int
INFO  20:22:25,520 - #8 c
INFO  20:22:25,520 - #24 =
INFO  20:22:25,520 - #9 10
INFO  20:22:25,521 - #28 ,
INFO  20:22:25,521 - #8 d
INFO  20:22:25,522 - #24 =
INFO  20:22:25,522 - #9 99
INFO  20:22:25,522 - #28 ,
INFO  20:22:25,522 - #8 g
INFO  20:22:25,522 - #24 =
INFO  20:22:25,522 - #9 2
INFO  20:22:25,522 - #27 ;
INFO  20:22:25,523 - #8 int
INFO  20:22:25,524 - #8 e
INFO  20:22:25,524 - #27 ;
INFO  20:22:25,524 - #20 {
INFO  20:22:25,525 - #6 void
INFO  20:22:25,525 - #8 main
INFO  20:22:25,525 - #29 (
INFO  20:22:25,526 - #30 )
INFO  20:22:25,526 - #20 {
INFO  20:22:25,526 - #8 e
INFO  20:22:25,526 - #24 =
INFO  20:22:25,527 - #9 0
INFO  20:22:25,527 - #27 ;
INFO  20:22:25,527 - #33 do
INFO  20:22:25,528 - #20 {
INFO  20:22:25,529 - #8 e
INFO  20:22:25,529 - #25 ++
INFO  20:22:25,529 - #27 ;
INFO  20:22:25,529 - #3 print
INFO  20:22:25,529 - #29 (
INFO  20:22:25,529 - #8 e
INFO  20:22:25,529 - #30 )
INFO  20:22:25,530 - #27 ;
INFO  20:22:25,530 - #21 }
INFO  20:22:25,531 - #34 while
INFO  20:22:25,531 - #29 (
INFO  20:22:25,531 - #8 e
INFO  20:22:25,531 - #42 <=
INFO  20:22:25,531 - #9 99
INFO  20:22:25,533 - #13 &&
INFO  20:22:25,533 - #8 e
INFO  20:22:25,533 - #38 >
INFO  20:22:25,534 - #9 0
INFO  20:22:25,534 - #30 )
INFO  20:22:25,536 - #27 ;
INFO  20:22:25,536 - #21 }
INFO  20:22:25,536 - #21 }
INFO  20:22:25,537 - =====================SINTAKSNO_STABLO=========================
INFO  20:22:25,541 - 
Program_0(
  Program_name(
   Program
  ) [Program_name]
  Program_con_vars_multi(
    Program_con_vars_single(
      Part_const_decl(
        Const_declaration(
          Type(
           int
          ) [Type]
          Const_multi(
            Const_multi(
              Const_single(
                Const_part(
                 c
                  Val_Num_const(
                   10
                  ) [Val_Num_const]
                ) [Const_part]
              ) [Const_single]
              Const_part(
               d
                Val_Num_const(
                 99
                ) [Val_Num_const]
              ) [Const_part]
            ) [Const_multi]
            Const_part(
             g
              Val_Num_const(
               2
              ) [Val_Num_const]
            ) [Const_part]
          ) [Const_multi]
        ) [Const_declaration]
      ) [Part_const_decl]
    ) [Program_con_vars_single]
    Part_var_decl(
      Var_declaration(
        Type(
         int
        ) [Type]
        Var_single(
          Var_normal(
           e
          ) [Var_normal]
        ) [Var_single]
      ) [Var_declaration]
    ) [Part_var_decl]
  ) [Program_con_vars_multi]
  Program_methods_single(
    Meth_void_decl(
      Meth_void_6(
        Method_void_name(
         main
        ) [Method_void_name]
        Statement_multi(
          Statement_single(
            Stmt_design(
              Assignment(
                Designator_1(
                 e
                ) [Designator_1]
                Expr_term_single(
                  Term_single(
                    Factor_num_const(
                     0
                    ) [Factor_num_const]
                  ) [Term_single]
                ) [Expr_term_single]
              ) [Assignment]
            ) [Stmt_design]
          ) [Statement_single]
          Stmt_do_while(
            Stmt_do_while_part(
            ) [Stmt_do_while_part]
            Stmt_list(
              Statement_multi(
                Statement_single(
                  Stmt_design(
                    Increment(
                      Designator_1(
                       e
                      ) [Designator_1]
                    ) [Increment]
                  ) [Stmt_design]
                ) [Statement_single]
                Stmt_print_1(
                  Expr_term_single(
                    Term_single(
                      Factor_designator(
                        Designator_1(
                         e
                        ) [Designator_1]
                      ) [Factor_designator]
                    ) [Term_single]
                  ) [Expr_term_single]
                ) [Stmt_print_1]
              ) [Statement_multi]
            ) [Stmt_list]
            Condition(
              Condition_one(
                Cond_term_two(
                  Cond_term_one(
                    Cond_fact_two(
                      Expr_term_single(
                        Term_single(
                          Factor_designator(
                            Designator_1(
                             e
                            ) [Designator_1]
                          ) [Factor_designator]
                        ) [Term_single]
                      ) [Expr_term_single]
                      Rel_op_le(
                      ) [Rel_op_le]
                      Expr_term_single(
                        Term_single(
                          Factor_num_const(
                           99
                          ) [Factor_num_const]
                        ) [Term_single]
                      ) [Expr_term_single]
                    ) [Cond_fact_two]
                  ) [Cond_term_one]
                  Cond_fact_two(
                    Expr_term_single(
                      Term_single(
                        Factor_designator(
                          Designator_1(
                           e
                          ) [Designator_1]
                        ) [Factor_designator]
                      ) [Term_single]
                    ) [Expr_term_single]
                    Rel_op_gt(
                    ) [Rel_op_gt]
                    Expr_term_single(
                      Term_single(
                        Factor_num_const(
                         0
                        ) [Factor_num_const]
                      ) [Term_single]
                    ) [Expr_term_single]
                  ) [Cond_fact_two]
                ) [Cond_term_two]
              ) [Condition_one]
            ) [Condition]
          ) [Stmt_do_while]
        ) [Statement_multi]
      ) [Meth_void_6]
    ) [Meth_void_decl]
  ) [Program_methods_single]
) [Program_0]
INFO  20:22:25,541 - ==============================================================
INFO  20:22:25,555 - Pocetak obrade programa Program na liniji 1
INFO  20:22:25,555 - Pronadjen tip int u tabeli simbola na liniji 2
INFO  20:22:25,556 - Deklarisana konstanta c na liniji 2
INFO  20:22:25,556 - Deklarisana konstanta d na liniji 2
INFO  20:22:25,556 - Deklarisana konstanta g na liniji 2
INFO  20:22:25,556 - Pronadjen tip int u tabeli simbola na liniji 3
INFO  20:22:25,556 - Deklarisana promenljiva e na liniji 3
INFO  20:22:25,557 - Pocetak obrade metode main na liniji 5
INFO  20:22:25,558 - Zavrsetak obrade metode (procedure) main na liniji 5
INFO  20:22:25,558 - Zavrsetak obrade programa Program na liniji 1
INFO  20:22:25,558 - ======================TABELA_SIMBOLA==========================
INFO  20:22:25,559 - 
Type int: int
Type char: char
Con eol: char
Con null: 
Meth chr: char
	Param0 Var i: int
Meth ord: int
	Param0 Var ch: char
Meth len: int
	Param0 Var arr: array of none
Type bool: bool

Prog Program: none
	Con c: int
	Con d: int
	Con g: int
	Globl Var e: int
Meth main: none

INFO  20:22:25,559 - ==============================================================
INFO  20:22:25,559 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  20:22:25,559 - ==============================================================
INFO  20:22:25,560 - ======================GENERISANJE_KODA========================
INFO  20:22:25,567 - Generisanje koda uspesno zavrseno!
INFO  20:22:25,568 - Generisanje izlaznog fajla test\program.obj
INFO  20:22:25,568 - ==============================================================
