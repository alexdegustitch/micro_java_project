INFO  22:11:58,308 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatFX_Argon\workspace\MJCompiler\test\program.mj
INFO  22:11:58,314 - #33 program
INFO  22:11:58,314 - #1 Program
INFO  22:11:58,315 - #34 const
INFO  22:11:58,315 - #1 int
INFO  22:11:58,315 - #1 c
INFO  22:11:58,315 - #7 =
INFO  22:11:58,315 - #2 10
INFO  22:11:58,315 - #6 ;
INFO  22:11:58,315 - #34 const
INFO  22:11:58,315 - #1 int
INFO  22:11:58,315 - #1 d
INFO  22:11:58,315 - #7 =
INFO  22:11:58,316 - #2 99
INFO  22:11:58,316 - #14 ,
INFO  22:11:58,316 - #1 eps
INFO  22:11:58,316 - #7 =
INFO  22:11:58,316 - #2 2
INFO  22:11:58,316 - #6 ;
INFO  22:11:58,316 - #1 int
INFO  22:11:58,316 - #1 e
INFO  22:11:58,316 - #6 ;
INFO  22:11:58,317 - #29 {
INFO  22:11:58,317 - #35 void
INFO  22:11:58,317 - #1 test
INFO  22:11:58,317 - #10 (
INFO  22:11:58,317 - #11 )
INFO  22:11:58,317 - #1 int
INFO  22:11:58,317 - #1 a
INFO  22:11:58,317 - #14 ,
INFO  22:11:58,317 - #1 b
INFO  22:11:58,317 - #6 ;
INFO  22:11:58,317 - #1 bool
INFO  22:11:58,317 - #1 cond
INFO  22:11:58,317 - #6 ;
INFO  22:11:58,317 - #29 {
INFO  22:11:58,318 - #1 a
INFO  22:11:58,318 - #7 =
INFO  22:11:58,318 - #2 3
INFO  22:11:58,318 - #6 ;
INFO  22:11:58,318 - #1 b
INFO  22:11:58,318 - #7 =
INFO  22:11:58,318 - #2 5
INFO  22:11:58,318 - #6 ;
INFO  22:11:58,318 - #1 cond
INFO  22:11:58,318 - #7 =
INFO  22:11:58,318 - #4 true
INFO  22:11:58,318 - #6 ;
INFO  22:11:58,319 - #23 if
INFO  22:11:58,319 - #10 (
INFO  22:11:58,319 - #2 2
INFO  22:11:58,319 - #18 *
INFO  22:11:58,319 - #10 (
INFO  22:11:58,319 - #1 a
INFO  22:11:58,319 - #17 -
INFO  22:11:58,319 - #1 b
INFO  22:11:58,319 - #17 -
INFO  22:11:58,319 - #2 1
INFO  22:11:58,319 - #11 )
INFO  22:11:58,319 - #17 -
INFO  22:11:58,321 - #2 14
INFO  22:11:58,321 - #40 >
INFO  22:11:58,321 - #2 0
INFO  22:11:58,321 - #31 ||
INFO  22:11:58,322 - #1 cond
INFO  22:11:58,322 - #11 )
INFO  22:11:58,322 - #13 print
INFO  22:11:58,322 - #10 (
INFO  22:11:58,322 - #1 a
INFO  22:11:58,322 - #16 +
INFO  22:11:58,322 - #1 b
INFO  22:11:58,322 - #11 )
INFO  22:11:58,322 - #6 ;
INFO  22:11:58,322 - #30 }
INFO  22:11:58,322 - #1 int
INFO  22:11:58,322 - #1 max
INFO  22:11:58,322 - #10 (
INFO  22:11:58,323 - #1 int
INFO  22:11:58,323 - #1 a
INFO  22:11:58,323 - #14 ,
INFO  22:11:58,323 - #1 int
INFO  22:11:58,323 - #1 b
INFO  22:11:58,323 - #11 )
INFO  22:11:58,323 - #1 int
INFO  22:11:58,323 - #1 x
INFO  22:11:58,323 - #6 ;
INFO  22:11:58,323 - #29 {
INFO  22:11:58,323 - #23 if
INFO  22:11:58,323 - #10 (
INFO  22:11:58,323 - #1 a
INFO  22:11:58,323 - #40 >
INFO  22:11:58,324 - #1 b
INFO  22:11:58,324 - #11 )
INFO  22:11:58,324 - #29 {
INFO  22:11:58,324 - #36 return
INFO  22:11:58,324 - #1 a
INFO  22:11:58,324 - #6 ;
INFO  22:11:58,324 - #30 }
INFO  22:11:58,324 - #24 else
INFO  22:11:58,324 - #36 return
INFO  22:11:58,324 - #1 b
INFO  22:11:58,324 - #6 ;
INFO  22:11:58,324 - #30 }
INFO  22:11:58,324 - #1 int
INFO  22:11:58,325 - #1 min
INFO  22:11:58,325 - #10 (
INFO  22:11:58,325 - #1 int
INFO  22:11:58,325 - #1 a
INFO  22:11:58,325 - #14 ,
INFO  22:11:58,325 - #1 int
INFO  22:11:58,325 - #1 b
INFO  22:11:58,325 - #11 )
INFO  22:11:58,325 - #29 {
INFO  22:11:58,325 - #23 if
INFO  22:11:58,325 - #10 (
INFO  22:11:58,325 - #1 a
INFO  22:11:58,325 - #39 <
INFO  22:11:58,326 - #1 b
INFO  22:11:58,326 - #11 )
INFO  22:11:58,326 - #29 {
INFO  22:11:58,326 - #36 return
INFO  22:11:58,326 - #1 a
INFO  22:11:58,326 - #6 ;
INFO  22:11:58,326 - #30 }
INFO  22:11:58,326 - #24 else
INFO  22:11:58,326 - #29 {
INFO  22:11:58,326 - #36 return
INFO  22:11:58,326 - #1 b
INFO  22:11:58,326 - #6 ;
INFO  22:11:58,326 - #30 }
INFO  22:11:58,326 - #30 }
INFO  22:11:58,327 - #35 void
INFO  22:11:58,327 - #1 obrada
INFO  22:11:58,327 - #10 (
INFO  22:11:58,327 - #1 int
INFO  22:11:58,327 - #1 a
INFO  22:11:58,327 - #21 [
INFO  22:11:58,327 - #22 ]
INFO  22:11:58,327 - #14 ,
INFO  22:11:58,327 - #1 int
INFO  22:11:58,327 - #1 length
INFO  22:11:58,327 - #11 )
INFO  22:11:58,327 - #1 int
INFO  22:11:58,327 - #1 i
INFO  22:11:58,327 - #6 ;
INFO  22:11:58,327 - #29 {
INFO  22:11:58,327 - #1 i
INFO  22:11:58,328 - #7 =
INFO  22:11:58,328 - #2 0
INFO  22:11:58,328 - #6 ;
INFO  22:11:58,328 - #25 do
INFO  22:11:58,328 - #29 {
INFO  22:11:58,328 - #23 if
INFO  22:11:58,328 - #10 (
INFO  22:11:58,328 - #1 a
INFO  22:11:58,328 - #21 [
INFO  22:11:58,328 - #1 i
INFO  22:11:58,328 - #22 ]
INFO  22:11:58,328 - #20 %
INFO  22:11:58,328 - #2 3
INFO  22:11:58,328 - #37 ==
INFO  22:11:58,328 - #2 0
INFO  22:11:58,328 - #11 )
INFO  22:11:58,329 - #13 print
INFO  22:11:58,329 - #10 (
INFO  22:11:58,329 - #1 a
INFO  22:11:58,329 - #21 [
INFO  22:11:58,329 - #1 i
INFO  22:11:58,329 - #22 ]
INFO  22:11:58,329 - #11 )
INFO  22:11:58,329 - #6 ;
INFO  22:11:58,329 - #24 else
INFO  22:11:58,329 - #13 print
INFO  22:11:58,329 - #10 (
INFO  22:11:58,329 - #1 max
INFO  22:11:58,329 - #10 (
INFO  22:11:58,329 - #1 a
INFO  22:11:58,329 - #21 [
INFO  22:11:58,329 - #1 i
INFO  22:11:58,329 - #22 ]
INFO  22:11:58,329 - #14 ,
INFO  22:11:58,329 - #2 0
INFO  22:11:58,330 - #11 )
INFO  22:11:58,330 - #11 )
INFO  22:11:58,330 - #6 ;
INFO  22:11:58,330 - #1 i
INFO  22:11:58,330 - #8 ++
INFO  22:11:58,330 - #6 ;
INFO  22:11:58,330 - #30 }
INFO  22:11:58,330 - #26 while
INFO  22:11:58,331 - #10 (
INFO  22:11:58,331 - #1 i
INFO  22:11:58,331 - #39 <
INFO  22:11:58,331 - #1 length
INFO  22:11:58,331 - #11 )
INFO  22:11:58,331 - #6 ;
INFO  22:11:58,331 - #30 }
INFO  22:11:58,331 - #35 void
INFO  22:11:58,331 - #1 main
INFO  22:11:58,331 - #10 (
INFO  22:11:58,332 - #11 )
INFO  22:11:58,332 - #1 int
INFO  22:11:58,332 - #1 a
INFO  22:11:58,332 - #21 [
INFO  22:11:58,332 - #22 ]
INFO  22:11:58,332 - #14 ,
INFO  22:11:58,332 - #1 length
INFO  22:11:58,332 - #6 ;
INFO  22:11:58,332 - #1 int
INFO  22:11:58,332 - #1 i
INFO  22:11:58,332 - #6 ;
INFO  22:11:58,332 - #29 {
INFO  22:11:58,332 - #1 length
INFO  22:11:58,332 - #7 =
INFO  22:11:58,332 - #1 min
INFO  22:11:58,332 - #10 (
INFO  22:11:58,332 - #1 c
INFO  22:11:58,333 - #14 ,
INFO  22:11:58,333 - #2 103
INFO  22:11:58,333 - #11 )
INFO  22:11:58,333 - #6 ;
INFO  22:11:58,333 - #1 test
INFO  22:11:58,333 - #10 (
INFO  22:11:58,333 - #11 )
INFO  22:11:58,333 - #6 ;
INFO  22:11:58,333 - #23 if
INFO  22:11:58,333 - #10 (
INFO  22:11:58,333 - #1 length
INFO  22:11:58,333 - #40 >
INFO  22:11:58,333 - #2 0
INFO  22:11:58,333 - #32 &&
INFO  22:11:58,333 - #1 length
INFO  22:11:58,333 - #41 <=
INFO  22:11:58,333 - #1 d
INFO  22:11:58,333 - #11 )
INFO  22:11:58,334 - #1 a
INFO  22:11:58,334 - #7 =
INFO  22:11:58,334 - #15 new
INFO  22:11:58,334 - #1 int
INFO  22:11:58,334 - #21 [
INFO  22:11:58,334 - #1 length
INFO  22:11:58,334 - #22 ]
INFO  22:11:58,334 - #6 ;
INFO  22:11:58,334 - #24 else
INFO  22:11:58,334 - #1 a
INFO  22:11:58,334 - #7 =
INFO  22:11:58,334 - #15 new
INFO  22:11:58,334 - #1 int
INFO  22:11:58,334 - #21 [
INFO  22:11:58,334 - #2 5
INFO  22:11:58,334 - #22 ]
INFO  22:11:58,335 - #6 ;
INFO  22:11:58,335 - #25 do
INFO  22:11:58,335 - #29 {
INFO  22:11:58,335 - #12 read
INFO  22:11:58,335 - #10 (
INFO  22:11:58,335 - #1 a
INFO  22:11:58,335 - #21 [
INFO  22:11:58,335 - #1 i
INFO  22:11:58,335 - #22 ]
INFO  22:11:58,335 - #11 )
INFO  22:11:58,335 - #6 ;
INFO  22:11:58,335 - #30 }
INFO  22:11:58,335 - #26 while
INFO  22:11:58,336 - #10 (
INFO  22:11:58,336 - #1 i
INFO  22:11:58,336 - #41 <=
INFO  22:11:58,336 - #1 length
INFO  22:11:58,336 - #17 -
INFO  22:11:58,336 - #2 1
INFO  22:11:58,336 - #11 )
INFO  22:11:58,336 - #6 ;
INFO  22:11:58,336 - #1 obrada
INFO  22:11:58,336 - #10 (
INFO  22:11:58,336 - #1 a
INFO  22:11:58,336 - #14 ,
INFO  22:11:58,336 - #1 length
INFO  22:11:58,336 - #11 )
INFO  22:11:58,336 - #6 ;
INFO  22:11:58,336 - #13 print
INFO  22:11:58,336 - #10 (
INFO  22:11:58,336 - #1 d
INFO  22:11:58,336 - #11 )
INFO  22:11:58,337 - #6 ;
INFO  22:11:58,337 - #30 }
INFO  22:11:58,337 - #30 }
