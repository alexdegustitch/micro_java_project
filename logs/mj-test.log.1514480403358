INFO  17:18:59,744 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatCX11\workspace\MJCompiler\test\program.mj
INFO  17:18:59,750 - #33 program
INFO  17:18:59,751 - #1 Program
INFO  17:18:59,751 - #29 {
INFO  17:18:59,751 - #34 const
INFO  17:18:59,751 - #1 int
INFO  17:18:59,751 - #1 c
INFO  17:18:59,751 - #7 =
INFO  17:18:59,751 - #2 10
INFO  17:18:59,751 - #6 ;
INFO  17:18:59,751 - #34 const
INFO  17:18:59,751 - #1 int
INFO  17:18:59,751 - #1 d
INFO  17:18:59,752 - #7 =
INFO  17:18:59,752 - #2 13
INFO  17:18:59,752 - #6 ;
INFO  17:18:59,752 - #1 int
INFO  17:18:59,752 - #1 e
INFO  17:18:59,752 - #6 ;
INFO  17:18:59,752 - #35 void
INFO  17:18:59,752 - #1 test
INFO  17:18:59,752 - #10 (
INFO  17:18:59,753 - #11 )
INFO  17:18:59,753 - #29 {
INFO  17:18:59,753 - #1 int
INFO  17:18:59,753 - #1 a
INFO  17:18:59,753 - #6 ;
INFO  17:18:59,753 - #1 int
INFO  17:18:59,753 - #1 b
INFO  17:18:59,753 - #6 ;
INFO  17:18:59,753 - #1 a
INFO  17:18:59,753 - #7 =
INFO  17:18:59,753 - #2 3
INFO  17:18:59,753 - #6 ;
INFO  17:18:59,753 - #1 b
INFO  17:18:59,754 - #7 =
INFO  17:18:59,754 - #2 5
INFO  17:18:59,754 - #6 ;
INFO  17:18:59,754 - #13 print
INFO  17:18:59,754 - #10 (
INFO  17:18:59,754 - #1 a
INFO  17:18:59,754 - #16 +
INFO  17:18:59,754 - #1 b
INFO  17:18:59,754 - #11 )
INFO  17:18:59,754 - #6 ;
INFO  17:18:59,754 - #30 }
INFO  17:18:59,754 - #1 int
INFO  17:18:59,754 - #1 max
INFO  17:18:59,755 - #10 (
INFO  17:18:59,755 - #1 int
INFO  17:18:59,755 - #1 a
INFO  17:18:59,755 - #14 ,
INFO  17:18:59,755 - #1 int
INFO  17:18:59,755 - #1 b
INFO  17:18:59,755 - #11 )
INFO  17:18:59,755 - #29 {
INFO  17:18:59,755 - #23 if
INFO  17:18:59,755 - #10 (
INFO  17:18:59,755 - #1 a
INFO  17:18:59,756 - #40 >
INFO  17:18:59,757 - #1 b
INFO  17:18:59,757 - #11 )
INFO  17:18:59,757 - #29 {
INFO  17:18:59,757 - #1 return
INFO  17:18:59,758 - #1 a
INFO  17:18:59,758 - #6 ;
INFO  17:18:59,758 - #30 }
INFO  17:18:59,758 - #24 else
INFO  17:18:59,758 - #1 return
INFO  17:18:59,758 - #1 b
INFO  17:18:59,758 - #6 ;
INFO  17:18:59,758 - #30 }
INFO  17:18:59,758 - #1 int
INFO  17:18:59,758 - #1 min
INFO  17:18:59,758 - #10 (
INFO  17:18:59,758 - #1 int
INFO  17:18:59,758 - #1 a
INFO  17:18:59,759 - #14 ,
INFO  17:18:59,759 - #1 int
INFO  17:18:59,759 - #1 b
INFO  17:18:59,759 - #11 )
INFO  17:18:59,759 - #29 {
INFO  17:18:59,759 - #23 if
INFO  17:18:59,759 - #10 (
INFO  17:18:59,759 - #1 a
INFO  17:18:59,759 - #39 <
INFO  17:18:59,759 - #1 b
INFO  17:18:59,759 - #11 )
INFO  17:18:59,759 - #29 {
INFO  17:18:59,759 - #1 return
INFO  17:18:59,760 - #1 a
INFO  17:18:59,760 - #6 ;
INFO  17:18:59,760 - #30 }
INFO  17:18:59,760 - #24 else
INFO  17:18:59,760 - #29 {
INFO  17:18:59,760 - #1 return
INFO  17:18:59,760 - #1 b
INFO  17:18:59,760 - #6 ;
INFO  17:18:59,760 - #30 }
INFO  17:18:59,760 - #30 }
INFO  17:18:59,760 - #35 void
INFO  17:18:59,760 - #1 main
INFO  17:18:59,760 - #10 (
INFO  17:18:59,760 - #11 )
INFO  17:18:59,761 - #29 {
INFO  17:18:59,761 - #1 int
INFO  17:18:59,761 - #1 a
INFO  17:18:59,761 - #21 [
INFO  17:18:59,761 - #22 ]
INFO  17:18:59,761 - #7 =
INFO  17:18:59,761 - #15 new
INFO  17:18:59,761 - #1 int
INFO  17:18:59,761 - #21 [
INFO  17:18:59,761 - #2 5
INFO  17:18:59,761 - #22 ]
INFO  17:18:59,761 - #6 ;
INFO  17:18:59,762 - #1 int
INFO  17:18:59,762 - #1 b
INFO  17:18:59,762 - #6 ;
INFO  17:18:59,762 - #25 do
INFO  17:18:59,762 - #29 {
INFO  17:18:59,762 - #1 a
INFO  17:18:59,762 - #21 [
INFO  17:18:59,762 - #1 i
INFO  17:18:59,762 - #22 ]
INFO  17:18:59,762 - #7 =
INFO  17:18:59,762 - #12 read
INFO  17:18:59,762 - #10 (
INFO  17:18:59,763 - #1 b
INFO  17:18:59,763 - #11 )
INFO  17:18:59,763 - #6 ;
INFO  17:18:59,763 - #23 if
INFO  17:18:59,763 - #10 (
INFO  17:18:59,763 - #1 a
INFO  17:18:59,763 - #21 [
INFO  17:18:59,763 - #1 i
INFO  17:18:59,763 - #22 ]
INFO  17:18:59,763 - #20 %
INFO  17:18:59,763 - #2 3
INFO  17:18:59,763 - #37 ==
INFO  17:18:59,763 - #2 0
INFO  17:18:59,763 - #11 )
INFO  17:18:59,764 - #13 print
INFO  17:18:59,764 - #10 (
INFO  17:18:59,764 - #1 a
INFO  17:18:59,764 - #21 [
INFO  17:18:59,764 - #1 i
INFO  17:18:59,764 - #22 ]
INFO  17:18:59,764 - #11 )
INFO  17:18:59,764 - #6 ;
INFO  17:18:59,764 - #24 else
INFO  17:18:59,764 - #13 print
INFO  17:18:59,764 - #10 (
INFO  17:18:59,765 - #1 max
INFO  17:18:59,765 - #10 (
INFO  17:18:59,765 - #1 a
INFO  17:18:59,765 - #21 [
INFO  17:18:59,765 - #1 i
INFO  17:18:59,765 - #22 ]
INFO  17:18:59,765 - #14 ,
INFO  17:18:59,765 - #2 0
INFO  17:18:59,765 - #11 )
INFO  17:18:59,765 - #11 )
INFO  17:18:59,765 - #6 ;
INFO  17:18:59,765 - #30 }
INFO  17:18:59,765 - #26 while
INFO  17:18:59,765 - #10 (
INFO  17:18:59,766 - #1 i
INFO  17:18:59,766 - #39 <
INFO  17:18:59,766 - #2 5
INFO  17:18:59,766 - #11 )
INFO  17:18:59,766 - #6 ;
INFO  17:18:59,766 - #13 print
INFO  17:18:59,766 - #10 (
INFO  17:18:59,766 - #1 c
INFO  17:18:59,766 - #11 )
INFO  17:18:59,766 - #6 ;
INFO  17:18:59,766 - #30 }
INFO  17:18:59,766 - #30 }
