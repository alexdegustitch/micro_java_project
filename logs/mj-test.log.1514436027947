INFO  05:31:47,616 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatCX7\workspace\MJCompiler\test\program.mj
INFO  05:31:47,623 - #2 program
INFO  05:31:47,623 - #8 Program
INFO  05:31:47,623 - #20 {
INFO  05:31:47,623 - #5 const
INFO  05:31:47,623 - #8 int
INFO  05:31:47,623 - #8 c
INFO  05:31:47,623 - #24 =
INFO  05:31:47,623 - #9 10
INFO  05:31:47,624 - #27 ;
INFO  05:31:47,624 - #5 const
INFO  05:31:47,624 - #8 int
INFO  05:31:47,624 - #8 d
INFO  05:31:47,624 - #24 =
INFO  05:31:47,624 - #9 13
INFO  05:31:47,624 - #27 ;
INFO  05:31:47,624 - #6 void
INFO  05:31:47,624 - #8 test
INFO  05:31:47,624 - #29 (
INFO  05:31:47,624 - #30 )
INFO  05:31:47,625 - #20 {
INFO  05:31:47,625 - #8 int
INFO  05:31:47,625 - #8 a
INFO  05:31:47,625 - #27 ;
INFO  05:31:47,625 - #8 int
INFO  05:31:47,625 - #8 b
INFO  05:31:47,625 - #27 ;
INFO  05:31:47,625 - #8 a
INFO  05:31:47,625 - #24 =
INFO  05:31:47,625 - #9 3
INFO  05:31:47,625 - #27 ;
INFO  05:31:47,625 - #8 b
INFO  05:31:47,625 - #24 =
INFO  05:31:47,626 - #9 5
INFO  05:31:47,626 - #27 ;
INFO  05:31:47,626 - #3 print
INFO  05:31:47,626 - #29 (
INFO  05:31:47,626 - #8 a
INFO  05:31:47,626 - #15 +
INFO  05:31:47,626 - #8 b
INFO  05:31:47,626 - #30 )
INFO  05:31:47,626 - #27 ;
INFO  05:31:47,626 - #21 }
INFO  05:31:47,626 - #8 int
INFO  05:31:47,626 - #8 max
INFO  05:31:47,626 - #29 (
INFO  05:31:47,627 - #8 int
INFO  05:31:47,627 - #8 a
INFO  05:31:47,627 - #28 ,
INFO  05:31:47,627 - #8 int
INFO  05:31:47,627 - #8 b
INFO  05:31:47,627 - #30 )
INFO  05:31:47,627 - #20 {
INFO  05:31:47,627 - #31 if
INFO  05:31:47,627 - #29 (
INFO  05:31:47,627 - #8 a
INFO  05:31:47,627 - #38 >
INFO  05:31:47,627 - #8 b
INFO  05:31:47,627 - #30 )
INFO  05:31:47,627 - #20 {
INFO  05:31:47,629 - #8 return
INFO  05:31:47,629 - #8 a
INFO  05:31:47,629 - #27 ;
INFO  05:31:47,629 - #21 }
INFO  05:31:47,629 - #32 else
INFO  05:31:47,629 - #8 return
INFO  05:31:47,629 - #8 b
INFO  05:31:47,629 - #27 ;
INFO  05:31:47,629 - #21 }
INFO  05:31:47,629 - #8 int
INFO  05:31:47,630 - #8 min
INFO  05:31:47,630 - #29 (
INFO  05:31:47,630 - #8 int
INFO  05:31:47,630 - #8 a
INFO  05:31:47,630 - #28 ,
INFO  05:31:47,630 - #8 int
INFO  05:31:47,630 - #8 b
INFO  05:31:47,630 - #30 )
INFO  05:31:47,630 - #20 {
INFO  05:31:47,630 - #31 if
INFO  05:31:47,630 - #29 (
INFO  05:31:47,630 - #8 a
INFO  05:31:47,630 - #40 <
INFO  05:31:47,630 - #8 b
INFO  05:31:47,630 - #30 )
INFO  05:31:47,630 - #20 {
INFO  05:31:47,631 - #8 return
INFO  05:31:47,631 - #8 a
INFO  05:31:47,631 - #27 ;
INFO  05:31:47,631 - #21 }
INFO  05:31:47,631 - #32 else
INFO  05:31:47,631 - #20 {
INFO  05:31:47,631 - #8 return
INFO  05:31:47,631 - #8 b
INFO  05:31:47,631 - #27 ;
INFO  05:31:47,631 - #21 }
INFO  05:31:47,631 - #21 }
INFO  05:31:47,631 - #6 void
INFO  05:31:47,631 - #8 main
INFO  05:31:47,631 - #29 (
INFO  05:31:47,632 - #30 )
INFO  05:31:47,632 - #20 {
INFO  05:31:47,632 - #8 int
INFO  05:31:47,632 - #8 a
INFO  05:31:47,632 - #22 [
INFO  05:31:47,632 - #23 ]
INFO  05:31:47,632 - #24 =
INFO  05:31:47,632 - #7 new
INFO  05:31:47,632 - #8 int
INFO  05:31:47,632 - #22 [
INFO  05:31:47,632 - #9 5
INFO  05:31:47,632 - #23 ]
INFO  05:31:47,632 - #27 ;
INFO  05:31:47,632 - #8 int
INFO  05:31:47,633 - #8 b
INFO  05:31:47,633 - #27 ;
INFO  05:31:47,633 - #33 do
INFO  05:31:47,633 - #20 {
INFO  05:31:47,633 - #8 a
INFO  05:31:47,633 - #22 [
INFO  05:31:47,633 - #8 i
INFO  05:31:47,633 - #23 ]
INFO  05:31:47,633 - #24 =
INFO  05:31:47,633 - #4 read
INFO  05:31:47,633 - #29 (
INFO  05:31:47,633 - #8 b
INFO  05:31:47,633 - #30 )
INFO  05:31:47,633 - #27 ;
INFO  05:31:47,634 - #31 if
INFO  05:31:47,634 - #29 (
INFO  05:31:47,634 - #8 a
INFO  05:31:47,634 - #22 [
INFO  05:31:47,634 - #8 i
INFO  05:31:47,634 - #23 ]
INFO  05:31:47,634 - #19 %
INFO  05:31:47,634 - #9 3
INFO  05:31:47,634 - #39 ==
INFO  05:31:47,634 - #9 0
INFO  05:31:47,634 - #30 )
INFO  05:31:47,634 - #3 print
INFO  05:31:47,634 - #29 (
INFO  05:31:47,634 - #8 a
INFO  05:31:47,634 - #22 [
INFO  05:31:47,634 - #8 i
INFO  05:31:47,635 - #23 ]
INFO  05:31:47,635 - #30 )
INFO  05:31:47,635 - #27 ;
INFO  05:31:47,635 - #32 else
INFO  05:31:47,635 - #3 print
INFO  05:31:47,635 - #29 (
INFO  05:31:47,635 - #8 max
INFO  05:31:47,635 - #29 (
INFO  05:31:47,635 - #8 a
INFO  05:31:47,635 - #22 [
INFO  05:31:47,635 - #8 i
INFO  05:31:47,635 - #23 ]
INFO  05:31:47,635 - #28 ,
INFO  05:31:47,635 - #9 0
INFO  05:31:47,635 - #30 )
INFO  05:31:47,635 - #30 )
INFO  05:31:47,635 - #27 ;
INFO  05:31:47,636 - #21 }
INFO  05:31:47,636 - #34 while
INFO  05:31:47,636 - #29 (
INFO  05:31:47,636 - #8 i
INFO  05:31:47,637 - #40 <
INFO  05:31:47,637 - #9 5
INFO  05:31:47,637 - #30 )
INFO  05:31:47,637 - #27 ;
INFO  05:31:47,637 - #3 print
INFO  05:31:47,637 - #29 (
INFO  05:31:47,637 - #8 c
INFO  05:31:47,637 - #30 )
INFO  05:31:47,637 - #27 ;
INFO  05:31:47,637 - #21 }
INFO  05:31:47,637 - #21 }
