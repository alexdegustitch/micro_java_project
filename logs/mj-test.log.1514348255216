INFO  05:16:21,634 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatCX\workspace\MJCompiler\test\program.mj
INFO  05:16:21,639 - #2 program
INFO  05:16:21,639 - #8 Program
INFO  05:16:21,639 - #20 {
INFO  05:16:21,639 - #5 const
INFO  05:16:21,639 - #8 int
INFO  05:16:21,640 - #8 c
INFO  05:16:21,640 - #24 =
INFO  05:16:21,640 - #9 10
INFO  05:16:21,640 - #27 ;
INFO  05:16:21,640 - #6 void
INFO  05:16:21,640 - #8 max
INFO  05:16:21,640 - #29 (
INFO  05:16:21,640 - #8 int
INFO  05:16:21,640 - #8 a
INFO  05:16:21,640 - #28 ,
INFO  05:16:21,640 - #8 int
INFO  05:16:21,641 - #8 b
INFO  05:16:21,641 - #30 )
INFO  05:16:21,641 - #20 {
INFO  05:16:21,641 - #31 if
INFO  05:16:21,641 - #29 (
INFO  05:16:21,641 - #8 a
INFO  05:16:21,641 - #38 >
INFO  05:16:21,641 - #8 b
INFO  05:16:21,641 - #30 )
INFO  05:16:21,641 - #20 {
INFO  05:16:21,641 - #8 return
INFO  05:16:21,641 - #8 a
INFO  05:16:21,641 - #27 ;
INFO  05:16:21,642 - #21 }
INFO  05:16:21,642 - #32 else
INFO  05:16:21,642 - #8 return
INFO  05:16:21,642 - #8 b
INFO  05:16:21,642 - #27 ;
INFO  05:16:21,642 - #21 }
INFO  05:16:21,642 - #6 void
INFO  05:16:21,642 - #8 min
INFO  05:16:21,642 - #29 (
INFO  05:16:21,642 - #8 int
INFO  05:16:21,642 - #8 a
INFO  05:16:21,642 - #28 ,
INFO  05:16:21,642 - #8 int
INFO  05:16:21,642 - #8 b
INFO  05:16:21,643 - #30 )
INFO  05:16:21,643 - #20 {
INFO  05:16:21,643 - #31 if
INFO  05:16:21,643 - #29 (
INFO  05:16:21,643 - #8 a
INFO  05:16:21,643 - #40 <
INFO  05:16:21,643 - #8 b
INFO  05:16:21,643 - #30 )
INFO  05:16:21,643 - #20 {
INFO  05:16:21,643 - #8 return
INFO  05:16:21,643 - #8 a
INFO  05:16:21,643 - #27 ;
INFO  05:16:21,643 - #21 }
INFO  05:16:21,643 - #32 else
INFO  05:16:21,644 - #20 {
INFO  05:16:21,644 - #8 return
INFO  05:16:21,645 - #8 b
INFO  05:16:21,645 - #27 ;
INFO  05:16:21,645 - #21 }
INFO  05:16:21,645 - #21 }
INFO  05:16:21,645 - #6 void
INFO  05:16:21,645 - #8 main
INFO  05:16:21,645 - #29 (
INFO  05:16:21,646 - #30 )
INFO  05:16:21,646 - #20 {
INFO  05:16:21,646 - #8 int
INFO  05:16:21,646 - #8 a
INFO  05:16:21,646 - #22 [
INFO  05:16:21,646 - #23 ]
INFO  05:16:21,646 - #24 =
INFO  05:16:21,646 - #7 new
INFO  05:16:21,646 - #8 int
INFO  05:16:21,646 - #22 [
INFO  05:16:21,646 - #9 5
INFO  05:16:21,646 - #23 ]
INFO  05:16:21,646 - #27 ;
INFO  05:16:21,646 - #8 int
INFO  05:16:21,647 - #8 b
INFO  05:16:21,647 - #27 ;
INFO  05:16:21,647 - #33 do
INFO  05:16:21,647 - #20 {
INFO  05:16:21,647 - #8 a
INFO  05:16:21,647 - #22 [
INFO  05:16:21,647 - #8 i
INFO  05:16:21,647 - #23 ]
INFO  05:16:21,647 - #24 =
INFO  05:16:21,647 - #4 read
INFO  05:16:21,647 - #29 (
INFO  05:16:21,647 - #8 b
INFO  05:16:21,647 - #30 )
INFO  05:16:21,647 - #27 ;
INFO  05:16:21,648 - #31 if
INFO  05:16:21,648 - #29 (
INFO  05:16:21,648 - #8 a
INFO  05:16:21,648 - #22 [
INFO  05:16:21,648 - #8 i
INFO  05:16:21,648 - #23 ]
INFO  05:16:21,648 - #19 %
INFO  05:16:21,648 - #9 3
INFO  05:16:21,648 - #39 ==
INFO  05:16:21,649 - #9 0
INFO  05:16:21,649 - #30 )
INFO  05:16:21,649 - #3 print
INFO  05:16:21,649 - #29 (
INFO  05:16:21,649 - #8 a
INFO  05:16:21,649 - #22 [
INFO  05:16:21,649 - #8 i
INFO  05:16:21,649 - #23 ]
INFO  05:16:21,649 - #30 )
INFO  05:16:21,649 - #27 ;
INFO  05:16:21,649 - #32 else
INFO  05:16:21,649 - #3 print
INFO  05:16:21,650 - #29 (
INFO  05:16:21,650 - #8 max
INFO  05:16:21,650 - #29 (
INFO  05:16:21,650 - #8 a
INFO  05:16:21,650 - #22 [
INFO  05:16:21,650 - #8 i
INFO  05:16:21,650 - #23 ]
INFO  05:16:21,650 - #28 ,
INFO  05:16:21,650 - #9 0
INFO  05:16:21,650 - #30 )
INFO  05:16:21,650 - #30 )
INFO  05:16:21,650 - #27 ;
INFO  05:16:21,650 - #21 }
INFO  05:16:21,651 - #34 while
INFO  05:16:21,651 - #29 (
INFO  05:16:21,651 - #8 i
INFO  05:16:21,651 - #40 <
INFO  05:16:21,651 - #9 5
INFO  05:16:21,651 - #30 )
INFO  05:16:21,651 - #27 ;
INFO  05:16:21,651 - #3 print
INFO  05:16:21,651 - #29 (
INFO  05:16:21,651 - #8 c
INFO  05:16:21,651 - #30 )
INFO  05:16:21,651 - #27 ;
INFO  05:16:21,651 - #21 }
INFO  05:16:21,651 - #21 }
