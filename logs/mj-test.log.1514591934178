INFO  00:56:07,045 - Compiling source file: C:\Users\LjubaS\Desktop\ACA_ETF\IR4PP1\projekat\sa100122dProjekatDX09\workspace\MJCompiler\test\program.mj
INFO  00:56:07,051 - #33 program
INFO  00:56:07,051 - #1 Program
INFO  00:56:07,051 - #29 {
INFO  00:56:07,051 - #34 const
INFO  00:56:07,051 - #1 int
INFO  00:56:07,051 - #1 c
INFO  00:56:07,051 - #7 =
INFO  00:56:07,052 - #2 10
INFO  00:56:07,052 - #6 ;
INFO  00:56:07,052 - #34 const
INFO  00:56:07,052 - #1 int
INFO  00:56:07,052 - #1 d
INFO  00:56:07,052 - #7 =
INFO  00:56:07,052 - #2 99
INFO  00:56:07,052 - #14 ,
INFO  00:56:07,053 - #1 eps
INFO  00:56:07,053 - #7 =
INFO  00:56:07,053 - #2 2
INFO  00:56:07,053 - #6 ;
INFO  00:56:07,053 - #1 int
INFO  00:56:07,053 - #1 e
INFO  00:56:07,053 - #6 ;
INFO  00:56:07,053 - #35 void
INFO  00:56:07,054 - #1 test
INFO  00:56:07,054 - #10 (
INFO  00:56:07,054 - #11 )
INFO  00:56:07,054 - #29 {
INFO  00:56:07,054 - #1 int
INFO  00:56:07,054 - #1 a
INFO  00:56:07,054 - #14 ,
INFO  00:56:07,054 - #1 b
INFO  00:56:07,054 - #6 ;
INFO  00:56:07,054 - #1 bool
INFO  00:56:07,054 - #1 cond
INFO  00:56:07,055 - #6 ;
INFO  00:56:07,055 - #1 a
INFO  00:56:07,055 - #7 =
INFO  00:56:07,055 - #2 3
INFO  00:56:07,055 - #6 ;
INFO  00:56:07,056 - #1 b
INFO  00:56:07,056 - #7 =
INFO  00:56:07,056 - #2 5
INFO  00:56:07,056 - #6 ;
INFO  00:56:07,056 - #1 cond
INFO  00:56:07,056 - #7 =
INFO  00:56:07,056 - #4 true
INFO  00:56:07,056 - #6 ;
INFO  00:56:07,056 - #23 if
INFO  00:56:07,056 - #10 (
INFO  00:56:07,056 - #2 2
INFO  00:56:07,057 - #18 *
INFO  00:56:07,057 - #10 (
INFO  00:56:07,057 - #1 a
INFO  00:56:07,057 - #17 -
INFO  00:56:07,057 - #1 b
INFO  00:56:07,057 - #17 -
INFO  00:56:07,057 - #2 1
INFO  00:56:07,057 - #11 )
INFO  00:56:07,057 - #17 -
INFO  00:56:07,060 - #2 14
INFO  00:56:07,060 - #40 >
INFO  00:56:07,060 - #2 0
INFO  00:56:07,060 - #31 ||
INFO  00:56:07,060 - #1 cond
INFO  00:56:07,060 - #11 )
INFO  00:56:07,060 - #13 print
INFO  00:56:07,060 - #10 (
INFO  00:56:07,060 - #1 a
INFO  00:56:07,060 - #16 +
INFO  00:56:07,061 - #1 b
INFO  00:56:07,061 - #11 )
INFO  00:56:07,061 - #6 ;
INFO  00:56:07,061 - #30 }
INFO  00:56:07,061 - #1 int
INFO  00:56:07,061 - #1 max
INFO  00:56:07,061 - #10 (
INFO  00:56:07,061 - #1 int
INFO  00:56:07,061 - #1 a
INFO  00:56:07,061 - #14 ,
INFO  00:56:07,061 - #1 int
INFO  00:56:07,061 - #1 b
INFO  00:56:07,062 - #11 )
INFO  00:56:07,062 - #29 {
INFO  00:56:07,062 - #23 if
INFO  00:56:07,064 - #10 (
INFO  00:56:07,064 - #1 a
INFO  00:56:07,064 - #40 >
INFO  00:56:07,064 - #1 b
INFO  00:56:07,064 - #11 )
INFO  00:56:07,065 - #29 {
INFO  00:56:07,065 - #36 return
INFO  00:56:07,065 - #1 a
INFO  00:56:07,065 - #6 ;
INFO  00:56:07,065 - #30 }
INFO  00:56:07,065 - #24 else
INFO  00:56:07,065 - #36 return
INFO  00:56:07,065 - #1 b
INFO  00:56:07,065 - #6 ;
INFO  00:56:07,065 - #30 }
INFO  00:56:07,065 - #1 int
INFO  00:56:07,065 - #1 min
INFO  00:56:07,065 - #10 (
INFO  00:56:07,066 - #1 int
INFO  00:56:07,066 - #1 a
INFO  00:56:07,066 - #14 ,
INFO  00:56:07,066 - #1 int
INFO  00:56:07,066 - #1 b
INFO  00:56:07,066 - #11 )
INFO  00:56:07,066 - #29 {
INFO  00:56:07,066 - #23 if
INFO  00:56:07,066 - #10 (
INFO  00:56:07,066 - #1 a
INFO  00:56:07,066 - #39 <
INFO  00:56:07,066 - #1 b
INFO  00:56:07,066 - #11 )
INFO  00:56:07,067 - #29 {
INFO  00:56:07,067 - #36 return
INFO  00:56:07,067 - #1 a
INFO  00:56:07,068 - #6 ;
INFO  00:56:07,068 - #30 }
INFO  00:56:07,068 - #24 else
INFO  00:56:07,068 - #29 {
INFO  00:56:07,068 - #36 return
INFO  00:56:07,068 - #1 b
INFO  00:56:07,068 - #6 ;
INFO  00:56:07,068 - #30 }
INFO  00:56:07,068 - #30 }
INFO  00:56:07,068 - #35 void
INFO  00:56:07,068 - #1 main
INFO  00:56:07,068 - #10 (
INFO  00:56:07,069 - #11 )
INFO  00:56:07,069 - #29 {
INFO  00:56:07,069 - #1 int
INFO  00:56:07,069 - #1 a
INFO  00:56:07,069 - #21 [
INFO  00:56:07,069 - #22 ]
INFO  00:56:07,069 - #6 ;
INFO  00:56:07,069 - #1 int
INFO  00:56:07,069 - #1 length
INFO  00:56:07,069 - #6 ;
INFO  00:56:07,069 - #1 length
INFO  00:56:07,069 - #7 =
INFO  00:56:07,070 - #1 c
INFO  00:56:07,070 - #6 ;
INFO  00:56:07,070 - #1 test
INFO  00:56:07,070 - #10 (
INFO  00:56:07,070 - #11 )
INFO  00:56:07,071 - #6 ;
INFO  00:56:07,071 - #23 if
INFO  00:56:07,071 - #10 (
INFO  00:56:07,071 - #1 length
INFO  00:56:07,071 - #40 >
INFO  00:56:07,071 - #2 0
INFO  00:56:07,072 - #32 &&
INFO  00:56:07,072 - #1 length
INFO  00:56:07,072 - #41 <=
INFO  00:56:07,072 - #1 d
INFO  00:56:07,072 - #11 )
INFO  00:56:07,072 - #1 a
INFO  00:56:07,072 - #7 =
INFO  00:56:07,073 - #15 new
INFO  00:56:07,073 - #1 int
INFO  00:56:07,073 - #21 [
INFO  00:56:07,073 - #1 length
INFO  00:56:07,073 - #22 ]
INFO  00:56:07,073 - #6 ;
INFO  00:56:07,073 - #24 else
INFO  00:56:07,073 - #1 a
INFO  00:56:07,073 - #7 =
INFO  00:56:07,073 - #15 new
INFO  00:56:07,073 - #1 int
INFO  00:56:07,073 - #21 [
INFO  00:56:07,073 - #2 5
INFO  00:56:07,074 - #22 ]
INFO  00:56:07,074 - #6 ;
INFO  00:56:07,074 - #25 do
INFO  00:56:07,074 - #29 {
INFO  00:56:07,074 - #12 read
INFO  00:56:07,074 - #10 (
INFO  00:56:07,074 - #1 a
INFO  00:56:07,074 - #21 [
INFO  00:56:07,074 - #1 i
INFO  00:56:07,074 - #22 ]
INFO  00:56:07,074 - #11 )
INFO  00:56:07,074 - #6 ;
INFO  00:56:07,074 - #23 if
INFO  00:56:07,074 - #10 (
INFO  00:56:07,074 - #1 a
INFO  00:56:07,074 - #21 [
INFO  00:56:07,075 - #1 i
INFO  00:56:07,075 - #22 ]
INFO  00:56:07,075 - #20 %
INFO  00:56:07,075 - #2 3
INFO  00:56:07,075 - #37 ==
INFO  00:56:07,075 - #2 0
INFO  00:56:07,075 - #11 )
INFO  00:56:07,075 - #13 print
INFO  00:56:07,075 - #10 (
INFO  00:56:07,075 - #1 a
INFO  00:56:07,075 - #21 [
INFO  00:56:07,075 - #1 i
INFO  00:56:07,075 - #22 ]
INFO  00:56:07,075 - #11 )
INFO  00:56:07,075 - #6 ;
INFO  00:56:07,076 - #24 else
INFO  00:56:07,076 - #13 print
INFO  00:56:07,076 - #10 (
INFO  00:56:07,076 - #1 max
INFO  00:56:07,076 - #10 (
INFO  00:56:07,076 - #1 a
INFO  00:56:07,076 - #21 [
INFO  00:56:07,076 - #1 i
INFO  00:56:07,076 - #22 ]
INFO  00:56:07,076 - #14 ,
INFO  00:56:07,076 - #2 0
INFO  00:56:07,076 - #11 )
INFO  00:56:07,076 - #11 )
INFO  00:56:07,076 - #6 ;
INFO  00:56:07,076 - #30 }
INFO  00:56:07,076 - #26 while
INFO  00:56:07,077 - #10 (
INFO  00:56:07,077 - #1 i
INFO  00:56:07,077 - #41 <=
INFO  00:56:07,077 - #1 length
INFO  00:56:07,077 - #17 -
INFO  00:56:07,077 - #2 1
INFO  00:56:07,077 - #11 )
INFO  00:56:07,077 - #6 ;
INFO  00:56:07,077 - #13 print
INFO  00:56:07,077 - #10 (
INFO  00:56:07,077 - #1 d
INFO  00:56:07,077 - #11 )
INFO  00:56:07,077 - #6 ;
INFO  00:56:07,077 - #30 }
INFO  00:56:07,077 - #30 }
