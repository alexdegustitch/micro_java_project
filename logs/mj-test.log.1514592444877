INFO  01:03:47,745 - Compiling source file: C:\Users\LjubaS\Desktop\ACA_ETF\IR4PP1\projekat\sa100122dProjekatDX09\workspace\MJCompiler\test\program.mj
INFO  01:03:47,751 - #2 program
INFO  01:03:47,751 - #8 Program
INFO  01:03:47,751 - #20 {
INFO  01:03:47,751 - #5 const
INFO  01:03:47,751 - #8 int
INFO  01:03:47,751 - #8 c
INFO  01:03:47,751 - #24 =
INFO  01:03:47,751 - #9 10
INFO  01:03:47,751 - #27 ;
INFO  01:03:47,751 - #5 const
INFO  01:03:47,752 - #8 int
INFO  01:03:47,752 - #8 d
INFO  01:03:47,752 - #24 =
INFO  01:03:47,752 - #9 99
INFO  01:03:47,752 - #28 ,
INFO  01:03:47,752 - #8 eps
INFO  01:03:47,752 - #24 =
INFO  01:03:47,752 - #9 2
INFO  01:03:47,752 - #27 ;
INFO  01:03:47,752 - #8 int
INFO  01:03:47,753 - #8 e
INFO  01:03:47,753 - #27 ;
INFO  01:03:47,753 - #6 void
INFO  01:03:47,753 - #8 test
INFO  01:03:47,753 - #29 (
INFO  01:03:47,753 - #30 )
INFO  01:03:47,753 - #20 {
INFO  01:03:47,753 - #8 int
INFO  01:03:47,753 - #8 a
INFO  01:03:47,753 - #28 ,
INFO  01:03:47,753 - #8 b
INFO  01:03:47,753 - #27 ;
INFO  01:03:47,753 - #8 bool
INFO  01:03:47,754 - #8 cond
INFO  01:03:47,754 - #27 ;
INFO  01:03:47,754 - #8 a
INFO  01:03:47,754 - #24 =
INFO  01:03:47,754 - #9 3
INFO  01:03:47,754 - #27 ;
INFO  01:03:47,754 - #8 b
INFO  01:03:47,754 - #24 =
INFO  01:03:47,754 - #9 5
INFO  01:03:47,754 - #27 ;
INFO  01:03:47,754 - #8 cond
INFO  01:03:47,754 - #24 =
INFO  01:03:47,754 - #11 true
INFO  01:03:47,754 - #27 ;
INFO  01:03:47,755 - #31 if
INFO  01:03:47,755 - #29 (
INFO  01:03:47,755 - #9 2
INFO  01:03:47,755 - #17 *
INFO  01:03:47,755 - #29 (
INFO  01:03:47,755 - #8 a
INFO  01:03:47,755 - #16 -
INFO  01:03:47,755 - #8 b
INFO  01:03:47,755 - #16 -
INFO  01:03:47,755 - #9 1
INFO  01:03:47,755 - #30 )
INFO  01:03:47,755 - #16 -
INFO  01:03:47,758 - #9 14
INFO  01:03:47,758 - #38 >
INFO  01:03:47,758 - #9 0
INFO  01:03:47,758 - #14 ||
INFO  01:03:47,758 - #8 cond
INFO  01:03:47,758 - #30 )
INFO  01:03:47,758 - #3 print
INFO  01:03:47,758 - #29 (
INFO  01:03:47,758 - #8 a
INFO  01:03:47,758 - #15 +
INFO  01:03:47,758 - #8 b
INFO  01:03:47,758 - #30 )
INFO  01:03:47,758 - #27 ;
INFO  01:03:47,759 - #21 }
INFO  01:03:47,759 - #8 int
INFO  01:03:47,759 - #8 max
INFO  01:03:47,759 - #29 (
INFO  01:03:47,759 - #8 int
INFO  01:03:47,759 - #8 a
INFO  01:03:47,759 - #28 ,
INFO  01:03:47,759 - #8 int
INFO  01:03:47,759 - #8 b
INFO  01:03:47,759 - #30 )
INFO  01:03:47,759 - #20 {
INFO  01:03:47,759 - #31 if
INFO  01:03:47,759 - #29 (
INFO  01:03:47,759 - #8 a
INFO  01:03:47,759 - #38 >
INFO  01:03:47,760 - #8 b
INFO  01:03:47,760 - #30 )
INFO  01:03:47,760 - #20 {
INFO  01:03:47,760 - #37 return
INFO  01:03:47,760 - #8 a
INFO  01:03:47,760 - #27 ;
INFO  01:03:47,760 - #21 }
INFO  01:03:47,760 - #32 else
INFO  01:03:47,760 - #37 return
INFO  01:03:47,760 - #8 b
INFO  01:03:47,760 - #27 ;
INFO  01:03:47,761 - #21 }
INFO  01:03:47,761 - #8 int
INFO  01:03:47,761 - #8 min
INFO  01:03:47,761 - #29 (
INFO  01:03:47,761 - #8 int
INFO  01:03:47,761 - #8 a
INFO  01:03:47,761 - #28 ,
INFO  01:03:47,761 - #8 int
INFO  01:03:47,761 - #8 b
INFO  01:03:47,761 - #30 )
INFO  01:03:47,761 - #20 {
INFO  01:03:47,761 - #31 if
INFO  01:03:47,761 - #29 (
INFO  01:03:47,761 - #8 a
INFO  01:03:47,762 - #40 <
INFO  01:03:47,762 - #8 b
INFO  01:03:47,762 - #30 )
INFO  01:03:47,762 - #20 {
INFO  01:03:47,762 - #37 return
INFO  01:03:47,762 - #8 a
INFO  01:03:47,762 - #27 ;
INFO  01:03:47,762 - #21 }
INFO  01:03:47,762 - #32 else
INFO  01:03:47,762 - #20 {
INFO  01:03:47,762 - #37 return
INFO  01:03:47,762 - #8 b
INFO  01:03:47,762 - #27 ;
INFO  01:03:47,763 - #21 }
INFO  01:03:47,763 - #21 }
INFO  01:03:47,763 - #6 void
INFO  01:03:47,763 - #8 main
INFO  01:03:47,763 - #29 (
INFO  01:03:47,763 - #30 )
INFO  01:03:47,763 - #20 {
INFO  01:03:47,763 - #8 int
INFO  01:03:47,763 - #8 a
INFO  01:03:47,763 - #22 [
INFO  01:03:47,763 - #23 ]
INFO  01:03:47,763 - #27 ;
INFO  01:03:47,763 - #8 int
INFO  01:03:47,763 - #8 length
INFO  01:03:47,764 - #27 ;
INFO  01:03:47,764 - #8 length
INFO  01:03:47,764 - #24 =
INFO  01:03:47,764 - #8 c
INFO  01:03:47,764 - #27 ;
INFO  01:03:47,764 - #8 test
INFO  01:03:47,764 - #29 (
INFO  01:03:47,764 - #30 )
INFO  01:03:47,764 - #27 ;
INFO  01:03:47,764 - #31 if
INFO  01:03:47,764 - #29 (
INFO  01:03:47,764 - #8 length
INFO  01:03:47,764 - #38 >
INFO  01:03:47,764 - #9 0
INFO  01:03:47,764 - #13 &&
INFO  01:03:47,765 - #8 length
INFO  01:03:47,765 - #42 <=
INFO  01:03:47,765 - #8 d
INFO  01:03:47,765 - #30 )
INFO  01:03:47,765 - #8 a
INFO  01:03:47,765 - #24 =
INFO  01:03:47,765 - #7 new
INFO  01:03:47,765 - #8 int
INFO  01:03:47,765 - #22 [
INFO  01:03:47,765 - #8 length
INFO  01:03:47,765 - #23 ]
INFO  01:03:47,765 - #27 ;
INFO  01:03:47,765 - #32 else
INFO  01:03:47,765 - #8 a
INFO  01:03:47,765 - #24 =
INFO  01:03:47,766 - #7 new
INFO  01:03:47,766 - #8 int
INFO  01:03:47,766 - #22 [
INFO  01:03:47,766 - #9 5
INFO  01:03:47,766 - #23 ]
INFO  01:03:47,766 - #27 ;
INFO  01:03:47,766 - #33 do
INFO  01:03:47,766 - #20 {
INFO  01:03:47,766 - #4 read
INFO  01:03:47,766 - #29 (
INFO  01:03:47,766 - #8 a
INFO  01:03:47,766 - #22 [
INFO  01:03:47,766 - #8 i
INFO  01:03:47,766 - #23 ]
INFO  01:03:47,766 - #30 )
INFO  01:03:47,766 - #27 ;
INFO  01:03:47,767 - #31 if
INFO  01:03:47,767 - #29 (
INFO  01:03:47,767 - #8 a
INFO  01:03:47,767 - #22 [
INFO  01:03:47,767 - #8 i
INFO  01:03:47,767 - #23 ]
INFO  01:03:47,767 - #19 %
INFO  01:03:47,767 - #9 3
INFO  01:03:47,767 - #39 ==
INFO  01:03:47,767 - #9 0
INFO  01:03:47,767 - #30 )
INFO  01:03:47,767 - #3 print
INFO  01:03:47,767 - #29 (
INFO  01:03:47,767 - #8 a
INFO  01:03:47,767 - #22 [
INFO  01:03:47,768 - #8 i
INFO  01:03:47,768 - #23 ]
INFO  01:03:47,768 - #30 )
INFO  01:03:47,768 - #27 ;
INFO  01:03:47,768 - #32 else
INFO  01:03:47,768 - #3 print
INFO  01:03:47,768 - #29 (
INFO  01:03:47,768 - #8 max
INFO  01:03:47,768 - #29 (
INFO  01:03:47,768 - #8 a
INFO  01:03:47,768 - #22 [
INFO  01:03:47,768 - #8 i
INFO  01:03:47,768 - #23 ]
INFO  01:03:47,768 - #28 ,
INFO  01:03:47,768 - #9 0
INFO  01:03:47,768 - #30 )
INFO  01:03:47,768 - #30 )
INFO  01:03:47,768 - #27 ;
INFO  01:03:47,768 - #21 }
INFO  01:03:47,769 - #34 while
INFO  01:03:47,769 - #29 (
INFO  01:03:47,769 - #8 i
INFO  01:03:47,769 - #42 <=
INFO  01:03:47,769 - #8 length
INFO  01:03:47,769 - #16 -
INFO  01:03:47,769 - #9 1
INFO  01:03:47,769 - #30 )
INFO  01:03:47,769 - #27 ;
INFO  01:03:47,769 - #3 print
INFO  01:03:47,769 - #29 (
INFO  01:03:47,769 - #8 d
INFO  01:03:47,769 - #30 )
INFO  01:03:47,769 - #27 ;
INFO  01:03:47,769 - #21 }
INFO  01:03:47,769 - #21 }
