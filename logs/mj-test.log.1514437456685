INFO  05:41:28,467 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatCX7\workspace\MJCompiler\test\program.mj
INFO  05:41:28,474 - #33 program
INFO  05:41:28,475 - #1 Program
INFO  05:41:28,475 - #29 {
INFO  05:41:28,475 - #34 const
INFO  05:41:28,475 - #1 int
INFO  05:41:28,475 - #1 c
INFO  05:41:28,475 - #7 =
INFO  05:41:28,475 - #2 10
INFO  05:41:28,475 - #6 ;
INFO  05:41:28,475 - #34 const
INFO  05:41:28,475 - #1 int
INFO  05:41:28,476 - #1 d
INFO  05:41:28,476 - #7 =
INFO  05:41:28,476 - #2 13
INFO  05:41:28,476 - #6 ;
INFO  05:41:28,476 - #35 void
INFO  05:41:28,476 - #1 test
INFO  05:41:28,476 - #10 (
INFO  05:41:28,476 - #11 )
INFO  05:41:28,476 - #29 {
INFO  05:41:28,476 - #1 int
INFO  05:41:28,476 - #1 a
INFO  05:41:28,477 - #6 ;
INFO  05:41:28,477 - #1 int
INFO  05:41:28,477 - #1 b
INFO  05:41:28,477 - #6 ;
INFO  05:41:28,477 - #1 a
INFO  05:41:28,477 - #7 =
INFO  05:41:28,477 - #2 3
INFO  05:41:28,477 - #6 ;
INFO  05:41:28,477 - #1 b
INFO  05:41:28,477 - #7 =
INFO  05:41:28,477 - #2 5
INFO  05:41:28,477 - #6 ;
INFO  05:41:28,477 - #13 print
INFO  05:41:28,477 - #10 (
INFO  05:41:28,478 - #1 a
INFO  05:41:28,478 - #16 +
INFO  05:41:28,478 - #1 b
INFO  05:41:28,478 - #11 )
INFO  05:41:28,478 - #6 ;
INFO  05:41:28,478 - #30 }
INFO  05:41:28,478 - #1 int
INFO  05:41:28,478 - #1 max
INFO  05:41:28,478 - #10 (
INFO  05:41:28,478 - #1 int
INFO  05:41:28,478 - #1 a
INFO  05:41:28,478 - #14 ,
INFO  05:41:28,478 - #1 int
INFO  05:41:28,478 - #1 b
INFO  05:41:28,479 - #11 )
INFO  05:41:28,479 - #29 {
INFO  05:41:28,479 - #23 if
INFO  05:41:28,479 - #10 (
INFO  05:41:28,479 - #1 a
INFO  05:41:28,479 - #40 >
INFO  05:41:28,479 - #1 b
INFO  05:41:28,479 - #11 )
INFO  05:41:28,479 - #29 {
INFO  05:41:28,481 - #1 return
INFO  05:41:28,481 - #1 a
INFO  05:41:28,481 - #6 ;
INFO  05:41:28,481 - #30 }
INFO  05:41:28,481 - #24 else
INFO  05:41:28,481 - #1 return
INFO  05:41:28,481 - #1 b
INFO  05:41:28,481 - #6 ;
INFO  05:41:28,481 - #30 }
INFO  05:41:28,482 - #1 int
INFO  05:41:28,482 - #1 min
INFO  05:41:28,482 - #10 (
INFO  05:41:28,482 - #1 int
INFO  05:41:28,482 - #1 a
INFO  05:41:28,482 - #14 ,
INFO  05:41:28,482 - #1 int
INFO  05:41:28,482 - #1 b
INFO  05:41:28,482 - #11 )
INFO  05:41:28,482 - #29 {
INFO  05:41:28,482 - #23 if
INFO  05:41:28,482 - #10 (
INFO  05:41:28,482 - #1 a
INFO  05:41:28,482 - #39 <
INFO  05:41:28,482 - #1 b
INFO  05:41:28,483 - #11 )
INFO  05:41:28,483 - #29 {
INFO  05:41:28,483 - #1 return
INFO  05:41:28,483 - #1 a
INFO  05:41:28,483 - #6 ;
INFO  05:41:28,483 - #30 }
INFO  05:41:28,483 - #24 else
INFO  05:41:28,483 - #29 {
INFO  05:41:28,483 - #1 return
INFO  05:41:28,483 - #1 b
INFO  05:41:28,483 - #6 ;
INFO  05:41:28,483 - #30 }
INFO  05:41:28,483 - #30 }
INFO  05:41:28,484 - #35 void
INFO  05:41:28,484 - #1 main
INFO  05:41:28,484 - #10 (
INFO  05:41:28,484 - #11 )
INFO  05:41:28,484 - #29 {
INFO  05:41:28,484 - #1 int
INFO  05:41:28,484 - #1 a
INFO  05:41:28,484 - #21 [
INFO  05:41:28,484 - #22 ]
INFO  05:41:28,484 - #7 =
INFO  05:41:28,484 - #15 new
INFO  05:41:28,484 - #1 int
INFO  05:41:28,484 - #21 [
INFO  05:41:28,485 - #2 5
INFO  05:41:28,485 - #22 ]
INFO  05:41:28,485 - #6 ;
INFO  05:41:28,485 - #1 int
INFO  05:41:28,485 - #1 b
INFO  05:41:28,485 - #6 ;
INFO  05:41:28,485 - #25 do
INFO  05:41:28,485 - #29 {
INFO  05:41:28,485 - #1 a
INFO  05:41:28,485 - #21 [
INFO  05:41:28,485 - #1 i
INFO  05:41:28,485 - #22 ]
INFO  05:41:28,485 - #7 =
INFO  05:41:28,485 - #12 read
INFO  05:41:28,486 - #10 (
INFO  05:41:28,486 - #1 b
INFO  05:41:28,486 - #11 )
INFO  05:41:28,486 - #6 ;
INFO  05:41:28,486 - #23 if
INFO  05:41:28,486 - #10 (
INFO  05:41:28,486 - #1 a
INFO  05:41:28,486 - #21 [
INFO  05:41:28,486 - #1 i
INFO  05:41:28,486 - #22 ]
INFO  05:41:28,486 - #20 %
INFO  05:41:28,486 - #2 3
INFO  05:41:28,486 - #37 ==
INFO  05:41:28,487 - #2 0
INFO  05:41:28,487 - #11 )
INFO  05:41:28,487 - #13 print
INFO  05:41:28,487 - #10 (
INFO  05:41:28,488 - #1 a
INFO  05:41:28,488 - #21 [
INFO  05:41:28,488 - #1 i
INFO  05:41:28,488 - #22 ]
INFO  05:41:28,488 - #11 )
INFO  05:41:28,488 - #6 ;
INFO  05:41:28,488 - #24 else
INFO  05:41:28,488 - #13 print
INFO  05:41:28,488 - #10 (
INFO  05:41:28,488 - #1 max
INFO  05:41:28,488 - #10 (
INFO  05:41:28,488 - #1 a
INFO  05:41:28,488 - #21 [
INFO  05:41:28,488 - #1 i
INFO  05:41:28,488 - #22 ]
INFO  05:41:28,488 - #14 ,
INFO  05:41:28,489 - #2 0
INFO  05:41:28,489 - #11 )
INFO  05:41:28,489 - #11 )
INFO  05:41:28,489 - #6 ;
INFO  05:41:28,489 - #30 }
INFO  05:41:28,489 - #26 while
INFO  05:41:28,489 - #10 (
INFO  05:41:28,489 - #1 i
INFO  05:41:28,489 - #39 <
INFO  05:41:28,489 - #2 5
INFO  05:41:28,489 - #11 )
INFO  05:41:28,490 - #6 ;
INFO  05:41:28,490 - #13 print
INFO  05:41:28,490 - #10 (
INFO  05:41:28,490 - #1 c
INFO  05:41:28,490 - #11 )
INFO  05:41:28,490 - #6 ;
INFO  05:41:28,490 - #30 }
INFO  05:41:28,490 - #30 }
