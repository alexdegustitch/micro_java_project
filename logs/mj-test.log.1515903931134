INFO  21:06:08,537 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatDX43\workspace\MJCompiler\test\program.mj
INFO  21:06:08,546 - #33 program
INFO  21:06:08,546 - #1 Program
INFO  21:06:08,546 - #29 {
INFO  21:06:08,547 - #34 const
INFO  21:06:08,547 - #1 int
INFO  21:06:08,547 - #1 c
INFO  21:06:08,547 - #7 =
INFO  21:06:08,547 - #2 10
INFO  21:06:08,547 - #6 ;
INFO  21:06:08,547 - #34 const
INFO  21:06:08,548 - #1 int
INFO  21:06:08,548 - #1 d
INFO  21:06:08,548 - #7 =
INFO  21:06:08,548 - #2 99
INFO  21:06:08,548 - #14 ,
INFO  21:06:08,548 - #1 eps
INFO  21:06:08,548 - #7 =
INFO  21:06:08,549 - #2 2
INFO  21:06:08,549 - #6 ;
INFO  21:06:08,549 - #1 int
INFO  21:06:08,549 - #1 e
INFO  21:06:08,549 - #6 ;
INFO  21:06:08,549 - #35 void
INFO  21:06:08,550 - #1 test
INFO  21:06:08,550 - #10 (
INFO  21:06:08,550 - #11 )
INFO  21:06:08,550 - #29 {
INFO  21:06:08,550 - #1 int
INFO  21:06:08,550 - #1 a
INFO  21:06:08,550 - #14 ,
INFO  21:06:08,550 - #1 b
INFO  21:06:08,550 - #6 ;
INFO  21:06:08,550 - #1 bool
INFO  21:06:08,551 - #1 cond
INFO  21:06:08,551 - #6 ;
INFO  21:06:08,551 - #1 a
INFO  21:06:08,551 - #7 =
INFO  21:06:08,551 - #2 3
INFO  21:06:08,551 - #6 ;
INFO  21:06:08,551 - #1 b
INFO  21:06:08,551 - #7 =
INFO  21:06:08,551 - #2 5
INFO  21:06:08,551 - #6 ;
INFO  21:06:08,551 - #1 cond
INFO  21:06:08,552 - #7 =
INFO  21:06:08,552 - #4 true
INFO  21:06:08,552 - #6 ;
INFO  21:06:08,552 - #23 if
INFO  21:06:08,552 - #10 (
INFO  21:06:08,553 - #2 2
INFO  21:06:08,553 - #18 *
INFO  21:06:08,553 - #10 (
INFO  21:06:08,553 - #1 a
INFO  21:06:08,553 - #17 -
INFO  21:06:08,553 - #1 b
INFO  21:06:08,553 - #17 -
INFO  21:06:08,553 - #2 1
INFO  21:06:08,553 - #11 )
INFO  21:06:08,553 - #17 -
INFO  21:06:08,553 - #2 14
INFO  21:06:08,553 - #40 >
INFO  21:06:08,553 - #2 0
INFO  21:06:08,554 - #31 ||
INFO  21:06:08,554 - #1 cond
INFO  21:06:08,554 - #11 )
INFO  21:06:08,554 - #13 print
INFO  21:06:08,554 - #10 (
INFO  21:06:08,554 - #1 a
INFO  21:06:08,554 - #16 +
INFO  21:06:08,554 - #1 b
INFO  21:06:08,554 - #11 )
INFO  21:06:08,554 - #6 ;
INFO  21:06:08,554 - #30 }
INFO  21:06:08,555 - #1 int
INFO  21:06:08,555 - #1 max
INFO  21:06:08,555 - #10 (
INFO  21:06:08,555 - #1 int
INFO  21:06:08,555 - #1 a
INFO  21:06:08,555 - #14 ,
INFO  21:06:08,555 - #1 int
INFO  21:06:08,555 - #1 b
INFO  21:06:08,555 - #11 )
INFO  21:06:08,555 - #29 {
INFO  21:06:08,555 - #1 int
INFO  21:06:08,555 - #1 x
INFO  21:06:08,555 - #6 ;
INFO  21:06:08,556 - #23 if
INFO  21:06:08,556 - #10 (
INFO  21:06:08,556 - #1 a
INFO  21:06:08,556 - #40 >
INFO  21:06:08,556 - #1 b
INFO  21:06:08,556 - #11 )
INFO  21:06:08,556 - #29 {
INFO  21:06:08,556 - #36 return
INFO  21:06:08,556 - #1 a
INFO  21:06:08,556 - #6 ;
INFO  21:06:08,556 - #30 }
INFO  21:06:08,556 - #24 else
INFO  21:06:08,556 - #36 return
INFO  21:06:08,557 - #1 b
INFO  21:06:08,557 - #6 ;
INFO  21:06:08,557 - #30 }
INFO  21:06:08,557 - #1 int
INFO  21:06:08,557 - #1 min
INFO  21:06:08,557 - #10 (
INFO  21:06:08,557 - #1 int
INFO  21:06:08,557 - #1 a
INFO  21:06:08,557 - #14 ,
INFO  21:06:08,557 - #1 int
INFO  21:06:08,557 - #1 b
INFO  21:06:08,557 - #11 )
INFO  21:06:08,557 - #29 {
INFO  21:06:08,558 - #23 if
INFO  21:06:08,558 - #10 (
INFO  21:06:08,558 - #1 a
INFO  21:06:08,558 - #39 <
INFO  21:06:08,558 - #1 b
INFO  21:06:08,558 - #11 )
INFO  21:06:08,558 - #29 {
INFO  21:06:08,558 - #36 return
INFO  21:06:08,558 - #1 a
INFO  21:06:08,558 - #6 ;
INFO  21:06:08,558 - #30 }
INFO  21:06:08,558 - #24 else
INFO  21:06:08,558 - #29 {
INFO  21:06:08,559 - #36 return
INFO  21:06:08,559 - #1 b
INFO  21:06:08,559 - #6 ;
INFO  21:06:08,559 - #30 }
INFO  21:06:08,559 - #30 }
INFO  21:06:08,559 - #35 void
INFO  21:06:08,559 - #1 main
INFO  21:06:08,560 - #10 (
INFO  21:06:08,560 - #11 )
INFO  21:06:08,560 - #29 {
INFO  21:06:08,560 - #1 int
INFO  21:06:08,560 - #1 a
INFO  21:06:08,560 - #21 [
INFO  21:06:08,560 - #22 ]
INFO  21:06:08,560 - #6 ;
INFO  21:06:08,560 - #1 int
INFO  21:06:08,560 - #1 length
INFO  21:06:08,560 - #6 ;
INFO  21:06:08,560 - #1 int
INFO  21:06:08,560 - #1 i
INFO  21:06:08,560 - #6 ;
INFO  21:06:08,560 - #1 length
INFO  21:06:08,560 - #7 =
INFO  21:06:08,560 - #1 min
INFO  21:06:08,561 - #10 (
INFO  21:06:08,561 - #1 c
INFO  21:06:08,561 - #14 ,
INFO  21:06:08,561 - #2 103
INFO  21:06:08,561 - #11 )
INFO  21:06:08,561 - #6 ;
INFO  21:06:08,561 - #1 test
INFO  21:06:08,561 - #10 (
INFO  21:06:08,561 - #11 )
INFO  21:06:08,561 - #6 ;
INFO  21:06:08,561 - #23 if
INFO  21:06:08,561 - #10 (
INFO  21:06:08,561 - #1 length
INFO  21:06:08,561 - #40 >
INFO  21:06:08,561 - #2 0
INFO  21:06:08,562 - #32 &&
INFO  21:06:08,562 - #1 length
INFO  21:06:08,563 - #41 <=
INFO  21:06:08,563 - #1 d
INFO  21:06:08,563 - #11 )
INFO  21:06:08,563 - #1 a
INFO  21:06:08,563 - #7 =
INFO  21:06:08,563 - #15 new
INFO  21:06:08,563 - #1 int
INFO  21:06:08,563 - #21 [
INFO  21:06:08,563 - #1 length
INFO  21:06:08,563 - #22 ]
INFO  21:06:08,564 - #6 ;
INFO  21:06:08,564 - #24 else
INFO  21:06:08,564 - #1 a
INFO  21:06:08,564 - #7 =
INFO  21:06:08,564 - #15 new
INFO  21:06:08,564 - #1 int
INFO  21:06:08,564 - #21 [
INFO  21:06:08,564 - #2 5
INFO  21:06:08,564 - #22 ]
INFO  21:06:08,564 - #6 ;
INFO  21:06:08,564 - #25 do
INFO  21:06:08,567 - #29 {
INFO  21:06:08,567 - #12 read
INFO  21:06:08,567 - #10 (
INFO  21:06:08,567 - #1 a
INFO  21:06:08,567 - #21 [
INFO  21:06:08,567 - #1 i
INFO  21:06:08,567 - #22 ]
INFO  21:06:08,568 - #11 )
INFO  21:06:08,568 - #6 ;
INFO  21:06:08,568 - #23 if
INFO  21:06:08,568 - #10 (
INFO  21:06:08,568 - #1 a
INFO  21:06:08,568 - #21 [
INFO  21:06:08,569 - #1 i
INFO  21:06:08,569 - #22 ]
INFO  21:06:08,569 - #20 %
INFO  21:06:08,569 - #2 3
INFO  21:06:08,569 - #37 ==
INFO  21:06:08,569 - #2 0
INFO  21:06:08,569 - #11 )
INFO  21:06:08,569 - #13 print
INFO  21:06:08,569 - #10 (
INFO  21:06:08,569 - #1 a
INFO  21:06:08,569 - #21 [
INFO  21:06:08,569 - #1 i
INFO  21:06:08,570 - #22 ]
INFO  21:06:08,570 - #11 )
INFO  21:06:08,570 - #6 ;
INFO  21:06:08,570 - #24 else
INFO  21:06:08,570 - #13 print
INFO  21:06:08,570 - #10 (
INFO  21:06:08,570 - #1 max
INFO  21:06:08,570 - #10 (
INFO  21:06:08,570 - #1 a
INFO  21:06:08,570 - #21 [
INFO  21:06:08,570 - #1 i
INFO  21:06:08,570 - #22 ]
INFO  21:06:08,571 - #14 ,
INFO  21:06:08,571 - #2 0
INFO  21:06:08,571 - #11 )
INFO  21:06:08,571 - #11 )
INFO  21:06:08,571 - #6 ;
INFO  21:06:08,571 - #1 i
INFO  21:06:08,571 - #8 ++
INFO  21:06:08,571 - #6 ;
INFO  21:06:08,571 - #30 }
INFO  21:06:08,571 - #26 while
INFO  21:06:08,571 - #10 (
INFO  21:06:08,571 - #1 i
INFO  21:06:08,572 - #41 <=
INFO  21:06:08,572 - #1 length
INFO  21:06:08,572 - #17 -
INFO  21:06:08,572 - #2 1
INFO  21:06:08,572 - #11 )
INFO  21:06:08,572 - #6 ;
INFO  21:06:08,572 - #13 print
INFO  21:06:08,572 - #10 (
INFO  21:06:08,572 - #1 d
INFO  21:06:08,572 - #11 )
INFO  21:06:08,572 - #6 ;
INFO  21:06:08,572 - #30 }
INFO  21:06:08,572 - #30 }
