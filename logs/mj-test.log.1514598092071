INFO  02:35:36,613 - Compiling source file: C:\Users\LjubaS\Desktop\ACA_ETF\IR4PP1\projekat\sa100122dProjekatDX10\workspace\MJCompiler\test\program.mj
INFO  02:35:36,618 - #2 program
INFO  02:35:36,618 - #8 Program
INFO  02:35:36,619 - #20 {
INFO  02:35:36,619 - #5 const
INFO  02:35:36,619 - #8 int
INFO  02:35:36,619 - #8 c
INFO  02:35:36,619 - #24 =
INFO  02:35:36,619 - #9 10
INFO  02:35:36,619 - #27 ;
INFO  02:35:36,619 - #5 const
INFO  02:35:36,620 - #8 int
INFO  02:35:36,620 - #8 d
INFO  02:35:36,620 - #24 =
INFO  02:35:36,620 - #9 99
INFO  02:35:36,620 - #28 ,
INFO  02:35:36,620 - #8 eps
INFO  02:35:36,620 - #24 =
INFO  02:35:36,620 - #9 2
INFO  02:35:36,620 - #27 ;
INFO  02:35:36,621 - #8 int
INFO  02:35:36,621 - #27 ;
INFO  02:35:36,621 - #6 void
INFO  02:35:36,621 - #8 test
INFO  02:35:36,621 - #29 (
INFO  02:35:36,621 - #30 )
INFO  02:35:36,621 - #20 {
INFO  02:35:36,621 - #8 int
INFO  02:35:36,621 - #8 a
INFO  02:35:36,621 - #28 ,
INFO  02:35:36,622 - #8 b
INFO  02:35:36,622 - #27 ;
INFO  02:35:36,622 - #8 bool
INFO  02:35:36,622 - #8 cond
INFO  02:35:36,622 - #27 ;
INFO  02:35:36,622 - #8 a
INFO  02:35:36,622 - #24 =
INFO  02:35:36,622 - #9 3
INFO  02:35:36,622 - #27 ;
INFO  02:35:36,622 - #8 b
INFO  02:35:36,622 - #24 =
INFO  02:35:36,622 - #9 5
INFO  02:35:36,622 - #27 ;
INFO  02:35:36,622 - #8 cond
INFO  02:35:36,623 - #24 =
INFO  02:35:36,623 - #11 true
INFO  02:35:36,623 - #27 ;
INFO  02:35:36,623 - #31 if
INFO  02:35:36,623 - #29 (
INFO  02:35:36,623 - #9 2
INFO  02:35:36,623 - #17 *
INFO  02:35:36,623 - #29 (
INFO  02:35:36,623 - #8 a
INFO  02:35:36,623 - #16 -
INFO  02:35:36,623 - #8 b
INFO  02:35:36,623 - #16 -
INFO  02:35:36,623 - #9 1
INFO  02:35:36,624 - #30 )
INFO  02:35:36,624 - #16 -
INFO  02:35:36,624 - #9 14
INFO  02:35:36,626 - #38 >
INFO  02:35:36,626 - #9 0
INFO  02:35:36,626 - #14 ||
INFO  02:35:36,626 - #8 cond
INFO  02:35:36,627 - #30 )
INFO  02:35:36,627 - #3 print
INFO  02:35:36,627 - #29 (
INFO  02:35:36,627 - #8 a
INFO  02:35:36,627 - #15 +
INFO  02:35:36,627 - #8 b
INFO  02:35:36,627 - #30 )
INFO  02:35:36,627 - #27 ;
INFO  02:35:36,627 - #21 }
INFO  02:35:36,628 - #8 int
INFO  02:35:36,628 - #8 max
INFO  02:35:36,628 - #29 (
INFO  02:35:36,628 - #8 int
INFO  02:35:36,628 - #8 a
INFO  02:35:36,628 - #28 ,
INFO  02:35:36,628 - #8 int
INFO  02:35:36,628 - #8 b
INFO  02:35:36,628 - #30 )
INFO  02:35:36,628 - #20 {
INFO  02:35:36,628 - #31 if
INFO  02:35:36,628 - #29 (
INFO  02:35:36,628 - #8 a
INFO  02:35:36,629 - #38 >
INFO  02:35:36,629 - #8 b
INFO  02:35:36,629 - #30 )
INFO  02:35:36,629 - #20 {
INFO  02:35:36,629 - #37 return
INFO  02:35:36,629 - #8 a
INFO  02:35:36,630 - #27 ;
INFO  02:35:36,630 - #21 }
INFO  02:35:36,630 - #32 else
INFO  02:35:36,630 - #37 return
INFO  02:35:36,630 - #8 b
INFO  02:35:36,630 - #27 ;
INFO  02:35:36,630 - #21 }
INFO  02:35:36,630 - #8 int
INFO  02:35:36,631 - #8 min
INFO  02:35:36,631 - #29 (
INFO  02:35:36,631 - #8 int
INFO  02:35:36,631 - #8 a
INFO  02:35:36,631 - #28 ,
INFO  02:35:36,631 - #8 int
INFO  02:35:36,631 - #8 b
INFO  02:35:36,631 - #30 )
INFO  02:35:36,631 - #20 {
INFO  02:35:36,631 - #31 if
INFO  02:35:36,631 - #29 (
INFO  02:35:36,631 - #8 a
INFO  02:35:36,631 - #40 <
INFO  02:35:36,632 - #8 b
INFO  02:35:36,632 - #30 )
INFO  02:35:36,632 - #20 {
INFO  02:35:36,632 - #37 return
INFO  02:35:36,632 - #8 a
INFO  02:35:36,632 - #27 ;
INFO  02:35:36,632 - #21 }
INFO  02:35:36,632 - #32 else
INFO  02:35:36,632 - #20 {
INFO  02:35:36,632 - #37 return
INFO  02:35:36,632 - #8 b
INFO  02:35:36,632 - #27 ;
INFO  02:35:36,633 - #21 }
INFO  02:35:36,633 - #21 }
INFO  02:35:36,633 - #6 void
INFO  02:35:36,633 - #8 main
INFO  02:35:36,633 - #29 (
INFO  02:35:36,633 - #30 )
INFO  02:35:36,633 - #20 {
INFO  02:35:36,633 - #8 int
INFO  02:35:36,633 - #8 a
INFO  02:35:36,633 - #22 [
INFO  02:35:36,633 - #23 ]
INFO  02:35:36,633 - #27 ;
INFO  02:35:36,633 - #8 int
INFO  02:35:36,633 - #8 length
INFO  02:35:36,634 - #27 ;
INFO  02:35:36,634 - #8 length
INFO  02:35:36,634 - #24 =
INFO  02:35:36,634 - #8 c
INFO  02:35:36,634 - #27 ;
INFO  02:35:36,634 - #8 test
INFO  02:35:36,634 - #29 (
INFO  02:35:36,634 - #30 )
INFO  02:35:36,634 - #27 ;
INFO  02:35:36,634 - #31 if
INFO  02:35:36,634 - #29 (
INFO  02:35:36,634 - #8 length
INFO  02:35:36,634 - #38 >
INFO  02:35:36,634 - #9 0
INFO  02:35:36,634 - #13 &&
INFO  02:35:36,635 - #8 length
INFO  02:35:36,635 - #42 <=
INFO  02:35:36,635 - #8 d
INFO  02:35:36,635 - #30 )
INFO  02:35:36,635 - #8 a
INFO  02:35:36,635 - #24 =
INFO  02:35:36,635 - #7 new
INFO  02:35:36,635 - #8 int
INFO  02:35:36,635 - #22 [
INFO  02:35:36,635 - #8 length
INFO  02:35:36,635 - #23 ]
INFO  02:35:36,635 - #27 ;
INFO  02:35:36,636 - #32 else
INFO  02:35:36,636 - #8 a
INFO  02:35:36,636 - #24 =
INFO  02:35:36,636 - #7 new
INFO  02:35:36,636 - #8 int
INFO  02:35:36,636 - #22 [
INFO  02:35:36,636 - #9 5
INFO  02:35:36,636 - #23 ]
INFO  02:35:36,636 - #27 ;
INFO  02:35:36,636 - #33 do
INFO  02:35:36,636 - #20 {
INFO  02:35:36,636 - #4 read
INFO  02:35:36,636 - #29 (
INFO  02:35:36,636 - #8 a
INFO  02:35:36,637 - #22 [
INFO  02:35:36,637 - #8 i
INFO  02:35:36,637 - #23 ]
INFO  02:35:36,637 - #30 )
INFO  02:35:36,637 - #27 ;
INFO  02:35:36,637 - #31 if
INFO  02:35:36,637 - #29 (
INFO  02:35:36,637 - #8 a
INFO  02:35:36,637 - #22 [
INFO  02:35:36,637 - #8 i
INFO  02:35:36,637 - #23 ]
INFO  02:35:36,637 - #19 %
INFO  02:35:36,637 - #9 3
INFO  02:35:36,637 - #39 ==
INFO  02:35:36,637 - #9 0
INFO  02:35:36,638 - #30 )
INFO  02:35:36,638 - #3 print
INFO  02:35:36,638 - #29 (
INFO  02:35:36,638 - #8 a
INFO  02:35:36,638 - #22 [
INFO  02:35:36,638 - #8 i
INFO  02:35:36,638 - #23 ]
INFO  02:35:36,638 - #30 )
INFO  02:35:36,638 - #27 ;
INFO  02:35:36,638 - #32 else
INFO  02:35:36,638 - #3 print
INFO  02:35:36,638 - #29 (
INFO  02:35:36,638 - #8 max
INFO  02:35:36,638 - #29 (
INFO  02:35:36,638 - #8 a
INFO  02:35:36,638 - #22 [
INFO  02:35:36,639 - #8 i
INFO  02:35:36,639 - #23 ]
INFO  02:35:36,639 - #28 ,
INFO  02:35:36,639 - #9 0
INFO  02:35:36,639 - #30 )
INFO  02:35:36,639 - #30 )
INFO  02:35:36,639 - #27 ;
INFO  02:35:36,639 - #21 }
INFO  02:35:36,639 - #34 while
INFO  02:35:36,639 - #29 (
INFO  02:35:36,639 - #8 i
INFO  02:35:36,639 - #42 <=
INFO  02:35:36,639 - #8 length
INFO  02:35:36,639 - #16 -
INFO  02:35:36,639 - #9 1
INFO  02:35:36,639 - #30 )
INFO  02:35:36,639 - #27 ;
INFO  02:35:36,639 - #3 print
INFO  02:35:36,639 - #29 (
INFO  02:35:36,640 - #8 d
INFO  02:35:36,640 - #30 )
INFO  02:35:36,640 - #27 ;
INFO  02:35:36,640 - #21 }
INFO  02:35:36,640 - #21 }
