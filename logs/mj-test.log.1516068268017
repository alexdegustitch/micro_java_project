INFO  22:16:00,498 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatFX_Argon\workspace\MJCompiler\test\program.mj
INFO  22:16:00,504 - #33 program
INFO  22:16:00,504 - #1 Program
INFO  22:16:00,504 - #34 const
INFO  22:16:00,504 - #1 int
INFO  22:16:00,504 - #1 c
INFO  22:16:00,504 - #7 =
INFO  22:16:00,504 - #2 10
INFO  22:16:00,504 - #6 ;
INFO  22:16:00,505 - #34 const
INFO  22:16:00,505 - #1 int
INFO  22:16:00,505 - #1 d
INFO  22:16:00,505 - #7 =
INFO  22:16:00,505 - #2 99
INFO  22:16:00,505 - #14 ,
INFO  22:16:00,505 - #1 eps
INFO  22:16:00,505 - #7 =
INFO  22:16:00,505 - #2 2
INFO  22:16:00,506 - #6 ;
INFO  22:16:00,506 - #1 int
INFO  22:16:00,506 - #1 e
INFO  22:16:00,506 - #6 ;
INFO  22:16:00,506 - #29 {
INFO  22:16:00,506 - #35 void
INFO  22:16:00,506 - #1 test
INFO  22:16:00,506 - #10 (
INFO  22:16:00,506 - #11 )
INFO  22:16:00,506 - #1 int
INFO  22:16:00,506 - #1 a
INFO  22:16:00,507 - #14 ,
INFO  22:16:00,507 - #1 b
INFO  22:16:00,507 - #6 ;
INFO  22:16:00,507 - #1 bool
INFO  22:16:00,507 - #1 cond
INFO  22:16:00,507 - #6 ;
INFO  22:16:00,507 - #29 {
INFO  22:16:00,507 - #1 a
INFO  22:16:00,507 - #7 =
INFO  22:16:00,507 - #2 3
INFO  22:16:00,507 - #6 ;
INFO  22:16:00,507 - #1 b
INFO  22:16:00,507 - #7 =
INFO  22:16:00,507 - #2 5
INFO  22:16:00,507 - #6 ;
INFO  22:16:00,508 - #1 cond
INFO  22:16:00,508 - #7 =
INFO  22:16:00,508 - #4 true
INFO  22:16:00,508 - #6 ;
INFO  22:16:00,508 - #23 if
INFO  22:16:00,508 - #10 (
INFO  22:16:00,508 - #2 2
INFO  22:16:00,508 - #18 *
INFO  22:16:00,508 - #10 (
INFO  22:16:00,508 - #1 a
INFO  22:16:00,508 - #17 -
INFO  22:16:00,509 - #1 b
INFO  22:16:00,509 - #17 -
INFO  22:16:00,509 - #2 1
INFO  22:16:00,509 - #11 )
INFO  22:16:00,509 - #17 -
INFO  22:16:00,510 - #2 14
INFO  22:16:00,510 - #40 >
INFO  22:16:00,511 - #2 0
INFO  22:16:00,511 - #31 ||
INFO  22:16:00,511 - #1 cond
INFO  22:16:00,511 - #11 )
INFO  22:16:00,511 - #13 print
INFO  22:16:00,511 - #10 (
INFO  22:16:00,511 - #1 a
INFO  22:16:00,511 - #16 +
INFO  22:16:00,511 - #1 b
INFO  22:16:00,511 - #11 )
INFO  22:16:00,511 - #6 ;
INFO  22:16:00,511 - #30 }
INFO  22:16:00,512 - #1 int
INFO  22:16:00,512 - #1 max
INFO  22:16:00,512 - #10 (
INFO  22:16:00,512 - #1 int
INFO  22:16:00,512 - #1 a
INFO  22:16:00,512 - #14 ,
INFO  22:16:00,512 - #1 int
INFO  22:16:00,512 - #1 b
INFO  22:16:00,512 - #11 )
INFO  22:16:00,512 - #1 int
INFO  22:16:00,512 - #1 x
INFO  22:16:00,512 - #6 ;
INFO  22:16:00,512 - #29 {
INFO  22:16:00,513 - #23 if
INFO  22:16:00,513 - #10 (
INFO  22:16:00,513 - #1 a
INFO  22:16:00,513 - #40 >
INFO  22:16:00,513 - #1 b
INFO  22:16:00,513 - #11 )
INFO  22:16:00,513 - #29 {
INFO  22:16:00,513 - #36 return
INFO  22:16:00,513 - #1 a
INFO  22:16:00,513 - #6 ;
INFO  22:16:00,513 - #30 }
INFO  22:16:00,513 - #24 else
INFO  22:16:00,514 - #36 return
INFO  22:16:00,514 - #1 b
INFO  22:16:00,514 - #6 ;
INFO  22:16:00,514 - #30 }
INFO  22:16:00,514 - #1 int
INFO  22:16:00,514 - #1 min
INFO  22:16:00,514 - #10 (
INFO  22:16:00,514 - #1 int
INFO  22:16:00,514 - #1 a
INFO  22:16:00,514 - #14 ,
INFO  22:16:00,514 - #1 int
INFO  22:16:00,515 - #1 b
INFO  22:16:00,515 - #11 )
INFO  22:16:00,515 - #29 {
INFO  22:16:00,515 - #23 if
INFO  22:16:00,515 - #10 (
INFO  22:16:00,515 - #1 a
INFO  22:16:00,515 - #39 <
INFO  22:16:00,515 - #1 b
INFO  22:16:00,515 - #11 )
INFO  22:16:00,515 - #29 {
INFO  22:16:00,515 - #36 return
INFO  22:16:00,516 - #1 a
INFO  22:16:00,516 - #6 ;
INFO  22:16:00,516 - #30 }
INFO  22:16:00,516 - #24 else
INFO  22:16:00,516 - #29 {
INFO  22:16:00,516 - #36 return
INFO  22:16:00,516 - #1 b
INFO  22:16:00,516 - #6 ;
INFO  22:16:00,516 - #30 }
INFO  22:16:00,516 - #30 }
INFO  22:16:00,516 - #35 void
INFO  22:16:00,516 - #1 obrada
INFO  22:16:00,516 - #10 (
INFO  22:16:00,516 - #1 int
INFO  22:16:00,517 - #1 a
INFO  22:16:00,517 - #21 [
INFO  22:16:00,517 - #22 ]
INFO  22:16:00,517 - #14 ,
INFO  22:16:00,517 - #1 int
INFO  22:16:00,517 - #1 length
INFO  22:16:00,517 - #11 )
INFO  22:16:00,517 - #1 int
INFO  22:16:00,517 - #1 i
INFO  22:16:00,517 - #6 ;
INFO  22:16:00,517 - #29 {
INFO  22:16:00,517 - #1 i
INFO  22:16:00,518 - #7 =
INFO  22:16:00,518 - #2 0
INFO  22:16:00,518 - #6 ;
INFO  22:16:00,518 - #25 do
INFO  22:16:00,518 - #29 {
INFO  22:16:00,518 - #23 if
INFO  22:16:00,518 - #10 (
INFO  22:16:00,518 - #1 a
INFO  22:16:00,518 - #21 [
INFO  22:16:00,518 - #1 i
INFO  22:16:00,518 - #22 ]
INFO  22:16:00,518 - #20 %
INFO  22:16:00,518 - #2 3
INFO  22:16:00,518 - #37 ==
INFO  22:16:00,518 - #2 0
INFO  22:16:00,518 - #11 )
INFO  22:16:00,519 - #13 print
INFO  22:16:00,519 - #10 (
INFO  22:16:00,519 - #1 a
INFO  22:16:00,519 - #21 [
INFO  22:16:00,519 - #1 i
INFO  22:16:00,519 - #22 ]
INFO  22:16:00,519 - #11 )
INFO  22:16:00,519 - #6 ;
INFO  22:16:00,519 - #24 else
INFO  22:16:00,519 - #13 print
INFO  22:16:00,519 - #10 (
INFO  22:16:00,519 - #1 max
INFO  22:16:00,519 - #10 (
INFO  22:16:00,519 - #1 a
INFO  22:16:00,519 - #21 [
INFO  22:16:00,519 - #1 i
INFO  22:16:00,519 - #22 ]
INFO  22:16:00,519 - #14 ,
INFO  22:16:00,520 - #2 0
INFO  22:16:00,520 - #11 )
INFO  22:16:00,520 - #11 )
INFO  22:16:00,520 - #6 ;
INFO  22:16:00,520 - #1 i
INFO  22:16:00,520 - #8 ++
INFO  22:16:00,520 - #6 ;
INFO  22:16:00,520 - #30 }
INFO  22:16:00,520 - #26 while
INFO  22:16:00,520 - #10 (
INFO  22:16:00,520 - #1 i
INFO  22:16:00,520 - #39 <
INFO  22:16:00,520 - #1 length
INFO  22:16:00,520 - #11 )
INFO  22:16:00,520 - #6 ;
INFO  22:16:00,520 - #30 }
INFO  22:16:00,520 - #35 void
INFO  22:16:00,521 - #1 main
INFO  22:16:00,521 - #10 (
INFO  22:16:00,521 - #11 )
INFO  22:16:00,521 - #1 int
INFO  22:16:00,521 - #1 a
INFO  22:16:00,521 - #21 [
INFO  22:16:00,521 - #22 ]
INFO  22:16:00,521 - #14 ,
INFO  22:16:00,521 - #1 length
INFO  22:16:00,521 - #6 ;
INFO  22:16:00,521 - #1 int
INFO  22:16:00,521 - #1 i
INFO  22:16:00,521 - #6 ;
INFO  22:16:00,521 - #29 {
INFO  22:16:00,521 - #1 length
INFO  22:16:00,521 - #7 =
INFO  22:16:00,521 - #1 min
INFO  22:16:00,522 - #10 (
INFO  22:16:00,522 - #1 c
INFO  22:16:00,522 - #14 ,
INFO  22:16:00,522 - #2 103
INFO  22:16:00,522 - #11 )
INFO  22:16:00,522 - #6 ;
INFO  22:16:00,522 - #1 test
INFO  22:16:00,522 - #10 (
INFO  22:16:00,522 - #11 )
INFO  22:16:00,522 - #6 ;
INFO  22:16:00,522 - #23 if
INFO  22:16:00,522 - #10 (
INFO  22:16:00,522 - #1 length
INFO  22:16:00,522 - #40 >
INFO  22:16:00,522 - #2 0
INFO  22:16:00,522 - #32 &&
INFO  22:16:00,522 - #1 length
INFO  22:16:00,522 - #41 <=
INFO  22:16:00,522 - #1 d
INFO  22:16:00,522 - #11 )
INFO  22:16:00,522 - #1 a
INFO  22:16:00,522 - #7 =
INFO  22:16:00,523 - #15 new
INFO  22:16:00,523 - #1 int
INFO  22:16:00,523 - #21 [
INFO  22:16:00,523 - #1 length
INFO  22:16:00,523 - #22 ]
INFO  22:16:00,523 - #6 ;
INFO  22:16:00,523 - #24 else
INFO  22:16:00,523 - #1 a
INFO  22:16:00,523 - #7 =
INFO  22:16:00,523 - #15 new
INFO  22:16:00,523 - #1 int
INFO  22:16:00,523 - #21 [
INFO  22:16:00,523 - #2 5
INFO  22:16:00,523 - #22 ]
INFO  22:16:00,523 - #6 ;
INFO  22:16:00,523 - #25 do
INFO  22:16:00,523 - #29 {
INFO  22:16:00,523 - #12 read
INFO  22:16:00,523 - #10 (
INFO  22:16:00,524 - #1 a
INFO  22:16:00,524 - #21 [
INFO  22:16:00,524 - #1 i
INFO  22:16:00,524 - #22 ]
INFO  22:16:00,524 - #11 )
INFO  22:16:00,524 - #6 ;
INFO  22:16:00,524 - #30 }
INFO  22:16:00,524 - #26 while
INFO  22:16:00,524 - #10 (
INFO  22:16:00,524 - #1 i
INFO  22:16:00,524 - #41 <=
INFO  22:16:00,524 - #1 length
INFO  22:16:00,524 - #17 -
INFO  22:16:00,524 - #2 1
INFO  22:16:00,524 - #11 )
INFO  22:16:00,524 - #6 ;
INFO  22:16:00,524 - #1 obrada
INFO  22:16:00,524 - #10 (
INFO  22:16:00,525 - #1 a
INFO  22:16:00,525 - #14 ,
INFO  22:16:00,525 - #1 length
INFO  22:16:00,525 - #11 )
INFO  22:16:00,525 - #6 ;
INFO  22:16:00,525 - #13 print
INFO  22:16:00,525 - #10 (
INFO  22:16:00,525 - #1 d
INFO  22:16:00,525 - #11 )
INFO  22:16:00,525 - #6 ;
INFO  22:16:00,525 - #30 }
INFO  22:16:00,525 - #30 }
