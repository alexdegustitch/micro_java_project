INFO  01:04:37,749 - #2 program
INFO  01:04:37,751 - #8 Program
INFO  01:04:37,752 - #20 {
INFO  01:04:37,752 - #5 const
INFO  01:04:37,752 - #8 int
INFO  01:04:37,752 - #8 c
INFO  01:04:37,752 - #24 =
INFO  01:04:37,752 - #9 10
INFO  01:04:37,752 - #27 ;
INFO  01:04:37,753 - #5 const
INFO  01:04:37,753 - #8 int
INFO  01:04:37,754 - #8 d
INFO  01:04:37,754 - #24 =
INFO  01:04:37,754 - #9 99
INFO  01:04:37,754 - #28 ,
INFO  01:04:37,754 - #8 eps
INFO  01:04:37,754 - #24 =
INFO  01:04:37,754 - #9 2
INFO  01:04:37,754 - #27 ;
INFO  01:04:37,755 - #8 int
INFO  01:04:37,755 - #27 ;
ERROR 01:04:37,755 - 
Sintaksna greska na liniji 4 na koloni 8 za simbol ";"
INFO  01:04:37,755 - #6 void
INFO  01:04:37,755 - #8 test
INFO  01:04:37,756 - #29 (
INFO  01:07:41,212 - #2 program
INFO  01:07:41,212 - #8 Program
INFO  01:07:41,212 - #20 {
INFO  01:07:41,212 - #5 const
INFO  01:07:41,212 - #8 int
INFO  01:07:41,213 - #8 c
INFO  01:07:41,213 - #24 =
INFO  01:07:41,213 - #9 10
INFO  01:07:41,213 - #27 ;
INFO  01:07:41,213 - #5 const
INFO  01:07:41,214 - #8 int
INFO  01:07:41,214 - #8 d
INFO  01:07:41,214 - #24 =
INFO  01:07:41,214 - #9 99
INFO  01:07:41,215 - #28 ,
INFO  01:07:41,215 - #8 eps
INFO  01:07:41,215 - #24 =
INFO  01:07:41,215 - #9 2
INFO  01:07:41,215 - #27 ;
INFO  01:07:41,215 - #8 int
INFO  01:07:41,216 - #27 ;
ERROR 01:07:41,216 - 
Sintaksna greska na liniji 4 na koloni 8 za simbol ";"
INFO  01:07:41,216 - #6 void
INFO  01:07:41,216 - #8 test
INFO  01:07:41,216 - #29 (
ERROR 01:07:41,217 - Sintaksna greska - neispravna definicija promenljive! 
INFO  01:07:41,218 - #30 )
INFO  01:07:41,218 - #20 {
INFO  01:07:41,218 - #8 int
INFO  01:07:41,218 - #8 a
INFO  01:07:41,218 - #28 ,
INFO  01:07:41,218 - #8 b
INFO  01:07:41,219 - #27 ;
INFO  01:07:41,219 - #8 bool
INFO  01:07:41,219 - #8 cond
INFO  01:07:41,219 - #27 ;
INFO  01:07:41,219 - #8 a
INFO  01:07:41,219 - #24 =
INFO  01:07:41,220 - #9 3
INFO  01:07:41,220 - #27 ;
INFO  01:07:41,220 - #8 b
INFO  01:07:41,221 - #24 =
INFO  01:07:41,221 - #9 5
INFO  01:07:41,221 - #27 ;
INFO  01:07:41,221 - #8 cond
INFO  01:07:41,221 - #24 =
INFO  01:07:41,221 - #11 true
INFO  01:07:41,221 - #27 ;
INFO  01:07:41,223 - #31 if
INFO  01:07:41,223 - #29 (
INFO  01:07:41,223 - #9 2
INFO  01:07:41,223 - #17 *
INFO  01:07:41,223 - #29 (
INFO  01:07:41,225 - #8 a
INFO  01:07:41,225 - #16 -
INFO  01:07:41,225 - #8 b
INFO  01:07:41,227 - #16 -
INFO  01:07:41,227 - #9 1
INFO  01:07:41,227 - #30 )
INFO  01:07:41,227 - #16 -
INFO  01:07:41,228 - #9 14
INFO  01:07:41,228 - #38 >
INFO  01:07:41,228 - #9 0
INFO  01:07:41,230 - #14 ||
INFO  01:07:41,231 - #8 cond
INFO  01:07:41,231 - #30 )
INFO  01:07:41,231 - #3 print
INFO  01:07:41,231 - #29 (
INFO  01:07:41,231 - #8 a
INFO  01:07:41,231 - #15 +
INFO  01:07:41,232 - #8 b
INFO  01:07:41,232 - #30 )
INFO  01:07:41,232 - #27 ;
INFO  01:07:41,232 - #21 }
INFO  01:07:41,233 - #8 int
INFO  01:07:41,233 - #8 max
INFO  01:07:41,233 - #29 (
INFO  01:07:41,236 - #8 int
INFO  01:07:41,236 - #8 a
INFO  01:07:41,236 - #28 ,
INFO  01:07:41,236 - #8 int
INFO  01:07:41,236 - #8 b
INFO  01:07:41,236 - #30 )
INFO  01:07:41,237 - #20 {
INFO  01:07:41,237 - #31 if
INFO  01:07:41,237 - #29 (
INFO  01:07:41,237 - #8 a
INFO  01:07:41,237 - #38 >
INFO  01:07:41,237 - #8 b
INFO  01:07:41,237 - #30 )
INFO  01:07:41,237 - #20 {
INFO  01:07:41,237 - #37 return
INFO  01:07:41,237 - #8 a
INFO  01:07:41,237 - #27 ;
INFO  01:07:41,238 - #21 }
INFO  01:07:41,238 - #32 else
INFO  01:07:41,238 - #37 return
INFO  01:07:41,238 - #8 b
INFO  01:07:41,238 - #27 ;
INFO  01:07:41,239 - #21 }
INFO  01:07:41,239 - #8 int
INFO  01:07:41,239 - #8 min
INFO  01:07:41,239 - #29 (
INFO  01:07:41,239 - #8 int
INFO  01:07:41,239 - #8 a
INFO  01:07:41,240 - #28 ,
INFO  01:07:41,240 - #8 int
INFO  01:07:41,240 - #8 b
INFO  01:07:41,240 - #30 )
INFO  01:07:41,240 - #20 {
INFO  01:07:41,240 - #31 if
INFO  01:07:41,240 - #29 (
INFO  01:07:41,240 - #8 a
INFO  01:07:41,240 - #40 <
INFO  01:07:41,241 - #8 b
INFO  01:07:41,242 - #30 )
INFO  01:07:41,242 - #20 {
INFO  01:07:41,242 - #37 return
INFO  01:07:41,242 - #8 a
INFO  01:07:41,242 - #27 ;
INFO  01:07:41,242 - #21 }
INFO  01:07:41,242 - #32 else
INFO  01:07:41,242 - #20 {
INFO  01:07:41,242 - #37 return
INFO  01:07:41,242 - #8 b
INFO  01:07:41,242 - #27 ;
INFO  01:07:41,243 - #21 }
INFO  01:07:41,243 - #21 }
INFO  01:07:41,243 - #6 void
INFO  01:07:41,243 - #8 main
INFO  01:07:41,243 - #29 (
INFO  01:07:41,243 - #30 )
INFO  01:07:41,243 - #20 {
INFO  01:07:41,243 - #8 int
INFO  01:07:41,243 - #8 a
INFO  01:07:41,243 - #22 [
INFO  01:07:41,243 - #23 ]
INFO  01:07:41,244 - #27 ;
INFO  01:07:41,244 - #8 int
INFO  01:07:41,244 - #8 length
INFO  01:07:41,244 - #27 ;
INFO  01:07:41,244 - #8 length
INFO  01:07:41,244 - #24 =
INFO  01:07:41,244 - #8 c
INFO  01:07:41,244 - #27 ;
INFO  01:07:41,244 - #8 test
INFO  01:07:41,244 - #29 (
INFO  01:07:41,244 - #30 )
INFO  01:07:41,244 - #27 ;
INFO  01:07:41,245 - #31 if
INFO  01:07:41,245 - #29 (
INFO  01:07:41,245 - #8 length
INFO  01:07:41,245 - #38 >
INFO  01:07:41,245 - #9 0
INFO  01:07:41,245 - #13 &&
INFO  01:07:41,245 - #8 length
INFO  01:07:41,245 - #42 <=
INFO  01:07:41,245 - #8 d
INFO  01:07:41,246 - #30 )
INFO  01:07:41,246 - #8 a
INFO  01:07:41,246 - #24 =
INFO  01:07:41,246 - #7 new
INFO  01:07:41,246 - #8 int
INFO  01:07:41,246 - #22 [
INFO  01:07:41,246 - #8 length
INFO  01:07:41,246 - #23 ]
INFO  01:07:41,247 - #27 ;
INFO  01:07:41,247 - #32 else
INFO  01:07:41,247 - #8 a
INFO  01:07:41,247 - #24 =
INFO  01:07:41,247 - #7 new
INFO  01:07:41,247 - #8 int
INFO  01:07:41,247 - #22 [
INFO  01:07:41,247 - #9 5
INFO  01:07:41,247 - #23 ]
INFO  01:07:41,247 - #27 ;
INFO  01:07:41,247 - #33 do
INFO  01:07:41,247 - #20 {
INFO  01:07:41,248 - #4 read
INFO  01:07:41,248 - #29 (
INFO  01:07:41,248 - #8 a
INFO  01:07:41,248 - #22 [
INFO  01:07:41,248 - #8 i
INFO  01:07:41,248 - #23 ]
INFO  01:07:41,248 - #30 )
INFO  01:07:41,248 - #27 ;
INFO  01:07:41,248 - #31 if
INFO  01:07:41,248 - #29 (
INFO  01:07:41,248 - #8 a
INFO  01:07:41,248 - #22 [
INFO  01:07:41,249 - #8 i
INFO  01:07:41,249 - #23 ]
INFO  01:07:41,249 - #19 %
INFO  01:07:41,249 - #9 3
INFO  01:07:41,250 - #39 ==
INFO  01:07:41,250 - #9 0
INFO  01:07:41,250 - #30 )
INFO  01:07:41,250 - #3 print
INFO  01:07:41,250 - #29 (
INFO  01:07:41,250 - #8 a
INFO  01:07:41,250 - #22 [
INFO  01:07:41,250 - #8 i
INFO  01:07:41,250 - #23 ]
INFO  01:07:41,250 - #30 )
INFO  01:07:41,251 - #27 ;
INFO  01:07:41,251 - #32 else
INFO  01:07:41,251 - #3 print
INFO  01:07:41,251 - #29 (
INFO  01:07:41,251 - #8 max
INFO  01:07:41,251 - #29 (
INFO  01:07:41,251 - #8 a
INFO  01:07:41,251 - #22 [
INFO  01:07:41,251 - #8 i
INFO  01:07:41,251 - #23 ]
INFO  01:07:41,251 - #28 ,
INFO  01:07:41,251 - #9 0
INFO  01:07:41,251 - #30 )
INFO  01:07:41,251 - #30 )
INFO  01:07:41,252 - #27 ;
INFO  01:07:41,252 - #21 }
INFO  01:07:41,252 - #34 while
INFO  01:07:41,252 - #29 (
INFO  01:07:41,252 - #8 i
INFO  01:07:41,252 - #42 <=
INFO  01:07:41,252 - #8 length
INFO  01:07:41,252 - #16 -
INFO  01:07:41,252 - #9 1
INFO  01:07:41,252 - #30 )
INFO  01:07:41,252 - #27 ;
INFO  01:07:41,252 - #3 print
INFO  01:07:41,253 - #29 (
INFO  01:07:41,253 - #8 d
INFO  01:07:41,253 - #30 )
INFO  01:07:41,253 - #27 ;
INFO  01:07:41,253 - #21 }
INFO  01:07:41,253 - #21 }
INFO  01:28:23,840 - #2 program
INFO  01:28:23,840 - #8 Program
INFO  01:28:23,841 - #20 {
INFO  01:28:23,841 - #5 const
INFO  01:28:23,841 - #8 int
INFO  01:28:23,841 - #8 c
INFO  01:28:23,841 - #24 =
INFO  01:28:23,841 - #9 10
INFO  01:28:23,841 - #27 ;
INFO  01:28:23,842 - #5 const
INFO  01:28:23,842 - #8 int
INFO  01:28:23,842 - #8 d
INFO  01:28:23,842 - #24 =
INFO  01:28:23,843 - #9 99
INFO  01:28:23,843 - #28 ,
INFO  01:28:23,843 - #8 eps
INFO  01:28:23,843 - #24 =
INFO  01:28:23,843 - #9 2
INFO  01:28:23,843 - #27 ;
INFO  01:28:23,843 - #8 int
INFO  01:28:23,843 - #27 ;
ERROR 01:28:23,844 - 
Sintaksna greska na liniji 4 na koloni 8 za simbol ";"
INFO  01:28:23,844 - #6 void
INFO  01:28:23,844 - #8 test
INFO  01:28:23,844 - #29 (
ERROR 01:28:23,845 - Sintaksna greska - neispravna definicija promenljive! 
INFO  01:28:23,846 - #30 )
INFO  01:28:23,846 - #20 {
INFO  01:28:23,846 - #8 int
INFO  01:28:23,846 - #8 a
INFO  01:28:23,846 - #28 ,
INFO  01:28:23,846 - #8 b
INFO  01:28:23,846 - #27 ;
INFO  01:28:23,847 - #8 bool
INFO  01:28:23,847 - #8 cond
INFO  01:28:23,847 - #27 ;
INFO  01:28:23,847 - #8 a
INFO  01:28:23,847 - #24 =
INFO  01:28:23,848 - #9 3
INFO  01:28:23,848 - #27 ;
INFO  01:28:23,848 - #8 b
INFO  01:28:23,849 - #24 =
INFO  01:28:23,849 - #9 5
INFO  01:28:23,849 - #27 ;
INFO  01:28:23,849 - #8 cond
INFO  01:28:23,850 - #24 =
INFO  01:28:23,850 - #11 true
INFO  01:28:23,850 - #27 ;
INFO  01:28:23,851 - #31 if
INFO  01:28:23,852 - #29 (
INFO  01:28:23,852 - #9 2
INFO  01:28:23,852 - #17 *
INFO  01:28:23,852 - #29 (
INFO  01:28:23,853 - #8 a
INFO  01:28:23,853 - #16 -
INFO  01:28:23,854 - #8 b
INFO  01:28:23,855 - #16 -
INFO  01:28:23,855 - #9 1
INFO  01:28:23,855 - #30 )
INFO  01:28:23,856 - #16 -
INFO  01:28:23,856 - #9 14
INFO  01:28:23,856 - #38 >
INFO  01:28:23,856 - #9 0
INFO  01:28:23,858 - #14 ||
INFO  01:28:23,859 - #8 cond
INFO  01:28:23,859 - #30 )
INFO  01:28:23,859 - #3 print
INFO  01:28:23,859 - #29 (
INFO  01:28:23,859 - #8 a
INFO  01:28:23,860 - #15 +
INFO  01:28:23,860 - #8 b
INFO  01:28:23,860 - #30 )
INFO  01:28:23,861 - #27 ;
INFO  01:28:23,861 - #21 }
INFO  01:28:23,861 - #8 int
INFO  01:28:23,862 - #8 max
INFO  01:28:23,862 - #29 (
INFO  01:28:23,864 - #8 int
INFO  01:28:23,864 - #8 a
INFO  01:28:23,864 - #28 ,
INFO  01:28:23,865 - #8 int
INFO  01:28:23,865 - #8 b
INFO  01:28:23,865 - #30 )
INFO  01:28:23,865 - #20 {
INFO  01:28:23,865 - #31 if
INFO  01:28:23,865 - #29 (
INFO  01:28:23,865 - #8 a
INFO  01:28:23,865 - #38 >
INFO  01:28:23,865 - #8 b
INFO  01:28:23,865 - #30 )
INFO  01:28:23,866 - #20 {
INFO  01:28:23,866 - #37 return
INFO  01:28:23,866 - #8 a
INFO  01:28:23,866 - #27 ;
INFO  01:28:23,866 - #21 }
INFO  01:28:23,866 - #32 else
INFO  01:28:23,866 - #37 return
INFO  01:28:23,866 - #8 b
INFO  01:28:23,866 - #27 ;
INFO  01:28:23,867 - #21 }
INFO  01:28:23,867 - #8 int
INFO  01:28:23,867 - #8 min
INFO  01:28:23,867 - #29 (
INFO  01:28:23,867 - #8 int
INFO  01:28:23,867 - #8 a
INFO  01:28:23,867 - #28 ,
INFO  01:28:23,868 - #8 int
INFO  01:28:23,868 - #8 b
INFO  01:28:23,868 - #30 )
INFO  01:28:23,868 - #20 {
INFO  01:28:23,868 - #31 if
INFO  01:28:23,868 - #29 (
INFO  01:28:23,868 - #8 a
INFO  01:28:23,868 - #40 <
INFO  01:28:23,868 - #8 b
INFO  01:28:23,869 - #30 )
INFO  01:28:23,869 - #20 {
INFO  01:28:23,869 - #37 return
INFO  01:28:23,869 - #8 a
INFO  01:28:23,869 - #27 ;
INFO  01:28:23,869 - #21 }
INFO  01:28:23,869 - #32 else
INFO  01:28:23,870 - #20 {
INFO  01:28:23,870 - #37 return
INFO  01:28:23,870 - #8 b
INFO  01:28:23,870 - #27 ;
INFO  01:28:23,870 - #21 }
INFO  01:28:23,870 - #21 }
INFO  01:28:23,870 - #6 void
INFO  01:28:23,870 - #8 main
INFO  01:28:23,870 - #29 (
INFO  01:28:23,870 - #30 )
INFO  01:28:23,870 - #20 {
INFO  01:28:23,870 - #8 int
INFO  01:28:23,871 - #8 a
INFO  01:28:23,871 - #22 [
INFO  01:28:23,871 - #23 ]
INFO  01:28:23,871 - #27 ;
INFO  01:28:23,871 - #8 int
INFO  01:28:23,871 - #8 length
INFO  01:28:23,871 - #27 ;
INFO  01:28:23,871 - #8 length
INFO  01:28:23,871 - #24 =
INFO  01:28:23,871 - #8 c
INFO  01:28:23,871 - #27 ;
INFO  01:28:23,872 - #8 test
INFO  01:28:23,872 - #29 (
INFO  01:28:23,872 - #30 )
INFO  01:28:23,872 - #27 ;
INFO  01:28:23,872 - #31 if
INFO  01:28:23,872 - #29 (
INFO  01:28:23,872 - #8 length
INFO  01:28:23,872 - #38 >
INFO  01:28:23,872 - #9 0
INFO  01:28:23,872 - #13 &&
INFO  01:28:23,872 - #8 length
INFO  01:28:23,872 - #42 <=
INFO  01:28:23,872 - #8 d
INFO  01:28:23,873 - #30 )
INFO  01:28:23,873 - #8 a
INFO  01:28:23,873 - #24 =
INFO  01:28:23,874 - #7 new
INFO  01:28:23,874 - #8 int
INFO  01:28:23,874 - #22 [
INFO  01:28:23,874 - #8 length
INFO  01:28:23,874 - #23 ]
INFO  01:28:23,874 - #27 ;
INFO  01:28:23,874 - #32 else
INFO  01:28:23,874 - #8 a
INFO  01:28:23,874 - #24 =
INFO  01:28:23,874 - #7 new
INFO  01:28:23,874 - #8 int
INFO  01:28:23,874 - #22 [
INFO  01:28:23,875 - #9 5
INFO  01:28:23,875 - #23 ]
INFO  01:28:23,875 - #27 ;
INFO  01:28:23,875 - #33 do
INFO  01:28:23,875 - #20 {
INFO  01:28:23,875 - #4 read
INFO  01:28:23,875 - #29 (
INFO  01:28:23,875 - #8 a
INFO  01:28:23,875 - #22 [
INFO  01:28:23,875 - #8 i
INFO  01:28:23,875 - #23 ]
INFO  01:28:23,875 - #30 )
INFO  01:28:23,875 - #27 ;
INFO  01:28:23,876 - #31 if
INFO  01:28:23,876 - #29 (
INFO  01:28:23,876 - #8 a
INFO  01:28:23,876 - #22 [
INFO  01:28:23,876 - #8 i
INFO  01:28:23,876 - #23 ]
INFO  01:28:23,876 - #19 %
INFO  01:28:23,876 - #9 3
INFO  01:28:23,877 - #39 ==
INFO  01:28:23,877 - #9 0
INFO  01:28:23,878 - #30 )
INFO  01:28:23,878 - #3 print
INFO  01:28:23,878 - #29 (
INFO  01:28:23,878 - #8 a
INFO  01:28:23,878 - #22 [
INFO  01:28:23,878 - #8 i
INFO  01:28:23,878 - #23 ]
INFO  01:28:23,878 - #30 )
INFO  01:28:23,878 - #27 ;
INFO  01:28:23,878 - #32 else
INFO  01:28:23,878 - #3 print
INFO  01:28:23,878 - #29 (
INFO  01:28:23,878 - #8 max
INFO  01:28:23,878 - #29 (
INFO  01:28:23,878 - #8 a
INFO  01:28:23,879 - #22 [
INFO  01:28:23,879 - #8 i
INFO  01:28:23,879 - #23 ]
INFO  01:28:23,879 - #28 ,
INFO  01:28:23,879 - #9 0
INFO  01:28:23,879 - #30 )
INFO  01:28:23,879 - #30 )
INFO  01:28:23,879 - #27 ;
INFO  01:28:23,879 - #21 }
INFO  01:28:23,880 - #34 while
INFO  01:28:23,880 - #29 (
INFO  01:28:23,880 - #8 i
INFO  01:28:23,880 - #42 <=
INFO  01:28:23,880 - #8 length
INFO  01:28:23,880 - #16 -
INFO  01:28:23,880 - #9 1
INFO  01:28:23,880 - #30 )
INFO  01:28:23,880 - #27 ;
INFO  01:28:23,880 - #3 print
INFO  01:28:23,880 - #29 (
INFO  01:28:23,881 - #8 d
INFO  01:28:23,881 - #30 )
INFO  01:28:23,881 - #27 ;
INFO  01:28:23,881 - #21 }
INFO  01:28:23,881 - #21 }
INFO  02:07:20,694 - #2 program
INFO  02:07:20,694 - #8 Program
INFO  02:07:20,694 - #20 {
INFO  02:07:20,695 - #5 const
INFO  02:07:20,695 - #8 int
INFO  02:07:20,695 - #8 c
INFO  02:07:20,695 - #24 =
INFO  02:07:20,695 - #9 10
INFO  02:07:20,695 - #27 ;
INFO  02:07:20,696 - #5 const
INFO  02:07:20,696 - #8 int
INFO  02:07:20,696 - #8 d
INFO  02:07:20,696 - #24 =
INFO  02:07:20,696 - #9 99
INFO  02:07:20,696 - #28 ,
INFO  02:07:20,696 - #8 eps
INFO  02:07:20,696 - #24 =
INFO  02:07:20,697 - #9 2
INFO  02:07:20,697 - #27 ;
INFO  02:07:20,697 - #8 int
INFO  02:07:20,697 - #27 ;
ERROR 02:07:20,697 - 
Sintaksna greska na liniji 4 na koloni 8 za simbol ";"
INFO  02:07:20,697 - #6 void
INFO  02:07:20,697 - #8 test
INFO  02:07:20,697 - #29 (
ERROR 02:07:20,698 - Sintaksna greska - neispravna definicija promenljive! 
INFO  02:07:20,699 - #30 )
INFO  02:07:20,699 - #20 {
INFO  02:07:20,699 - #8 int
INFO  02:07:20,699 - #8 a
INFO  02:07:20,700 - #28 ,
INFO  02:07:20,700 - #8 b
INFO  02:07:20,700 - #27 ;
INFO  02:07:20,700 - #8 bool
INFO  02:07:20,701 - #8 cond
INFO  02:07:20,701 - #27 ;
INFO  02:07:20,701 - #8 a
INFO  02:07:20,701 - #24 =
INFO  02:07:20,701 - #9 3
INFO  02:07:20,701 - #27 ;
INFO  02:07:20,702 - #8 b
INFO  02:07:20,702 - #24 =
INFO  02:07:20,702 - #9 5
INFO  02:07:20,702 - #27 ;
INFO  02:07:20,702 - #8 cond
INFO  02:07:20,703 - #24 =
INFO  02:07:20,703 - #11 true
INFO  02:07:20,703 - #27 ;
INFO  02:07:20,704 - #31 if
INFO  02:07:20,704 - #29 (
INFO  02:07:20,704 - #9 2
INFO  02:07:20,705 - #17 *
INFO  02:07:20,705 - #29 (
INFO  02:07:20,706 - #8 a
INFO  02:07:20,706 - #16 -
INFO  02:07:20,706 - #8 b
INFO  02:07:20,707 - #16 -
INFO  02:07:20,708 - #9 1
INFO  02:07:20,708 - #30 )
INFO  02:07:20,708 - #16 -
INFO  02:07:20,709 - #9 14
INFO  02:07:20,709 - #38 >
INFO  02:07:20,709 - #9 0
INFO  02:07:20,710 - #14 ||
INFO  02:07:20,711 - #8 cond
INFO  02:07:20,711 - #30 )
INFO  02:07:20,711 - #3 print
INFO  02:07:20,711 - #29 (
INFO  02:07:20,712 - #8 a
INFO  02:07:20,712 - #15 +
INFO  02:07:20,712 - #8 b
INFO  02:07:20,713 - #30 )
INFO  02:07:20,713 - #27 ;
INFO  02:07:20,713 - #21 }
INFO  02:07:20,713 - #8 int
INFO  02:07:20,714 - #8 max
INFO  02:07:20,714 - #29 (
INFO  02:07:20,717 - #8 int
INFO  02:07:20,717 - #8 a
INFO  02:07:20,717 - #28 ,
INFO  02:07:20,717 - #8 int
INFO  02:07:20,717 - #8 b
INFO  02:07:20,717 - #30 )
INFO  02:07:20,717 - #20 {
INFO  02:07:20,718 - #31 if
INFO  02:07:20,718 - #29 (
INFO  02:07:20,718 - #8 a
INFO  02:07:20,718 - #38 >
INFO  02:07:20,718 - #8 b
INFO  02:07:20,718 - #30 )
INFO  02:07:20,718 - #20 {
INFO  02:07:20,718 - #37 return
INFO  02:07:20,718 - #8 a
INFO  02:07:20,718 - #27 ;
INFO  02:07:20,718 - #21 }
INFO  02:07:20,719 - #32 else
INFO  02:07:20,719 - #37 return
INFO  02:07:20,719 - #8 b
INFO  02:07:20,719 - #27 ;
INFO  02:07:20,719 - #21 }
INFO  02:07:20,719 - #8 int
INFO  02:07:20,720 - #8 min
INFO  02:07:20,720 - #29 (
INFO  02:07:20,720 - #8 int
INFO  02:07:20,720 - #8 a
INFO  02:07:20,720 - #28 ,
INFO  02:07:20,720 - #8 int
INFO  02:07:20,720 - #8 b
INFO  02:07:20,720 - #30 )
INFO  02:07:20,720 - #20 {
INFO  02:07:20,720 - #31 if
INFO  02:07:20,720 - #29 (
INFO  02:07:20,720 - #8 a
INFO  02:07:20,720 - #40 <
INFO  02:07:20,720 - #8 b
INFO  02:07:20,721 - #30 )
INFO  02:07:20,721 - #20 {
INFO  02:07:20,721 - #37 return
INFO  02:07:20,721 - #8 a
INFO  02:07:20,721 - #27 ;
INFO  02:07:20,721 - #21 }
INFO  02:07:20,722 - #32 else
INFO  02:07:20,722 - #20 {
INFO  02:07:20,722 - #37 return
INFO  02:07:20,722 - #8 b
INFO  02:07:20,722 - #27 ;
INFO  02:07:20,722 - #21 }
INFO  02:07:20,722 - #21 }
INFO  02:07:20,722 - #6 void
INFO  02:07:20,722 - #8 main
INFO  02:07:20,722 - #29 (
INFO  02:07:20,723 - #30 )
INFO  02:07:20,723 - #20 {
INFO  02:07:20,723 - #8 int
INFO  02:07:20,723 - #8 a
INFO  02:07:20,723 - #22 [
INFO  02:07:20,723 - #23 ]
INFO  02:07:20,723 - #27 ;
INFO  02:07:20,723 - #8 int
INFO  02:07:20,723 - #8 length
INFO  02:07:20,723 - #27 ;
INFO  02:07:20,723 - #8 length
INFO  02:07:20,723 - #24 =
INFO  02:07:20,723 - #8 c
INFO  02:07:20,723 - #27 ;
INFO  02:07:20,724 - #8 test
INFO  02:07:20,724 - #29 (
INFO  02:07:20,724 - #30 )
INFO  02:07:20,724 - #27 ;
INFO  02:07:20,724 - #31 if
INFO  02:07:20,724 - #29 (
INFO  02:07:20,724 - #8 length
INFO  02:07:20,724 - #38 >
INFO  02:07:20,724 - #9 0
INFO  02:07:20,724 - #13 &&
INFO  02:07:20,724 - #8 length
INFO  02:07:20,724 - #42 <=
INFO  02:07:20,724 - #8 d
INFO  02:07:20,725 - #30 )
INFO  02:07:20,726 - #8 a
INFO  02:07:20,726 - #24 =
INFO  02:07:20,726 - #7 new
INFO  02:07:20,726 - #8 int
INFO  02:07:20,726 - #22 [
INFO  02:07:20,726 - #8 length
INFO  02:07:20,726 - #23 ]
INFO  02:07:20,726 - #27 ;
INFO  02:07:20,726 - #32 else
INFO  02:07:20,726 - #8 a
INFO  02:07:20,726 - #24 =
INFO  02:07:20,726 - #7 new
INFO  02:07:20,727 - #8 int
INFO  02:07:20,727 - #22 [
INFO  02:07:20,727 - #9 5
INFO  02:07:20,727 - #23 ]
INFO  02:07:20,727 - #27 ;
INFO  02:07:20,727 - #33 do
INFO  02:07:20,727 - #20 {
INFO  02:07:20,727 - #4 read
INFO  02:07:20,727 - #29 (
INFO  02:07:20,727 - #8 a
INFO  02:07:20,727 - #22 [
INFO  02:07:20,727 - #8 i
INFO  02:07:20,727 - #23 ]
INFO  02:07:20,727 - #30 )
INFO  02:07:20,728 - #27 ;
INFO  02:07:20,728 - #31 if
INFO  02:07:20,728 - #29 (
INFO  02:07:20,728 - #8 a
INFO  02:07:20,728 - #22 [
INFO  02:07:20,728 - #8 i
INFO  02:07:20,728 - #23 ]
INFO  02:07:20,728 - #19 %
INFO  02:07:20,728 - #9 3
INFO  02:07:20,729 - #39 ==
INFO  02:07:20,729 - #9 0
INFO  02:07:20,730 - #30 )
INFO  02:07:20,730 - #3 print
INFO  02:07:20,730 - #29 (
INFO  02:07:20,730 - #8 a
INFO  02:07:20,730 - #22 [
INFO  02:07:20,730 - #8 i
INFO  02:07:20,730 - #23 ]
INFO  02:07:20,730 - #30 )
INFO  02:07:20,730 - #27 ;
INFO  02:07:20,731 - #32 else
INFO  02:07:20,731 - #3 print
INFO  02:07:20,731 - #29 (
INFO  02:07:20,731 - #8 max
INFO  02:07:20,731 - #29 (
INFO  02:07:20,731 - #8 a
INFO  02:07:20,731 - #22 [
INFO  02:07:20,731 - #8 i
INFO  02:07:20,731 - #23 ]
INFO  02:07:20,731 - #28 ,
INFO  02:07:20,731 - #9 0
INFO  02:07:20,731 - #30 )
INFO  02:07:20,732 - #30 )
INFO  02:07:20,732 - #27 ;
INFO  02:07:20,732 - #21 }
INFO  02:07:20,732 - #34 while
INFO  02:07:20,732 - #29 (
INFO  02:07:20,732 - #8 i
INFO  02:07:20,732 - #42 <=
INFO  02:07:20,732 - #8 length
INFO  02:07:20,732 - #16 -
INFO  02:07:20,732 - #9 1
INFO  02:07:20,732 - #30 )
INFO  02:07:20,732 - #27 ;
INFO  02:07:20,733 - #3 print
INFO  02:07:20,733 - #29 (
INFO  02:07:20,733 - #8 d
INFO  02:07:20,733 - #30 )
INFO  02:07:20,733 - #27 ;
INFO  02:07:20,733 - #21 }
INFO  02:07:20,733 - #21 }
INFO  02:18:23,918 - #2 program
INFO  02:18:23,919 - #8 Program
INFO  02:18:23,919 - #20 {
INFO  02:18:23,919 - #5 const
INFO  02:18:23,919 - #8 int
INFO  02:18:23,919 - #8 c
INFO  02:18:23,919 - #24 =
INFO  02:18:23,919 - #9 10
INFO  02:18:23,920 - #27 ;
INFO  02:18:23,920 - #5 const
INFO  02:18:23,920 - #8 int
INFO  02:18:23,920 - #8 d
INFO  02:18:23,921 - #24 =
INFO  02:18:23,921 - #9 99
INFO  02:18:23,921 - #28 ,
INFO  02:18:23,921 - #8 eps
INFO  02:18:23,921 - #24 =
INFO  02:18:23,921 - #9 2
INFO  02:18:23,921 - #27 ;
INFO  02:18:23,921 - #8 int
INFO  02:18:23,922 - #27 ;
ERROR 02:18:23,922 - 
Sintaksna greska na liniji 4 na koloni 8 za simbol ";"
INFO  02:18:23,922 - #6 void
INFO  02:18:23,922 - #8 test
INFO  02:18:23,922 - #29 (
ERROR 02:18:23,923 - Sintaksna greska - neispravna definicija promenljive!  na liniji 5 na koloni 13 za simbol "("
INFO  02:18:23,924 - #30 )
INFO  02:18:23,924 - #20 {
INFO  02:18:23,924 - #8 int
INFO  02:18:23,924 - #8 a
INFO  02:18:23,924 - #28 ,
INFO  02:18:23,924 - #8 b
INFO  02:18:23,924 - #27 ;
INFO  02:18:23,925 - #8 bool
INFO  02:18:23,925 - #8 cond
INFO  02:18:23,925 - #27 ;
INFO  02:18:23,925 - #8 a
INFO  02:18:23,925 - #24 =
INFO  02:18:23,926 - #9 3
INFO  02:18:23,926 - #27 ;
INFO  02:18:23,926 - #8 b
INFO  02:18:23,927 - #24 =
INFO  02:18:23,927 - #9 5
INFO  02:18:23,927 - #27 ;
INFO  02:18:23,927 - #8 cond
INFO  02:18:23,927 - #24 =
INFO  02:18:23,927 - #11 true
INFO  02:18:23,927 - #27 ;
INFO  02:18:23,929 - #31 if
INFO  02:18:23,929 - #29 (
INFO  02:18:23,929 - #9 2
INFO  02:18:23,929 - #17 *
INFO  02:18:23,930 - #29 (
INFO  02:18:23,931 - #8 a
INFO  02:18:23,931 - #16 -
INFO  02:18:23,931 - #8 b
INFO  02:18:23,933 - #16 -
INFO  02:18:23,933 - #9 1
INFO  02:18:23,933 - #30 )
INFO  02:18:23,934 - #16 -
INFO  02:18:23,934 - #9 14
INFO  02:18:23,934 - #38 >
INFO  02:18:23,934 - #9 0
INFO  02:18:23,936 - #14 ||
INFO  02:18:23,936 - #8 cond
INFO  02:18:23,936 - #30 )
INFO  02:18:23,937 - #3 print
INFO  02:18:23,937 - #29 (
INFO  02:18:23,937 - #8 a
INFO  02:18:23,937 - #15 +
INFO  02:18:23,937 - #8 b
INFO  02:18:23,938 - #30 )
INFO  02:18:23,938 - #27 ;
INFO  02:18:23,938 - #21 }
INFO  02:18:23,938 - #8 int
INFO  02:18:23,939 - #8 max
INFO  02:18:23,939 - #29 (
INFO  02:18:23,942 - #8 int
INFO  02:18:23,942 - #8 a
INFO  02:18:23,942 - #28 ,
INFO  02:18:23,942 - #8 int
INFO  02:18:23,942 - #8 b
INFO  02:18:23,942 - #30 )
INFO  02:18:23,943 - #20 {
INFO  02:18:23,943 - #31 if
INFO  02:18:23,943 - #29 (
INFO  02:18:23,943 - #8 a
INFO  02:18:23,943 - #38 >
INFO  02:18:23,943 - #8 b
INFO  02:18:23,943 - #30 )
INFO  02:18:23,943 - #20 {
INFO  02:18:23,943 - #37 return
INFO  02:18:23,943 - #8 a
INFO  02:18:23,943 - #27 ;
INFO  02:18:23,943 - #21 }
INFO  02:18:23,944 - #32 else
INFO  02:18:23,944 - #37 return
INFO  02:18:23,944 - #8 b
INFO  02:18:23,944 - #27 ;
INFO  02:18:23,944 - #21 }
INFO  02:18:23,944 - #8 int
INFO  02:18:23,945 - #8 min
INFO  02:18:23,945 - #29 (
INFO  02:18:23,945 - #8 int
INFO  02:18:23,945 - #8 a
INFO  02:18:23,945 - #28 ,
INFO  02:18:23,945 - #8 int
INFO  02:18:23,945 - #8 b
INFO  02:18:23,945 - #30 )
INFO  02:18:23,945 - #20 {
INFO  02:18:23,945 - #31 if
INFO  02:18:23,945 - #29 (
INFO  02:18:23,946 - #8 a
INFO  02:18:23,946 - #40 <
INFO  02:18:23,946 - #8 b
INFO  02:18:23,946 - #30 )
INFO  02:18:23,947 - #20 {
INFO  02:18:23,947 - #37 return
INFO  02:18:23,947 - #8 a
INFO  02:18:23,947 - #27 ;
INFO  02:18:23,947 - #21 }
INFO  02:18:23,947 - #32 else
INFO  02:18:23,947 - #20 {
INFO  02:18:23,947 - #37 return
INFO  02:18:23,947 - #8 b
INFO  02:18:23,947 - #27 ;
INFO  02:18:23,947 - #21 }
INFO  02:18:23,947 - #21 }
INFO  02:18:23,948 - #6 void
INFO  02:18:23,948 - #8 main
INFO  02:18:23,948 - #29 (
INFO  02:18:23,948 - #30 )
INFO  02:18:23,948 - #20 {
INFO  02:18:23,948 - #8 int
INFO  02:18:23,948 - #8 a
INFO  02:18:23,948 - #22 [
INFO  02:18:23,948 - #23 ]
INFO  02:18:23,948 - #27 ;
INFO  02:18:23,948 - #8 int
INFO  02:18:23,948 - #8 length
INFO  02:18:23,948 - #27 ;
INFO  02:18:23,948 - #8 length
INFO  02:18:23,948 - #24 =
INFO  02:18:23,949 - #8 c
INFO  02:18:23,949 - #27 ;
INFO  02:18:23,949 - #8 test
INFO  02:18:23,949 - #29 (
INFO  02:18:23,949 - #30 )
INFO  02:18:23,949 - #27 ;
INFO  02:18:23,949 - #31 if
INFO  02:18:23,949 - #29 (
INFO  02:18:23,949 - #8 length
INFO  02:18:23,949 - #38 >
INFO  02:18:23,949 - #9 0
INFO  02:18:23,949 - #13 &&
INFO  02:18:23,949 - #8 length
INFO  02:18:23,949 - #42 <=
INFO  02:18:23,949 - #8 d
INFO  02:18:23,950 - #30 )
INFO  02:18:23,950 - #8 a
INFO  02:18:23,950 - #24 =
INFO  02:18:23,950 - #7 new
INFO  02:18:23,951 - #8 int
INFO  02:18:23,951 - #22 [
INFO  02:18:23,951 - #8 length
INFO  02:18:23,951 - #23 ]
INFO  02:18:23,951 - #27 ;
INFO  02:18:23,951 - #32 else
INFO  02:18:23,951 - #8 a
INFO  02:18:23,951 - #24 =
INFO  02:18:23,951 - #7 new
INFO  02:18:23,951 - #8 int
INFO  02:18:23,951 - #22 [
INFO  02:18:23,951 - #9 5
INFO  02:18:23,951 - #23 ]
INFO  02:18:23,951 - #27 ;
INFO  02:18:23,952 - #33 do
INFO  02:18:23,952 - #20 {
INFO  02:18:23,952 - #4 read
INFO  02:18:23,952 - #29 (
INFO  02:18:23,952 - #8 a
INFO  02:18:23,952 - #22 [
INFO  02:18:23,952 - #8 i
INFO  02:18:23,952 - #23 ]
INFO  02:18:23,952 - #30 )
INFO  02:18:23,952 - #27 ;
INFO  02:18:23,952 - #31 if
INFO  02:18:23,953 - #29 (
INFO  02:18:23,953 - #8 a
INFO  02:18:23,953 - #22 [
INFO  02:18:23,953 - #8 i
INFO  02:18:23,953 - #23 ]
INFO  02:18:23,953 - #19 %
INFO  02:18:23,953 - #9 3
INFO  02:18:23,954 - #39 ==
INFO  02:18:23,954 - #9 0
INFO  02:18:23,954 - #30 )
INFO  02:18:23,954 - #3 print
INFO  02:18:23,954 - #29 (
INFO  02:18:23,954 - #8 a
INFO  02:18:23,955 - #22 [
INFO  02:18:23,955 - #8 i
INFO  02:18:23,955 - #23 ]
INFO  02:18:23,955 - #30 )
INFO  02:18:23,955 - #27 ;
INFO  02:18:23,955 - #32 else
INFO  02:18:23,955 - #3 print
INFO  02:18:23,955 - #29 (
INFO  02:18:23,955 - #8 max
INFO  02:18:23,955 - #29 (
INFO  02:18:23,955 - #8 a
INFO  02:18:23,955 - #22 [
INFO  02:18:23,955 - #8 i
INFO  02:18:23,955 - #23 ]
INFO  02:18:23,955 - #28 ,
INFO  02:18:23,956 - #9 0
INFO  02:18:23,956 - #30 )
INFO  02:18:23,956 - #30 )
INFO  02:18:23,956 - #27 ;
INFO  02:18:23,956 - #21 }
INFO  02:18:23,956 - #34 while
INFO  02:18:23,956 - #29 (
INFO  02:18:23,956 - #8 i
INFO  02:18:23,956 - #42 <=
INFO  02:18:23,957 - #8 length
INFO  02:18:23,957 - #16 -
INFO  02:18:23,957 - #9 1
INFO  02:18:23,957 - #30 )
INFO  02:18:23,957 - #27 ;
INFO  02:18:23,957 - #3 print
INFO  02:18:23,957 - #29 (
INFO  02:18:23,957 - #8 d
INFO  02:18:23,957 - #30 )
INFO  02:18:23,957 - #27 ;
INFO  02:18:23,957 - #21 }
INFO  02:18:23,957 - #21 }
INFO  02:27:56,564 - #2 program
INFO  02:27:56,564 - #8 Program
INFO  02:27:56,564 - #20 {
INFO  02:27:56,564 - #5 const
INFO  02:27:56,564 - #8 int
INFO  02:27:56,565 - #8 c
INFO  02:27:56,565 - #24 =
INFO  02:27:56,565 - #9 10
INFO  02:27:56,565 - #27 ;
INFO  02:27:56,565 - #5 const
INFO  02:27:56,566 - #8 int
INFO  02:27:56,566 - #8 d
INFO  02:27:56,566 - #24 =
INFO  02:27:56,566 - #9 99
INFO  02:27:56,566 - #28 ,
INFO  02:27:56,566 - #8 eps
INFO  02:27:56,566 - #24 =
INFO  02:27:56,566 - #9 2
INFO  02:27:56,566 - #27 ;
INFO  02:27:56,566 - #8 int
INFO  02:27:56,567 - #27 ;
ERROR 02:27:56,567 - 
Sintaksna greska na liniji 4 na koloni 8 za simbol ";"
INFO  02:27:56,567 - #6 void
INFO  02:27:56,567 - #8 test
INFO  02:27:56,567 - #29 (
ERROR 02:27:56,568 - Sintaksna greska - neispravna definicija promenljive!  na liniji 5 na koloni 13 za simbol "("
INFO  02:27:56,569 - #30 )
INFO  02:27:56,569 - #20 {
INFO  02:27:56,569 - #8 int
INFO  02:27:56,569 - #8 a
INFO  02:27:56,569 - #28 ,
INFO  02:27:56,569 - #8 b
INFO  02:27:56,569 - #27 ;
INFO  02:27:56,570 - #8 bool
INFO  02:27:56,570 - #8 cond
INFO  02:27:56,570 - #27 ;
INFO  02:27:56,570 - #8 a
INFO  02:27:56,570 - #24 =
INFO  02:27:56,570 - #9 3
INFO  02:27:56,571 - #27 ;
INFO  02:27:56,571 - #8 b
INFO  02:27:56,572 - #24 =
INFO  02:27:56,572 - #9 5
INFO  02:27:56,572 - #27 ;
INFO  02:27:56,572 - #8 cond
INFO  02:27:56,572 - #24 =
INFO  02:27:56,572 - #11 true
INFO  02:27:56,572 - #27 ;
INFO  02:27:56,574 - #31 if
INFO  02:27:56,574 - #29 (
INFO  02:27:56,574 - #9 2
INFO  02:27:56,574 - #17 *
INFO  02:27:56,574 - #29 (
INFO  02:27:56,576 - #8 a
INFO  02:27:56,576 - #16 -
INFO  02:27:56,576 - #8 b
INFO  02:27:56,577 - #16 -
INFO  02:27:56,578 - #9 1
INFO  02:27:56,578 - #30 )
INFO  02:27:56,578 - #16 -
INFO  02:27:56,579 - #9 14
INFO  02:27:56,579 - #38 >
INFO  02:27:56,579 - #9 0
INFO  02:27:56,580 - #14 ||
INFO  02:27:56,581 - #8 cond
INFO  02:27:56,581 - #30 )
INFO  02:27:56,581 - #3 print
INFO  02:27:56,581 - #29 (
INFO  02:27:56,582 - #8 a
INFO  02:27:56,582 - #15 +
INFO  02:27:56,582 - #8 b
INFO  02:27:56,582 - #30 )
INFO  02:27:56,582 - #27 ;
INFO  02:27:56,583 - #21 }
INFO  02:27:56,583 - #8 int
INFO  02:27:56,583 - #8 max
INFO  02:27:56,583 - #29 (
INFO  02:27:56,586 - #8 int
INFO  02:27:56,586 - #8 a
INFO  02:27:56,586 - #28 ,
INFO  02:27:56,586 - #8 int
INFO  02:27:56,586 - #8 b
INFO  02:27:56,586 - #30 )
INFO  02:27:56,586 - #20 {
INFO  02:27:56,587 - #31 if
INFO  02:27:56,587 - #29 (
INFO  02:27:56,587 - #8 a
INFO  02:27:56,587 - #38 >
INFO  02:27:56,587 - #8 b
INFO  02:27:56,587 - #30 )
INFO  02:27:56,587 - #20 {
INFO  02:27:56,587 - #37 return
INFO  02:27:56,587 - #8 a
INFO  02:27:56,587 - #27 ;
INFO  02:27:56,587 - #21 }
INFO  02:27:56,587 - #32 else
INFO  02:27:56,588 - #37 return
INFO  02:27:56,588 - #8 b
INFO  02:27:56,588 - #27 ;
INFO  02:27:56,588 - #21 }
INFO  02:27:56,588 - #8 int
INFO  02:27:56,589 - #8 min
INFO  02:27:56,589 - #29 (
INFO  02:27:56,589 - #8 int
INFO  02:27:56,589 - #8 a
INFO  02:27:56,589 - #28 ,
INFO  02:27:56,589 - #8 int
INFO  02:27:56,589 - #8 b
INFO  02:27:56,589 - #30 )
INFO  02:27:56,589 - #20 {
INFO  02:27:56,589 - #31 if
INFO  02:27:56,589 - #29 (
INFO  02:27:56,589 - #8 a
INFO  02:27:56,589 - #40 <
INFO  02:27:56,589 - #8 b
INFO  02:27:56,590 - #30 )
INFO  02:27:56,590 - #20 {
INFO  02:27:56,590 - #37 return
INFO  02:27:56,590 - #8 a
INFO  02:27:56,590 - #27 ;
INFO  02:27:56,590 - #21 }
INFO  02:27:56,591 - #32 else
INFO  02:27:56,591 - #20 {
INFO  02:27:56,591 - #37 return
INFO  02:27:56,591 - #8 b
INFO  02:27:56,591 - #27 ;
INFO  02:27:56,591 - #21 }
INFO  02:27:56,591 - #21 }
INFO  02:27:56,591 - #6 void
INFO  02:27:56,591 - #8 main
INFO  02:27:56,591 - #29 (
INFO  02:27:56,591 - #30 )
INFO  02:27:56,591 - #20 {
INFO  02:27:56,592 - #8 int
INFO  02:27:56,592 - #8 a
INFO  02:27:56,592 - #22 [
INFO  02:27:56,592 - #23 ]
INFO  02:27:56,592 - #27 ;
INFO  02:27:56,592 - #8 int
INFO  02:27:56,592 - #8 length
INFO  02:27:56,592 - #27 ;
INFO  02:27:56,592 - #8 length
INFO  02:27:56,592 - #24 =
INFO  02:27:56,592 - #8 c
INFO  02:27:56,592 - #27 ;
INFO  02:27:56,592 - #8 test
INFO  02:27:56,592 - #29 (
INFO  02:27:56,592 - #30 )
INFO  02:27:56,592 - #27 ;
INFO  02:27:56,593 - #31 if
INFO  02:27:56,593 - #29 (
INFO  02:27:56,593 - #8 length
INFO  02:27:56,593 - #38 >
INFO  02:27:56,593 - #9 0
INFO  02:27:56,593 - #13 &&
INFO  02:27:56,593 - #8 length
INFO  02:27:56,593 - #42 <=
INFO  02:27:56,593 - #8 d
INFO  02:27:56,594 - #30 )
INFO  02:27:56,594 - #8 a
INFO  02:27:56,594 - #24 =
INFO  02:27:56,594 - #7 new
INFO  02:27:56,594 - #8 int
INFO  02:27:56,594 - #22 [
INFO  02:27:56,594 - #8 length
INFO  02:27:56,594 - #23 ]
INFO  02:27:56,594 - #27 ;
INFO  02:27:56,595 - #32 else
INFO  02:27:56,595 - #8 a
INFO  02:27:56,595 - #24 =
INFO  02:27:56,595 - #7 new
INFO  02:27:56,595 - #8 int
INFO  02:27:56,595 - #22 [
INFO  02:27:56,595 - #9 5
INFO  02:27:56,595 - #23 ]
INFO  02:27:56,595 - #27 ;
INFO  02:27:56,595 - #33 do
INFO  02:27:56,595 - #20 {
INFO  02:27:56,595 - #4 read
INFO  02:27:56,595 - #29 (
INFO  02:27:56,596 - #8 a
INFO  02:27:56,596 - #22 [
INFO  02:27:56,596 - #8 i
INFO  02:27:56,596 - #23 ]
INFO  02:27:56,596 - #30 )
INFO  02:27:56,596 - #27 ;
INFO  02:27:56,596 - #31 if
INFO  02:27:56,596 - #29 (
INFO  02:27:56,596 - #8 a
INFO  02:27:56,596 - #22 [
INFO  02:27:56,596 - #8 i
INFO  02:27:56,596 - #23 ]
INFO  02:27:56,597 - #19 %
INFO  02:27:56,597 - #9 3
INFO  02:27:56,597 - #39 ==
INFO  02:27:56,597 - #9 0
INFO  02:27:56,598 - #30 )
INFO  02:27:56,598 - #3 print
INFO  02:27:56,598 - #29 (
INFO  02:27:56,598 - #8 a
INFO  02:27:56,598 - #22 [
INFO  02:27:56,598 - #8 i
INFO  02:27:56,598 - #23 ]
INFO  02:27:56,598 - #30 )
INFO  02:27:56,598 - #27 ;
INFO  02:27:56,598 - #32 else
INFO  02:27:56,598 - #3 print
INFO  02:27:56,599 - #29 (
INFO  02:27:56,599 - #8 max
INFO  02:27:56,599 - #29 (
INFO  02:27:56,599 - #8 a
INFO  02:27:56,599 - #22 [
INFO  02:27:56,599 - #8 i
INFO  02:27:56,599 - #23 ]
INFO  02:27:56,599 - #28 ,
INFO  02:27:56,599 - #9 0
INFO  02:27:56,599 - #30 )
INFO  02:27:56,599 - #30 )
INFO  02:27:56,600 - #27 ;
INFO  02:27:56,600 - #21 }
INFO  02:27:56,600 - #34 while
INFO  02:27:56,600 - #29 (
INFO  02:27:56,600 - #8 i
INFO  02:27:56,600 - #42 <=
INFO  02:27:56,600 - #8 length
INFO  02:27:56,600 - #16 -
INFO  02:27:56,600 - #9 1
INFO  02:27:56,600 - #30 )
INFO  02:27:56,600 - #27 ;
INFO  02:27:56,600 - #3 print
INFO  02:27:56,600 - #29 (
INFO  02:27:56,600 - #8 d
INFO  02:27:56,600 - #30 )
INFO  02:27:56,601 - #27 ;
INFO  02:27:56,601 - #21 }
INFO  02:27:56,601 - #21 }
INFO  02:36:11,049 - #2 program
INFO  02:36:11,049 - #8 Program
INFO  02:36:11,049 - #20 {
INFO  02:36:11,049 - #5 const
INFO  02:36:11,050 - #8 int
INFO  02:36:11,050 - #8 c
INFO  02:36:11,050 - #24 =
INFO  02:36:11,050 - #9 10
INFO  02:36:11,050 - #27 ;
INFO  02:36:11,051 - #5 const
INFO  02:36:11,051 - #8 int
INFO  02:36:11,051 - #8 d
INFO  02:36:11,051 - #24 =
INFO  02:36:11,051 - #9 99
INFO  02:36:11,051 - #28 ,
INFO  02:36:11,051 - #8 eps
INFO  02:36:11,052 - #24 =
INFO  02:36:11,052 - #9 2
INFO  02:36:11,052 - #27 ;
INFO  02:36:11,052 - #8 int
INFO  02:36:11,052 - #27 ;
ERROR 02:36:11,052 - 
Sintaksna greska na liniji 4 , koloni 8 za simbol ";"
INFO  02:36:11,053 - #6 void
INFO  02:36:11,053 - #8 test
INFO  02:36:11,053 - #29 (
ERROR 02:36:11,053 - Sintaksna greska - neispravna definicija promenljive!  na liniji 5 , koloni 13 za simbol "("
INFO  02:36:11,054 - #30 )
INFO  02:36:11,055 - #20 {
INFO  02:36:11,055 - #8 int
INFO  02:36:11,055 - #8 a
INFO  02:36:11,055 - #28 ,
INFO  02:36:11,055 - #8 b
INFO  02:36:11,055 - #27 ;
INFO  02:36:11,055 - #8 bool
INFO  02:36:11,056 - #8 cond
INFO  02:36:11,056 - #27 ;
INFO  02:36:11,056 - #8 a
INFO  02:36:11,056 - #24 =
INFO  02:36:11,056 - #9 3
INFO  02:36:11,056 - #27 ;
INFO  02:36:11,057 - #8 b
INFO  02:36:11,057 - #24 =
INFO  02:36:11,057 - #9 5
INFO  02:36:11,058 - #27 ;
INFO  02:36:11,058 - #8 cond
INFO  02:36:11,058 - #24 =
INFO  02:36:11,058 - #11 true
INFO  02:36:11,058 - #27 ;
INFO  02:36:11,060 - #31 if
INFO  02:36:11,060 - #29 (
INFO  02:36:11,060 - #9 2
INFO  02:36:11,060 - #17 *
INFO  02:36:11,060 - #29 (
INFO  02:36:11,062 - #8 a
INFO  02:36:11,062 - #16 -
INFO  02:36:11,062 - #8 b
INFO  02:36:11,063 - #16 -
INFO  02:36:11,064 - #9 1
INFO  02:36:11,064 - #30 )
INFO  02:36:11,064 - #16 -
INFO  02:36:11,065 - #9 14
INFO  02:36:11,065 - #38 >
INFO  02:36:11,065 - #9 0
INFO  02:36:11,067 - #14 ||
INFO  02:36:11,067 - #8 cond
INFO  02:36:11,067 - #30 )
INFO  02:36:11,068 - #3 print
INFO  02:36:11,068 - #29 (
INFO  02:36:11,068 - #8 a
INFO  02:36:11,068 - #15 +
INFO  02:36:11,068 - #8 b
INFO  02:36:11,069 - #30 )
INFO  02:36:11,069 - #27 ;
INFO  02:36:11,070 - #21 }
INFO  02:36:11,070 - #8 int
INFO  02:36:11,070 - #8 max
INFO  02:36:11,070 - #29 (
INFO  02:36:11,073 - #8 int
INFO  02:36:11,073 - #8 a
INFO  02:36:11,073 - #28 ,
INFO  02:36:11,073 - #8 int
INFO  02:36:11,073 - #8 b
INFO  02:36:11,074 - #30 )
INFO  02:36:11,074 - #20 {
INFO  02:36:11,074 - #31 if
INFO  02:36:11,074 - #29 (
INFO  02:36:11,074 - #8 a
INFO  02:36:11,074 - #38 >
INFO  02:36:11,074 - #8 b
INFO  02:36:11,074 - #30 )
INFO  02:36:11,074 - #20 {
INFO  02:36:11,074 - #37 return
INFO  02:36:11,074 - #8 a
INFO  02:36:11,074 - #27 ;
INFO  02:36:11,075 - #21 }
INFO  02:36:11,075 - #32 else
INFO  02:36:11,075 - #37 return
INFO  02:36:11,075 - #8 b
INFO  02:36:11,075 - #27 ;
INFO  02:36:11,075 - #21 }
INFO  02:36:11,075 - #8 int
INFO  02:36:11,076 - #8 min
INFO  02:36:11,076 - #29 (
INFO  02:36:11,076 - #8 int
INFO  02:36:11,076 - #8 a
INFO  02:36:11,076 - #28 ,
INFO  02:36:11,076 - #8 int
INFO  02:36:11,076 - #8 b
INFO  02:36:11,076 - #30 )
INFO  02:36:11,076 - #20 {
INFO  02:36:11,077 - #31 if
INFO  02:36:11,077 - #29 (
INFO  02:36:11,077 - #8 a
INFO  02:36:11,077 - #40 <
INFO  02:36:11,077 - #8 b
INFO  02:36:11,078 - #30 )
INFO  02:36:11,078 - #20 {
INFO  02:36:11,078 - #37 return
INFO  02:36:11,078 - #8 a
INFO  02:36:11,078 - #27 ;
INFO  02:36:11,078 - #21 }
INFO  02:36:11,078 - #32 else
INFO  02:36:11,078 - #20 {
INFO  02:36:11,078 - #37 return
INFO  02:36:11,079 - #8 b
INFO  02:36:11,079 - #27 ;
INFO  02:36:11,079 - #21 }
INFO  02:36:11,079 - #21 }
INFO  02:36:11,079 - #6 void
INFO  02:36:11,079 - #8 main
INFO  02:36:11,079 - #29 (
INFO  02:36:11,079 - #30 )
INFO  02:36:11,079 - #20 {
INFO  02:36:11,079 - #8 int
INFO  02:36:11,079 - #8 a
INFO  02:36:11,079 - #22 [
INFO  02:36:11,079 - #23 ]
INFO  02:36:11,080 - #27 ;
INFO  02:36:11,080 - #8 int
INFO  02:36:11,080 - #8 length
INFO  02:36:11,080 - #27 ;
INFO  02:36:11,080 - #8 length
INFO  02:36:11,080 - #24 =
INFO  02:36:11,080 - #8 c
INFO  02:36:11,080 - #27 ;
INFO  02:36:11,080 - #8 test
INFO  02:36:11,080 - #29 (
INFO  02:36:11,080 - #30 )
INFO  02:36:11,080 - #27 ;
INFO  02:36:11,081 - #31 if
INFO  02:36:11,081 - #29 (
INFO  02:36:11,081 - #8 length
INFO  02:36:11,081 - #38 >
INFO  02:36:11,081 - #9 0
INFO  02:36:11,081 - #13 &&
INFO  02:36:11,081 - #8 length
INFO  02:36:11,081 - #42 <=
INFO  02:36:11,081 - #8 d
INFO  02:36:11,082 - #30 )
INFO  02:36:11,082 - #8 a
INFO  02:36:11,082 - #24 =
INFO  02:36:11,082 - #7 new
INFO  02:36:11,082 - #8 int
INFO  02:36:11,082 - #22 [
INFO  02:36:11,082 - #8 length
INFO  02:36:11,082 - #23 ]
INFO  02:36:11,083 - #27 ;
INFO  02:36:11,083 - #32 else
INFO  02:36:11,083 - #8 a
INFO  02:36:11,083 - #24 =
INFO  02:36:11,083 - #7 new
INFO  02:36:11,083 - #8 int
INFO  02:36:11,083 - #22 [
INFO  02:36:11,083 - #9 5
INFO  02:36:11,083 - #23 ]
INFO  02:36:11,083 - #27 ;
INFO  02:36:11,083 - #33 do
INFO  02:36:11,083 - #20 {
INFO  02:36:11,083 - #4 read
INFO  02:36:11,083 - #29 (
INFO  02:36:11,084 - #8 a
INFO  02:36:11,084 - #22 [
INFO  02:36:11,084 - #8 i
INFO  02:36:11,084 - #23 ]
INFO  02:36:11,084 - #30 )
INFO  02:36:11,084 - #27 ;
INFO  02:36:11,084 - #31 if
INFO  02:36:11,084 - #29 (
INFO  02:36:11,084 - #8 a
INFO  02:36:11,084 - #22 [
INFO  02:36:11,084 - #8 i
INFO  02:36:11,084 - #23 ]
INFO  02:36:11,085 - #19 %
INFO  02:36:11,085 - #9 3
INFO  02:36:11,086 - #39 ==
INFO  02:36:11,086 - #9 0
INFO  02:36:11,087 - #30 )
INFO  02:36:11,087 - #3 print
INFO  02:36:11,087 - #29 (
INFO  02:36:11,087 - #8 a
INFO  02:36:11,087 - #22 [
INFO  02:36:11,087 - #8 i
INFO  02:36:11,087 - #23 ]
INFO  02:36:11,087 - #30 )
INFO  02:36:11,087 - #27 ;
INFO  02:36:11,087 - #32 else
INFO  02:36:11,087 - #3 print
INFO  02:36:11,087 - #29 (
INFO  02:36:11,087 - #8 max
INFO  02:36:11,087 - #29 (
INFO  02:36:11,087 - #8 a
INFO  02:36:11,088 - #22 [
INFO  02:36:11,088 - #8 i
INFO  02:36:11,088 - #23 ]
INFO  02:36:11,088 - #28 ,
INFO  02:36:11,088 - #9 0
INFO  02:36:11,088 - #30 )
INFO  02:36:11,088 - #30 )
INFO  02:36:11,089 - #27 ;
INFO  02:36:11,089 - #21 }
INFO  02:36:11,089 - #34 while
INFO  02:36:11,089 - #29 (
INFO  02:36:11,089 - #8 i
INFO  02:36:11,089 - #42 <=
INFO  02:36:11,089 - #8 length
INFO  02:36:11,089 - #16 -
INFO  02:36:11,089 - #9 1
INFO  02:36:11,089 - #30 )
INFO  02:36:11,089 - #27 ;
INFO  02:36:11,089 - #3 print
INFO  02:36:11,089 - #29 (
INFO  02:36:11,089 - #8 d
INFO  02:36:11,089 - #30 )
INFO  02:36:11,089 - #27 ;
INFO  02:36:11,090 - #21 }
INFO  02:36:11,090 - #21 }
INFO  02:41:58,814 - #2 program
INFO  02:41:58,815 - #8 Program
INFO  02:41:58,815 - #20 {
INFO  02:41:58,815 - #5 const
INFO  02:41:58,815 - #8 int
INFO  02:41:58,815 - #8 c
INFO  02:41:58,816 - #24 =
INFO  02:41:58,816 - #9 10
INFO  02:41:58,816 - #27 ;
INFO  02:41:58,816 - #5 const
INFO  02:41:58,816 - #8 int
INFO  02:41:58,816 - #8 d
INFO  02:41:58,817 - #24 =
INFO  02:41:58,817 - #9 99
INFO  02:41:58,817 - #28 ,
INFO  02:41:58,817 - #8 eps
INFO  02:41:58,817 - #24 =
INFO  02:41:58,817 - #9 2
INFO  02:41:58,817 - #27 ;
INFO  02:41:58,817 - #8 int
INFO  02:41:58,818 - #27 ;
ERROR 02:41:58,818 - Sintaksna greska na liniji 4 , koloni 8 za simbol ";"
INFO  02:41:58,818 - #6 void
INFO  02:41:58,818 - #8 test
INFO  02:41:58,818 - #29 (
ERROR 02:41:58,819 - Sintaksna greska - neispravna definicija promenljive!  na liniji 5 , koloni 13 za simbol "("
INFO  02:41:58,820 - #30 )
INFO  02:41:58,820 - #20 {
INFO  02:41:58,820 - #8 int
INFO  02:41:58,820 - #8 a
INFO  02:41:58,820 - #28 ,
INFO  02:41:58,820 - #8 b
INFO  02:41:58,820 - #27 ;
INFO  02:41:58,820 - #8 bool
INFO  02:41:58,821 - #8 cond
INFO  02:41:58,821 - #27 ;
INFO  02:41:58,821 - #8 a
INFO  02:41:58,821 - #24 =
INFO  02:41:58,821 - #9 3
INFO  02:41:58,821 - #27 ;
INFO  02:41:58,822 - #8 b
INFO  02:41:58,822 - #24 =
INFO  02:41:58,822 - #9 5
INFO  02:41:58,822 - #27 ;
INFO  02:41:58,822 - #8 cond
INFO  02:41:58,823 - #24 =
INFO  02:41:58,823 - #11 true
INFO  02:41:58,823 - #27 ;
INFO  02:41:58,824 - #31 if
INFO  02:41:58,824 - #29 (
INFO  02:41:58,824 - #9 2
INFO  02:41:58,824 - #17 *
INFO  02:41:58,824 - #29 (
INFO  02:41:58,825 - #8 a
INFO  02:41:58,825 - #16 -
INFO  02:41:58,826 - #8 b
INFO  02:41:58,827 - #16 -
INFO  02:41:58,828 - #9 1
INFO  02:41:58,828 - #30 )
INFO  02:41:58,828 - #16 -
INFO  02:41:58,829 - #9 14
INFO  02:41:58,829 - #38 >
INFO  02:41:58,829 - #9 0
INFO  02:41:58,830 - #14 ||
INFO  02:41:58,831 - #8 cond
INFO  02:41:58,831 - #30 )
INFO  02:41:58,831 - #3 print
INFO  02:41:58,831 - #29 (
INFO  02:41:58,832 - #8 a
INFO  02:41:58,832 - #15 +
INFO  02:41:58,832 - #8 b
INFO  02:41:58,833 - #30 )
INFO  02:41:58,833 - #27 ;
INFO  02:41:58,833 - #21 }
INFO  02:41:58,833 - #8 int
INFO  02:41:58,834 - #8 max
INFO  02:41:58,834 - #29 (
INFO  02:41:58,836 - #8 int
INFO  02:41:58,836 - #8 a
INFO  02:41:58,836 - #28 ,
INFO  02:41:58,837 - #8 int
INFO  02:41:58,837 - #8 b
INFO  02:41:58,837 - #30 )
INFO  02:41:58,837 - #20 {
INFO  02:41:58,837 - #31 if
INFO  02:41:58,837 - #29 (
INFO  02:41:58,837 - #8 a
INFO  02:41:58,837 - #38 >
INFO  02:41:58,837 - #8 b
INFO  02:41:58,837 - #30 )
INFO  02:41:58,837 - #20 {
INFO  02:41:58,837 - #37 return
INFO  02:41:58,838 - #8 a
INFO  02:41:58,838 - #27 ;
INFO  02:41:58,838 - #21 }
INFO  02:41:58,838 - #32 else
INFO  02:41:58,838 - #37 return
INFO  02:41:58,838 - #8 b
INFO  02:41:58,838 - #27 ;
INFO  02:41:58,838 - #21 }
INFO  02:41:58,839 - #8 int
INFO  02:41:58,839 - #8 min
INFO  02:41:58,839 - #29 (
INFO  02:41:58,839 - #8 int
INFO  02:41:58,839 - #8 a
INFO  02:41:58,839 - #28 ,
INFO  02:41:58,839 - #8 int
INFO  02:41:58,839 - #8 b
INFO  02:41:58,839 - #30 )
INFO  02:41:58,839 - #20 {
INFO  02:41:58,840 - #31 if
INFO  02:41:58,840 - #29 (
INFO  02:41:58,840 - #8 a
INFO  02:41:58,840 - #40 <
INFO  02:41:58,840 - #8 b
INFO  02:41:58,841 - #30 )
INFO  02:41:58,841 - #20 {
INFO  02:41:58,841 - #37 return
INFO  02:41:58,841 - #8 a
INFO  02:41:58,841 - #27 ;
INFO  02:41:58,841 - #21 }
INFO  02:41:58,841 - #32 else
INFO  02:41:58,841 - #20 {
INFO  02:41:58,841 - #37 return
INFO  02:41:58,841 - #8 b
INFO  02:41:58,841 - #27 ;
INFO  02:41:58,841 - #21 }
INFO  02:41:58,841 - #21 }
INFO  02:41:58,842 - #6 void
INFO  02:41:58,842 - #8 main
INFO  02:41:58,842 - #29 (
INFO  02:41:58,842 - #30 )
INFO  02:41:58,842 - #20 {
INFO  02:41:58,842 - #8 int
INFO  02:41:58,842 - #8 a
INFO  02:41:58,842 - #22 [
INFO  02:41:58,842 - #23 ]
INFO  02:41:58,842 - #27 ;
INFO  02:41:58,842 - #8 int
INFO  02:41:58,842 - #8 length
INFO  02:41:58,842 - #27 ;
INFO  02:41:58,842 - #8 length
INFO  02:41:58,842 - #24 =
INFO  02:41:58,843 - #8 c
INFO  02:41:58,843 - #27 ;
INFO  02:41:58,843 - #8 test
INFO  02:41:58,843 - #29 (
INFO  02:41:58,843 - #30 )
INFO  02:41:58,843 - #27 ;
INFO  02:41:58,843 - #31 if
INFO  02:41:58,843 - #29 (
INFO  02:41:58,843 - #8 length
INFO  02:41:58,843 - #38 >
INFO  02:41:58,843 - #9 0
INFO  02:41:58,843 - #13 &&
INFO  02:41:58,843 - #8 length
INFO  02:41:58,843 - #42 <=
INFO  02:41:58,844 - #8 d
INFO  02:41:58,844 - #30 )
INFO  02:41:58,844 - #8 a
INFO  02:41:58,844 - #24 =
INFO  02:41:58,844 - #7 new
INFO  02:41:58,845 - #8 int
INFO  02:41:58,845 - #22 [
INFO  02:41:58,845 - #8 length
INFO  02:41:58,845 - #23 ]
INFO  02:41:58,845 - #27 ;
INFO  02:41:58,845 - #32 else
INFO  02:41:58,845 - #8 a
INFO  02:41:58,845 - #24 =
INFO  02:41:58,845 - #7 new
INFO  02:41:58,845 - #8 int
INFO  02:41:58,845 - #22 [
INFO  02:41:58,845 - #9 5
INFO  02:41:58,845 - #23 ]
INFO  02:41:58,845 - #27 ;
INFO  02:41:58,846 - #33 do
INFO  02:41:58,846 - #20 {
INFO  02:41:58,846 - #4 read
INFO  02:41:58,846 - #29 (
INFO  02:41:58,846 - #8 a
INFO  02:41:58,846 - #22 [
INFO  02:41:58,846 - #8 i
INFO  02:41:58,846 - #23 ]
INFO  02:41:58,846 - #30 )
INFO  02:41:58,846 - #27 ;
INFO  02:41:58,846 - #31 if
INFO  02:41:58,846 - #29 (
INFO  02:41:58,846 - #8 a
INFO  02:41:58,846 - #22 [
INFO  02:41:58,847 - #8 i
INFO  02:41:58,847 - #23 ]
INFO  02:41:58,847 - #19 %
INFO  02:41:58,847 - #9 3
INFO  02:41:58,848 - #39 ==
INFO  02:41:58,848 - #9 0
INFO  02:41:58,848 - #30 )
INFO  02:41:58,849 - #3 print
INFO  02:41:58,849 - #29 (
INFO  02:41:58,849 - #8 a
INFO  02:41:58,849 - #22 [
INFO  02:41:58,849 - #8 i
INFO  02:41:58,849 - #23 ]
INFO  02:41:58,849 - #30 )
INFO  02:41:58,849 - #27 ;
INFO  02:41:58,849 - #32 else
INFO  02:41:58,849 - #3 print
INFO  02:41:58,849 - #29 (
INFO  02:41:58,849 - #8 max
INFO  02:41:58,849 - #29 (
INFO  02:41:58,849 - #8 a
INFO  02:41:58,849 - #22 [
INFO  02:41:58,849 - #8 i
INFO  02:41:58,850 - #23 ]
INFO  02:41:58,850 - #28 ,
INFO  02:41:58,850 - #9 0
INFO  02:41:58,850 - #30 )
INFO  02:41:58,850 - #30 )
INFO  02:41:58,850 - #27 ;
INFO  02:41:58,850 - #21 }
INFO  02:41:58,850 - #34 while
INFO  02:41:58,851 - #29 (
INFO  02:41:58,851 - #8 i
INFO  02:41:58,851 - #42 <=
INFO  02:41:58,851 - #8 length
INFO  02:41:58,851 - #16 -
INFO  02:41:58,851 - #9 1
INFO  02:41:58,851 - #30 )
INFO  02:41:58,851 - #27 ;
INFO  02:41:58,851 - #3 print
INFO  02:41:58,851 - #29 (
INFO  02:41:58,851 - #8 d
INFO  02:41:58,852 - #30 )
INFO  02:41:58,852 - #27 ;
INFO  02:41:58,852 - #21 }
INFO  02:41:58,852 - #21 }
INFO  03:10:03,697 - #2 program
INFO  03:10:03,697 - #8 Program
INFO  03:10:03,697 - #20 {
INFO  03:10:03,697 - #5 const
INFO  03:10:03,697 - #8 int
INFO  03:10:03,698 - #8 c
INFO  03:10:03,698 - #24 =
INFO  03:10:03,698 - #9 10
INFO  03:10:03,698 - #27 ;
INFO  03:10:03,698 - #5 const
INFO  03:10:03,699 - #8 int
INFO  03:10:03,699 - #8 d
INFO  03:10:03,699 - #24 =
INFO  03:10:03,699 - #9 99
INFO  03:10:03,699 - #28 ,
INFO  03:10:03,699 - #8 eps
INFO  03:10:03,699 - #24 =
INFO  03:10:03,699 - #9 2
INFO  03:10:03,699 - #27 ;
INFO  03:10:03,700 - #8 int
INFO  03:10:03,700 - #27 ;
ERROR 03:10:03,700 - Sintaksna greska na liniji 4 , koloni 8 za simbol ";"
INFO  03:10:03,700 - #6 void
INFO  03:10:03,700 - #8 test
INFO  03:10:03,700 - #29 (
ERROR 03:10:03,701 - Sintaksna greska - neispravna definicija promenljive!  na liniji 4 , koloni 8 za simbol ";"
INFO  03:10:03,702 - #30 )
INFO  03:10:03,702 - #20 {
INFO  03:10:03,702 - #8 int
INFO  03:10:03,702 - #8 a
INFO  03:10:03,702 - #28 ,
INFO  03:10:03,703 - #8 b
INFO  03:10:03,703 - #27 ;
INFO  03:10:03,703 - #8 bool
INFO  03:10:03,703 - #8 cond
INFO  03:10:03,703 - #27 ;
INFO  03:10:03,703 - #8 a
INFO  03:10:03,704 - #24 =
INFO  03:10:03,704 - #9 3
INFO  03:10:03,704 - #27 ;
INFO  03:10:03,705 - #8 b
INFO  03:10:03,705 - #24 =
INFO  03:10:03,705 - #9 5
INFO  03:10:03,705 - #27 ;
INFO  03:10:03,705 - #8 cond
INFO  03:10:03,705 - #24 =
INFO  03:10:03,706 - #11 true
INFO  03:10:03,706 - #27 ;
INFO  03:10:03,708 - #31 if
INFO  03:10:03,708 - #29 (
INFO  03:10:03,708 - #9 2
INFO  03:10:03,708 - #17 *
INFO  03:10:03,708 - #29 (
INFO  03:10:03,709 - #8 a
INFO  03:10:03,709 - #16 -
INFO  03:10:03,710 - #8 b
INFO  03:10:03,711 - #16 -
INFO  03:10:03,711 - #9 1
INFO  03:10:03,711 - #30 )
INFO  03:10:03,712 - #16 -
INFO  03:10:03,712 - #9 14
INFO  03:10:03,712 - #38 >
INFO  03:10:03,712 - #9 0
INFO  03:10:03,714 - #14 ||
INFO  03:10:03,714 - #8 cond
INFO  03:10:03,715 - #30 )
INFO  03:10:03,715 - #3 print
INFO  03:10:03,715 - #29 (
INFO  03:10:03,715 - #8 a
INFO  03:10:03,715 - #15 +
INFO  03:10:03,715 - #8 b
INFO  03:10:03,716 - #30 )
INFO  03:10:03,716 - #27 ;
INFO  03:10:03,716 - #21 }
INFO  03:10:03,717 - #8 int
INFO  03:10:03,717 - #8 max
INFO  03:10:03,717 - #29 (
INFO  03:10:03,720 - #8 int
INFO  03:10:03,720 - #8 a
INFO  03:10:03,720 - #28 ,
INFO  03:10:03,720 - #8 int
INFO  03:10:03,720 - #8 b
INFO  03:10:03,720 - #30 )
INFO  03:10:03,721 - #20 {
INFO  03:10:03,721 - #31 if
INFO  03:10:03,721 - #29 (
INFO  03:10:03,721 - #8 a
INFO  03:10:03,721 - #38 >
INFO  03:10:03,721 - #8 b
INFO  03:10:03,721 - #30 )
INFO  03:10:03,721 - #20 {
INFO  03:10:03,721 - #37 return
INFO  03:10:03,721 - #8 a
INFO  03:10:03,721 - #27 ;
INFO  03:10:03,722 - #21 }
INFO  03:10:03,722 - #32 else
INFO  03:10:03,722 - #37 return
INFO  03:10:03,722 - #8 b
INFO  03:10:03,722 - #27 ;
INFO  03:10:03,722 - #21 }
INFO  03:10:03,722 - #8 int
INFO  03:10:03,723 - #8 min
INFO  03:10:03,723 - #29 (
INFO  03:10:03,723 - #8 int
INFO  03:10:03,723 - #8 a
INFO  03:10:03,723 - #28 ,
INFO  03:10:03,723 - #8 int
INFO  03:10:03,723 - #8 b
INFO  03:10:03,723 - #30 )
INFO  03:10:03,723 - #20 {
INFO  03:10:03,723 - #31 if
INFO  03:10:03,723 - #29 (
INFO  03:10:03,723 - #8 a
INFO  03:10:03,723 - #40 <
INFO  03:10:03,723 - #8 b
INFO  03:10:03,724 - #30 )
INFO  03:10:03,724 - #20 {
INFO  03:10:03,724 - #37 return
INFO  03:10:03,724 - #8 a
INFO  03:10:03,725 - #27 ;
INFO  03:10:03,725 - #21 }
INFO  03:10:03,725 - #32 else
INFO  03:10:03,725 - #20 {
INFO  03:10:03,725 - #37 return
INFO  03:10:03,725 - #8 b
INFO  03:10:03,725 - #27 ;
INFO  03:10:03,725 - #21 }
INFO  03:10:03,725 - #21 }
INFO  03:10:03,725 - #6 void
INFO  03:10:03,725 - #8 main
INFO  03:10:03,726 - #29 (
INFO  03:10:03,726 - #30 )
INFO  03:10:03,726 - #20 {
INFO  03:10:03,726 - #8 int
INFO  03:10:03,726 - #8 a
INFO  03:10:03,726 - #22 [
INFO  03:10:03,726 - #23 ]
INFO  03:10:03,726 - #27 ;
INFO  03:10:03,726 - #8 int
INFO  03:10:03,726 - #8 length
INFO  03:10:03,726 - #27 ;
INFO  03:10:03,726 - #8 length
INFO  03:10:03,726 - #24 =
INFO  03:10:03,726 - #8 c
INFO  03:10:03,726 - #27 ;
INFO  03:10:03,727 - #8 test
INFO  03:10:03,727 - #29 (
INFO  03:10:03,727 - #30 )
INFO  03:10:03,727 - #27 ;
INFO  03:10:03,727 - #31 if
INFO  03:10:03,727 - #29 (
INFO  03:10:03,727 - #8 length
INFO  03:10:03,727 - #38 >
INFO  03:10:03,727 - #9 0
INFO  03:10:03,727 - #13 &&
INFO  03:10:03,727 - #8 length
INFO  03:10:03,727 - #42 <=
INFO  03:10:03,727 - #8 d
INFO  03:10:03,728 - #30 )
INFO  03:10:03,728 - #8 a
INFO  03:10:03,728 - #24 =
INFO  03:10:03,728 - #7 new
INFO  03:10:03,729 - #8 int
INFO  03:10:03,729 - #22 [
INFO  03:10:03,729 - #8 length
INFO  03:10:03,729 - #23 ]
INFO  03:10:03,729 - #27 ;
INFO  03:10:03,729 - #32 else
INFO  03:10:03,729 - #8 a
INFO  03:10:03,729 - #24 =
INFO  03:10:03,729 - #7 new
INFO  03:10:03,729 - #8 int
INFO  03:10:03,729 - #22 [
INFO  03:10:03,729 - #9 5
INFO  03:10:03,729 - #23 ]
INFO  03:10:03,730 - #27 ;
INFO  03:10:03,730 - #33 do
INFO  03:10:03,730 - #20 {
INFO  03:10:03,730 - #4 read
INFO  03:10:03,730 - #29 (
INFO  03:10:03,730 - #8 a
INFO  03:10:03,730 - #22 [
INFO  03:10:03,730 - #8 i
INFO  03:10:03,730 - #23 ]
INFO  03:10:03,730 - #30 )
INFO  03:10:03,730 - #27 ;
INFO  03:10:03,730 - #31 if
INFO  03:10:03,731 - #29 (
INFO  03:10:03,731 - #8 a
INFO  03:10:03,731 - #22 [
INFO  03:10:03,731 - #8 i
INFO  03:10:03,731 - #23 ]
INFO  03:10:03,731 - #19 %
INFO  03:10:03,731 - #9 3
INFO  03:10:03,732 - #39 ==
INFO  03:10:03,732 - #9 0
INFO  03:10:03,733 - #30 )
INFO  03:10:03,733 - #3 print
INFO  03:10:03,733 - #29 (
INFO  03:10:03,733 - #8 a
INFO  03:10:03,733 - #22 [
INFO  03:10:03,733 - #8 i
INFO  03:10:03,733 - #23 ]
INFO  03:10:03,733 - #30 )
INFO  03:10:03,733 - #27 ;
INFO  03:10:03,733 - #32 else
INFO  03:10:03,733 - #3 print
INFO  03:10:03,733 - #29 (
INFO  03:10:03,733 - #8 max
INFO  03:10:03,733 - #29 (
INFO  03:10:03,733 - #8 a
INFO  03:10:03,733 - #22 [
INFO  03:10:03,734 - #8 i
INFO  03:10:03,734 - #23 ]
INFO  03:10:03,734 - #28 ,
INFO  03:10:03,734 - #9 0
INFO  03:10:03,734 - #30 )
INFO  03:10:03,734 - #30 )
INFO  03:10:03,734 - #27 ;
INFO  03:10:03,734 - #21 }
INFO  03:10:03,735 - #34 while
INFO  03:10:03,735 - #29 (
INFO  03:10:03,735 - #8 i
INFO  03:10:03,735 - #42 <=
INFO  03:10:03,735 - #8 length
INFO  03:10:03,735 - #16 -
INFO  03:10:03,735 - #9 1
INFO  03:10:03,735 - #30 )
INFO  03:10:03,735 - #27 ;
INFO  03:10:03,735 - #3 print
INFO  03:10:03,735 - #29 (
INFO  03:10:03,735 - #8 d
INFO  03:10:03,735 - #30 )
INFO  03:10:03,735 - #27 ;
INFO  03:10:03,735 - #21 }
INFO  03:10:03,736 - #21 }
INFO  03:13:44,684 - #2 program
INFO  03:13:44,684 - #8 Program
INFO  03:13:44,684 - #20 {
INFO  03:13:44,684 - #5 const
INFO  03:13:44,685 - #8 int
INFO  03:13:44,685 - #8 c
INFO  03:13:44,685 - #24 =
INFO  03:13:44,685 - #9 10
INFO  03:13:44,685 - #27 ;
INFO  03:13:44,685 - #5 const
INFO  03:13:44,686 - #8 int
INFO  03:13:44,686 - #8 d
INFO  03:13:44,686 - #24 =
INFO  03:13:44,686 - #9 99
INFO  03:13:44,686 - #28 ,
INFO  03:13:44,686 - #8 eps
INFO  03:13:44,686 - #24 =
INFO  03:13:44,686 - #9 2
INFO  03:13:44,687 - #27 ;
INFO  03:13:44,687 - #8 int
INFO  03:13:44,687 - #27 ;
ERROR 03:13:44,687 - Sintaksna greska na liniji 4, koloni 8 za simbol ";"
INFO  03:13:44,687 - #6 void
INFO  03:13:44,687 - #8 test
INFO  03:13:44,687 - #29 (
ERROR 03:13:44,688 - Sintaksna greska - neispravna definicija promenljive!  na liniji 4, koloni 8 za simbol ";"
INFO  03:13:44,689 - #30 )
INFO  03:13:44,689 - #20 {
INFO  03:13:44,689 - #8 int
INFO  03:13:44,689 - #8 a
INFO  03:13:44,689 - #28 ,
INFO  03:13:44,689 - #8 b
INFO  03:13:44,689 - #27 ;
INFO  03:13:44,690 - #8 bool
INFO  03:13:44,690 - #8 cond
INFO  03:13:44,690 - #27 ;
INFO  03:13:44,690 - #8 a
INFO  03:13:44,690 - #24 =
INFO  03:13:44,690 - #9 3
INFO  03:13:44,690 - #27 ;
INFO  03:13:44,691 - #8 b
INFO  03:13:44,691 - #24 =
INFO  03:13:44,691 - #9 5
INFO  03:13:44,692 - #27 ;
INFO  03:13:44,692 - #8 cond
INFO  03:13:44,692 - #24 =
INFO  03:13:44,692 - #11 true
INFO  03:13:44,692 - #27 ;
INFO  03:13:44,694 - #31 if
INFO  03:13:44,694 - #29 (
INFO  03:13:44,694 - #9 2
INFO  03:13:44,694 - #17 *
INFO  03:13:44,694 - #29 (
INFO  03:13:44,696 - #8 a
INFO  03:13:44,696 - #16 -
INFO  03:13:44,696 - #8 b
INFO  03:13:44,697 - #16 -
INFO  03:13:44,697 - #9 1
INFO  03:13:44,698 - #30 )
INFO  03:13:44,698 - #16 -
INFO  03:13:44,698 - #9 14
INFO  03:13:44,699 - #38 >
INFO  03:13:44,699 - #9 0
INFO  03:13:44,700 - #14 ||
INFO  03:13:44,701 - #8 cond
INFO  03:13:44,701 - #30 )
INFO  03:13:44,702 - #3 print
INFO  03:13:44,702 - #29 (
INFO  03:13:44,702 - #8 a
INFO  03:13:44,702 - #15 +
INFO  03:13:44,702 - #8 b
INFO  03:13:44,703 - #30 )
INFO  03:13:44,703 - #27 ;
INFO  03:13:44,703 - #21 }
INFO  03:13:44,703 - #8 int
INFO  03:13:44,704 - #8 max
INFO  03:13:44,704 - #29 (
INFO  03:13:44,706 - #8 int
INFO  03:13:44,706 - #8 a
INFO  03:13:44,706 - #28 ,
INFO  03:13:44,707 - #8 int
INFO  03:13:44,707 - #8 b
INFO  03:13:44,707 - #30 )
INFO  03:13:44,707 - #20 {
INFO  03:13:44,707 - #31 if
INFO  03:13:44,707 - #29 (
INFO  03:13:44,707 - #8 a
INFO  03:13:44,707 - #38 >
INFO  03:13:44,708 - #8 b
INFO  03:13:44,708 - #30 )
INFO  03:13:44,708 - #20 {
INFO  03:13:44,708 - #37 return
INFO  03:13:44,708 - #8 a
INFO  03:13:44,708 - #27 ;
INFO  03:13:44,708 - #21 }
INFO  03:13:44,708 - #32 else
INFO  03:13:44,708 - #37 return
INFO  03:13:44,709 - #8 b
INFO  03:13:44,709 - #27 ;
INFO  03:13:44,709 - #21 }
INFO  03:13:44,709 - #8 int
INFO  03:13:44,709 - #8 min
INFO  03:13:44,709 - #29 (
INFO  03:13:44,709 - #8 int
INFO  03:13:44,709 - #8 a
INFO  03:13:44,709 - #28 ,
INFO  03:13:44,709 - #8 int
INFO  03:13:44,710 - #8 b
INFO  03:13:44,710 - #30 )
INFO  03:13:44,710 - #20 {
INFO  03:13:44,710 - #31 if
INFO  03:13:44,710 - #29 (
INFO  03:13:44,710 - #8 a
INFO  03:13:44,710 - #40 <
INFO  03:13:44,710 - #8 b
INFO  03:13:44,711 - #30 )
INFO  03:13:44,711 - #20 {
INFO  03:13:44,711 - #37 return
INFO  03:13:44,711 - #8 a
INFO  03:13:44,711 - #27 ;
INFO  03:13:44,711 - #21 }
INFO  03:13:44,711 - #32 else
INFO  03:13:44,711 - #20 {
INFO  03:13:44,711 - #37 return
INFO  03:13:44,711 - #8 b
INFO  03:13:44,711 - #27 ;
INFO  03:13:44,712 - #21 }
INFO  03:13:44,712 - #21 }
INFO  03:13:44,712 - #6 void
INFO  03:13:44,712 - #8 main
INFO  03:13:44,712 - #29 (
INFO  03:13:44,712 - #30 )
INFO  03:13:44,712 - #20 {
INFO  03:13:44,712 - #8 int
INFO  03:13:44,712 - #8 a
INFO  03:13:44,712 - #22 [
INFO  03:13:44,712 - #23 ]
INFO  03:13:44,712 - #27 ;
INFO  03:13:44,713 - #8 int
INFO  03:13:44,713 - #8 length
INFO  03:13:44,713 - #27 ;
INFO  03:13:44,713 - #8 length
INFO  03:13:44,713 - #24 =
INFO  03:13:44,713 - #8 c
INFO  03:13:44,713 - #27 ;
INFO  03:13:44,713 - #8 test
INFO  03:13:44,713 - #29 (
INFO  03:13:44,713 - #30 )
INFO  03:13:44,713 - #27 ;
INFO  03:13:44,713 - #31 if
INFO  03:13:44,713 - #29 (
INFO  03:13:44,713 - #8 length
INFO  03:13:44,714 - #38 >
INFO  03:13:44,714 - #9 0
INFO  03:13:44,714 - #13 &&
INFO  03:13:44,714 - #8 length
INFO  03:13:44,714 - #42 <=
INFO  03:13:44,714 - #8 d
INFO  03:13:44,714 - #30 )
INFO  03:13:44,715 - #8 a
INFO  03:13:44,715 - #24 =
INFO  03:13:44,715 - #7 new
INFO  03:13:44,715 - #8 int
INFO  03:13:44,715 - #22 [
INFO  03:13:44,715 - #8 length
INFO  03:13:44,715 - #23 ]
INFO  03:13:44,715 - #27 ;
INFO  03:13:44,715 - #32 else
INFO  03:13:44,715 - #8 a
INFO  03:13:44,715 - #24 =
INFO  03:13:44,715 - #7 new
INFO  03:13:44,716 - #8 int
INFO  03:13:44,716 - #22 [
INFO  03:13:44,716 - #9 5
INFO  03:13:44,716 - #23 ]
INFO  03:13:44,716 - #27 ;
INFO  03:13:44,716 - #33 do
INFO  03:13:44,716 - #20 {
INFO  03:13:44,716 - #4 read
INFO  03:13:44,716 - #29 (
INFO  03:13:44,716 - #8 a
INFO  03:13:44,716 - #22 [
INFO  03:13:44,716 - #8 i
INFO  03:13:44,716 - #23 ]
INFO  03:13:44,716 - #30 )
INFO  03:13:44,717 - #27 ;
INFO  03:13:44,717 - #31 if
INFO  03:13:44,717 - #29 (
INFO  03:13:44,717 - #8 a
INFO  03:13:44,717 - #22 [
INFO  03:13:44,717 - #8 i
INFO  03:13:44,717 - #23 ]
INFO  03:13:44,717 - #19 %
INFO  03:13:44,717 - #9 3
INFO  03:13:44,718 - #39 ==
INFO  03:13:44,718 - #9 0
INFO  03:13:44,719 - #30 )
INFO  03:13:44,719 - #3 print
INFO  03:13:44,719 - #29 (
INFO  03:13:44,719 - #8 a
INFO  03:13:44,719 - #22 [
INFO  03:13:44,719 - #8 i
INFO  03:13:44,719 - #23 ]
INFO  03:13:44,719 - #30 )
INFO  03:13:44,719 - #27 ;
INFO  03:13:44,719 - #32 else
INFO  03:13:44,719 - #3 print
INFO  03:13:44,719 - #29 (
INFO  03:13:44,719 - #8 max
INFO  03:13:44,719 - #29 (
INFO  03:13:44,719 - #8 a
INFO  03:13:44,720 - #22 [
INFO  03:13:44,720 - #8 i
INFO  03:13:44,720 - #23 ]
INFO  03:13:44,720 - #28 ,
INFO  03:13:44,720 - #9 0
INFO  03:13:44,720 - #30 )
INFO  03:13:44,720 - #30 )
INFO  03:13:44,720 - #27 ;
INFO  03:13:44,720 - #21 }
INFO  03:13:44,720 - #34 while
INFO  03:13:44,720 - #29 (
INFO  03:13:44,721 - #8 i
INFO  03:13:44,721 - #42 <=
INFO  03:13:44,721 - #8 length
INFO  03:13:44,721 - #16 -
INFO  03:13:44,721 - #9 1
INFO  03:13:44,721 - #30 )
INFO  03:13:44,721 - #27 ;
INFO  03:13:44,721 - #3 print
INFO  03:13:44,721 - #29 (
INFO  03:13:44,721 - #8 d
INFO  03:13:44,721 - #30 )
INFO  03:13:44,721 - #27 ;
INFO  03:13:44,721 - #21 }
INFO  03:13:44,721 - #21 }
INFO  03:13:57,048 - #2 program
INFO  03:13:57,049 - #8 Program
INFO  03:13:57,049 - #20 {
INFO  03:13:57,049 - #5 const
INFO  03:13:57,049 - #8 int
INFO  03:13:57,049 - #8 c
INFO  03:13:57,049 - #24 =
INFO  03:13:57,049 - #9 10
INFO  03:13:57,049 - #27 ;
INFO  03:13:57,050 - #5 const
INFO  03:13:57,050 - #8 int
INFO  03:13:57,050 - #8 d
INFO  03:13:57,050 - #24 =
INFO  03:13:57,050 - #9 99
INFO  03:13:57,051 - #28 ,
INFO  03:13:57,051 - #8 eps
INFO  03:13:57,051 - #24 =
INFO  03:13:57,051 - #9 2
INFO  03:13:57,051 - #27 ;
INFO  03:13:57,051 - #8 int
INFO  03:13:57,051 - #27 ;
ERROR 03:13:57,052 - Sintaksna greska na liniji 4, koloni 8 za simbol ";"
INFO  03:13:57,052 - #6 void
INFO  03:13:57,052 - #8 test
INFO  03:13:57,052 - #29 (
ERROR 03:13:57,052 - Sintaksna greska - neispravna definicija promenljive!  na liniji 4, koloni 8 za simbol ";"
INFO  03:13:57,053 - #30 )
INFO  03:13:57,053 - #20 {
INFO  03:13:57,053 - #8 int
INFO  03:13:57,053 - #8 a
INFO  03:13:57,054 - #28 ,
INFO  03:13:57,054 - #8 b
INFO  03:13:57,054 - #27 ;
INFO  03:13:57,054 - #8 bool
INFO  03:13:57,054 - #8 cond
INFO  03:13:57,054 - #27 ;
INFO  03:13:57,054 - #8 a
INFO  03:13:57,055 - #24 =
INFO  03:13:57,055 - #9 3
INFO  03:13:57,055 - #27 ;
INFO  03:13:57,056 - #8 b
INFO  03:13:57,056 - #24 =
INFO  03:13:57,056 - #9 5
INFO  03:13:57,056 - #27 ;
INFO  03:13:57,056 - #8 cond
INFO  03:13:57,056 - #24 =
INFO  03:13:57,056 - #11 true
INFO  03:13:57,057 - #27 ;
INFO  03:13:57,058 - #31 if
INFO  03:13:57,058 - #29 (
INFO  03:13:57,058 - #9 2
INFO  03:13:57,058 - #17 *
INFO  03:13:57,059 - #29 (
INFO  03:13:57,060 - #8 a
INFO  03:13:57,060 - #16 -
INFO  03:13:57,060 - #8 b
INFO  03:13:57,061 - #16 -
INFO  03:13:57,061 - #9 1
INFO  03:13:57,062 - #30 )
INFO  03:13:57,062 - #16 -
INFO  03:13:57,062 - #9 14
INFO  03:13:57,062 - #38 >
INFO  03:13:57,063 - #9 0
INFO  03:13:57,064 - #14 ||
INFO  03:13:57,065 - #8 cond
INFO  03:13:57,065 - #30 )
INFO  03:13:57,065 - #3 print
INFO  03:13:57,065 - #29 (
INFO  03:13:57,065 - #8 a
INFO  03:13:57,065 - #15 +
INFO  03:13:57,066 - #8 b
INFO  03:13:57,066 - #30 )
INFO  03:13:57,067 - #27 ;
INFO  03:13:57,067 - #21 }
INFO  03:13:57,067 - #8 int
INFO  03:13:57,067 - #8 max
INFO  03:13:57,068 - #29 (
INFO  03:13:57,070 - #8 int
INFO  03:13:57,070 - #8 a
INFO  03:13:57,070 - #28 ,
INFO  03:13:57,070 - #8 int
INFO  03:13:57,071 - #8 b
INFO  03:13:57,071 - #30 )
INFO  03:13:57,071 - #20 {
INFO  03:13:57,071 - #31 if
INFO  03:13:57,071 - #29 (
INFO  03:13:57,071 - #8 a
INFO  03:13:57,071 - #38 >
INFO  03:13:57,071 - #8 b
INFO  03:13:57,071 - #30 )
INFO  03:13:57,072 - #20 {
INFO  03:13:57,072 - #37 return
INFO  03:13:57,072 - #8 a
INFO  03:13:57,072 - #27 ;
INFO  03:13:57,072 - #21 }
INFO  03:13:57,072 - #32 else
INFO  03:13:57,072 - #37 return
INFO  03:13:57,072 - #8 b
INFO  03:13:57,072 - #27 ;
INFO  03:13:57,072 - #21 }
INFO  03:13:57,073 - #8 int
INFO  03:13:57,073 - #8 min
INFO  03:13:57,073 - #29 (
INFO  03:13:57,073 - #8 int
INFO  03:13:57,073 - #8 a
INFO  03:13:57,073 - #28 ,
INFO  03:13:57,073 - #8 int
INFO  03:13:57,073 - #8 b
INFO  03:13:57,073 - #30 )
INFO  03:13:57,073 - #20 {
INFO  03:13:57,074 - #31 if
INFO  03:13:57,074 - #29 (
INFO  03:13:57,074 - #8 a
INFO  03:13:57,074 - #40 <
INFO  03:13:57,074 - #8 b
INFO  03:13:57,075 - #30 )
INFO  03:13:57,075 - #20 {
INFO  03:13:57,075 - #37 return
INFO  03:13:57,075 - #8 a
INFO  03:13:57,075 - #27 ;
INFO  03:13:57,075 - #21 }
INFO  03:13:57,075 - #32 else
INFO  03:13:57,075 - #20 {
INFO  03:13:57,075 - #37 return
INFO  03:13:57,075 - #8 b
INFO  03:13:57,075 - #27 ;
INFO  03:13:57,075 - #21 }
INFO  03:13:57,076 - #21 }
INFO  03:13:57,076 - #6 void
INFO  03:13:57,076 - #8 main
INFO  03:13:57,076 - #29 (
INFO  03:13:57,076 - #30 )
INFO  03:13:57,076 - #20 {
INFO  03:13:57,076 - #8 int
INFO  03:13:57,076 - #8 a
INFO  03:13:57,076 - #22 [
INFO  03:13:57,076 - #23 ]
INFO  03:13:57,076 - #27 ;
INFO  03:13:57,076 - #8 int
INFO  03:13:57,077 - #8 length
INFO  03:13:57,077 - #27 ;
INFO  03:13:57,077 - #8 length
INFO  03:13:57,077 - #24 =
INFO  03:13:57,077 - #8 c
INFO  03:13:57,077 - #27 ;
INFO  03:13:57,077 - #8 test
INFO  03:13:57,077 - #29 (
INFO  03:13:57,077 - #30 )
INFO  03:13:57,077 - #27 ;
INFO  03:13:57,077 - #31 if
INFO  03:13:57,077 - #29 (
INFO  03:13:57,078 - #8 length
INFO  03:13:57,078 - #38 >
INFO  03:13:57,078 - #9 0
INFO  03:13:57,078 - #13 &&
INFO  03:13:57,078 - #8 length
INFO  03:13:57,078 - #42 <=
INFO  03:13:57,078 - #8 d
INFO  03:13:57,079 - #30 )
INFO  03:13:57,079 - #8 a
INFO  03:13:57,079 - #24 =
INFO  03:13:57,079 - #7 new
INFO  03:13:57,079 - #8 int
INFO  03:13:57,079 - #22 [
INFO  03:13:57,079 - #8 length
INFO  03:13:57,079 - #23 ]
INFO  03:13:57,079 - #27 ;
INFO  03:13:57,079 - #32 else
INFO  03:13:57,079 - #8 a
INFO  03:13:57,079 - #24 =
INFO  03:13:57,080 - #7 new
INFO  03:13:57,080 - #8 int
INFO  03:13:57,080 - #22 [
INFO  03:13:57,080 - #9 5
INFO  03:13:57,080 - #23 ]
INFO  03:13:57,080 - #27 ;
INFO  03:13:57,080 - #33 do
INFO  03:13:57,080 - #20 {
INFO  03:13:57,080 - #4 read
INFO  03:13:57,080 - #29 (
INFO  03:13:57,080 - #8 a
INFO  03:13:57,080 - #22 [
INFO  03:13:57,080 - #8 i
INFO  03:13:57,080 - #23 ]
INFO  03:13:57,080 - #30 )
INFO  03:13:57,081 - #27 ;
INFO  03:13:57,081 - #31 if
INFO  03:13:57,081 - #29 (
INFO  03:13:57,081 - #8 a
INFO  03:13:57,081 - #22 [
INFO  03:13:57,081 - #8 i
INFO  03:13:57,081 - #23 ]
INFO  03:13:57,081 - #19 %
INFO  03:13:57,081 - #9 3
INFO  03:13:57,082 - #39 ==
INFO  03:13:57,082 - #9 0
INFO  03:13:57,083 - #30 )
INFO  03:13:57,083 - #3 print
INFO  03:13:57,083 - #29 (
INFO  03:13:57,083 - #8 a
INFO  03:13:57,083 - #22 [
INFO  03:13:57,083 - #8 i
INFO  03:13:57,083 - #23 ]
INFO  03:13:57,083 - #30 )
INFO  03:13:57,083 - #27 ;
INFO  03:13:57,083 - #32 else
INFO  03:13:57,084 - #3 print
INFO  03:13:57,084 - #29 (
INFO  03:13:57,084 - #8 max
INFO  03:13:57,084 - #29 (
INFO  03:13:57,084 - #8 a
INFO  03:13:57,084 - #22 [
INFO  03:13:57,084 - #8 i
INFO  03:13:57,084 - #23 ]
INFO  03:13:57,084 - #28 ,
INFO  03:13:57,084 - #9 0
INFO  03:13:57,084 - #30 )
INFO  03:13:57,084 - #30 )
INFO  03:13:57,085 - #27 ;
INFO  03:13:57,085 - #21 }
INFO  03:13:57,085 - #34 while
INFO  03:13:57,085 - #29 (
INFO  03:13:57,085 - #8 i
INFO  03:13:57,085 - #42 <=
INFO  03:13:57,085 - #8 length
INFO  03:13:57,085 - #16 -
INFO  03:13:57,085 - #9 1
INFO  03:13:57,085 - #30 )
INFO  03:13:57,085 - #27 ;
INFO  03:13:57,085 - #3 print
INFO  03:13:57,086 - #29 (
INFO  03:13:57,086 - #8 d
INFO  03:13:57,086 - #30 )
INFO  03:13:57,086 - #27 ;
INFO  03:13:57,086 - #21 }
INFO  03:13:57,086 - #21 }
INFO  03:21:53,830 - #2 program
INFO  03:21:53,830 - #8 Program
INFO  03:21:53,830 - #20 {
INFO  03:21:53,831 - #5 const
INFO  03:21:53,831 - #8 int
INFO  03:21:53,831 - #8 c
INFO  03:21:53,831 - #24 =
INFO  03:21:53,831 - #9 10
INFO  03:21:53,831 - #27 ;
INFO  03:21:53,832 - #5 const
INFO  03:21:53,833 - #8 int
INFO  03:21:53,833 - #8 d
INFO  03:21:53,833 - #24 =
INFO  03:21:53,833 - #9 99
INFO  03:21:53,833 - #28 ,
INFO  03:21:53,833 - #8 eps
INFO  03:21:53,833 - #24 =
INFO  03:21:53,833 - #9 2
INFO  03:21:53,833 - #27 ;
INFO  03:21:53,834 - #8 int
INFO  03:21:53,834 - #27 ;
ERROR 03:21:53,834 - Sintaksna greska na liniji 4, koloni 8 za simbol ";"
INFO  03:21:53,834 - #6 void
INFO  03:21:53,834 - #8 test
INFO  03:21:53,835 - #29 (
ERROR 03:21:53,836 - Sintaksna greska - neispravna definicija promenljive!  na liniji 4, koloni 8 za simbol ";"
INFO  03:21:53,837 - #30 )
INFO  03:21:53,837 - #20 {
INFO  03:21:53,837 - #8 int
INFO  03:21:53,837 - #8 a
INFO  03:21:53,837 - #28 ,
INFO  03:21:53,837 - #8 b
INFO  03:21:53,838 - #27 ;
INFO  03:21:53,838 - #8 bool
INFO  03:21:53,838 - #8 cond
INFO  03:21:53,838 - #27 ;
INFO  03:21:53,838 - #8 a
INFO  03:21:53,838 - #24 =
INFO  03:21:53,839 - #9 3
INFO  03:21:53,839 - #27 ;
INFO  03:21:53,841 - #8 b
INFO  03:21:53,841 - #24 =
INFO  03:21:53,842 - #9 5
INFO  03:21:53,842 - #27 ;
INFO  03:21:53,842 - #8 cond
INFO  03:21:53,843 - #24 =
INFO  03:21:53,843 - #11 true
INFO  03:21:53,843 - #27 ;
INFO  03:21:53,845 - #31 if
INFO  03:21:53,845 - #29 (
INFO  03:21:53,845 - #9 2
INFO  03:21:53,845 - #17 *
INFO  03:21:53,845 - #29 (
INFO  03:21:53,847 - #8 a
INFO  03:21:53,847 - #16 -
INFO  03:21:53,847 - #8 b
INFO  03:21:53,849 - #16 -
INFO  03:21:53,850 - #9 1
INFO  03:21:53,850 - #30 )
INFO  03:21:53,850 - #16 -
INFO  03:21:53,851 - #9 14
INFO  03:21:53,851 - #38 >
INFO  03:21:53,851 - #9 0
INFO  03:21:53,856 - #14 ||
INFO  03:21:53,857 - #8 cond
INFO  03:21:53,857 - #30 )
INFO  03:21:53,857 - #3 print
INFO  03:21:53,857 - #29 (
INFO  03:21:53,857 - #8 a
INFO  03:21:53,858 - #15 +
INFO  03:21:53,858 - #8 b
INFO  03:21:53,858 - #30 )
INFO  03:21:53,858 - #27 ;
INFO  03:21:53,859 - #21 }
INFO  03:21:53,859 - #8 int
INFO  03:21:53,859 - #8 max
INFO  03:21:53,859 - #29 (
INFO  03:21:53,862 - #8 int
INFO  03:21:53,862 - #8 a
INFO  03:21:53,862 - #28 ,
INFO  03:21:53,862 - #8 int
INFO  03:21:53,862 - #8 b
INFO  03:21:53,863 - #30 )
INFO  03:21:53,863 - #20 {
INFO  03:21:53,863 - #31 if
INFO  03:21:53,863 - #29 (
INFO  03:21:53,863 - #8 a
INFO  03:21:53,863 - #38 >
INFO  03:21:53,863 - #8 b
INFO  03:21:53,863 - #30 )
INFO  03:21:53,863 - #20 {
INFO  03:21:53,863 - #37 return
INFO  03:21:53,864 - #8 a
INFO  03:21:53,864 - #27 ;
INFO  03:21:53,864 - #21 }
INFO  03:21:53,864 - #32 else
INFO  03:21:53,864 - #37 return
INFO  03:21:53,864 - #8 b
INFO  03:21:53,864 - #27 ;
INFO  03:21:53,865 - #21 }
INFO  03:21:53,865 - #8 int
INFO  03:21:53,865 - #8 min
INFO  03:21:53,865 - #29 (
INFO  03:21:53,865 - #8 int
INFO  03:21:53,865 - #8 a
INFO  03:21:53,866 - #28 ,
INFO  03:21:53,866 - #8 int
INFO  03:21:53,866 - #8 b
INFO  03:21:53,866 - #30 )
INFO  03:21:53,866 - #20 {
INFO  03:21:53,866 - #31 if
INFO  03:21:53,866 - #29 (
INFO  03:21:53,866 - #8 a
INFO  03:21:53,866 - #40 <
INFO  03:21:53,866 - #8 b
INFO  03:21:53,867 - #30 )
INFO  03:21:53,867 - #20 {
INFO  03:21:53,868 - #37 return
INFO  03:21:53,868 - #8 a
INFO  03:21:53,868 - #27 ;
INFO  03:21:53,868 - #21 }
INFO  03:21:53,868 - #32 else
INFO  03:21:53,868 - #20 {
INFO  03:21:53,868 - #37 return
INFO  03:21:53,868 - #8 b
INFO  03:21:53,868 - #27 ;
INFO  03:21:53,868 - #21 }
INFO  03:21:53,868 - #21 }
INFO  03:21:53,868 - #6 void
INFO  03:21:53,869 - #8 main
INFO  03:21:53,869 - #29 (
INFO  03:21:53,869 - #30 )
INFO  03:21:53,869 - #20 {
INFO  03:21:53,869 - #8 int
INFO  03:21:53,869 - #8 a
INFO  03:21:53,869 - #22 [
INFO  03:21:53,869 - #23 ]
INFO  03:21:53,869 - #27 ;
INFO  03:21:53,869 - #8 int
INFO  03:21:53,869 - #8 length
INFO  03:21:53,869 - #27 ;
INFO  03:21:53,869 - #8 length
INFO  03:21:53,870 - #24 =
INFO  03:21:53,870 - #8 c
INFO  03:21:53,870 - #27 ;
INFO  03:21:53,870 - #8 test
INFO  03:21:53,870 - #29 (
INFO  03:21:53,870 - #30 )
INFO  03:21:53,870 - #27 ;
INFO  03:21:53,870 - #31 if
INFO  03:21:53,870 - #29 (
INFO  03:21:53,870 - #8 length
INFO  03:21:53,870 - #38 >
INFO  03:21:53,870 - #9 0
INFO  03:21:53,870 - #13 &&
INFO  03:21:53,870 - #8 length
INFO  03:21:53,870 - #42 <=
INFO  03:21:53,871 - #8 d
INFO  03:21:53,871 - #30 )
INFO  03:21:53,871 - #8 a
INFO  03:21:53,872 - #24 =
INFO  03:21:53,872 - #7 new
INFO  03:21:53,872 - #8 int
INFO  03:21:53,872 - #22 [
INFO  03:21:53,872 - #8 length
INFO  03:21:53,872 - #23 ]
INFO  03:21:53,872 - #27 ;
INFO  03:21:53,872 - #32 else
INFO  03:21:53,872 - #8 a
INFO  03:21:53,872 - #24 =
INFO  03:21:53,872 - #7 new
INFO  03:21:53,872 - #8 int
INFO  03:21:53,872 - #22 [
INFO  03:21:53,873 - #9 5
INFO  03:21:53,873 - #23 ]
INFO  03:21:53,873 - #27 ;
INFO  03:21:53,873 - #33 do
INFO  03:21:53,873 - #20 {
INFO  03:21:53,873 - #4 read
INFO  03:21:53,873 - #29 (
INFO  03:21:53,873 - #8 a
INFO  03:21:53,873 - #22 [
INFO  03:21:53,873 - #8 i
INFO  03:21:53,873 - #23 ]
INFO  03:21:53,873 - #30 )
INFO  03:21:53,873 - #27 ;
INFO  03:21:53,873 - #31 if
INFO  03:21:53,874 - #29 (
INFO  03:21:53,874 - #8 a
INFO  03:21:53,874 - #22 [
INFO  03:21:53,874 - #8 i
INFO  03:21:53,874 - #23 ]
INFO  03:21:53,874 - #19 %
INFO  03:21:53,874 - #9 3
INFO  03:21:53,875 - #39 ==
INFO  03:21:53,875 - #9 0
INFO  03:21:53,876 - #30 )
INFO  03:21:53,876 - #3 print
INFO  03:21:53,876 - #29 (
INFO  03:21:53,876 - #8 a
INFO  03:21:53,876 - #22 [
INFO  03:21:53,876 - #8 i
INFO  03:21:53,876 - #23 ]
INFO  03:21:53,876 - #30 )
INFO  03:21:53,876 - #27 ;
INFO  03:21:53,876 - #32 else
INFO  03:21:53,876 - #3 print
INFO  03:21:53,876 - #29 (
INFO  03:21:53,876 - #8 max
INFO  03:21:53,876 - #29 (
INFO  03:21:53,876 - #8 a
INFO  03:21:53,876 - #22 [
INFO  03:21:53,877 - #8 i
INFO  03:21:53,877 - #23 ]
INFO  03:21:53,877 - #28 ,
INFO  03:21:53,877 - #9 0
INFO  03:21:53,877 - #30 )
INFO  03:21:53,877 - #30 )
INFO  03:21:53,877 - #27 ;
INFO  03:21:53,877 - #21 }
INFO  03:21:53,877 - #34 while
INFO  03:21:53,877 - #29 (
INFO  03:21:53,878 - #8 i
INFO  03:21:53,878 - #42 <=
INFO  03:21:53,878 - #8 length
INFO  03:21:53,878 - #16 -
INFO  03:21:53,878 - #9 1
INFO  03:21:53,878 - #30 )
INFO  03:21:53,878 - #27 ;
INFO  03:21:53,878 - #3 print
INFO  03:21:53,878 - #29 (
INFO  03:21:53,878 - #8 d
INFO  03:21:53,878 - #30 )
INFO  03:21:53,878 - #27 ;
INFO  03:21:53,878 - #21 }
INFO  03:21:53,878 - #21 }
INFO  03:25:10,551 - #2 program
INFO  03:25:10,551 - #8 Program
INFO  03:25:10,551 - #20 {
INFO  03:25:10,551 - #5 const
INFO  03:25:10,551 - #8 int
INFO  03:25:10,552 - #8 c
INFO  03:25:10,552 - #24 =
INFO  03:25:10,552 - #9 10
INFO  03:25:10,552 - #27 ;
INFO  03:25:10,552 - #5 const
INFO  03:25:10,553 - #8 int
INFO  03:25:10,553 - #8 d
INFO  03:25:10,553 - #24 =
INFO  03:25:10,553 - #9 99
INFO  03:25:10,553 - #28 ,
INFO  03:25:10,553 - #8 eps
INFO  03:25:10,553 - #24 =
INFO  03:25:10,553 - #9 2
INFO  03:25:10,553 - #27 ;
INFO  03:25:10,554 - #8 int
INFO  03:25:10,554 - #27 ;
ERROR 03:25:10,554 - Sintaksna greska na liniji 4, koloni 8 za simbol ";"
INFO  03:25:10,554 - #6 void
INFO  03:25:10,554 - #8 test
INFO  03:25:10,554 - #29 (
ERROR 03:25:10,555 - Sintaksna greska - neispravna definicija promenljive na liniji 4, koloni 8 za simbol ";"
INFO  03:25:10,556 - #30 )
INFO  03:25:10,556 - #20 {
INFO  03:25:10,556 - #8 int
INFO  03:25:10,556 - #8 a
INFO  03:25:10,556 - #28 ,
INFO  03:25:10,556 - #8 b
INFO  03:25:10,557 - #27 ;
INFO  03:25:10,557 - #8 bool
INFO  03:25:10,557 - #8 cond
INFO  03:25:10,557 - #27 ;
INFO  03:25:10,557 - #8 a
INFO  03:25:10,557 - #24 =
INFO  03:25:10,558 - #9 3
INFO  03:25:10,558 - #27 ;
INFO  03:25:10,558 - #8 b
INFO  03:25:10,559 - #24 =
INFO  03:25:10,559 - #9 5
INFO  03:25:10,559 - #27 ;
INFO  03:25:10,559 - #8 cond
INFO  03:25:10,559 - #24 =
INFO  03:25:10,559 - #11 true
INFO  03:25:10,559 - #27 ;
INFO  03:25:10,561 - #31 if
INFO  03:25:10,561 - #29 (
INFO  03:25:10,561 - #9 2
INFO  03:25:10,561 - #17 *
INFO  03:25:10,561 - #29 (
INFO  03:25:10,563 - #8 a
INFO  03:25:10,563 - #16 -
INFO  03:25:10,563 - #8 b
INFO  03:25:10,564 - #16 -
INFO  03:25:10,565 - #9 1
INFO  03:25:10,565 - #30 )
INFO  03:25:10,565 - #16 -
INFO  03:25:10,566 - #9 14
INFO  03:25:10,566 - #38 >
INFO  03:25:10,566 - #9 0
INFO  03:25:10,568 - #14 ||
INFO  03:25:10,568 - #8 cond
INFO  03:25:10,568 - #30 )
INFO  03:25:10,569 - #3 print
INFO  03:25:10,569 - #29 (
INFO  03:25:10,569 - #8 a
INFO  03:25:10,569 - #15 +
INFO  03:25:10,569 - #8 b
INFO  03:25:10,570 - #30 )
INFO  03:25:10,570 - #27 ;
INFO  03:25:10,570 - #21 }
INFO  03:25:10,571 - #8 int
INFO  03:25:10,571 - #8 max
INFO  03:25:10,571 - #29 (
INFO  03:25:10,574 - #8 int
INFO  03:25:10,574 - #8 a
INFO  03:25:10,574 - #28 ,
INFO  03:25:10,574 - #8 int
INFO  03:25:10,574 - #8 b
INFO  03:25:10,574 - #30 )
INFO  03:25:10,574 - #20 {
INFO  03:25:10,574 - #31 if
INFO  03:25:10,574 - #29 (
INFO  03:25:10,574 - #8 a
INFO  03:25:10,575 - #38 >
INFO  03:25:10,575 - #8 b
INFO  03:25:10,575 - #30 )
INFO  03:25:10,575 - #20 {
INFO  03:25:10,575 - #37 return
INFO  03:25:10,575 - #8 a
INFO  03:25:10,575 - #27 ;
INFO  03:25:10,575 - #21 }
INFO  03:25:10,575 - #32 else
INFO  03:25:10,576 - #37 return
INFO  03:25:10,576 - #8 b
INFO  03:25:10,576 - #27 ;
INFO  03:25:10,576 - #21 }
INFO  03:25:10,576 - #8 int
INFO  03:25:10,576 - #8 min
INFO  03:25:10,576 - #29 (
INFO  03:25:10,576 - #8 int
INFO  03:25:10,576 - #8 a
INFO  03:25:10,577 - #28 ,
INFO  03:25:10,577 - #8 int
INFO  03:25:10,577 - #8 b
INFO  03:25:10,577 - #30 )
INFO  03:25:10,577 - #20 {
INFO  03:25:10,577 - #31 if
INFO  03:25:10,577 - #29 (
INFO  03:25:10,577 - #8 a
INFO  03:25:10,577 - #40 <
INFO  03:25:10,577 - #8 b
INFO  03:25:10,578 - #30 )
INFO  03:25:10,578 - #20 {
INFO  03:25:10,578 - #37 return
INFO  03:25:10,578 - #8 a
INFO  03:25:10,578 - #27 ;
INFO  03:25:10,578 - #21 }
INFO  03:25:10,578 - #32 else
INFO  03:25:10,578 - #20 {
INFO  03:25:10,578 - #37 return
INFO  03:25:10,579 - #8 b
INFO  03:25:10,579 - #27 ;
INFO  03:25:10,579 - #21 }
INFO  03:25:10,579 - #21 }
INFO  03:25:10,579 - #6 void
INFO  03:25:10,579 - #8 main
INFO  03:25:10,579 - #29 (
INFO  03:25:10,579 - #30 )
INFO  03:25:10,579 - #20 {
INFO  03:25:10,579 - #8 int
INFO  03:25:10,579 - #8 a
INFO  03:25:10,579 - #22 [
INFO  03:25:10,579 - #23 ]
INFO  03:25:10,579 - #27 ;
INFO  03:25:10,579 - #8 int
INFO  03:25:10,580 - #8 length
INFO  03:25:10,580 - #27 ;
INFO  03:25:10,580 - #8 length
INFO  03:25:10,580 - #24 =
INFO  03:25:10,580 - #8 c
INFO  03:25:10,580 - #27 ;
INFO  03:25:10,580 - #8 test
INFO  03:25:10,580 - #29 (
INFO  03:25:10,580 - #30 )
INFO  03:25:10,580 - #27 ;
INFO  03:25:10,580 - #31 if
INFO  03:25:10,580 - #29 (
INFO  03:25:10,580 - #8 length
INFO  03:25:10,581 - #38 >
INFO  03:25:10,581 - #9 0
INFO  03:25:10,581 - #13 &&
INFO  03:25:10,581 - #8 length
INFO  03:25:10,581 - #42 <=
INFO  03:25:10,581 - #8 d
INFO  03:25:10,582 - #30 )
INFO  03:25:10,582 - #8 a
INFO  03:25:10,582 - #24 =
INFO  03:25:10,582 - #7 new
INFO  03:25:10,582 - #8 int
INFO  03:25:10,582 - #22 [
INFO  03:25:10,582 - #8 length
INFO  03:25:10,582 - #23 ]
INFO  03:25:10,582 - #27 ;
INFO  03:25:10,583 - #32 else
INFO  03:25:10,583 - #8 a
INFO  03:25:10,583 - #24 =
INFO  03:25:10,583 - #7 new
INFO  03:25:10,583 - #8 int
INFO  03:25:10,583 - #22 [
INFO  03:25:10,583 - #9 5
INFO  03:25:10,583 - #23 ]
INFO  03:25:10,583 - #27 ;
INFO  03:25:10,583 - #33 do
INFO  03:25:10,583 - #20 {
INFO  03:25:10,584 - #4 read
INFO  03:25:10,584 - #29 (
INFO  03:25:10,584 - #8 a
INFO  03:25:10,584 - #22 [
INFO  03:25:10,584 - #8 i
INFO  03:25:10,584 - #23 ]
INFO  03:25:10,584 - #30 )
INFO  03:25:10,584 - #27 ;
INFO  03:25:10,584 - #31 if
INFO  03:25:10,584 - #29 (
INFO  03:25:10,585 - #8 a
INFO  03:25:10,585 - #22 [
INFO  03:25:10,585 - #8 i
INFO  03:25:10,585 - #23 ]
INFO  03:25:10,585 - #19 %
INFO  03:25:10,585 - #9 3
INFO  03:25:10,586 - #39 ==
INFO  03:25:10,586 - #9 0
INFO  03:25:10,587 - #30 )
INFO  03:25:10,587 - #3 print
INFO  03:25:10,587 - #29 (
INFO  03:25:10,587 - #8 a
INFO  03:25:10,587 - #22 [
INFO  03:25:10,587 - #8 i
INFO  03:25:10,587 - #23 ]
INFO  03:25:10,587 - #30 )
INFO  03:25:10,587 - #27 ;
INFO  03:25:10,587 - #32 else
INFO  03:25:10,587 - #3 print
INFO  03:25:10,587 - #29 (
INFO  03:25:10,588 - #8 max
INFO  03:25:10,588 - #29 (
INFO  03:25:10,588 - #8 a
INFO  03:25:10,588 - #22 [
INFO  03:25:10,588 - #8 i
INFO  03:25:10,588 - #23 ]
INFO  03:25:10,588 - #28 ,
INFO  03:25:10,588 - #9 0
INFO  03:25:10,588 - #30 )
INFO  03:25:10,588 - #30 )
INFO  03:25:10,589 - #27 ;
INFO  03:25:10,589 - #21 }
INFO  03:25:10,589 - #34 while
INFO  03:25:10,589 - #29 (
INFO  03:25:10,589 - #8 i
INFO  03:25:10,589 - #42 <=
INFO  03:25:10,589 - #8 length
INFO  03:25:10,589 - #16 -
INFO  03:25:10,589 - #9 1
INFO  03:25:10,589 - #30 )
INFO  03:25:10,589 - #27 ;
INFO  03:25:10,589 - #3 print
INFO  03:25:10,589 - #29 (
INFO  03:25:10,589 - #8 d
INFO  03:25:10,589 - #30 )
INFO  03:25:10,589 - #27 ;
INFO  03:25:10,590 - #21 }
INFO  03:25:10,590 - #21 }
INFO  03:26:04,831 - #2 program
INFO  03:26:04,832 - #8 Program
INFO  03:26:04,832 - #20 {
INFO  03:26:04,832 - #5 const
INFO  03:26:04,832 - #8 int
INFO  03:26:04,832 - #8 c
INFO  03:26:04,833 - #24 =
INFO  03:26:04,833 - #9 10
INFO  03:26:04,833 - #27 ;
INFO  03:26:04,833 - #5 const
INFO  03:26:04,834 - #8 int
INFO  03:26:04,834 - #8 d
INFO  03:26:04,834 - #24 =
INFO  03:26:04,834 - #9 99
INFO  03:26:04,834 - #28 ,
INFO  03:26:04,834 - #8 eps
INFO  03:26:04,834 - #24 =
INFO  03:26:04,834 - #9 2
INFO  03:26:04,834 - #27 ;
INFO  03:26:04,835 - #8 int
INFO  03:26:04,835 - #27 ;
ERROR 03:26:04,835 - Sintaksna greska na liniji 4, koloni 8 za simbol ";"!
INFO  03:26:04,835 - #6 void
INFO  03:26:04,835 - #8 test
INFO  03:26:04,836 - #29 (
ERROR 03:26:04,836 - Sintaksna greska - neispravna definicija promenljive na liniji 4, koloni 8 za simbol ";"!
INFO  03:26:04,837 - #30 )
INFO  03:26:04,837 - #20 {
INFO  03:26:04,837 - #8 int
INFO  03:26:04,837 - #8 a
INFO  03:26:04,837 - #28 ,
INFO  03:26:04,838 - #8 b
INFO  03:26:04,838 - #27 ;
INFO  03:26:04,838 - #8 bool
INFO  03:26:04,838 - #8 cond
INFO  03:26:04,838 - #27 ;
INFO  03:26:04,838 - #8 a
INFO  03:26:04,839 - #24 =
INFO  03:26:04,839 - #9 3
INFO  03:26:04,839 - #27 ;
INFO  03:26:04,840 - #8 b
INFO  03:26:04,840 - #24 =
INFO  03:26:04,840 - #9 5
INFO  03:26:04,840 - #27 ;
INFO  03:26:04,840 - #8 cond
INFO  03:26:04,841 - #24 =
INFO  03:26:04,841 - #11 true
INFO  03:26:04,841 - #27 ;
INFO  03:26:04,842 - #31 if
INFO  03:26:04,842 - #29 (
INFO  03:26:04,842 - #9 2
INFO  03:26:04,842 - #17 *
INFO  03:26:04,843 - #29 (
INFO  03:26:04,844 - #8 a
INFO  03:26:04,844 - #16 -
INFO  03:26:04,844 - #8 b
INFO  03:26:04,845 - #16 -
INFO  03:26:04,845 - #9 1
INFO  03:26:04,846 - #30 )
INFO  03:26:04,846 - #16 -
INFO  03:26:04,846 - #9 14
INFO  03:26:04,846 - #38 >
INFO  03:26:04,846 - #9 0
INFO  03:26:04,848 - #14 ||
INFO  03:26:04,848 - #8 cond
INFO  03:26:04,848 - #30 )
INFO  03:26:04,849 - #3 print
INFO  03:26:04,849 - #29 (
INFO  03:26:04,849 - #8 a
INFO  03:26:04,849 - #15 +
INFO  03:26:04,849 - #8 b
INFO  03:26:04,850 - #30 )
INFO  03:26:04,850 - #27 ;
INFO  03:26:04,850 - #21 }
INFO  03:26:04,851 - #8 int
INFO  03:26:04,851 - #8 max
INFO  03:26:04,851 - #29 (
INFO  03:26:04,854 - #8 int
INFO  03:26:04,854 - #8 a
INFO  03:26:04,854 - #28 ,
INFO  03:26:04,854 - #8 int
INFO  03:26:04,854 - #8 b
INFO  03:26:04,854 - #30 )
INFO  03:26:04,854 - #20 {
INFO  03:26:04,855 - #31 if
INFO  03:26:04,855 - #29 (
INFO  03:26:04,855 - #8 a
INFO  03:26:04,855 - #38 >
INFO  03:26:04,855 - #8 b
INFO  03:26:04,855 - #30 )
INFO  03:26:04,855 - #20 {
INFO  03:26:04,855 - #37 return
INFO  03:26:04,855 - #8 a
INFO  03:26:04,855 - #27 ;
INFO  03:26:04,855 - #21 }
INFO  03:26:04,856 - #32 else
INFO  03:26:04,856 - #37 return
INFO  03:26:04,856 - #8 b
INFO  03:26:04,856 - #27 ;
INFO  03:26:04,856 - #21 }
INFO  03:26:04,856 - #8 int
INFO  03:26:04,857 - #8 min
INFO  03:26:04,857 - #29 (
INFO  03:26:04,857 - #8 int
INFO  03:26:04,857 - #8 a
INFO  03:26:04,857 - #28 ,
INFO  03:26:04,857 - #8 int
INFO  03:26:04,857 - #8 b
INFO  03:26:04,857 - #30 )
INFO  03:26:04,857 - #20 {
INFO  03:26:04,857 - #31 if
INFO  03:26:04,857 - #29 (
INFO  03:26:04,857 - #8 a
INFO  03:26:04,858 - #40 <
INFO  03:26:04,858 - #8 b
INFO  03:26:04,859 - #30 )
INFO  03:26:04,859 - #20 {
INFO  03:26:04,859 - #37 return
INFO  03:26:04,859 - #8 a
INFO  03:26:04,859 - #27 ;
INFO  03:26:04,859 - #21 }
INFO  03:26:04,859 - #32 else
INFO  03:26:04,859 - #20 {
INFO  03:26:04,859 - #37 return
INFO  03:26:04,859 - #8 b
INFO  03:26:04,859 - #27 ;
INFO  03:26:04,860 - #21 }
INFO  03:26:04,860 - #21 }
INFO  03:26:04,860 - #6 void
INFO  03:26:04,860 - #8 main
INFO  03:26:04,860 - #29 (
INFO  03:26:04,860 - #30 )
INFO  03:26:04,860 - #20 {
INFO  03:26:04,860 - #8 int
INFO  03:26:04,860 - #8 a
INFO  03:26:04,860 - #22 [
INFO  03:26:04,860 - #23 ]
INFO  03:26:04,860 - #27 ;
INFO  03:26:04,861 - #8 int
INFO  03:26:04,861 - #8 length
INFO  03:26:04,861 - #27 ;
INFO  03:26:04,861 - #8 length
INFO  03:26:04,861 - #24 =
INFO  03:26:04,861 - #8 c
INFO  03:26:04,861 - #27 ;
INFO  03:26:04,861 - #8 test
INFO  03:26:04,861 - #29 (
INFO  03:26:04,861 - #30 )
INFO  03:26:04,861 - #27 ;
INFO  03:26:04,861 - #31 if
INFO  03:26:04,861 - #29 (
INFO  03:26:04,861 - #8 length
INFO  03:26:04,861 - #38 >
INFO  03:26:04,862 - #9 0
INFO  03:26:04,862 - #13 &&
INFO  03:26:04,862 - #8 length
INFO  03:26:04,862 - #42 <=
INFO  03:26:04,862 - #8 d
INFO  03:26:04,862 - #30 )
INFO  03:26:04,863 - #8 a
INFO  03:26:04,863 - #24 =
INFO  03:26:04,863 - #7 new
INFO  03:26:04,863 - #8 int
INFO  03:26:04,863 - #22 [
INFO  03:26:04,863 - #8 length
INFO  03:26:04,863 - #23 ]
INFO  03:26:04,863 - #27 ;
INFO  03:26:04,863 - #32 else
INFO  03:26:04,863 - #8 a
INFO  03:26:04,863 - #24 =
INFO  03:26:04,863 - #7 new
INFO  03:26:04,863 - #8 int
INFO  03:26:04,864 - #22 [
INFO  03:26:04,864 - #9 5
INFO  03:26:04,864 - #23 ]
INFO  03:26:04,864 - #27 ;
INFO  03:26:04,864 - #33 do
INFO  03:26:04,864 - #20 {
INFO  03:26:04,864 - #4 read
INFO  03:26:04,864 - #29 (
INFO  03:26:04,864 - #8 a
INFO  03:26:04,864 - #22 [
INFO  03:26:04,864 - #8 i
INFO  03:26:04,864 - #23 ]
INFO  03:26:04,864 - #30 )
INFO  03:26:04,864 - #27 ;
INFO  03:26:04,865 - #31 if
INFO  03:26:04,865 - #29 (
INFO  03:26:04,865 - #8 a
INFO  03:26:04,865 - #22 [
INFO  03:26:04,865 - #8 i
INFO  03:26:04,865 - #23 ]
INFO  03:26:04,865 - #19 %
INFO  03:26:04,865 - #9 3
INFO  03:26:04,866 - #39 ==
INFO  03:26:04,866 - #9 0
INFO  03:26:04,866 - #30 )
INFO  03:26:04,867 - #3 print
INFO  03:26:04,867 - #29 (
INFO  03:26:04,867 - #8 a
INFO  03:26:04,867 - #22 [
INFO  03:26:04,867 - #8 i
INFO  03:26:04,867 - #23 ]
INFO  03:26:04,867 - #30 )
INFO  03:26:04,867 - #27 ;
INFO  03:26:04,867 - #32 else
INFO  03:26:04,867 - #3 print
INFO  03:26:04,867 - #29 (
INFO  03:26:04,867 - #8 max
INFO  03:26:04,867 - #29 (
INFO  03:26:04,867 - #8 a
INFO  03:26:04,867 - #22 [
INFO  03:26:04,868 - #8 i
INFO  03:26:04,868 - #23 ]
INFO  03:26:04,868 - #28 ,
INFO  03:26:04,868 - #9 0
INFO  03:26:04,868 - #30 )
INFO  03:26:04,868 - #30 )
INFO  03:26:04,868 - #27 ;
INFO  03:26:04,868 - #21 }
INFO  03:26:04,868 - #34 while
INFO  03:26:04,868 - #29 (
INFO  03:26:04,868 - #8 i
INFO  03:26:04,868 - #42 <=
INFO  03:26:04,869 - #8 length
INFO  03:26:04,869 - #16 -
INFO  03:26:04,869 - #9 1
INFO  03:26:04,869 - #30 )
INFO  03:26:04,869 - #27 ;
INFO  03:26:04,869 - #3 print
INFO  03:26:04,869 - #29 (
INFO  03:26:04,869 - #8 d
INFO  03:26:04,869 - #30 )
INFO  03:26:04,869 - #27 ;
INFO  03:26:04,869 - #21 }
INFO  03:26:04,869 - #21 }
INFO  03:27:49,867 - #2 program
INFO  03:27:49,868 - #8 Program
INFO  03:27:49,868 - #20 {
INFO  03:27:49,869 - #5 const
INFO  03:27:49,869 - #8 int
INFO  03:27:49,869 - #8 c
INFO  03:27:49,869 - #24 =
INFO  03:27:49,869 - #9 10
INFO  03:27:49,869 - #27 ;
INFO  03:27:49,870 - #5 const
INFO  03:27:49,870 - #8 int
INFO  03:27:49,870 - #8 d
INFO  03:27:49,871 - #24 =
INFO  03:27:49,871 - #9 99
INFO  03:27:49,871 - #28 ,
INFO  03:27:49,871 - #8 eps
INFO  03:27:49,871 - #24 =
INFO  03:27:49,871 - #9 2
INFO  03:27:49,871 - #27 ;
INFO  03:27:49,872 - #8 int
INFO  03:27:49,872 - #8 e
INFO  03:27:49,872 - #27 ;
INFO  03:27:49,872 - #6 void
INFO  03:27:49,873 - #8 test
INFO  03:27:49,873 - #29 (
INFO  03:27:49,873 - #30 )
INFO  03:27:49,873 - #20 {
INFO  03:27:49,873 - #8 int
INFO  03:27:49,873 - #8 a
INFO  03:27:49,874 - #28 ,
INFO  03:27:49,874 - #8 b
INFO  03:27:49,874 - #27 ;
INFO  03:27:49,874 - #8 bool
INFO  03:27:49,874 - #8 cond
INFO  03:27:49,874 - #27 ;
INFO  03:27:49,875 - #8 a
INFO  03:27:49,875 - #24 =
INFO  03:27:49,875 - #9 3
INFO  03:27:49,875 - #27 ;
INFO  03:27:49,876 - #8 b
INFO  03:27:49,876 - #24 =
INFO  03:27:49,876 - #27 ;
ERROR 03:27:49,876 - Sintaksna greska na liniji 9, koloni 7 za simbol ";"!
INFO  03:27:49,877 - #8 cond
INFO  03:27:49,877 - #24 =
INFO  03:27:49,877 - #11 true
ERROR 03:27:49,878 - Sintaksna greska - neispravna dodela vrednosti na liniji 9, koloni 7 za simbol ";"!
INFO  03:27:49,879 - #27 ;
INFO  03:27:49,880 - #31 if
INFO  03:27:49,881 - #29 (
INFO  03:27:49,881 - #9 2
INFO  03:27:49,881 - #17 *
INFO  03:27:49,881 - #29 (
INFO  03:27:49,883 - #8 a
INFO  03:27:49,883 - #16 -
INFO  03:27:49,883 - #8 b
INFO  03:27:49,885 - #16 -
INFO  03:27:49,885 - #9 1
INFO  03:27:49,885 - #30 )
INFO  03:27:49,885 - #16 -
INFO  03:27:49,886 - #9 14
INFO  03:27:49,886 - #38 >
INFO  03:27:49,887 - #9 0
INFO  03:27:49,888 - #14 ||
INFO  03:27:49,889 - #8 cond
INFO  03:27:49,889 - #30 )
INFO  03:27:49,889 - #3 print
INFO  03:27:49,890 - #29 (
INFO  03:27:49,890 - #8 a
INFO  03:27:49,890 - #15 +
INFO  03:27:49,890 - #8 b
INFO  03:27:49,891 - #30 )
INFO  03:27:49,891 - #27 ;
INFO  03:27:49,891 - #21 }
INFO  03:27:49,892 - #8 int
INFO  03:27:49,892 - #8 max
INFO  03:27:49,892 - #29 (
INFO  03:27:49,895 - #8 int
INFO  03:27:49,895 - #8 a
INFO  03:27:49,895 - #28 ,
INFO  03:27:49,896 - #8 int
INFO  03:27:49,896 - #8 b
INFO  03:27:49,896 - #30 )
INFO  03:27:49,896 - #20 {
INFO  03:27:49,896 - #31 if
INFO  03:27:49,896 - #29 (
INFO  03:27:49,897 - #8 a
INFO  03:27:49,897 - #38 >
INFO  03:27:49,897 - #8 b
INFO  03:27:49,897 - #30 )
INFO  03:27:49,897 - #20 {
INFO  03:27:49,897 - #37 return
INFO  03:27:49,897 - #8 a
INFO  03:27:49,897 - #27 ;
INFO  03:27:49,897 - #21 }
INFO  03:27:49,898 - #32 else
INFO  03:27:49,898 - #37 return
INFO  03:27:49,898 - #8 b
INFO  03:27:49,898 - #27 ;
INFO  03:27:49,898 - #21 }
INFO  03:27:49,899 - #8 int
INFO  03:27:49,899 - #8 min
INFO  03:27:49,899 - #29 (
INFO  03:27:49,899 - #8 int
INFO  03:27:49,899 - #8 a
INFO  03:27:49,899 - #28 ,
INFO  03:27:49,899 - #8 int
INFO  03:27:49,899 - #8 b
INFO  03:27:49,899 - #30 )
INFO  03:27:49,900 - #20 {
INFO  03:27:49,900 - #31 if
INFO  03:27:49,900 - #29 (
INFO  03:27:49,900 - #8 a
INFO  03:27:49,900 - #40 <
INFO  03:27:49,900 - #8 b
INFO  03:27:49,901 - #30 )
INFO  03:27:49,901 - #20 {
INFO  03:27:49,901 - #37 return
INFO  03:27:49,901 - #8 a
INFO  03:27:49,901 - #27 ;
INFO  03:27:49,901 - #21 }
INFO  03:27:49,901 - #32 else
INFO  03:27:49,901 - #20 {
INFO  03:27:49,901 - #37 return
INFO  03:27:49,901 - #8 b
INFO  03:27:49,902 - #27 ;
INFO  03:27:49,902 - #21 }
INFO  03:27:49,902 - #21 }
INFO  03:27:49,902 - #6 void
INFO  03:27:49,902 - #8 main
INFO  03:27:49,902 - #29 (
INFO  03:27:49,902 - #30 )
INFO  03:27:49,902 - #20 {
INFO  03:27:49,902 - #8 int
INFO  03:27:49,902 - #8 a
INFO  03:27:49,902 - #22 [
INFO  03:27:49,902 - #23 ]
INFO  03:27:49,903 - #27 ;
INFO  03:27:49,903 - #8 int
INFO  03:27:49,903 - #8 length
INFO  03:27:49,903 - #27 ;
INFO  03:27:49,903 - #8 length
INFO  03:27:49,903 - #24 =
INFO  03:27:49,903 - #8 c
INFO  03:27:49,903 - #27 ;
INFO  03:27:49,903 - #8 test
INFO  03:27:49,903 - #29 (
INFO  03:27:49,903 - #30 )
INFO  03:27:49,903 - #27 ;
INFO  03:27:49,904 - #31 if
INFO  03:27:49,904 - #29 (
INFO  03:27:49,904 - #8 length
INFO  03:27:49,904 - #38 >
INFO  03:27:49,904 - #9 0
INFO  03:27:49,904 - #13 &&
INFO  03:27:49,904 - #8 length
INFO  03:27:49,904 - #42 <=
INFO  03:27:49,905 - #8 d
INFO  03:27:49,906 - #30 )
INFO  03:27:49,906 - #8 a
INFO  03:27:49,906 - #24 =
INFO  03:27:49,906 - #7 new
INFO  03:27:49,906 - #8 int
INFO  03:27:49,906 - #22 [
INFO  03:27:49,906 - #8 length
INFO  03:27:49,907 - #23 ]
INFO  03:27:49,907 - #27 ;
INFO  03:27:49,907 - #32 else
INFO  03:27:49,907 - #8 a
INFO  03:27:49,907 - #24 =
INFO  03:27:49,907 - #7 new
INFO  03:27:49,907 - #8 int
INFO  03:27:49,907 - #22 [
INFO  03:27:49,907 - #9 5
INFO  03:27:49,907 - #23 ]
INFO  03:27:49,907 - #27 ;
INFO  03:27:49,908 - #33 do
INFO  03:27:49,908 - #20 {
INFO  03:27:49,908 - #4 read
INFO  03:27:49,908 - #29 (
INFO  03:27:49,908 - #8 a
INFO  03:27:49,908 - #22 [
INFO  03:27:49,908 - #8 i
INFO  03:27:49,908 - #23 ]
INFO  03:27:49,908 - #30 )
INFO  03:27:49,908 - #27 ;
INFO  03:27:49,909 - #31 if
INFO  03:27:49,909 - #29 (
INFO  03:27:49,909 - #8 a
INFO  03:27:49,909 - #22 [
INFO  03:27:49,909 - #8 i
INFO  03:27:49,909 - #23 ]
INFO  03:27:49,909 - #19 %
INFO  03:27:49,909 - #9 3
INFO  03:27:49,910 - #39 ==
INFO  03:27:49,910 - #9 0
INFO  03:27:49,911 - #30 )
INFO  03:27:49,911 - #3 print
INFO  03:27:49,911 - #29 (
INFO  03:27:49,911 - #8 a
INFO  03:27:49,911 - #22 [
INFO  03:27:49,911 - #8 i
INFO  03:27:49,912 - #23 ]
INFO  03:27:49,912 - #30 )
INFO  03:27:49,912 - #27 ;
INFO  03:27:49,912 - #32 else
INFO  03:27:49,912 - #3 print
INFO  03:27:49,912 - #29 (
INFO  03:27:49,912 - #8 max
INFO  03:27:49,912 - #29 (
INFO  03:27:49,912 - #8 a
INFO  03:27:49,912 - #22 [
INFO  03:27:49,912 - #8 i
INFO  03:27:49,912 - #23 ]
INFO  03:27:49,912 - #28 ,
INFO  03:27:49,913 - #9 0
INFO  03:27:49,913 - #30 )
INFO  03:27:49,913 - #30 )
INFO  03:27:49,913 - #27 ;
INFO  03:27:49,913 - #21 }
INFO  03:27:49,913 - #34 while
INFO  03:27:49,913 - #29 (
INFO  03:27:49,913 - #8 i
INFO  03:27:49,913 - #42 <=
INFO  03:27:49,914 - #8 length
INFO  03:27:49,914 - #16 -
INFO  03:27:49,914 - #9 1
INFO  03:27:49,914 - #30 )
INFO  03:27:49,914 - #27 ;
INFO  03:27:49,914 - #3 print
INFO  03:27:49,914 - #29 (
INFO  03:27:49,914 - #8 d
INFO  03:27:49,914 - #30 )
INFO  03:27:49,914 - #27 ;
INFO  03:27:49,914 - #21 }
INFO  03:27:49,914 - #21 }
INFO  04:04:15,104 - #2 program
INFO  04:04:15,104 - #8 Program
INFO  04:04:15,105 - #20 {
INFO  04:04:15,105 - #5 const
INFO  04:04:15,105 - #8 int
INFO  04:04:15,105 - #8 c
INFO  04:04:15,105 - #24 =
INFO  04:04:15,105 - #9 10
INFO  04:04:15,105 - #27 ;
INFO  04:04:15,106 - #5 const
INFO  04:04:15,106 - #8 int
INFO  04:04:15,107 - #8 d
INFO  04:04:15,107 - #24 =
INFO  04:04:15,107 - #9 99
INFO  04:04:15,107 - #28 ,
INFO  04:04:15,107 - #8 eps
INFO  04:04:15,107 - #24 =
INFO  04:04:15,107 - #9 2
INFO  04:04:15,107 - #27 ;
INFO  04:04:15,108 - #8 int
INFO  04:04:15,108 - #8 e
INFO  04:04:15,108 - #27 ;
INFO  04:04:15,108 - #6 void
INFO  04:04:15,108 - #8 test
INFO  04:04:15,108 - #29 (
INFO  04:04:15,108 - #30 )
INFO  04:04:15,109 - #20 {
INFO  04:04:15,109 - #8 int
INFO  04:04:15,109 - #8 a
INFO  04:04:15,109 - #28 ,
INFO  04:04:15,109 - #8 b
INFO  04:04:15,109 - #27 ;
INFO  04:04:15,109 - #8 bool
INFO  04:04:15,110 - #8 cond
INFO  04:04:15,110 - #27 ;
INFO  04:04:15,110 - #8 a
INFO  04:04:15,110 - #24 =
INFO  04:04:15,110 - #9 3
INFO  04:04:15,110 - #27 ;
INFO  04:04:15,111 - #8 b
INFO  04:04:15,111 - #24 =
INFO  04:04:15,111 - #27 ;
ERROR 04:04:15,112 - Sintaksna greska na liniji 9, koloni 7 za simbol ";"!
INFO  04:04:15,112 - #8 cond
INFO  04:04:15,112 - #24 =
INFO  04:04:15,112 - #11 true
INFO  04:06:41,570 - #2 program
INFO  04:06:41,571 - #8 Program
INFO  04:06:41,571 - #20 {
INFO  04:06:41,571 - #5 const
INFO  04:06:41,571 - #8 int
INFO  04:06:41,571 - #8 c
INFO  04:06:41,571 - #24 =
INFO  04:06:41,571 - #9 10
INFO  04:06:41,571 - #27 ;
INFO  04:06:41,572 - #5 const
INFO  04:06:41,572 - #8 int
INFO  04:06:41,572 - #8 d
INFO  04:06:41,572 - #24 =
INFO  04:06:41,572 - #9 99
INFO  04:06:41,572 - #28 ,
INFO  04:06:41,573 - #8 eps
INFO  04:06:41,573 - #24 =
INFO  04:06:41,573 - #9 2
INFO  04:06:41,573 - #27 ;
INFO  04:06:41,573 - #8 int
INFO  04:06:41,573 - #8 e
INFO  04:06:41,573 - #27 ;
INFO  04:06:41,574 - #6 void
INFO  04:06:41,574 - #8 test
INFO  04:06:41,574 - #29 (
INFO  04:06:41,574 - #30 )
INFO  04:06:41,574 - #20 {
INFO  04:06:41,574 - #8 int
INFO  04:06:41,574 - #8 a
INFO  04:06:41,574 - #28 ,
INFO  04:06:41,574 - #8 b
INFO  04:06:41,575 - #27 ;
INFO  04:06:41,575 - #8 bool
INFO  04:06:41,575 - #8 cond
INFO  04:06:41,575 - #27 ;
INFO  04:06:41,575 - #8 a
INFO  04:06:41,575 - #24 =
INFO  04:06:41,576 - #9 3
INFO  04:06:41,576 - #27 ;
INFO  04:06:41,576 - #8 b
INFO  04:06:41,576 - #24 =
INFO  04:06:41,577 - #9 5
INFO  04:06:41,577 - #27 ;
INFO  04:06:41,577 - #8 cond
INFO  04:06:41,577 - #24 =
INFO  04:06:41,577 - #11 true
INFO  04:06:41,577 - #27 ;
INFO  04:06:41,578 - #31 if
INFO  04:06:41,579 - #29 (
INFO  04:06:41,579 - #9 2
INFO  04:06:41,579 - #17 *
INFO  04:06:41,579 - #29 (
INFO  04:06:41,580 - #8 a
INFO  04:06:41,580 - #16 -
INFO  04:06:41,581 - #8 b
INFO  04:06:41,582 - #16 -
INFO  04:06:41,582 - #9 1
INFO  04:06:41,582 - #30 )
INFO  04:06:41,583 - #16 -
INFO  04:06:41,583 - #9 14
INFO  04:06:41,583 - #38 >
INFO  04:06:41,583 - #9 0
INFO  04:06:41,585 - #14 ||
INFO  04:06:41,585 - #8 cond
INFO  04:06:41,585 - #30 )
INFO  04:06:41,586 - #3 print
INFO  04:06:41,586 - #29 (
INFO  04:06:41,586 - #8 a
INFO  04:06:41,586 - #15 +
INFO  04:06:41,586 - #8 b
INFO  04:06:41,587 - #30 )
INFO  04:06:41,587 - #27 ;
INFO  04:06:41,587 - #21 }
INFO  04:06:41,587 - #8 int
INFO  04:06:41,588 - #8 max
INFO  04:06:41,588 - #29 (
INFO  04:06:41,588 - #8 int
INFO  04:06:41,590 - #8 a
INFO  04:06:41,590 - #28 ,
INFO  04:06:41,591 - #8 int
INFO  04:06:41,591 - #8 b
INFO  04:06:41,591 - #30 )
INFO  04:06:41,591 - #20 {
INFO  04:06:41,591 - #31 if
INFO  04:06:41,591 - #29 (
INFO  04:06:41,591 - #8 a
INFO  04:06:41,591 - #38 >
INFO  04:06:41,591 - #8 b
INFO  04:06:41,591 - #30 )
INFO  04:06:41,591 - #20 {
INFO  04:06:41,592 - #37 return
INFO  04:06:41,592 - #8 a
INFO  04:06:41,592 - #27 ;
INFO  04:06:41,592 - #21 }
INFO  04:06:41,592 - #32 else
INFO  04:06:41,592 - #37 return
INFO  04:06:41,592 - #8 b
INFO  04:06:41,592 - #27 ;
INFO  04:06:41,592 - #21 }
INFO  04:06:41,593 - #8 int
INFO  04:06:41,593 - #8 min
INFO  04:06:41,593 - #29 (
INFO  04:06:41,593 - #8 int
INFO  04:06:41,593 - #8 a
INFO  04:06:41,593 - #28 ,
INFO  04:06:41,593 - #8 int
INFO  04:06:41,593 - #8 b
INFO  04:06:41,593 - #30 )
INFO  04:06:41,593 - #20 {
INFO  04:06:41,594 - #31 if
INFO  04:06:41,594 - #29 (
INFO  04:06:41,594 - #8 a
INFO  04:06:41,594 - #40 <
INFO  04:06:41,594 - #8 b
INFO  04:06:41,595 - #30 )
INFO  04:06:41,595 - #20 {
INFO  04:06:41,595 - #37 return
INFO  04:06:41,595 - #8 a
INFO  04:06:41,595 - #27 ;
INFO  04:06:41,595 - #21 }
INFO  04:06:41,595 - #32 else
INFO  04:06:41,595 - #20 {
INFO  04:06:41,595 - #37 return
INFO  04:06:41,595 - #8 b
INFO  04:06:41,596 - #27 ;
INFO  04:06:41,596 - #21 }
INFO  04:06:41,596 - #21 }
INFO  04:06:41,596 - #6 void
INFO  04:06:41,596 - #8 main
INFO  04:06:41,596 - #29 (
INFO  04:06:41,596 - #30 )
INFO  04:06:41,596 - #20 {
INFO  04:06:41,596 - #8 int
INFO  04:06:41,596 - #8 a
INFO  04:06:41,596 - #22 [
INFO  04:06:41,597 - #23 ]
INFO  04:06:41,597 - #27 ;
INFO  04:06:41,597 - #8 int
INFO  04:06:41,597 - #8 length
INFO  04:06:41,597 - #27 ;
INFO  04:06:41,597 - #8 length
INFO  04:06:41,597 - #24 =
INFO  04:06:41,597 - #8 c
INFO  04:06:41,597 - #27 ;
INFO  04:06:41,597 - #8 test
INFO  04:06:41,597 - #29 (
INFO  04:06:41,597 - #30 )
INFO  04:06:41,597 - #27 ;
INFO  04:06:41,597 - #31 if
INFO  04:06:41,598 - #29 (
INFO  04:06:41,598 - #8 length
INFO  04:06:41,598 - #38 >
INFO  04:06:41,598 - #9 0
INFO  04:06:41,598 - #13 &&
INFO  04:06:41,598 - #8 length
INFO  04:06:41,598 - #42 <=
INFO  04:06:41,598 - #8 d
INFO  04:06:41,599 - #30 )
INFO  04:06:41,599 - #8 a
INFO  04:06:41,599 - #24 =
INFO  04:06:41,599 - #7 new
INFO  04:06:41,599 - #8 int
INFO  04:06:41,599 - #22 [
INFO  04:06:41,599 - #8 length
INFO  04:06:41,599 - #23 ]
INFO  04:06:41,599 - #27 ;
INFO  04:06:41,599 - #32 else
INFO  04:06:41,600 - #8 a
INFO  04:06:41,600 - #24 =
INFO  04:06:41,600 - #7 new
INFO  04:06:41,600 - #8 int
INFO  04:06:41,600 - #22 [
INFO  04:06:41,600 - #9 5
INFO  04:06:41,600 - #23 ]
INFO  04:06:41,600 - #27 ;
INFO  04:06:41,600 - #33 do
INFO  04:06:41,600 - #20 {
INFO  04:06:41,600 - #4 read
INFO  04:06:41,600 - #29 (
INFO  04:06:41,600 - #8 a
INFO  04:06:41,600 - #22 [
INFO  04:06:41,600 - #8 i
INFO  04:06:41,600 - #23 ]
INFO  04:06:41,600 - #30 )
INFO  04:06:41,601 - #27 ;
INFO  04:06:41,601 - #31 if
INFO  04:06:41,601 - #29 (
INFO  04:06:41,601 - #8 a
INFO  04:06:41,601 - #22 [
INFO  04:06:41,601 - #8 i
INFO  04:06:41,601 - #23 ]
INFO  04:06:41,601 - #19 %
INFO  04:06:41,601 - #9 3
INFO  04:06:41,602 - #39 ==
INFO  04:06:41,602 - #9 0
INFO  04:06:41,602 - #30 )
INFO  04:06:41,602 - #3 print
INFO  04:06:41,603 - #29 (
INFO  04:06:41,603 - #8 a
INFO  04:06:41,603 - #22 [
INFO  04:06:41,603 - #8 i
INFO  04:06:41,603 - #23 ]
INFO  04:06:41,603 - #30 )
INFO  04:06:41,603 - #27 ;
INFO  04:06:41,603 - #32 else
INFO  04:06:41,603 - #3 print
INFO  04:06:41,603 - #29 (
INFO  04:06:41,603 - #8 max
INFO  04:06:41,603 - #29 (
INFO  04:06:41,603 - #8 a
INFO  04:06:41,603 - #22 [
INFO  04:06:41,603 - #8 i
INFO  04:06:41,603 - #23 ]
INFO  04:06:41,604 - #28 ,
INFO  04:06:41,604 - #9 0
INFO  04:06:41,604 - #30 )
INFO  04:06:41,604 - #30 )
INFO  04:06:41,604 - #27 ;
INFO  04:06:41,604 - #21 }
INFO  04:06:41,604 - #34 while
INFO  04:06:41,604 - #29 (
INFO  04:06:41,604 - #8 i
INFO  04:06:41,604 - #42 <=
INFO  04:06:41,604 - #8 length
INFO  04:06:41,605 - #16 -
INFO  04:06:41,605 - #9 1
INFO  04:06:41,605 - #30 )
INFO  04:06:41,605 - #27 ;
INFO  04:06:41,605 - #3 print
INFO  04:06:41,605 - #29 (
INFO  04:06:41,605 - #8 d
INFO  04:06:41,605 - #30 )
INFO  04:06:41,605 - #27 ;
INFO  04:06:41,605 - #21 }
INFO  04:06:41,605 - #21 }
INFO  04:07:17,470 - #2 program
INFO  04:07:17,470 - #8 Program
INFO  04:07:17,470 - #20 {
INFO  04:07:17,470 - #5 const
INFO  04:07:17,470 - #8 int
INFO  04:07:17,471 - #8 c
INFO  04:07:17,471 - #24 =
INFO  04:07:17,471 - #9 10
INFO  04:07:17,471 - #27 ;
INFO  04:07:17,471 - #5 const
INFO  04:07:17,472 - #8 int
INFO  04:07:17,472 - #8 d
INFO  04:07:17,472 - #24 =
INFO  04:07:17,472 - #9 99
INFO  04:07:17,472 - #28 ,
INFO  04:07:17,472 - #8 eps
INFO  04:07:17,472 - #24 =
INFO  04:07:17,472 - #9 2
INFO  04:07:17,473 - #27 ;
INFO  04:07:17,473 - #8 int
INFO  04:07:17,473 - #8 e
INFO  04:07:17,473 - #27 ;
INFO  04:07:17,473 - #6 void
INFO  04:07:17,473 - #8 test
INFO  04:07:17,474 - #29 (
INFO  04:07:17,474 - #30 )
INFO  04:07:17,474 - #20 {
INFO  04:07:17,474 - #8 int
INFO  04:07:17,474 - #8 a
INFO  04:07:17,474 - #28 ,
INFO  04:07:17,474 - #8 b
INFO  04:07:17,474 - #27 ;
INFO  04:07:17,474 - #8 bool
INFO  04:07:17,475 - #8 cond
INFO  04:07:17,475 - #27 ;
INFO  04:07:17,475 - #8 a
INFO  04:07:17,475 - #24 =
INFO  04:07:17,475 - #9 3
INFO  04:07:17,475 - #27 ;
INFO  04:07:17,476 - #8 b
INFO  04:07:17,476 - #24 =
INFO  04:07:17,476 - #9 5
INFO  04:07:17,476 - #27 ;
INFO  04:07:17,476 - #8 cond
INFO  04:07:17,477 - #24 =
INFO  04:07:17,477 - #11 true
INFO  04:07:17,477 - #27 ;
INFO  04:07:17,478 - #31 if
INFO  04:07:17,479 - #29 (
INFO  04:07:17,479 - #9 2
INFO  04:07:17,479 - #17 *
INFO  04:07:17,479 - #29 (
INFO  04:07:17,480 - #8 a
INFO  04:07:17,480 - #16 -
INFO  04:07:17,480 - #8 b
INFO  04:07:17,482 - #16 -
INFO  04:07:17,482 - #9 1
INFO  04:07:17,482 - #30 )
INFO  04:07:17,483 - #16 -
INFO  04:07:17,483 - #9 14
INFO  04:07:17,484 - #38 >
INFO  04:07:17,484 - #9 0
INFO  04:07:17,485 - #14 ||
INFO  04:07:17,485 - #8 cond
INFO  04:07:17,486 - #30 )
INFO  04:07:17,486 - #3 print
INFO  04:07:17,486 - #29 (
INFO  04:07:17,486 - #8 a
INFO  04:07:17,486 - #15 +
INFO  04:07:17,487 - #8 b
INFO  04:07:17,487 - #30 )
INFO  04:07:17,487 - #27 ;
INFO  04:07:17,487 - #21 }
INFO  04:07:17,488 - #8 int
INFO  04:07:17,488 - #8 max
INFO  04:07:17,488 - #29 (
INFO  04:07:17,488 - #8 int
INFO  04:07:17,491 - #8 a
INFO  04:07:17,491 - #27 ;
ERROR 04:07:17,491 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  04:07:17,491 - #8 int
INFO  04:07:17,491 - #8 b
INFO  04:07:17,491 - #30 )
INFO  04:07:17,492 - #20 {
INFO  04:07:17,492 - #31 if
INFO  04:07:17,492 - #29 (
ERROR 04:07:17,492 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  04:07:17,493 - #8 a
INFO  04:07:17,493 - #38 >
INFO  04:07:17,493 - #8 b
INFO  04:07:17,493 - #30 )
INFO  04:07:17,493 - #20 {
INFO  04:07:17,493 - #37 return
INFO  04:07:17,493 - #8 a
INFO  04:07:17,494 - #27 ;
INFO  04:07:17,494 - #21 }
INFO  04:07:17,494 - #32 else
INFO  04:07:17,494 - #37 return
INFO  04:07:17,494 - #8 b
INFO  04:07:17,494 - #27 ;
INFO  04:07:17,494 - #21 }
INFO  04:07:17,495 - #8 int
INFO  04:07:17,495 - #8 min
INFO  04:07:17,495 - #29 (
INFO  04:07:17,495 - #8 int
INFO  04:07:17,495 - #8 a
INFO  04:07:17,495 - #28 ,
INFO  04:07:17,495 - #8 int
INFO  04:07:17,495 - #8 b
INFO  04:07:17,496 - #30 )
INFO  04:07:17,496 - #20 {
INFO  04:07:17,496 - #31 if
INFO  04:07:17,496 - #29 (
INFO  04:07:17,496 - #8 a
INFO  04:07:17,496 - #40 <
INFO  04:07:17,496 - #8 b
INFO  04:07:17,497 - #30 )
INFO  04:07:17,497 - #20 {
INFO  04:07:17,497 - #37 return
INFO  04:07:17,497 - #8 a
INFO  04:07:17,497 - #27 ;
INFO  04:07:17,497 - #21 }
INFO  04:07:17,497 - #32 else
INFO  04:07:17,497 - #20 {
INFO  04:07:17,497 - #37 return
INFO  04:07:17,498 - #8 b
INFO  04:07:17,498 - #27 ;
INFO  04:07:17,498 - #21 }
INFO  04:07:17,498 - #21 }
INFO  04:07:17,498 - #6 void
INFO  04:07:17,498 - #8 main
INFO  04:07:17,498 - #29 (
INFO  04:07:17,498 - #30 )
INFO  04:07:17,498 - #20 {
INFO  04:07:17,498 - #8 int
INFO  04:07:17,498 - #8 a
INFO  04:07:17,498 - #22 [
INFO  04:07:17,498 - #23 ]
INFO  04:07:17,498 - #27 ;
INFO  04:07:17,499 - #8 int
INFO  04:07:17,499 - #8 length
INFO  04:07:17,499 - #27 ;
INFO  04:07:17,499 - #8 length
INFO  04:07:17,499 - #24 =
INFO  04:07:17,499 - #8 c
INFO  04:07:17,499 - #27 ;
INFO  04:07:17,499 - #8 test
INFO  04:07:17,499 - #29 (
INFO  04:07:17,499 - #30 )
INFO  04:07:17,499 - #27 ;
INFO  04:07:17,499 - #31 if
INFO  04:07:17,499 - #29 (
INFO  04:07:17,499 - #8 length
INFO  04:07:17,499 - #38 >
INFO  04:07:17,499 - #9 0
INFO  04:07:17,500 - #13 &&
INFO  04:07:17,500 - #8 length
INFO  04:07:17,500 - #42 <=
INFO  04:07:17,500 - #8 d
INFO  04:07:17,500 - #30 )
INFO  04:07:17,501 - #8 a
INFO  04:07:17,501 - #24 =
INFO  04:07:17,501 - #7 new
INFO  04:07:17,501 - #8 int
INFO  04:07:17,501 - #22 [
INFO  04:07:17,501 - #8 length
INFO  04:07:17,501 - #23 ]
INFO  04:07:17,501 - #27 ;
INFO  04:07:17,501 - #32 else
INFO  04:07:17,501 - #8 a
INFO  04:07:17,501 - #24 =
INFO  04:07:17,501 - #7 new
INFO  04:07:17,501 - #8 int
INFO  04:07:17,501 - #22 [
INFO  04:07:17,502 - #9 5
INFO  04:07:17,502 - #23 ]
INFO  04:07:17,502 - #27 ;
INFO  04:07:17,502 - #33 do
INFO  04:07:17,502 - #20 {
INFO  04:07:17,502 - #4 read
INFO  04:07:17,502 - #29 (
INFO  04:07:17,502 - #8 a
INFO  04:07:17,502 - #22 [
INFO  04:07:17,502 - #8 i
INFO  04:07:17,502 - #23 ]
INFO  04:07:17,502 - #30 )
INFO  04:07:17,502 - #27 ;
INFO  04:07:17,502 - #31 if
INFO  04:07:17,503 - #29 (
INFO  04:07:17,503 - #8 a
INFO  04:07:17,503 - #22 [
INFO  04:07:17,503 - #8 i
INFO  04:07:17,503 - #23 ]
INFO  04:07:17,503 - #19 %
INFO  04:07:17,503 - #9 3
INFO  04:07:17,504 - #39 ==
INFO  04:07:17,504 - #9 0
INFO  04:07:17,504 - #30 )
INFO  04:07:17,504 - #3 print
INFO  04:07:17,504 - #29 (
INFO  04:07:17,504 - #8 a
INFO  04:07:17,505 - #22 [
INFO  04:07:17,505 - #8 i
INFO  04:07:17,505 - #23 ]
INFO  04:07:17,505 - #30 )
INFO  04:07:17,505 - #27 ;
INFO  04:07:17,505 - #32 else
INFO  04:07:17,505 - #3 print
INFO  04:07:17,505 - #29 (
INFO  04:07:17,505 - #8 max
INFO  04:07:17,505 - #29 (
INFO  04:07:17,505 - #8 a
INFO  04:07:17,505 - #22 [
INFO  04:07:17,505 - #8 i
INFO  04:07:17,505 - #23 ]
INFO  04:07:17,505 - #28 ,
INFO  04:07:17,505 - #9 0
INFO  04:07:17,505 - #30 )
INFO  04:07:17,506 - #30 )
INFO  04:07:17,506 - #27 ;
INFO  04:07:17,506 - #21 }
INFO  04:07:17,506 - #34 while
INFO  04:07:17,506 - #29 (
INFO  04:07:17,506 - #8 i
INFO  04:07:17,506 - #42 <=
INFO  04:07:17,506 - #8 length
INFO  04:07:17,506 - #16 -
INFO  04:07:17,506 - #9 1
INFO  04:07:17,506 - #30 )
INFO  04:07:17,507 - #27 ;
INFO  04:07:17,507 - #3 print
INFO  04:07:17,507 - #29 (
INFO  04:07:17,507 - #8 d
INFO  04:07:17,507 - #30 )
INFO  04:07:17,507 - #27 ;
INFO  04:07:17,507 - #21 }
INFO  04:07:17,507 - #21 }
INFO  04:07:59,610 - #2 program
INFO  04:07:59,610 - #8 Program
INFO  04:07:59,610 - #20 {
INFO  04:07:59,611 - #5 const
INFO  04:07:59,611 - #8 int
INFO  04:07:59,611 - #8 c
INFO  04:07:59,611 - #24 =
INFO  04:07:59,611 - #9 10
INFO  04:07:59,611 - #27 ;
INFO  04:07:59,611 - #5 const
INFO  04:07:59,612 - #8 int
INFO  04:07:59,612 - #8 d
INFO  04:07:59,612 - #24 =
INFO  04:07:59,612 - #9 99
INFO  04:07:59,612 - #28 ,
INFO  04:07:59,612 - #8 eps
INFO  04:07:59,612 - #24 =
INFO  04:07:59,612 - #9 2
INFO  04:07:59,612 - #27 ;
INFO  04:07:59,613 - #8 int
INFO  04:07:59,613 - #8 e
INFO  04:07:59,613 - #27 ;
INFO  04:07:59,613 - #6 void
INFO  04:07:59,614 - #8 test
INFO  04:07:59,614 - #29 (
INFO  04:07:59,614 - #30 )
INFO  04:07:59,614 - #20 {
INFO  04:07:59,614 - #8 int
INFO  04:07:59,614 - #8 a
INFO  04:07:59,614 - #28 ,
INFO  04:07:59,614 - #8 b
INFO  04:07:59,614 - #27 ;
INFO  04:07:59,614 - #8 bool
INFO  04:07:59,615 - #8 cond
INFO  04:07:59,615 - #27 ;
INFO  04:07:59,615 - #8 a
INFO  04:07:59,615 - #24 =
INFO  04:07:59,615 - #9 3
INFO  04:07:59,615 - #27 ;
INFO  04:07:59,616 - #8 b
INFO  04:07:59,616 - #24 =
INFO  04:07:59,616 - #9 5
INFO  04:07:59,616 - #27 ;
INFO  04:07:59,616 - #8 cond
INFO  04:07:59,617 - #24 =
INFO  04:07:59,617 - #11 true
INFO  04:07:59,617 - #27 ;
INFO  04:07:59,618 - #31 if
INFO  04:07:59,619 - #29 (
INFO  04:07:59,619 - #9 2
INFO  04:07:59,619 - #17 *
INFO  04:07:59,619 - #29 (
INFO  04:07:59,620 - #8 a
INFO  04:07:59,620 - #16 -
INFO  04:07:59,620 - #8 b
INFO  04:07:59,622 - #16 -
INFO  04:07:59,622 - #9 1
INFO  04:07:59,622 - #30 )
INFO  04:07:59,623 - #16 -
INFO  04:07:59,623 - #9 14
INFO  04:07:59,624 - #38 >
INFO  04:07:59,624 - #9 0
INFO  04:07:59,625 - #14 ||
INFO  04:07:59,625 - #8 cond
INFO  04:07:59,625 - #30 )
INFO  04:07:59,626 - #3 print
INFO  04:07:59,626 - #29 (
INFO  04:07:59,626 - #8 a
INFO  04:07:59,626 - #15 +
INFO  04:07:59,626 - #8 b
INFO  04:07:59,627 - #30 )
INFO  04:07:59,627 - #27 ;
INFO  04:07:59,627 - #21 }
INFO  04:07:59,628 - #8 int
INFO  04:07:59,628 - #8 max
INFO  04:07:59,628 - #29 (
INFO  04:07:59,628 - #8 int
INFO  04:07:59,630 - #8 a
INFO  04:07:59,630 - #27 ;
ERROR 04:07:59,631 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  04:07:59,631 - #8 int
INFO  04:07:59,631 - #8 b
INFO  04:07:59,631 - #30 )
INFO  04:07:59,631 - #20 {
INFO  04:07:59,631 - #31 if
INFO  04:07:59,632 - #29 (
ERROR 04:07:59,632 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  04:07:59,633 - #8 a
INFO  04:07:59,633 - #38 >
INFO  04:08:54,540 - #2 program
INFO  04:08:54,541 - #8 Program
INFO  04:08:54,541 - #20 {
INFO  04:08:54,541 - #5 const
INFO  04:08:54,542 - #8 int
INFO  04:08:54,542 - #8 c
INFO  04:08:54,542 - #24 =
INFO  04:08:54,542 - #9 10
INFO  04:08:54,542 - #27 ;
INFO  04:08:54,543 - #5 const
INFO  04:08:54,543 - #8 int
INFO  04:08:54,543 - #8 d
INFO  04:08:54,543 - #24 =
INFO  04:08:54,543 - #9 99
INFO  04:08:54,543 - #28 ,
INFO  04:08:54,544 - #8 eps
INFO  04:08:54,544 - #24 =
INFO  04:08:54,544 - #9 2
INFO  04:08:54,544 - #27 ;
INFO  04:08:54,544 - #8 int
INFO  04:08:54,544 - #8 e
INFO  04:08:54,545 - #27 ;
INFO  04:08:54,545 - #6 void
INFO  04:08:54,545 - #8 test
INFO  04:08:54,545 - #29 (
INFO  04:08:54,546 - #30 )
INFO  04:08:54,546 - #20 {
INFO  04:08:54,546 - #8 int
INFO  04:08:54,546 - #8 a
INFO  04:08:54,546 - #28 ,
INFO  04:08:54,546 - #8 b
INFO  04:08:54,546 - #27 ;
INFO  04:08:54,546 - #8 bool
INFO  04:08:54,547 - #8 cond
INFO  04:08:54,547 - #27 ;
INFO  04:08:54,547 - #8 a
INFO  04:08:54,547 - #24 =
INFO  04:08:54,547 - #9 3
INFO  04:08:54,547 - #27 ;
INFO  04:08:54,548 - #8 b
INFO  04:08:54,549 - #24 =
INFO  04:08:54,549 - #9 5
INFO  04:08:54,549 - #27 ;
INFO  04:08:54,549 - #8 cond
INFO  04:08:54,549 - #24 =
INFO  04:08:54,549 - #11 true
INFO  04:08:54,549 - #27 ;
INFO  04:08:54,552 - #31 if
INFO  04:08:54,552 - #29 (
INFO  04:08:54,552 - #9 2
INFO  04:08:54,552 - #17 *
INFO  04:08:54,552 - #29 (
INFO  04:08:54,554 - #8 a
INFO  04:08:54,554 - #16 -
INFO  04:08:54,555 - #8 b
INFO  04:08:54,557 - #16 -
INFO  04:08:54,558 - #9 1
INFO  04:08:54,558 - #30 )
INFO  04:08:54,559 - #16 -
INFO  04:08:54,559 - #9 14
INFO  04:08:54,559 - #38 >
INFO  04:08:54,560 - #9 0
INFO  04:08:54,561 - #14 ||
INFO  04:08:54,562 - #8 cond
INFO  04:08:54,562 - #30 )
INFO  04:08:54,562 - #3 print
INFO  04:08:54,563 - #29 (
INFO  04:08:54,563 - #8 a
INFO  04:08:54,563 - #15 +
INFO  04:08:54,563 - #8 b
INFO  04:08:54,563 - #30 )
INFO  04:08:54,564 - #27 ;
INFO  04:08:54,564 - #21 }
INFO  04:08:54,564 - #8 int
INFO  04:08:54,564 - #8 max
INFO  04:08:54,564 - #29 (
INFO  04:08:54,565 - #8 int
INFO  04:08:54,567 - #8 a
INFO  04:08:54,567 - #27 ;
ERROR 04:08:54,567 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  04:08:54,567 - #8 int
INFO  04:08:54,567 - #8 b
INFO  04:08:54,567 - #30 )
INFO  04:08:54,568 - #20 {
INFO  04:08:54,568 - #31 if
INFO  04:08:54,568 - #29 (
ERROR 04:08:54,568 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  04:08:54,569 - #8 a
INFO  04:08:54,569 - #38 >
INFO  04:08:54,569 - #9 0
INFO  04:08:54,570 - #8 b
ERROR 04:08:54,570 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  04:08:54,570 - #30 )
INFO  04:08:54,570 - #20 {
INFO  04:08:54,570 - #37 return
INFO  04:08:54,570 - #8 a
INFO  04:08:54,570 - #27 ;
ERROR 04:08:54,570 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  04:08:54,571 - #21 }
INFO  04:08:54,571 - #32 else
ERROR 04:08:54,571 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  04:08:54,571 - #37 return
INFO  04:08:54,571 - #8 b
INFO  04:08:54,571 - #27 ;
INFO  04:08:54,571 - #21 }
INFO  04:08:54,572 - #8 int
INFO  04:08:54,572 - #8 min
INFO  04:08:54,572 - #29 (
INFO  04:08:54,572 - #8 int
INFO  04:08:54,572 - #8 a
INFO  04:08:54,572 - #28 ,
INFO  04:08:54,572 - #8 int
INFO  04:08:54,572 - #8 b
INFO  04:08:54,572 - #30 )
ERROR 04:08:54,572 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  04:08:54,573 - #20 {
INFO  04:08:54,573 - #31 if
INFO  04:08:54,573 - #29 (
INFO  04:08:54,573 - #8 a
INFO  04:08:54,573 - #40 <
INFO  04:08:54,573 - #8 b
INFO  04:08:54,574 - #30 )
INFO  04:08:54,574 - #20 {
INFO  04:08:54,574 - #37 return
INFO  04:08:54,574 - #8 a
INFO  04:08:54,574 - #27 ;
INFO  04:08:54,574 - #21 }
INFO  04:08:54,574 - #32 else
INFO  04:08:54,574 - #20 {
INFO  04:08:54,574 - #37 return
INFO  04:08:54,574 - #8 b
INFO  04:08:54,575 - #27 ;
INFO  04:08:54,575 - #21 }
INFO  04:08:54,575 - #21 }
INFO  04:08:54,575 - #6 void
INFO  04:08:54,575 - #8 main
INFO  04:08:54,575 - #29 (
INFO  04:08:54,575 - #30 )
INFO  04:08:54,575 - #20 {
INFO  04:08:54,575 - #8 int
INFO  04:08:54,575 - #8 a
INFO  04:08:54,576 - #22 [
INFO  04:08:54,576 - #23 ]
INFO  04:08:54,576 - #27 ;
INFO  04:08:54,576 - #8 int
INFO  04:08:54,576 - #8 length
INFO  04:08:54,576 - #27 ;
INFO  04:08:54,576 - #8 length
INFO  04:08:54,576 - #24 =
INFO  04:08:54,576 - #8 c
INFO  04:08:54,576 - #27 ;
INFO  04:08:54,576 - #8 test
INFO  04:08:54,576 - #29 (
INFO  04:08:54,576 - #30 )
INFO  04:08:54,576 - #27 ;
INFO  04:08:54,577 - #31 if
INFO  04:08:54,577 - #29 (
INFO  04:08:54,577 - #8 length
INFO  04:08:54,577 - #38 >
INFO  04:08:54,577 - #9 0
INFO  04:08:54,577 - #13 &&
INFO  04:08:54,577 - #8 length
INFO  04:08:54,577 - #42 <=
INFO  04:08:54,577 - #8 d
INFO  04:08:54,578 - #30 )
INFO  04:08:54,578 - #8 a
INFO  04:08:54,578 - #24 =
INFO  04:08:54,578 - #7 new
INFO  04:08:54,578 - #8 int
INFO  04:08:54,578 - #22 [
INFO  04:08:54,578 - #8 length
INFO  04:08:54,578 - #23 ]
INFO  04:08:54,578 - #27 ;
INFO  04:08:54,579 - #32 else
INFO  04:08:54,579 - #8 a
INFO  04:08:54,579 - #24 =
INFO  04:08:54,579 - #7 new
INFO  04:08:54,579 - #8 int
INFO  04:08:54,579 - #22 [
INFO  04:08:54,579 - #9 5
INFO  04:08:54,579 - #23 ]
INFO  04:08:54,579 - #27 ;
INFO  04:08:54,579 - #33 do
INFO  04:08:54,579 - #20 {
INFO  04:08:54,579 - #4 read
INFO  04:08:54,580 - #29 (
INFO  04:08:54,580 - #8 a
INFO  04:08:54,580 - #22 [
INFO  04:08:54,580 - #8 i
INFO  04:08:54,580 - #23 ]
INFO  04:08:54,580 - #30 )
INFO  04:08:54,580 - #27 ;
INFO  04:08:54,580 - #31 if
INFO  04:08:54,580 - #29 (
INFO  04:08:54,580 - #8 a
INFO  04:08:54,580 - #22 [
INFO  04:08:54,580 - #8 i
INFO  04:08:54,580 - #23 ]
INFO  04:08:54,581 - #19 %
INFO  04:08:54,581 - #9 3
INFO  04:08:54,581 - #39 ==
INFO  04:08:54,581 - #9 0
INFO  04:08:54,582 - #30 )
INFO  04:08:54,582 - #3 print
INFO  04:08:54,582 - #29 (
INFO  04:08:54,582 - #8 a
INFO  04:08:54,582 - #22 [
INFO  04:08:54,582 - #8 i
INFO  04:08:54,582 - #23 ]
INFO  04:08:54,582 - #30 )
INFO  04:08:54,583 - #27 ;
INFO  04:08:54,583 - #32 else
INFO  04:08:54,583 - #3 print
INFO  04:08:54,583 - #29 (
INFO  04:08:54,583 - #8 max
INFO  04:08:54,583 - #29 (
INFO  04:08:54,583 - #8 a
INFO  04:08:54,583 - #22 [
INFO  04:08:54,583 - #8 i
INFO  04:08:54,583 - #23 ]
INFO  04:08:54,583 - #28 ,
INFO  04:08:54,583 - #9 0
INFO  04:08:54,583 - #30 )
INFO  04:08:54,584 - #30 )
INFO  04:08:54,584 - #27 ;
INFO  04:08:54,584 - #21 }
INFO  04:08:54,584 - #34 while
INFO  04:08:54,584 - #29 (
INFO  04:08:54,584 - #8 i
INFO  04:08:54,584 - #42 <=
INFO  04:08:54,584 - #8 length
INFO  04:08:54,584 - #16 -
INFO  04:08:54,584 - #9 1
INFO  04:08:54,584 - #30 )
INFO  04:08:54,584 - #27 ;
INFO  04:08:54,585 - #3 print
INFO  04:08:54,585 - #29 (
INFO  04:08:54,585 - #8 d
INFO  04:08:54,585 - #30 )
INFO  04:08:54,585 - #27 ;
INFO  04:08:54,585 - #21 }
INFO  04:08:54,585 - #21 }
INFO  14:18:00,861 - #2 program
INFO  14:18:00,870 - #8 Program
INFO  14:18:00,870 - #20 {
INFO  14:18:00,870 - #5 const
INFO  14:18:00,870 - #8 int
INFO  14:18:00,870 - #8 c
INFO  14:18:00,871 - #24 =
INFO  14:18:00,871 - #9 10
INFO  14:18:00,871 - #27 ;
INFO  14:18:00,871 - #5 const
INFO  14:18:00,871 - #8 int
INFO  14:18:00,872 - #8 d
INFO  14:18:00,872 - #24 =
INFO  14:18:00,872 - #9 99
INFO  14:18:00,872 - #28 ,
INFO  14:18:00,872 - #8 eps
INFO  14:18:00,872 - #24 =
INFO  14:18:00,872 - #9 2
INFO  14:18:00,872 - #27 ;
INFO  14:18:00,872 - #8 int
INFO  14:18:00,873 - #8 e
INFO  14:18:00,873 - #27 ;
INFO  14:18:00,873 - #6 void
INFO  14:18:00,873 - #8 test
INFO  14:18:00,873 - #29 (
INFO  14:18:00,873 - #30 )
INFO  14:18:00,873 - #20 {
INFO  14:18:00,874 - #8 int
INFO  14:18:00,874 - #8 a
INFO  14:18:00,874 - #28 ,
INFO  14:18:00,874 - #8 b
INFO  14:18:00,874 - #27 ;
INFO  14:18:00,874 - #8 bool
INFO  14:18:00,874 - #8 cond
INFO  14:18:00,874 - #27 ;
INFO  14:18:00,875 - #8 a
INFO  14:18:00,875 - #24 =
INFO  14:18:00,875 - #9 3
INFO  14:18:00,875 - #27 ;
INFO  14:18:00,876 - #8 b
INFO  14:18:00,876 - #24 =
INFO  14:18:00,876 - #27 ;
ERROR 14:18:00,876 - Sintaksna greska na liniji 9, koloni 7 za simbol ";"!
INFO  14:18:00,877 - #8 cond
INFO  14:18:00,877 - #24 =
INFO  14:18:00,877 - #11 true
INFO  14:18:48,004 - #2 program
INFO  14:18:48,004 - #8 Program
INFO  14:18:48,004 - #20 {
INFO  14:18:48,004 - #5 const
INFO  14:18:48,005 - #8 int
INFO  14:18:48,005 - #8 c
INFO  14:18:48,005 - #24 =
INFO  14:18:48,005 - #9 10
INFO  14:18:48,005 - #27 ;
INFO  14:18:48,005 - #5 const
INFO  14:18:48,006 - #8 int
INFO  14:18:48,006 - #8 d
INFO  14:18:48,006 - #24 =
INFO  14:18:48,006 - #9 99
INFO  14:18:48,006 - #28 ,
INFO  14:18:48,006 - #8 eps
INFO  14:18:48,007 - #24 =
INFO  14:18:48,007 - #9 2
INFO  14:18:48,007 - #27 ;
INFO  14:18:48,007 - #8 int
INFO  14:18:48,007 - #8 e
INFO  14:18:48,007 - #27 ;
INFO  14:18:48,007 - #6 void
INFO  14:18:48,008 - #8 test
INFO  14:18:48,008 - #29 (
INFO  14:18:48,008 - #30 )
INFO  14:18:48,008 - #20 {
INFO  14:18:48,008 - #8 int
INFO  14:18:48,008 - #8 a
INFO  14:18:48,008 - #28 ,
INFO  14:18:48,008 - #8 b
INFO  14:18:48,008 - #27 ;
INFO  14:18:48,009 - #8 bool
INFO  14:18:48,009 - #8 cond
INFO  14:18:48,009 - #27 ;
INFO  14:18:48,009 - #8 a
INFO  14:18:48,009 - #24 =
INFO  14:18:48,010 - #9 3
INFO  14:18:48,010 - #27 ;
INFO  14:18:48,010 - #8 b
INFO  14:18:48,011 - #24 =
INFO  14:18:48,011 - #9 5
INFO  14:18:48,011 - #27 ;
INFO  14:18:48,011 - #8 cond
INFO  14:18:48,011 - #24 =
INFO  14:18:48,012 - #11 true
INFO  14:18:48,012 - #27 ;
INFO  14:18:48,014 - #31 if
INFO  14:18:48,014 - #29 (
INFO  14:18:48,014 - #9 2
INFO  14:18:48,014 - #17 *
INFO  14:18:48,014 - #29 (
INFO  14:18:48,016 - #8 a
INFO  14:18:48,016 - #16 -
INFO  14:18:48,016 - #8 b
INFO  14:18:48,017 - #16 -
INFO  14:18:48,017 - #9 1
INFO  14:18:48,018 - #30 )
INFO  14:18:48,018 - #16 -
INFO  14:18:48,019 - #9 14
INFO  14:18:48,019 - #38 >
INFO  14:18:48,019 - #9 0
INFO  14:18:48,020 - #14 ||
INFO  14:18:48,021 - #8 cond
INFO  14:18:48,021 - #30 )
INFO  14:18:48,022 - #3 print
INFO  14:18:48,022 - #29 (
INFO  14:18:48,022 - #8 a
INFO  14:18:48,022 - #15 +
INFO  14:18:48,022 - #8 b
INFO  14:18:48,023 - #30 )
INFO  14:18:48,023 - #27 ;
INFO  14:18:48,023 - #21 }
INFO  14:18:48,024 - #8 int
INFO  14:18:48,024 - #8 max
INFO  14:18:48,024 - #29 (
INFO  14:18:48,024 - #8 int
INFO  14:18:48,026 - #8 a
INFO  14:18:48,027 - #27 ;
ERROR 14:18:48,027 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  14:18:48,027 - #8 int
INFO  14:18:48,027 - #8 b
INFO  14:18:48,027 - #30 )
INFO  14:18:48,028 - #20 {
INFO  14:18:48,028 - #31 if
INFO  14:18:48,028 - #29 (
ERROR 14:18:48,028 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  14:18:48,029 - #8 a
INFO  14:18:48,029 - #38 >
INFO  14:18:48,029 - #9 0
INFO  14:18:48,029 - #8 b
ERROR 14:18:48,029 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  14:18:48,029 - #30 )
INFO  14:18:48,029 - #20 {
INFO  14:18:48,029 - #37 return
INFO  14:18:48,029 - #8 a
ERROR 14:18:48,029 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  14:18:48,030 - #27 ;
INFO  14:18:48,030 - #21 }
INFO  14:18:48,030 - #32 else
ERROR 14:18:48,030 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  14:18:48,030 - #37 return
INFO  14:18:48,030 - #8 b
INFO  14:18:48,031 - #27 ;
INFO  14:18:48,031 - #21 }
INFO  14:18:48,031 - #8 int
INFO  14:18:48,031 - #8 min
INFO  14:18:48,031 - #29 (
INFO  14:18:48,031 - #8 int
INFO  14:18:48,031 - #8 a
INFO  14:18:48,031 - #28 ,
INFO  14:18:48,031 - #8 int
INFO  14:18:48,031 - #8 b
INFO  14:18:48,031 - #30 )
ERROR 14:18:48,031 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  14:18:48,032 - #20 {
INFO  14:18:48,032 - #31 if
INFO  14:18:48,032 - #29 (
INFO  14:18:48,032 - #8 a
INFO  14:18:48,032 - #40 <
INFO  14:18:48,032 - #8 b
INFO  14:18:48,033 - #30 )
INFO  14:18:48,033 - #20 {
INFO  14:18:48,033 - #37 return
INFO  14:18:48,033 - #8 a
INFO  14:18:48,033 - #27 ;
INFO  14:18:48,033 - #21 }
INFO  14:18:48,033 - #32 else
INFO  14:18:48,033 - #20 {
INFO  14:18:48,033 - #37 return
INFO  14:18:48,033 - #8 b
INFO  14:18:48,033 - #27 ;
INFO  14:18:48,033 - #21 }
INFO  14:18:48,034 - #21 }
INFO  14:18:48,034 - #6 void
INFO  14:18:48,034 - #8 main
INFO  14:18:48,034 - #29 (
INFO  14:18:48,034 - #30 )
INFO  14:18:48,034 - #20 {
INFO  14:18:48,034 - #8 int
INFO  14:18:48,034 - #8 a
INFO  14:18:48,034 - #22 [
INFO  14:18:48,035 - #23 ]
INFO  14:18:48,035 - #27 ;
INFO  14:18:48,035 - #8 int
INFO  14:18:48,035 - #8 length
INFO  14:18:48,035 - #27 ;
INFO  14:18:48,035 - #8 length
INFO  14:18:48,035 - #24 =
INFO  14:18:48,035 - #8 c
INFO  14:18:48,035 - #27 ;
INFO  14:18:48,035 - #8 test
INFO  14:18:48,035 - #29 (
INFO  14:18:48,035 - #30 )
INFO  14:18:48,035 - #27 ;
INFO  14:18:48,036 - #31 if
INFO  14:18:48,036 - #29 (
INFO  14:18:48,036 - #8 length
INFO  14:18:48,036 - #38 >
INFO  14:18:48,036 - #9 0
INFO  14:18:48,036 - #13 &&
INFO  14:18:48,036 - #8 length
INFO  14:18:48,036 - #42 <=
INFO  14:18:48,036 - #8 d
INFO  14:18:48,037 - #30 )
INFO  14:18:48,037 - #8 a
INFO  14:18:48,037 - #24 =
INFO  14:18:48,037 - #7 new
INFO  14:18:48,037 - #8 int
INFO  14:18:48,037 - #22 [
INFO  14:18:48,038 - #8 length
INFO  14:18:48,038 - #23 ]
INFO  14:18:48,038 - #27 ;
INFO  14:18:48,038 - #32 else
INFO  14:18:48,038 - #8 a
INFO  14:18:48,038 - #24 =
INFO  14:18:48,038 - #7 new
INFO  14:18:48,038 - #8 int
INFO  14:18:48,038 - #22 [
INFO  14:18:48,038 - #9 5
INFO  14:18:48,038 - #23 ]
INFO  14:18:48,039 - #27 ;
INFO  14:18:48,039 - #33 do
INFO  14:18:48,039 - #20 {
INFO  14:18:48,039 - #4 read
INFO  14:18:48,039 - #29 (
INFO  14:18:48,039 - #8 a
INFO  14:18:48,039 - #22 [
INFO  14:18:48,039 - #8 i
INFO  14:18:48,039 - #23 ]
INFO  14:18:48,039 - #30 )
INFO  14:18:48,039 - #27 ;
INFO  14:18:48,039 - #31 if
INFO  14:18:48,040 - #29 (
INFO  14:18:48,040 - #8 a
INFO  14:18:48,040 - #22 [
INFO  14:18:48,040 - #8 i
INFO  14:18:48,040 - #23 ]
INFO  14:18:48,040 - #19 %
INFO  14:18:48,040 - #9 3
INFO  14:18:48,041 - #39 ==
INFO  14:18:48,041 - #9 0
INFO  14:18:48,042 - #30 )
INFO  14:18:48,042 - #3 print
INFO  14:18:48,042 - #29 (
INFO  14:18:48,042 - #8 a
INFO  14:18:48,042 - #22 [
INFO  14:18:48,042 - #8 i
INFO  14:18:48,042 - #23 ]
INFO  14:18:48,042 - #30 )
INFO  14:18:48,042 - #27 ;
INFO  14:18:48,042 - #32 else
INFO  14:18:48,042 - #3 print
INFO  14:18:48,042 - #29 (
INFO  14:18:48,043 - #8 max
INFO  14:18:48,043 - #29 (
INFO  14:18:48,043 - #8 a
INFO  14:18:48,043 - #22 [
INFO  14:18:48,043 - #8 i
INFO  14:18:48,043 - #23 ]
INFO  14:18:48,043 - #28 ,
INFO  14:18:48,043 - #9 0
INFO  14:18:48,043 - #30 )
INFO  14:18:48,043 - #30 )
INFO  14:18:48,044 - #27 ;
INFO  14:18:48,044 - #21 }
INFO  14:18:48,044 - #34 while
INFO  14:18:48,044 - #29 (
INFO  14:18:48,044 - #8 i
INFO  14:18:48,044 - #42 <=
INFO  14:18:48,044 - #8 length
INFO  14:18:48,044 - #16 -
INFO  14:18:48,044 - #9 1
INFO  14:18:48,044 - #30 )
INFO  14:18:48,044 - #27 ;
INFO  14:18:48,045 - #3 print
INFO  14:18:48,045 - #29 (
INFO  14:18:48,045 - #8 d
INFO  14:18:48,045 - #30 )
INFO  14:18:48,045 - #27 ;
INFO  14:18:48,045 - #21 }
INFO  14:18:48,045 - #21 }
INFO  14:20:20,803 - #2 program
INFO  14:20:20,803 - #8 Program
INFO  14:20:20,803 - #20 {
INFO  14:20:20,803 - #5 const
INFO  14:20:20,804 - #8 int
INFO  14:20:20,804 - #8 c
INFO  14:20:20,804 - #24 =
INFO  14:20:20,804 - #9 10
INFO  14:20:20,804 - #27 ;
INFO  14:20:20,804 - #5 const
INFO  14:20:20,805 - #8 int
INFO  14:20:20,805 - #8 d
INFO  14:20:20,805 - #24 =
INFO  14:20:20,805 - #9 99
INFO  14:20:20,805 - #28 ,
INFO  14:20:20,805 - #8 eps
INFO  14:20:20,805 - #24 =
INFO  14:20:20,806 - #9 2
INFO  14:20:20,806 - #27 ;
INFO  14:20:20,806 - #8 int
INFO  14:20:20,806 - #8 e
INFO  14:20:20,806 - #27 ;
INFO  14:20:20,806 - #6 void
INFO  14:20:20,807 - #8 test
INFO  14:20:20,807 - #29 (
INFO  14:20:20,807 - #30 )
INFO  14:20:20,807 - #20 {
INFO  14:20:20,807 - #8 int
INFO  14:20:20,807 - #8 a
INFO  14:20:20,807 - #27 ;
INFO  14:20:20,807 - #8 b
INFO  14:20:20,807 - #27 ;
ERROR 14:20:20,808 - Sintaksna greska na liniji 6, koloni 11 za simbol ";"!
INFO  14:20:20,808 - #8 bool
INFO  14:20:20,808 - #8 cond
INFO  14:20:20,808 - #27 ;
INFO  14:20:20,808 - #8 a
INFO  14:20:20,809 - #24 =
INFO  14:20:20,809 - #9 3
INFO  14:20:20,809 - #27 ;
INFO  14:20:20,809 - #8 b
INFO  14:20:20,809 - #24 =
INFO  14:20:20,809 - #9 5
INFO  14:20:20,809 - #27 ;
INFO  14:20:20,809 - #8 cond
INFO  14:20:20,809 - #24 =
INFO  14:20:20,809 - #11 true
INFO  14:20:20,810 - #27 ;
INFO  14:20:20,810 - #31 if
INFO  14:20:20,810 - #29 (
INFO  14:20:20,810 - #9 2
INFO  14:20:20,810 - #17 *
INFO  14:20:20,810 - #29 (
INFO  14:20:20,810 - #8 a
INFO  14:20:20,810 - #16 -
INFO  14:20:20,810 - #8 b
INFO  14:20:20,810 - #16 -
INFO  14:20:20,811 - #9 1
INFO  14:20:20,811 - #30 )
INFO  14:20:20,811 - #16 -
INFO  14:20:20,811 - #9 14
INFO  14:20:20,811 - #38 >
INFO  14:20:20,811 - #9 0
INFO  14:20:20,811 - #14 ||
INFO  14:20:20,811 - #8 cond
INFO  14:20:20,812 - #30 )
INFO  14:20:20,812 - #3 print
INFO  14:20:20,812 - #29 (
INFO  14:20:20,812 - #8 a
INFO  14:20:20,812 - #15 +
INFO  14:20:20,812 - #8 b
INFO  14:20:20,812 - #30 )
INFO  14:20:20,812 - #27 ;
INFO  14:20:20,812 - #21 }
INFO  14:20:20,812 - #8 int
INFO  14:20:20,812 - #8 max
INFO  14:20:20,813 - #29 (
INFO  14:20:20,813 - #8 int
INFO  14:20:20,813 - #8 a
INFO  14:20:20,813 - #27 ;
INFO  14:20:20,813 - #8 int
INFO  14:20:20,813 - #8 b
INFO  14:20:20,813 - #30 )
INFO  14:20:20,813 - #20 {
INFO  14:20:20,813 - #31 if
INFO  14:20:20,813 - #29 (
ERROR 14:20:20,813 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 6, koloni 11 za simbol ";"!
INFO  14:20:20,814 - #8 a
INFO  14:20:20,814 - #38 >
INFO  14:20:20,815 - #9 0
INFO  14:20:20,816 - #8 b
ERROR 14:20:20,816 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  14:20:20,816 - #30 )
INFO  14:20:20,817 - #20 {
INFO  14:20:20,817 - #37 return
INFO  14:20:20,817 - #8 a
ERROR 14:20:20,817 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  14:20:20,818 - #27 ;
INFO  14:20:20,818 - #21 }
INFO  14:20:20,818 - #32 else
ERROR 14:20:20,818 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  14:20:20,819 - #37 return
INFO  14:20:20,819 - #8 b
INFO  14:20:20,819 - #27 ;
INFO  14:20:20,819 - #21 }
INFO  14:20:20,819 - #8 int
INFO  14:20:20,819 - #8 min
INFO  14:20:20,819 - #29 (
INFO  14:20:20,819 - #8 int
INFO  14:20:20,819 - #8 a
INFO  14:20:20,819 - #28 ,
INFO  14:20:20,819 - #8 int
INFO  14:20:20,819 - #8 b
INFO  14:20:20,819 - #30 )
ERROR 14:20:20,820 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  14:20:20,820 - #20 {
INFO  14:20:20,820 - #31 if
INFO  14:20:20,820 - #29 (
INFO  14:20:20,820 - #8 a
INFO  14:20:20,820 - #40 <
INFO  14:20:20,820 - #8 b
INFO  14:20:20,821 - #30 )
INFO  14:20:20,821 - #20 {
INFO  14:20:20,822 - #37 return
INFO  14:20:20,822 - #8 a
INFO  14:20:20,822 - #27 ;
INFO  14:20:20,822 - #21 }
INFO  14:20:20,822 - #32 else
INFO  14:20:20,822 - #20 {
INFO  14:20:20,822 - #37 return
INFO  14:20:20,822 - #8 b
INFO  14:20:20,822 - #27 ;
INFO  14:20:20,822 - #21 }
INFO  14:20:20,822 - #21 }
INFO  14:20:20,823 - #6 void
INFO  14:20:20,823 - #8 main
INFO  14:20:20,823 - #29 (
INFO  14:20:20,823 - #30 )
INFO  14:20:20,823 - #20 {
INFO  14:20:20,823 - #8 int
INFO  14:20:20,823 - #8 a
INFO  14:20:20,826 - #22 [
INFO  14:20:20,826 - #23 ]
INFO  14:20:20,826 - #27 ;
INFO  14:20:20,826 - #8 int
INFO  14:20:20,826 - #8 length
INFO  14:20:20,826 - #27 ;
INFO  14:20:20,826 - #8 length
INFO  14:20:20,826 - #24 =
INFO  14:20:20,827 - #8 c
INFO  14:20:20,827 - #27 ;
INFO  14:20:20,827 - #8 test
INFO  14:20:20,827 - #29 (
INFO  14:20:20,827 - #30 )
INFO  14:20:20,827 - #27 ;
INFO  14:20:20,827 - #31 if
INFO  14:20:20,827 - #29 (
INFO  14:20:20,827 - #8 length
INFO  14:20:20,827 - #38 >
INFO  14:20:20,828 - #9 0
INFO  14:20:20,828 - #13 &&
INFO  14:20:20,828 - #8 length
INFO  14:20:20,828 - #42 <=
INFO  14:20:20,828 - #8 d
INFO  14:20:20,829 - #30 )
INFO  14:20:20,829 - #8 a
INFO  14:20:20,829 - #24 =
INFO  14:20:20,829 - #7 new
INFO  14:20:20,829 - #8 int
INFO  14:20:20,829 - #22 [
INFO  14:20:20,829 - #8 length
INFO  14:20:20,829 - #23 ]
INFO  14:20:20,829 - #27 ;
INFO  14:20:20,829 - #32 else
INFO  14:20:20,830 - #8 a
INFO  14:20:20,830 - #24 =
INFO  14:20:20,830 - #7 new
INFO  14:20:20,830 - #8 int
INFO  14:20:20,830 - #22 [
INFO  14:20:20,830 - #9 5
INFO  14:20:20,830 - #23 ]
INFO  14:20:20,830 - #27 ;
INFO  14:20:20,830 - #33 do
INFO  14:20:20,830 - #20 {
INFO  14:20:20,830 - #4 read
INFO  14:20:20,830 - #29 (
INFO  14:20:20,830 - #8 a
INFO  14:20:20,830 - #22 [
INFO  14:20:20,830 - #8 i
INFO  14:20:20,830 - #23 ]
INFO  14:20:20,831 - #30 )
INFO  14:20:20,831 - #27 ;
INFO  14:20:20,831 - #31 if
INFO  14:20:20,831 - #29 (
INFO  14:20:20,831 - #8 a
INFO  14:20:20,831 - #22 [
INFO  14:20:20,831 - #8 i
INFO  14:20:20,831 - #23 ]
INFO  14:20:20,831 - #19 %
INFO  14:20:20,831 - #9 3
INFO  14:20:20,833 - #39 ==
INFO  14:20:20,833 - #9 0
INFO  14:20:20,834 - #30 )
INFO  14:20:20,834 - #3 print
INFO  14:20:20,834 - #29 (
INFO  14:20:20,834 - #8 a
INFO  14:20:20,834 - #22 [
INFO  14:20:20,834 - #8 i
INFO  14:20:20,834 - #23 ]
INFO  14:20:20,834 - #30 )
INFO  14:20:20,834 - #27 ;
INFO  14:20:20,835 - #32 else
INFO  14:20:20,835 - #3 print
INFO  14:20:20,835 - #29 (
INFO  14:20:20,835 - #8 max
INFO  14:20:20,835 - #29 (
INFO  14:20:20,835 - #8 a
INFO  14:20:20,835 - #22 [
INFO  14:20:20,835 - #8 i
INFO  14:20:20,835 - #23 ]
INFO  14:20:20,835 - #28 ,
INFO  14:20:20,835 - #9 0
INFO  14:20:20,835 - #30 )
INFO  14:20:20,836 - #30 )
INFO  14:20:20,836 - #27 ;
INFO  14:20:20,836 - #21 }
INFO  14:20:20,836 - #34 while
INFO  14:20:20,836 - #29 (
INFO  14:20:20,836 - #8 i
INFO  14:20:20,836 - #42 <=
INFO  14:20:20,836 - #8 length
INFO  14:20:20,836 - #16 -
INFO  14:20:20,836 - #9 1
INFO  14:20:20,837 - #30 )
INFO  14:20:20,838 - #27 ;
INFO  14:20:20,838 - #3 print
INFO  14:20:20,838 - #29 (
INFO  14:20:20,838 - #8 d
INFO  14:20:20,838 - #30 )
INFO  14:20:20,838 - #27 ;
INFO  14:20:20,838 - #21 }
INFO  14:20:20,838 - #21 }
INFO  14:22:12,834 - #2 program
INFO  14:22:12,835 - #8 Program
INFO  14:22:12,835 - #20 {
INFO  14:22:12,835 - #5 const
INFO  14:22:12,835 - #8 int
INFO  14:22:12,835 - #8 c
INFO  14:22:12,836 - #24 =
INFO  14:22:12,836 - #9 10
INFO  14:22:12,836 - #27 ;
INFO  14:22:12,836 - #5 const
INFO  14:22:12,837 - #8 int
INFO  14:22:12,837 - #8 d
INFO  14:22:12,837 - #24 =
INFO  14:22:12,837 - #9 99
INFO  14:22:12,837 - #28 ,
INFO  14:22:12,837 - #8 eps
INFO  14:22:12,837 - #24 =
INFO  14:22:12,837 - #9 2
INFO  14:22:12,837 - #27 ;
INFO  14:22:12,838 - #8 int
INFO  14:22:12,838 - #8 e
INFO  14:22:12,838 - #27 ;
INFO  14:22:12,838 - #6 void
INFO  14:22:12,838 - #8 test
INFO  14:22:12,838 - #29 (
INFO  14:22:12,839 - #30 )
INFO  14:22:12,839 - #20 {
INFO  14:22:12,839 - #8 int
INFO  14:22:12,839 - #8 a
INFO  14:22:12,839 - #28 ,
INFO  14:22:12,839 - #8 b
INFO  14:22:12,839 - #28 ,
INFO  14:22:12,839 - #27 ;
ERROR 14:22:12,840 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  14:22:12,840 - #8 bool
INFO  14:22:12,840 - #8 cond
INFO  14:22:12,840 - #27 ;
INFO  14:23:33,899 - #2 program
INFO  14:23:33,899 - #8 Program
INFO  14:23:33,899 - #20 {
INFO  14:23:33,900 - #5 const
INFO  14:23:33,900 - #8 int
INFO  14:23:33,900 - #8 c
INFO  14:23:33,900 - #24 =
INFO  14:23:33,900 - #9 10
INFO  14:23:33,900 - #27 ;
INFO  14:23:33,900 - #5 const
INFO  14:23:33,901 - #8 int
INFO  14:23:33,901 - #8 d
INFO  14:23:33,901 - #24 =
INFO  14:23:33,901 - #9 99
INFO  14:23:33,901 - #28 ,
INFO  14:23:33,901 - #8 eps
INFO  14:23:33,901 - #24 =
INFO  14:23:33,901 - #9 2
INFO  14:23:33,902 - #27 ;
INFO  14:23:33,902 - #8 int
INFO  14:23:33,902 - #8 e
INFO  14:23:33,902 - #27 ;
INFO  14:23:33,902 - #6 void
INFO  14:23:33,902 - #8 test
INFO  14:23:33,903 - #29 (
INFO  14:23:33,903 - #30 )
INFO  14:23:33,903 - #20 {
INFO  14:23:33,903 - #8 int
INFO  14:23:33,903 - #8 a
INFO  14:23:33,903 - #28 ,
INFO  14:23:33,903 - #8 b
INFO  14:23:33,903 - #28 ,
INFO  14:23:33,903 - #27 ;
ERROR 14:23:33,903 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  14:23:33,904 - #8 bool
INFO  14:23:33,904 - #8 cond
INFO  14:23:33,904 - #27 ;
INFO  14:25:09,233 - #2 program
INFO  14:25:09,234 - #8 Program
INFO  14:25:09,234 - #20 {
INFO  14:25:09,234 - #5 const
INFO  14:25:09,234 - #8 int
INFO  14:25:09,234 - #8 c
INFO  14:25:09,235 - #24 =
INFO  14:25:09,235 - #9 10
INFO  14:25:09,235 - #27 ;
INFO  14:25:09,235 - #5 const
INFO  14:25:09,236 - #8 int
INFO  14:25:09,236 - #8 d
INFO  14:25:09,236 - #24 =
INFO  14:25:09,236 - #9 99
INFO  14:25:09,236 - #28 ,
INFO  14:25:09,236 - #8 eps
INFO  14:25:09,236 - #24 =
INFO  14:25:09,236 - #9 2
INFO  14:25:09,236 - #27 ;
INFO  14:25:09,237 - #8 int
INFO  14:25:09,237 - #8 e
INFO  14:25:09,237 - #27 ;
INFO  14:25:09,237 - #6 void
INFO  14:25:09,237 - #8 test
INFO  14:25:09,238 - #29 (
INFO  14:25:09,238 - #30 )
INFO  14:25:09,238 - #20 {
INFO  14:25:09,238 - #8 int
INFO  14:25:09,238 - #8 a
INFO  14:25:09,238 - #28 ,
INFO  14:25:09,238 - #8 b
INFO  14:25:09,238 - #28 ,
INFO  14:25:09,238 - #27 ;
ERROR 14:25:09,238 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  14:25:09,239 - #8 bool
INFO  14:25:09,239 - #8 cond
INFO  14:25:09,239 - #27 ;
INFO  14:26:22,762 - #2 program
INFO  14:26:22,762 - #8 Program
INFO  14:26:22,763 - #20 {
INFO  14:26:22,763 - #5 const
INFO  14:26:22,763 - #8 int
INFO  14:26:22,763 - #8 c
INFO  14:26:22,763 - #24 =
INFO  14:26:22,763 - #9 10
INFO  14:26:22,763 - #27 ;
INFO  14:26:22,763 - #5 const
INFO  14:26:22,764 - #8 int
INFO  14:26:22,764 - #8 d
INFO  14:26:22,764 - #24 =
INFO  14:26:22,764 - #9 99
INFO  14:26:22,764 - #28 ,
INFO  14:26:22,764 - #8 eps
INFO  14:26:22,764 - #24 =
INFO  14:26:22,764 - #9 2
INFO  14:26:22,765 - #27 ;
INFO  14:26:22,765 - #8 int
INFO  14:26:22,765 - #8 e
INFO  14:26:22,765 - #27 ;
INFO  14:26:22,765 - #6 void
INFO  14:26:22,766 - #8 test
INFO  14:26:22,766 - #29 (
INFO  14:26:22,766 - #30 )
INFO  14:26:22,766 - #20 {
INFO  14:26:22,766 - #8 int
INFO  14:26:22,766 - #8 a
INFO  14:26:22,766 - #28 ,
INFO  14:26:22,766 - #8 b
INFO  14:26:22,766 - #28 ,
INFO  14:26:22,767 - #27 ;
ERROR 14:26:22,767 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  14:26:22,767 - #8 bool
INFO  14:26:22,767 - #8 cond
INFO  14:26:22,767 - #27 ;
INFO  14:45:51,937 - #2 program
INFO  14:45:51,937 - #8 Program
INFO  14:45:51,937 - #20 {
INFO  14:45:51,937 - #5 const
INFO  14:45:51,937 - #8 int
INFO  14:45:51,937 - #8 c
INFO  14:45:51,937 - #24 =
INFO  14:45:51,937 - #9 10
INFO  14:45:51,937 - #27 ;
INFO  14:45:51,937 - #5 const
INFO  14:45:51,937 - #8 int
INFO  14:45:51,937 - #8 d
INFO  14:45:51,937 - #24 =
INFO  14:45:51,937 - #9 99
INFO  14:45:51,937 - #28 ,
INFO  14:45:51,937 - #8 eps
INFO  14:45:51,937 - #24 =
INFO  14:45:51,937 - #9 2
INFO  14:45:51,937 - #27 ;
INFO  14:45:51,937 - #8 int
INFO  14:45:51,937 - #8 e
INFO  14:45:51,937 - #27 ;
INFO  14:45:51,937 - #6 void
INFO  14:45:51,947 - #8 test
INFO  14:45:51,947 - #29 (
INFO  14:45:51,947 - #30 )
INFO  14:45:51,947 - #20 {
INFO  14:45:51,947 - #8 int
INFO  14:45:51,947 - #8 a
INFO  14:45:51,947 - #28 ,
INFO  14:45:51,947 - #8 b
INFO  14:45:51,947 - #28 ,
INFO  14:45:51,947 - #27 ;
ERROR 14:45:51,947 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  14:45:51,947 - #8 bool
INFO  14:45:51,947 - #8 cond
INFO  14:45:51,947 - #27 ;
INFO  14:46:10,511 - #2 program
INFO  14:46:10,511 - #8 Program
INFO  14:46:10,511 - #20 {
INFO  14:46:10,511 - #5 const
INFO  14:46:10,511 - #8 int
INFO  14:46:10,511 - #8 c
INFO  14:46:10,511 - #24 =
INFO  14:46:10,511 - #9 10
INFO  14:46:10,511 - #27 ;
INFO  14:46:10,511 - #5 const
INFO  14:46:10,511 - #8 int
INFO  14:46:10,511 - #8 d
INFO  14:46:10,511 - #24 =
INFO  14:46:10,511 - #9 99
INFO  14:46:10,511 - #28 ,
INFO  14:46:10,511 - #8 eps
INFO  14:46:10,511 - #24 =
INFO  14:46:10,511 - #9 2
INFO  14:46:10,511 - #27 ;
INFO  14:46:10,511 - #8 int
INFO  14:46:10,511 - #8 e
INFO  14:46:10,511 - #27 ;
INFO  14:46:10,511 - #6 void
INFO  14:46:10,511 - #8 test
INFO  14:46:10,511 - #29 (
INFO  14:46:10,511 - #30 )
INFO  14:46:10,511 - #20 {
INFO  14:46:10,511 - #8 int
INFO  14:46:10,511 - #8 a
INFO  14:46:10,511 - #28 ,
INFO  14:46:10,511 - #8 b
INFO  14:46:10,511 - #28 ,
INFO  14:46:10,511 - #27 ;
ERROR 14:46:10,521 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  14:46:10,521 - #8 bool
INFO  14:46:10,521 - #8 cond
INFO  14:46:10,521 - #27 ;
INFO  14:47:59,225 - #2 program
INFO  14:47:59,225 - #8 Program
INFO  14:47:59,225 - #20 {
INFO  14:47:59,225 - #5 const
INFO  14:47:59,225 - #8 int
INFO  14:47:59,225 - #8 c
INFO  14:47:59,225 - #24 =
INFO  14:47:59,225 - #9 10
INFO  14:47:59,225 - #27 ;
INFO  14:47:59,225 - #5 const
INFO  14:47:59,225 - #8 int
INFO  14:47:59,225 - #8 d
INFO  14:47:59,225 - #24 =
INFO  14:47:59,225 - #9 99
INFO  14:47:59,225 - #28 ,
INFO  14:47:59,225 - #8 eps
INFO  14:47:59,225 - #24 =
INFO  14:47:59,225 - #9 2
INFO  14:47:59,225 - #27 ;
INFO  14:47:59,225 - #8 int
INFO  14:47:59,225 - #8 e
INFO  14:47:59,225 - #27 ;
INFO  14:47:59,225 - #6 void
INFO  14:47:59,225 - #8 test
INFO  14:47:59,225 - #29 (
INFO  14:47:59,225 - #30 )
INFO  14:47:59,225 - #20 {
INFO  14:47:59,225 - #8 int
INFO  14:47:59,225 - #8 a
INFO  14:47:59,225 - #28 ,
INFO  14:47:59,225 - #8 b
INFO  14:47:59,225 - #28 ,
INFO  14:47:59,225 - #27 ;
ERROR 14:47:59,225 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  14:47:59,225 - #8 bool
INFO  14:47:59,225 - #8 cond
INFO  14:47:59,225 - #27 ;
INFO  14:48:23,772 - #2 program
INFO  14:48:23,772 - #8 Program
INFO  14:48:23,772 - #20 {
INFO  14:48:23,772 - #5 const
INFO  14:48:23,772 - #8 int
INFO  14:48:23,772 - #8 c
INFO  14:48:23,772 - #24 =
INFO  14:48:23,772 - #9 10
INFO  14:48:23,772 - #27 ;
INFO  14:48:23,772 - #5 const
INFO  14:48:23,772 - #8 int
INFO  14:48:23,772 - #8 d
INFO  14:48:23,772 - #24 =
INFO  14:48:23,772 - #9 99
INFO  14:48:23,772 - #28 ,
INFO  14:48:23,772 - #8 eps
INFO  14:48:23,772 - #24 =
INFO  14:48:23,772 - #9 2
INFO  14:48:23,772 - #27 ;
INFO  14:48:23,772 - #8 int
INFO  14:48:23,772 - #8 e
INFO  14:48:23,772 - #27 ;
INFO  14:48:23,772 - #6 void
INFO  14:48:23,772 - #8 test
INFO  14:48:23,772 - #29 (
INFO  14:48:23,772 - #30 )
INFO  14:48:23,772 - #20 {
INFO  14:48:23,772 - #8 int
INFO  14:48:23,772 - #8 a
INFO  14:48:23,782 - #28 ,
INFO  14:48:23,782 - #8 b
INFO  14:48:23,782 - #28 ,
INFO  14:48:23,782 - #27 ;
ERROR 14:48:23,782 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  14:48:23,782 - #8 bool
INFO  14:48:23,782 - #8 cond
INFO  14:48:23,782 - #27 ;
ERROR 14:48:23,782 - Sintaksna greska - neispravno ime promenljive na liniji 6, koloni 12 za simbol ";"!
INFO  14:48:23,782 - #8 a
INFO  14:48:23,782 - #24 =
INFO  14:48:23,782 - #9 3
INFO  14:48:23,782 - #27 ;
INFO  14:48:23,782 - #8 b
INFO  14:48:23,782 - #24 =
INFO  14:48:23,782 - #9 5
INFO  14:48:23,782 - #27 ;
INFO  14:48:23,782 - #8 cond
INFO  14:48:23,782 - #24 =
INFO  14:48:23,782 - #11 true
INFO  14:48:23,782 - #27 ;
INFO  14:48:23,782 - #31 if
INFO  14:48:23,782 - #29 (
INFO  14:48:23,782 - #9 2
INFO  14:48:23,782 - #17 *
INFO  14:48:23,782 - #29 (
INFO  14:48:23,782 - #8 a
INFO  14:48:23,782 - #16 -
INFO  14:48:23,782 - #8 b
INFO  14:48:23,792 - #16 -
INFO  14:48:23,792 - #9 1
INFO  14:48:23,792 - #30 )
INFO  14:48:23,792 - #16 -
INFO  14:48:23,792 - #9 14
INFO  14:48:23,792 - #38 >
INFO  14:48:23,792 - #9 0
INFO  14:48:23,792 - #14 ||
INFO  14:48:23,792 - #8 cond
INFO  14:48:23,792 - #30 )
INFO  14:48:23,792 - #3 print
INFO  14:48:23,792 - #29 (
INFO  14:48:23,792 - #8 a
INFO  14:48:23,792 - #15 +
INFO  14:48:23,792 - #8 b
INFO  14:48:23,792 - #30 )
INFO  14:48:23,792 - #27 ;
INFO  14:48:23,792 - #21 }
INFO  14:48:23,792 - #8 int
INFO  14:48:23,802 - #8 max
INFO  14:48:23,802 - #29 (
INFO  14:48:23,802 - #8 int
INFO  14:48:23,802 - #8 a
INFO  14:48:23,802 - #27 ;
ERROR 14:48:23,802 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  14:48:23,802 - #8 int
INFO  14:48:23,802 - #8 b
INFO  14:48:23,802 - #30 )
INFO  14:48:23,802 - #20 {
INFO  14:48:23,802 - #31 if
INFO  14:48:23,802 - #29 (
ERROR 14:48:23,802 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  14:48:23,802 - #8 a
INFO  14:48:23,802 - #38 >
INFO  14:48:23,802 - #9 0
INFO  14:48:23,802 - #8 b
ERROR 14:48:23,802 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  14:48:23,802 - #30 )
INFO  14:48:23,802 - #20 {
INFO  14:48:23,802 - #37 return
INFO  14:48:23,802 - #8 a
ERROR 14:48:23,802 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  14:48:23,802 - #27 ;
INFO  14:48:23,802 - #21 }
INFO  14:48:23,802 - #32 else
ERROR 14:48:23,802 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  14:48:23,802 - #37 return
INFO  14:48:23,802 - #8 b
INFO  14:48:23,802 - #27 ;
INFO  14:48:23,802 - #21 }
INFO  14:48:23,802 - #8 int
INFO  14:48:23,802 - #8 min
INFO  14:48:23,802 - #29 (
INFO  14:48:23,802 - #8 int
INFO  14:48:23,802 - #8 a
INFO  14:48:23,802 - #28 ,
INFO  14:48:23,802 - #8 int
INFO  14:48:23,802 - #8 b
INFO  14:48:23,802 - #30 )
ERROR 14:48:23,802 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  14:48:23,802 - #20 {
INFO  14:48:23,802 - #31 if
INFO  14:48:23,802 - #29 (
INFO  14:48:23,802 - #8 a
INFO  14:48:23,802 - #40 <
INFO  14:48:23,802 - #8 b
INFO  14:48:23,802 - #30 )
INFO  14:48:23,802 - #20 {
INFO  14:48:23,802 - #37 return
INFO  14:48:23,802 - #8 a
INFO  14:48:23,802 - #27 ;
INFO  14:48:23,802 - #21 }
INFO  14:48:23,802 - #32 else
INFO  14:48:23,802 - #20 {
INFO  14:48:23,802 - #37 return
INFO  14:48:23,802 - #8 b
INFO  14:48:23,802 - #27 ;
INFO  14:48:23,812 - #21 }
INFO  14:48:23,812 - #21 }
INFO  14:48:23,812 - #6 void
INFO  14:48:23,812 - #8 main
INFO  14:48:23,812 - #29 (
INFO  14:48:23,812 - #30 )
INFO  14:48:23,812 - #20 {
INFO  14:48:23,812 - #8 int
INFO  14:48:23,812 - #8 a
INFO  14:48:23,812 - #22 [
INFO  14:48:23,812 - #23 ]
INFO  14:48:23,812 - #27 ;
INFO  14:48:23,812 - #8 int
INFO  14:48:23,812 - #8 length
INFO  14:48:23,812 - #27 ;
INFO  14:48:23,812 - #8 length
INFO  14:48:23,812 - #24 =
INFO  14:48:23,812 - #8 c
INFO  14:48:23,812 - #27 ;
INFO  14:48:23,812 - #8 test
INFO  14:48:23,812 - #29 (
INFO  14:48:23,812 - #30 )
INFO  14:48:23,812 - #27 ;
INFO  14:48:23,812 - #31 if
INFO  14:48:23,812 - #29 (
INFO  14:48:23,812 - #8 length
INFO  14:48:23,812 - #38 >
INFO  14:48:23,812 - #9 0
INFO  14:48:23,812 - #13 &&
INFO  14:48:23,812 - #8 length
INFO  14:48:23,812 - #42 <=
INFO  14:48:23,812 - #8 d
INFO  14:48:23,812 - #30 )
INFO  14:48:23,812 - #8 a
INFO  14:48:23,812 - #24 =
INFO  14:48:23,812 - #7 new
INFO  14:48:23,812 - #8 int
INFO  14:48:23,812 - #22 [
INFO  14:48:23,812 - #8 length
INFO  14:48:23,812 - #23 ]
INFO  14:48:23,812 - #27 ;
INFO  14:48:23,812 - #32 else
INFO  14:48:23,812 - #8 a
INFO  14:48:23,812 - #24 =
INFO  14:48:23,812 - #7 new
INFO  14:48:23,812 - #8 int
INFO  14:48:23,812 - #22 [
INFO  14:48:23,812 - #9 5
INFO  14:48:23,812 - #23 ]
INFO  14:48:23,812 - #27 ;
INFO  14:48:23,812 - #33 do
INFO  14:48:23,812 - #20 {
INFO  14:48:23,812 - #4 read
INFO  14:48:23,812 - #29 (
INFO  14:48:23,812 - #8 a
INFO  14:48:23,812 - #22 [
INFO  14:48:23,812 - #8 i
INFO  14:48:23,812 - #23 ]
INFO  14:48:23,812 - #30 )
INFO  14:48:23,812 - #27 ;
INFO  14:48:23,812 - #31 if
INFO  14:48:23,812 - #29 (
INFO  14:48:23,812 - #8 a
INFO  14:48:23,812 - #22 [
INFO  14:48:23,812 - #8 i
INFO  14:48:23,812 - #23 ]
INFO  14:48:23,812 - #19 %
INFO  14:48:23,812 - #9 3
INFO  14:48:23,812 - #39 ==
INFO  14:48:23,812 - #9 0
INFO  14:48:23,812 - #30 )
INFO  14:48:23,812 - #3 print
INFO  14:48:23,812 - #29 (
INFO  14:48:23,812 - #8 a
INFO  14:48:23,812 - #22 [
INFO  14:48:23,812 - #8 i
INFO  14:48:23,812 - #23 ]
INFO  14:48:23,812 - #30 )
INFO  14:48:23,812 - #27 ;
INFO  14:48:23,812 - #32 else
INFO  14:48:23,812 - #3 print
INFO  14:48:23,812 - #29 (
INFO  14:48:23,812 - #8 max
INFO  14:48:23,812 - #29 (
INFO  14:48:23,812 - #8 a
INFO  14:48:23,812 - #22 [
INFO  14:48:23,812 - #8 i
INFO  14:48:23,812 - #23 ]
INFO  14:48:23,812 - #28 ,
INFO  14:48:23,812 - #9 0
INFO  14:48:23,822 - #30 )
INFO  14:48:23,822 - #30 )
INFO  14:48:23,822 - #27 ;
INFO  14:48:23,822 - #21 }
INFO  14:48:23,822 - #34 while
INFO  14:48:23,822 - #29 (
INFO  14:48:23,822 - #8 i
INFO  14:48:23,822 - #42 <=
INFO  14:48:23,822 - #8 length
INFO  14:48:23,822 - #16 -
INFO  14:48:23,822 - #9 1
INFO  14:48:23,822 - #30 )
INFO  14:48:23,822 - #27 ;
INFO  14:48:23,822 - #3 print
INFO  14:48:23,822 - #29 (
INFO  14:48:23,822 - #8 d
INFO  14:48:23,822 - #30 )
INFO  14:48:23,822 - #27 ;
INFO  14:48:23,822 - #21 }
INFO  14:48:23,822 - #21 }
INFO  14:48:56,895 - #2 program
INFO  14:48:56,895 - #8 Program
INFO  14:48:56,895 - #20 {
INFO  14:48:56,895 - #5 const
INFO  14:48:56,895 - #8 int
INFO  14:48:56,895 - #8 c
INFO  14:48:56,895 - #24 =
INFO  14:48:56,895 - #9 10
INFO  14:48:56,895 - #27 ;
INFO  14:48:56,895 - #5 const
INFO  14:48:56,895 - #8 int
INFO  14:48:56,895 - #8 d
INFO  14:48:56,895 - #24 =
INFO  14:48:56,895 - #9 99
INFO  14:48:56,895 - #28 ,
INFO  14:48:56,895 - #8 eps
INFO  14:48:56,895 - #24 =
INFO  14:48:56,895 - #9 2
INFO  14:48:56,895 - #27 ;
INFO  14:48:56,905 - #8 int
INFO  14:48:56,905 - #8 e
INFO  14:48:56,905 - #27 ;
INFO  14:48:56,905 - #6 void
INFO  14:48:56,905 - #8 test
INFO  14:48:56,905 - #29 (
INFO  14:48:56,905 - #30 )
INFO  14:48:56,905 - #20 {
INFO  14:48:56,905 - #8 int
INFO  14:48:56,905 - #8 a
INFO  14:48:56,905 - #28 ,
INFO  14:48:56,905 - #8 b
INFO  14:48:56,905 - #28 ,
INFO  14:48:56,905 - #8 bool
INFO  14:48:56,905 - #8 cond
ERROR 14:48:56,905 - Sintaksna greska na liniji 7, koloni 8 za simbol "cond"!
INFO  14:48:56,905 - #27 ;
INFO  14:48:56,905 - #8 a
INFO  14:48:56,905 - #24 =
INFO  14:48:56,905 - #9 3
ERROR 14:48:56,905 - Sintaksna greska - neispravno ime promenljive na liniji 7, koloni 8 za simbol "cond"!
INFO  14:48:56,905 - #27 ;
INFO  14:48:56,905 - #8 b
INFO  14:48:56,905 - #24 =
INFO  14:48:56,905 - #9 5
INFO  14:48:56,905 - #27 ;
INFO  14:48:56,905 - #8 cond
INFO  14:48:56,905 - #24 =
INFO  14:48:56,905 - #11 true
INFO  14:48:56,905 - #27 ;
INFO  14:48:56,905 - #31 if
INFO  14:48:56,905 - #29 (
INFO  14:48:56,905 - #9 2
INFO  14:48:56,905 - #17 *
INFO  14:48:56,905 - #29 (
INFO  14:48:56,905 - #8 a
INFO  14:48:56,915 - #16 -
INFO  14:48:56,915 - #8 b
INFO  14:48:56,915 - #16 -
INFO  14:48:56,915 - #9 1
INFO  14:48:56,915 - #30 )
INFO  14:48:56,915 - #16 -
INFO  14:48:56,915 - #9 14
INFO  14:48:56,915 - #38 >
INFO  14:48:56,915 - #9 0
INFO  14:48:56,915 - #14 ||
INFO  14:48:56,915 - #8 cond
INFO  14:48:56,915 - #30 )
INFO  14:48:56,915 - #3 print
INFO  14:48:56,915 - #29 (
INFO  14:48:56,915 - #8 a
INFO  14:48:56,915 - #15 +
INFO  14:48:56,915 - #8 b
INFO  14:48:56,915 - #30 )
INFO  14:48:56,915 - #27 ;
INFO  14:48:56,915 - #21 }
INFO  14:48:56,915 - #8 int
INFO  14:48:56,915 - #8 max
INFO  14:48:56,925 - #29 (
INFO  14:48:56,925 - #8 int
INFO  14:48:56,925 - #8 a
INFO  14:48:56,925 - #27 ;
ERROR 14:48:56,925 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  14:48:56,925 - #8 int
INFO  14:48:56,925 - #8 b
INFO  14:48:56,925 - #30 )
INFO  14:48:56,925 - #20 {
INFO  14:48:56,925 - #31 if
INFO  14:48:56,925 - #29 (
ERROR 14:48:56,925 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  14:48:56,925 - #8 a
INFO  14:48:56,925 - #38 >
INFO  14:48:56,925 - #9 0
INFO  14:48:56,925 - #8 b
ERROR 14:48:56,925 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  14:48:56,925 - #30 )
INFO  14:48:56,925 - #20 {
INFO  14:48:56,925 - #37 return
INFO  14:48:56,925 - #8 a
ERROR 14:48:56,925 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  14:48:56,925 - #27 ;
INFO  14:48:56,925 - #21 }
INFO  14:48:56,925 - #32 else
ERROR 14:48:56,925 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  14:48:56,925 - #37 return
INFO  14:48:56,925 - #8 b
INFO  14:48:56,925 - #27 ;
INFO  14:48:56,925 - #21 }
INFO  14:48:56,925 - #8 int
INFO  14:48:56,925 - #8 min
INFO  14:48:56,925 - #29 (
INFO  14:48:56,925 - #8 int
INFO  14:48:56,925 - #8 a
INFO  14:48:56,925 - #28 ,
INFO  14:48:56,925 - #8 int
INFO  14:48:56,925 - #8 b
INFO  14:48:56,925 - #30 )
ERROR 14:48:56,925 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  14:48:56,925 - #20 {
INFO  14:48:56,925 - #31 if
INFO  14:48:56,925 - #29 (
INFO  14:48:56,925 - #8 a
INFO  14:48:56,925 - #40 <
INFO  14:48:56,925 - #8 b
INFO  14:48:56,925 - #30 )
INFO  14:48:56,925 - #20 {
INFO  14:48:56,925 - #37 return
INFO  14:48:56,925 - #8 a
INFO  14:48:56,925 - #27 ;
INFO  14:48:56,925 - #21 }
INFO  14:48:56,925 - #32 else
INFO  14:48:56,925 - #20 {
INFO  14:48:56,925 - #37 return
INFO  14:48:56,925 - #8 b
INFO  14:48:56,925 - #27 ;
INFO  14:48:56,925 - #21 }
INFO  14:48:56,925 - #21 }
INFO  14:48:56,925 - #6 void
INFO  14:48:56,925 - #8 main
INFO  14:48:56,925 - #29 (
INFO  14:48:56,925 - #30 )
INFO  14:48:56,925 - #20 {
INFO  14:48:56,925 - #8 int
INFO  14:48:56,925 - #8 a
INFO  14:48:56,925 - #22 [
INFO  14:48:56,925 - #23 ]
INFO  14:48:56,925 - #27 ;
INFO  14:48:56,925 - #8 int
INFO  14:48:56,925 - #8 length
INFO  14:48:56,925 - #27 ;
INFO  14:48:56,935 - #8 length
INFO  14:48:56,935 - #24 =
INFO  14:48:56,935 - #8 c
INFO  14:48:56,935 - #27 ;
INFO  14:48:56,935 - #8 test
INFO  14:48:56,935 - #29 (
INFO  14:48:56,935 - #30 )
INFO  14:48:56,935 - #27 ;
INFO  14:48:56,935 - #31 if
INFO  14:48:56,935 - #29 (
INFO  14:48:56,935 - #8 length
INFO  14:48:56,935 - #38 >
INFO  14:48:56,935 - #9 0
INFO  14:48:56,935 - #13 &&
INFO  14:48:56,935 - #8 length
INFO  14:48:56,935 - #42 <=
INFO  14:48:56,935 - #8 d
INFO  14:48:56,935 - #30 )
INFO  14:48:56,935 - #8 a
INFO  14:48:56,935 - #24 =
INFO  14:48:56,935 - #7 new
INFO  14:48:56,935 - #8 int
INFO  14:48:56,935 - #22 [
INFO  14:48:56,935 - #8 length
INFO  14:48:56,935 - #23 ]
INFO  14:48:56,935 - #27 ;
INFO  14:48:56,935 - #32 else
INFO  14:48:56,935 - #8 a
INFO  14:48:56,935 - #24 =
INFO  14:48:56,935 - #7 new
INFO  14:48:56,935 - #8 int
INFO  14:48:56,935 - #22 [
INFO  14:48:56,935 - #9 5
INFO  14:48:56,935 - #23 ]
INFO  14:48:56,935 - #27 ;
INFO  14:48:56,935 - #33 do
INFO  14:48:56,935 - #20 {
INFO  14:48:56,935 - #4 read
INFO  14:48:56,935 - #29 (
INFO  14:48:56,935 - #8 a
INFO  14:48:56,935 - #22 [
INFO  14:48:56,935 - #8 i
INFO  14:48:56,935 - #23 ]
INFO  14:48:56,935 - #30 )
INFO  14:48:56,935 - #27 ;
INFO  14:48:56,935 - #31 if
INFO  14:48:56,935 - #29 (
INFO  14:48:56,935 - #8 a
INFO  14:48:56,935 - #22 [
INFO  14:48:56,935 - #8 i
INFO  14:48:56,935 - #23 ]
INFO  14:48:56,935 - #19 %
INFO  14:48:56,935 - #9 3
INFO  14:48:56,935 - #39 ==
INFO  14:48:56,935 - #9 0
INFO  14:48:56,935 - #30 )
INFO  14:48:56,935 - #3 print
INFO  14:48:56,935 - #29 (
INFO  14:48:56,935 - #8 a
INFO  14:48:56,935 - #22 [
INFO  14:48:56,935 - #8 i
INFO  14:48:56,935 - #23 ]
INFO  14:48:56,935 - #30 )
INFO  14:48:56,935 - #27 ;
INFO  14:48:56,935 - #32 else
INFO  14:48:56,935 - #3 print
INFO  14:48:56,935 - #29 (
INFO  14:48:56,935 - #8 max
INFO  14:48:56,935 - #29 (
INFO  14:48:56,935 - #8 a
INFO  14:48:56,935 - #22 [
INFO  14:48:56,935 - #8 i
INFO  14:48:56,935 - #23 ]
INFO  14:48:56,935 - #28 ,
INFO  14:48:56,935 - #9 0
INFO  14:48:56,935 - #30 )
INFO  14:48:56,935 - #30 )
INFO  14:48:56,935 - #27 ;
INFO  14:48:56,935 - #21 }
INFO  14:48:56,935 - #34 while
INFO  14:48:56,935 - #29 (
INFO  14:48:56,935 - #8 i
INFO  14:48:56,935 - #42 <=
INFO  14:48:56,935 - #8 length
INFO  14:48:56,935 - #16 -
INFO  14:48:56,935 - #9 1
INFO  14:48:56,935 - #30 )
INFO  14:48:56,935 - #27 ;
INFO  14:48:56,935 - #3 print
INFO  14:48:56,935 - #29 (
INFO  14:48:56,935 - #8 d
INFO  14:48:56,935 - #30 )
INFO  14:48:56,935 - #27 ;
INFO  14:48:56,935 - #21 }
INFO  14:48:56,935 - #21 }
INFO  14:49:59,908 - #2 program
INFO  14:49:59,908 - #8 Program
INFO  14:49:59,908 - #20 {
INFO  14:49:59,908 - #5 const
INFO  14:49:59,908 - #8 int
INFO  14:49:59,908 - #8 c
INFO  14:49:59,908 - #24 =
INFO  14:49:59,908 - #9 10
INFO  14:49:59,908 - #27 ;
INFO  14:49:59,908 - #5 const
INFO  14:49:59,918 - #8 int
INFO  14:49:59,918 - #8 d
INFO  14:49:59,918 - #24 =
INFO  14:49:59,918 - #9 99
INFO  14:49:59,918 - #28 ,
INFO  14:49:59,918 - #8 eps
INFO  14:49:59,918 - #24 =
INFO  14:49:59,918 - #9 2
INFO  14:49:59,918 - #27 ;
INFO  14:49:59,918 - #8 int
INFO  14:49:59,918 - #8 e
INFO  14:49:59,918 - #27 ;
INFO  14:49:59,918 - #6 void
INFO  14:49:59,918 - #8 test
INFO  14:49:59,918 - #29 (
INFO  14:49:59,918 - #30 )
INFO  14:49:59,918 - #20 {
INFO  14:49:59,918 - #8 int
INFO  14:49:59,918 - #8 a
INFO  14:49:59,918 - #28 ,
INFO  14:49:59,918 - #8 bool
INFO  14:49:59,918 - #8 cond
ERROR 14:49:59,918 - Sintaksna greska na liniji 7, koloni 8 za simbol "cond"!
INFO  14:49:59,918 - #27 ;
INFO  14:49:59,918 - #8 a
INFO  14:49:59,918 - #24 =
INFO  14:49:59,918 - #9 3
ERROR 14:49:59,918 - Sintaksna greska - neispravno ime promenljive na liniji 7, koloni 8 za simbol "cond"!
INFO  14:49:59,918 - #27 ;
INFO  14:49:59,918 - #8 b
INFO  14:49:59,918 - #24 =
INFO  14:49:59,918 - #9 5
INFO  14:49:59,918 - #27 ;
INFO  14:49:59,918 - #8 cond
INFO  14:49:59,918 - #24 =
INFO  14:49:59,918 - #11 true
INFO  14:49:59,918 - #27 ;
INFO  14:49:59,918 - #31 if
INFO  14:49:59,918 - #29 (
INFO  14:49:59,918 - #9 2
INFO  14:49:59,918 - #17 *
INFO  14:49:59,918 - #29 (
INFO  14:49:59,918 - #8 a
INFO  14:49:59,918 - #16 -
INFO  14:49:59,918 - #8 b
INFO  14:49:59,928 - #16 -
INFO  14:49:59,928 - #9 1
INFO  14:49:59,928 - #30 )
INFO  14:49:59,928 - #16 -
INFO  14:49:59,928 - #9 14
INFO  14:49:59,928 - #38 >
INFO  14:49:59,928 - #9 0
INFO  14:49:59,928 - #14 ||
INFO  14:49:59,928 - #8 cond
INFO  14:49:59,928 - #30 )
INFO  14:49:59,928 - #3 print
INFO  14:49:59,928 - #29 (
INFO  14:49:59,928 - #8 a
INFO  14:49:59,928 - #15 +
INFO  14:49:59,928 - #8 b
INFO  14:49:59,928 - #30 )
INFO  14:49:59,928 - #27 ;
INFO  14:49:59,928 - #21 }
INFO  14:49:59,928 - #8 int
INFO  14:49:59,928 - #8 max
INFO  14:49:59,928 - #29 (
INFO  14:49:59,928 - #8 int
INFO  14:49:59,928 - #8 a
INFO  14:49:59,928 - #27 ;
ERROR 14:49:59,928 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  14:49:59,928 - #8 int
INFO  14:49:59,928 - #8 b
INFO  14:49:59,928 - #30 )
INFO  14:49:59,928 - #20 {
INFO  14:49:59,928 - #31 if
INFO  14:49:59,928 - #29 (
ERROR 14:49:59,928 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  14:49:59,938 - #8 a
INFO  14:49:59,938 - #38 >
INFO  14:49:59,938 - #9 0
INFO  14:49:59,938 - #8 b
ERROR 14:49:59,938 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  14:49:59,938 - #30 )
INFO  14:49:59,938 - #20 {
INFO  14:49:59,938 - #37 return
INFO  14:49:59,938 - #8 a
ERROR 14:49:59,938 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  14:49:59,938 - #27 ;
INFO  14:49:59,938 - #21 }
INFO  14:49:59,938 - #32 else
ERROR 14:49:59,938 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  14:49:59,938 - #37 return
INFO  14:49:59,938 - #8 b
INFO  14:49:59,938 - #27 ;
INFO  14:49:59,938 - #21 }
INFO  14:49:59,938 - #8 int
INFO  14:49:59,938 - #8 min
INFO  14:49:59,938 - #29 (
INFO  14:49:59,938 - #8 int
INFO  14:49:59,938 - #8 a
INFO  14:49:59,938 - #28 ,
INFO  14:49:59,938 - #8 int
INFO  14:49:59,938 - #8 b
INFO  14:49:59,938 - #30 )
ERROR 14:49:59,938 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  14:49:59,938 - #20 {
INFO  14:49:59,938 - #31 if
INFO  14:49:59,938 - #29 (
INFO  14:49:59,938 - #8 a
INFO  14:49:59,938 - #40 <
INFO  14:49:59,938 - #8 b
INFO  14:49:59,938 - #30 )
INFO  14:49:59,938 - #20 {
INFO  14:49:59,938 - #37 return
INFO  14:49:59,938 - #8 a
INFO  14:49:59,938 - #27 ;
INFO  14:49:59,938 - #21 }
INFO  14:49:59,938 - #32 else
INFO  14:49:59,938 - #20 {
INFO  14:49:59,938 - #37 return
INFO  14:49:59,938 - #8 b
INFO  14:49:59,938 - #27 ;
INFO  14:49:59,938 - #21 }
INFO  14:49:59,938 - #21 }
INFO  14:49:59,938 - #6 void
INFO  14:49:59,938 - #8 main
INFO  14:49:59,938 - #29 (
INFO  14:49:59,938 - #30 )
INFO  14:49:59,938 - #20 {
INFO  14:49:59,938 - #8 int
INFO  14:49:59,938 - #8 a
INFO  14:49:59,938 - #22 [
INFO  14:49:59,938 - #23 ]
INFO  14:49:59,938 - #27 ;
INFO  14:49:59,938 - #8 int
INFO  14:49:59,938 - #8 length
INFO  14:49:59,938 - #27 ;
INFO  14:49:59,938 - #8 length
INFO  14:49:59,938 - #24 =
INFO  14:49:59,938 - #8 c
INFO  14:49:59,938 - #27 ;
INFO  14:49:59,938 - #8 test
INFO  14:49:59,938 - #29 (
INFO  14:49:59,938 - #30 )
INFO  14:49:59,938 - #27 ;
INFO  14:49:59,938 - #31 if
INFO  14:49:59,938 - #29 (
INFO  14:49:59,938 - #8 length
INFO  14:49:59,938 - #38 >
INFO  14:49:59,938 - #9 0
INFO  14:49:59,938 - #13 &&
INFO  14:49:59,938 - #8 length
INFO  14:49:59,938 - #42 <=
INFO  14:49:59,938 - #8 d
INFO  14:49:59,938 - #30 )
INFO  14:49:59,938 - #8 a
INFO  14:49:59,938 - #24 =
INFO  14:49:59,938 - #7 new
INFO  14:49:59,938 - #8 int
INFO  14:49:59,938 - #22 [
INFO  14:49:59,938 - #8 length
INFO  14:49:59,938 - #23 ]
INFO  14:49:59,938 - #27 ;
INFO  14:49:59,938 - #32 else
INFO  14:49:59,938 - #8 a
INFO  14:49:59,938 - #24 =
INFO  14:49:59,938 - #7 new
INFO  14:49:59,938 - #8 int
INFO  14:49:59,938 - #22 [
INFO  14:49:59,938 - #9 5
INFO  14:49:59,938 - #23 ]
INFO  14:49:59,938 - #27 ;
INFO  14:49:59,938 - #33 do
INFO  14:49:59,938 - #20 {
INFO  14:49:59,938 - #4 read
INFO  14:49:59,938 - #29 (
INFO  14:49:59,948 - #8 a
INFO  14:49:59,948 - #22 [
INFO  14:49:59,948 - #8 i
INFO  14:49:59,948 - #23 ]
INFO  14:49:59,948 - #30 )
INFO  14:49:59,948 - #27 ;
INFO  14:49:59,948 - #31 if
INFO  14:49:59,948 - #29 (
INFO  14:49:59,948 - #8 a
INFO  14:49:59,948 - #22 [
INFO  14:49:59,948 - #8 i
INFO  14:49:59,948 - #23 ]
INFO  14:49:59,948 - #19 %
INFO  14:49:59,948 - #9 3
INFO  14:49:59,948 - #39 ==
INFO  14:49:59,948 - #9 0
INFO  14:49:59,948 - #30 )
INFO  14:49:59,948 - #3 print
INFO  14:49:59,948 - #29 (
INFO  14:49:59,948 - #8 a
INFO  14:49:59,948 - #22 [
INFO  14:49:59,948 - #8 i
INFO  14:49:59,948 - #23 ]
INFO  14:49:59,948 - #30 )
INFO  14:49:59,948 - #27 ;
INFO  14:49:59,948 - #32 else
INFO  14:49:59,948 - #3 print
INFO  14:49:59,948 - #29 (
INFO  14:49:59,948 - #8 max
INFO  14:49:59,948 - #29 (
INFO  14:49:59,948 - #8 a
INFO  14:49:59,948 - #22 [
INFO  14:49:59,948 - #8 i
INFO  14:49:59,948 - #23 ]
INFO  14:49:59,948 - #28 ,
INFO  14:49:59,948 - #9 0
INFO  14:49:59,948 - #30 )
INFO  14:49:59,948 - #30 )
INFO  14:49:59,948 - #27 ;
INFO  14:49:59,948 - #21 }
INFO  14:49:59,948 - #34 while
INFO  14:49:59,948 - #29 (
INFO  14:49:59,948 - #8 i
INFO  14:49:59,948 - #42 <=
INFO  14:49:59,948 - #8 length
INFO  14:49:59,948 - #16 -
INFO  14:49:59,948 - #9 1
INFO  14:49:59,948 - #30 )
INFO  14:49:59,948 - #27 ;
INFO  14:49:59,948 - #3 print
INFO  14:49:59,948 - #29 (
INFO  14:49:59,948 - #8 d
INFO  14:49:59,948 - #30 )
INFO  14:49:59,948 - #27 ;
INFO  14:49:59,948 - #21 }
INFO  14:49:59,948 - #21 }
INFO  14:54:17,185 - #2 program
INFO  14:54:17,185 - #8 Program
INFO  14:54:17,185 - #20 {
INFO  14:54:17,185 - #5 const
INFO  14:54:17,185 - #8 int
INFO  14:54:17,185 - #8 c
INFO  14:54:17,185 - #24 =
INFO  14:54:17,195 - #9 10
INFO  14:54:17,195 - #27 ;
INFO  14:54:17,195 - #5 const
INFO  14:54:17,195 - #8 int
INFO  14:54:17,195 - #8 d
INFO  14:54:17,195 - #24 =
INFO  14:54:17,195 - #9 99
INFO  14:54:17,195 - #28 ,
INFO  14:54:17,195 - #8 eps
INFO  14:54:17,195 - #24 =
INFO  14:54:17,195 - #9 2
INFO  14:54:17,195 - #27 ;
INFO  14:54:17,195 - #8 int
INFO  14:54:17,195 - #8 e
INFO  14:54:17,195 - #27 ;
INFO  14:54:17,195 - #6 void
INFO  14:54:17,195 - #8 test
INFO  14:54:17,195 - #29 (
INFO  14:54:17,195 - #30 )
INFO  14:54:17,195 - #20 {
INFO  14:54:17,195 - #8 int
INFO  14:54:17,195 - #8 a
INFO  14:54:17,195 - #28 ,
INFO  14:54:17,195 - #29 (
ERROR 14:54:17,195 - Sintaksna greska na liniji 6, koloni 10 za simbol "("!
INFO  14:54:17,195 - #30 )
INFO  14:54:17,195 - #8 bool
INFO  14:54:17,195 - #8 cond
INFO  14:54:17,195 - #27 ;
INFO  14:54:17,195 - #8 a
INFO  14:54:17,195 - #24 =
INFO  14:54:17,195 - #9 3
ERROR 14:54:17,195 - Sintaksna greska - neispravno ime promenljive na liniji 6, koloni 10 za simbol "("!
INFO  14:54:17,195 - #27 ;
INFO  14:54:17,195 - #8 b
INFO  14:54:17,195 - #24 =
INFO  14:54:17,195 - #9 5
INFO  14:54:17,195 - #27 ;
INFO  14:54:17,195 - #8 cond
INFO  14:54:17,195 - #24 =
INFO  14:54:17,195 - #11 true
INFO  14:54:17,195 - #27 ;
INFO  14:54:17,195 - #31 if
INFO  14:54:17,195 - #29 (
INFO  14:54:17,195 - #9 2
INFO  14:54:17,195 - #17 *
INFO  14:54:17,195 - #29 (
INFO  14:54:17,205 - #8 a
INFO  14:54:17,205 - #16 -
INFO  14:54:17,205 - #8 b
INFO  14:54:17,205 - #16 -
INFO  14:54:17,205 - #9 1
INFO  14:54:17,205 - #30 )
INFO  14:54:17,205 - #16 -
INFO  14:54:17,205 - #9 14
INFO  14:54:17,205 - #38 >
INFO  14:54:17,205 - #9 0
INFO  14:54:17,205 - #14 ||
INFO  14:54:17,205 - #8 cond
INFO  14:54:17,205 - #30 )
INFO  14:54:17,205 - #3 print
INFO  14:54:17,205 - #29 (
INFO  14:54:17,205 - #8 a
INFO  14:54:17,205 - #15 +
INFO  14:54:17,205 - #8 b
INFO  14:54:17,205 - #30 )
INFO  14:54:17,205 - #27 ;
INFO  14:54:17,205 - #21 }
INFO  14:54:17,205 - #8 int
INFO  14:54:17,205 - #8 max
INFO  14:54:17,215 - #29 (
INFO  14:54:17,215 - #8 int
INFO  14:54:17,215 - #8 a
INFO  14:54:17,215 - #27 ;
ERROR 14:54:17,215 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  14:54:17,215 - #8 int
INFO  14:54:17,215 - #8 b
INFO  14:54:17,215 - #30 )
INFO  14:54:17,215 - #20 {
INFO  14:54:17,215 - #31 if
INFO  14:54:17,215 - #29 (
ERROR 14:54:17,215 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  14:54:17,215 - #8 a
INFO  14:54:17,215 - #38 >
INFO  14:54:17,215 - #9 0
INFO  14:54:17,215 - #8 b
ERROR 14:54:17,215 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  14:54:17,215 - #30 )
INFO  14:54:17,215 - #20 {
INFO  14:54:17,215 - #37 return
INFO  14:54:17,215 - #8 a
ERROR 14:54:17,215 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  14:54:17,215 - #27 ;
INFO  14:54:17,215 - #21 }
INFO  14:54:17,215 - #32 else
ERROR 14:54:17,215 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  14:54:17,215 - #37 return
INFO  14:54:17,215 - #8 b
INFO  14:54:17,215 - #27 ;
INFO  14:54:17,215 - #21 }
INFO  14:54:17,215 - #8 int
INFO  14:54:17,215 - #8 min
INFO  14:54:17,215 - #29 (
INFO  14:54:17,215 - #8 int
INFO  14:54:17,215 - #8 a
INFO  14:54:17,215 - #28 ,
INFO  14:54:17,215 - #8 int
INFO  14:54:17,215 - #8 b
INFO  14:54:17,215 - #30 )
ERROR 14:54:17,215 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  14:54:17,215 - #20 {
INFO  14:54:17,215 - #31 if
INFO  14:54:17,215 - #29 (
INFO  14:54:17,215 - #8 a
INFO  14:54:17,215 - #40 <
INFO  14:54:17,215 - #8 b
INFO  14:54:17,215 - #30 )
INFO  14:54:17,215 - #20 {
INFO  14:54:17,215 - #37 return
INFO  14:54:17,215 - #8 a
INFO  14:54:17,215 - #27 ;
INFO  14:54:17,215 - #21 }
INFO  14:54:17,215 - #32 else
INFO  14:54:17,215 - #20 {
INFO  14:54:17,215 - #37 return
INFO  14:54:17,215 - #8 b
INFO  14:54:17,215 - #27 ;
INFO  14:54:17,215 - #21 }
INFO  14:54:17,215 - #21 }
INFO  14:54:17,215 - #6 void
INFO  14:54:17,215 - #8 main
INFO  14:54:17,215 - #29 (
INFO  14:54:17,215 - #30 )
INFO  14:54:17,215 - #20 {
INFO  14:54:17,215 - #8 int
INFO  14:54:17,215 - #8 a
INFO  14:54:17,215 - #22 [
INFO  14:54:17,215 - #23 ]
INFO  14:54:17,215 - #27 ;
INFO  14:54:17,215 - #8 int
INFO  14:54:17,215 - #8 length
INFO  14:54:17,215 - #27 ;
INFO  14:54:17,215 - #8 length
INFO  14:54:17,215 - #24 =
INFO  14:54:17,215 - #8 c
INFO  14:54:17,215 - #27 ;
INFO  14:54:17,215 - #8 test
INFO  14:54:17,215 - #29 (
INFO  14:54:17,215 - #30 )
INFO  14:54:17,215 - #27 ;
INFO  14:54:17,215 - #31 if
INFO  14:54:17,215 - #29 (
INFO  14:54:17,215 - #8 length
INFO  14:54:17,215 - #38 >
INFO  14:54:17,225 - #9 0
INFO  14:54:17,225 - #13 &&
INFO  14:54:17,225 - #8 length
INFO  14:54:17,225 - #42 <=
INFO  14:54:17,225 - #8 d
INFO  14:54:17,225 - #30 )
INFO  14:54:17,225 - #8 a
INFO  14:54:17,225 - #24 =
INFO  14:54:17,225 - #7 new
INFO  14:54:17,225 - #8 int
INFO  14:54:17,225 - #22 [
INFO  14:54:17,225 - #8 length
INFO  14:54:17,225 - #23 ]
INFO  14:54:17,225 - #27 ;
INFO  14:54:17,225 - #32 else
INFO  14:54:17,225 - #8 a
INFO  14:54:17,225 - #24 =
INFO  14:54:17,225 - #7 new
INFO  14:54:17,225 - #8 int
INFO  14:54:17,225 - #22 [
INFO  14:54:17,225 - #9 5
INFO  14:54:17,225 - #23 ]
INFO  14:54:17,225 - #27 ;
INFO  14:54:17,225 - #33 do
INFO  14:54:17,225 - #20 {
INFO  14:54:17,225 - #4 read
INFO  14:54:17,225 - #29 (
INFO  14:54:17,225 - #8 a
INFO  14:54:17,225 - #22 [
INFO  14:54:17,225 - #8 i
INFO  14:54:17,225 - #23 ]
INFO  14:54:17,225 - #30 )
INFO  14:54:17,225 - #27 ;
INFO  14:54:17,225 - #31 if
INFO  14:54:17,225 - #29 (
INFO  14:54:17,225 - #8 a
INFO  14:54:17,225 - #22 [
INFO  14:54:17,225 - #8 i
INFO  14:54:17,225 - #23 ]
INFO  14:54:17,225 - #19 %
INFO  14:54:17,225 - #9 3
INFO  14:54:17,225 - #39 ==
INFO  14:54:17,225 - #9 0
INFO  14:54:17,225 - #30 )
INFO  14:54:17,225 - #3 print
INFO  14:54:17,225 - #29 (
INFO  14:54:17,225 - #8 a
INFO  14:54:17,225 - #22 [
INFO  14:54:17,225 - #8 i
INFO  14:54:17,225 - #23 ]
INFO  14:54:17,225 - #30 )
INFO  14:54:17,225 - #27 ;
INFO  14:54:17,225 - #32 else
INFO  14:54:17,225 - #3 print
INFO  14:54:17,225 - #29 (
INFO  14:54:17,225 - #8 max
INFO  14:54:17,225 - #29 (
INFO  14:54:17,225 - #8 a
INFO  14:54:17,225 - #22 [
INFO  14:54:17,225 - #8 i
INFO  14:54:17,225 - #23 ]
INFO  14:54:17,225 - #28 ,
INFO  14:54:17,225 - #9 0
INFO  14:54:17,225 - #30 )
INFO  14:54:17,225 - #30 )
INFO  14:54:17,225 - #27 ;
INFO  14:54:17,225 - #21 }
INFO  14:54:17,225 - #34 while
INFO  14:54:17,225 - #29 (
INFO  14:54:17,225 - #8 i
INFO  14:54:17,225 - #42 <=
INFO  14:54:17,225 - #8 length
INFO  14:54:17,225 - #16 -
INFO  14:54:17,225 - #9 1
INFO  14:54:17,225 - #30 )
INFO  14:54:17,225 - #27 ;
INFO  14:54:17,225 - #3 print
INFO  14:54:17,225 - #29 (
INFO  14:54:17,225 - #8 d
INFO  14:54:17,225 - #30 )
INFO  14:54:17,225 - #27 ;
INFO  14:54:17,225 - #21 }
INFO  14:54:17,225 - #21 }
INFO  14:54:55,751 - #2 program
INFO  14:54:55,751 - #8 Program
INFO  14:54:55,751 - #20 {
INFO  14:54:55,751 - #5 const
INFO  14:54:55,751 - #8 int
INFO  14:54:55,751 - #8 c
INFO  14:54:55,751 - #24 =
INFO  14:54:55,751 - #9 10
INFO  14:54:55,751 - #27 ;
INFO  14:54:55,751 - #5 const
INFO  14:54:55,751 - #8 int
INFO  14:54:55,751 - #8 d
INFO  14:54:55,751 - #24 =
INFO  14:54:55,751 - #9 99
INFO  14:54:55,751 - #28 ,
INFO  14:54:55,751 - #8 eps
INFO  14:54:55,751 - #24 =
INFO  14:54:55,751 - #9 2
INFO  14:54:55,751 - #27 ;
INFO  14:54:55,751 - #8 int
INFO  14:54:55,751 - #8 e
INFO  14:54:55,761 - #27 ;
INFO  14:54:55,761 - #6 void
INFO  14:54:55,761 - #8 test
INFO  14:54:55,761 - #29 (
INFO  14:54:55,761 - #30 )
INFO  14:54:55,761 - #20 {
INFO  14:54:55,761 - #8 int
INFO  14:54:55,761 - #8 a
INFO  14:54:55,761 - #28 ,
INFO  14:54:55,761 - #8 b
INFO  14:54:55,761 - #28 ,
INFO  14:54:55,761 - #8 bool
INFO  14:54:55,761 - #8 cond
ERROR 14:54:55,761 - Sintaksna greska na liniji 7, koloni 8 za simbol "cond"!
INFO  14:54:55,761 - #27 ;
INFO  14:54:55,761 - #8 a
INFO  14:54:55,761 - #24 =
INFO  14:54:55,761 - #9 3
ERROR 14:54:55,761 - Sintaksna greska - neispravno ime promenljive na liniji 7, koloni 8 za simbol "cond"!
INFO  14:54:55,761 - #27 ;
INFO  14:54:55,761 - #8 b
INFO  14:54:55,761 - #24 =
INFO  14:54:55,761 - #9 5
INFO  14:54:55,761 - #27 ;
INFO  14:54:55,761 - #8 cond
INFO  14:54:55,761 - #24 =
INFO  14:54:55,761 - #11 true
INFO  14:54:55,761 - #27 ;
INFO  14:54:55,761 - #31 if
INFO  14:54:55,761 - #29 (
INFO  14:54:55,761 - #9 2
INFO  14:54:55,771 - #17 *
INFO  14:54:55,771 - #29 (
INFO  14:54:55,771 - #8 a
INFO  14:54:55,771 - #16 -
INFO  14:54:55,771 - #8 b
INFO  14:54:55,771 - #16 -
INFO  14:54:55,771 - #9 1
INFO  14:54:55,771 - #30 )
INFO  14:54:55,771 - #16 -
INFO  14:54:55,771 - #9 14
INFO  14:54:55,771 - #38 >
INFO  14:54:55,771 - #9 0
INFO  14:54:55,771 - #14 ||
INFO  14:54:55,771 - #8 cond
INFO  14:54:55,771 - #30 )
INFO  14:54:55,771 - #3 print
INFO  14:54:55,771 - #29 (
INFO  14:54:55,771 - #8 a
INFO  14:54:55,771 - #15 +
INFO  14:54:55,771 - #8 b
INFO  14:54:55,771 - #30 )
INFO  14:54:55,771 - #27 ;
INFO  14:54:55,771 - #21 }
INFO  14:54:55,771 - #8 int
INFO  14:54:55,781 - #8 max
INFO  14:54:55,781 - #29 (
INFO  14:54:55,781 - #8 int
INFO  14:54:55,781 - #8 a
INFO  14:54:55,781 - #27 ;
ERROR 14:54:55,781 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  14:54:55,781 - #8 int
INFO  14:54:55,781 - #8 b
INFO  14:54:55,781 - #30 )
INFO  14:54:55,781 - #20 {
INFO  14:54:55,781 - #31 if
INFO  14:54:55,781 - #29 (
ERROR 14:54:55,781 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  14:54:55,781 - #8 a
INFO  14:54:55,781 - #38 >
INFO  14:54:55,781 - #9 0
INFO  14:54:55,781 - #8 b
ERROR 14:54:55,781 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  14:54:55,781 - #30 )
INFO  14:54:55,781 - #20 {
INFO  14:54:55,781 - #37 return
INFO  14:54:55,781 - #8 a
ERROR 14:54:55,781 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  14:54:55,781 - #27 ;
INFO  14:54:55,781 - #21 }
INFO  14:54:55,781 - #32 else
ERROR 14:54:55,781 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  14:54:55,781 - #37 return
INFO  14:54:55,781 - #8 b
INFO  14:54:55,781 - #27 ;
INFO  14:54:55,781 - #21 }
INFO  14:54:55,781 - #8 int
INFO  14:54:55,781 - #8 min
INFO  14:54:55,781 - #29 (
INFO  14:54:55,781 - #8 int
INFO  14:54:55,781 - #8 a
INFO  14:54:55,781 - #28 ,
INFO  14:54:55,781 - #8 int
INFO  14:54:55,781 - #8 b
INFO  14:54:55,781 - #30 )
ERROR 14:54:55,781 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  14:54:55,781 - #20 {
INFO  14:54:55,781 - #31 if
INFO  14:54:55,781 - #29 (
INFO  14:54:55,781 - #8 a
INFO  14:54:55,781 - #40 <
INFO  14:54:55,781 - #8 b
INFO  14:54:55,781 - #30 )
INFO  14:54:55,781 - #20 {
INFO  14:54:55,781 - #37 return
INFO  14:54:55,781 - #8 a
INFO  14:54:55,781 - #27 ;
INFO  14:54:55,781 - #21 }
INFO  14:54:55,781 - #32 else
INFO  14:54:55,781 - #20 {
INFO  14:54:55,781 - #37 return
INFO  14:54:55,781 - #8 b
INFO  14:54:55,781 - #27 ;
INFO  14:54:55,781 - #21 }
INFO  14:54:55,791 - #21 }
INFO  14:54:55,791 - #6 void
INFO  14:54:55,791 - #8 main
INFO  14:54:55,791 - #29 (
INFO  14:54:55,791 - #30 )
INFO  14:54:55,791 - #20 {
INFO  14:54:55,791 - #8 int
INFO  14:54:55,791 - #8 a
INFO  14:54:55,791 - #22 [
INFO  14:54:55,791 - #23 ]
INFO  14:54:55,791 - #27 ;
INFO  14:54:55,791 - #8 int
INFO  14:54:55,791 - #8 length
INFO  14:54:55,791 - #27 ;
INFO  14:54:55,791 - #8 length
INFO  14:54:55,791 - #24 =
INFO  14:54:55,791 - #8 c
INFO  14:54:55,791 - #27 ;
INFO  14:54:55,791 - #8 test
INFO  14:54:55,791 - #29 (
INFO  14:54:55,791 - #30 )
INFO  14:54:55,791 - #27 ;
INFO  14:54:55,791 - #31 if
INFO  14:54:55,791 - #29 (
INFO  14:54:55,791 - #8 length
INFO  14:54:55,791 - #38 >
INFO  14:54:55,791 - #9 0
INFO  14:54:55,791 - #13 &&
INFO  14:54:55,791 - #8 length
INFO  14:54:55,791 - #42 <=
INFO  14:54:55,791 - #8 d
INFO  14:54:55,791 - #30 )
INFO  14:54:55,791 - #8 a
INFO  14:54:55,791 - #24 =
INFO  14:54:55,791 - #7 new
INFO  14:54:55,791 - #8 int
INFO  14:54:55,791 - #22 [
INFO  14:54:55,791 - #8 length
INFO  14:54:55,791 - #23 ]
INFO  14:54:55,791 - #27 ;
INFO  14:54:55,791 - #32 else
INFO  14:54:55,791 - #8 a
INFO  14:54:55,791 - #24 =
INFO  14:54:55,791 - #7 new
INFO  14:54:55,791 - #8 int
INFO  14:54:55,791 - #22 [
INFO  14:54:55,791 - #9 5
INFO  14:54:55,791 - #23 ]
INFO  14:54:55,791 - #27 ;
INFO  14:54:55,791 - #33 do
INFO  14:54:55,791 - #20 {
INFO  14:54:55,791 - #4 read
INFO  14:54:55,791 - #29 (
INFO  14:54:55,791 - #8 a
INFO  14:54:55,791 - #22 [
INFO  14:54:55,791 - #8 i
INFO  14:54:55,791 - #23 ]
INFO  14:54:55,791 - #30 )
INFO  14:54:55,791 - #27 ;
INFO  14:54:55,791 - #31 if
INFO  14:54:55,791 - #29 (
INFO  14:54:55,791 - #8 a
INFO  14:54:55,791 - #22 [
INFO  14:54:55,791 - #8 i
INFO  14:54:55,791 - #23 ]
INFO  14:54:55,791 - #19 %
INFO  14:54:55,791 - #9 3
INFO  14:54:55,791 - #39 ==
INFO  14:54:55,791 - #9 0
INFO  14:54:55,791 - #30 )
INFO  14:54:55,791 - #3 print
INFO  14:54:55,791 - #29 (
INFO  14:54:55,791 - #8 a
INFO  14:54:55,801 - #22 [
INFO  14:54:55,801 - #8 i
INFO  14:54:55,801 - #23 ]
INFO  14:54:55,801 - #30 )
INFO  14:54:55,801 - #27 ;
INFO  14:54:55,801 - #32 else
INFO  14:54:55,801 - #3 print
INFO  14:54:55,801 - #29 (
INFO  14:54:55,801 - #8 max
INFO  14:54:55,801 - #29 (
INFO  14:54:55,801 - #8 a
INFO  14:54:55,801 - #22 [
INFO  14:54:55,801 - #8 i
INFO  14:54:55,801 - #23 ]
INFO  14:54:55,801 - #28 ,
INFO  14:54:55,801 - #9 0
INFO  14:54:55,801 - #30 )
INFO  14:54:55,801 - #30 )
INFO  14:54:55,801 - #27 ;
INFO  14:54:55,801 - #21 }
INFO  14:54:55,801 - #34 while
INFO  14:54:55,801 - #29 (
INFO  14:54:55,801 - #8 i
INFO  14:54:55,801 - #42 <=
INFO  14:54:55,801 - #8 length
INFO  14:54:55,801 - #16 -
INFO  14:54:55,801 - #9 1
INFO  14:54:55,801 - #30 )
INFO  14:54:55,801 - #27 ;
INFO  14:54:55,801 - #3 print
INFO  14:54:55,801 - #29 (
INFO  14:54:55,801 - #8 d
INFO  14:54:55,801 - #30 )
INFO  14:54:55,801 - #27 ;
INFO  14:54:55,801 - #21 }
INFO  14:54:55,801 - #21 }
INFO  14:56:35,457 - #2 program
INFO  14:56:35,457 - #8 Program
INFO  14:56:35,457 - #20 {
INFO  14:56:35,457 - #5 const
INFO  14:56:35,457 - #8 int
INFO  14:56:35,457 - #8 c
INFO  14:56:35,457 - #24 =
INFO  14:56:35,457 - #9 10
INFO  14:56:35,457 - #27 ;
INFO  14:56:35,457 - #5 const
INFO  14:56:35,467 - #8 int
INFO  14:56:35,467 - #8 d
INFO  14:56:35,467 - #24 =
INFO  14:56:35,467 - #9 99
INFO  14:56:35,467 - #28 ,
INFO  14:56:35,467 - #8 eps
INFO  14:56:35,467 - #24 =
INFO  14:56:35,467 - #9 2
INFO  14:56:35,467 - #27 ;
INFO  14:56:35,467 - #8 int
INFO  14:56:35,467 - #8 e
INFO  14:56:35,467 - #27 ;
INFO  14:56:35,467 - #6 void
INFO  14:56:35,467 - #8 test
INFO  14:56:35,467 - #29 (
INFO  14:56:35,467 - #30 )
INFO  14:56:35,467 - #20 {
INFO  14:56:35,467 - #8 int
INFO  14:56:35,467 - #8 a
INFO  14:56:35,467 - #28 ,
INFO  14:56:35,467 - #8 b
INFO  14:56:35,467 - #28 ,
INFO  14:56:35,467 - #8 bool
INFO  14:56:35,467 - #8 cond
ERROR 14:56:35,467 - Sintaksna greska na liniji 7, koloni 8 za simbol "cond"!
INFO  14:56:35,467 - #27 ;
INFO  14:56:35,467 - #8 a
INFO  14:56:35,467 - #24 =
INFO  14:56:35,467 - #9 3
ERROR 14:56:35,467 - Sintaksna greska - neispravno ime promenljive na liniji 7, koloni 8 za simbol "cond"!
INFO  14:56:35,467 - #27 ;
INFO  14:56:35,467 - #8 b
INFO  14:56:35,467 - #24 =
INFO  14:56:35,467 - #9 5
INFO  14:56:35,467 - #27 ;
INFO  14:56:35,467 - #8 cond
INFO  14:56:35,467 - #24 =
INFO  14:56:35,467 - #11 true
INFO  14:56:35,467 - #27 ;
INFO  14:56:35,467 - #31 if
INFO  14:56:35,467 - #29 (
INFO  14:56:35,467 - #9 2
INFO  14:56:35,467 - #17 *
INFO  14:56:35,467 - #29 (
INFO  14:56:35,477 - #8 a
INFO  14:56:35,477 - #16 -
INFO  14:56:35,477 - #8 b
INFO  14:56:35,477 - #16 -
INFO  14:56:35,477 - #9 1
INFO  14:56:35,477 - #30 )
INFO  14:56:35,477 - #16 -
INFO  14:56:35,477 - #9 14
INFO  14:56:35,477 - #38 >
INFO  14:56:35,477 - #9 0
INFO  14:56:35,477 - #14 ||
INFO  14:56:35,477 - #8 cond
INFO  14:56:35,477 - #30 )
INFO  14:56:35,477 - #3 print
INFO  14:56:35,477 - #29 (
INFO  14:56:35,477 - #8 a
INFO  14:56:35,477 - #15 +
INFO  14:56:35,477 - #8 b
INFO  14:56:35,477 - #30 )
INFO  14:56:35,477 - #27 ;
INFO  14:56:35,477 - #21 }
INFO  14:56:35,477 - #8 int
INFO  14:56:35,477 - #8 max
INFO  14:56:35,487 - #29 (
INFO  14:56:35,487 - #8 int
INFO  14:56:35,487 - #8 a
INFO  14:56:35,487 - #27 ;
ERROR 14:56:35,487 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  14:56:35,487 - #8 int
INFO  14:56:35,487 - #8 b
INFO  14:56:35,487 - #30 )
INFO  14:56:35,487 - #20 {
INFO  14:56:35,487 - #31 if
INFO  14:56:35,487 - #29 (
ERROR 14:56:35,487 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  14:56:35,487 - #8 a
INFO  14:56:35,487 - #38 >
INFO  14:56:35,487 - #9 0
INFO  14:56:35,487 - #8 b
ERROR 14:56:35,487 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  14:56:35,487 - #30 )
INFO  14:56:35,487 - #20 {
INFO  14:56:35,487 - #37 return
INFO  14:56:35,487 - #8 a
ERROR 14:56:35,487 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  14:56:35,487 - #27 ;
INFO  14:56:35,487 - #21 }
INFO  14:56:35,487 - #32 else
ERROR 14:56:35,487 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  14:56:35,487 - #37 return
INFO  14:56:35,487 - #8 b
INFO  14:56:35,487 - #27 ;
INFO  14:56:35,487 - #21 }
INFO  14:56:35,487 - #8 int
INFO  14:56:35,487 - #8 min
INFO  14:56:35,487 - #29 (
INFO  14:56:35,487 - #8 int
INFO  14:56:35,487 - #8 a
INFO  14:56:35,487 - #28 ,
INFO  14:56:35,487 - #8 int
INFO  14:56:35,487 - #8 b
INFO  14:56:35,487 - #30 )
ERROR 14:56:35,487 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  14:56:35,487 - #20 {
INFO  14:56:35,487 - #31 if
INFO  14:56:35,487 - #29 (
INFO  14:56:35,487 - #8 a
INFO  14:56:35,487 - #40 <
INFO  14:56:35,487 - #8 b
INFO  14:56:35,487 - #30 )
INFO  14:56:35,487 - #20 {
INFO  14:56:35,487 - #37 return
INFO  14:56:35,487 - #8 a
INFO  14:56:35,487 - #27 ;
INFO  14:56:35,487 - #21 }
INFO  14:56:35,487 - #32 else
INFO  14:56:35,487 - #20 {
INFO  14:56:35,487 - #37 return
INFO  14:56:35,487 - #8 b
INFO  14:56:35,487 - #27 ;
INFO  14:56:35,487 - #21 }
INFO  14:56:35,487 - #21 }
INFO  14:56:35,487 - #6 void
INFO  14:56:35,487 - #8 main
INFO  14:56:35,487 - #29 (
INFO  14:56:35,487 - #30 )
INFO  14:56:35,487 - #20 {
INFO  14:56:35,487 - #8 int
INFO  14:56:35,487 - #8 a
INFO  14:56:35,487 - #22 [
INFO  14:56:35,487 - #23 ]
INFO  14:56:35,487 - #27 ;
INFO  14:56:35,487 - #8 int
INFO  14:56:35,487 - #8 length
INFO  14:56:35,487 - #27 ;
INFO  14:56:35,487 - #8 length
INFO  14:56:35,487 - #24 =
INFO  14:56:35,487 - #8 c
INFO  14:56:35,487 - #27 ;
INFO  14:56:35,487 - #8 test
INFO  14:56:35,487 - #29 (
INFO  14:56:35,487 - #30 )
INFO  14:56:35,487 - #27 ;
INFO  14:56:35,487 - #31 if
INFO  14:56:35,487 - #29 (
INFO  14:56:35,487 - #8 length
INFO  14:56:35,487 - #38 >
INFO  14:56:35,487 - #9 0
INFO  14:56:35,487 - #13 &&
INFO  14:56:35,487 - #8 length
INFO  14:56:35,487 - #42 <=
INFO  14:56:35,487 - #8 d
INFO  14:56:35,497 - #30 )
INFO  14:56:35,497 - #8 a
INFO  14:56:35,497 - #24 =
INFO  14:56:35,497 - #7 new
INFO  14:56:35,497 - #8 int
INFO  14:56:35,497 - #22 [
INFO  14:56:35,497 - #8 length
INFO  14:56:35,497 - #23 ]
INFO  14:56:35,497 - #27 ;
INFO  14:56:35,497 - #32 else
INFO  14:56:35,497 - #8 a
INFO  14:56:35,497 - #24 =
INFO  14:56:35,497 - #7 new
INFO  14:56:35,497 - #8 int
INFO  14:56:35,497 - #22 [
INFO  14:56:35,497 - #9 5
INFO  14:56:35,497 - #23 ]
INFO  14:56:35,497 - #27 ;
INFO  14:56:35,497 - #33 do
INFO  14:56:35,497 - #20 {
INFO  14:56:35,497 - #4 read
INFO  14:56:35,497 - #29 (
INFO  14:56:35,497 - #8 a
INFO  14:56:35,497 - #22 [
INFO  14:56:35,497 - #8 i
INFO  14:56:35,497 - #23 ]
INFO  14:56:35,497 - #30 )
INFO  14:56:35,497 - #27 ;
INFO  14:56:35,497 - #31 if
INFO  14:56:35,497 - #29 (
INFO  14:56:35,497 - #8 a
INFO  14:56:35,497 - #22 [
INFO  14:56:35,497 - #8 i
INFO  14:56:35,497 - #23 ]
INFO  14:56:35,497 - #19 %
INFO  14:56:35,497 - #9 3
INFO  14:56:35,497 - #39 ==
INFO  14:56:35,497 - #9 0
INFO  14:56:35,497 - #30 )
INFO  14:56:35,497 - #3 print
INFO  14:56:35,497 - #29 (
INFO  14:56:35,497 - #8 a
INFO  14:56:35,497 - #22 [
INFO  14:56:35,497 - #8 i
INFO  14:56:35,497 - #23 ]
INFO  14:56:35,497 - #30 )
INFO  14:56:35,497 - #27 ;
INFO  14:56:35,497 - #32 else
INFO  14:56:35,497 - #3 print
INFO  14:56:35,497 - #29 (
INFO  14:56:35,497 - #8 max
INFO  14:56:35,497 - #29 (
INFO  14:56:35,497 - #8 a
INFO  14:56:35,497 - #22 [
INFO  14:56:35,497 - #8 i
INFO  14:56:35,497 - #23 ]
INFO  14:56:35,497 - #28 ,
INFO  14:56:35,497 - #9 0
INFO  14:56:35,497 - #30 )
INFO  14:56:35,497 - #30 )
INFO  14:56:35,497 - #27 ;
INFO  14:56:35,497 - #21 }
INFO  14:56:35,497 - #34 while
INFO  14:56:35,497 - #29 (
INFO  14:56:35,497 - #8 i
INFO  14:56:35,497 - #42 <=
INFO  14:56:35,497 - #8 length
INFO  14:56:35,497 - #16 -
INFO  14:56:35,497 - #9 1
INFO  14:56:35,497 - #30 )
INFO  14:56:35,497 - #27 ;
INFO  14:56:35,497 - #3 print
INFO  14:56:35,497 - #29 (
INFO  14:56:35,497 - #8 d
INFO  14:56:35,497 - #30 )
INFO  14:56:35,497 - #27 ;
INFO  14:56:35,497 - #21 }
INFO  14:56:35,497 - #21 }
INFO  14:59:06,183 - #2 program
INFO  14:59:06,183 - #8 Program
INFO  14:59:06,184 - #20 {
INFO  14:59:06,184 - #5 const
INFO  14:59:06,184 - #8 int
INFO  14:59:06,184 - #8 c
INFO  14:59:06,184 - #24 =
INFO  14:59:06,184 - #9 10
INFO  14:59:06,184 - #27 ;
INFO  14:59:06,185 - #5 const
INFO  14:59:06,185 - #8 int
INFO  14:59:06,186 - #8 d
INFO  14:59:06,186 - #24 =
INFO  14:59:06,186 - #9 99
INFO  14:59:06,186 - #28 ,
INFO  14:59:06,186 - #8 eps
INFO  14:59:06,186 - #24 =
INFO  14:59:06,186 - #9 2
INFO  14:59:06,186 - #27 ;
INFO  14:59:06,187 - #8 int
INFO  14:59:06,187 - #8 e
INFO  14:59:06,187 - #27 ;
INFO  14:59:06,187 - #6 void
INFO  14:59:06,188 - #8 test
INFO  14:59:06,188 - #29 (
INFO  14:59:06,188 - #30 )
INFO  14:59:06,188 - #20 {
INFO  14:59:06,188 - #8 int
INFO  14:59:06,188 - #8 a
INFO  14:59:06,188 - #28 ,
INFO  14:59:06,188 - #8 b
INFO  14:59:06,188 - #28 ,
INFO  14:59:06,189 - #8 bool
INFO  14:59:06,189 - #8 cond
ERROR 14:59:06,189 - Sintaksna greska na liniji 7, koloni 8 za simbol "cond"!
INFO  14:59:06,189 - #27 ;
INFO  14:59:06,189 - #8 a
INFO  14:59:06,189 - #24 =
INFO  14:59:06,190 - #9 3
ERROR 14:59:06,190 - Sintaksna greska - neispravno ime promenljive na liniji 7, koloni 8 za simbol "cond"!
INFO  14:59:06,191 - #27 ;
INFO  14:59:06,192 - #8 b
INFO  14:59:06,192 - #24 =
INFO  14:59:06,192 - #9 5
INFO  14:59:06,192 - #27 ;
INFO  14:59:06,192 - #8 cond
INFO  14:59:06,192 - #24 =
INFO  14:59:06,193 - #11 true
INFO  14:59:06,193 - #27 ;
INFO  14:59:06,194 - #31 if
INFO  14:59:06,194 - #29 (
INFO  14:59:06,194 - #9 2
INFO  14:59:06,194 - #17 *
INFO  14:59:06,194 - #29 (
INFO  14:59:06,196 - #8 a
INFO  14:59:06,196 - #16 -
INFO  14:59:06,196 - #8 b
INFO  14:59:06,197 - #16 -
INFO  14:59:06,197 - #9 1
INFO  14:59:06,197 - #30 )
INFO  14:59:06,198 - #16 -
INFO  14:59:06,198 - #9 14
INFO  14:59:06,198 - #38 >
INFO  14:59:06,198 - #9 0
INFO  14:59:06,200 - #14 ||
INFO  14:59:06,200 - #8 cond
INFO  14:59:06,200 - #30 )
INFO  14:59:06,201 - #3 print
INFO  14:59:06,201 - #29 (
INFO  14:59:06,201 - #8 a
INFO  14:59:06,201 - #15 +
INFO  14:59:06,201 - #8 b
INFO  14:59:06,201 - #30 )
INFO  14:59:06,202 - #27 ;
INFO  14:59:06,202 - #21 }
INFO  14:59:06,202 - #8 int
INFO  14:59:06,202 - #8 max
INFO  14:59:06,205 - #29 (
INFO  14:59:06,205 - #8 int
INFO  14:59:06,205 - #8 a
INFO  14:59:06,205 - #27 ;
ERROR 14:59:06,205 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  14:59:06,205 - #8 int
INFO  14:59:06,205 - #8 b
INFO  14:59:06,205 - #30 )
INFO  14:59:06,205 - #20 {
INFO  14:59:06,205 - #31 if
INFO  14:59:06,205 - #29 (
ERROR 14:59:06,205 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  14:59:06,206 - #8 a
INFO  14:59:06,206 - #38 >
INFO  14:59:06,206 - #9 0
INFO  14:59:06,207 - #8 b
ERROR 14:59:06,207 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  14:59:06,207 - #30 )
INFO  14:59:06,207 - #20 {
INFO  14:59:06,207 - #37 return
INFO  14:59:06,207 - #8 a
ERROR 14:59:06,207 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  14:59:06,208 - #27 ;
INFO  14:59:06,208 - #21 }
INFO  14:59:06,208 - #32 else
ERROR 14:59:06,208 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  14:59:06,208 - #37 return
INFO  14:59:06,208 - #8 b
INFO  14:59:06,208 - #27 ;
INFO  14:59:06,208 - #21 }
INFO  14:59:06,208 - #8 int
INFO  14:59:06,208 - #8 min
INFO  14:59:06,209 - #29 (
INFO  14:59:06,209 - #8 int
INFO  14:59:06,209 - #8 a
INFO  14:59:06,209 - #28 ,
INFO  14:59:06,209 - #8 int
INFO  14:59:06,209 - #8 b
INFO  14:59:06,209 - #30 )
ERROR 14:59:06,209 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  14:59:06,209 - #20 {
INFO  14:59:06,209 - #31 if
INFO  14:59:06,209 - #29 (
INFO  14:59:06,210 - #8 a
INFO  14:59:06,210 - #40 <
INFO  14:59:06,210 - #8 b
INFO  14:59:06,210 - #30 )
INFO  14:59:06,210 - #20 {
INFO  14:59:06,210 - #37 return
INFO  14:59:06,210 - #8 a
INFO  14:59:06,211 - #27 ;
INFO  14:59:06,211 - #21 }
INFO  14:59:06,211 - #32 else
INFO  14:59:06,211 - #20 {
INFO  14:59:06,211 - #37 return
INFO  14:59:06,211 - #8 b
INFO  14:59:06,211 - #27 ;
INFO  14:59:06,211 - #21 }
INFO  14:59:06,211 - #21 }
INFO  14:59:06,211 - #6 void
INFO  14:59:06,212 - #8 main
INFO  14:59:06,212 - #29 (
INFO  14:59:06,212 - #30 )
INFO  14:59:06,212 - #20 {
INFO  14:59:06,212 - #8 int
INFO  14:59:06,212 - #8 a
INFO  14:59:06,212 - #22 [
INFO  14:59:06,212 - #23 ]
INFO  14:59:06,212 - #27 ;
INFO  14:59:06,212 - #8 int
INFO  14:59:06,212 - #8 length
INFO  14:59:06,212 - #27 ;
INFO  14:59:06,212 - #8 length
INFO  14:59:06,213 - #24 =
INFO  14:59:06,213 - #8 c
INFO  14:59:06,213 - #27 ;
INFO  14:59:06,213 - #8 test
INFO  14:59:06,213 - #29 (
INFO  14:59:06,213 - #30 )
INFO  14:59:06,213 - #27 ;
INFO  14:59:06,213 - #31 if
INFO  14:59:06,213 - #29 (
INFO  14:59:06,213 - #8 length
INFO  14:59:06,213 - #38 >
INFO  14:59:06,213 - #9 0
INFO  14:59:06,213 - #13 &&
INFO  14:59:06,213 - #8 length
INFO  14:59:06,213 - #42 <=
INFO  14:59:06,214 - #8 d
INFO  14:59:06,214 - #30 )
INFO  14:59:06,214 - #8 a
INFO  14:59:06,214 - #24 =
INFO  14:59:06,214 - #7 new
INFO  14:59:06,215 - #8 int
INFO  14:59:06,215 - #22 [
INFO  14:59:06,215 - #8 length
INFO  14:59:06,215 - #23 ]
INFO  14:59:06,215 - #27 ;
INFO  14:59:06,215 - #32 else
INFO  14:59:06,215 - #8 a
INFO  14:59:06,215 - #24 =
INFO  14:59:06,215 - #7 new
INFO  14:59:06,215 - #8 int
INFO  14:59:06,215 - #22 [
INFO  14:59:06,215 - #9 5
INFO  14:59:06,215 - #23 ]
INFO  14:59:06,215 - #27 ;
INFO  14:59:06,215 - #33 do
INFO  14:59:06,216 - #20 {
INFO  14:59:06,216 - #4 read
INFO  14:59:06,216 - #29 (
INFO  14:59:06,216 - #8 a
INFO  14:59:06,216 - #22 [
INFO  14:59:06,216 - #8 i
INFO  14:59:06,216 - #23 ]
INFO  14:59:06,216 - #30 )
INFO  14:59:06,216 - #27 ;
INFO  14:59:06,216 - #31 if
INFO  14:59:06,216 - #29 (
INFO  14:59:06,216 - #8 a
INFO  14:59:06,216 - #22 [
INFO  14:59:06,216 - #8 i
INFO  14:59:06,217 - #23 ]
INFO  14:59:06,217 - #19 %
INFO  14:59:06,217 - #9 3
INFO  14:59:06,217 - #39 ==
INFO  14:59:06,217 - #9 0
INFO  14:59:06,218 - #30 )
INFO  14:59:06,218 - #3 print
INFO  14:59:06,218 - #29 (
INFO  14:59:06,218 - #8 a
INFO  14:59:06,218 - #22 [
INFO  14:59:06,218 - #8 i
INFO  14:59:06,218 - #23 ]
INFO  14:59:06,218 - #30 )
INFO  14:59:06,218 - #27 ;
INFO  14:59:06,218 - #32 else
INFO  14:59:06,219 - #3 print
INFO  14:59:06,219 - #29 (
INFO  14:59:06,219 - #8 max
INFO  14:59:06,219 - #29 (
INFO  14:59:06,219 - #8 a
INFO  14:59:06,219 - #22 [
INFO  14:59:06,219 - #8 i
INFO  14:59:06,219 - #23 ]
INFO  14:59:06,219 - #28 ,
INFO  14:59:06,219 - #9 0
INFO  14:59:06,219 - #30 )
INFO  14:59:06,219 - #30 )
INFO  14:59:06,220 - #27 ;
INFO  14:59:06,220 - #21 }
INFO  14:59:06,220 - #34 while
INFO  14:59:06,220 - #29 (
INFO  14:59:06,220 - #8 i
INFO  14:59:06,220 - #42 <=
INFO  14:59:06,220 - #8 length
INFO  14:59:06,220 - #16 -
INFO  14:59:06,220 - #9 1
INFO  14:59:06,220 - #30 )
INFO  14:59:06,220 - #27 ;
INFO  14:59:06,220 - #3 print
INFO  14:59:06,220 - #29 (
INFO  14:59:06,220 - #8 d
INFO  14:59:06,221 - #30 )
INFO  14:59:06,221 - #27 ;
INFO  14:59:06,221 - #21 }
INFO  14:59:06,221 - #21 }
INFO  14:59:31,029 - #2 program
INFO  14:59:31,029 - #8 Program
INFO  14:59:31,029 - #20 {
INFO  14:59:31,030 - #5 const
INFO  14:59:31,030 - #8 int
INFO  14:59:31,030 - #8 c
INFO  14:59:31,030 - #24 =
INFO  14:59:31,030 - #9 10
INFO  14:59:31,030 - #27 ;
INFO  14:59:31,031 - #5 const
INFO  14:59:31,031 - #8 int
INFO  14:59:31,031 - #8 d
INFO  14:59:31,031 - #24 =
INFO  14:59:31,031 - #9 99
INFO  14:59:31,032 - #28 ,
INFO  14:59:31,032 - #8 eps
INFO  14:59:31,032 - #24 =
INFO  14:59:31,032 - #9 2
INFO  14:59:31,032 - #27 ;
INFO  14:59:31,032 - #8 int
INFO  14:59:31,032 - #8 e
INFO  14:59:31,033 - #27 ;
INFO  14:59:31,033 - #6 void
INFO  14:59:31,033 - #8 test
INFO  14:59:31,033 - #29 (
INFO  14:59:31,033 - #30 )
INFO  14:59:31,033 - #20 {
INFO  14:59:31,034 - #8 int
INFO  14:59:31,034 - #8 a
INFO  14:59:31,034 - #28 ,
INFO  14:59:31,034 - #8 b
INFO  14:59:31,034 - #28 ,
INFO  14:59:31,034 - #27 ;
ERROR 14:59:31,034 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  14:59:31,034 - #8 bool
INFO  14:59:31,035 - #8 cond
INFO  14:59:31,035 - #27 ;
ERROR 14:59:31,035 - Sintaksna greska - neispravno ime promenljive na liniji 6, koloni 12 za simbol ";"!
INFO  14:59:31,037 - #8 a
INFO  14:59:31,037 - #24 =
INFO  14:59:31,037 - #9 3
INFO  14:59:31,037 - #27 ;
INFO  14:59:31,038 - #8 b
INFO  14:59:31,038 - #24 =
INFO  14:59:31,038 - #9 5
INFO  14:59:31,038 - #27 ;
INFO  14:59:31,038 - #8 cond
INFO  14:59:31,039 - #24 =
INFO  14:59:31,039 - #11 true
INFO  14:59:31,039 - #27 ;
INFO  14:59:31,040 - #31 if
INFO  14:59:31,040 - #29 (
INFO  14:59:31,041 - #9 2
INFO  14:59:31,041 - #17 *
INFO  14:59:31,041 - #29 (
INFO  14:59:31,042 - #8 a
INFO  14:59:31,042 - #16 -
INFO  14:59:31,042 - #8 b
INFO  14:59:31,043 - #16 -
INFO  14:59:31,044 - #9 1
INFO  14:59:31,044 - #30 )
INFO  14:59:31,044 - #16 -
INFO  14:59:31,045 - #9 14
INFO  14:59:31,045 - #38 >
INFO  14:59:31,045 - #9 0
INFO  14:59:31,046 - #14 ||
INFO  14:59:31,047 - #8 cond
INFO  14:59:31,047 - #30 )
INFO  14:59:31,048 - #3 print
INFO  14:59:31,048 - #29 (
INFO  14:59:31,048 - #8 a
INFO  14:59:31,048 - #15 +
INFO  14:59:31,048 - #8 b
INFO  14:59:31,049 - #30 )
INFO  14:59:31,049 - #27 ;
INFO  14:59:31,049 - #21 }
INFO  14:59:31,050 - #8 int
INFO  14:59:31,052 - #8 max
INFO  14:59:31,053 - #29 (
INFO  14:59:31,053 - #8 int
INFO  14:59:31,053 - #8 a
INFO  14:59:31,053 - #27 ;
ERROR 14:59:31,053 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  14:59:31,053 - #8 int
INFO  14:59:31,053 - #8 b
INFO  14:59:31,053 - #30 )
INFO  14:59:31,053 - #20 {
INFO  14:59:31,053 - #31 if
INFO  14:59:31,053 - #29 (
ERROR 14:59:31,053 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  14:59:31,054 - #8 a
INFO  14:59:31,054 - #38 >
INFO  14:59:31,054 - #9 0
INFO  14:59:31,054 - #8 b
ERROR 14:59:31,055 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  14:59:31,055 - #30 )
INFO  14:59:31,055 - #20 {
INFO  14:59:31,055 - #37 return
INFO  14:59:31,055 - #8 a
ERROR 14:59:31,055 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  14:59:31,056 - #27 ;
INFO  14:59:31,056 - #21 }
INFO  14:59:31,056 - #32 else
ERROR 14:59:31,056 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  14:59:31,056 - #37 return
INFO  14:59:31,056 - #8 b
INFO  14:59:31,056 - #27 ;
INFO  14:59:31,056 - #21 }
INFO  14:59:31,056 - #8 int
INFO  14:59:31,056 - #8 min
INFO  14:59:31,056 - #29 (
INFO  14:59:31,057 - #8 int
INFO  14:59:31,057 - #8 a
INFO  14:59:31,057 - #28 ,
INFO  14:59:31,057 - #8 int
INFO  14:59:31,057 - #8 b
INFO  14:59:31,057 - #30 )
ERROR 14:59:31,057 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  14:59:31,057 - #20 {
INFO  14:59:31,057 - #31 if
INFO  14:59:31,057 - #29 (
INFO  14:59:31,058 - #8 a
INFO  14:59:31,058 - #40 <
INFO  14:59:31,058 - #8 b
INFO  14:59:31,058 - #30 )
INFO  14:59:31,058 - #20 {
INFO  14:59:31,058 - #37 return
INFO  14:59:31,059 - #8 a
INFO  14:59:31,059 - #27 ;
INFO  14:59:31,059 - #21 }
INFO  14:59:31,059 - #32 else
INFO  14:59:31,059 - #20 {
INFO  14:59:31,059 - #37 return
INFO  14:59:31,059 - #8 b
INFO  14:59:31,059 - #27 ;
INFO  14:59:31,059 - #21 }
INFO  14:59:31,059 - #21 }
INFO  14:59:31,060 - #6 void
INFO  14:59:31,060 - #8 main
INFO  14:59:31,060 - #29 (
INFO  14:59:31,060 - #30 )
INFO  14:59:31,060 - #20 {
INFO  14:59:31,060 - #8 int
INFO  14:59:31,060 - #8 a
INFO  14:59:31,060 - #22 [
INFO  14:59:31,060 - #23 ]
INFO  14:59:31,060 - #27 ;
INFO  14:59:31,060 - #8 int
INFO  14:59:31,060 - #8 length
INFO  14:59:31,060 - #27 ;
INFO  14:59:31,061 - #8 length
INFO  14:59:31,061 - #24 =
INFO  14:59:31,061 - #8 c
INFO  14:59:31,061 - #27 ;
INFO  14:59:31,061 - #8 test
INFO  14:59:31,061 - #29 (
INFO  14:59:31,061 - #30 )
INFO  14:59:31,061 - #27 ;
INFO  14:59:31,061 - #31 if
INFO  14:59:31,061 - #29 (
INFO  14:59:31,061 - #8 length
INFO  14:59:31,061 - #38 >
INFO  14:59:31,061 - #9 0
INFO  14:59:31,062 - #13 &&
INFO  14:59:31,062 - #8 length
INFO  14:59:31,062 - #42 <=
INFO  14:59:31,062 - #8 d
INFO  14:59:31,062 - #30 )
INFO  14:59:31,063 - #8 a
INFO  14:59:31,063 - #24 =
INFO  14:59:31,063 - #7 new
INFO  14:59:31,063 - #8 int
INFO  14:59:31,063 - #22 [
INFO  14:59:31,063 - #8 length
INFO  14:59:31,063 - #23 ]
INFO  14:59:31,063 - #27 ;
INFO  14:59:31,063 - #32 else
INFO  14:59:31,063 - #8 a
INFO  14:59:31,063 - #24 =
INFO  14:59:31,063 - #7 new
INFO  14:59:31,063 - #8 int
INFO  14:59:31,064 - #22 [
INFO  14:59:31,064 - #9 5
INFO  14:59:31,064 - #23 ]
INFO  14:59:31,064 - #27 ;
INFO  14:59:31,064 - #33 do
INFO  14:59:31,064 - #20 {
INFO  14:59:31,064 - #4 read
INFO  14:59:31,064 - #29 (
INFO  14:59:31,064 - #8 a
INFO  14:59:31,064 - #22 [
INFO  14:59:31,064 - #8 i
INFO  14:59:31,064 - #23 ]
INFO  14:59:31,064 - #30 )
INFO  14:59:31,065 - #27 ;
INFO  14:59:31,065 - #31 if
INFO  14:59:31,065 - #29 (
INFO  14:59:31,065 - #8 a
INFO  14:59:31,065 - #22 [
INFO  14:59:31,065 - #8 i
INFO  14:59:31,065 - #23 ]
INFO  14:59:31,065 - #19 %
INFO  14:59:31,065 - #9 3
INFO  14:59:31,066 - #39 ==
INFO  14:59:31,066 - #9 0
INFO  14:59:31,066 - #30 )
INFO  14:59:31,066 - #3 print
INFO  14:59:31,067 - #29 (
INFO  14:59:31,067 - #8 a
INFO  14:59:31,067 - #22 [
INFO  14:59:31,067 - #8 i
INFO  14:59:31,067 - #23 ]
INFO  14:59:31,067 - #30 )
INFO  14:59:31,067 - #27 ;
INFO  14:59:31,067 - #32 else
INFO  14:59:31,067 - #3 print
INFO  14:59:31,067 - #29 (
INFO  14:59:31,067 - #8 max
INFO  14:59:31,067 - #29 (
INFO  14:59:31,067 - #8 a
INFO  14:59:31,067 - #22 [
INFO  14:59:31,067 - #8 i
INFO  14:59:31,067 - #23 ]
INFO  14:59:31,067 - #28 ,
INFO  14:59:31,067 - #9 0
INFO  14:59:31,068 - #30 )
INFO  14:59:31,068 - #30 )
INFO  14:59:31,068 - #27 ;
INFO  14:59:31,068 - #21 }
INFO  14:59:31,068 - #34 while
INFO  14:59:31,068 - #29 (
INFO  14:59:31,068 - #8 i
INFO  14:59:31,068 - #42 <=
INFO  14:59:31,068 - #8 length
INFO  14:59:31,068 - #16 -
INFO  14:59:31,068 - #9 1
INFO  14:59:31,068 - #30 )
INFO  14:59:31,068 - #27 ;
INFO  14:59:31,069 - #3 print
INFO  14:59:31,069 - #29 (
INFO  14:59:31,069 - #8 d
INFO  14:59:31,069 - #30 )
INFO  14:59:31,069 - #27 ;
INFO  14:59:31,069 - #21 }
INFO  14:59:31,069 - #21 }
INFO  14:59:42,092 - #2 program
INFO  14:59:42,093 - #8 Program
INFO  14:59:42,093 - #20 {
INFO  14:59:42,093 - #5 const
INFO  14:59:42,093 - #8 int
INFO  14:59:42,093 - #8 c
INFO  14:59:42,094 - #24 =
INFO  14:59:42,094 - #9 10
INFO  14:59:42,094 - #27 ;
INFO  14:59:42,094 - #5 const
INFO  14:59:42,095 - #8 int
INFO  14:59:42,095 - #8 d
INFO  14:59:42,095 - #24 =
INFO  14:59:42,095 - #9 99
INFO  14:59:42,095 - #28 ,
INFO  14:59:42,095 - #8 eps
INFO  14:59:42,095 - #24 =
INFO  14:59:42,095 - #9 2
INFO  14:59:42,095 - #27 ;
INFO  14:59:42,095 - #8 int
INFO  14:59:42,096 - #8 e
INFO  14:59:42,096 - #27 ;
INFO  14:59:42,096 - #6 void
INFO  14:59:42,096 - #8 test
INFO  14:59:42,096 - #29 (
INFO  14:59:42,097 - #30 )
INFO  14:59:42,097 - #20 {
INFO  14:59:42,097 - #8 int
INFO  14:59:42,097 - #8 a
INFO  14:59:42,097 - #28 ,
INFO  14:59:42,097 - #8 b
INFO  14:59:42,097 - #28 ,
INFO  14:59:42,097 - #27 ;
ERROR 14:59:42,097 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  14:59:42,098 - #8 bool
INFO  14:59:42,098 - #8 cond
INFO  14:59:42,098 - #27 ;
ERROR 14:59:42,098 - Sintaksna greska - neispravno ime promenljive na liniji 6, koloni 12 za simbol ";"!
INFO  14:59:42,099 - #8 a
INFO  14:59:42,100 - #24 =
INFO  14:59:42,100 - #9 3
INFO  14:59:42,100 - #27 ;
INFO  14:59:42,101 - #8 b
INFO  14:59:42,101 - #24 =
INFO  14:59:42,101 - #9 5
INFO  14:59:42,101 - #27 ;
INFO  14:59:42,101 - #8 cond
INFO  14:59:42,102 - #24 =
INFO  14:59:42,102 - #11 true
INFO  14:59:42,102 - #27 ;
INFO  14:59:42,103 - #31 if
INFO  14:59:42,103 - #29 (
INFO  14:59:42,103 - #9 2
INFO  14:59:42,103 - #17 *
INFO  14:59:42,104 - #29 (
INFO  14:59:42,105 - #8 a
INFO  14:59:42,105 - #16 -
INFO  14:59:42,105 - #8 b
INFO  14:59:42,106 - #16 -
INFO  14:59:42,106 - #9 1
INFO  14:59:42,106 - #30 )
INFO  14:59:42,107 - #16 -
INFO  14:59:42,107 - #9 14
INFO  14:59:42,107 - #38 >
INFO  14:59:42,107 - #9 0
INFO  14:59:42,109 - #14 ||
INFO  14:59:42,109 - #8 cond
INFO  14:59:42,109 - #30 )
INFO  14:59:42,110 - #3 print
INFO  14:59:42,110 - #29 (
INFO  14:59:42,110 - #8 a
INFO  14:59:42,110 - #15 +
INFO  14:59:42,110 - #8 b
INFO  14:59:42,111 - #30 )
INFO  14:59:42,111 - #27 ;
INFO  14:59:42,111 - #21 }
INFO  14:59:42,112 - #8 int
INFO  14:59:42,114 - #8 max
INFO  14:59:42,114 - #29 (
INFO  14:59:42,115 - #8 int
INFO  14:59:42,115 - #8 a
INFO  14:59:42,115 - #27 ;
ERROR 14:59:42,115 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  14:59:42,115 - #8 int
INFO  14:59:42,115 - #8 b
INFO  14:59:42,115 - #30 )
INFO  14:59:42,115 - #20 {
INFO  14:59:42,115 - #31 if
INFO  14:59:42,115 - #29 (
ERROR 14:59:42,115 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  14:59:42,116 - #8 a
INFO  14:59:42,116 - #38 >
INFO  14:59:42,116 - #9 0
INFO  14:59:42,116 - #8 b
ERROR 14:59:42,116 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  14:59:42,116 - #30 )
INFO  14:59:42,116 - #20 {
INFO  14:59:42,116 - #37 return
INFO  14:59:42,116 - #8 a
ERROR 14:59:42,117 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  14:59:42,117 - #27 ;
INFO  14:59:42,117 - #21 }
INFO  14:59:42,117 - #32 else
ERROR 14:59:42,118 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  14:59:42,118 - #37 return
INFO  14:59:42,118 - #8 b
INFO  14:59:42,118 - #27 ;
INFO  14:59:42,118 - #21 }
INFO  14:59:42,118 - #8 int
INFO  14:59:42,118 - #8 min
INFO  14:59:42,118 - #29 (
INFO  14:59:42,118 - #8 int
INFO  14:59:42,118 - #8 a
INFO  14:59:42,118 - #28 ,
INFO  14:59:42,118 - #8 int
INFO  14:59:42,118 - #8 b
INFO  14:59:42,118 - #30 )
ERROR 14:59:42,119 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  14:59:42,119 - #20 {
INFO  14:59:42,119 - #31 if
INFO  14:59:42,119 - #29 (
INFO  14:59:42,119 - #8 a
INFO  14:59:42,119 - #40 <
INFO  14:59:42,119 - #8 b
INFO  14:59:42,120 - #30 )
INFO  14:59:42,120 - #20 {
INFO  14:59:42,120 - #37 return
INFO  14:59:42,120 - #8 a
INFO  14:59:42,120 - #27 ;
INFO  14:59:42,120 - #21 }
INFO  14:59:42,120 - #32 else
INFO  14:59:42,121 - #20 {
INFO  14:59:42,121 - #37 return
INFO  14:59:42,121 - #8 b
INFO  14:59:42,121 - #27 ;
INFO  14:59:42,121 - #21 }
INFO  14:59:42,121 - #21 }
INFO  14:59:42,121 - #6 void
INFO  14:59:42,121 - #8 main
INFO  14:59:42,122 - #29 (
INFO  14:59:42,122 - #30 )
INFO  14:59:42,122 - #20 {
INFO  14:59:42,122 - #8 int
INFO  14:59:42,122 - #8 a
INFO  14:59:42,122 - #22 [
INFO  14:59:42,122 - #23 ]
INFO  14:59:42,122 - #27 ;
INFO  14:59:42,122 - #8 int
INFO  14:59:42,122 - #8 length
INFO  14:59:42,122 - #27 ;
INFO  14:59:42,122 - #8 length
INFO  14:59:42,122 - #24 =
INFO  14:59:42,122 - #8 c
INFO  14:59:42,122 - #27 ;
INFO  14:59:42,122 - #8 test
INFO  14:59:42,122 - #29 (
INFO  14:59:42,123 - #30 )
INFO  14:59:42,123 - #27 ;
INFO  14:59:42,123 - #31 if
INFO  14:59:42,123 - #29 (
INFO  14:59:42,123 - #8 length
INFO  14:59:42,123 - #38 >
INFO  14:59:42,123 - #9 0
INFO  14:59:42,123 - #13 &&
INFO  14:59:42,123 - #8 length
INFO  14:59:42,123 - #42 <=
INFO  14:59:42,123 - #8 d
INFO  14:59:42,124 - #30 )
INFO  14:59:42,124 - #8 a
INFO  14:59:42,124 - #24 =
INFO  14:59:42,124 - #7 new
INFO  14:59:42,124 - #8 int
INFO  14:59:42,124 - #22 [
INFO  14:59:42,124 - #8 length
INFO  14:59:42,124 - #23 ]
INFO  14:59:42,124 - #27 ;
INFO  14:59:42,125 - #32 else
INFO  14:59:42,125 - #8 a
INFO  14:59:42,125 - #24 =
INFO  14:59:42,125 - #7 new
INFO  14:59:42,125 - #8 int
INFO  14:59:42,125 - #22 [
INFO  14:59:42,125 - #9 5
INFO  14:59:42,125 - #23 ]
INFO  14:59:42,125 - #27 ;
INFO  14:59:42,125 - #33 do
INFO  14:59:42,125 - #20 {
INFO  14:59:42,125 - #4 read
INFO  14:59:42,125 - #29 (
INFO  14:59:42,126 - #8 a
INFO  14:59:42,126 - #22 [
INFO  14:59:42,126 - #8 i
INFO  14:59:42,126 - #23 ]
INFO  14:59:42,126 - #30 )
INFO  14:59:42,126 - #27 ;
INFO  14:59:42,126 - #31 if
INFO  14:59:42,126 - #29 (
INFO  14:59:42,126 - #8 a
INFO  14:59:42,126 - #22 [
INFO  14:59:42,126 - #8 i
INFO  14:59:42,127 - #23 ]
INFO  14:59:42,127 - #19 %
INFO  14:59:42,127 - #9 3
INFO  14:59:42,127 - #39 ==
INFO  14:59:42,128 - #9 0
INFO  14:59:42,128 - #30 )
INFO  14:59:42,128 - #3 print
INFO  14:59:42,128 - #29 (
INFO  14:59:42,128 - #8 a
INFO  14:59:42,128 - #22 [
INFO  14:59:42,128 - #8 i
INFO  14:59:42,129 - #23 ]
INFO  14:59:42,129 - #30 )
INFO  14:59:42,129 - #27 ;
INFO  14:59:42,129 - #32 else
INFO  14:59:42,129 - #3 print
INFO  14:59:42,129 - #29 (
INFO  14:59:42,129 - #8 max
INFO  14:59:42,129 - #29 (
INFO  14:59:42,129 - #8 a
INFO  14:59:42,129 - #22 [
INFO  14:59:42,129 - #8 i
INFO  14:59:42,129 - #23 ]
INFO  14:59:42,129 - #28 ,
INFO  14:59:42,129 - #9 0
INFO  14:59:42,129 - #30 )
INFO  14:59:42,130 - #30 )
INFO  14:59:42,130 - #27 ;
INFO  14:59:42,130 - #21 }
INFO  14:59:42,130 - #34 while
INFO  14:59:42,130 - #29 (
INFO  14:59:42,130 - #8 i
INFO  14:59:42,130 - #42 <=
INFO  14:59:42,130 - #8 length
INFO  14:59:42,130 - #16 -
INFO  14:59:42,130 - #9 1
INFO  14:59:42,130 - #30 )
INFO  14:59:42,130 - #27 ;
INFO  14:59:42,130 - #3 print
INFO  14:59:42,131 - #29 (
INFO  14:59:42,131 - #8 d
INFO  14:59:42,131 - #30 )
INFO  14:59:42,131 - #27 ;
INFO  14:59:42,131 - #21 }
INFO  14:59:42,131 - #21 }
INFO  15:18:44,613 - #2 program
INFO  15:18:44,614 - #8 Program
INFO  15:18:44,614 - #20 {
INFO  15:18:44,614 - #5 const
INFO  15:18:44,614 - #8 int
INFO  15:18:44,614 - #8 c
INFO  15:18:44,614 - #24 =
INFO  15:18:44,614 - #9 10
INFO  15:18:44,615 - #27 ;
INFO  15:18:44,615 - #5 const
INFO  15:18:44,615 - #8 int
INFO  15:18:44,615 - #8 d
INFO  15:18:44,616 - #24 =
INFO  15:18:44,616 - #9 99
INFO  15:18:44,616 - #28 ,
INFO  15:18:44,616 - #8 eps
INFO  15:18:44,616 - #24 =
INFO  15:18:44,616 - #9 2
INFO  15:18:44,616 - #27 ;
INFO  15:18:44,616 - #8 int
INFO  15:18:44,617 - #8 e
INFO  15:18:44,617 - #27 ;
INFO  15:18:44,617 - #6 void
INFO  15:18:44,617 - #8 test
INFO  15:18:44,617 - #29 (
INFO  15:18:44,617 - #30 )
INFO  15:18:44,617 - #20 {
INFO  15:18:44,617 - #8 int
INFO  15:18:44,617 - #8 a
INFO  15:18:44,618 - #28 ,
INFO  15:18:44,618 - #8 b
INFO  15:18:44,618 - #28 ,
INFO  15:18:44,618 - #27 ;
ERROR 15:18:44,618 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  15:18:44,618 - #8 bool
INFO  15:18:44,618 - #8 cond
INFO  15:18:44,619 - #27 ;
ERROR 15:18:44,619 - Sintaksna greska - neispravna definicija promenljive na liniji 6, koloni 12 za simbol ";"!
INFO  15:18:44,620 - #8 a
INFO  15:18:44,621 - #24 =
INFO  15:18:44,621 - #9 3
INFO  15:18:44,621 - #27 ;
INFO  15:18:44,622 - #8 b
INFO  15:18:44,622 - #24 =
INFO  15:18:44,622 - #9 5
INFO  15:18:44,622 - #27 ;
INFO  15:18:44,622 - #8 cond
INFO  15:18:44,623 - #24 =
INFO  15:18:44,623 - #11 true
INFO  15:18:44,623 - #27 ;
INFO  15:18:44,624 - #31 if
INFO  15:18:44,624 - #29 (
INFO  15:18:44,625 - #9 2
INFO  15:18:44,625 - #17 *
INFO  15:18:44,625 - #29 (
INFO  15:18:44,626 - #8 a
INFO  15:18:44,626 - #16 -
INFO  15:18:44,626 - #8 b
INFO  15:18:44,627 - #16 -
INFO  15:18:44,628 - #9 1
INFO  15:18:44,628 - #30 )
INFO  15:18:44,628 - #16 -
INFO  15:18:44,629 - #9 14
INFO  15:18:44,629 - #38 >
INFO  15:18:44,629 - #9 0
INFO  15:18:44,630 - #14 ||
INFO  15:18:44,631 - #8 cond
INFO  15:18:44,631 - #30 )
INFO  15:18:44,632 - #3 print
INFO  15:18:44,632 - #29 (
INFO  15:18:44,632 - #8 a
INFO  15:18:44,632 - #15 +
INFO  15:18:44,632 - #8 b
INFO  15:18:44,633 - #30 )
INFO  15:18:44,633 - #27 ;
INFO  15:18:44,633 - #21 }
INFO  15:18:44,633 - #8 int
INFO  15:18:44,636 - #8 max
INFO  15:18:44,636 - #29 (
INFO  15:18:44,636 - #8 int
INFO  15:18:44,636 - #8 a
INFO  15:18:44,636 - #27 ;
ERROR 15:18:44,636 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  15:18:44,636 - #8 int
INFO  15:18:44,636 - #8 b
INFO  15:18:44,637 - #30 )
INFO  15:18:44,637 - #20 {
INFO  15:18:44,637 - #31 if
INFO  15:18:44,637 - #29 (
ERROR 15:18:44,637 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  15:18:44,638 - #8 a
INFO  15:18:44,638 - #38 >
INFO  15:18:44,638 - #9 0
INFO  15:18:44,638 - #8 b
ERROR 15:18:44,638 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  15:18:44,638 - #30 )
INFO  15:18:44,638 - #20 {
INFO  15:18:44,638 - #37 return
INFO  15:18:44,638 - #8 a
ERROR 15:18:44,638 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  15:18:44,639 - #27 ;
INFO  15:18:44,639 - #21 }
INFO  15:18:44,639 - #32 else
ERROR 15:18:44,639 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  15:18:44,639 - #37 return
INFO  15:18:44,639 - #8 b
INFO  15:18:44,640 - #27 ;
INFO  15:18:44,640 - #21 }
INFO  15:18:44,640 - #8 int
INFO  15:18:44,640 - #8 min
INFO  15:18:44,640 - #29 (
INFO  15:18:44,640 - #8 int
INFO  15:18:44,640 - #8 a
INFO  15:18:44,640 - #28 ,
INFO  15:18:44,640 - #8 int
INFO  15:18:44,640 - #8 b
INFO  15:18:44,640 - #30 )
ERROR 15:18:44,640 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  15:18:44,641 - #20 {
INFO  15:18:44,641 - #31 if
INFO  15:18:44,641 - #29 (
INFO  15:18:44,641 - #8 a
INFO  15:18:44,641 - #40 <
INFO  15:18:44,641 - #8 b
INFO  15:18:44,642 - #30 )
INFO  15:18:44,642 - #20 {
INFO  15:18:44,642 - #37 return
INFO  15:18:44,642 - #8 a
INFO  15:18:44,642 - #27 ;
INFO  15:18:44,642 - #21 }
INFO  15:18:44,642 - #32 else
INFO  15:18:44,642 - #20 {
INFO  15:18:44,642 - #37 return
INFO  15:18:44,642 - #8 b
INFO  15:18:44,642 - #27 ;
INFO  15:18:44,643 - #21 }
INFO  15:18:44,643 - #21 }
INFO  15:18:44,643 - #6 void
INFO  15:18:44,643 - #8 main
INFO  15:18:44,643 - #29 (
INFO  15:18:44,643 - #30 )
INFO  15:18:44,643 - #20 {
INFO  15:18:44,643 - #8 int
INFO  15:18:44,644 - #8 a
INFO  15:18:44,644 - #22 [
INFO  15:18:44,644 - #23 ]
INFO  15:18:44,644 - #27 ;
INFO  15:18:44,644 - #8 int
INFO  15:18:44,644 - #8 length
INFO  15:18:44,644 - #27 ;
INFO  15:18:44,644 - #8 length
INFO  15:18:44,644 - #24 =
INFO  15:18:44,644 - #8 c
INFO  15:18:44,644 - #27 ;
INFO  15:18:44,644 - #8 test
INFO  15:18:44,644 - #29 (
INFO  15:18:44,644 - #30 )
INFO  15:18:44,644 - #27 ;
INFO  15:18:44,645 - #31 if
INFO  15:18:44,645 - #29 (
INFO  15:18:44,645 - #8 length
INFO  15:18:44,645 - #38 >
INFO  15:18:44,645 - #9 0
INFO  15:18:44,645 - #13 &&
INFO  15:18:44,645 - #8 length
INFO  15:18:44,645 - #42 <=
INFO  15:18:44,645 - #8 d
INFO  15:18:44,646 - #30 )
INFO  15:18:44,646 - #8 a
INFO  15:18:44,646 - #24 =
INFO  15:18:44,646 - #7 new
INFO  15:18:44,646 - #8 int
INFO  15:18:44,646 - #22 [
INFO  15:18:44,646 - #8 length
INFO  15:18:44,646 - #23 ]
INFO  15:18:44,646 - #27 ;
INFO  15:18:44,647 - #32 else
INFO  15:18:44,647 - #8 a
INFO  15:18:44,647 - #24 =
INFO  15:18:44,647 - #7 new
INFO  15:18:44,647 - #8 int
INFO  15:18:44,647 - #22 [
INFO  15:18:44,647 - #9 5
INFO  15:18:44,647 - #23 ]
INFO  15:18:44,647 - #27 ;
INFO  15:18:44,647 - #33 do
INFO  15:18:44,647 - #20 {
INFO  15:18:44,647 - #4 read
INFO  15:18:44,647 - #29 (
INFO  15:18:44,647 - #8 a
INFO  15:18:44,647 - #22 [
INFO  15:18:44,648 - #8 i
INFO  15:18:44,648 - #23 ]
INFO  15:18:44,648 - #30 )
INFO  15:18:44,648 - #27 ;
INFO  15:18:44,648 - #31 if
INFO  15:18:44,648 - #29 (
INFO  15:18:44,648 - #8 a
INFO  15:18:44,648 - #22 [
INFO  15:18:44,648 - #8 i
INFO  15:18:44,648 - #23 ]
INFO  15:18:44,648 - #19 %
INFO  15:18:44,649 - #9 3
INFO  15:18:44,649 - #39 ==
INFO  15:18:44,649 - #9 0
INFO  15:18:44,650 - #30 )
INFO  15:18:44,650 - #3 print
INFO  15:18:44,650 - #29 (
INFO  15:18:44,650 - #8 a
INFO  15:18:44,650 - #22 [
INFO  15:18:44,650 - #8 i
INFO  15:18:44,650 - #23 ]
INFO  15:18:44,650 - #30 )
INFO  15:18:44,650 - #27 ;
INFO  15:18:44,651 - #32 else
INFO  15:18:44,651 - #3 print
INFO  15:18:44,651 - #29 (
INFO  15:18:44,651 - #8 max
INFO  15:18:44,651 - #29 (
INFO  15:18:44,651 - #8 a
INFO  15:18:44,651 - #22 [
INFO  15:18:44,651 - #8 i
INFO  15:18:44,651 - #23 ]
INFO  15:18:44,651 - #28 ,
INFO  15:18:44,651 - #9 0
INFO  15:18:44,651 - #30 )
INFO  15:18:44,651 - #30 )
INFO  15:18:44,652 - #27 ;
INFO  15:18:44,652 - #21 }
INFO  15:18:44,652 - #34 while
INFO  15:18:44,652 - #29 (
INFO  15:18:44,652 - #8 i
INFO  15:18:44,652 - #42 <=
INFO  15:18:44,652 - #8 length
INFO  15:18:44,652 - #16 -
INFO  15:18:44,652 - #9 1
INFO  15:18:44,652 - #30 )
INFO  15:18:44,652 - #27 ;
INFO  15:18:44,652 - #3 print
INFO  15:18:44,652 - #29 (
INFO  15:18:44,652 - #8 d
INFO  15:18:44,652 - #30 )
INFO  15:18:44,653 - #27 ;
INFO  15:18:44,653 - #21 }
INFO  15:18:44,653 - #21 }
INFO  15:18:58,764 - #2 program
INFO  15:18:58,765 - #8 Program
INFO  15:18:58,765 - #20 {
INFO  15:18:58,765 - #5 const
INFO  15:18:58,765 - #8 int
INFO  15:18:58,765 - #8 c
INFO  15:18:58,766 - #24 =
INFO  15:18:58,766 - #9 10
INFO  15:18:58,766 - #27 ;
INFO  15:18:58,766 - #5 const
INFO  15:18:58,767 - #8 int
INFO  15:18:58,767 - #8 d
INFO  15:18:58,767 - #24 =
INFO  15:18:58,767 - #9 99
INFO  15:18:58,767 - #28 ,
INFO  15:18:58,767 - #8 eps
INFO  15:18:58,767 - #24 =
INFO  15:18:58,768 - #9 2
INFO  15:18:58,768 - #27 ;
INFO  15:18:58,768 - #8 int
INFO  15:18:58,768 - #8 e
INFO  15:18:58,768 - #27 ;
INFO  15:18:58,768 - #6 void
INFO  15:18:58,769 - #8 test
INFO  15:18:58,769 - #29 (
INFO  15:18:58,769 - #30 )
INFO  15:18:58,769 - #20 {
INFO  15:18:58,769 - #8 int
INFO  15:18:58,769 - #8 a
INFO  15:18:58,769 - #28 ,
INFO  15:18:58,769 - #8 b
INFO  15:18:58,769 - #28 ,
INFO  15:18:58,770 - #27 ;
ERROR 15:18:58,770 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  15:18:58,770 - #8 bool
INFO  15:18:58,770 - #8 cond
INFO  15:18:58,770 - #27 ;
ERROR 15:18:58,771 - Sintaksna greska - neispravna definicija promenljive na liniji 6, koloni 12 za simbol ";"!
INFO  15:18:58,772 - #8 a
INFO  15:18:58,772 - #24 =
INFO  15:18:58,772 - #9 3
INFO  15:18:58,772 - #27 ;
INFO  15:18:58,773 - #8 b
INFO  15:18:58,773 - #24 =
INFO  15:18:58,774 - #9 5
INFO  15:18:58,774 - #27 ;
INFO  15:18:58,774 - #8 cond
INFO  15:18:58,774 - #24 =
INFO  15:18:58,774 - #11 true
INFO  15:18:58,774 - #27 ;
INFO  15:18:58,776 - #31 if
INFO  15:18:58,776 - #29 (
INFO  15:18:58,776 - #9 2
INFO  15:18:58,776 - #17 *
INFO  15:18:58,776 - #29 (
INFO  15:18:58,777 - #8 a
INFO  15:18:58,777 - #16 -
INFO  15:18:58,777 - #8 b
INFO  15:18:58,778 - #16 -
INFO  15:18:58,779 - #9 1
INFO  15:18:58,779 - #30 )
INFO  15:18:58,779 - #16 -
INFO  15:18:58,780 - #9 14
INFO  15:18:58,780 - #38 >
INFO  15:18:58,780 - #9 0
INFO  15:18:58,782 - #14 ||
INFO  15:18:58,782 - #8 cond
INFO  15:18:58,783 - #30 )
INFO  15:18:58,783 - #3 print
INFO  15:18:58,783 - #29 (
INFO  15:18:58,783 - #8 a
INFO  15:18:58,783 - #15 +
INFO  15:18:58,783 - #8 b
INFO  15:18:58,784 - #30 )
INFO  15:18:58,784 - #27 ;
INFO  15:18:58,784 - #21 }
INFO  15:18:58,785 - #8 int
INFO  15:18:58,787 - #8 max
INFO  15:18:58,787 - #29 (
INFO  15:18:58,788 - #8 int
INFO  15:18:58,788 - #8 a
INFO  15:18:58,788 - #27 ;
ERROR 15:18:58,788 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  15:18:58,788 - #8 int
INFO  15:18:58,788 - #8 b
INFO  15:18:58,788 - #30 )
INFO  15:18:58,788 - #20 {
INFO  15:18:58,788 - #31 if
INFO  15:18:58,788 - #29 (
ERROR 15:18:58,788 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  15:18:58,789 - #8 a
INFO  15:18:58,789 - #38 >
INFO  15:18:58,789 - #9 0
INFO  15:18:58,789 - #8 b
ERROR 15:18:58,789 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  15:18:58,789 - #30 )
INFO  15:18:58,789 - #20 {
INFO  15:18:58,790 - #37 return
INFO  15:18:58,790 - #8 a
ERROR 15:18:58,790 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  15:18:58,790 - #27 ;
INFO  15:18:58,790 - #21 }
INFO  15:18:58,791 - #32 else
ERROR 15:18:58,791 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  15:18:58,791 - #37 return
INFO  15:18:58,791 - #8 b
INFO  15:18:58,791 - #27 ;
INFO  15:18:58,791 - #21 }
INFO  15:18:58,791 - #8 int
INFO  15:18:58,791 - #8 min
INFO  15:18:58,791 - #29 (
INFO  15:18:58,791 - #8 int
INFO  15:18:58,791 - #8 a
INFO  15:18:58,791 - #28 ,
INFO  15:18:58,791 - #8 int
INFO  15:18:58,791 - #8 b
INFO  15:18:58,791 - #30 )
ERROR 15:18:58,792 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  15:18:58,792 - #20 {
INFO  15:18:58,792 - #31 if
INFO  15:18:58,792 - #29 (
INFO  15:18:58,792 - #8 a
INFO  15:18:58,792 - #40 <
INFO  15:18:58,792 - #8 b
INFO  15:18:58,793 - #30 )
INFO  15:18:58,793 - #20 {
INFO  15:18:58,793 - #37 return
INFO  15:18:58,793 - #8 a
INFO  15:18:58,793 - #27 ;
INFO  15:18:58,793 - #21 }
INFO  15:18:58,793 - #32 else
INFO  15:18:58,794 - #20 {
INFO  15:18:58,794 - #37 return
INFO  15:18:58,794 - #8 b
INFO  15:18:58,794 - #27 ;
INFO  15:18:58,794 - #21 }
INFO  15:18:58,794 - #21 }
INFO  15:18:58,794 - #6 void
INFO  15:18:58,794 - #8 main
INFO  15:18:58,794 - #29 (
INFO  15:18:58,795 - #30 )
INFO  15:18:58,795 - #20 {
INFO  15:18:58,795 - #8 int
INFO  15:18:58,795 - #8 a
INFO  15:18:58,795 - #22 [
INFO  15:18:58,795 - #23 ]
INFO  15:18:58,795 - #27 ;
INFO  15:18:58,795 - #8 int
INFO  15:18:58,795 - #8 length
INFO  15:18:58,795 - #27 ;
INFO  15:18:58,795 - #8 length
INFO  15:18:58,795 - #24 =
INFO  15:18:58,795 - #8 c
INFO  15:18:58,795 - #27 ;
INFO  15:18:58,795 - #8 test
INFO  15:18:58,795 - #29 (
INFO  15:18:58,796 - #30 )
INFO  15:18:58,796 - #27 ;
INFO  15:18:58,796 - #31 if
INFO  15:18:58,796 - #29 (
INFO  15:18:58,796 - #8 length
INFO  15:18:58,796 - #38 >
INFO  15:18:58,796 - #9 0
INFO  15:18:58,796 - #13 &&
INFO  15:18:58,796 - #8 length
INFO  15:18:58,796 - #42 <=
INFO  15:18:58,796 - #8 d
INFO  15:18:58,797 - #30 )
INFO  15:18:58,797 - #8 a
INFO  15:18:58,797 - #24 =
INFO  15:18:58,797 - #7 new
INFO  15:18:58,797 - #8 int
INFO  15:18:58,797 - #22 [
INFO  15:18:58,797 - #8 length
INFO  15:18:58,798 - #23 ]
INFO  15:18:58,798 - #27 ;
INFO  15:18:58,798 - #32 else
INFO  15:18:58,798 - #8 a
INFO  15:18:58,798 - #24 =
INFO  15:18:58,798 - #7 new
INFO  15:18:58,798 - #8 int
INFO  15:18:58,798 - #22 [
INFO  15:18:58,798 - #9 5
INFO  15:18:58,798 - #23 ]
INFO  15:18:58,798 - #27 ;
INFO  15:18:58,798 - #33 do
INFO  15:18:58,799 - #20 {
INFO  15:18:58,799 - #4 read
INFO  15:18:58,799 - #29 (
INFO  15:18:58,799 - #8 a
INFO  15:18:58,799 - #22 [
INFO  15:18:58,799 - #8 i
INFO  15:18:58,799 - #23 ]
INFO  15:18:58,799 - #30 )
INFO  15:18:58,799 - #27 ;
INFO  15:18:58,799 - #31 if
INFO  15:18:58,799 - #29 (
INFO  15:18:58,799 - #8 a
INFO  15:18:58,800 - #22 [
INFO  15:18:58,800 - #8 i
INFO  15:18:58,800 - #23 ]
INFO  15:18:58,800 - #19 %
INFO  15:18:58,800 - #9 3
INFO  15:18:58,800 - #39 ==
INFO  15:18:58,800 - #9 0
INFO  15:18:58,801 - #30 )
INFO  15:18:58,801 - #3 print
INFO  15:18:58,801 - #29 (
INFO  15:18:58,801 - #8 a
INFO  15:18:58,801 - #22 [
INFO  15:18:58,801 - #8 i
INFO  15:18:58,801 - #23 ]
INFO  15:18:58,801 - #30 )
INFO  15:18:58,801 - #27 ;
INFO  15:18:58,802 - #32 else
INFO  15:18:58,802 - #3 print
INFO  15:18:58,802 - #29 (
INFO  15:18:58,802 - #8 max
INFO  15:18:58,802 - #29 (
INFO  15:18:58,802 - #8 a
INFO  15:18:58,802 - #22 [
INFO  15:18:58,802 - #8 i
INFO  15:18:58,802 - #23 ]
INFO  15:18:58,802 - #28 ,
INFO  15:18:58,802 - #9 0
INFO  15:18:58,802 - #30 )
INFO  15:18:58,802 - #30 )
INFO  15:18:58,803 - #27 ;
INFO  15:18:58,803 - #21 }
INFO  15:18:58,803 - #34 while
INFO  15:18:58,803 - #29 (
INFO  15:18:58,803 - #8 i
INFO  15:18:58,803 - #42 <=
INFO  15:18:58,803 - #8 length
INFO  15:18:58,803 - #16 -
INFO  15:18:58,803 - #9 1
INFO  15:18:58,803 - #30 )
INFO  15:18:58,803 - #27 ;
INFO  15:18:58,803 - #3 print
INFO  15:18:58,804 - #29 (
INFO  15:18:58,804 - #8 d
INFO  15:18:58,804 - #30 )
INFO  15:18:58,804 - #27 ;
INFO  15:18:58,804 - #21 }
INFO  15:18:58,804 - #21 }
INFO  15:26:44,166 - #2 program
INFO  15:26:44,166 - #8 Program
INFO  15:26:44,166 - #20 {
INFO  15:26:44,167 - #5 const
INFO  15:26:44,167 - #8 int
INFO  15:26:44,167 - #8 c
INFO  15:26:44,167 - #24 =
INFO  15:26:44,167 - #9 10
INFO  15:26:44,167 - #27 ;
INFO  15:26:44,167 - #5 const
INFO  15:26:44,168 - #8 int
INFO  15:26:44,168 - #8 d
INFO  15:26:44,168 - #24 =
INFO  15:26:44,168 - #9 99
INFO  15:26:44,168 - #28 ,
INFO  15:26:44,168 - #8 eps
INFO  15:26:44,168 - #24 =
INFO  15:26:44,169 - #9 2
INFO  15:26:44,169 - #27 ;
INFO  15:26:44,169 - #8 int
INFO  15:26:44,169 - #8 e
INFO  15:26:44,169 - #27 ;
INFO  15:26:44,170 - #6 void
INFO  15:26:44,170 - #8 test
INFO  15:26:44,170 - #29 (
INFO  15:26:44,170 - #30 )
INFO  15:26:44,170 - #20 {
INFO  15:26:44,171 - #8 int
INFO  15:26:44,171 - #8 a
INFO  15:26:44,171 - #28 ,
INFO  15:26:44,171 - #8 b
INFO  15:26:44,171 - #28 ,
INFO  15:26:44,171 - #27 ;
ERROR 15:26:44,171 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  15:26:44,171 - #8 bool
INFO  15:26:44,171 - #8 cond
INFO  15:26:44,172 - #27 ;
ERROR 15:26:44,172 - Sintaksna greska - neispravna definicija promenljive na liniji 6, koloni 12 za simbol ";"!
INFO  15:26:44,173 - #8 a
INFO  15:26:44,174 - #24 =
INFO  15:26:44,174 - #9 3
INFO  15:26:44,174 - #27 ;
INFO  15:26:44,175 - #8 b
INFO  15:26:44,175 - #24 =
INFO  15:26:44,175 - #9 5
INFO  15:26:44,175 - #27 ;
INFO  15:26:44,175 - #8 cond
INFO  15:26:44,176 - #24 =
INFO  15:26:44,176 - #11 true
INFO  15:26:44,176 - #27 ;
INFO  15:26:44,177 - #31 if
INFO  15:26:44,177 - #29 (
INFO  15:26:44,178 - #9 2
INFO  15:26:44,178 - #17 *
INFO  15:26:44,178 - #29 (
INFO  15:26:44,179 - #8 a
INFO  15:26:44,179 - #16 -
INFO  15:26:44,179 - #8 b
INFO  15:26:44,181 - #16 -
INFO  15:26:44,181 - #9 1
INFO  15:26:44,181 - #30 )
INFO  15:26:44,181 - #16 -
INFO  15:26:44,182 - #9 14
INFO  15:26:44,182 - #38 >
INFO  15:26:44,182 - #9 0
INFO  15:26:44,184 - #14 ||
INFO  15:26:44,184 - #8 cond
INFO  15:26:44,185 - #30 )
INFO  15:26:44,185 - #3 print
INFO  15:26:44,185 - #29 (
INFO  15:26:44,185 - #8 a
INFO  15:26:44,185 - #15 +
INFO  15:26:44,185 - #8 b
INFO  15:26:44,186 - #30 )
INFO  15:26:44,186 - #27 ;
INFO  15:26:44,186 - #21 }
INFO  15:26:44,187 - #8 int
INFO  15:26:44,190 - #8 max
INFO  15:26:44,190 - #29 (
INFO  15:26:44,190 - #8 int
INFO  15:26:44,190 - #8 a
INFO  15:26:44,190 - #27 ;
ERROR 15:26:44,190 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  15:26:44,190 - #8 int
INFO  15:26:44,190 - #8 b
INFO  15:26:44,190 - #30 )
INFO  15:26:44,190 - #20 {
INFO  15:26:44,190 - #31 if
INFO  15:26:44,190 - #29 (
ERROR 15:26:44,191 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  15:26:44,191 - #8 a
INFO  15:26:44,191 - #38 >
INFO  15:26:44,192 - #9 0
INFO  15:26:44,192 - #8 b
ERROR 15:26:44,192 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  15:26:44,192 - #30 )
INFO  15:26:44,192 - #20 {
INFO  15:26:44,192 - #37 return
INFO  15:26:44,192 - #8 a
ERROR 15:26:44,192 - Sintaksna greska - neispravan uslov if naredbe na liniji 16, koloni 15 za simbol "b"!
INFO  15:26:44,193 - #27 ;
INFO  15:26:44,193 - #21 }
INFO  15:26:44,193 - #32 else
ERROR 15:26:44,193 - Sintaksna greska na liniji 18, koloni 8 za simbol "else"!
INFO  15:26:44,193 - #37 return
INFO  15:26:44,193 - #8 b
INFO  15:26:44,193 - #27 ;
INFO  15:26:44,193 - #21 }
INFO  15:26:44,193 - #8 int
INFO  15:26:44,194 - #8 min
INFO  15:26:44,194 - #29 (
INFO  15:26:44,194 - #8 int
INFO  15:26:44,194 - #8 a
INFO  15:26:44,194 - #28 ,
INFO  15:26:44,194 - #8 int
INFO  15:26:44,194 - #8 b
INFO  15:26:44,194 - #30 )
ERROR 15:26:44,194 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 18, koloni 8 za simbol "else"!
INFO  15:26:44,195 - #20 {
INFO  15:26:44,195 - #31 if
INFO  15:26:44,195 - #29 (
INFO  15:26:44,195 - #8 a
INFO  15:26:44,195 - #40 <
INFO  15:26:44,195 - #8 b
INFO  15:26:44,196 - #30 )
INFO  15:26:44,196 - #20 {
INFO  15:26:44,196 - #37 return
INFO  15:26:44,196 - #8 a
INFO  15:26:44,196 - #27 ;
INFO  15:26:44,196 - #21 }
INFO  15:26:44,196 - #32 else
INFO  15:26:44,196 - #20 {
INFO  15:26:44,196 - #37 return
INFO  15:26:44,196 - #8 b
INFO  15:26:44,196 - #27 ;
INFO  15:26:44,197 - #21 }
INFO  15:26:44,197 - #21 }
INFO  15:26:44,197 - #6 void
INFO  15:26:44,197 - #8 main
INFO  15:26:44,197 - #29 (
INFO  15:26:44,197 - #30 )
INFO  15:26:44,197 - #20 {
INFO  15:26:44,197 - #8 int
INFO  15:26:44,197 - #8 a
INFO  15:26:44,197 - #22 [
INFO  15:26:44,198 - #23 ]
INFO  15:26:44,198 - #27 ;
INFO  15:26:44,198 - #8 int
INFO  15:26:44,198 - #8 length
INFO  15:26:44,198 - #27 ;
INFO  15:26:44,198 - #8 length
INFO  15:26:44,198 - #24 =
INFO  15:26:44,198 - #8 c
INFO  15:26:44,198 - #27 ;
INFO  15:26:44,198 - #8 test
INFO  15:26:44,198 - #29 (
INFO  15:26:44,198 - #30 )
INFO  15:26:44,198 - #27 ;
INFO  15:26:44,198 - #31 if
INFO  15:26:44,199 - #29 (
INFO  15:26:44,199 - #8 length
INFO  15:26:44,199 - #38 >
INFO  15:26:44,199 - #9 0
INFO  15:26:44,199 - #13 &&
INFO  15:26:44,199 - #8 length
INFO  15:26:44,199 - #42 <=
INFO  15:26:44,199 - #8 d
INFO  15:26:44,200 - #30 )
INFO  15:26:44,200 - #8 a
INFO  15:26:44,200 - #24 =
INFO  15:26:44,200 - #7 new
INFO  15:26:44,200 - #8 int
INFO  15:26:44,200 - #22 [
INFO  15:26:44,200 - #8 length
INFO  15:26:44,200 - #23 ]
INFO  15:26:44,200 - #27 ;
INFO  15:26:44,200 - #32 else
INFO  15:26:44,201 - #8 a
INFO  15:26:44,201 - #24 =
INFO  15:26:44,201 - #7 new
INFO  15:26:44,201 - #8 int
INFO  15:26:44,201 - #22 [
INFO  15:26:44,201 - #9 5
INFO  15:26:44,201 - #23 ]
INFO  15:26:44,201 - #27 ;
INFO  15:26:44,201 - #33 do
INFO  15:26:44,201 - #20 {
INFO  15:26:44,201 - #4 read
INFO  15:26:44,201 - #29 (
INFO  15:26:44,201 - #8 a
INFO  15:26:44,201 - #22 [
INFO  15:26:44,201 - #8 i
INFO  15:26:44,202 - #23 ]
INFO  15:26:44,202 - #30 )
INFO  15:26:44,202 - #27 ;
INFO  15:26:44,202 - #31 if
INFO  15:26:44,202 - #29 (
INFO  15:26:44,202 - #8 a
INFO  15:26:44,202 - #22 [
INFO  15:26:44,202 - #8 i
INFO  15:26:44,202 - #23 ]
INFO  15:26:44,202 - #19 %
INFO  15:26:44,202 - #9 3
INFO  15:26:44,203 - #39 ==
INFO  15:26:44,203 - #9 0
INFO  15:26:44,204 - #30 )
INFO  15:26:44,204 - #3 print
INFO  15:26:44,204 - #29 (
INFO  15:26:44,204 - #8 a
INFO  15:26:44,204 - #22 [
INFO  15:26:44,204 - #8 i
INFO  15:26:44,204 - #23 ]
INFO  15:26:44,204 - #30 )
INFO  15:26:44,204 - #27 ;
INFO  15:26:44,204 - #32 else
INFO  15:26:44,204 - #3 print
INFO  15:26:44,204 - #29 (
INFO  15:26:44,204 - #8 max
INFO  15:26:44,204 - #29 (
INFO  15:26:44,204 - #8 a
INFO  15:26:44,205 - #22 [
INFO  15:26:44,205 - #8 i
INFO  15:26:44,205 - #23 ]
INFO  15:26:44,205 - #28 ,
INFO  15:26:44,205 - #9 0
INFO  15:26:44,205 - #30 )
INFO  15:26:44,205 - #30 )
INFO  15:26:44,205 - #27 ;
INFO  15:26:44,205 - #21 }
INFO  15:26:44,205 - #34 while
INFO  15:26:44,205 - #29 (
INFO  15:26:44,205 - #8 i
INFO  15:26:44,206 - #42 <=
INFO  15:26:44,206 - #8 length
INFO  15:26:44,206 - #16 -
INFO  15:26:44,206 - #9 1
INFO  15:26:44,206 - #30 )
INFO  15:26:44,206 - #27 ;
INFO  15:26:44,206 - #3 print
INFO  15:26:44,206 - #29 (
INFO  15:26:44,206 - #8 d
INFO  15:26:44,206 - #30 )
INFO  15:26:44,206 - #27 ;
INFO  15:26:44,206 - #21 }
INFO  15:26:44,206 - #21 }
INFO  20:28:18,734 - #2 program
INFO  20:28:18,746 - #8 Program
INFO  20:28:18,746 - #20 {
INFO  20:28:18,746 - #5 const
INFO  20:28:18,746 - #8 int
INFO  20:28:18,746 - #8 c
INFO  20:28:18,747 - #24 =
INFO  20:28:18,747 - #9 10
INFO  20:28:18,747 - #27 ;
INFO  20:28:18,747 - #5 const
INFO  20:28:18,748 - #8 int
INFO  20:28:18,748 - #8 d
INFO  20:28:18,748 - #24 =
INFO  20:28:18,748 - #9 99
INFO  20:28:18,748 - #28 ,
INFO  20:28:18,748 - #8 eps
INFO  20:28:18,748 - #24 =
INFO  20:28:18,748 - #9 2
INFO  20:28:18,748 - #27 ;
INFO  20:28:18,748 - #8 int
INFO  20:28:18,749 - #8 e
INFO  20:28:18,749 - #27 ;
INFO  20:28:18,749 - #6 void
INFO  20:28:18,749 - #8 test
INFO  20:28:18,749 - #29 (
INFO  20:28:18,749 - #30 )
INFO  20:28:18,749 - #20 {
INFO  20:28:18,749 - #8 int
INFO  20:28:18,750 - #8 a
INFO  20:28:18,750 - #28 ,
INFO  20:28:18,750 - #8 b
INFO  20:28:18,750 - #28 ,
INFO  20:28:18,750 - #27 ;
ERROR 20:28:18,750 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  20:28:18,751 - #8 bool
INFO  20:28:18,751 - #8 cond
INFO  20:28:18,751 - #27 ;
ERROR 20:28:18,752 - Sintaksna greska - neispravna definicija promenljive na liniji 6, koloni 12 za simbol ";"!
INFO  20:28:18,752 - #8 a
INFO  20:28:18,753 - #24 =
INFO  20:28:18,753 - #9 3
INFO  20:28:18,753 - #27 ;
INFO  20:28:18,753 - #8 b
INFO  20:28:18,754 - #24 =
INFO  20:28:18,754 - #27 ;
ERROR 20:28:18,754 - Sintaksna greska na liniji 9, koloni 7 za simbol ";"!
INFO  20:28:18,754 - #8 cond
INFO  20:28:18,754 - #24 =
INFO  20:28:18,754 - #11 true
ERROR 20:28:18,754 - Sintaksna greska - neispravan izraz na liniji 9, koloni 7 za simbol ";"!
INFO  20:28:18,755 - #27 ;
INFO  20:28:18,756 - #31 if
INFO  20:28:18,757 - #29 (
INFO  20:28:18,757 - #9 2
INFO  20:28:18,757 - #17 *
INFO  20:28:18,757 - #29 (
INFO  20:28:18,758 - #8 a
INFO  20:28:18,758 - #16 -
INFO  20:28:18,758 - #8 b
INFO  20:28:18,759 - #16 -
INFO  20:28:18,760 - #9 1
INFO  20:28:18,760 - #30 )
INFO  20:28:18,760 - #16 -
INFO  20:28:18,761 - #9 14
INFO  20:28:18,761 - #38 >
INFO  20:28:18,761 - #9 0
INFO  20:28:18,762 - #14 ||
INFO  20:28:18,762 - #8 cond
INFO  20:28:18,763 - #30 )
INFO  20:28:18,763 - #3 print
INFO  20:28:18,763 - #29 (
INFO  20:28:18,763 - #8 a
INFO  20:28:18,763 - #15 +
INFO  20:28:18,763 - #8 b
INFO  20:28:18,764 - #30 )
INFO  20:28:18,764 - #27 ;
INFO  20:28:18,764 - #21 }
INFO  20:28:18,767 - #8 int
INFO  20:28:18,767 - #8 max
INFO  20:28:18,767 - #29 (
INFO  20:28:18,767 - #8 int
INFO  20:28:18,767 - #8 a
INFO  20:28:18,767 - #27 ;
ERROR 20:28:18,767 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  20:28:18,768 - #8 int
INFO  20:28:18,768 - #8 b
INFO  20:28:18,768 - #30 )
INFO  20:28:18,768 - #20 {
INFO  20:28:18,768 - #31 if
INFO  20:28:18,768 - #29 (
ERROR 20:28:18,768 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  20:28:18,769 - #8 a
INFO  20:28:18,769 - #38 >
INFO  20:28:18,769 - #9 0
INFO  20:28:18,769 - #8 b
ERROR 20:28:18,769 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  20:28:18,769 - #30 )
INFO  20:28:18,769 - #20 {
INFO  20:28:18,769 - #37 return
INFO  20:28:18,769 - #8 a
ERROR 20:28:18,770 - Sintaksna greska - neispravan izraz na liniji 16, koloni 15 za simbol "b"!
INFO  20:28:18,770 - #27 ;
INFO  20:28:18,770 - #21 }
INFO  20:28:18,770 - #32 else
INFO  20:28:18,770 - #37 return
INFO  20:28:18,770 - #8 b
INFO  20:28:18,770 - #27 ;
INFO  20:28:18,770 - #21 }
INFO  20:28:18,771 - #8 int
INFO  20:28:18,771 - #8 min
INFO  20:28:18,771 - #29 (
INFO  20:28:18,771 - #8 int
INFO  20:28:18,771 - #8 a
INFO  20:28:18,771 - #28 ,
INFO  20:28:18,771 - #8 int
INFO  20:28:18,771 - #8 b
INFO  20:28:18,771 - #30 )
INFO  20:28:18,772 - #20 {
INFO  20:28:18,772 - #31 if
INFO  20:28:18,772 - #29 (
INFO  20:28:18,772 - #8 a
INFO  20:28:18,772 - #40 <
INFO  20:28:18,772 - #8 b
INFO  20:28:18,773 - #30 )
INFO  20:28:18,773 - #20 {
INFO  20:28:18,773 - #37 return
INFO  20:28:18,773 - #8 a
INFO  20:28:18,773 - #27 ;
INFO  20:28:18,773 - #21 }
INFO  20:28:18,773 - #32 else
INFO  20:28:18,773 - #20 {
INFO  20:28:18,773 - #37 return
INFO  20:28:18,773 - #8 b
INFO  20:28:18,773 - #27 ;
INFO  20:28:18,773 - #21 }
INFO  20:28:18,774 - #21 }
INFO  20:28:18,774 - #6 void
INFO  20:28:18,774 - #8 main
INFO  20:28:18,774 - #29 (
INFO  20:28:18,774 - #30 )
INFO  20:28:18,774 - #20 {
INFO  20:28:18,774 - #8 int
INFO  20:28:18,774 - #8 a
INFO  20:28:18,774 - #22 [
INFO  20:28:18,774 - #27 ;
ERROR 20:28:18,774 - Sintaksna greska na liniji 30, koloni 14 za simbol ";"!
INFO  20:28:18,774 - #8 int
INFO  20:28:18,774 - #8 length
INFO  20:28:18,774 - #27 ;
ERROR 20:28:18,775 - Sintaksna greska - neispravna definicija promenljive na liniji 30, koloni 14 za simbol ";"!
INFO  20:28:18,775 - #8 length
INFO  20:28:18,775 - #24 =
INFO  20:28:18,775 - #8 c
INFO  20:28:18,775 - #27 ;
INFO  20:28:18,775 - #8 test
INFO  20:28:18,775 - #29 (
INFO  20:28:18,775 - #30 )
INFO  20:28:18,775 - #27 ;
INFO  20:28:18,775 - #31 if
INFO  20:28:18,775 - #29 (
INFO  20:28:18,775 - #8 length
INFO  20:28:18,775 - #38 >
INFO  20:28:18,775 - #9 0
INFO  20:28:18,776 - #13 &&
INFO  20:28:18,776 - #8 length
INFO  20:28:18,776 - #42 <=
INFO  20:28:18,776 - #8 d
INFO  20:28:18,776 - #30 )
INFO  20:28:18,777 - #8 a
INFO  20:28:18,777 - #24 =
INFO  20:28:18,777 - #7 new
INFO  20:28:18,777 - #8 int
INFO  20:28:18,777 - #22 [
INFO  20:28:18,777 - #8 length
INFO  20:28:18,777 - #23 ]
INFO  20:28:18,777 - #27 ;
INFO  20:28:18,777 - #32 else
INFO  20:28:18,777 - #8 a
INFO  20:28:18,777 - #24 =
INFO  20:28:18,778 - #7 new
INFO  20:28:18,778 - #8 int
INFO  20:28:18,778 - #22 [
INFO  20:28:18,778 - #9 5
INFO  20:28:18,778 - #23 ]
INFO  20:28:18,778 - #27 ;
INFO  20:28:18,778 - #33 do
INFO  20:28:18,778 - #20 {
INFO  20:28:18,778 - #4 read
INFO  20:28:18,778 - #29 (
INFO  20:28:18,778 - #8 a
INFO  20:28:18,778 - #22 [
INFO  20:28:18,778 - #8 i
INFO  20:28:18,778 - #23 ]
INFO  20:28:18,778 - #30 )
INFO  20:28:18,779 - #27 ;
INFO  20:28:18,779 - #31 if
INFO  20:28:18,779 - #29 (
INFO  20:28:18,779 - #8 a
INFO  20:28:18,779 - #22 [
INFO  20:28:18,779 - #8 i
INFO  20:28:18,779 - #23 ]
INFO  20:28:18,779 - #19 %
INFO  20:28:18,779 - #9 3
INFO  20:28:18,780 - #39 ==
INFO  20:28:18,780 - #9 0
INFO  20:28:18,780 - #30 )
INFO  20:28:18,780 - #3 print
INFO  20:28:18,781 - #29 (
INFO  20:28:18,781 - #8 a
INFO  20:28:18,781 - #22 [
INFO  20:28:18,781 - #8 i
INFO  20:28:18,781 - #23 ]
INFO  20:28:18,781 - #30 )
INFO  20:28:18,781 - #27 ;
INFO  20:28:18,781 - #32 else
INFO  20:28:18,781 - #3 print
INFO  20:28:18,781 - #29 (
INFO  20:28:18,781 - #8 max
INFO  20:28:18,781 - #29 (
INFO  20:28:18,781 - #8 a
INFO  20:28:18,781 - #22 [
INFO  20:28:18,781 - #8 i
INFO  20:28:18,781 - #23 ]
INFO  20:28:18,781 - #28 ,
INFO  20:28:18,781 - #9 0
INFO  20:28:18,782 - #30 )
INFO  20:28:18,782 - #30 )
INFO  20:28:18,782 - #27 ;
INFO  20:28:18,782 - #21 }
INFO  20:28:18,782 - #34 while
INFO  20:28:18,782 - #29 (
INFO  20:28:18,782 - #8 i
INFO  20:28:18,782 - #42 <=
INFO  20:28:18,782 - #8 length
INFO  20:28:18,782 - #16 -
INFO  20:28:18,783 - #9 1
INFO  20:28:18,783 - #30 )
INFO  20:28:18,783 - #27 ;
INFO  20:28:18,783 - #3 print
INFO  20:28:18,783 - #29 (
INFO  20:28:18,783 - #8 d
INFO  20:28:18,783 - #30 )
INFO  20:28:18,783 - #27 ;
INFO  20:28:18,783 - #21 }
INFO  20:28:18,783 - #21 }
INFO  20:37:45,516 - #2 program
INFO  20:37:45,517 - #8 Program
INFO  20:37:45,517 - #20 {
INFO  20:37:45,517 - #5 const
INFO  20:37:45,517 - #8 int
INFO  20:37:45,517 - #8 c
INFO  20:37:45,517 - #24 =
INFO  20:37:45,517 - #9 10
INFO  20:37:45,517 - #27 ;
INFO  20:37:45,518 - #5 const
INFO  20:37:45,518 - #8 int
INFO  20:37:45,518 - #8 d
INFO  20:37:45,518 - #24 =
INFO  20:37:45,518 - #9 99
INFO  20:37:45,519 - #28 ,
INFO  20:37:45,519 - #8 eps
INFO  20:37:45,519 - #24 =
INFO  20:37:45,519 - #9 2
INFO  20:37:45,519 - #27 ;
INFO  20:37:45,519 - #8 int
INFO  20:37:45,519 - #8 e
INFO  20:37:45,519 - #27 ;
INFO  20:37:45,520 - #6 void
INFO  20:37:45,520 - #8 test
INFO  20:37:45,520 - #29 (
INFO  20:37:45,520 - #30 )
INFO  20:37:45,520 - #20 {
INFO  20:37:45,520 - #8 int
INFO  20:37:45,520 - #8 a
INFO  20:37:45,520 - #28 ,
INFO  20:37:45,521 - #8 b
INFO  20:37:45,521 - #28 ,
INFO  20:37:45,521 - #27 ;
ERROR 20:37:45,521 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  20:37:45,521 - #8 bool
INFO  20:37:45,521 - #8 cond
INFO  20:37:45,521 - #27 ;
ERROR 20:37:45,522 - Sintaksna greska - neispravna definicija promenljive na liniji 6, koloni 12 za simbol ";"!
INFO  20:37:45,523 - #8 a
INFO  20:37:45,523 - #24 =
INFO  20:37:45,523 - #9 3
INFO  20:37:45,523 - #27 ;
INFO  20:37:45,524 - #8 b
INFO  20:37:45,524 - #24 =
INFO  20:37:45,524 - #27 ;
ERROR 20:37:45,524 - Sintaksna greska na liniji 9, koloni 7 za simbol ";"!
INFO  20:37:45,524 - #8 cond
INFO  20:37:45,524 - #24 =
INFO  20:37:45,524 - #11 true
ERROR 20:37:45,525 - Sintaksna greska - neispravan izraz na liniji 9, koloni 7 za simbol ";"!
INFO  20:37:45,526 - #27 ;
INFO  20:37:45,527 - #31 if
INFO  20:37:45,527 - #29 (
INFO  20:37:45,527 - #9 2
INFO  20:37:45,527 - #17 *
INFO  20:37:45,527 - #29 (
INFO  20:37:45,529 - #8 a
INFO  20:37:45,529 - #16 -
INFO  20:37:45,529 - #8 b
INFO  20:37:45,530 - #16 -
INFO  20:37:45,530 - #9 1
INFO  20:37:45,530 - #30 )
INFO  20:37:45,531 - #16 -
INFO  20:37:45,531 - #9 14
INFO  20:37:45,532 - #38 >
INFO  20:37:45,532 - #9 0
INFO  20:37:45,533 - #14 ||
INFO  20:37:45,534 - #8 cond
INFO  20:37:45,534 - #30 )
INFO  20:37:45,534 - #3 print
INFO  20:37:45,534 - #29 (
INFO  20:37:45,534 - #8 a
INFO  20:37:45,534 - #15 +
INFO  20:37:45,535 - #8 b
INFO  20:37:45,535 - #30 )
INFO  20:37:45,535 - #27 ;
INFO  20:37:45,535 - #21 }
INFO  20:37:45,538 - #8 int
INFO  20:37:45,538 - #8 max
INFO  20:37:45,539 - #29 (
INFO  20:37:45,539 - #8 int
INFO  20:37:45,539 - #8 a
INFO  20:37:45,539 - #27 ;
ERROR 20:37:45,539 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  20:37:45,539 - #8 int
INFO  20:37:45,539 - #8 b
INFO  20:37:45,539 - #30 )
INFO  20:37:45,539 - #20 {
INFO  20:37:45,539 - #31 if
INFO  20:37:45,539 - #29 (
ERROR 20:37:45,539 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  20:37:45,540 - #8 a
INFO  20:37:45,540 - #38 >
INFO  20:37:45,540 - #9 0
INFO  20:37:45,541 - #8 b
ERROR 20:37:45,541 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  20:37:45,541 - #30 )
INFO  20:37:45,541 - #20 {
INFO  20:37:45,541 - #37 return
INFO  20:37:45,541 - #8 a
ERROR 20:37:45,541 - Sintaksna greska - neispravan izraz na liniji 16, koloni 15 za simbol "b"!
INFO  20:37:45,541 - #27 ;
INFO  20:37:45,541 - #21 }
INFO  20:37:45,541 - #32 else
INFO  20:37:45,541 - #37 return
INFO  20:37:45,541 - #8 b
INFO  20:37:45,542 - #27 ;
INFO  20:37:45,542 - #21 }
INFO  20:37:45,542 - #8 int
INFO  20:37:45,542 - #8 min
INFO  20:37:45,542 - #29 (
INFO  20:37:45,543 - #8 int
INFO  20:37:45,543 - #8 a
INFO  20:37:45,543 - #28 ,
INFO  20:37:45,543 - #8 int
INFO  20:37:45,543 - #8 b
INFO  20:37:45,543 - #30 )
INFO  20:37:45,543 - #20 {
INFO  20:37:45,543 - #31 if
INFO  20:37:45,543 - #29 (
INFO  20:37:45,543 - #8 a
INFO  20:37:45,543 - #40 <
INFO  20:37:45,544 - #8 b
INFO  20:37:45,544 - #30 )
INFO  20:37:45,544 - #20 {
INFO  20:37:45,544 - #37 return
INFO  20:37:45,545 - #8 a
INFO  20:37:45,545 - #27 ;
INFO  20:37:45,545 - #21 }
INFO  20:37:45,545 - #32 else
INFO  20:37:45,545 - #20 {
INFO  20:37:45,545 - #37 return
INFO  20:37:45,545 - #8 b
INFO  20:37:45,545 - #27 ;
INFO  20:37:45,545 - #21 }
INFO  20:37:45,545 - #21 }
INFO  20:37:45,545 - #6 void
INFO  20:37:45,545 - #8 main
INFO  20:37:45,545 - #29 (
INFO  20:37:45,545 - #30 )
INFO  20:37:45,545 - #20 {
INFO  20:37:45,546 - #8 int
INFO  20:37:45,546 - #8 a
INFO  20:37:45,546 - #22 [
INFO  20:37:45,546 - #27 ;
ERROR 20:37:45,546 - Sintaksna greska na liniji 30, koloni 14 za simbol ";"!
INFO  20:37:45,546 - #8 int
INFO  20:37:45,546 - #8 length
INFO  20:37:45,546 - #27 ;
ERROR 20:37:45,546 - Sintaksna greska - neispravna definicija promenljive na liniji 30, koloni 14 za simbol ";"!
INFO  20:37:45,546 - #8 length
INFO  20:37:45,546 - #24 =
INFO  20:37:45,546 - #8 c
INFO  20:37:45,546 - #27 ;
INFO  20:37:45,546 - #8 test
INFO  20:37:45,546 - #29 (
INFO  20:37:45,546 - #30 )
INFO  20:37:45,546 - #27 ;
INFO  20:37:45,547 - #31 if
INFO  20:37:45,547 - #29 (
INFO  20:37:45,547 - #8 length
INFO  20:37:45,547 - #38 >
INFO  20:37:45,547 - #9 0
INFO  20:37:45,547 - #13 &&
INFO  20:37:45,547 - #8 length
INFO  20:37:45,547 - #42 <=
INFO  20:37:45,547 - #8 d
INFO  20:37:45,548 - #30 )
INFO  20:37:45,548 - #8 a
INFO  20:37:45,548 - #24 =
INFO  20:37:45,548 - #7 new
INFO  20:37:45,548 - #8 int
INFO  20:37:45,548 - #22 [
INFO  20:37:45,548 - #8 length
INFO  20:37:45,548 - #23 ]
INFO  20:37:45,548 - #27 ;
INFO  20:37:45,549 - #32 else
INFO  20:37:45,549 - #8 a
INFO  20:37:45,549 - #24 =
INFO  20:37:45,549 - #7 new
INFO  20:37:45,549 - #8 int
INFO  20:37:45,549 - #22 [
INFO  20:37:45,549 - #9 5
INFO  20:37:45,549 - #23 ]
INFO  20:37:45,549 - #27 ;
INFO  20:37:45,549 - #33 do
INFO  20:37:45,549 - #20 {
INFO  20:37:45,549 - #4 read
INFO  20:37:45,550 - #29 (
INFO  20:37:45,550 - #8 a
INFO  20:37:45,550 - #22 [
INFO  20:37:45,550 - #8 i
INFO  20:37:45,550 - #23 ]
INFO  20:37:45,550 - #30 )
INFO  20:37:45,550 - #27 ;
INFO  20:37:45,550 - #31 if
INFO  20:37:45,550 - #29 (
INFO  20:37:45,550 - #8 a
INFO  20:37:45,550 - #22 [
INFO  20:37:45,551 - #8 i
INFO  20:37:45,551 - #23 ]
INFO  20:37:45,551 - #19 %
INFO  20:37:45,551 - #9 3
INFO  20:37:45,551 - #39 ==
INFO  20:37:45,552 - #9 0
INFO  20:37:45,552 - #30 )
INFO  20:37:45,552 - #3 print
INFO  20:37:45,552 - #29 (
INFO  20:37:45,552 - #8 a
INFO  20:37:45,552 - #22 [
INFO  20:37:45,552 - #8 i
INFO  20:37:45,552 - #23 ]
INFO  20:37:45,553 - #30 )
INFO  20:37:45,553 - #27 ;
INFO  20:37:45,553 - #32 else
INFO  20:37:45,553 - #3 print
INFO  20:37:45,553 - #29 (
INFO  20:37:45,553 - #8 max
INFO  20:37:45,553 - #29 (
INFO  20:37:45,553 - #8 a
INFO  20:37:45,553 - #22 [
INFO  20:37:45,553 - #8 i
INFO  20:37:45,553 - #23 ]
INFO  20:37:45,553 - #28 ,
INFO  20:37:45,553 - #9 0
INFO  20:37:45,553 - #30 )
INFO  20:37:45,553 - #30 )
INFO  20:37:45,554 - #27 ;
INFO  20:37:45,554 - #21 }
INFO  20:37:45,554 - #34 while
INFO  20:37:45,554 - #29 (
INFO  20:37:45,554 - #8 i
INFO  20:37:45,554 - #42 <=
INFO  20:37:45,554 - #8 length
INFO  20:37:45,554 - #16 -
INFO  20:37:45,554 - #9 1
INFO  20:37:45,554 - #30 )
INFO  20:37:45,554 - #27 ;
INFO  20:37:45,554 - #3 print
INFO  20:37:45,554 - #29 (
INFO  20:37:45,554 - #8 d
INFO  20:37:45,555 - #30 )
INFO  20:37:45,555 - #27 ;
INFO  20:37:45,555 - #21 }
INFO  20:37:45,555 - #21 }
INFO  20:37:56,219 - #2 program
INFO  20:37:56,219 - #8 Program
INFO  20:37:56,219 - #20 {
INFO  20:37:56,219 - #5 const
INFO  20:37:56,220 - #8 int
INFO  20:37:56,220 - #8 c
INFO  20:37:56,220 - #24 =
INFO  20:37:56,220 - #9 10
INFO  20:37:56,220 - #27 ;
INFO  20:37:56,220 - #5 const
INFO  20:37:56,221 - #8 int
INFO  20:37:56,221 - #8 d
INFO  20:37:56,221 - #24 =
INFO  20:37:56,221 - #9 99
INFO  20:37:56,221 - #28 ,
INFO  20:37:56,221 - #8 eps
INFO  20:37:56,221 - #24 =
INFO  20:37:56,222 - #9 2
INFO  20:37:56,222 - #27 ;
INFO  20:37:56,222 - #8 int
INFO  20:37:56,222 - #8 e
INFO  20:37:56,222 - #27 ;
INFO  20:37:56,222 - #6 void
INFO  20:37:56,223 - #8 test
INFO  20:37:56,223 - #29 (
INFO  20:37:56,223 - #30 )
INFO  20:37:56,223 - #20 {
INFO  20:37:56,223 - #8 int
INFO  20:37:56,223 - #8 a
INFO  20:37:56,223 - #28 ,
INFO  20:37:56,223 - #8 b
INFO  20:37:56,223 - #28 ,
INFO  20:37:56,223 - #27 ;
ERROR 20:37:56,224 - Sintaksna greska na liniji 6, koloni 12 za simbol ";"!
INFO  20:37:56,224 - #8 bool
INFO  20:37:56,224 - #8 cond
INFO  20:37:56,224 - #27 ;
ERROR 20:37:56,224 - Sintaksna greska - neispravna definicija promenljive na liniji 6, koloni 12 za simbol ";"!
INFO  20:37:56,225 - #8 a
INFO  20:37:56,225 - #24 =
INFO  20:37:56,226 - #9 3
INFO  20:37:56,226 - #27 ;
INFO  20:37:56,226 - #8 b
INFO  20:37:56,227 - #24 =
INFO  20:37:56,227 - #27 ;
ERROR 20:37:56,227 - Sintaksna greska na liniji 9, koloni 7 za simbol ";"!
INFO  20:37:56,227 - #8 cond
INFO  20:37:56,227 - #24 =
INFO  20:37:56,227 - #11 true
ERROR 20:37:56,227 - Sintaksna greska - neispravan izraz na liniji 9, koloni 7 za simbol ";"!
INFO  20:37:56,228 - #27 ;
INFO  20:37:56,230 - #31 if
INFO  20:37:56,230 - #29 (
INFO  20:37:56,230 - #9 2
INFO  20:37:56,230 - #17 *
INFO  20:37:56,230 - #29 (
INFO  20:37:56,232 - #8 a
INFO  20:37:56,232 - #16 -
INFO  20:37:56,232 - #8 b
INFO  20:37:56,233 - #16 -
INFO  20:37:56,233 - #9 1
INFO  20:37:56,233 - #30 )
INFO  20:37:56,234 - #16 -
INFO  20:37:56,234 - #9 14
INFO  20:37:56,235 - #38 >
INFO  20:37:56,235 - #9 0
INFO  20:37:56,236 - #14 ||
INFO  20:37:56,236 - #8 cond
INFO  20:37:56,237 - #30 )
INFO  20:37:56,237 - #3 print
INFO  20:37:56,237 - #29 (
INFO  20:37:56,237 - #8 a
INFO  20:37:56,237 - #15 +
INFO  20:37:56,237 - #8 b
INFO  20:37:56,238 - #30 )
INFO  20:37:56,238 - #27 ;
INFO  20:37:56,238 - #21 }
INFO  20:37:56,241 - #8 int
INFO  20:37:56,242 - #8 max
INFO  20:37:56,242 - #29 (
INFO  20:37:56,242 - #8 int
INFO  20:37:56,242 - #8 a
INFO  20:37:56,242 - #27 ;
ERROR 20:37:56,242 - Sintaksna greska na liniji 15, koloni 17 za simbol ";"!
INFO  20:37:56,242 - #8 int
INFO  20:37:56,242 - #8 b
INFO  20:37:56,242 - #30 )
INFO  20:37:56,242 - #20 {
INFO  20:37:56,243 - #31 if
INFO  20:37:56,243 - #29 (
ERROR 20:37:56,243 - Sintaksna greska - neispravni formalni parametri funkcije na liniji 15, koloni 17 za simbol ";"!
INFO  20:37:56,244 - #8 a
INFO  20:37:56,244 - #38 >
INFO  20:37:56,244 - #9 0
INFO  20:37:56,244 - #8 b
ERROR 20:37:56,244 - Sintaksna greska na liniji 16, koloni 15 za simbol "b"!
INFO  20:37:56,244 - #30 )
INFO  20:37:56,244 - #20 {
INFO  20:37:56,244 - #37 return
INFO  20:37:56,244 - #8 a
ERROR 20:37:56,244 - Sintaksna greska - neispravan izraz na liniji 16, koloni 15 za simbol "b"!
INFO  20:37:56,244 - #27 ;
INFO  20:37:56,245 - #21 }
INFO  20:37:56,245 - #32 else
INFO  20:37:56,245 - #37 return
INFO  20:37:56,245 - #8 b
INFO  20:37:56,245 - #27 ;
INFO  20:37:56,245 - #21 }
INFO  20:37:56,246 - #8 int
INFO  20:37:56,246 - #8 min
INFO  20:37:56,246 - #29 (
INFO  20:37:56,246 - #8 int
INFO  20:37:56,246 - #8 a
INFO  20:37:56,246 - #28 ,
INFO  20:37:56,246 - #8 int
INFO  20:37:56,246 - #8 b
INFO  20:37:56,247 - #30 )
INFO  20:37:56,247 - #20 {
INFO  20:37:56,247 - #31 if
INFO  20:37:56,247 - #29 (
INFO  20:37:56,247 - #8 a
INFO  20:37:56,247 - #40 <
INFO  20:37:56,247 - #8 b
INFO  20:37:56,248 - #30 )
INFO  20:37:56,248 - #20 {
INFO  20:37:56,248 - #37 return
INFO  20:37:56,248 - #8 a
INFO  20:37:56,248 - #27 ;
INFO  20:37:56,248 - #21 }
INFO  20:37:56,248 - #32 else
INFO  20:37:56,248 - #20 {
INFO  20:37:56,248 - #37 return
INFO  20:37:56,248 - #8 b
INFO  20:37:56,248 - #27 ;
INFO  20:37:56,249 - #21 }
INFO  20:37:56,249 - #21 }
INFO  20:37:56,249 - #6 void
INFO  20:37:56,249 - #8 main
INFO  20:37:56,249 - #29 (
INFO  20:37:56,249 - #30 )
INFO  20:37:56,249 - #20 {
INFO  20:37:56,249 - #8 int
INFO  20:37:56,249 - #8 a
INFO  20:37:56,249 - #22 [
INFO  20:37:56,249 - #27 ;
ERROR 20:37:56,249 - Sintaksna greska na liniji 30, koloni 14 za simbol ";"!
INFO  20:37:56,249 - #8 int
INFO  20:37:56,249 - #8 length
INFO  20:37:56,249 - #27 ;
ERROR 20:37:56,250 - Sintaksna greska - neispravna definicija promenljive na liniji 30, koloni 14 za simbol ";"!
INFO  20:37:56,250 - #8 length
INFO  20:37:56,250 - #24 =
INFO  20:37:56,250 - #8 c
INFO  20:37:56,250 - #27 ;
INFO  20:37:56,250 - #8 test
INFO  20:37:56,250 - #29 (
INFO  20:37:56,250 - #30 )
INFO  20:37:56,250 - #27 ;
INFO  20:37:56,250 - #31 if
INFO  20:37:56,250 - #29 (
INFO  20:37:56,250 - #8 length
INFO  20:37:56,250 - #38 >
INFO  20:37:56,250 - #9 0
INFO  20:37:56,251 - #13 &&
INFO  20:37:56,251 - #8 length
INFO  20:37:56,251 - #42 <=
INFO  20:37:56,251 - #8 d
INFO  20:37:56,251 - #30 )
INFO  20:37:56,252 - #8 a
INFO  20:37:56,252 - #24 =
INFO  20:37:56,252 - #7 new
INFO  20:37:56,252 - #8 int
INFO  20:37:56,252 - #22 [
INFO  20:37:56,252 - #8 length
INFO  20:37:56,252 - #23 ]
INFO  20:37:56,252 - #27 ;
INFO  20:37:56,252 - #32 else
INFO  20:37:56,252 - #8 a
INFO  20:37:56,252 - #24 =
INFO  20:37:56,253 - #7 new
INFO  20:37:56,253 - #8 int
INFO  20:37:56,253 - #22 [
INFO  20:37:56,253 - #9 5
INFO  20:37:56,253 - #23 ]
INFO  20:37:56,253 - #27 ;
INFO  20:37:56,253 - #33 do
INFO  20:37:56,253 - #20 {
INFO  20:37:56,253 - #4 read
INFO  20:37:56,253 - #29 (
INFO  20:37:56,253 - #8 a
INFO  20:37:56,253 - #22 [
INFO  20:37:56,253 - #8 i
INFO  20:37:56,253 - #23 ]
INFO  20:37:56,253 - #30 )
INFO  20:37:56,254 - #27 ;
INFO  20:37:56,254 - #31 if
INFO  20:37:56,254 - #29 (
INFO  20:37:56,254 - #8 a
INFO  20:37:56,254 - #22 [
INFO  20:37:56,254 - #8 i
INFO  20:37:56,254 - #23 ]
INFO  20:37:56,254 - #19 %
INFO  20:37:56,254 - #9 3
INFO  20:37:56,255 - #39 ==
INFO  20:37:56,255 - #9 0
INFO  20:37:56,255 - #30 )
INFO  20:37:56,255 - #3 print
INFO  20:37:56,255 - #29 (
INFO  20:37:56,256 - #8 a
INFO  20:37:56,256 - #22 [
INFO  20:37:56,256 - #8 i
INFO  20:37:56,256 - #23 ]
INFO  20:37:56,256 - #30 )
INFO  20:37:56,256 - #27 ;
INFO  20:37:56,256 - #32 else
INFO  20:37:56,256 - #3 print
INFO  20:37:56,256 - #29 (
INFO  20:37:56,256 - #8 max
INFO  20:37:56,256 - #29 (
INFO  20:37:56,256 - #8 a
INFO  20:37:56,256 - #22 [
INFO  20:37:56,256 - #8 i
INFO  20:37:56,256 - #23 ]
INFO  20:37:56,256 - #28 ,
INFO  20:37:56,256 - #9 0
INFO  20:37:56,256 - #30 )
INFO  20:37:56,257 - #30 )
INFO  20:37:56,257 - #27 ;
INFO  20:37:56,257 - #21 }
INFO  20:37:56,257 - #34 while
INFO  20:37:56,257 - #29 (
INFO  20:37:56,257 - #8 i
INFO  20:37:56,257 - #42 <=
INFO  20:37:56,257 - #8 length
INFO  20:37:56,257 - #16 -
INFO  20:37:56,257 - #9 1
INFO  20:37:56,257 - #30 )
INFO  20:37:56,257 - #27 ;
INFO  20:37:56,258 - #3 print
INFO  20:37:56,258 - #29 (
INFO  20:37:56,258 - #8 d
INFO  20:37:56,258 - #30 )
INFO  20:37:56,258 - #27 ;
INFO  20:37:56,258 - #21 }
INFO  20:37:56,258 - #21 }
