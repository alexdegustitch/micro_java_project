INFO  20:12:02,822 - Compiling source file: C:\Users\LjubaS\Desktop\ACA_ETF\IR4PP1\projekat\sa100122dProjekatDX15\workspace\MJCompiler\test\program.mj
INFO  20:12:02,827 - #33 program
INFO  20:12:02,827 - #1 Program
INFO  20:12:02,828 - #29 {
INFO  20:12:02,828 - #34 const
INFO  20:12:02,828 - #1 int
INFO  20:12:02,828 - #1 c
INFO  20:12:02,828 - #7 =
INFO  20:12:02,828 - #2 10
INFO  20:12:02,828 - #6 ;
INFO  20:12:02,828 - #34 const
INFO  20:12:02,828 - #1 int
INFO  20:12:02,828 - #1 d
INFO  20:12:02,828 - #7 =
INFO  20:12:02,829 - #2 99
INFO  20:12:02,829 - #14 ,
INFO  20:12:02,829 - #1 eps
INFO  20:12:02,829 - #7 =
INFO  20:12:02,829 - #2 2
INFO  20:12:02,829 - #6 ;
INFO  20:12:02,829 - #1 int
INFO  20:12:02,829 - #1 e
INFO  20:12:02,829 - #6 ;
INFO  20:12:02,829 - #35 void
INFO  20:12:02,829 - #1 test
INFO  20:12:02,829 - #10 (
INFO  20:12:02,830 - #11 )
INFO  20:12:02,830 - #29 {
INFO  20:12:02,830 - #1 int
INFO  20:12:02,830 - #1 a
INFO  20:12:02,830 - #14 ,
INFO  20:12:02,830 - #1 b
INFO  20:12:02,830 - #14 ,
INFO  20:12:02,830 - #6 ;
INFO  20:12:02,830 - #1 bool
INFO  20:12:02,830 - #1 cond
INFO  20:12:02,830 - #6 ;
INFO  20:12:02,831 - #1 a
INFO  20:12:02,831 - #7 =
INFO  20:12:02,831 - #2 3
INFO  20:12:02,831 - #6 ;
INFO  20:12:02,831 - #1 b
INFO  20:12:02,831 - #7 =
INFO  20:12:02,831 - #6 ;
INFO  20:12:02,831 - #1 cond
INFO  20:12:02,831 - #7 =
INFO  20:12:02,831 - #4 true
INFO  20:12:02,831 - #6 ;
INFO  20:12:02,831 - #23 if
INFO  20:12:02,831 - #10 (
INFO  20:12:02,832 - #2 2
INFO  20:12:02,832 - #18 *
INFO  20:12:02,832 - #10 (
INFO  20:12:02,832 - #1 a
INFO  20:12:02,832 - #17 -
INFO  20:12:02,832 - #1 b
INFO  20:12:02,832 - #17 -
INFO  20:12:02,832 - #2 1
INFO  20:12:02,832 - #11 )
INFO  20:12:02,832 - #17 -
INFO  20:12:02,835 - #2 14
INFO  20:12:02,835 - #40 >
INFO  20:12:02,835 - #2 0
INFO  20:12:02,835 - #31 ||
INFO  20:12:02,836 - #1 cond
INFO  20:12:02,836 - #11 )
INFO  20:12:02,836 - #13 print
INFO  20:12:02,836 - #10 (
INFO  20:12:02,836 - #1 a
INFO  20:12:02,836 - #16 +
INFO  20:12:02,836 - #1 b
INFO  20:12:02,836 - #11 )
INFO  20:12:02,836 - #6 ;
INFO  20:12:02,836 - #30 }
INFO  20:12:02,836 - #1 int
INFO  20:12:02,836 - #1 max
INFO  20:12:02,836 - #10 (
INFO  20:12:02,837 - #1 int
INFO  20:12:02,837 - #1 a
INFO  20:12:02,837 - #6 ;
INFO  20:12:02,837 - #1 int
INFO  20:12:02,837 - #1 b
INFO  20:12:02,837 - #11 )
INFO  20:12:02,837 - #29 {
INFO  20:12:02,837 - #23 if
INFO  20:12:02,837 - #10 (
INFO  20:12:02,837 - #1 a
INFO  20:12:02,837 - #40 >
INFO  20:12:02,837 - #2 0
INFO  20:12:02,837 - #1 b
INFO  20:12:02,838 - #11 )
INFO  20:12:02,838 - #29 {
INFO  20:12:02,838 - #36 return
INFO  20:12:02,838 - #1 a
INFO  20:12:02,838 - #6 ;
INFO  20:12:02,838 - #30 }
INFO  20:12:02,838 - #24 else
INFO  20:12:02,838 - #36 return
INFO  20:12:02,838 - #1 b
INFO  20:12:02,838 - #6 ;
INFO  20:12:02,838 - #30 }
INFO  20:12:02,838 - #1 int
INFO  20:12:02,838 - #1 min
INFO  20:12:02,838 - #10 (
INFO  20:12:02,839 - #1 int
INFO  20:12:02,839 - #1 a
INFO  20:12:02,839 - #14 ,
INFO  20:12:02,839 - #1 int
INFO  20:12:02,839 - #1 b
INFO  20:12:02,839 - #11 )
INFO  20:12:02,839 - #29 {
INFO  20:12:02,839 - #23 if
INFO  20:12:02,839 - #10 (
INFO  20:12:02,839 - #1 a
INFO  20:12:02,839 - #39 <
INFO  20:12:02,839 - #1 b
INFO  20:12:02,840 - #11 )
INFO  20:12:02,840 - #29 {
INFO  20:12:02,840 - #36 return
INFO  20:12:02,840 - #1 a
INFO  20:12:02,840 - #6 ;
INFO  20:12:02,840 - #30 }
INFO  20:12:02,840 - #24 else
INFO  20:12:02,840 - #29 {
INFO  20:12:02,840 - #36 return
INFO  20:12:02,840 - #1 b
INFO  20:12:02,841 - #6 ;
INFO  20:12:02,841 - #30 }
INFO  20:12:02,841 - #30 }
INFO  20:12:02,841 - #35 void
INFO  20:12:02,841 - #1 main
INFO  20:12:02,841 - #10 (
INFO  20:12:02,841 - #11 )
INFO  20:12:02,841 - #29 {
INFO  20:12:02,841 - #1 int
INFO  20:12:02,841 - #1 a
INFO  20:12:02,841 - #21 [
INFO  20:12:02,842 - #6 ;
INFO  20:12:02,842 - #1 int
INFO  20:12:02,842 - #1 length
INFO  20:12:02,842 - #6 ;
INFO  20:12:02,842 - #1 length
INFO  20:12:02,842 - #7 =
INFO  20:12:02,842 - #1 c
INFO  20:12:02,842 - #6 ;
INFO  20:12:02,842 - #1 test
INFO  20:12:02,842 - #10 (
INFO  20:12:02,842 - #11 )
INFO  20:12:02,842 - #6 ;
INFO  20:12:02,842 - #23 if
INFO  20:12:02,842 - #10 (
INFO  20:12:02,843 - #1 length
INFO  20:12:02,843 - #40 >
INFO  20:12:02,843 - #2 0
INFO  20:12:02,843 - #32 &&
INFO  20:12:02,843 - #1 length
INFO  20:12:02,843 - #41 <=
INFO  20:12:02,843 - #1 d
INFO  20:12:02,843 - #11 )
INFO  20:12:02,843 - #1 a
INFO  20:12:02,843 - #7 =
INFO  20:12:02,843 - #15 new
INFO  20:12:02,843 - #1 int
INFO  20:12:02,843 - #21 [
INFO  20:12:02,843 - #1 length
INFO  20:12:02,843 - #22 ]
INFO  20:12:02,844 - #6 ;
INFO  20:12:02,844 - #24 else
INFO  20:12:02,844 - #1 a
INFO  20:12:02,844 - #7 =
INFO  20:12:02,844 - #15 new
INFO  20:12:02,844 - #1 int
INFO  20:12:02,844 - #21 [
INFO  20:12:02,844 - #2 5
INFO  20:12:02,844 - #22 ]
INFO  20:12:02,844 - #6 ;
INFO  20:12:02,844 - #25 do
INFO  20:12:02,844 - #29 {
INFO  20:12:02,844 - #12 read
INFO  20:12:02,844 - #10 (
INFO  20:12:02,844 - #1 a
INFO  20:12:02,845 - #21 [
INFO  20:12:02,845 - #1 i
INFO  20:12:02,845 - #22 ]
INFO  20:12:02,845 - #11 )
INFO  20:12:02,845 - #6 ;
INFO  20:12:02,845 - #23 if
INFO  20:12:02,845 - #10 (
INFO  20:12:02,845 - #1 a
INFO  20:12:02,845 - #21 [
INFO  20:12:02,845 - #1 i
INFO  20:12:02,845 - #22 ]
INFO  20:12:02,845 - #20 %
INFO  20:12:02,845 - #2 3
INFO  20:12:02,845 - #37 ==
INFO  20:12:02,845 - #2 0
INFO  20:12:02,845 - #11 )
INFO  20:12:02,846 - #13 print
INFO  20:12:02,846 - #10 (
INFO  20:12:02,846 - #1 a
INFO  20:12:02,846 - #21 [
INFO  20:12:02,846 - #1 i
INFO  20:12:02,846 - #22 ]
INFO  20:12:02,846 - #11 )
INFO  20:12:02,846 - #6 ;
INFO  20:12:02,846 - #24 else
INFO  20:12:02,847 - #13 print
INFO  20:12:02,847 - #10 (
INFO  20:12:02,847 - #1 max
INFO  20:12:02,847 - #10 (
INFO  20:12:02,847 - #1 a
INFO  20:12:02,847 - #21 [
INFO  20:12:02,847 - #1 i
INFO  20:12:02,847 - #22 ]
INFO  20:12:02,847 - #14 ,
INFO  20:12:02,847 - #2 0
INFO  20:12:02,848 - #11 )
INFO  20:12:02,848 - #11 )
INFO  20:12:02,848 - #6 ;
INFO  20:12:02,848 - #30 }
INFO  20:12:02,848 - #26 while
INFO  20:12:02,848 - #10 (
INFO  20:12:02,848 - #1 i
INFO  20:12:02,848 - #41 <=
INFO  20:12:02,848 - #1 length
INFO  20:12:02,848 - #17 -
INFO  20:12:02,848 - #2 1
INFO  20:12:02,848 - #11 )
INFO  20:12:02,848 - #6 ;
INFO  20:12:02,848 - #13 print
INFO  20:12:02,848 - #10 (
INFO  20:12:02,849 - #1 d
INFO  20:12:02,849 - #11 )
INFO  20:12:02,849 - #6 ;
INFO  20:12:02,849 - #30 }
INFO  20:12:02,849 - #30 }
