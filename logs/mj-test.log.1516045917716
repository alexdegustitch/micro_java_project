INFO  20:50:49,019 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatDX46\workspace\MJCompiler\test\program.mj
INFO  20:50:49,025 - #2 program
INFO  20:50:49,026 - #8 Program
INFO  20:50:49,026 - #5 const
INFO  20:50:49,026 - #8 int
INFO  20:50:49,026 - #8 c
INFO  20:50:49,026 - #24 =
INFO  20:50:49,026 - #9 10
INFO  20:50:49,027 - #27 ;
INFO  20:50:49,027 - #5 const
INFO  20:50:49,027 - #8 int
INFO  20:50:49,027 - #8 d
INFO  20:50:49,027 - #24 =
INFO  20:50:49,027 - #9 99
INFO  20:50:49,027 - #28 ,
INFO  20:50:49,027 - #8 eps
INFO  20:50:49,027 - #24 =
INFO  20:50:49,027 - #9 2
INFO  20:50:49,028 - #27 ;
INFO  20:50:49,028 - #8 int
INFO  20:50:49,028 - #8 e
INFO  20:50:49,028 - #27 ;
INFO  20:50:49,028 - #20 {
INFO  20:50:49,028 - #6 void
INFO  20:50:49,028 - #8 test
INFO  20:50:49,028 - #29 (
INFO  20:50:49,028 - #30 )
INFO  20:50:49,028 - #8 int
INFO  20:50:49,028 - #8 a
INFO  20:50:49,029 - #28 ,
INFO  20:50:49,029 - #8 b
INFO  20:50:49,029 - #27 ;
INFO  20:50:49,029 - #8 bool
INFO  20:50:49,029 - #8 cond
INFO  20:50:49,029 - #27 ;
INFO  20:50:49,029 - #20 {
INFO  20:50:49,029 - #8 a
INFO  20:50:49,029 - #24 =
INFO  20:50:49,029 - #9 3
INFO  20:50:49,030 - #27 ;
INFO  20:50:49,030 - #8 b
INFO  20:50:49,030 - #24 =
INFO  20:50:49,030 - #9 5
INFO  20:50:49,030 - #27 ;
INFO  20:50:49,030 - #8 cond
INFO  20:50:49,030 - #24 =
INFO  20:50:49,030 - #11 true
INFO  20:50:49,030 - #27 ;
INFO  20:50:49,030 - #31 if
INFO  20:50:49,030 - #29 (
INFO  20:50:49,031 - #9 2
INFO  20:50:49,031 - #17 *
INFO  20:50:49,031 - #29 (
INFO  20:50:49,031 - #8 a
INFO  20:50:49,031 - #16 -
INFO  20:50:49,031 - #8 b
INFO  20:50:49,031 - #16 -
INFO  20:50:49,031 - #9 1
INFO  20:50:49,031 - #30 )
INFO  20:50:49,031 - #16 -
INFO  20:50:49,033 - #9 14
INFO  20:50:49,033 - #38 >
INFO  20:50:49,033 - #9 0
INFO  20:50:49,033 - #14 ||
INFO  20:50:49,033 - #8 cond
INFO  20:50:49,033 - #30 )
INFO  20:50:49,034 - #3 print
INFO  20:50:49,034 - #29 (
INFO  20:50:49,034 - #8 a
INFO  20:50:49,034 - #15 +
INFO  20:50:49,034 - #8 b
INFO  20:50:49,034 - #30 )
INFO  20:50:49,034 - #27 ;
INFO  20:50:49,034 - #21 }
INFO  20:50:49,034 - #8 int
INFO  20:50:49,034 - #8 max
INFO  20:50:49,034 - #29 (
INFO  20:50:49,034 - #8 int
INFO  20:50:49,035 - #8 a
INFO  20:50:49,035 - #28 ,
INFO  20:50:49,035 - #8 int
INFO  20:50:49,035 - #8 b
INFO  20:50:49,035 - #30 )
INFO  20:50:49,035 - #8 int
INFO  20:50:49,035 - #8 x
INFO  20:50:49,035 - #27 ;
INFO  20:50:49,035 - #20 {
INFO  20:50:49,035 - #31 if
INFO  20:50:49,035 - #29 (
INFO  20:50:49,035 - #8 a
INFO  20:50:49,035 - #38 >
INFO  20:50:49,036 - #8 b
INFO  20:50:49,036 - #30 )
INFO  20:50:49,036 - #20 {
INFO  20:50:49,036 - #37 return
INFO  20:50:49,036 - #8 a
INFO  20:50:49,036 - #27 ;
INFO  20:50:49,036 - #21 }
INFO  20:50:49,036 - #32 else
INFO  20:50:49,036 - #37 return
INFO  20:50:49,036 - #8 b
INFO  20:50:49,036 - #27 ;
INFO  20:50:49,036 - #21 }
INFO  20:50:49,037 - #8 int
INFO  20:50:49,037 - #8 min
INFO  20:50:49,037 - #29 (
INFO  20:50:49,037 - #8 int
INFO  20:50:49,037 - #8 a
INFO  20:50:49,037 - #28 ,
INFO  20:50:49,037 - #8 int
INFO  20:50:49,037 - #8 b
INFO  20:50:49,037 - #30 )
INFO  20:50:49,037 - #20 {
INFO  20:50:49,037 - #31 if
INFO  20:50:49,037 - #29 (
INFO  20:50:49,037 - #8 a
INFO  20:50:49,037 - #40 <
INFO  20:50:49,037 - #8 b
INFO  20:50:49,038 - #30 )
INFO  20:50:49,038 - #20 {
INFO  20:50:49,038 - #37 return
INFO  20:50:49,038 - #8 a
INFO  20:50:49,038 - #27 ;
INFO  20:50:49,038 - #21 }
INFO  20:50:49,038 - #32 else
INFO  20:50:49,038 - #20 {
INFO  20:50:49,038 - #37 return
INFO  20:50:49,038 - #8 b
INFO  20:50:49,038 - #27 ;
INFO  20:50:49,038 - #21 }
INFO  20:50:49,038 - #21 }
INFO  20:50:49,038 - #6 void
INFO  20:50:49,039 - #8 obrada
INFO  20:50:49,039 - #29 (
INFO  20:50:49,039 - #8 int
INFO  20:50:49,039 - #8 a
INFO  20:50:49,039 - #22 [
INFO  20:50:49,039 - #23 ]
INFO  20:50:49,039 - #28 ,
INFO  20:50:49,039 - #8 int
INFO  20:50:49,039 - #8 length
INFO  20:50:49,039 - #30 )
INFO  20:50:49,039 - #8 int
INFO  20:50:49,039 - #8 i
INFO  20:50:49,039 - #27 ;
INFO  20:50:49,039 - #20 {
INFO  20:50:49,040 - #8 i
INFO  20:50:49,040 - #24 =
INFO  20:50:49,040 - #9 0
INFO  20:50:49,040 - #27 ;
INFO  20:50:49,040 - #33 do
INFO  20:50:49,040 - #20 {
INFO  20:50:49,040 - #31 if
INFO  20:50:49,041 - #29 (
INFO  20:50:49,041 - #8 a
INFO  20:50:49,041 - #22 [
INFO  20:50:49,041 - #8 i
INFO  20:50:49,041 - #23 ]
INFO  20:50:49,041 - #19 %
INFO  20:50:49,041 - #9 3
INFO  20:50:49,041 - #39 ==
INFO  20:50:49,041 - #9 0
INFO  20:50:49,041 - #30 )
INFO  20:50:49,041 - #3 print
INFO  20:50:49,041 - #29 (
INFO  20:50:49,041 - #8 a
INFO  20:50:49,042 - #22 [
INFO  20:50:49,042 - #8 i
INFO  20:50:49,042 - #23 ]
INFO  20:50:49,042 - #30 )
INFO  20:50:49,042 - #27 ;
INFO  20:50:49,042 - #32 else
INFO  20:50:49,042 - #3 print
INFO  20:50:49,042 - #29 (
INFO  20:50:49,042 - #8 max
INFO  20:50:49,042 - #29 (
INFO  20:50:49,042 - #8 a
INFO  20:50:49,042 - #22 [
INFO  20:50:49,042 - #8 i
INFO  20:50:49,042 - #23 ]
INFO  20:50:49,042 - #28 ,
INFO  20:50:49,043 - #9 0
INFO  20:50:49,043 - #30 )
INFO  20:50:49,043 - #30 )
INFO  20:50:49,043 - #27 ;
INFO  20:50:49,043 - #8 i
INFO  20:50:49,043 - #25 ++
INFO  20:50:49,043 - #27 ;
INFO  20:50:49,043 - #21 }
INFO  20:50:49,043 - #34 while
INFO  20:50:49,043 - #29 (
INFO  20:50:49,043 - #8 i
INFO  20:50:49,043 - #40 <
INFO  20:50:49,043 - #8 length
INFO  20:50:49,043 - #30 )
INFO  20:50:49,043 - #27 ;
INFO  20:50:49,043 - #21 }
INFO  20:50:49,043 - #6 void
INFO  20:50:49,044 - #8 main
INFO  20:50:49,044 - #29 (
INFO  20:50:49,044 - #30 )
INFO  20:50:49,044 - #8 int
INFO  20:50:49,044 - #8 a
INFO  20:50:49,044 - #22 [
INFO  20:50:49,044 - #23 ]
INFO  20:50:49,044 - #28 ,
INFO  20:50:49,044 - #8 length
INFO  20:50:49,044 - #27 ;
INFO  20:50:49,044 - #8 int
INFO  20:50:49,044 - #8 i
INFO  20:50:49,044 - #27 ;
INFO  20:50:49,044 - #20 {
INFO  20:50:49,044 - #8 length
INFO  20:50:49,044 - #24 =
INFO  20:50:49,044 - #8 min
INFO  20:50:49,045 - #29 (
INFO  20:50:49,045 - #8 c
INFO  20:50:49,045 - #28 ,
INFO  20:50:49,045 - #9 103
INFO  20:50:49,045 - #30 )
INFO  20:50:49,045 - #27 ;
INFO  20:50:49,045 - #8 test
INFO  20:50:49,045 - #29 (
INFO  20:50:49,045 - #30 )
INFO  20:50:49,045 - #27 ;
INFO  20:50:49,045 - #31 if
INFO  20:50:49,045 - #29 (
INFO  20:50:49,045 - #8 length
INFO  20:50:49,045 - #38 >
INFO  20:50:49,045 - #9 0
INFO  20:50:49,045 - #13 &&
INFO  20:50:49,045 - #8 length
INFO  20:50:49,045 - #42 <=
INFO  20:50:49,046 - #8 d
INFO  20:50:49,046 - #30 )
INFO  20:50:49,046 - #8 a
INFO  20:50:49,046 - #24 =
INFO  20:50:49,046 - #7 new
INFO  20:50:49,046 - #8 int
INFO  20:50:49,046 - #22 [
INFO  20:50:49,046 - #8 length
INFO  20:50:49,046 - #23 ]
INFO  20:50:49,046 - #27 ;
INFO  20:50:49,046 - #32 else
INFO  20:50:49,046 - #8 a
INFO  20:50:49,046 - #24 =
INFO  20:50:49,046 - #7 new
INFO  20:50:49,046 - #8 int
INFO  20:50:49,046 - #22 [
INFO  20:50:49,046 - #9 5
INFO  20:50:49,046 - #23 ]
INFO  20:50:49,046 - #27 ;
INFO  20:50:49,047 - #33 do
INFO  20:50:49,047 - #20 {
INFO  20:50:49,047 - #4 read
INFO  20:50:49,047 - #29 (
INFO  20:50:49,048 - #8 a
INFO  20:50:49,048 - #22 [
INFO  20:50:49,048 - #8 i
INFO  20:50:49,048 - #23 ]
INFO  20:50:49,048 - #30 )
INFO  20:50:49,048 - #27 ;
INFO  20:50:49,049 - #21 }
INFO  20:50:49,049 - #34 while
INFO  20:50:49,049 - #29 (
INFO  20:50:49,050 - #8 i
INFO  20:50:49,050 - #42 <=
INFO  20:50:49,050 - #8 length
INFO  20:50:49,050 - #16 -
INFO  20:50:49,050 - #9 1
INFO  20:50:49,050 - #30 )
INFO  20:50:49,050 - #27 ;
INFO  20:50:49,050 - #8 obrada
INFO  20:50:49,050 - #29 (
INFO  20:50:49,050 - #8 a
INFO  20:50:49,050 - #28 ,
INFO  20:50:49,050 - #8 length
INFO  20:50:49,050 - #30 )
INFO  20:50:49,050 - #27 ;
INFO  20:50:49,050 - #3 print
INFO  20:50:49,050 - #29 (
INFO  20:50:49,050 - #8 d
INFO  20:50:49,050 - #30 )
INFO  20:50:49,051 - #27 ;
INFO  20:50:49,051 - #21 }
INFO  20:50:49,051 - #21 }
