INFO  05:20:49,580 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatCX\workspace\MJCompiler\test\program.mj
INFO  05:20:49,585 - #2 program
INFO  05:20:49,585 - #8 Program
INFO  05:20:49,585 - #20 {
INFO  05:20:49,586 - #5 const
INFO  05:20:49,586 - #8 int
INFO  05:20:49,586 - #8 c
INFO  05:20:49,586 - #24 =
INFO  05:20:49,586 - #9 10
INFO  05:20:49,586 - #27 ;
INFO  05:20:49,586 - #6 void
INFO  05:20:49,586 - #8 max
INFO  05:20:49,586 - #29 (
INFO  05:20:49,586 - #8 int
INFO  05:20:49,587 - #8 a
INFO  05:20:49,587 - #28 ,
INFO  05:20:49,587 - #8 int
INFO  05:20:49,587 - #8 b
INFO  05:20:49,587 - #30 )
INFO  05:20:49,587 - #20 {
INFO  05:20:49,587 - #31 if
INFO  05:20:49,588 - #29 (
INFO  05:20:49,588 - #8 a
INFO  05:20:49,588 - #38 >
INFO  05:20:49,588 - #8 b
INFO  05:20:49,588 - #30 )
INFO  05:20:49,588 - #20 {
INFO  05:20:49,588 - #8 return
INFO  05:20:49,588 - #8 a
INFO  05:20:49,588 - #27 ;
INFO  05:20:49,588 - #21 }
INFO  05:20:49,588 - #32 else
INFO  05:20:49,588 - #8 return
INFO  05:20:49,589 - #8 b
INFO  05:20:49,589 - #27 ;
INFO  05:20:49,589 - #21 }
INFO  05:20:49,589 - #6 void
INFO  05:20:49,589 - #8 min
INFO  05:20:49,589 - #29 (
INFO  05:20:49,589 - #8 int
INFO  05:20:49,589 - #8 a
INFO  05:20:49,589 - #28 ,
INFO  05:20:49,589 - #8 int
INFO  05:20:49,589 - #8 b
INFO  05:20:49,589 - #30 )
INFO  05:20:49,589 - #20 {
INFO  05:20:49,589 - #31 if
INFO  05:20:49,590 - #29 (
INFO  05:20:49,590 - #8 a
INFO  05:20:49,590 - #40 <
INFO  05:20:49,590 - #8 b
INFO  05:20:49,590 - #30 )
INFO  05:20:49,590 - #20 {
INFO  05:20:49,590 - #8 return
INFO  05:20:49,591 - #8 a
INFO  05:20:49,591 - #27 ;
INFO  05:20:49,591 - #21 }
INFO  05:20:49,591 - #32 else
INFO  05:20:49,591 - #20 {
INFO  05:20:49,591 - #8 return
INFO  05:20:49,593 - #8 b
INFO  05:20:49,593 - #27 ;
INFO  05:20:49,593 - #21 }
INFO  05:20:49,593 - #21 }
INFO  05:20:49,593 - #6 void
INFO  05:20:49,593 - #8 main
INFO  05:20:49,593 - #29 (
INFO  05:20:49,593 - #30 )
INFO  05:20:49,593 - #20 {
INFO  05:20:49,594 - #8 int
INFO  05:20:49,594 - #8 a
INFO  05:20:49,594 - #22 [
INFO  05:20:49,594 - #23 ]
INFO  05:20:49,594 - #24 =
INFO  05:20:49,594 - #7 new
INFO  05:20:49,594 - #8 int
INFO  05:20:49,594 - #22 [
INFO  05:20:49,594 - #9 5
INFO  05:20:49,594 - #23 ]
INFO  05:20:49,594 - #27 ;
INFO  05:20:49,594 - #8 int
INFO  05:20:49,594 - #8 b
INFO  05:20:49,594 - #27 ;
INFO  05:20:49,595 - #33 do
INFO  05:20:49,595 - #20 {
INFO  05:20:49,595 - #8 a
INFO  05:20:49,595 - #22 [
INFO  05:20:49,595 - #8 i
INFO  05:20:49,595 - #23 ]
INFO  05:20:49,595 - #24 =
INFO  05:20:49,595 - #4 read
INFO  05:20:49,595 - #29 (
INFO  05:20:49,595 - #8 b
INFO  05:20:49,595 - #30 )
INFO  05:20:49,595 - #27 ;
INFO  05:20:49,595 - #31 if
INFO  05:20:49,595 - #29 (
INFO  05:20:49,596 - #8 a
INFO  05:20:49,596 - #22 [
INFO  05:20:49,596 - #8 i
INFO  05:20:49,596 - #23 ]
INFO  05:20:49,596 - #19 %
INFO  05:20:49,596 - #9 3
INFO  05:20:49,596 - #39 ==
INFO  05:20:49,596 - #9 0
INFO  05:20:49,596 - #30 )
INFO  05:20:49,596 - #3 print
INFO  05:20:49,596 - #29 (
INFO  05:20:49,596 - #8 a
INFO  05:20:49,596 - #22 [
INFO  05:20:49,597 - #8 i
INFO  05:20:49,597 - #23 ]
INFO  05:20:49,597 - #30 )
INFO  05:20:49,597 - #27 ;
INFO  05:20:49,597 - #32 else
INFO  05:20:49,597 - #3 print
INFO  05:20:49,597 - #29 (
INFO  05:20:49,597 - #8 max
INFO  05:20:49,597 - #29 (
INFO  05:20:49,597 - #8 a
INFO  05:20:49,597 - #22 [
INFO  05:20:49,597 - #8 i
INFO  05:20:49,597 - #23 ]
INFO  05:20:49,597 - #28 ,
INFO  05:20:49,597 - #9 0
INFO  05:20:49,597 - #30 )
INFO  05:20:49,598 - #30 )
INFO  05:20:49,598 - #27 ;
INFO  05:20:49,598 - #21 }
INFO  05:20:49,598 - #34 while
INFO  05:20:49,598 - #29 (
INFO  05:20:49,598 - #8 i
INFO  05:20:49,598 - #40 <
INFO  05:20:49,598 - #9 5
INFO  05:20:49,598 - #30 )
INFO  05:20:49,598 - #27 ;
INFO  05:20:49,598 - #3 print
INFO  05:20:49,598 - #29 (
INFO  05:20:49,598 - #8 c
INFO  05:20:49,598 - #30 )
INFO  05:20:49,599 - #27 ;
INFO  05:20:49,599 - #21 }
INFO  05:20:49,599 - #21 }
