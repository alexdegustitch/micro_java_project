INFO  20:52:08,812 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatFX_Helium\workspace\MJCompiler\test\program.mj
INFO  20:52:08,819 - #33 program
INFO  20:52:08,819 - #1 Program
INFO  20:52:08,819 - #34 const
INFO  20:52:08,819 - #1 int
INFO  20:52:08,820 - #1 c
INFO  20:52:08,820 - #7 =
INFO  20:52:08,820 - #2 10
INFO  20:52:08,820 - #6 ;
INFO  20:52:08,820 - #34 const
INFO  20:52:08,820 - #1 int
INFO  20:52:08,820 - #1 d
INFO  20:52:08,820 - #7 =
INFO  20:52:08,821 - #2 99
INFO  20:52:08,821 - #14 ,
INFO  20:52:08,821 - #1 eps
INFO  20:52:08,821 - #7 =
INFO  20:52:08,821 - #2 2
INFO  20:52:08,821 - #6 ;
INFO  20:52:08,821 - #1 int
INFO  20:52:08,821 - #1 e
INFO  20:52:08,821 - #6 ;
INFO  20:52:08,822 - #29 {
INFO  20:52:08,822 - #35 void
INFO  20:52:08,822 - #1 test
INFO  20:52:08,822 - #10 (
INFO  20:52:08,822 - #11 )
INFO  20:52:08,822 - #1 int
INFO  20:52:08,822 - #1 a
INFO  20:52:08,822 - #14 ,
INFO  20:52:08,822 - #1 b
INFO  20:52:08,822 - #6 ;
INFO  20:52:08,822 - #1 bool
INFO  20:52:08,823 - #1 cond
INFO  20:52:08,823 - #6 ;
INFO  20:52:08,823 - #29 {
INFO  20:52:08,823 - #1 a
INFO  20:52:08,823 - #7 =
INFO  20:52:08,823 - #2 3
INFO  20:52:08,823 - #6 ;
INFO  20:52:08,823 - #1 b
INFO  20:52:08,823 - #7 =
INFO  20:52:08,823 - #2 5
INFO  20:52:08,823 - #6 ;
INFO  20:52:08,823 - #1 cond
INFO  20:52:08,823 - #7 =
INFO  20:52:08,824 - #4 true
INFO  20:52:08,824 - #6 ;
INFO  20:52:08,824 - #23 if
INFO  20:52:08,824 - #10 (
INFO  20:52:08,824 - #2 2
INFO  20:52:08,824 - #18 *
INFO  20:52:08,824 - #10 (
INFO  20:52:08,824 - #1 a
INFO  20:52:08,824 - #17 -
INFO  20:52:08,824 - #1 b
INFO  20:52:08,824 - #17 -
INFO  20:52:08,825 - #2 1
INFO  20:52:08,825 - #11 )
INFO  20:52:08,825 - #17 -
INFO  20:52:08,827 - #2 14
INFO  20:52:08,827 - #40 >
INFO  20:52:08,827 - #2 0
INFO  20:52:08,827 - #31 ||
INFO  20:52:08,827 - #1 cond
INFO  20:52:08,827 - #11 )
INFO  20:52:08,827 - #13 print
INFO  20:52:08,827 - #10 (
INFO  20:52:08,827 - #1 a
INFO  20:52:08,827 - #16 +
INFO  20:52:08,827 - #1 b
INFO  20:52:08,828 - #11 )
INFO  20:52:08,828 - #6 ;
INFO  20:52:08,828 - #30 }
INFO  20:52:08,828 - #1 int
INFO  20:52:08,828 - #1 max
INFO  20:52:08,828 - #10 (
INFO  20:52:08,828 - #1 int
INFO  20:52:08,828 - #1 a
INFO  20:52:08,828 - #14 ,
INFO  20:52:08,828 - #1 int
INFO  20:52:08,828 - #1 b
INFO  20:52:08,828 - #11 )
INFO  20:52:08,828 - #1 int
INFO  20:52:08,828 - #1 x
INFO  20:52:08,828 - #6 ;
INFO  20:52:08,829 - #29 {
INFO  20:52:08,829 - #23 if
INFO  20:52:08,829 - #10 (
INFO  20:52:08,829 - #1 a
INFO  20:52:08,829 - #40 >
INFO  20:52:08,829 - #1 b
INFO  20:52:08,829 - #11 )
INFO  20:52:08,829 - #29 {
INFO  20:52:08,829 - #36 return
INFO  20:52:08,829 - #1 a
INFO  20:52:08,829 - #6 ;
INFO  20:52:08,829 - #30 }
INFO  20:52:08,830 - #24 else
INFO  20:52:08,830 - #36 return
INFO  20:52:08,830 - #1 b
INFO  20:52:08,830 - #6 ;
INFO  20:52:08,830 - #30 }
INFO  20:52:08,830 - #1 int
INFO  20:52:08,830 - #1 min
INFO  20:52:08,830 - #10 (
INFO  20:52:08,830 - #1 int
INFO  20:52:08,830 - #1 a
INFO  20:52:08,830 - #14 ,
INFO  20:52:08,830 - #1 int
INFO  20:52:08,830 - #1 b
INFO  20:52:08,831 - #11 )
INFO  20:52:08,831 - #29 {
INFO  20:52:08,831 - #23 if
INFO  20:52:08,831 - #10 (
INFO  20:52:08,831 - #1 a
INFO  20:52:08,831 - #39 <
INFO  20:52:08,831 - #1 b
INFO  20:52:08,831 - #11 )
INFO  20:52:08,831 - #29 {
INFO  20:52:08,831 - #36 return
INFO  20:52:08,831 - #1 a
INFO  20:52:08,831 - #6 ;
INFO  20:52:08,831 - #30 }
INFO  20:52:08,832 - #24 else
INFO  20:52:08,832 - #29 {
INFO  20:52:08,832 - #36 return
INFO  20:52:08,832 - #1 b
INFO  20:52:08,832 - #6 ;
INFO  20:52:08,832 - #30 }
INFO  20:52:08,832 - #30 }
INFO  20:52:08,832 - #35 void
INFO  20:52:08,832 - #1 obrada
INFO  20:52:08,832 - #10 (
INFO  20:52:08,832 - #1 int
INFO  20:52:08,832 - #1 a
INFO  20:52:08,832 - #21 [
INFO  20:52:08,832 - #22 ]
INFO  20:52:08,832 - #14 ,
INFO  20:52:08,833 - #1 char
INFO  20:52:08,833 - #1 p
INFO  20:52:08,833 - #11 )
INFO  20:52:08,833 - #1 int
INFO  20:52:08,833 - #1 i
INFO  20:52:08,833 - #6 ;
INFO  20:52:08,833 - #1 int
INFO  20:52:08,833 - #1 n
INFO  20:52:08,833 - #6 ;
INFO  20:52:08,833 - #29 {
INFO  20:52:08,833 - #1 i
INFO  20:52:08,833 - #7 =
INFO  20:52:08,833 - #2 0
INFO  20:52:08,833 - #6 ;
INFO  20:52:08,834 - #1 n
INFO  20:52:08,834 - #7 =
INFO  20:52:08,834 - #1 len
INFO  20:52:08,834 - #10 (
INFO  20:52:08,834 - #1 a
INFO  20:52:08,834 - #11 )
INFO  20:52:08,834 - #6 ;
INFO  20:52:08,834 - #25 do
INFO  20:52:08,834 - #29 {
INFO  20:52:08,834 - #23 if
INFO  20:52:08,834 - #10 (
INFO  20:52:08,834 - #1 a
INFO  20:52:08,834 - #21 [
INFO  20:52:08,834 - #1 i
INFO  20:52:08,834 - #22 ]
INFO  20:52:08,834 - #20 %
INFO  20:52:08,834 - #2 3
INFO  20:52:08,835 - #37 ==
INFO  20:52:08,835 - #2 0
INFO  20:52:08,835 - #11 )
INFO  20:52:08,835 - #13 print
INFO  20:52:08,835 - #10 (
INFO  20:52:08,835 - #1 a
INFO  20:52:08,835 - #21 [
INFO  20:52:08,835 - #1 i
INFO  20:52:08,835 - #22 ]
INFO  20:52:08,835 - #11 )
INFO  20:52:08,835 - #6 ;
INFO  20:52:08,835 - #24 else
INFO  20:52:08,835 - #13 print
INFO  20:52:08,835 - #10 (
INFO  20:52:08,835 - #1 max
INFO  20:52:08,835 - #10 (
INFO  20:52:08,835 - #1 a
INFO  20:52:08,835 - #21 [
INFO  20:52:08,836 - #1 i
INFO  20:52:08,836 - #22 ]
INFO  20:52:08,836 - #14 ,
INFO  20:52:08,836 - #2 0
INFO  20:52:08,836 - #11 )
INFO  20:52:08,836 - #11 )
INFO  20:52:08,836 - #6 ;
INFO  20:52:08,836 - #1 i
INFO  20:52:08,836 - #8 ++
INFO  20:52:08,836 - #6 ;
INFO  20:52:08,836 - #30 }
INFO  20:52:08,836 - #26 while
INFO  20:52:08,836 - #10 (
INFO  20:52:08,836 - #1 i
INFO  20:52:08,837 - #39 <
INFO  20:52:08,837 - #1 n
INFO  20:52:08,837 - #11 )
INFO  20:52:08,837 - #6 ;
INFO  20:52:08,837 - #13 print
INFO  20:52:08,837 - #10 (
INFO  20:52:08,837 - #1 ord
INFO  20:52:08,837 - #10 (
INFO  20:52:08,838 - #1 p
INFO  20:52:08,838 - #11 )
INFO  20:52:08,838 - #11 )
INFO  20:52:08,838 - #6 ;
INFO  20:52:08,838 - #13 print
INFO  20:52:08,838 - #10 (
INFO  20:52:08,838 - #1 chr
INFO  20:52:08,838 - #10 (
INFO  20:52:08,838 - #1 p
INFO  20:52:08,838 - #11 )
INFO  20:52:08,838 - #11 )
INFO  20:52:08,838 - #6 ;
INFO  20:52:08,838 - #30 }
INFO  20:52:08,838 - #35 void
INFO  20:52:08,838 - #1 main
INFO  20:52:08,838 - #10 (
INFO  20:52:08,839 - #11 )
INFO  20:52:08,839 - #1 int
INFO  20:52:08,839 - #1 a
INFO  20:52:08,839 - #21 [
INFO  20:52:08,839 - #22 ]
INFO  20:52:08,839 - #14 ,
INFO  20:52:08,839 - #1 length
INFO  20:52:08,839 - #6 ;
INFO  20:52:08,839 - #1 int
INFO  20:52:08,839 - #1 i
INFO  20:52:08,839 - #6 ;
INFO  20:52:08,839 - #1 char
INFO  20:52:08,839 - #1 p
INFO  20:52:08,839 - #6 ;
INFO  20:52:08,839 - #1 char
INFO  20:52:08,839 - #1 q
INFO  20:52:08,839 - #6 ;
INFO  20:52:08,839 - #29 {
INFO  20:52:08,839 - #1 length
INFO  20:52:08,840 - #7 =
INFO  20:52:08,840 - #1 min
INFO  20:52:08,840 - #10 (
INFO  20:52:08,840 - #1 c
INFO  20:52:08,840 - #14 ,
INFO  20:52:08,840 - #2 103
INFO  20:52:08,840 - #11 )
INFO  20:52:08,840 - #6 ;
INFO  20:52:08,840 - #1 i
INFO  20:52:08,840 - #7 =
INFO  20:52:08,840 - #2 0
INFO  20:52:08,840 - #6 ;
INFO  20:52:08,841 - #1 test
INFO  20:52:08,841 - #10 (
INFO  20:52:08,841 - #11 )
INFO  20:52:08,841 - #6 ;
INFO  20:52:08,841 - #23 if
INFO  20:52:08,841 - #10 (
INFO  20:52:08,841 - #1 length
INFO  20:52:08,841 - #40 >
INFO  20:52:08,841 - #2 0
INFO  20:52:08,841 - #32 &&
INFO  20:52:08,841 - #1 length
INFO  20:52:08,841 - #41 <=
INFO  20:52:08,841 - #1 d
INFO  20:52:08,841 - #11 )
INFO  20:52:08,841 - #1 a
INFO  20:52:08,841 - #7 =
INFO  20:52:08,841 - #15 new
INFO  20:52:08,841 - #1 int
INFO  20:52:08,842 - #21 [
INFO  20:52:08,842 - #1 length
INFO  20:52:08,842 - #22 ]
INFO  20:52:08,842 - #6 ;
INFO  20:52:08,842 - #24 else
INFO  20:52:08,842 - #1 a
INFO  20:52:08,842 - #7 =
INFO  20:52:08,842 - #15 new
INFO  20:52:08,842 - #1 int
INFO  20:52:08,842 - #21 [
INFO  20:52:08,842 - #2 5
INFO  20:52:08,842 - #22 ]
INFO  20:52:08,842 - #6 ;
INFO  20:52:08,842 - #25 do
INFO  20:52:08,842 - #29 {
INFO  20:52:08,842 - #12 read
INFO  20:52:08,842 - #10 (
INFO  20:52:08,843 - #1 a
INFO  20:52:08,843 - #21 [
INFO  20:52:08,843 - #1 i
INFO  20:52:08,843 - #22 ]
INFO  20:52:08,843 - #11 )
INFO  20:52:08,843 - #6 ;
INFO  20:52:08,843 - #1 i
INFO  20:52:08,843 - #8 ++
INFO  20:52:08,843 - #6 ;
INFO  20:52:08,843 - #30 }
INFO  20:52:08,843 - #26 while
INFO  20:52:08,843 - #10 (
INFO  20:52:08,843 - #1 i
INFO  20:52:08,843 - #41 <=
INFO  20:52:08,843 - #1 length
INFO  20:52:08,843 - #17 -
INFO  20:52:08,843 - #2 1
INFO  20:52:08,843 - #11 )
INFO  20:52:08,844 - #6 ;
INFO  20:52:08,844 - #1 p
INFO  20:52:08,844 - #7 =
INFO  20:52:08,844 - #1 chr
INFO  20:52:08,844 - #10 (
INFO  20:52:08,844 - #2 65
INFO  20:52:08,844 - #11 )
INFO  20:52:08,844 - #6 ;
INFO  20:52:08,844 - #1 q
INFO  20:52:08,844 - #7 =
INFO  20:52:08,844 - #3 C
INFO  20:52:08,844 - #6 ;
INFO  20:52:08,844 - #1 obrada
INFO  20:52:08,844 - #10 (
INFO  20:52:08,844 - #1 a
INFO  20:52:08,844 - #14 ,
INFO  20:52:08,845 - #1 p
INFO  20:52:08,845 - #11 )
INFO  20:52:08,845 - #6 ;
INFO  20:52:08,845 - #13 print
INFO  20:52:08,845 - #10 (
INFO  20:52:08,845 - #1 d
INFO  20:52:08,845 - #11 )
INFO  20:52:08,845 - #6 ;
INFO  20:52:08,845 - #13 print
INFO  20:52:08,845 - #10 (
INFO  20:52:08,845 - #1 q
INFO  20:52:08,845 - #11 )
INFO  20:52:08,845 - #6 ;
INFO  20:52:08,845 - #30 }
INFO  20:52:08,845 - #30 }
