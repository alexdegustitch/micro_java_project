INFO  16:28:22,375 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatCX7\workspace\MJCompiler\test\program.mj
INFO  16:28:22,381 - #33 program
INFO  16:28:22,381 - #1 Program
INFO  16:28:22,381 - #29 {
INFO  16:28:22,381 - #34 const
INFO  16:28:22,382 - #1 int
INFO  16:28:22,382 - #1 c
INFO  16:28:22,382 - #7 =
INFO  16:28:22,382 - #2 10
INFO  16:28:22,382 - #6 ;
INFO  16:28:22,382 - #34 const
INFO  16:28:22,382 - #1 int
INFO  16:28:22,382 - #1 d
INFO  16:28:22,382 - #7 =
INFO  16:28:22,382 - #2 13
INFO  16:28:22,382 - #6 ;
INFO  16:28:22,383 - #1 int
INFO  16:28:22,383 - #1 e
INFO  16:28:22,383 - #6 ;
INFO  16:28:22,383 - #35 void
INFO  16:28:22,383 - #1 test
INFO  16:28:22,383 - #10 (
INFO  16:28:22,383 - #11 )
INFO  16:28:22,383 - #29 {
INFO  16:28:22,383 - #1 int
INFO  16:28:22,383 - #1 a
INFO  16:28:22,383 - #6 ;
INFO  16:28:22,383 - #1 int
INFO  16:28:22,384 - #1 b
INFO  16:28:22,384 - #6 ;
INFO  16:28:22,384 - #1 a
INFO  16:28:22,384 - #7 =
INFO  16:28:22,384 - #2 3
INFO  16:28:22,384 - #6 ;
INFO  16:28:22,384 - #1 b
INFO  16:28:22,384 - #7 =
INFO  16:28:22,384 - #2 5
INFO  16:28:22,384 - #6 ;
INFO  16:28:22,384 - #13 print
INFO  16:28:22,384 - #10 (
INFO  16:28:22,384 - #1 a
INFO  16:28:22,384 - #16 +
INFO  16:28:22,385 - #1 b
INFO  16:28:22,385 - #11 )
INFO  16:28:22,385 - #6 ;
INFO  16:28:22,385 - #30 }
INFO  16:28:22,385 - #1 int
INFO  16:28:22,385 - #1 max
INFO  16:28:22,385 - #10 (
INFO  16:28:22,385 - #1 int
INFO  16:28:22,385 - #1 a
INFO  16:28:22,385 - #14 ,
INFO  16:28:22,385 - #1 int
INFO  16:28:22,385 - #1 b
INFO  16:28:22,385 - #11 )
INFO  16:28:22,386 - #29 {
INFO  16:28:22,386 - #23 if
INFO  16:28:22,386 - #10 (
INFO  16:28:22,386 - #1 a
INFO  16:28:22,386 - #40 >
INFO  16:28:22,388 - #1 b
INFO  16:28:22,388 - #11 )
INFO  16:28:22,388 - #29 {
INFO  16:28:22,388 - #1 return
INFO  16:28:22,388 - #1 a
INFO  16:28:22,388 - #6 ;
INFO  16:28:22,388 - #30 }
INFO  16:28:22,388 - #24 else
INFO  16:28:22,388 - #1 return
INFO  16:28:22,388 - #1 b
INFO  16:28:22,388 - #6 ;
INFO  16:28:22,388 - #30 }
INFO  16:28:22,389 - #1 int
INFO  16:28:22,389 - #1 min
INFO  16:28:22,389 - #10 (
INFO  16:28:22,389 - #1 int
INFO  16:28:22,389 - #1 a
INFO  16:28:22,389 - #14 ,
INFO  16:28:22,389 - #1 int
INFO  16:28:22,389 - #1 b
INFO  16:28:22,389 - #11 )
INFO  16:28:22,389 - #29 {
INFO  16:28:22,389 - #23 if
INFO  16:28:22,389 - #10 (
INFO  16:28:22,389 - #1 a
INFO  16:28:22,390 - #39 <
INFO  16:28:22,390 - #1 b
INFO  16:28:22,390 - #11 )
INFO  16:28:22,390 - #29 {
INFO  16:28:22,390 - #1 return
INFO  16:28:22,390 - #1 a
INFO  16:28:22,390 - #6 ;
INFO  16:28:22,390 - #30 }
INFO  16:28:22,390 - #24 else
INFO  16:28:22,390 - #29 {
INFO  16:28:22,390 - #1 return
INFO  16:28:22,390 - #1 b
INFO  16:28:22,390 - #6 ;
INFO  16:28:22,390 - #30 }
INFO  16:28:22,391 - #30 }
INFO  16:28:22,391 - #35 void
INFO  16:28:22,391 - #1 main
INFO  16:28:22,391 - #10 (
INFO  16:28:22,391 - #11 )
INFO  16:28:22,391 - #29 {
INFO  16:28:22,391 - #1 int
INFO  16:28:22,391 - #1 a
INFO  16:28:22,391 - #21 [
INFO  16:28:22,391 - #22 ]
INFO  16:28:22,391 - #7 =
INFO  16:28:22,392 - #15 new
INFO  16:28:22,392 - #1 int
INFO  16:28:22,392 - #21 [
INFO  16:28:22,392 - #2 5
INFO  16:28:22,392 - #22 ]
INFO  16:28:22,392 - #6 ;
INFO  16:28:22,392 - #1 int
INFO  16:28:22,392 - #1 b
INFO  16:28:22,392 - #6 ;
INFO  16:28:22,392 - #25 do
INFO  16:28:22,392 - #29 {
INFO  16:28:22,392 - #1 a
INFO  16:28:22,393 - #21 [
INFO  16:28:22,393 - #1 i
INFO  16:28:22,393 - #22 ]
INFO  16:28:22,393 - #7 =
INFO  16:28:22,393 - #12 read
INFO  16:28:22,393 - #10 (
INFO  16:28:22,393 - #1 b
INFO  16:28:22,393 - #11 )
INFO  16:28:22,393 - #6 ;
INFO  16:28:22,393 - #23 if
INFO  16:28:22,393 - #10 (
INFO  16:28:22,393 - #1 a
INFO  16:28:22,393 - #21 [
INFO  16:28:22,394 - #1 i
INFO  16:28:22,394 - #22 ]
INFO  16:28:22,394 - #20 %
INFO  16:28:22,394 - #2 3
INFO  16:28:22,394 - #37 ==
INFO  16:28:22,394 - #2 0
INFO  16:28:22,394 - #11 )
INFO  16:28:22,394 - #13 print
INFO  16:28:22,394 - #10 (
INFO  16:28:22,394 - #1 a
INFO  16:28:22,394 - #21 [
INFO  16:28:22,394 - #1 i
INFO  16:28:22,394 - #22 ]
INFO  16:28:22,394 - #11 )
INFO  16:28:22,394 - #6 ;
INFO  16:28:22,394 - #24 else
INFO  16:28:22,395 - #13 print
INFO  16:28:22,395 - #10 (
INFO  16:28:22,395 - #1 max
INFO  16:28:22,395 - #10 (
INFO  16:28:22,395 - #1 a
INFO  16:28:22,395 - #21 [
INFO  16:28:22,395 - #1 i
INFO  16:28:22,395 - #22 ]
INFO  16:28:22,395 - #14 ,
INFO  16:28:22,396 - #2 0
INFO  16:28:22,396 - #11 )
INFO  16:28:22,397 - #11 )
INFO  16:28:22,397 - #6 ;
INFO  16:28:22,397 - #30 }
INFO  16:28:22,397 - #26 while
INFO  16:28:22,397 - #10 (
INFO  16:28:22,397 - #1 i
INFO  16:28:22,397 - #39 <
INFO  16:28:22,397 - #2 5
INFO  16:28:22,397 - #11 )
INFO  16:28:22,398 - #6 ;
INFO  16:28:22,398 - #13 print
INFO  16:28:22,398 - #10 (
INFO  16:28:22,398 - #1 c
INFO  16:28:22,398 - #11 )
INFO  16:28:22,398 - #6 ;
INFO  16:28:22,398 - #30 }
INFO  16:28:22,398 - #30 }
