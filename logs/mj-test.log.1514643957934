INFO  15:16:14,389 - Compiling source file: C:\Users\LjubaS\Desktop\ACA_ETF\IR4PP1\projekat\sa100122dProjekatDX13\workspace\MJCompiler\test\program.mj
INFO  15:16:14,395 - #33 program
INFO  15:16:14,395 - #1 Program
INFO  15:16:14,395 - #29 {
INFO  15:16:14,395 - #34 const
INFO  15:16:14,395 - #1 int
INFO  15:16:14,395 - #1 c
INFO  15:16:14,395 - #7 =
INFO  15:16:14,396 - #2 10
INFO  15:16:14,396 - #6 ;
INFO  15:16:14,396 - #34 const
INFO  15:16:14,396 - #1 int
INFO  15:16:14,396 - #1 d
INFO  15:16:14,396 - #7 =
INFO  15:16:14,396 - #2 99
INFO  15:16:14,396 - #14 ,
INFO  15:16:14,396 - #1 eps
INFO  15:16:14,397 - #7 =
INFO  15:16:14,397 - #2 2
INFO  15:16:14,397 - #6 ;
INFO  15:16:14,397 - #1 int
INFO  15:16:14,397 - #1 e
INFO  15:16:14,397 - #6 ;
INFO  15:16:14,397 - #35 void
INFO  15:16:14,397 - #1 test
INFO  15:16:14,397 - #10 (
INFO  15:16:14,397 - #11 )
INFO  15:16:14,397 - #29 {
INFO  15:16:14,397 - #1 int
INFO  15:16:14,398 - #1 a
INFO  15:16:14,398 - #14 ,
INFO  15:16:14,398 - #1 b
INFO  15:16:14,398 - #14 ,
INFO  15:16:14,398 - #6 ;
INFO  15:16:14,398 - #1 bool
INFO  15:16:14,398 - #1 cond
INFO  15:16:14,398 - #6 ;
INFO  15:16:14,398 - #1 a
INFO  15:16:14,398 - #7 =
INFO  15:16:14,398 - #2 3
INFO  15:16:14,398 - #6 ;
INFO  15:16:14,398 - #1 b
INFO  15:16:14,399 - #7 =
INFO  15:16:14,399 - #2 5
INFO  15:16:14,399 - #6 ;
INFO  15:16:14,399 - #1 cond
INFO  15:16:14,399 - #7 =
INFO  15:16:14,399 - #4 true
INFO  15:16:14,399 - #6 ;
INFO  15:16:14,399 - #23 if
INFO  15:16:14,399 - #10 (
INFO  15:16:14,399 - #2 2
INFO  15:16:14,399 - #18 *
INFO  15:16:14,399 - #10 (
INFO  15:16:14,399 - #1 a
INFO  15:16:14,400 - #17 -
INFO  15:16:14,400 - #1 b
INFO  15:16:14,400 - #17 -
INFO  15:16:14,400 - #2 1
INFO  15:16:14,400 - #11 )
INFO  15:16:14,403 - #17 -
INFO  15:16:14,403 - #2 14
INFO  15:16:14,403 - #40 >
INFO  15:16:14,403 - #2 0
INFO  15:16:14,403 - #31 ||
INFO  15:16:14,403 - #1 cond
INFO  15:16:14,403 - #11 )
INFO  15:16:14,403 - #13 print
INFO  15:16:14,403 - #10 (
INFO  15:16:14,403 - #1 a
INFO  15:16:14,403 - #16 +
INFO  15:16:14,403 - #1 b
INFO  15:16:14,404 - #11 )
INFO  15:16:14,404 - #6 ;
INFO  15:16:14,404 - #30 }
INFO  15:16:14,404 - #1 int
INFO  15:16:14,404 - #1 max
INFO  15:16:14,404 - #10 (
INFO  15:16:14,404 - #1 int
INFO  15:16:14,404 - #1 a
INFO  15:16:14,404 - #6 ;
INFO  15:16:14,404 - #1 int
INFO  15:16:14,404 - #1 b
INFO  15:16:14,404 - #11 )
INFO  15:16:14,404 - #29 {
INFO  15:16:14,405 - #23 if
INFO  15:16:14,405 - #10 (
INFO  15:16:14,405 - #1 a
INFO  15:16:14,405 - #40 >
INFO  15:16:14,405 - #2 0
INFO  15:16:14,405 - #1 b
INFO  15:16:14,405 - #11 )
INFO  15:16:14,405 - #29 {
INFO  15:16:14,405 - #36 return
INFO  15:16:14,405 - #1 a
INFO  15:16:14,405 - #6 ;
INFO  15:16:14,406 - #30 }
INFO  15:16:14,406 - #24 else
INFO  15:16:14,406 - #36 return
INFO  15:16:14,406 - #1 b
INFO  15:16:14,406 - #6 ;
INFO  15:16:14,406 - #30 }
INFO  15:16:14,406 - #1 int
INFO  15:16:14,406 - #1 min
INFO  15:16:14,406 - #10 (
INFO  15:16:14,406 - #1 int
INFO  15:16:14,406 - #1 a
INFO  15:16:14,406 - #14 ,
INFO  15:16:14,406 - #1 int
INFO  15:16:14,407 - #1 b
INFO  15:16:14,407 - #11 )
INFO  15:16:14,407 - #29 {
INFO  15:16:14,407 - #23 if
INFO  15:16:14,407 - #10 (
INFO  15:16:14,407 - #1 a
INFO  15:16:14,407 - #39 <
INFO  15:16:14,407 - #1 b
INFO  15:16:14,407 - #11 )
INFO  15:16:14,407 - #29 {
INFO  15:16:14,407 - #36 return
INFO  15:16:14,407 - #1 a
INFO  15:16:14,407 - #6 ;
INFO  15:16:14,407 - #30 }
INFO  15:16:14,408 - #24 else
INFO  15:16:14,408 - #29 {
INFO  15:16:14,408 - #36 return
INFO  15:16:14,408 - #1 b
INFO  15:16:14,408 - #6 ;
INFO  15:16:14,408 - #30 }
INFO  15:16:14,408 - #30 }
INFO  15:16:14,408 - #35 void
INFO  15:16:14,408 - #1 main
INFO  15:16:14,408 - #10 (
INFO  15:16:14,408 - #11 )
INFO  15:16:14,409 - #29 {
INFO  15:16:14,409 - #1 int
INFO  15:16:14,409 - #1 a
INFO  15:16:14,409 - #21 [
INFO  15:16:14,409 - #22 ]
INFO  15:16:14,409 - #6 ;
INFO  15:16:14,409 - #1 int
INFO  15:16:14,409 - #1 length
INFO  15:16:14,409 - #6 ;
INFO  15:16:14,410 - #1 length
INFO  15:16:14,410 - #7 =
INFO  15:16:14,410 - #1 c
INFO  15:16:14,410 - #6 ;
INFO  15:16:14,410 - #1 test
INFO  15:16:14,410 - #10 (
INFO  15:16:14,410 - #11 )
INFO  15:16:14,410 - #6 ;
INFO  15:16:14,410 - #23 if
INFO  15:16:14,410 - #10 (
INFO  15:16:14,410 - #1 length
INFO  15:16:14,410 - #40 >
INFO  15:16:14,410 - #2 0
INFO  15:16:14,411 - #32 &&
INFO  15:16:14,411 - #1 length
INFO  15:16:14,411 - #41 <=
INFO  15:16:14,411 - #1 d
INFO  15:16:14,411 - #11 )
INFO  15:16:14,411 - #1 a
INFO  15:16:14,411 - #7 =
INFO  15:16:14,411 - #15 new
INFO  15:16:14,411 - #1 int
INFO  15:16:14,411 - #21 [
INFO  15:16:14,411 - #1 length
INFO  15:16:14,411 - #22 ]
INFO  15:16:14,411 - #6 ;
INFO  15:16:14,411 - #24 else
INFO  15:16:14,411 - #1 a
INFO  15:16:14,412 - #7 =
INFO  15:16:14,412 - #15 new
INFO  15:16:14,412 - #1 int
INFO  15:16:14,412 - #21 [
INFO  15:16:14,412 - #2 5
INFO  15:16:14,412 - #22 ]
INFO  15:16:14,412 - #6 ;
INFO  15:16:14,412 - #25 do
INFO  15:16:14,412 - #29 {
INFO  15:16:14,412 - #12 read
INFO  15:16:14,412 - #10 (
INFO  15:16:14,412 - #1 a
INFO  15:16:14,412 - #21 [
INFO  15:16:14,412 - #1 i
INFO  15:16:14,413 - #22 ]
INFO  15:16:14,413 - #11 )
INFO  15:16:14,413 - #6 ;
INFO  15:16:14,413 - #23 if
INFO  15:16:14,413 - #10 (
INFO  15:16:14,413 - #1 a
INFO  15:16:14,413 - #21 [
INFO  15:16:14,413 - #1 i
INFO  15:16:14,413 - #22 ]
INFO  15:16:14,413 - #20 %
INFO  15:16:14,413 - #2 3
INFO  15:16:14,413 - #37 ==
INFO  15:16:14,413 - #2 0
INFO  15:16:14,413 - #11 )
INFO  15:16:14,414 - #13 print
INFO  15:16:14,414 - #10 (
INFO  15:16:14,414 - #1 a
INFO  15:16:14,414 - #21 [
INFO  15:16:14,414 - #1 i
INFO  15:16:14,414 - #22 ]
INFO  15:16:14,414 - #11 )
INFO  15:16:14,414 - #6 ;
INFO  15:16:14,414 - #24 else
INFO  15:16:14,414 - #13 print
INFO  15:16:14,414 - #10 (
INFO  15:16:14,414 - #1 max
INFO  15:16:14,414 - #10 (
INFO  15:16:14,414 - #1 a
INFO  15:16:14,414 - #21 [
INFO  15:16:14,414 - #1 i
INFO  15:16:14,414 - #22 ]
INFO  15:16:14,414 - #14 ,
INFO  15:16:14,415 - #2 0
INFO  15:16:14,415 - #11 )
INFO  15:16:14,415 - #11 )
INFO  15:16:14,415 - #6 ;
INFO  15:16:14,415 - #30 }
INFO  15:16:14,415 - #26 while
INFO  15:16:14,415 - #10 (
INFO  15:16:14,415 - #1 i
INFO  15:16:14,415 - #41 <=
INFO  15:16:14,415 - #1 length
INFO  15:16:14,415 - #17 -
INFO  15:16:14,415 - #2 1
INFO  15:16:14,415 - #11 )
INFO  15:16:14,415 - #6 ;
INFO  15:16:14,415 - #13 print
INFO  15:16:14,415 - #10 (
INFO  15:16:14,415 - #1 d
INFO  15:16:14,415 - #11 )
INFO  15:16:14,415 - #6 ;
INFO  15:16:14,416 - #30 }
INFO  15:16:14,416 - #30 }
