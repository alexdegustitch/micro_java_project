INFO  16:46:04,297 - Compiling source file: C:\Users\LjubaS\Desktop\ACA_ETF\IR4PP1\projekat\sa100122dProjekatDX21\workspace\MJCompiler\test\program.mj
INFO  16:46:04,303 - #33 program
INFO  16:46:04,303 - #1 Program
INFO  16:46:04,303 - #29 {
INFO  16:46:04,303 - #34 const
INFO  16:46:04,303 - #1 int
INFO  16:46:04,304 - #1 c
INFO  16:46:04,304 - #7 =
INFO  16:46:04,304 - #2 10
INFO  16:46:04,304 - #6 ;
INFO  16:46:04,304 - #34 const
INFO  16:46:04,304 - #1 int
INFO  16:46:04,304 - #1 d
INFO  16:46:04,304 - #7 =
INFO  16:46:04,305 - #2 99
INFO  16:46:04,305 - #14 ,
INFO  16:46:04,305 - #1 eps
INFO  16:46:04,305 - #7 =
INFO  16:46:04,305 - #2 2
INFO  16:46:04,305 - #6 ;
INFO  16:46:04,305 - #1 int
INFO  16:46:04,305 - #1 e
INFO  16:46:04,305 - #6 ;
INFO  16:46:04,306 - #35 void
INFO  16:46:04,306 - #1 test
INFO  16:46:04,306 - #10 (
INFO  16:46:04,306 - #11 )
INFO  16:46:04,306 - #29 {
INFO  16:46:04,306 - #1 int
INFO  16:46:04,306 - #1 a
INFO  16:46:04,306 - #14 ,
INFO  16:46:04,306 - #1 b
INFO  16:46:04,306 - #14 ,
INFO  16:46:04,306 - #6 ;
INFO  16:46:04,306 - #1 bool
INFO  16:46:04,307 - #1 cond
INFO  16:46:04,307 - #6 ;
INFO  16:46:04,307 - #1 a
INFO  16:46:04,307 - #7 =
INFO  16:46:04,307 - #2 3
INFO  16:46:04,307 - #6 ;
INFO  16:46:04,307 - #1 b
INFO  16:46:04,307 - #7 =
INFO  16:46:04,307 - #6 ;
INFO  16:46:04,307 - #1 cond
INFO  16:46:04,307 - #7 =
INFO  16:46:04,307 - #4 true
INFO  16:46:04,307 - #6 ;
INFO  16:46:04,308 - #23 if
INFO  16:46:04,308 - #10 (
INFO  16:46:04,308 - #2 2
INFO  16:46:04,308 - #18 *
INFO  16:46:04,308 - #10 (
INFO  16:46:04,308 - #1 a
INFO  16:46:04,308 - #17 -
INFO  16:46:04,308 - #1 b
INFO  16:46:04,308 - #17 -
INFO  16:46:04,308 - #2 1
INFO  16:46:04,308 - #11 )
INFO  16:46:04,308 - #17 -
INFO  16:46:04,311 - #2 14
INFO  16:46:04,311 - #40 >
INFO  16:46:04,311 - #2 0
INFO  16:46:04,311 - #31 ||
INFO  16:46:04,311 - #1 cond
INFO  16:46:04,311 - #11 )
INFO  16:46:04,312 - #13 print
INFO  16:46:04,312 - #10 (
INFO  16:46:04,312 - #1 a
INFO  16:46:04,312 - #16 +
INFO  16:46:04,312 - #1 b
INFO  16:46:04,312 - #11 )
INFO  16:46:04,312 - #6 ;
INFO  16:46:04,312 - #30 }
INFO  16:46:04,312 - #1 int
INFO  16:46:04,312 - #1 max
INFO  16:46:04,312 - #10 (
INFO  16:46:04,312 - #1 int
INFO  16:46:04,312 - #1 a
INFO  16:46:04,313 - #6 ;
INFO  16:46:04,313 - #1 int
INFO  16:46:04,313 - #1 b
INFO  16:46:04,313 - #11 )
INFO  16:46:04,313 - #29 {
INFO  16:46:04,313 - #23 if
INFO  16:46:04,313 - #10 (
INFO  16:46:04,313 - #1 a
INFO  16:46:04,313 - #40 >
INFO  16:46:04,313 - #2 0
INFO  16:46:04,313 - #1 b
INFO  16:46:04,313 - #11 )
INFO  16:46:04,314 - #29 {
INFO  16:46:04,314 - #36 return
INFO  16:46:04,314 - #1 a
INFO  16:46:04,314 - #6 ;
INFO  16:46:04,314 - #30 }
INFO  16:46:04,314 - #24 else
INFO  16:46:04,314 - #36 return
INFO  16:46:04,314 - #1 b
INFO  16:46:04,314 - #6 ;
INFO  16:46:04,314 - #30 }
INFO  16:46:04,315 - #1 int
INFO  16:46:04,315 - #1 min
INFO  16:46:04,315 - #10 (
INFO  16:46:04,315 - #1 int
INFO  16:46:04,315 - #1 a
INFO  16:46:04,315 - #14 ,
INFO  16:46:04,315 - #1 int
INFO  16:46:04,315 - #1 b
INFO  16:46:04,315 - #11 )
INFO  16:46:04,315 - #29 {
INFO  16:46:04,315 - #23 if
INFO  16:46:04,316 - #10 (
INFO  16:46:04,316 - #1 a
INFO  16:46:04,316 - #39 <
INFO  16:46:04,316 - #1 b
INFO  16:46:04,316 - #11 )
INFO  16:46:04,316 - #29 {
INFO  16:46:04,316 - #36 return
INFO  16:46:04,317 - #1 a
INFO  16:46:04,317 - #6 ;
INFO  16:46:04,317 - #30 }
INFO  16:46:04,317 - #24 else
INFO  16:46:04,317 - #29 {
INFO  16:46:04,317 - #36 return
INFO  16:46:04,317 - #1 b
INFO  16:46:04,317 - #6 ;
INFO  16:46:04,318 - #30 }
INFO  16:46:04,318 - #30 }
INFO  16:46:04,318 - #35 void
INFO  16:46:04,318 - #1 main
INFO  16:46:04,318 - #10 (
INFO  16:46:04,318 - #11 )
INFO  16:46:04,318 - #29 {
INFO  16:46:04,318 - #1 int
INFO  16:46:04,318 - #1 a
INFO  16:46:04,318 - #21 [
INFO  16:46:04,318 - #6 ;
INFO  16:46:04,318 - #1 int
INFO  16:46:04,319 - #1 length
INFO  16:46:04,319 - #6 ;
INFO  16:46:04,319 - #1 length
INFO  16:46:04,319 - #7 =
INFO  16:46:04,319 - #1 c
INFO  16:46:04,319 - #6 ;
INFO  16:46:04,319 - #1 test
INFO  16:46:04,319 - #10 (
INFO  16:46:04,319 - #11 )
INFO  16:46:04,319 - #6 ;
INFO  16:46:04,319 - #23 if
INFO  16:46:04,319 - #10 (
INFO  16:46:04,320 - #1 length
INFO  16:46:04,320 - #40 >
INFO  16:46:04,320 - #2 0
INFO  16:46:04,320 - #32 &&
INFO  16:46:04,320 - #1 length
INFO  16:46:04,320 - #41 <=
INFO  16:46:04,320 - #1 d
INFO  16:46:04,320 - #11 )
INFO  16:46:04,320 - #1 a
INFO  16:46:04,320 - #7 =
INFO  16:46:04,320 - #15 new
INFO  16:46:04,320 - #1 int
INFO  16:46:04,320 - #21 [
INFO  16:46:04,320 - #1 length
INFO  16:46:04,320 - #22 ]
INFO  16:46:04,321 - #6 ;
INFO  16:46:04,321 - #24 else
INFO  16:46:04,321 - #1 a
INFO  16:46:04,321 - #7 =
INFO  16:46:04,321 - #15 new
INFO  16:46:04,321 - #1 int
INFO  16:46:04,321 - #21 [
INFO  16:46:04,321 - #2 5
INFO  16:46:04,321 - #22 ]
INFO  16:46:04,321 - #6 ;
INFO  16:46:04,321 - #25 do
INFO  16:46:04,321 - #29 {
INFO  16:46:04,321 - #12 read
INFO  16:46:04,321 - #10 (
INFO  16:46:04,322 - #1 a
INFO  16:46:04,322 - #21 [
INFO  16:46:04,322 - #1 i
INFO  16:46:04,322 - #22 ]
INFO  16:46:04,322 - #11 )
INFO  16:46:04,322 - #6 ;
INFO  16:46:04,322 - #23 if
INFO  16:46:04,322 - #10 (
INFO  16:46:04,322 - #1 a
INFO  16:46:04,322 - #21 [
INFO  16:46:04,322 - #1 i
INFO  16:46:04,323 - #22 ]
INFO  16:46:04,323 - #20 %
INFO  16:46:04,323 - #2 3
INFO  16:46:04,323 - #37 ==
INFO  16:46:04,323 - #2 0
INFO  16:46:04,323 - #11 )
INFO  16:46:04,323 - #13 print
INFO  16:46:04,323 - #10 (
INFO  16:46:04,323 - #1 a
INFO  16:46:04,323 - #21 [
INFO  16:46:04,323 - #1 i
INFO  16:46:04,323 - #22 ]
INFO  16:46:04,323 - #11 )
INFO  16:46:04,323 - #6 ;
INFO  16:46:04,324 - #24 else
INFO  16:46:04,324 - #13 print
INFO  16:46:04,324 - #10 (
INFO  16:46:04,324 - #1 max
INFO  16:46:04,324 - #10 (
INFO  16:46:04,324 - #1 a
INFO  16:46:04,324 - #21 [
INFO  16:46:04,324 - #1 i
INFO  16:46:04,324 - #22 ]
INFO  16:46:04,324 - #14 ,
INFO  16:46:04,324 - #2 0
INFO  16:46:04,324 - #11 )
INFO  16:46:04,324 - #11 )
INFO  16:46:04,324 - #6 ;
INFO  16:46:04,324 - #30 }
INFO  16:46:04,325 - #26 while
INFO  16:46:04,325 - #10 (
INFO  16:46:04,325 - #1 i
INFO  16:46:04,325 - #41 <=
INFO  16:46:04,325 - #1 length
INFO  16:46:04,325 - #17 -
INFO  16:46:04,325 - #2 1
INFO  16:46:04,325 - #11 )
INFO  16:46:04,325 - #6 ;
INFO  16:46:04,325 - #13 print
INFO  16:46:04,325 - #10 (
INFO  16:46:04,325 - #1 d
INFO  16:46:04,325 - #11 )
INFO  16:46:04,325 - #6 ;
INFO  16:46:04,325 - #30 }
INFO  16:46:04,325 - #30 }
