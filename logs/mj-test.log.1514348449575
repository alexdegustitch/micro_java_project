INFO  05:17:35,220 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatCX\workspace\MJCompiler\test\program.mj
INFO  05:17:35,226 - #2 program
INFO  05:17:35,226 - #8 Program
INFO  05:17:35,226 - #20 {
INFO  05:17:35,226 - #5 const
INFO  05:17:35,226 - #8 int
INFO  05:17:35,226 - #8 c
INFO  05:17:35,226 - #24 =
INFO  05:17:35,226 - #9 10
INFO  05:17:35,227 - #27 ;
INFO  05:17:35,227 - #6 void
INFO  05:17:35,227 - #8 max
INFO  05:17:35,227 - #29 (
INFO  05:17:35,227 - #8 int
INFO  05:17:35,227 - #8 a
INFO  05:17:35,227 - #28 ,
INFO  05:17:35,227 - #8 int
INFO  05:17:35,227 - #8 b
INFO  05:17:35,227 - #30 )
INFO  05:17:35,228 - #20 {
INFO  05:17:35,228 - #31 if
INFO  05:17:35,228 - #29 (
INFO  05:17:35,228 - #8 a
INFO  05:17:35,228 - #38 >
INFO  05:17:35,228 - #8 b
INFO  05:17:35,228 - #30 )
INFO  05:17:35,228 - #20 {
INFO  05:17:35,228 - #8 return
INFO  05:17:35,228 - #8 a
INFO  05:17:35,228 - #27 ;
INFO  05:17:35,228 - #21 }
INFO  05:17:35,229 - #32 else
INFO  05:17:35,229 - #8 return
INFO  05:17:35,229 - #8 b
INFO  05:17:35,229 - #27 ;
INFO  05:17:35,229 - #21 }
INFO  05:17:35,229 - #6 void
INFO  05:17:35,229 - #8 min
INFO  05:17:35,229 - #29 (
INFO  05:17:35,229 - #8 int
INFO  05:17:35,229 - #8 a
INFO  05:17:35,229 - #28 ,
INFO  05:17:35,229 - #8 int
INFO  05:17:35,230 - #8 b
INFO  05:17:35,230 - #30 )
INFO  05:17:35,230 - #20 {
INFO  05:17:35,230 - #31 if
INFO  05:17:35,230 - #29 (
INFO  05:17:35,230 - #8 a
INFO  05:17:35,230 - #40 <
INFO  05:17:35,230 - #8 b
INFO  05:17:35,230 - #30 )
INFO  05:17:35,230 - #20 {
INFO  05:17:35,230 - #8 return
INFO  05:17:35,230 - #8 a
INFO  05:17:35,230 - #27 ;
INFO  05:17:35,231 - #21 }
INFO  05:17:35,231 - #32 else
INFO  05:17:35,231 - #20 {
INFO  05:17:35,231 - #8 return
INFO  05:17:35,232 - #8 b
INFO  05:17:35,232 - #27 ;
INFO  05:17:35,232 - #21 }
INFO  05:17:35,232 - #21 }
INFO  05:17:35,233 - #6 void
INFO  05:17:35,233 - #8 main
INFO  05:17:35,233 - #29 (
INFO  05:17:35,233 - #30 )
INFO  05:17:35,233 - #20 {
INFO  05:17:35,233 - #8 int
INFO  05:17:35,233 - #8 a
INFO  05:17:35,233 - #22 [
INFO  05:17:35,233 - #23 ]
INFO  05:17:35,233 - #24 =
INFO  05:17:35,233 - #7 new
INFO  05:17:35,233 - #8 int
INFO  05:17:35,233 - #22 [
INFO  05:17:35,233 - #9 5
INFO  05:17:35,234 - #23 ]
INFO  05:17:35,234 - #27 ;
INFO  05:17:35,234 - #8 int
INFO  05:17:35,234 - #8 b
INFO  05:17:35,234 - #27 ;
INFO  05:17:35,234 - #33 do
INFO  05:17:35,234 - #20 {
INFO  05:17:35,234 - #8 a
INFO  05:17:35,234 - #22 [
INFO  05:17:35,234 - #8 i
INFO  05:17:35,234 - #23 ]
INFO  05:17:35,234 - #24 =
INFO  05:17:35,234 - #4 read
INFO  05:17:35,234 - #29 (
INFO  05:17:35,234 - #8 b
INFO  05:17:35,235 - #30 )
INFO  05:17:35,235 - #27 ;
INFO  05:17:35,235 - #31 if
INFO  05:17:35,235 - #29 (
INFO  05:17:35,235 - #8 a
INFO  05:17:35,235 - #22 [
INFO  05:17:35,235 - #8 i
INFO  05:17:35,235 - #23 ]
INFO  05:17:35,235 - #19 %
INFO  05:17:35,235 - #9 3
INFO  05:17:35,235 - #39 ==
INFO  05:17:35,235 - #9 0
INFO  05:17:35,235 - #30 )
INFO  05:17:35,235 - #3 print
INFO  05:17:35,235 - #29 (
INFO  05:17:35,235 - #8 a
INFO  05:17:35,236 - #22 [
INFO  05:17:35,236 - #8 i
INFO  05:17:35,236 - #23 ]
INFO  05:17:35,236 - #30 )
INFO  05:17:35,236 - #27 ;
INFO  05:17:35,236 - #32 else
INFO  05:17:35,236 - #3 print
INFO  05:17:35,236 - #29 (
INFO  05:17:35,236 - #8 max
INFO  05:17:35,236 - #29 (
INFO  05:17:35,236 - #8 a
INFO  05:17:35,237 - #22 [
INFO  05:17:35,237 - #8 i
INFO  05:17:35,237 - #23 ]
INFO  05:17:35,237 - #28 ,
INFO  05:17:35,237 - #9 0
INFO  05:17:35,238 - #30 )
INFO  05:17:35,238 - #30 )
INFO  05:17:35,238 - #27 ;
INFO  05:17:35,238 - #21 }
INFO  05:17:35,238 - #34 while
INFO  05:17:35,238 - #29 (
INFO  05:17:35,238 - #8 i
INFO  05:17:35,238 - #40 <
INFO  05:17:35,238 - #9 5
INFO  05:17:35,238 - #30 )
INFO  05:17:35,238 - #27 ;
INFO  05:17:35,238 - #3 print
INFO  05:17:35,238 - #29 (
INFO  05:17:35,239 - #8 c
INFO  05:17:35,239 - #30 )
INFO  05:17:35,239 - #27 ;
INFO  05:17:35,239 - #21 }
INFO  05:17:35,239 - #21 }
