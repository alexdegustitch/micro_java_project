INFO  03:12:19,439 - Compiling source file: C:\Users\LjubaS\Desktop\ACA_ETF\IR4PP1\projekat\sa100122dProjekatDX10\workspace\MJCompiler\test\program.mj
INFO  03:12:19,445 - #2 program
INFO  03:12:19,445 - #8 Program
INFO  03:12:19,445 - #20 {
INFO  03:12:19,445 - #5 const
INFO  03:12:19,445 - #8 int
INFO  03:12:19,445 - #8 c
INFO  03:12:19,445 - #24 =
INFO  03:12:19,445 - #9 10
INFO  03:12:19,445 - #27 ;
INFO  03:12:19,445 - #5 const
INFO  03:12:19,445 - #8 int
INFO  03:12:19,446 - #8 d
INFO  03:12:19,446 - #24 =
INFO  03:12:19,446 - #9 99
INFO  03:12:19,446 - #28 ,
INFO  03:12:19,446 - #8 eps
INFO  03:12:19,446 - #24 =
INFO  03:12:19,446 - #9 2
INFO  03:12:19,446 - #27 ;
INFO  03:12:19,446 - #8 int
INFO  03:12:19,446 - #27 ;
INFO  03:12:19,446 - #6 void
INFO  03:12:19,447 - #8 test
INFO  03:12:19,447 - #29 (
INFO  03:12:19,447 - #30 )
INFO  03:12:19,447 - #20 {
INFO  03:12:19,447 - #8 int
INFO  03:12:19,447 - #8 a
INFO  03:12:19,447 - #28 ,
INFO  03:12:19,447 - #8 b
INFO  03:12:19,447 - #27 ;
INFO  03:12:19,447 - #8 bool
INFO  03:12:19,447 - #8 cond
INFO  03:12:19,447 - #27 ;
INFO  03:12:19,447 - #8 a
INFO  03:12:19,447 - #24 =
INFO  03:12:19,448 - #9 3
INFO  03:12:19,448 - #27 ;
INFO  03:12:19,448 - #8 b
INFO  03:12:19,448 - #24 =
INFO  03:12:19,448 - #9 5
INFO  03:12:19,448 - #27 ;
INFO  03:12:19,448 - #8 cond
INFO  03:12:19,448 - #24 =
INFO  03:12:19,448 - #11 true
INFO  03:12:19,448 - #27 ;
INFO  03:12:19,448 - #31 if
INFO  03:12:19,448 - #29 (
INFO  03:12:19,448 - #9 2
INFO  03:12:19,449 - #17 *
INFO  03:12:19,449 - #29 (
INFO  03:12:19,449 - #8 a
INFO  03:12:19,449 - #16 -
INFO  03:12:19,449 - #8 b
INFO  03:12:19,449 - #16 -
INFO  03:12:19,449 - #9 1
INFO  03:12:19,449 - #30 )
INFO  03:12:19,449 - #16 -
INFO  03:12:19,449 - #9 14
INFO  03:12:19,452 - #38 >
INFO  03:12:19,452 - #9 0
INFO  03:12:19,452 - #14 ||
INFO  03:12:19,452 - #8 cond
INFO  03:12:19,452 - #30 )
INFO  03:12:19,452 - #3 print
INFO  03:12:19,452 - #29 (
INFO  03:12:19,452 - #8 a
INFO  03:12:19,452 - #15 +
INFO  03:12:19,452 - #8 b
INFO  03:12:19,452 - #30 )
INFO  03:12:19,452 - #27 ;
INFO  03:12:19,453 - #21 }
INFO  03:12:19,453 - #8 int
INFO  03:12:19,453 - #8 max
INFO  03:12:19,453 - #29 (
INFO  03:12:19,453 - #8 int
INFO  03:12:19,453 - #8 a
INFO  03:12:19,453 - #28 ,
INFO  03:12:19,453 - #8 int
INFO  03:12:19,453 - #8 b
INFO  03:12:19,453 - #30 )
INFO  03:12:19,453 - #20 {
INFO  03:12:19,453 - #31 if
INFO  03:12:19,453 - #29 (
INFO  03:12:19,454 - #8 a
INFO  03:12:19,454 - #38 >
INFO  03:12:19,454 - #8 b
INFO  03:12:19,454 - #30 )
INFO  03:12:19,454 - #20 {
INFO  03:12:19,454 - #37 return
INFO  03:12:19,454 - #8 a
INFO  03:12:19,454 - #27 ;
INFO  03:12:19,454 - #21 }
INFO  03:12:19,454 - #32 else
INFO  03:12:19,455 - #37 return
INFO  03:12:19,455 - #8 b
INFO  03:12:19,455 - #27 ;
INFO  03:12:19,455 - #21 }
INFO  03:12:19,455 - #8 int
INFO  03:12:19,455 - #8 min
INFO  03:12:19,455 - #29 (
INFO  03:12:19,455 - #8 int
INFO  03:12:19,455 - #8 a
INFO  03:12:19,455 - #28 ,
INFO  03:12:19,455 - #8 int
INFO  03:12:19,455 - #8 b
INFO  03:12:19,455 - #30 )
INFO  03:12:19,456 - #20 {
INFO  03:12:19,456 - #31 if
INFO  03:12:19,456 - #29 (
INFO  03:12:19,456 - #8 a
INFO  03:12:19,456 - #40 <
INFO  03:12:19,456 - #8 b
INFO  03:12:19,456 - #30 )
INFO  03:12:19,456 - #20 {
INFO  03:12:19,456 - #37 return
INFO  03:12:19,456 - #8 a
INFO  03:12:19,456 - #27 ;
INFO  03:12:19,456 - #21 }
INFO  03:12:19,456 - #32 else
INFO  03:12:19,456 - #20 {
INFO  03:12:19,457 - #37 return
INFO  03:12:19,457 - #8 b
INFO  03:12:19,457 - #27 ;
INFO  03:12:19,457 - #21 }
INFO  03:12:19,457 - #21 }
INFO  03:12:19,457 - #6 void
INFO  03:12:19,457 - #8 main
INFO  03:12:19,457 - #29 (
INFO  03:12:19,457 - #30 )
INFO  03:12:19,457 - #20 {
INFO  03:12:19,457 - #8 int
INFO  03:12:19,457 - #8 a
INFO  03:12:19,457 - #22 [
INFO  03:12:19,458 - #23 ]
INFO  03:12:19,458 - #27 ;
INFO  03:12:19,458 - #8 int
INFO  03:12:19,458 - #8 length
INFO  03:12:19,458 - #27 ;
INFO  03:12:19,458 - #8 length
INFO  03:12:19,458 - #24 =
INFO  03:12:19,458 - #8 c
INFO  03:12:19,458 - #27 ;
INFO  03:12:19,458 - #8 test
INFO  03:12:19,458 - #29 (
INFO  03:12:19,458 - #30 )
INFO  03:12:19,458 - #27 ;
INFO  03:12:19,459 - #31 if
INFO  03:12:19,459 - #29 (
INFO  03:12:19,459 - #8 length
INFO  03:12:19,459 - #38 >
INFO  03:12:19,459 - #9 0
INFO  03:12:19,459 - #13 &&
INFO  03:12:19,459 - #8 length
INFO  03:12:19,459 - #42 <=
INFO  03:12:19,459 - #8 d
INFO  03:12:19,459 - #30 )
INFO  03:12:19,459 - #8 a
INFO  03:12:19,459 - #24 =
INFO  03:12:19,459 - #7 new
INFO  03:12:19,459 - #8 int
INFO  03:12:19,459 - #22 [
INFO  03:12:19,460 - #8 length
INFO  03:12:19,460 - #23 ]
INFO  03:12:19,460 - #27 ;
INFO  03:12:19,460 - #32 else
INFO  03:12:19,460 - #8 a
INFO  03:12:19,460 - #24 =
INFO  03:12:19,460 - #7 new
INFO  03:12:19,460 - #8 int
INFO  03:12:19,460 - #22 [
INFO  03:12:19,460 - #9 5
INFO  03:12:19,460 - #23 ]
INFO  03:12:19,460 - #27 ;
INFO  03:12:19,460 - #33 do
INFO  03:12:19,460 - #20 {
INFO  03:12:19,461 - #4 read
INFO  03:12:19,461 - #29 (
INFO  03:12:19,461 - #8 a
INFO  03:12:19,461 - #22 [
INFO  03:12:19,461 - #8 i
INFO  03:12:19,461 - #23 ]
INFO  03:12:19,461 - #30 )
INFO  03:12:19,461 - #27 ;
INFO  03:12:19,461 - #31 if
INFO  03:12:19,461 - #29 (
INFO  03:12:19,461 - #8 a
INFO  03:12:19,461 - #22 [
INFO  03:12:19,461 - #8 i
INFO  03:12:19,461 - #23 ]
INFO  03:12:19,461 - #19 %
INFO  03:12:19,462 - #9 3
INFO  03:12:19,462 - #39 ==
INFO  03:12:19,462 - #9 0
INFO  03:12:19,462 - #30 )
INFO  03:12:19,462 - #3 print
INFO  03:12:19,462 - #29 (
INFO  03:12:19,462 - #8 a
INFO  03:12:19,462 - #22 [
INFO  03:12:19,462 - #8 i
INFO  03:12:19,462 - #23 ]
INFO  03:12:19,462 - #30 )
INFO  03:12:19,462 - #27 ;
INFO  03:12:19,462 - #32 else
INFO  03:12:19,462 - #3 print
INFO  03:12:19,463 - #29 (
INFO  03:12:19,463 - #8 max
INFO  03:12:19,463 - #29 (
INFO  03:12:19,463 - #8 a
INFO  03:12:19,463 - #22 [
INFO  03:12:19,463 - #8 i
INFO  03:12:19,463 - #23 ]
INFO  03:12:19,463 - #28 ,
INFO  03:12:19,463 - #9 0
INFO  03:12:19,463 - #30 )
INFO  03:12:19,463 - #30 )
INFO  03:12:19,463 - #27 ;
INFO  03:12:19,463 - #21 }
INFO  03:12:19,463 - #34 while
INFO  03:12:19,463 - #29 (
INFO  03:12:19,463 - #8 i
INFO  03:12:19,463 - #42 <=
INFO  03:12:19,463 - #8 length
INFO  03:12:19,463 - #16 -
INFO  03:12:19,463 - #9 1
INFO  03:12:19,463 - #30 )
INFO  03:12:19,464 - #27 ;
INFO  03:12:19,464 - #3 print
INFO  03:12:19,464 - #29 (
INFO  03:12:19,464 - #8 d
INFO  03:12:19,464 - #30 )
INFO  03:12:19,464 - #27 ;
INFO  03:12:19,464 - #21 }
INFO  03:12:19,464 - #21 }
