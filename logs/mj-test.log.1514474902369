INFO  07:02:40,117 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatCX7\workspace\MJCompiler\test\program.mj
INFO  07:02:40,125 - #2 program
INFO  07:02:40,125 - #8 Program
INFO  07:02:40,125 - #20 {
INFO  07:02:40,125 - #5 const
INFO  07:02:40,125 - #8 int
INFO  07:02:40,125 - #8 c
INFO  07:02:40,125 - #24 =
INFO  07:02:40,125 - #9 10
INFO  07:02:40,125 - #27 ;
INFO  07:02:40,126 - #5 const
INFO  07:02:40,126 - #8 int
INFO  07:02:40,126 - #8 d
INFO  07:02:40,126 - #24 =
INFO  07:02:40,126 - #9 13
INFO  07:02:40,126 - #27 ;
INFO  07:02:40,126 - #8 int
INFO  07:02:40,126 - #8 e
INFO  07:02:40,126 - #27 ;
INFO  07:02:40,126 - #6 void
INFO  07:02:40,126 - #8 test
INFO  07:02:40,127 - #29 (
INFO  07:02:40,127 - #30 )
INFO  07:02:40,127 - #20 {
INFO  07:02:40,127 - #8 int
INFO  07:02:40,127 - #8 a
INFO  07:02:40,127 - #27 ;
INFO  07:02:40,127 - #8 int
INFO  07:02:40,127 - #8 b
INFO  07:02:40,127 - #27 ;
INFO  07:02:40,127 - #8 a
INFO  07:02:40,127 - #24 =
INFO  07:02:40,128 - #9 3
INFO  07:02:40,128 - #27 ;
INFO  07:02:40,128 - #8 b
INFO  07:02:40,128 - #24 =
INFO  07:02:40,128 - #9 5
INFO  07:02:40,128 - #27 ;
INFO  07:02:40,128 - #3 print
INFO  07:02:40,128 - #29 (
INFO  07:02:40,128 - #8 a
INFO  07:02:40,128 - #15 +
INFO  07:02:40,128 - #8 b
INFO  07:02:40,128 - #30 )
INFO  07:02:40,128 - #27 ;
INFO  07:02:40,128 - #21 }
INFO  07:02:40,128 - #8 int
INFO  07:02:40,129 - #8 max
INFO  07:02:40,129 - #29 (
INFO  07:02:40,129 - #8 int
INFO  07:02:40,129 - #8 a
INFO  07:02:40,129 - #28 ,
INFO  07:02:40,129 - #8 int
INFO  07:02:40,129 - #8 b
INFO  07:02:40,129 - #30 )
INFO  07:02:40,129 - #20 {
INFO  07:02:40,129 - #31 if
INFO  07:02:40,129 - #29 (
INFO  07:02:40,129 - #8 a
INFO  07:02:40,130 - #38 >
INFO  07:02:40,131 - #8 b
INFO  07:02:40,131 - #30 )
INFO  07:02:40,131 - #20 {
INFO  07:02:40,131 - #8 return
INFO  07:02:40,131 - #8 a
INFO  07:02:40,131 - #27 ;
INFO  07:02:40,131 - #21 }
INFO  07:02:40,131 - #32 else
INFO  07:02:40,131 - #8 return
INFO  07:02:40,132 - #8 b
INFO  07:02:40,132 - #27 ;
INFO  07:02:40,132 - #21 }
INFO  07:02:40,132 - #8 int
INFO  07:02:40,132 - #8 min
INFO  07:02:40,132 - #29 (
INFO  07:02:40,132 - #8 int
INFO  07:02:40,132 - #8 a
INFO  07:02:40,132 - #28 ,
INFO  07:02:40,132 - #8 int
INFO  07:02:40,132 - #8 b
INFO  07:02:40,132 - #30 )
INFO  07:02:40,133 - #20 {
INFO  07:02:40,133 - #31 if
INFO  07:02:40,133 - #29 (
INFO  07:02:40,133 - #8 a
INFO  07:02:40,133 - #40 <
INFO  07:02:40,133 - #8 b
INFO  07:02:40,133 - #30 )
INFO  07:02:40,133 - #20 {
INFO  07:02:40,133 - #8 return
INFO  07:02:40,133 - #8 a
INFO  07:02:40,133 - #27 ;
INFO  07:02:40,133 - #21 }
INFO  07:02:40,133 - #32 else
INFO  07:02:40,134 - #20 {
INFO  07:02:40,134 - #8 return
INFO  07:02:40,134 - #8 b
INFO  07:02:40,134 - #27 ;
INFO  07:02:40,134 - #21 }
INFO  07:02:40,134 - #21 }
INFO  07:02:40,135 - #6 void
INFO  07:02:40,135 - #8 main
INFO  07:02:40,135 - #29 (
INFO  07:02:40,135 - #30 )
INFO  07:02:40,135 - #20 {
INFO  07:02:40,135 - #8 int
INFO  07:02:40,135 - #8 a
INFO  07:02:40,135 - #22 [
INFO  07:02:40,135 - #23 ]
INFO  07:02:40,135 - #24 =
INFO  07:02:40,135 - #7 new
INFO  07:02:40,136 - #8 int
INFO  07:02:40,136 - #22 [
INFO  07:02:40,136 - #9 5
INFO  07:02:40,136 - #23 ]
INFO  07:02:40,136 - #27 ;
INFO  07:02:40,136 - #8 int
INFO  07:02:40,136 - #8 b
INFO  07:02:40,136 - #27 ;
INFO  07:02:40,136 - #33 do
INFO  07:02:40,136 - #20 {
INFO  07:02:40,136 - #8 a
INFO  07:02:40,136 - #22 [
INFO  07:02:40,136 - #8 i
INFO  07:02:40,136 - #23 ]
INFO  07:02:40,137 - #24 =
INFO  07:02:40,137 - #4 read
INFO  07:02:40,137 - #29 (
INFO  07:02:40,137 - #8 b
INFO  07:02:40,137 - #30 )
INFO  07:02:40,137 - #27 ;
INFO  07:02:40,137 - #31 if
INFO  07:02:40,137 - #29 (
INFO  07:02:40,137 - #8 a
INFO  07:02:40,137 - #22 [
INFO  07:02:40,137 - #8 i
INFO  07:02:40,138 - #23 ]
INFO  07:02:40,138 - #19 %
INFO  07:02:40,138 - #9 3
INFO  07:02:40,138 - #39 ==
INFO  07:02:40,138 - #9 0
INFO  07:02:40,138 - #30 )
INFO  07:02:40,138 - #3 print
INFO  07:02:40,138 - #29 (
INFO  07:02:40,138 - #8 a
INFO  07:02:40,138 - #22 [
INFO  07:02:40,138 - #8 i
INFO  07:02:40,138 - #23 ]
INFO  07:02:40,138 - #30 )
INFO  07:02:40,138 - #27 ;
INFO  07:02:40,138 - #32 else
INFO  07:02:40,138 - #3 print
INFO  07:02:40,139 - #29 (
INFO  07:02:40,139 - #8 max
INFO  07:02:40,139 - #29 (
INFO  07:02:40,139 - #8 a
INFO  07:02:40,139 - #22 [
INFO  07:02:40,139 - #8 i
INFO  07:02:40,139 - #23 ]
INFO  07:02:40,139 - #28 ,
INFO  07:02:40,139 - #9 0
INFO  07:02:40,139 - #30 )
INFO  07:02:40,139 - #30 )
INFO  07:02:40,139 - #27 ;
INFO  07:02:40,139 - #21 }
INFO  07:02:40,139 - #34 while
INFO  07:02:40,140 - #29 (
INFO  07:02:40,140 - #8 i
INFO  07:02:40,140 - #40 <
INFO  07:02:40,140 - #9 5
INFO  07:02:40,140 - #30 )
INFO  07:02:40,140 - #27 ;
INFO  07:02:40,140 - #3 print
INFO  07:02:40,140 - #29 (
INFO  07:02:40,140 - #8 c
INFO  07:02:40,140 - #30 )
INFO  07:02:40,140 - #27 ;
INFO  07:02:40,140 - #21 }
INFO  07:02:40,140 - #21 }
