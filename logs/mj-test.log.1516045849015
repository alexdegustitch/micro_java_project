INFO  20:48:06,454 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatDX46\workspace\MJCompiler\test\program.mj
INFO  20:48:06,462 - #33 program
INFO  20:48:06,463 - #1 Program
INFO  20:48:06,463 - #34 const
INFO  20:48:06,463 - #1 int
INFO  20:48:06,463 - #1 c
INFO  20:48:06,463 - #7 =
INFO  20:48:06,463 - #2 10
INFO  20:48:06,463 - #6 ;
INFO  20:48:06,463 - #34 const
INFO  20:48:06,463 - #1 int
INFO  20:48:06,463 - #1 d
INFO  20:48:06,463 - #7 =
INFO  20:48:06,464 - #2 99
INFO  20:48:06,464 - #14 ,
INFO  20:48:06,464 - #1 eps
INFO  20:48:06,464 - #7 =
INFO  20:48:06,464 - #2 2
INFO  20:48:06,464 - #6 ;
INFO  20:48:06,464 - #1 int
INFO  20:48:06,464 - #1 e
INFO  20:48:06,465 - #6 ;
INFO  20:48:06,465 - #29 {
INFO  20:48:06,465 - #35 void
INFO  20:48:06,465 - #1 test
INFO  20:48:06,465 - #10 (
INFO  20:48:06,465 - #11 )
INFO  20:48:06,465 - #1 int
INFO  20:48:06,465 - #1 a
INFO  20:48:06,465 - #14 ,
INFO  20:48:06,465 - #1 b
INFO  20:48:06,465 - #6 ;
INFO  20:48:06,466 - #1 bool
INFO  20:48:06,466 - #1 cond
INFO  20:48:06,466 - #6 ;
INFO  20:48:06,466 - #29 {
INFO  20:48:06,466 - #1 a
INFO  20:48:06,466 - #7 =
INFO  20:48:06,466 - #2 3
INFO  20:48:06,466 - #6 ;
INFO  20:48:06,466 - #1 b
INFO  20:48:06,466 - #7 =
INFO  20:48:06,466 - #2 5
INFO  20:48:06,467 - #6 ;
INFO  20:48:06,467 - #1 cond
INFO  20:48:06,467 - #7 =
INFO  20:48:06,467 - #4 true
INFO  20:48:06,467 - #6 ;
INFO  20:48:06,467 - #23 if
INFO  20:48:06,467 - #10 (
INFO  20:48:06,468 - #2 2
INFO  20:48:06,468 - #18 *
INFO  20:48:06,468 - #10 (
INFO  20:48:06,468 - #1 a
INFO  20:48:06,468 - #17 -
INFO  20:48:06,468 - #1 b
INFO  20:48:06,468 - #17 -
INFO  20:48:06,468 - #2 1
INFO  20:48:06,468 - #11 )
INFO  20:48:06,468 - #17 -
INFO  20:48:06,471 - #2 14
INFO  20:48:06,471 - #40 >
INFO  20:48:06,471 - #2 0
INFO  20:48:06,471 - #31 ||
INFO  20:48:06,471 - #1 cond
INFO  20:48:06,471 - #11 )
INFO  20:48:06,471 - #13 print
INFO  20:48:06,471 - #10 (
INFO  20:48:06,472 - #1 a
INFO  20:48:06,472 - #16 +
INFO  20:48:06,472 - #1 b
INFO  20:48:06,472 - #11 )
INFO  20:48:06,472 - #6 ;
INFO  20:48:06,472 - #30 }
INFO  20:48:06,472 - #1 int
INFO  20:48:06,473 - #1 max
INFO  20:48:06,473 - #10 (
INFO  20:48:06,473 - #1 int
INFO  20:48:06,473 - #1 a
INFO  20:48:06,473 - #14 ,
INFO  20:48:06,473 - #1 int
INFO  20:48:06,473 - #1 b
INFO  20:48:06,473 - #11 )
INFO  20:48:06,473 - #1 int
INFO  20:48:06,473 - #1 x
INFO  20:48:06,476 - #6 ;
INFO  20:48:06,476 - #29 {
INFO  20:48:06,476 - #23 if
INFO  20:48:06,476 - #10 (
INFO  20:48:06,476 - #1 a
INFO  20:48:06,476 - #40 >
INFO  20:48:06,476 - #1 b
INFO  20:48:06,476 - #11 )
INFO  20:48:06,476 - #29 {
INFO  20:48:06,476 - #36 return
INFO  20:48:06,476 - #1 a
INFO  20:48:06,476 - #6 ;
INFO  20:48:06,477 - #30 }
INFO  20:48:06,477 - #24 else
INFO  20:48:06,477 - #36 return
INFO  20:48:06,477 - #1 b
INFO  20:48:06,478 - #6 ;
INFO  20:48:06,478 - #30 }
INFO  20:48:06,478 - #1 int
INFO  20:48:06,478 - #1 min
INFO  20:48:06,478 - #10 (
INFO  20:48:06,478 - #1 int
INFO  20:48:06,478 - #1 a
INFO  20:48:06,478 - #14 ,
INFO  20:48:06,478 - #1 int
INFO  20:48:06,478 - #1 b
INFO  20:48:06,478 - #11 )
INFO  20:48:06,478 - #29 {
INFO  20:48:06,479 - #23 if
INFO  20:48:06,479 - #10 (
INFO  20:48:06,479 - #1 a
INFO  20:48:06,479 - #39 <
INFO  20:48:06,479 - #1 b
INFO  20:48:06,479 - #11 )
INFO  20:48:06,479 - #29 {
INFO  20:48:06,479 - #36 return
INFO  20:48:06,479 - #1 a
INFO  20:48:06,479 - #6 ;
INFO  20:48:06,479 - #30 }
INFO  20:48:06,480 - #24 else
INFO  20:48:06,480 - #29 {
INFO  20:48:06,480 - #36 return
INFO  20:48:06,480 - #1 b
INFO  20:48:06,480 - #6 ;
INFO  20:48:06,480 - #30 }
INFO  20:48:06,480 - #30 }
INFO  20:48:06,480 - #35 void
INFO  20:48:06,480 - #1 obrada
INFO  20:48:06,480 - #10 (
INFO  20:48:06,480 - #1 int
INFO  20:48:06,480 - #1 a
INFO  20:48:06,480 - #21 [
INFO  20:48:06,480 - #22 ]
INFO  20:48:06,480 - #14 ,
INFO  20:48:06,481 - #1 int
INFO  20:48:06,481 - #1 length
INFO  20:48:06,481 - #11 )
INFO  20:48:06,481 - #1 int
INFO  20:48:06,481 - #1 i
INFO  20:48:06,481 - #6 ;
INFO  20:48:06,481 - #29 {
INFO  20:48:06,481 - #1 i
INFO  20:48:06,481 - #7 =
INFO  20:48:06,481 - #2 0
INFO  20:48:06,481 - #6 ;
INFO  20:48:06,481 - #25 do
INFO  20:48:06,481 - #29 {
INFO  20:48:06,481 - #23 if
INFO  20:48:06,482 - #10 (
INFO  20:48:06,482 - #1 a
INFO  20:48:06,482 - #21 [
INFO  20:48:06,482 - #1 i
INFO  20:48:06,482 - #22 ]
INFO  20:48:06,482 - #20 %
INFO  20:48:06,482 - #2 3
INFO  20:48:06,482 - #37 ==
INFO  20:48:06,482 - #2 0
INFO  20:48:06,482 - #11 )
INFO  20:48:06,482 - #13 print
INFO  20:48:06,482 - #10 (
INFO  20:48:06,482 - #1 a
INFO  20:48:06,483 - #21 [
INFO  20:48:06,483 - #1 i
INFO  20:48:06,483 - #22 ]
INFO  20:48:06,483 - #11 )
INFO  20:48:06,483 - #6 ;
INFO  20:48:06,483 - #24 else
INFO  20:48:06,483 - #13 print
INFO  20:48:06,483 - #10 (
INFO  20:48:06,483 - #1 max
INFO  20:48:06,483 - #10 (
INFO  20:48:06,483 - #1 a
INFO  20:48:06,483 - #21 [
INFO  20:48:06,483 - #1 i
INFO  20:48:06,483 - #22 ]
INFO  20:48:06,483 - #14 ,
INFO  20:48:06,483 - #2 0
INFO  20:48:06,484 - #11 )
INFO  20:48:06,484 - #11 )
INFO  20:48:06,484 - #6 ;
INFO  20:48:06,484 - #1 i
INFO  20:48:06,484 - #8 ++
INFO  20:48:06,484 - #6 ;
INFO  20:48:06,484 - #30 }
INFO  20:48:06,484 - #26 while
INFO  20:48:06,484 - #10 (
INFO  20:48:06,484 - #1 i
INFO  20:48:06,484 - #39 <
INFO  20:48:06,484 - #1 length
INFO  20:48:06,484 - #11 )
INFO  20:48:06,484 - #6 ;
INFO  20:48:06,484 - #30 }
INFO  20:48:06,484 - #35 void
INFO  20:48:06,485 - #1 main
INFO  20:48:06,485 - #10 (
INFO  20:48:06,485 - #11 )
INFO  20:48:06,485 - #1 int
INFO  20:48:06,485 - #1 a
INFO  20:48:06,485 - #21 [
INFO  20:48:06,485 - #22 ]
INFO  20:48:06,485 - #14 ,
INFO  20:48:06,485 - #1 length
INFO  20:48:06,485 - #6 ;
INFO  20:48:06,485 - #1 int
INFO  20:48:06,485 - #1 i
INFO  20:48:06,485 - #6 ;
INFO  20:48:06,485 - #29 {
INFO  20:48:06,485 - #1 length
INFO  20:48:06,485 - #7 =
INFO  20:48:06,487 - #1 min
INFO  20:48:06,487 - #10 (
INFO  20:48:06,487 - #1 c
INFO  20:48:06,487 - #14 ,
INFO  20:48:06,487 - #2 103
INFO  20:48:06,488 - #11 )
INFO  20:48:06,488 - #6 ;
INFO  20:48:06,488 - #1 test
INFO  20:48:06,488 - #10 (
INFO  20:48:06,488 - #11 )
INFO  20:48:06,488 - #6 ;
INFO  20:48:06,488 - #23 if
INFO  20:48:06,488 - #10 (
INFO  20:48:06,488 - #1 length
INFO  20:48:06,488 - #40 >
INFO  20:48:06,488 - #2 0
INFO  20:48:06,489 - #32 &&
INFO  20:48:06,489 - #1 length
INFO  20:48:06,489 - #41 <=
INFO  20:48:06,489 - #1 d
INFO  20:48:06,489 - #11 )
INFO  20:48:06,489 - #1 a
INFO  20:48:06,489 - #7 =
INFO  20:48:06,489 - #15 new
INFO  20:48:06,489 - #1 int
INFO  20:48:06,490 - #21 [
INFO  20:48:06,490 - #1 length
INFO  20:48:06,490 - #22 ]
INFO  20:48:06,490 - #6 ;
INFO  20:48:06,490 - #24 else
INFO  20:48:06,490 - #1 a
INFO  20:48:06,490 - #7 =
INFO  20:48:06,490 - #15 new
INFO  20:48:06,490 - #1 int
INFO  20:48:06,490 - #21 [
INFO  20:48:06,490 - #2 5
INFO  20:48:06,490 - #22 ]
INFO  20:48:06,490 - #6 ;
INFO  20:48:06,490 - #25 do
INFO  20:48:06,490 - #29 {
INFO  20:48:06,490 - #12 read
INFO  20:48:06,490 - #10 (
INFO  20:48:06,491 - #1 a
INFO  20:48:06,491 - #21 [
INFO  20:48:06,491 - #1 i
INFO  20:48:06,491 - #22 ]
INFO  20:48:06,491 - #11 )
INFO  20:48:06,491 - #6 ;
INFO  20:48:06,491 - #30 }
INFO  20:48:06,491 - #26 while
INFO  20:48:06,492 - #10 (
INFO  20:48:06,492 - #1 i
INFO  20:48:06,492 - #41 <=
INFO  20:48:06,492 - #1 length
INFO  20:48:06,492 - #17 -
INFO  20:48:06,492 - #2 1
INFO  20:48:06,492 - #11 )
INFO  20:48:06,492 - #6 ;
INFO  20:48:06,492 - #1 obrada
INFO  20:48:06,492 - #10 (
INFO  20:48:06,492 - #1 a
INFO  20:48:06,492 - #14 ,
INFO  20:48:06,492 - #1 length
INFO  20:48:06,493 - #11 )
INFO  20:48:06,493 - #6 ;
INFO  20:48:06,493 - #13 print
INFO  20:48:06,493 - #10 (
INFO  20:48:06,493 - #1 d
INFO  20:48:06,493 - #11 )
INFO  20:48:06,493 - #6 ;
INFO  20:48:06,493 - #30 }
INFO  20:48:06,493 - #30 }
