INFO  03:05:48,697 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatFX_Argon\workspace\MJCompiler\test\program.mj
INFO  03:05:48,703 - #33 program
INFO  03:05:48,704 - #1 Program
INFO  03:05:48,704 - #34 const
INFO  03:05:48,704 - #1 int
INFO  03:05:48,704 - #1 c
INFO  03:05:48,704 - #7 =
INFO  03:05:48,704 - #2 10
INFO  03:05:48,704 - #6 ;
INFO  03:05:48,705 - #34 const
INFO  03:05:48,705 - #1 int
INFO  03:05:48,705 - #1 d
INFO  03:05:48,705 - #7 =
INFO  03:05:48,705 - #2 99
INFO  03:05:48,705 - #14 ,
INFO  03:05:48,705 - #1 eps
INFO  03:05:48,705 - #7 =
INFO  03:05:48,706 - #2 2
INFO  03:05:48,706 - #6 ;
INFO  03:05:48,706 - #1 int
INFO  03:05:48,706 - #1 e
INFO  03:05:48,706 - #6 ;
INFO  03:05:48,706 - #29 {
INFO  03:05:48,706 - #35 void
INFO  03:05:48,706 - #1 test
INFO  03:05:48,706 - #10 (
INFO  03:05:48,706 - #11 )
INFO  03:05:48,706 - #1 int
INFO  03:05:48,706 - #1 a
INFO  03:05:48,707 - #14 ,
INFO  03:05:48,707 - #1 b
INFO  03:05:48,707 - #6 ;
INFO  03:05:48,707 - #1 bool
INFO  03:05:48,707 - #1 cond
INFO  03:05:48,707 - #6 ;
INFO  03:05:48,707 - #29 {
INFO  03:05:48,707 - #1 a
INFO  03:05:48,707 - #7 =
INFO  03:05:48,707 - #2 3
INFO  03:05:48,707 - #6 ;
INFO  03:05:48,707 - #1 b
INFO  03:05:48,707 - #7 =
INFO  03:05:48,707 - #2 5
INFO  03:05:48,708 - #6 ;
INFO  03:05:48,708 - #1 cond
INFO  03:05:48,708 - #7 =
INFO  03:05:48,708 - #4 true
INFO  03:05:48,708 - #6 ;
INFO  03:05:48,708 - #23 if
INFO  03:05:48,708 - #10 (
INFO  03:05:48,708 - #2 2
INFO  03:05:48,708 - #18 *
INFO  03:05:48,708 - #10 (
INFO  03:05:48,708 - #1 a
INFO  03:05:48,709 - #17 -
INFO  03:05:48,709 - #1 b
INFO  03:05:48,709 - #17 -
INFO  03:05:48,709 - #2 1
INFO  03:05:48,709 - #11 )
INFO  03:05:48,709 - #17 -
INFO  03:05:48,711 - #2 14
INFO  03:05:48,711 - #40 >
INFO  03:05:48,711 - #2 0
INFO  03:05:48,711 - #31 ||
INFO  03:05:48,711 - #1 cond
INFO  03:05:48,711 - #11 )
INFO  03:05:48,711 - #13 print
INFO  03:05:48,711 - #10 (
INFO  03:05:48,711 - #1 a
INFO  03:05:48,711 - #16 +
INFO  03:05:48,711 - #1 b
INFO  03:05:48,711 - #11 )
INFO  03:05:48,711 - #6 ;
INFO  03:05:48,711 - #30 }
INFO  03:05:48,712 - #1 int
INFO  03:05:48,712 - #1 max
INFO  03:05:48,712 - #10 (
INFO  03:05:48,712 - #1 int
INFO  03:05:48,712 - #1 a
INFO  03:05:48,712 - #14 ,
INFO  03:05:48,712 - #1 int
INFO  03:05:48,712 - #1 b
INFO  03:05:48,712 - #11 )
INFO  03:05:48,712 - #1 int
INFO  03:05:48,712 - #1 x
INFO  03:05:48,712 - #6 ;
INFO  03:05:48,712 - #29 {
INFO  03:05:48,712 - #23 if
INFO  03:05:48,713 - #10 (
INFO  03:05:48,713 - #1 a
INFO  03:05:48,713 - #40 >
INFO  03:05:48,713 - #1 b
INFO  03:05:48,713 - #11 )
INFO  03:05:48,713 - #29 {
INFO  03:05:48,713 - #36 return
INFO  03:05:48,713 - #1 a
INFO  03:05:48,713 - #6 ;
INFO  03:05:48,713 - #30 }
INFO  03:05:48,713 - #24 else
INFO  03:05:48,713 - #36 return
INFO  03:05:48,713 - #1 b
INFO  03:05:48,713 - #6 ;
INFO  03:05:48,714 - #30 }
INFO  03:05:48,714 - #1 int
INFO  03:05:48,714 - #1 min
INFO  03:05:48,714 - #10 (
INFO  03:05:48,714 - #1 int
INFO  03:05:48,714 - #1 a
INFO  03:05:48,714 - #14 ,
INFO  03:05:48,714 - #1 int
INFO  03:05:48,714 - #1 b
INFO  03:05:48,714 - #11 )
INFO  03:05:48,714 - #29 {
INFO  03:05:48,714 - #23 if
INFO  03:05:48,714 - #10 (
INFO  03:05:48,714 - #1 a
INFO  03:05:48,715 - #39 <
INFO  03:05:48,715 - #1 b
INFO  03:05:48,715 - #11 )
INFO  03:05:48,715 - #29 {
INFO  03:05:48,715 - #36 return
INFO  03:05:48,715 - #1 a
INFO  03:05:48,715 - #6 ;
INFO  03:05:48,715 - #30 }
INFO  03:05:48,715 - #24 else
INFO  03:05:48,715 - #29 {
INFO  03:05:48,716 - #36 return
INFO  03:05:48,716 - #1 b
INFO  03:05:48,716 - #6 ;
INFO  03:05:48,716 - #30 }
INFO  03:05:48,716 - #30 }
INFO  03:05:48,716 - #35 void
INFO  03:05:48,716 - #1 obrada
INFO  03:05:48,716 - #10 (
INFO  03:05:48,716 - #1 int
INFO  03:05:48,716 - #1 a
INFO  03:05:48,717 - #21 [
INFO  03:05:48,717 - #22 ]
INFO  03:05:48,717 - #14 ,
INFO  03:05:48,717 - #1 int
INFO  03:05:48,717 - #1 length
INFO  03:05:48,717 - #11 )
INFO  03:05:48,717 - #1 int
INFO  03:05:48,717 - #1 i
INFO  03:05:48,717 - #6 ;
INFO  03:05:48,717 - #29 {
INFO  03:05:48,717 - #1 i
INFO  03:05:48,718 - #7 =
INFO  03:05:48,718 - #2 0
INFO  03:05:48,718 - #6 ;
INFO  03:05:48,718 - #25 do
INFO  03:05:48,718 - #29 {
INFO  03:05:48,718 - #23 if
INFO  03:05:48,718 - #10 (
INFO  03:05:48,718 - #1 a
INFO  03:05:48,718 - #21 [
INFO  03:05:48,718 - #1 i
INFO  03:05:48,718 - #22 ]
INFO  03:05:48,718 - #20 %
INFO  03:05:48,718 - #2 3
INFO  03:05:48,718 - #37 ==
INFO  03:05:48,718 - #2 0
INFO  03:05:48,718 - #11 )
INFO  03:05:48,719 - #13 print
INFO  03:05:48,719 - #10 (
INFO  03:05:48,719 - #1 a
INFO  03:05:48,719 - #21 [
INFO  03:05:48,719 - #1 i
INFO  03:05:48,719 - #22 ]
INFO  03:05:48,719 - #11 )
INFO  03:05:48,719 - #6 ;
INFO  03:05:48,719 - #24 else
INFO  03:05:48,719 - #13 print
INFO  03:05:48,719 - #10 (
INFO  03:05:48,719 - #1 max
INFO  03:05:48,719 - #10 (
INFO  03:05:48,719 - #1 a
INFO  03:05:48,719 - #21 [
INFO  03:05:48,719 - #1 i
INFO  03:05:48,720 - #22 ]
INFO  03:05:48,720 - #14 ,
INFO  03:05:48,720 - #2 0
INFO  03:05:48,720 - #11 )
INFO  03:05:48,720 - #11 )
INFO  03:05:48,720 - #6 ;
INFO  03:05:48,720 - #1 i
INFO  03:05:48,720 - #8 ++
INFO  03:05:48,720 - #6 ;
INFO  03:05:48,721 - #30 }
INFO  03:05:48,721 - #26 while
INFO  03:05:48,721 - #10 (
INFO  03:05:48,721 - #1 i
INFO  03:05:48,721 - #39 <
INFO  03:05:48,721 - #1 length
INFO  03:05:48,721 - #11 )
INFO  03:05:48,722 - #6 ;
INFO  03:05:48,722 - #30 }
INFO  03:05:48,722 - #35 void
INFO  03:05:48,722 - #1 main
INFO  03:05:48,722 - #10 (
INFO  03:05:48,722 - #11 )
INFO  03:05:48,722 - #1 int
INFO  03:05:48,722 - #1 a
INFO  03:05:48,722 - #21 [
INFO  03:05:48,722 - #22 ]
INFO  03:05:48,722 - #14 ,
INFO  03:05:48,722 - #1 length
INFO  03:05:48,722 - #6 ;
INFO  03:05:48,722 - #1 int
INFO  03:05:48,722 - #1 i
INFO  03:05:48,722 - #6 ;
INFO  03:05:48,722 - #29 {
INFO  03:05:48,722 - #1 length
INFO  03:05:48,723 - #7 =
INFO  03:05:48,723 - #1 min
INFO  03:05:48,723 - #10 (
INFO  03:05:48,723 - #1 c
INFO  03:05:48,723 - #14 ,
INFO  03:05:48,723 - #2 103
INFO  03:05:48,723 - #11 )
INFO  03:05:48,723 - #6 ;
INFO  03:05:48,723 - #1 test
INFO  03:05:48,723 - #10 (
INFO  03:05:48,723 - #11 )
INFO  03:05:48,723 - #6 ;
INFO  03:05:48,723 - #23 if
INFO  03:05:48,723 - #10 (
INFO  03:05:48,723 - #1 length
INFO  03:05:48,723 - #40 >
INFO  03:05:48,723 - #2 0
INFO  03:05:48,723 - #32 &&
INFO  03:05:48,723 - #1 length
INFO  03:05:48,723 - #41 <=
INFO  03:05:48,723 - #1 d
INFO  03:05:48,724 - #11 )
INFO  03:05:48,724 - #1 a
INFO  03:05:48,724 - #7 =
INFO  03:05:48,724 - #15 new
INFO  03:05:48,724 - #1 int
INFO  03:05:48,724 - #21 [
INFO  03:05:48,724 - #1 length
INFO  03:05:48,724 - #22 ]
INFO  03:05:48,724 - #6 ;
INFO  03:05:48,724 - #24 else
INFO  03:05:48,724 - #1 a
INFO  03:05:48,724 - #7 =
INFO  03:05:48,724 - #15 new
INFO  03:05:48,724 - #1 int
INFO  03:05:48,724 - #21 [
INFO  03:05:48,724 - #2 5
INFO  03:05:48,724 - #22 ]
INFO  03:05:48,724 - #6 ;
INFO  03:05:48,724 - #25 do
INFO  03:05:48,724 - #29 {
INFO  03:05:48,724 - #12 read
INFO  03:05:48,724 - #10 (
INFO  03:05:48,725 - #1 a
INFO  03:05:48,725 - #21 [
INFO  03:05:48,725 - #1 i
INFO  03:05:48,725 - #22 ]
INFO  03:05:48,725 - #11 )
INFO  03:05:48,725 - #6 ;
INFO  03:05:48,725 - #30 }
INFO  03:05:48,725 - #26 while
INFO  03:05:48,725 - #10 (
INFO  03:05:48,725 - #1 i
INFO  03:05:48,725 - #41 <=
INFO  03:05:48,725 - #1 length
INFO  03:05:48,725 - #17 -
INFO  03:05:48,725 - #2 1
INFO  03:05:48,726 - #11 )
INFO  03:05:48,726 - #6 ;
INFO  03:05:48,726 - #1 obrada
INFO  03:05:48,726 - #10 (
INFO  03:05:48,726 - #1 a
INFO  03:05:48,726 - #14 ,
INFO  03:05:48,726 - #1 length
INFO  03:05:48,726 - #11 )
INFO  03:05:48,726 - #6 ;
INFO  03:05:48,726 - #13 print
INFO  03:05:48,726 - #10 (
INFO  03:05:48,726 - #1 d
INFO  03:05:48,726 - #11 )
INFO  03:05:48,726 - #6 ;
INFO  03:05:48,726 - #30 }
INFO  03:05:48,726 - #30 }
