INFO  02:47:37,948 - #2 program
INFO  02:47:37,951 - #8 Program
INFO  02:47:37,951 - #20 {
INFO  02:47:37,951 - #5 const
INFO  02:47:37,951 - #8 int
INFO  02:47:37,951 - #8 c
INFO  02:47:37,951 - #24 =
INFO  02:47:37,951 - #9 10
INFO  02:47:37,952 - #27 ;
INFO  02:47:37,952 - #8 int
ERROR 02:47:37,952 - 
Sintaksna greska na liniji -1
ERROR 02:47:37,952 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  02:48:39,974 - #2 program
INFO  02:48:39,975 - #8 Program
INFO  02:48:39,975 - #20 {
INFO  02:48:39,976 - #5 const
INFO  02:48:39,976 - #8 int
INFO  02:48:39,976 - #8 c
INFO  02:48:39,976 - #24 =
INFO  02:48:39,977 - #9 10
INFO  02:48:39,977 - #27 ;
INFO  02:48:39,977 - #8 int
ERROR 02:48:39,977 - 
Sintaksna greska na liniji -1
ERROR 02:48:39,977 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  02:57:16,632 - #2 program
INFO  02:57:16,632 - #8 Program
INFO  02:57:16,632 - #20 {
INFO  02:57:16,633 - #5 const
INFO  02:57:16,633 - #8 int
INFO  02:57:16,633 - #8 c
INFO  02:57:16,633 - #24 =
INFO  02:57:16,633 - #9 10
INFO  02:57:16,633 - #27 ;
INFO  02:57:16,633 - #8 int
INFO  02:57:16,633 - #8 max
INFO  02:57:16,633 - #29 (
ERROR 02:57:16,634 - 
Sintaksna greska na liniji -1
ERROR 02:57:16,634 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  02:58:23,295 - #2 program
INFO  02:58:23,295 - #8 Program
INFO  02:58:23,295 - #20 {
INFO  02:58:23,296 - #5 const
INFO  02:58:23,296 - #8 int
INFO  02:58:23,297 - #8 c
INFO  02:58:23,297 - #24 =
INFO  02:58:23,297 - #9 10
INFO  02:58:23,297 - #27 ;
INFO  02:58:23,297 - #8 int
INFO  02:58:23,297 - #8 max
INFO  02:58:23,297 - #29 (
ERROR 02:58:23,297 - 
Sintaksna greska na liniji -1
ERROR 02:58:23,297 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  03:18:22,483 - #2 program
INFO  03:18:22,484 - #8 Program
INFO  03:18:22,484 - #20 {
INFO  03:18:22,484 - #5 const
INFO  03:18:22,485 - #8 int
INFO  03:18:22,485 - #8 c
INFO  03:18:22,485 - #24 =
INFO  03:18:22,485 - #9 10
INFO  03:18:22,485 - #27 ;
INFO  03:18:22,485 - #8 int
INFO  03:18:22,485 - #8 max
INFO  03:18:22,485 - #29 (
ERROR 03:18:22,485 - 
Sintaksna greska na liniji -1
ERROR 03:18:22,486 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  04:10:22,988 - #2 program
INFO  04:10:22,988 - #8 Program
INFO  04:10:22,988 - #20 {
INFO  04:10:22,988 - #5 const
INFO  04:10:22,988 - #8 int
INFO  04:10:22,989 - #8 c
INFO  04:10:22,989 - #24 =
INFO  04:10:22,989 - #9 10
INFO  04:10:22,989 - #27 ;
INFO  04:10:22,989 - #8 int
INFO  04:10:22,989 - #8 max
INFO  04:10:22,989 - #29 (
ERROR 04:10:22,989 - 
Sintaksna greska na liniji -1
ERROR 04:10:22,989 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  04:10:26,177 - #2 program
INFO  04:10:26,177 - #8 Program
INFO  04:10:26,177 - #20 {
INFO  04:10:26,178 - #5 const
INFO  04:10:26,178 - #8 int
INFO  04:10:26,178 - #8 c
INFO  04:10:26,178 - #24 =
INFO  04:10:26,178 - #9 10
INFO  04:10:26,178 - #27 ;
INFO  04:10:26,178 - #8 int
INFO  04:10:26,178 - #8 max
INFO  04:10:26,178 - #29 (
ERROR 04:10:26,178 - 
Sintaksna greska na liniji -1
ERROR 04:10:26,179 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  04:10:40,566 - #2 program
INFO  04:10:40,567 - #8 Program
INFO  04:10:40,567 - #20 {
INFO  04:10:40,567 - #5 const
INFO  04:10:40,567 - #8 int
INFO  04:10:40,567 - #8 c
ERROR 04:10:40,567 - 
Sintaksna greska na liniji -1
ERROR 04:10:40,568 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  04:11:38,962 - #2 program
INFO  04:11:38,963 - #8 Program
INFO  04:11:38,963 - #20 {
INFO  04:11:38,963 - #5 const
INFO  04:11:38,963 - #8 int
INFO  04:11:38,963 - #8 c
ERROR 04:11:38,964 - 
Sintaksna greska na liniji -1
ERROR 04:11:38,964 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  04:11:46,889 - #2 program
INFO  04:11:46,889 - #8 Program
INFO  04:11:46,889 - #20 {
INFO  04:11:46,889 - #5 const
INFO  04:11:46,890 - #8 int
INFO  04:11:46,890 - #8 c
INFO  04:11:46,890 - #24 =
INFO  04:11:46,890 - #9 10
INFO  04:11:46,890 - #27 ;
INFO  04:11:46,890 - #8 int
INFO  04:11:46,890 - #8 max
INFO  04:11:46,891 - #29 (
INFO  04:11:46,891 - #8 int
INFO  04:11:46,891 - #8 a
INFO  04:11:46,891 - #28 ,
INFO  04:11:46,891 - #8 int
INFO  04:11:46,891 - #8 b
INFO  04:11:46,891 - #30 )
INFO  04:11:46,891 - #20 {
INFO  04:11:46,891 - #31 if
ERROR 04:11:46,892 - 
Sintaksna greska na liniji -1
ERROR 04:11:46,892 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  04:12:42,334 - #2 program
INFO  04:12:42,335 - #8 Program
INFO  04:12:42,335 - #20 {
INFO  04:12:42,335 - #5 const
INFO  04:12:42,335 - #8 int
INFO  04:12:42,335 - #8 c
INFO  04:12:42,336 - #24 =
INFO  04:12:42,336 - #9 10
INFO  04:12:42,336 - #27 ;
INFO  04:12:42,336 - #8 int
INFO  04:12:42,336 - #8 max
INFO  04:12:42,336 - #29 (
INFO  04:12:42,336 - #8 int
INFO  04:12:42,336 - #8 a
INFO  04:12:42,337 - #28 ,
INFO  04:12:42,337 - #8 int
INFO  04:12:42,337 - #8 b
INFO  04:12:42,337 - #30 )
INFO  04:12:42,337 - #20 {
INFO  04:12:42,337 - #31 if
ERROR 04:12:42,337 - 
Sintaksna greska na liniji -1
ERROR 04:12:42,337 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  04:16:24,933 - #2 program
INFO  04:16:24,934 - #8 Program
INFO  04:16:24,934 - #20 {
INFO  04:16:24,934 - #5 const
INFO  04:16:24,934 - #8 int
INFO  04:16:24,934 - #8 c
INFO  04:16:24,934 - #24 =
INFO  04:16:24,935 - #9 10
INFO  04:16:24,935 - #27 ;
INFO  04:16:24,935 - #8 int
INFO  04:16:24,935 - #8 max
INFO  04:16:24,935 - #29 (
INFO  04:16:24,935 - #8 int
INFO  04:16:24,935 - #8 a
INFO  04:16:24,935 - #28 ,
INFO  04:16:24,935 - #8 int
INFO  04:16:24,935 - #8 b
INFO  04:16:24,936 - #30 )
INFO  04:16:24,936 - #20 {
INFO  04:16:24,936 - #31 if
ERROR 04:16:24,936 - 
Sintaksna greska na liniji -1
ERROR 04:16:24,936 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  04:20:53,471 - #2 program
INFO  04:20:53,471 - #8 Program
INFO  04:20:53,471 - #20 {
INFO  04:20:53,472 - #5 const
INFO  04:20:53,472 - #8 int
INFO  04:20:53,472 - #8 c
INFO  04:20:53,472 - #24 =
INFO  04:20:53,472 - #9 10
INFO  04:20:53,472 - #27 ;
INFO  04:20:53,472 - #8 int
INFO  04:20:53,472 - #8 max
INFO  04:20:53,473 - #29 (
INFO  04:20:53,473 - #8 int
INFO  04:20:53,473 - #8 a
INFO  04:20:53,473 - #28 ,
INFO  04:20:53,473 - #8 int
INFO  04:20:53,473 - #8 b
INFO  04:20:53,473 - #30 )
INFO  04:20:53,473 - #20 {
INFO  04:20:53,473 - #31 if
ERROR 04:20:53,473 - 
Sintaksna greska na liniji -1
ERROR 04:20:53,474 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:14:52,658 - #2 program
INFO  05:14:52,658 - #8 Program
INFO  05:14:52,658 - #20 {
INFO  05:14:52,659 - #5 const
INFO  05:14:52,659 - #8 int
INFO  05:14:52,659 - #8 c
INFO  05:14:52,659 - #24 =
INFO  05:14:52,659 - #9 10
INFO  05:14:52,659 - #27 ;
INFO  05:14:52,659 - #8 int
INFO  05:14:52,660 - #8 max
INFO  05:14:52,660 - #29 (
INFO  05:14:52,660 - #8 int
INFO  05:14:52,660 - #8 a
INFO  05:14:52,660 - #28 ,
INFO  05:14:52,660 - #8 int
INFO  05:14:52,660 - #8 b
INFO  05:14:52,660 - #30 )
INFO  05:14:52,661 - #20 {
INFO  05:14:52,661 - #31 if
ERROR 05:14:52,661 - 
Sintaksna greska na liniji -1
ERROR 05:14:52,661 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:17:24,247 - #2 program
INFO  05:17:24,248 - #8 Program
INFO  05:17:24,248 - #20 {
INFO  05:17:24,248 - #5 const
INFO  05:17:24,249 - #8 int
INFO  05:17:24,249 - #8 c
INFO  05:17:24,249 - #24 =
INFO  05:17:24,249 - #9 10
INFO  05:17:24,249 - #27 ;
INFO  05:17:24,249 - #6 void
INFO  05:17:24,249 - #8 test
INFO  05:17:24,250 - #29 (
INFO  05:17:24,250 - #30 )
INFO  05:17:24,250 - #20 {
INFO  05:17:24,250 - #8 int
INFO  05:17:24,250 - #8 a
INFO  05:17:24,250 - #27 ;
ERROR 05:17:24,250 - 
Sintaksna greska na liniji -1
ERROR 05:17:24,251 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:26:16,660 - #2 program
INFO  05:26:16,660 - #8 Program
INFO  05:26:16,661 - #20 {
INFO  05:26:16,661 - #5 const
INFO  05:26:16,661 - #8 int
INFO  05:26:16,661 - #8 c
INFO  05:26:16,662 - #24 =
INFO  05:26:16,662 - #9 10
INFO  05:26:16,662 - #27 ;
INFO  05:26:16,662 - #5 const
INFO  05:26:16,662 - #8 int
INFO  05:26:16,662 - #8 d
INFO  05:26:16,662 - #24 =
INFO  05:26:16,663 - #9 13
INFO  05:26:16,663 - #27 ;
INFO  05:26:16,663 - #6 void
INFO  05:26:16,663 - #8 test
INFO  05:26:16,663 - #29 (
INFO  05:26:16,664 - #30 )
INFO  05:26:16,664 - #20 {
INFO  05:26:16,664 - #8 int
INFO  05:26:16,664 - #8 a
INFO  05:26:16,664 - #27 ;
ERROR 05:26:16,664 - 
Sintaksna greska na liniji -1
ERROR 05:26:16,664 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:29:13,983 - #2 program
INFO  05:29:13,984 - #8 Program
INFO  05:29:13,984 - #20 {
INFO  05:29:13,984 - #5 const
INFO  05:29:13,984 - #8 int
INFO  05:29:13,985 - #8 c
INFO  05:29:13,985 - #24 =
INFO  05:29:13,985 - #9 10
INFO  05:29:13,985 - #27 ;
INFO  05:29:13,985 - #5 const
INFO  05:29:13,985 - #8 int
INFO  05:29:13,985 - #8 d
INFO  05:29:13,985 - #24 =
INFO  05:29:13,986 - #9 13
INFO  05:29:13,986 - #27 ;
INFO  05:29:13,986 - #6 void
INFO  05:29:13,986 - #8 test
INFO  05:29:13,986 - #29 (
INFO  05:29:13,986 - #30 )
INFO  05:29:13,986 - #20 {
INFO  05:29:13,987 - #8 int
INFO  05:29:13,987 - #8 a
INFO  05:29:13,987 - #27 ;
ERROR 05:29:13,987 - 
Sintaksna greska na liniji -1
ERROR 05:29:13,987 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:30:40,391 - #2 program
INFO  05:30:40,392 - #8 Program
INFO  05:30:40,392 - #20 {
INFO  05:30:40,392 - #5 const
INFO  05:30:40,392 - #8 int
INFO  05:30:40,392 - #8 c
INFO  05:30:40,392 - #24 =
INFO  05:30:40,392 - #9 10
INFO  05:30:40,392 - #27 ;
INFO  05:30:40,393 - #5 const
INFO  05:30:40,393 - #8 int
INFO  05:30:40,393 - #8 d
INFO  05:30:40,393 - #24 =
INFO  05:30:40,393 - #9 13
INFO  05:30:40,393 - #27 ;
INFO  05:30:40,393 - #6 void
INFO  05:30:40,393 - #8 test
INFO  05:30:40,394 - #29 (
INFO  05:30:40,394 - #30 )
INFO  05:30:40,394 - #20 {
INFO  05:30:40,394 - #8 int
INFO  05:30:40,394 - #8 a
INFO  05:30:40,394 - #27 ;
ERROR 05:30:40,394 - 
Sintaksna greska na liniji -1
ERROR 05:30:40,394 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:31:13,952 - #2 program
INFO  05:31:13,953 - #8 Program
INFO  05:31:13,953 - #20 {
INFO  05:31:13,954 - #5 const
INFO  05:31:13,954 - #8 int
INFO  05:31:13,954 - #8 c
INFO  05:31:13,954 - #24 =
INFO  05:31:13,954 - #9 10
INFO  05:31:13,955 - #27 ;
INFO  05:31:13,955 - #5 const
INFO  05:31:13,955 - #8 int
INFO  05:31:13,955 - #8 d
INFO  05:31:13,955 - #24 =
INFO  05:31:13,956 - #9 13
INFO  05:31:13,956 - #27 ;
INFO  05:31:13,956 - #6 void
INFO  05:31:13,956 - #8 test
INFO  05:31:13,957 - #29 (
INFO  05:31:13,957 - #30 )
INFO  05:31:13,957 - #20 {
INFO  05:31:13,957 - #8 int
INFO  05:31:13,957 - #8 a
INFO  05:31:13,957 - #27 ;
ERROR 05:31:13,957 - 
Sintaksna greska na liniji -1
ERROR 05:31:13,958 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:31:52,896 - #2 program
INFO  05:31:52,897 - #8 Program
INFO  05:31:52,897 - #20 {
INFO  05:31:52,897 - #5 const
INFO  05:31:52,897 - #8 int
INFO  05:31:52,897 - #8 c
INFO  05:31:52,898 - #24 =
INFO  05:31:52,898 - #9 10
INFO  05:31:52,898 - #27 ;
INFO  05:31:52,898 - #5 const
INFO  05:31:52,898 - #8 int
INFO  05:31:52,898 - #8 d
INFO  05:31:52,898 - #24 =
INFO  05:31:52,899 - #9 13
INFO  05:31:52,899 - #27 ;
INFO  05:31:52,899 - #6 void
INFO  05:31:52,899 - #8 test
INFO  05:31:52,899 - #29 (
INFO  05:31:52,899 - #30 )
INFO  05:31:52,900 - #20 {
INFO  05:31:52,900 - #8 int
INFO  05:31:52,900 - #8 a
INFO  05:31:52,900 - #27 ;
ERROR 05:31:52,900 - 
Sintaksna greska na liniji -1
ERROR 05:31:52,900 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:33:33,098 - #2 program
INFO  05:33:33,099 - #8 Program
INFO  05:33:33,099 - #20 {
INFO  05:33:33,099 - #5 const
INFO  05:33:33,099 - #8 int
INFO  05:33:33,099 - #8 c
INFO  05:33:33,099 - #24 =
INFO  05:33:33,100 - #9 10
INFO  05:33:33,100 - #27 ;
INFO  05:33:33,100 - #5 const
INFO  05:33:33,100 - #8 int
INFO  05:33:33,100 - #8 d
INFO  05:33:33,100 - #24 =
INFO  05:33:33,100 - #9 13
INFO  05:33:33,100 - #27 ;
INFO  05:33:33,101 - #6 void
INFO  05:33:33,101 - #8 test
INFO  05:33:33,101 - #29 (
INFO  05:33:33,101 - #30 )
INFO  05:33:33,101 - #20 {
INFO  05:33:33,101 - #8 int
INFO  05:33:33,101 - #8 b
INFO  05:33:33,102 - #27 ;
ERROR 05:33:33,102 - 
Sintaksna greska na liniji -1
ERROR 05:33:33,102 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:33:52,727 - #2 program
INFO  05:33:52,727 - #8 Program
INFO  05:33:52,728 - #20 {
INFO  05:33:52,728 - #5 const
INFO  05:33:52,728 - #8 int
INFO  05:33:52,728 - #8 c
INFO  05:33:52,728 - #24 =
INFO  05:33:52,728 - #9 10
INFO  05:33:52,729 - #27 ;
INFO  05:33:52,729 - #5 const
INFO  05:33:52,729 - #8 int
INFO  05:33:52,729 - #8 d
INFO  05:33:52,729 - #24 =
INFO  05:33:52,730 - #9 13
INFO  05:33:52,730 - #27 ;
INFO  05:33:52,730 - #6 void
INFO  05:33:52,730 - #8 test
INFO  05:33:52,730 - #29 (
INFO  05:33:52,730 - #30 )
INFO  05:33:52,730 - #20 {
INFO  05:33:52,730 - #8 int
INFO  05:33:52,730 - #8 a
INFO  05:33:52,731 - #27 ;
ERROR 05:33:52,731 - 
Sintaksna greska na liniji -1
ERROR 05:33:52,731 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:37:36,405 - #2 program
INFO  05:37:36,405 - #8 Program
INFO  05:37:36,405 - #20 {
INFO  05:37:36,405 - #5 const
INFO  05:37:36,405 - #8 int
INFO  05:37:36,406 - #8 c
INFO  05:37:36,406 - #24 =
INFO  05:37:36,406 - #9 10
INFO  05:37:36,406 - #27 ;
INFO  05:37:36,406 - #5 const
INFO  05:37:36,406 - #8 int
INFO  05:37:36,406 - #8 d
INFO  05:37:36,406 - #24 =
INFO  05:37:36,407 - #9 13
INFO  05:37:36,407 - #27 ;
INFO  05:37:36,407 - #6 void
INFO  05:37:36,407 - #8 test
INFO  05:37:36,407 - #29 (
INFO  05:37:36,407 - #30 )
INFO  05:37:36,407 - #20 {
INFO  05:37:36,407 - #8 int
INFO  05:37:36,407 - #8 a
INFO  05:37:36,408 - #27 ;
ERROR 05:37:36,408 - 
Sintaksna greska na liniji -1
ERROR 05:37:36,408 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:39:06,649 - #2 program
INFO  05:39:06,650 - #8 Program
INFO  05:39:06,650 - #20 {
INFO  05:39:06,650 - #5 const
INFO  05:39:06,650 - #8 int
INFO  05:39:06,651 - #8 c
INFO  05:39:06,651 - #24 =
INFO  05:39:06,651 - #9 10
INFO  05:39:06,651 - #27 ;
INFO  05:39:06,651 - #5 const
INFO  05:39:06,651 - #8 int
INFO  05:39:06,652 - #8 d
INFO  05:39:06,652 - #24 =
INFO  05:39:06,652 - #9 13
INFO  05:39:06,652 - #27 ;
INFO  05:39:06,652 - #6 void
INFO  05:39:06,652 - #8 test
INFO  05:39:06,652 - #29 (
INFO  05:39:06,653 - #30 )
INFO  05:39:06,653 - #20 {
INFO  05:39:06,653 - #8 int
INFO  05:39:06,653 - #8 a
INFO  05:39:06,653 - #27 ;
ERROR 05:39:06,653 - 
Sintaksna greska na liniji -1
ERROR 05:39:06,653 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:43:22,748 - #2 program
INFO  05:43:22,749 - #8 Program
INFO  05:43:22,749 - #20 {
INFO  05:43:22,749 - #5 const
INFO  05:43:22,749 - #8 int
INFO  05:43:22,749 - #8 c
INFO  05:43:22,749 - #24 =
INFO  05:43:22,749 - #9 10
INFO  05:43:22,750 - #27 ;
INFO  05:43:22,750 - #5 const
INFO  05:43:22,750 - #8 int
INFO  05:43:22,750 - #8 d
INFO  05:43:22,750 - #24 =
INFO  05:43:22,751 - #9 13
INFO  05:43:22,751 - #27 ;
INFO  05:43:22,751 - #6 void
INFO  05:43:22,751 - #8 test
INFO  05:43:22,751 - #29 (
INFO  05:43:22,751 - #30 )
INFO  05:43:22,751 - #20 {
INFO  05:43:22,751 - #8 int
INFO  05:43:22,751 - #8 a
INFO  05:43:22,752 - #27 ;
INFO  05:43:22,752 - #8 int
INFO  05:43:22,752 - #8 b
INFO  05:43:22,752 - #27 ;
INFO  05:43:22,752 - #8 a
INFO  05:43:22,753 - #24 =
INFO  05:43:22,753 - #9 3
INFO  05:43:22,753 - #27 ;
ERROR 05:43:22,753 - 
Sintaksna greska na liniji -1
ERROR 05:43:22,753 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:46:56,780 - #2 program
INFO  05:46:56,781 - #8 Program
INFO  05:46:56,781 - #20 {
INFO  05:46:56,782 - #5 const
INFO  05:46:56,782 - #8 int
INFO  05:46:56,782 - #8 c
INFO  05:46:56,782 - #24 =
INFO  05:46:56,783 - #9 10
INFO  05:46:56,783 - #27 ;
INFO  05:46:56,783 - #5 const
INFO  05:46:56,783 - #8 int
INFO  05:46:56,784 - #8 d
INFO  05:46:56,784 - #24 =
INFO  05:46:56,784 - #9 13
INFO  05:46:56,784 - #27 ;
INFO  05:46:56,785 - #8 int
INFO  05:46:56,785 - #8 e
INFO  05:46:56,785 - #24 =
ERROR 05:46:56,785 - 
Sintaksna greska na liniji -1
ERROR 05:46:56,786 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:48:19,060 - #2 program
INFO  05:48:19,062 - #8 Program
INFO  05:48:19,062 - #20 {
INFO  05:48:19,062 - #5 const
INFO  05:48:19,063 - #8 int
INFO  05:48:19,063 - #8 c
INFO  05:48:19,063 - #24 =
INFO  05:48:19,063 - #9 10
INFO  05:48:19,063 - #27 ;
INFO  05:48:19,064 - #5 const
INFO  05:48:19,064 - #8 int
INFO  05:48:19,065 - #8 d
INFO  05:48:19,065 - #24 =
INFO  05:48:19,065 - #9 13
INFO  05:48:19,065 - #27 ;
INFO  05:48:19,065 - #8 int
INFO  05:48:19,066 - #8 e
INFO  05:48:19,066 - #27 ;
INFO  05:48:19,066 - #6 void
INFO  05:48:19,067 - #8 test
INFO  05:48:19,068 - #29 (
INFO  05:48:19,068 - #30 )
INFO  05:48:19,068 - #20 {
INFO  05:48:19,068 - #8 int
INFO  05:48:19,068 - #8 a
INFO  05:48:19,068 - #27 ;
INFO  05:48:19,068 - #8 int
INFO  05:48:19,070 - #8 b
INFO  05:48:19,070 - #27 ;
INFO  05:48:19,070 - #8 a
INFO  05:48:19,071 - #24 =
INFO  05:48:19,071 - #9 3
INFO  05:48:19,071 - #27 ;
ERROR 05:48:19,072 - 
Sintaksna greska na liniji -1
ERROR 05:48:19,072 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:53:30,145 - #2 program
INFO  05:53:30,147 - #8 Program
INFO  05:53:30,147 - #20 {
INFO  05:53:30,148 - #5 const
INFO  05:53:30,148 - #8 int
INFO  05:53:30,148 - #8 c
INFO  05:53:30,149 - #24 =
INFO  05:53:30,149 - #9 10
INFO  05:53:30,150 - #27 ;
INFO  05:53:30,150 - #5 const
INFO  05:53:30,151 - #8 int
INFO  05:53:30,151 - #8 d
INFO  05:53:30,152 - #24 =
INFO  05:53:30,152 - #9 13
INFO  05:53:30,152 - #27 ;
INFO  05:53:30,152 - #8 int
INFO  05:53:30,152 - #8 e
INFO  05:53:30,153 - #27 ;
INFO  05:53:30,153 - #6 void
INFO  05:53:30,153 - #8 test
INFO  05:53:30,153 - #29 (
INFO  05:53:30,153 - #30 )
INFO  05:53:30,153 - #20 {
INFO  05:53:30,154 - #8 int
INFO  05:53:30,154 - #8 a
INFO  05:53:30,154 - #27 ;
INFO  05:53:30,154 - #8 int
INFO  05:53:30,154 - #8 b
INFO  05:53:30,154 - #27 ;
INFO  05:53:30,155 - #8 a
INFO  05:53:30,155 - #24 =
INFO  05:53:30,155 - #9 3
INFO  05:53:30,155 - #27 ;
ERROR 05:53:30,156 - 
Sintaksna greska na liniji -1
ERROR 05:53:30,156 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  05:55:34,843 - #2 program
INFO  05:55:34,844 - #8 Program
INFO  05:55:34,844 - #20 {
INFO  05:55:34,844 - #5 const
INFO  05:55:34,844 - #8 int
INFO  05:55:34,844 - #8 c
INFO  05:55:34,844 - #24 =
INFO  05:55:34,844 - #9 10
INFO  05:55:34,845 - #27 ;
INFO  05:55:34,845 - #5 const
INFO  05:55:34,845 - #8 int
INFO  05:55:34,845 - #8 d
INFO  05:55:34,845 - #24 =
INFO  05:55:34,846 - #9 13
INFO  05:55:34,846 - #27 ;
INFO  05:55:34,846 - #8 int
INFO  05:55:34,846 - #8 e
INFO  05:55:34,846 - #27 ;
INFO  05:55:34,846 - #6 void
INFO  05:55:34,847 - #8 test
INFO  05:55:34,847 - #29 (
INFO  05:55:34,847 - #30 )
INFO  05:55:34,847 - #20 {
INFO  05:55:34,847 - #8 int
INFO  05:55:34,847 - #8 a
INFO  05:55:34,847 - #27 ;
INFO  05:55:34,847 - #8 int
INFO  05:55:34,848 - #8 b
INFO  05:55:34,848 - #27 ;
INFO  05:55:34,848 - #8 a
INFO  05:55:34,848 - #24 =
INFO  05:55:34,848 - #9 3
INFO  05:55:34,848 - #27 ;
ERROR 05:55:34,849 - 
Sintaksna greska na liniji -1
ERROR 05:55:34,849 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  06:00:42,056 - #2 program
INFO  06:00:42,057 - #8 Program
INFO  06:00:42,057 - #20 {
INFO  06:00:42,057 - #5 const
INFO  06:00:42,057 - #8 int
INFO  06:00:42,057 - #8 c
INFO  06:00:42,058 - #24 =
INFO  06:00:42,058 - #9 10
INFO  06:00:42,058 - #27 ;
INFO  06:00:42,058 - #5 const
INFO  06:00:42,059 - #8 int
INFO  06:00:42,059 - #8 d
INFO  06:00:42,059 - #24 =
INFO  06:00:42,059 - #9 13
INFO  06:00:42,059 - #27 ;
INFO  06:00:42,059 - #8 int
INFO  06:00:42,060 - #8 e
INFO  06:00:42,060 - #27 ;
INFO  06:00:42,060 - #6 void
INFO  06:00:42,060 - #8 test
INFO  06:00:42,060 - #29 (
INFO  06:00:42,060 - #30 )
INFO  06:00:42,060 - #20 {
INFO  06:00:42,061 - #8 int
INFO  06:00:42,061 - #8 a
INFO  06:00:42,061 - #27 ;
INFO  06:00:42,061 - #8 int
INFO  06:00:42,061 - #8 b
INFO  06:00:42,061 - #27 ;
INFO  06:00:42,061 - #8 a
INFO  06:00:42,062 - #24 =
INFO  06:00:42,062 - #9 3
INFO  06:00:42,062 - #27 ;
ERROR 06:00:42,062 - 
Sintaksna greska na liniji -1
ERROR 06:00:42,062 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  06:04:30,947 - #2 program
INFO  06:04:30,948 - #8 Program
INFO  06:04:30,948 - #20 {
INFO  06:04:30,948 - #5 const
INFO  06:04:30,948 - #8 int
INFO  06:04:30,948 - #8 c
INFO  06:04:30,949 - #24 =
INFO  06:04:30,949 - #9 10
INFO  06:04:30,949 - #27 ;
INFO  06:04:30,949 - #5 const
INFO  06:04:30,950 - #8 int
INFO  06:04:30,950 - #8 d
INFO  06:04:30,950 - #24 =
INFO  06:04:30,950 - #9 13
INFO  06:04:30,950 - #27 ;
INFO  06:04:30,950 - #8 int
INFO  06:04:30,951 - #8 e
INFO  06:04:30,951 - #27 ;
INFO  06:04:30,951 - #6 void
INFO  06:04:30,951 - #8 test
INFO  06:04:30,951 - #29 (
INFO  06:04:30,952 - #30 )
INFO  06:04:30,952 - #20 {
INFO  06:04:30,952 - #8 int
INFO  06:04:30,952 - #8 a
INFO  06:04:30,952 - #27 ;
INFO  06:04:30,952 - #8 int
INFO  06:04:30,953 - #8 b
INFO  06:04:30,953 - #27 ;
INFO  06:04:30,953 - #8 a
INFO  06:04:30,953 - #24 =
INFO  06:04:30,954 - #9 3
INFO  06:04:30,954 - #27 ;
ERROR 06:04:30,954 - 
Sintaksna greska na liniji -1
ERROR 06:04:30,954 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  06:05:42,695 - #2 program
INFO  06:05:42,695 - #8 Program
INFO  06:05:42,695 - #20 {
INFO  06:05:42,696 - #5 const
INFO  06:05:42,696 - #8 int
INFO  06:05:42,696 - #8 c
INFO  06:05:42,696 - #24 =
INFO  06:05:42,696 - #9 10
INFO  06:05:42,696 - #27 ;
INFO  06:05:42,696 - #5 const
INFO  06:05:42,697 - #8 int
INFO  06:05:42,697 - #8 d
INFO  06:05:42,697 - #24 =
INFO  06:05:42,697 - #9 13
INFO  06:05:42,697 - #27 ;
INFO  06:05:42,697 - #8 int
INFO  06:05:42,698 - #8 e
INFO  06:05:42,698 - #27 ;
INFO  06:05:42,698 - #6 void
INFO  06:05:42,698 - #8 test
INFO  06:05:42,698 - #29 (
INFO  06:05:42,698 - #30 )
INFO  06:05:42,699 - #20 {
INFO  06:05:42,699 - #8 int
INFO  06:05:42,699 - #8 a
INFO  06:05:42,699 - #27 ;
INFO  06:05:42,699 - #8 int
INFO  06:05:42,699 - #8 b
INFO  06:05:42,699 - #27 ;
INFO  06:05:42,700 - #8 a
INFO  06:05:42,700 - #24 =
INFO  06:05:42,700 - #9 3
INFO  06:05:42,700 - #27 ;
ERROR 06:05:42,700 - 
Sintaksna greska na liniji -1
ERROR 06:05:42,700 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  06:06:32,870 - #2 program
INFO  06:06:32,870 - #8 Program
INFO  06:06:32,870 - #20 {
INFO  06:06:32,871 - #5 const
INFO  06:06:32,871 - #8 int
INFO  06:06:32,871 - #8 c
INFO  06:06:32,871 - #24 =
INFO  06:06:32,871 - #9 10
INFO  06:06:32,871 - #27 ;
INFO  06:06:32,871 - #5 const
INFO  06:06:32,872 - #8 int
INFO  06:06:32,872 - #8 d
INFO  06:06:32,872 - #24 =
INFO  06:06:32,872 - #9 13
INFO  06:06:32,872 - #27 ;
INFO  06:06:32,873 - #8 int
INFO  06:06:32,873 - #8 e
INFO  06:06:32,873 - #27 ;
INFO  06:06:32,873 - #6 void
INFO  06:06:32,873 - #8 test
INFO  06:06:32,874 - #29 (
INFO  06:06:32,874 - #30 )
INFO  06:06:32,874 - #20 {
INFO  06:06:32,874 - #8 int
INFO  06:06:32,874 - #8 a
INFO  06:06:32,874 - #27 ;
INFO  06:06:32,874 - #8 int
INFO  06:06:32,874 - #8 b
INFO  06:06:32,875 - #27 ;
INFO  06:06:32,875 - #8 a
INFO  06:06:32,875 - #24 =
INFO  06:06:32,875 - #9 3
INFO  06:06:32,875 - #27 ;
ERROR 06:06:32,875 - 
Sintaksna greska na liniji -1
ERROR 06:06:32,876 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  06:18:58,302 - #2 program
INFO  06:18:58,302 - #8 Program
INFO  06:18:58,303 - #20 {
INFO  06:18:58,303 - #5 const
INFO  06:18:58,303 - #8 int
INFO  06:18:58,303 - #8 c
INFO  06:18:58,304 - #24 =
INFO  06:18:58,304 - #9 10
INFO  06:18:58,304 - #27 ;
INFO  06:18:58,304 - #5 const
INFO  06:18:58,305 - #8 int
INFO  06:18:58,306 - #8 d
INFO  06:18:58,306 - #24 =
INFO  06:18:58,306 - #9 13
INFO  06:18:58,306 - #27 ;
INFO  06:18:58,306 - #8 int
INFO  06:18:58,307 - #8 e
INFO  06:18:58,307 - #27 ;
INFO  06:18:58,307 - #6 void
INFO  06:18:58,308 - #8 test
INFO  06:18:58,308 - #29 (
INFO  06:18:58,308 - #30 )
INFO  06:18:58,308 - #20 {
INFO  06:18:58,308 - #8 int
INFO  06:18:58,308 - #8 a
INFO  06:18:58,309 - #27 ;
INFO  06:18:58,309 - #8 int
INFO  06:18:58,310 - #8 b
INFO  06:18:58,310 - #27 ;
INFO  06:18:58,310 - #8 a
INFO  06:18:58,311 - #24 =
INFO  06:18:58,312 - #9 3
INFO  06:18:58,312 - #27 ;
ERROR 06:18:58,313 - 
Sintaksna greska na liniji -1
ERROR 06:18:58,313 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  06:19:13,842 - #2 program
INFO  06:19:13,843 - #8 Program
INFO  06:19:13,843 - #20 {
INFO  06:19:13,843 - #5 const
INFO  06:19:13,843 - #8 int
INFO  06:19:13,843 - #8 c
INFO  06:19:13,844 - #24 =
INFO  06:19:13,844 - #9 10
INFO  06:19:13,844 - #27 ;
INFO  06:19:13,844 - #5 const
INFO  06:19:13,845 - #8 int
INFO  06:19:13,845 - #8 d
INFO  06:19:13,845 - #24 =
INFO  06:19:13,845 - #9 13
INFO  06:19:13,845 - #27 ;
INFO  06:19:13,845 - #8 int
INFO  06:19:13,845 - #8 e
INFO  06:19:13,846 - #27 ;
INFO  06:19:13,846 - #6 void
INFO  06:19:13,846 - #8 test
INFO  06:19:13,846 - #29 (
INFO  06:19:13,846 - #30 )
INFO  06:19:13,846 - #20 {
INFO  06:19:13,846 - #8 int
INFO  06:19:13,847 - #8 a
INFO  06:19:13,847 - #27 ;
INFO  06:19:13,847 - #8 int
INFO  06:19:13,847 - #8 b
INFO  06:19:13,847 - #27 ;
INFO  06:19:13,848 - #8 a
INFO  06:19:13,848 - #24 =
INFO  06:19:13,848 - #9 3
INFO  06:19:13,848 - #27 ;
ERROR 06:19:13,849 - 
Sintaksna greska na liniji -1
ERROR 06:19:13,849 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  06:21:49,395 - #2 program
INFO  06:21:49,396 - #8 Program
INFO  06:21:49,397 - #20 {
INFO  06:21:49,397 - #5 const
INFO  06:21:49,397 - #8 int
INFO  06:21:49,398 - #8 c
INFO  06:21:49,398 - #24 =
INFO  06:21:49,398 - #9 10
INFO  06:21:49,398 - #27 ;
INFO  06:21:49,398 - #5 const
INFO  06:21:49,399 - #8 int
INFO  06:21:49,400 - #8 d
INFO  06:21:49,400 - #24 =
INFO  06:21:49,400 - #9 13
INFO  06:21:49,400 - #27 ;
INFO  06:21:49,401 - #8 int
INFO  06:21:49,401 - #8 e
INFO  06:21:49,401 - #27 ;
INFO  06:21:49,401 - #6 void
INFO  06:21:49,402 - #8 test
INFO  06:21:49,402 - #29 (
INFO  06:21:49,402 - #8 bool
INFO  06:21:49,402 - #8 f
INFO  06:21:49,403 - #30 )
ERROR 06:21:49,403 - 
Sintaksna greska na liniji -1
ERROR 06:21:49,403 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  06:23:37,166 - #2 program
INFO  06:23:37,168 - #8 Program
INFO  06:23:37,168 - #20 {
INFO  06:23:37,168 - #5 const
INFO  06:23:37,169 - #8 int
INFO  06:23:37,169 - #8 c
INFO  06:23:37,169 - #24 =
INFO  06:23:37,169 - #9 10
INFO  06:23:37,169 - #27 ;
INFO  06:23:37,170 - #5 const
INFO  06:23:37,170 - #8 int
INFO  06:23:37,171 - #8 d
INFO  06:23:37,171 - #24 =
INFO  06:23:37,171 - #9 13
INFO  06:23:37,171 - #27 ;
INFO  06:23:37,171 - #8 int
INFO  06:23:37,172 - #8 e
INFO  06:23:37,172 - #27 ;
INFO  06:23:37,172 - #8 int
INFO  06:23:37,173 - #8 max
INFO  06:23:37,173 - #29 (
INFO  06:23:37,173 - #8 int
INFO  06:23:37,173 - #8 a
INFO  06:23:37,173 - #28 ,
ERROR 06:23:37,173 - 
Sintaksna greska na liniji -1
ERROR 06:23:37,174 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  06:27:48,821 - #2 program
INFO  06:27:48,822 - #8 Program
INFO  06:27:48,822 - #20 {
INFO  06:27:48,822 - #5 const
INFO  06:27:48,822 - #8 int
INFO  06:27:48,822 - #8 c
INFO  06:27:48,822 - #24 =
INFO  06:27:48,822 - #9 10
INFO  06:27:48,823 - #27 ;
INFO  06:27:48,823 - #5 const
INFO  06:27:48,823 - #8 int
INFO  06:27:48,823 - #8 d
INFO  06:27:48,824 - #24 =
INFO  06:27:48,824 - #9 13
INFO  06:27:48,824 - #27 ;
INFO  06:27:48,824 - #8 int
INFO  06:27:48,824 - #8 e
INFO  06:27:48,824 - #27 ;
INFO  06:27:48,824 - #8 int
INFO  06:27:48,825 - #8 max
INFO  06:27:48,825 - #29 (
INFO  06:27:48,825 - #8 int
INFO  06:27:48,825 - #8 a
INFO  06:27:48,825 - #28 ,
ERROR 06:27:48,825 - 
Sintaksna greska na liniji -1
ERROR 06:27:48,825 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  06:28:57,293 - #2 program
INFO  06:28:57,294 - #8 Program
INFO  06:28:57,294 - #20 {
INFO  06:28:57,294 - #5 const
INFO  06:28:57,294 - #8 int
INFO  06:28:57,294 - #8 c
INFO  06:28:57,295 - #24 =
INFO  06:28:57,295 - #9 10
INFO  06:28:57,295 - #27 ;
INFO  06:28:57,295 - #5 const
INFO  06:28:57,296 - #8 int
INFO  06:28:57,296 - #8 d
INFO  06:28:57,296 - #24 =
INFO  06:28:57,296 - #9 13
INFO  06:28:57,296 - #27 ;
INFO  06:28:57,296 - #8 int
INFO  06:28:57,296 - #8 e
INFO  06:28:57,296 - #27 ;
INFO  06:28:57,297 - #8 int
INFO  06:28:57,297 - #8 max
INFO  06:28:57,297 - #29 (
INFO  06:28:57,297 - #8 int
INFO  06:28:57,297 - #8 a
INFO  06:28:57,297 - #28 ,
ERROR 06:28:57,298 - 
Sintaksna greska na liniji -1
ERROR 06:28:57,298 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  06:30:23,598 - #2 program
INFO  06:30:23,599 - #8 Program
INFO  06:30:23,599 - #20 {
INFO  06:30:23,599 - #5 const
INFO  06:30:23,599 - #8 int
INFO  06:30:23,599 - #8 c
INFO  06:30:23,600 - #24 =
INFO  06:30:23,600 - #9 10
INFO  06:30:23,600 - #27 ;
INFO  06:30:23,600 - #5 const
INFO  06:30:23,600 - #8 int
INFO  06:30:23,601 - #8 d
INFO  06:30:23,601 - #24 =
INFO  06:30:23,601 - #9 13
INFO  06:30:23,601 - #27 ;
INFO  06:30:23,601 - #8 int
INFO  06:30:23,601 - #8 e
INFO  06:30:23,601 - #27 ;
INFO  06:30:23,601 - #8 int
INFO  06:30:23,602 - #8 max
INFO  06:30:23,602 - #29 (
INFO  06:30:23,602 - #8 int
INFO  06:30:23,602 - #8 a
INFO  06:30:23,602 - #28 ,
INFO  06:30:23,603 - #8 int
INFO  06:30:23,603 - #8 b
INFO  06:30:23,603 - #30 )
INFO  06:30:23,603 - #20 {
INFO  06:30:23,603 - #31 if
ERROR 06:30:23,603 - 
Sintaksna greska na liniji -1
ERROR 06:30:23,603 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  06:30:31,928 - #2 program
INFO  06:30:31,929 - #8 Program
INFO  06:30:31,929 - #20 {
INFO  06:30:31,929 - #5 const
INFO  06:30:31,930 - #8 int
INFO  06:30:31,930 - #8 c
INFO  06:30:31,930 - #24 =
INFO  06:30:31,931 - #9 10
INFO  06:30:31,931 - #27 ;
INFO  06:30:31,931 - #5 const
INFO  06:30:31,932 - #8 int
INFO  06:30:31,932 - #8 d
INFO  06:30:31,933 - #24 =
INFO  06:30:31,933 - #9 13
INFO  06:30:31,933 - #27 ;
INFO  06:30:31,933 - #8 int
INFO  06:30:31,933 - #8 e
INFO  06:30:31,933 - #27 ;
INFO  06:30:31,934 - #8 int
INFO  06:30:31,934 - #8 max
INFO  06:30:31,934 - #29 (
INFO  06:30:31,935 - #8 int
INFO  06:30:31,935 - #8 a
INFO  06:30:31,935 - #28 ,
INFO  06:30:31,935 - #8 int
INFO  06:30:31,935 - #8 b
INFO  06:30:31,935 - #30 )
INFO  06:30:31,936 - #20 {
INFO  06:30:31,936 - #31 if
ERROR 06:30:31,936 - 
Sintaksna greska na liniji -1
ERROR 06:30:31,936 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  06:43:54,215 - #2 program
INFO  06:43:54,217 - #8 Program
INFO  06:43:54,217 - #20 {
INFO  06:43:54,217 - #5 const
INFO  06:43:54,217 - #8 int
INFO  06:43:54,218 - #8 c
INFO  06:43:54,218 - #24 =
INFO  06:43:54,218 - #9 10
INFO  06:43:54,218 - #27 ;
INFO  06:43:54,218 - #5 const
INFO  06:43:54,219 - #8 int
INFO  06:43:54,220 - #8 d
INFO  06:43:54,220 - #24 =
INFO  06:43:54,220 - #9 13
INFO  06:43:54,220 - #27 ;
INFO  06:43:54,221 - #8 int
INFO  06:43:54,221 - #8 e
INFO  06:43:54,221 - #27 ;
INFO  06:43:54,221 - #8 int
INFO  06:43:54,222 - #8 max
INFO  06:43:54,222 - #29 (
INFO  06:43:54,222 - #8 int
INFO  06:43:54,222 - #8 a
INFO  06:43:54,222 - #28 ,
INFO  06:43:54,224 - #8 int
INFO  06:43:54,224 - #8 b
INFO  06:43:54,224 - #30 )
INFO  06:43:54,224 - #20 {
INFO  06:43:54,224 - #31 if
ERROR 06:43:54,225 - 
Sintaksna greska na liniji -1
ERROR 06:43:54,225 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  06:44:50,262 - #2 program
INFO  06:44:50,263 - #8 Program
INFO  06:44:50,263 - #20 {
INFO  06:44:50,263 - #5 const
INFO  06:44:50,263 - #8 int
INFO  06:44:50,263 - #8 c
INFO  06:44:50,263 - #24 =
INFO  06:44:50,264 - #9 10
INFO  06:44:50,264 - #27 ;
INFO  06:44:50,264 - #5 const
INFO  06:44:50,264 - #8 int
INFO  06:44:50,265 - #8 d
INFO  06:44:50,265 - #24 =
INFO  06:44:50,265 - #9 13
INFO  06:44:50,265 - #27 ;
INFO  06:44:50,265 - #8 int
INFO  06:44:50,265 - #8 e
INFO  06:44:50,266 - #27 ;
INFO  06:44:50,266 - #6 void
INFO  06:44:50,266 - #8 test
INFO  06:44:50,266 - #29 (
INFO  06:44:50,266 - #30 )
INFO  06:44:50,266 - #20 {
INFO  06:44:50,266 - #8 int
INFO  06:44:50,266 - #8 a
INFO  06:44:50,267 - #27 ;
INFO  06:44:50,267 - #8 int
INFO  06:44:50,267 - #8 b
INFO  06:44:50,267 - #27 ;
INFO  06:44:50,267 - #8 a
INFO  06:44:50,267 - #24 =
INFO  06:44:50,268 - #9 3
INFO  06:44:50,268 - #27 ;
ERROR 06:44:50,268 - 
Sintaksna greska na liniji -1
ERROR 06:44:50,268 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  07:00:25,607 - #2 program
INFO  07:00:25,608 - #8 Program
INFO  07:00:25,608 - #20 {
INFO  07:00:25,608 - #5 const
INFO  07:00:25,608 - #8 int
INFO  07:00:25,608 - #8 c
INFO  07:00:25,608 - #24 =
INFO  07:00:25,608 - #9 10
INFO  07:00:25,608 - #27 ;
INFO  07:00:25,609 - #5 const
INFO  07:00:25,609 - #8 int
INFO  07:00:25,609 - #8 d
INFO  07:00:25,609 - #24 =
INFO  07:00:25,610 - #9 13
INFO  07:00:25,610 - #27 ;
INFO  07:00:25,610 - #8 int
INFO  07:00:25,611 - #8 e
INFO  07:00:25,611 - #27 ;
INFO  07:00:25,611 - #6 void
INFO  07:00:25,612 - #8 test
INFO  07:00:25,612 - #29 (
INFO  07:00:25,612 - #30 )
INFO  07:00:25,612 - #20 {
INFO  07:00:25,612 - #8 int
INFO  07:00:25,612 - #8 a
INFO  07:00:25,613 - #27 ;
INFO  07:00:25,613 - #8 int
INFO  07:00:25,614 - #8 b
INFO  07:00:25,614 - #27 ;
INFO  07:00:25,614 - #8 a
INFO  07:00:25,615 - #24 =
INFO  07:00:25,615 - #9 3
INFO  07:00:25,615 - #27 ;
ERROR 07:00:25,615 - 
Sintaksna greska na liniji -1
ERROR 07:00:25,615 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  07:03:00,795 - #2 program
INFO  07:03:00,796 - #8 Program
INFO  07:03:00,796 - #20 {
INFO  07:03:00,797 - #5 const
INFO  07:03:00,797 - #8 int
INFO  07:03:00,797 - #8 c
INFO  07:03:00,797 - #24 =
INFO  07:03:00,797 - #9 10
INFO  07:03:00,798 - #27 ;
INFO  07:03:00,798 - #5 const
INFO  07:03:00,798 - #8 int
INFO  07:03:00,799 - #8 d
INFO  07:03:00,799 - #24 =
INFO  07:03:00,799 - #9 13
INFO  07:03:00,799 - #27 ;
INFO  07:03:00,799 - #8 int
INFO  07:03:00,800 - #8 e
INFO  07:03:00,800 - #27 ;
INFO  07:03:00,800 - #6 void
INFO  07:03:00,800 - #8 test
INFO  07:03:00,801 - #29 (
INFO  07:03:00,801 - #30 )
INFO  07:03:00,801 - #20 {
INFO  07:03:00,801 - #8 int
INFO  07:03:00,801 - #8 a
INFO  07:03:00,801 - #27 ;
INFO  07:03:00,802 - #8 int
INFO  07:03:00,802 - #8 b
INFO  07:03:00,803 - #27 ;
INFO  07:03:00,803 - #8 a
INFO  07:03:00,803 - #24 =
INFO  07:03:00,804 - #9 3
INFO  07:03:00,804 - #27 ;
ERROR 07:03:00,804 - 
Sintaksna greska na liniji -1
ERROR 07:03:00,804 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  07:07:10,534 - #2 program
INFO  07:07:10,535 - #8 Program
INFO  07:07:10,535 - #20 {
INFO  07:07:10,535 - #5 const
INFO  07:07:10,535 - #8 int
INFO  07:07:10,535 - #8 c
INFO  07:07:10,535 - #24 =
INFO  07:07:10,536 - #9 10
INFO  07:07:10,536 - #27 ;
INFO  07:07:10,536 - #5 const
INFO  07:07:10,536 - #8 int
INFO  07:07:10,536 - #8 d
INFO  07:07:10,537 - #24 =
INFO  07:07:10,537 - #9 13
INFO  07:07:10,537 - #27 ;
INFO  07:07:10,537 - #8 int
INFO  07:07:10,537 - #8 e
INFO  07:07:10,537 - #27 ;
INFO  07:07:10,537 - #6 void
INFO  07:07:10,538 - #8 test
INFO  07:07:10,538 - #29 (
INFO  07:07:10,538 - #30 )
INFO  07:07:10,538 - #20 {
INFO  07:07:10,538 - #8 int
INFO  07:07:10,538 - #8 a
INFO  07:07:10,538 - #27 ;
INFO  07:07:10,538 - #8 int
INFO  07:07:10,539 - #8 b
INFO  07:07:10,539 - #27 ;
INFO  07:07:10,539 - #8 a
INFO  07:07:10,539 - #24 =
INFO  07:07:10,539 - #9 3
INFO  07:07:10,539 - #27 ;
ERROR 07:07:10,540 - 
Sintaksna greska na liniji -1
ERROR 07:07:10,540 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  07:11:46,812 - #2 program
INFO  07:11:46,812 - #8 Program
INFO  07:11:46,813 - #20 {
INFO  07:11:46,813 - #5 const
INFO  07:11:46,813 - #8 int
INFO  07:11:46,813 - #8 c
INFO  07:11:46,813 - #24 =
INFO  07:11:46,813 - #9 10
INFO  07:11:46,814 - #27 ;
INFO  07:11:46,814 - #5 const
INFO  07:11:46,814 - #8 int
INFO  07:11:46,814 - #8 d
INFO  07:11:46,815 - #24 =
INFO  07:11:46,815 - #9 13
INFO  07:11:46,815 - #27 ;
INFO  07:11:46,815 - #8 int
INFO  07:11:46,815 - #8 e
INFO  07:11:46,815 - #27 ;
INFO  07:11:46,816 - #6 void
INFO  07:11:46,816 - #8 test
INFO  07:11:46,816 - #29 (
INFO  07:11:46,816 - #30 )
INFO  07:11:46,816 - #20 {
INFO  07:11:46,816 - #8 int
INFO  07:11:46,816 - #8 a
INFO  07:11:46,817 - #27 ;
INFO  07:11:46,817 - #8 int
INFO  07:11:46,817 - #8 b
INFO  07:11:46,817 - #27 ;
INFO  07:11:46,817 - #8 a
INFO  07:11:46,818 - #24 =
INFO  07:11:46,818 - #9 3
INFO  07:11:46,818 - #27 ;
ERROR 07:11:46,818 - 
Sintaksna greska na liniji -1
ERROR 07:11:46,818 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  07:16:01,924 - #2 program
INFO  07:16:01,925 - #8 Program
INFO  07:16:01,925 - #20 {
INFO  07:16:01,925 - #5 const
INFO  07:16:01,925 - #8 int
INFO  07:16:01,925 - #8 c
INFO  07:16:01,925 - #24 =
INFO  07:16:01,925 - #9 10
INFO  07:16:01,925 - #27 ;
INFO  07:16:01,926 - #5 const
INFO  07:16:01,926 - #8 int
INFO  07:16:01,926 - #8 d
INFO  07:16:01,926 - #24 =
INFO  07:16:01,926 - #9 13
INFO  07:16:01,927 - #27 ;
INFO  07:16:01,927 - #8 int
INFO  07:16:01,927 - #8 e
INFO  07:16:01,927 - #27 ;
INFO  07:16:01,927 - #6 void
INFO  07:16:01,927 - #8 test
INFO  07:16:01,927 - #29 (
INFO  07:16:01,928 - #30 )
INFO  07:16:01,928 - #20 {
INFO  07:16:01,928 - #8 int
INFO  07:16:01,928 - #8 a
INFO  07:16:01,928 - #27 ;
INFO  07:16:01,928 - #8 int
INFO  07:16:01,928 - #8 b
INFO  07:16:01,928 - #27 ;
INFO  07:16:01,928 - #8 a
INFO  07:16:01,929 - #24 =
INFO  07:16:01,929 - #9 3
INFO  07:16:01,929 - #27 ;
ERROR 07:16:01,929 - 
Sintaksna greska na liniji -1
ERROR 07:16:01,929 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  07:22:30,712 - #2 program
INFO  07:22:30,713 - #8 Program
INFO  07:22:30,714 - #20 {
INFO  07:22:30,714 - #5 const
INFO  07:22:30,714 - #8 int
INFO  07:22:30,714 - #8 c
INFO  07:22:30,714 - #24 =
INFO  07:22:30,714 - #9 10
INFO  07:22:30,714 - #27 ;
INFO  07:22:30,715 - #5 const
INFO  07:22:30,715 - #8 int
INFO  07:22:30,715 - #8 d
INFO  07:22:30,716 - #24 =
INFO  07:22:30,716 - #9 13
INFO  07:22:30,716 - #27 ;
INFO  07:22:30,716 - #8 int
INFO  07:22:30,716 - #8 e
INFO  07:22:30,716 - #27 ;
INFO  07:22:30,716 - #6 void
INFO  07:22:30,717 - #8 test
INFO  07:22:30,718 - #29 (
INFO  07:22:30,718 - #30 )
INFO  07:22:30,718 - #20 {
INFO  07:22:30,718 - #8 int
INFO  07:22:30,718 - #8 a
INFO  07:22:30,718 - #27 ;
INFO  07:22:30,719 - #8 int
INFO  07:22:30,719 - #8 b
INFO  07:22:30,719 - #27 ;
INFO  07:22:30,719 - #8 a
INFO  07:22:30,720 - #24 =
INFO  07:22:30,720 - #9 3
INFO  07:22:30,720 - #27 ;
ERROR 07:22:30,720 - 
Sintaksna greska na liniji -1
ERROR 07:22:30,720 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  07:23:23,594 - #2 program
INFO  07:23:23,596 - #8 Program
INFO  07:23:23,596 - #20 {
INFO  07:23:23,596 - #5 const
INFO  07:23:23,597 - #8 int
INFO  07:23:23,597 - #8 c
INFO  07:23:23,597 - #24 =
INFO  07:23:23,597 - #9 10
INFO  07:23:23,597 - #27 ;
INFO  07:23:23,598 - #5 const
INFO  07:23:23,598 - #8 int
INFO  07:23:23,599 - #8 d
INFO  07:23:23,599 - #24 =
INFO  07:23:23,599 - #9 13
INFO  07:23:23,599 - #27 ;
INFO  07:23:23,600 - #8 int
INFO  07:23:23,600 - #8 e
INFO  07:23:23,600 - #27 ;
INFO  07:23:23,600 - #6 void
INFO  07:23:23,601 - #8 test
INFO  07:23:23,601 - #29 (
INFO  07:23:23,601 - #30 )
INFO  07:23:23,601 - #20 {
INFO  07:23:23,601 - #8 int
INFO  07:23:23,602 - #8 a
INFO  07:23:23,602 - #27 ;
INFO  07:23:23,602 - #8 int
INFO  07:23:23,603 - #8 b
INFO  07:23:23,603 - #27 ;
INFO  07:23:23,603 - #8 a
INFO  07:23:23,604 - #24 =
INFO  07:23:23,604 - #9 3
INFO  07:23:23,605 - #27 ;
ERROR 07:23:23,605 - 
Sintaksna greska na liniji -1
ERROR 07:23:23,605 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  07:23:59,276 - #2 program
INFO  07:23:59,276 - #8 Program
INFO  07:23:59,277 - #20 {
INFO  07:23:59,277 - #5 const
INFO  07:23:59,277 - #8 int
INFO  07:23:59,277 - #8 c
INFO  07:23:59,277 - #24 =
INFO  07:23:59,277 - #9 10
INFO  07:23:59,277 - #27 ;
INFO  07:23:59,278 - #5 const
INFO  07:23:59,278 - #8 int
INFO  07:23:59,279 - #8 d
INFO  07:23:59,279 - #24 =
INFO  07:23:59,279 - #9 13
INFO  07:23:59,279 - #27 ;
INFO  07:23:59,279 - #8 int
INFO  07:23:59,280 - #8 e
INFO  07:23:59,280 - #27 ;
INFO  07:23:59,280 - #6 void
INFO  07:23:59,280 - #8 test
INFO  07:23:59,280 - #29 (
INFO  07:23:59,280 - #30 )
INFO  07:23:59,281 - #20 {
INFO  07:23:59,281 - #8 int
INFO  07:23:59,281 - #8 a
INFO  07:23:59,281 - #27 ;
INFO  07:23:59,281 - #8 int
INFO  07:23:59,281 - #8 b
INFO  07:23:59,281 - #27 ;
INFO  07:23:59,281 - #8 a
INFO  07:23:59,282 - #24 =
INFO  07:23:59,282 - #9 3
INFO  07:23:59,282 - #27 ;
ERROR 07:23:59,282 - 
Sintaksna greska na liniji -1
ERROR 07:23:59,282 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  16:29:43,366 - #2 program
INFO  16:29:43,485 - #8 Program
INFO  16:29:43,485 - #20 {
INFO  16:29:43,485 - #5 const
INFO  16:29:43,485 - #8 int
INFO  16:29:43,485 - #8 c
INFO  16:29:43,485 - #24 =
INFO  16:29:43,486 - #9 10
INFO  16:29:43,486 - #27 ;
INFO  16:29:43,486 - #5 const
INFO  16:29:43,486 - #8 int
INFO  16:29:43,486 - #8 d
INFO  16:29:43,486 - #24 =
INFO  16:29:43,486 - #9 13
INFO  16:29:43,486 - #27 ;
INFO  16:29:43,488 - #8 int
INFO  16:29:43,488 - #8 e
INFO  16:29:43,488 - #27 ;
INFO  16:29:43,488 - #6 void
INFO  16:29:43,488 - #8 test
INFO  16:29:43,488 - #29 (
INFO  16:29:43,489 - #30 )
INFO  16:29:43,489 - #20 {
INFO  16:29:43,489 - #8 int
INFO  16:29:43,489 - #8 a
INFO  16:29:43,489 - #27 ;
INFO  16:29:43,489 - #8 int
INFO  16:29:43,489 - #8 b
INFO  16:29:43,489 - #27 ;
INFO  16:29:43,489 - #8 a
INFO  16:29:43,489 - #24 =
ERROR 16:29:43,489 - 
Sintaksna greska na liniji -1
ERROR 16:29:43,490 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  16:30:57,914 - #2 program
INFO  16:30:57,915 - #8 Program
INFO  16:30:57,915 - #20 {
INFO  16:30:57,915 - #5 const
INFO  16:30:57,915 - #8 int
INFO  16:30:57,915 - #8 c
INFO  16:30:57,915 - #24 =
INFO  16:30:57,915 - #9 10
INFO  16:30:57,916 - #27 ;
INFO  16:30:57,916 - #5 const
INFO  16:30:57,916 - #8 int
INFO  16:30:57,916 - #8 d
INFO  16:30:57,916 - #24 =
INFO  16:30:57,916 - #9 13
INFO  16:30:57,917 - #27 ;
INFO  16:30:57,917 - #8 int
INFO  16:30:57,917 - #8 e
INFO  16:30:57,917 - #27 ;
INFO  16:30:57,917 - #6 void
INFO  16:30:57,917 - #8 test
INFO  16:30:57,918 - #29 (
INFO  16:30:57,918 - #30 )
INFO  16:30:57,918 - #20 {
INFO  16:30:57,918 - #8 int
INFO  16:30:57,918 - #8 a
INFO  16:30:57,918 - #27 ;
INFO  16:30:57,918 - #8 int
INFO  16:30:57,918 - #8 b
INFO  16:30:57,918 - #27 ;
INFO  16:30:57,918 - #8 a
INFO  16:30:57,919 - #24 =
ERROR 16:30:57,919 - 
Sintaksna greska na liniji -1
ERROR 16:30:57,919 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  16:59:19,159 - #2 program
INFO  16:59:19,160 - #8 Program
INFO  16:59:19,160 - #20 {
INFO  16:59:19,161 - #5 const
INFO  16:59:19,161 - #8 int
INFO  16:59:19,161 - #8 c
INFO  16:59:19,161 - #24 =
INFO  16:59:19,161 - #9 10
INFO  16:59:19,161 - #27 ;
INFO  16:59:19,162 - #5 const
INFO  16:59:19,162 - #8 int
INFO  16:59:19,162 - #8 d
INFO  16:59:19,162 - #24 =
INFO  16:59:19,163 - #9 13
INFO  16:59:19,163 - #27 ;
INFO  16:59:19,163 - #8 int
INFO  16:59:19,164 - #8 e
INFO  16:59:19,164 - #27 ;
INFO  16:59:19,164 - #6 void
INFO  16:59:19,164 - #8 test
INFO  16:59:19,164 - #29 (
INFO  16:59:19,164 - #30 )
INFO  16:59:19,165 - #20 {
INFO  16:59:19,165 - #8 int
INFO  16:59:19,165 - #8 a
INFO  16:59:19,165 - #27 ;
INFO  16:59:19,165 - #8 int
INFO  16:59:19,165 - #8 b
INFO  16:59:19,165 - #27 ;
INFO  16:59:19,165 - #8 a
INFO  16:59:19,166 - #24 =
ERROR 16:59:19,166 - 
Sintaksna greska na liniji -1
ERROR 16:59:19,166 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  17:03:29,029 - #2 program
INFO  17:03:29,030 - #8 Program
INFO  17:03:29,030 - #20 {
INFO  17:03:29,030 - #5 const
INFO  17:03:29,030 - #8 int
INFO  17:03:29,031 - #8 c
INFO  17:03:29,031 - #24 =
INFO  17:03:29,031 - #9 10
INFO  17:03:29,031 - #27 ;
INFO  17:03:29,031 - #5 const
INFO  17:03:29,032 - #8 int
INFO  17:03:29,032 - #8 d
INFO  17:03:29,032 - #24 =
INFO  17:03:29,033 - #9 13
INFO  17:03:29,033 - #27 ;
INFO  17:03:29,033 - #8 int
INFO  17:03:29,034 - #8 e
INFO  17:03:29,034 - #27 ;
INFO  17:03:29,034 - #6 void
INFO  17:03:29,035 - #8 test
INFO  17:03:29,035 - #29 (
INFO  17:03:29,035 - #30 )
INFO  17:03:29,035 - #20 {
INFO  17:03:29,035 - #8 int
INFO  17:03:29,035 - #8 a
INFO  17:03:29,035 - #27 ;
INFO  17:03:29,035 - #8 int
INFO  17:03:29,036 - #8 b
INFO  17:03:29,036 - #27 ;
INFO  17:03:29,036 - #8 a
INFO  17:03:29,036 - #24 =
INFO  17:03:29,036 - #9 3
INFO  17:03:29,036 - #27 ;
INFO  17:03:29,037 - #8 b
ERROR 17:03:29,037 - 
Sintaksna greska na liniji -1
ERROR 17:03:29,037 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  17:05:58,135 - #2 program
INFO  17:05:58,136 - #8 Program
INFO  17:05:58,136 - #20 {
INFO  17:05:58,137 - #5 const
INFO  17:05:58,137 - #8 int
INFO  17:05:58,137 - #8 c
INFO  17:05:58,137 - #24 =
INFO  17:05:58,137 - #9 10
INFO  17:05:58,137 - #27 ;
INFO  17:05:58,138 - #5 const
INFO  17:05:58,138 - #8 int
INFO  17:05:58,138 - #8 d
INFO  17:05:58,139 - #24 =
INFO  17:05:58,139 - #9 13
INFO  17:05:58,139 - #27 ;
INFO  17:05:58,139 - #8 int
INFO  17:05:58,139 - #8 e
INFO  17:05:58,140 - #27 ;
INFO  17:05:58,140 - #6 void
INFO  17:05:58,141 - #8 test
INFO  17:05:58,141 - #29 (
INFO  17:05:58,141 - #30 )
INFO  17:05:58,141 - #20 {
INFO  17:05:58,141 - #8 int
INFO  17:05:58,142 - #8 a
INFO  17:05:58,142 - #27 ;
INFO  17:05:58,142 - #8 int
INFO  17:05:58,143 - #8 b
INFO  17:05:58,143 - #27 ;
INFO  17:05:58,143 - #8 a
INFO  17:05:58,143 - #24 =
INFO  17:05:58,143 - #9 3
INFO  17:05:58,143 - #27 ;
INFO  17:05:58,144 - #8 b
ERROR 17:05:58,144 - 
Sintaksna greska na liniji -1
ERROR 17:05:58,144 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  17:07:46,651 - #2 program
INFO  17:07:46,651 - #8 Program
INFO  17:07:46,652 - #20 {
INFO  17:07:46,652 - #5 const
INFO  17:07:46,652 - #8 int
INFO  17:07:46,652 - #8 c
INFO  17:07:46,652 - #24 =
INFO  17:07:46,653 - #9 10
INFO  17:07:46,653 - #27 ;
INFO  17:07:46,653 - #5 const
INFO  17:07:46,656 - #8 int
INFO  17:07:46,656 - #8 d
INFO  17:07:46,656 - #24 =
INFO  17:07:46,656 - #9 13
INFO  17:07:46,657 - #27 ;
INFO  17:07:46,657 - #8 int
INFO  17:07:46,657 - #8 e
INFO  17:07:46,657 - #27 ;
INFO  17:07:46,657 - #6 void
INFO  17:07:46,658 - #8 test
INFO  17:07:46,658 - #29 (
INFO  17:07:46,658 - #30 )
INFO  17:07:46,658 - #20 {
INFO  17:07:46,659 - #8 int
INFO  17:07:46,659 - #8 a
INFO  17:07:46,659 - #27 ;
INFO  17:07:46,659 - #8 int
INFO  17:07:46,659 - #8 b
INFO  17:07:46,660 - #27 ;
INFO  17:07:46,660 - #8 a
INFO  17:07:46,660 - #24 =
INFO  17:07:46,660 - #9 3
INFO  17:07:46,660 - #27 ;
INFO  17:07:46,661 - #8 b
ERROR 17:07:46,661 - 
Sintaksna greska na liniji -1
ERROR 17:07:46,661 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  17:09:52,840 - #2 program
INFO  17:09:52,841 - #8 Program
INFO  17:09:52,841 - #20 {
INFO  17:09:52,842 - #5 const
INFO  17:09:52,842 - #8 int
INFO  17:09:52,842 - #8 c
INFO  17:09:52,842 - #24 =
INFO  17:09:52,842 - #9 10
INFO  17:09:52,842 - #27 ;
INFO  17:09:52,844 - #5 const
INFO  17:09:52,844 - #8 int
INFO  17:09:52,844 - #8 d
INFO  17:09:52,844 - #24 =
INFO  17:09:52,845 - #9 13
INFO  17:09:52,846 - #27 ;
INFO  17:09:52,846 - #8 int
INFO  17:09:52,846 - #8 e
INFO  17:09:52,846 - #27 ;
INFO  17:09:52,846 - #6 void
INFO  17:09:52,847 - #8 test
INFO  17:09:52,847 - #29 (
INFO  17:09:52,847 - #30 )
INFO  17:09:52,847 - #20 {
INFO  17:09:52,847 - #8 int
INFO  17:09:52,847 - #8 a
INFO  17:09:52,847 - #27 ;
INFO  17:09:52,847 - #8 int
INFO  17:09:52,848 - #8 b
INFO  17:09:52,848 - #27 ;
INFO  17:09:52,848 - #8 a
INFO  17:09:52,848 - #24 =
INFO  17:09:52,848 - #9 3
INFO  17:09:52,848 - #27 ;
INFO  17:09:52,849 - #8 b
ERROR 17:09:52,849 - 
Sintaksna greska na liniji -1
ERROR 17:09:52,850 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  17:12:23,142 - #2 program
INFO  17:12:23,144 - #8 Program
INFO  17:12:23,144 - #20 {
INFO  17:12:23,144 - #5 const
INFO  17:12:23,144 - #8 int
INFO  17:12:23,144 - #8 c
INFO  17:12:23,145 - #24 =
INFO  17:12:23,145 - #9 10
INFO  17:12:23,145 - #27 ;
INFO  17:12:23,145 - #5 const
INFO  17:12:23,146 - #8 int
INFO  17:12:23,146 - #8 d
INFO  17:12:23,146 - #24 =
INFO  17:12:23,146 - #9 13
INFO  17:12:23,146 - #27 ;
INFO  17:12:23,147 - #8 int
INFO  17:12:23,147 - #8 e
INFO  17:12:23,147 - #27 ;
INFO  17:12:23,147 - #6 void
INFO  17:12:23,148 - #8 test
INFO  17:12:23,148 - #29 (
INFO  17:12:23,148 - #30 )
INFO  17:12:23,148 - #20 {
INFO  17:12:23,148 - #8 int
INFO  17:12:23,148 - #8 a
INFO  17:12:23,148 - #27 ;
INFO  17:12:23,148 - #8 int
INFO  17:12:23,149 - #8 b
INFO  17:12:23,149 - #27 ;
INFO  17:12:23,149 - #8 a
INFO  17:12:23,149 - #24 =
INFO  17:12:23,150 - #9 3
INFO  17:12:23,150 - #27 ;
INFO  17:12:23,150 - #27 ;
INFO  17:12:23,150 - #8 b
INFO  17:12:23,151 - #24 =
INFO  17:12:23,151 - #9 5
INFO  17:12:23,151 - #27 ;
INFO  17:12:23,151 - #3 print
ERROR 17:12:23,151 - 
Sintaksna greska na liniji -1
ERROR 17:12:23,152 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  17:13:00,612 - #2 program
INFO  17:13:00,613 - #8 Program
INFO  17:13:00,614 - #20 {
INFO  17:13:00,614 - #5 const
INFO  17:13:00,614 - #8 int
INFO  17:13:00,614 - #8 c
INFO  17:13:00,615 - #24 =
INFO  17:13:00,615 - #9 10
INFO  17:13:00,616 - #27 ;
INFO  17:13:00,617 - #5 const
INFO  17:13:00,617 - #8 int
INFO  17:13:00,618 - #8 d
INFO  17:13:00,618 - #24 =
INFO  17:13:00,618 - #9 13
INFO  17:13:00,618 - #27 ;
INFO  17:13:00,618 - #8 int
INFO  17:13:00,619 - #8 e
INFO  17:13:00,619 - #27 ;
INFO  17:13:00,619 - #6 void
INFO  17:13:00,620 - #8 test
INFO  17:13:00,620 - #29 (
INFO  17:13:00,620 - #30 )
INFO  17:13:00,620 - #20 {
INFO  17:13:00,620 - #8 int
INFO  17:13:00,621 - #8 a
INFO  17:13:00,621 - #27 ;
INFO  17:13:00,621 - #8 int
INFO  17:13:00,621 - #8 b
INFO  17:13:00,621 - #27 ;
INFO  17:13:00,621 - #8 a
INFO  17:13:00,622 - #24 =
INFO  17:13:00,622 - #9 3
INFO  17:13:00,623 - #27 ;
INFO  17:13:00,623 - #27 ;
INFO  17:13:00,623 - #8 b
INFO  17:13:00,624 - #24 =
INFO  17:13:00,624 - #9 5
INFO  17:13:00,625 - #27 ;
INFO  17:13:00,625 - #27 ;
INFO  17:13:00,625 - #3 print
INFO  17:13:00,625 - #29 (
INFO  17:13:00,625 - #8 a
INFO  17:13:00,626 - #15 +
INFO  17:13:00,627 - #8 b
INFO  17:13:00,629 - #30 )
INFO  17:13:00,631 - #27 ;
INFO  17:13:00,631 - #21 }
INFO  17:13:00,632 - #8 int
INFO  17:13:00,632 - #8 max
INFO  17:13:00,633 - #29 (
INFO  17:13:00,633 - #8 int
INFO  17:13:00,633 - #8 a
INFO  17:13:00,633 - #28 ,
INFO  17:13:00,634 - #8 int
INFO  17:13:00,636 - #8 b
INFO  17:13:00,636 - #30 )
INFO  17:13:00,637 - #20 {
INFO  17:13:00,637 - #31 if
ERROR 17:13:00,637 - 
Sintaksna greska na liniji -1
ERROR 17:13:00,637 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  17:14:52,952 - #2 program
INFO  17:14:52,953 - #8 Program
INFO  17:14:52,953 - #20 {
INFO  17:14:52,953 - #5 const
INFO  17:14:52,953 - #8 int
INFO  17:14:52,953 - #8 c
INFO  17:14:52,954 - #24 =
INFO  17:14:52,954 - #9 10
INFO  17:14:52,954 - #27 ;
INFO  17:14:52,954 - #5 const
INFO  17:14:52,955 - #8 int
INFO  17:14:52,955 - #8 d
INFO  17:14:52,955 - #24 =
INFO  17:14:52,955 - #9 13
INFO  17:14:52,955 - #27 ;
INFO  17:14:52,956 - #8 int
INFO  17:14:52,956 - #8 e
INFO  17:14:52,956 - #27 ;
INFO  17:14:52,956 - #6 void
INFO  17:14:52,957 - #8 test
INFO  17:14:52,957 - #29 (
INFO  17:14:52,957 - #30 )
INFO  17:14:52,957 - #20 {
INFO  17:14:52,957 - #8 int
INFO  17:14:52,958 - #8 a
INFO  17:14:52,958 - #27 ;
INFO  17:14:52,958 - #8 int
INFO  17:14:52,958 - #8 b
INFO  17:14:52,958 - #27 ;
INFO  17:14:52,958 - #8 a
INFO  17:14:52,959 - #24 =
INFO  17:14:52,959 - #9 3
INFO  17:14:52,959 - #27 ;
INFO  17:14:52,961 - #27 ;
ERROR 17:14:52,961 - 
Sintaksna greska na liniji -1
ERROR 17:14:52,962 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  17:15:29,267 - #2 program
INFO  17:15:29,268 - #8 Program
INFO  17:15:29,268 - #20 {
INFO  17:15:29,268 - #5 const
INFO  17:15:29,268 - #8 int
INFO  17:15:29,268 - #8 c
INFO  17:15:29,269 - #24 =
INFO  17:15:29,269 - #9 10
INFO  17:15:29,269 - #27 ;
INFO  17:15:29,269 - #5 const
INFO  17:15:29,270 - #8 int
INFO  17:15:29,270 - #8 d
INFO  17:15:29,270 - #24 =
INFO  17:15:29,270 - #9 13
INFO  17:15:29,270 - #27 ;
INFO  17:15:29,271 - #8 int
INFO  17:15:29,271 - #8 e
INFO  17:15:29,271 - #27 ;
INFO  17:15:29,271 - #6 void
INFO  17:15:29,271 - #8 test
INFO  17:15:29,272 - #29 (
INFO  17:15:29,272 - #30 )
INFO  17:15:29,272 - #20 {
INFO  17:15:29,272 - #8 int
INFO  17:15:29,272 - #8 a
INFO  17:15:29,272 - #27 ;
INFO  17:15:29,272 - #8 int
INFO  17:15:29,272 - #8 b
INFO  17:15:29,273 - #27 ;
INFO  17:15:29,273 - #8 a
INFO  17:15:29,273 - #24 =
INFO  17:15:29,273 - #9 3
INFO  17:15:29,274 - #27 ;
INFO  17:15:29,274 - #8 b
INFO  17:15:29,275 - #24 =
INFO  17:15:29,275 - #9 5
INFO  17:15:29,275 - #27 ;
INFO  17:15:29,275 - #3 print
INFO  17:15:29,275 - #29 (
INFO  17:15:29,275 - #8 a
INFO  17:15:29,275 - #15 +
INFO  17:15:29,276 - #8 b
INFO  17:15:29,277 - #30 )
INFO  17:15:29,278 - #27 ;
INFO  17:15:29,278 - #21 }
INFO  17:15:29,279 - #8 int
INFO  17:15:29,279 - #8 max
INFO  17:15:29,279 - #29 (
INFO  17:15:29,279 - #8 int
INFO  17:15:29,279 - #8 a
INFO  17:15:29,279 - #28 ,
INFO  17:15:29,280 - #8 int
INFO  17:15:29,280 - #8 b
INFO  17:15:29,280 - #30 )
INFO  17:15:29,280 - #20 {
INFO  17:15:29,280 - #31 if
ERROR 17:15:29,281 - 
Sintaksna greska na liniji -1
ERROR 17:15:29,281 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  17:19:50,836 - #2 program
INFO  17:19:50,837 - #8 Program
INFO  17:19:50,837 - #20 {
INFO  17:19:50,837 - #5 const
INFO  17:19:50,837 - #8 int
INFO  17:19:50,837 - #8 c
INFO  17:19:50,838 - #24 =
INFO  17:19:50,838 - #9 10
INFO  17:19:50,838 - #27 ;
INFO  17:19:50,838 - #5 const
INFO  17:19:50,839 - #8 int
INFO  17:19:50,839 - #8 d
INFO  17:19:50,839 - #24 =
INFO  17:19:50,839 - #9 13
INFO  17:19:50,839 - #27 ;
INFO  17:19:50,840 - #8 int
INFO  17:19:50,840 - #8 e
INFO  17:19:50,840 - #27 ;
INFO  17:19:50,840 - #6 void
INFO  17:19:50,841 - #8 test
INFO  17:19:50,841 - #29 (
INFO  17:19:50,841 - #30 )
INFO  17:19:50,841 - #20 {
INFO  17:19:50,841 - #8 int
INFO  17:19:50,842 - #8 a
INFO  17:19:50,842 - #27 ;
INFO  17:19:50,842 - #8 int
INFO  17:19:50,842 - #8 b
INFO  17:19:50,842 - #27 ;
INFO  17:19:50,842 - #8 a
INFO  17:19:50,843 - #24 =
INFO  17:19:50,843 - #9 3
INFO  17:19:50,843 - #27 ;
INFO  17:19:50,843 - #8 b
INFO  17:19:50,844 - #24 =
INFO  17:19:50,844 - #9 5
INFO  17:19:50,844 - #27 ;
INFO  17:19:50,844 - #3 print
INFO  17:19:50,844 - #29 (
INFO  17:19:50,845 - #8 a
INFO  17:19:50,845 - #15 +
INFO  17:19:50,845 - #8 b
INFO  17:19:50,847 - #30 )
INFO  17:19:50,847 - #27 ;
INFO  17:19:50,847 - #21 }
INFO  17:19:50,848 - #8 int
INFO  17:19:50,848 - #8 max
INFO  17:19:50,848 - #29 (
INFO  17:19:50,848 - #8 int
INFO  17:19:50,849 - #8 a
INFO  17:19:50,849 - #28 ,
INFO  17:19:50,849 - #8 int
INFO  17:19:50,850 - #8 b
INFO  17:19:50,850 - #30 )
INFO  17:19:50,850 - #20 {
INFO  17:19:50,850 - #31 if
INFO  17:19:50,850 - #29 (
INFO  17:19:50,850 - #8 a
INFO  17:19:50,850 - #38 >
INFO  17:19:50,851 - #8 b
INFO  17:19:50,852 - #30 )
INFO  17:19:50,853 - #20 {
INFO  17:19:50,853 - #8 return
INFO  17:19:50,853 - #8 a
ERROR 17:19:50,853 - 
Sintaksna greska na liniji -1
ERROR 17:19:50,853 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  17:25:33,020 - #2 program
INFO  17:25:33,020 - #8 Program
INFO  17:25:33,021 - #20 {
INFO  17:25:33,021 - #5 const
INFO  17:25:33,021 - #8 int
INFO  17:25:33,021 - #8 c
INFO  17:25:33,021 - #24 =
INFO  17:25:33,022 - #9 10
INFO  17:25:33,022 - #27 ;
INFO  17:25:33,022 - #5 const
INFO  17:25:33,023 - #8 int
INFO  17:25:33,023 - #8 d
INFO  17:25:33,023 - #24 =
INFO  17:25:33,023 - #9 13
INFO  17:25:33,023 - #27 ;
INFO  17:25:33,023 - #8 int
INFO  17:25:33,023 - #8 e
INFO  17:25:33,023 - #27 ;
INFO  17:25:33,024 - #6 void
INFO  17:25:33,024 - #8 test
INFO  17:25:33,024 - #29 (
INFO  17:25:33,024 - #30 )
INFO  17:25:33,024 - #20 {
INFO  17:25:33,024 - #8 int
INFO  17:25:33,024 - #8 a
INFO  17:25:33,024 - #27 ;
INFO  17:25:33,025 - #8 int
INFO  17:25:33,025 - #8 b
INFO  17:25:33,025 - #27 ;
INFO  17:25:33,025 - #8 a
INFO  17:25:33,025 - #24 =
INFO  17:25:33,025 - #9 3
INFO  17:25:33,026 - #27 ;
INFO  17:25:33,026 - #8 b
INFO  17:25:33,027 - #24 =
INFO  17:25:33,027 - #9 5
INFO  17:25:33,027 - #27 ;
INFO  17:25:33,027 - #3 print
INFO  17:25:33,027 - #29 (
INFO  17:25:33,027 - #8 a
INFO  17:25:33,027 - #15 +
INFO  17:25:33,028 - #8 b
INFO  17:25:33,029 - #30 )
INFO  17:25:33,030 - #27 ;
INFO  17:25:33,030 - #21 }
INFO  17:25:33,031 - #8 int
INFO  17:25:33,031 - #8 max
INFO  17:25:33,031 - #29 (
INFO  17:25:33,031 - #8 int
INFO  17:25:33,032 - #8 a
INFO  17:25:33,032 - #28 ,
INFO  17:25:33,032 - #8 int
INFO  17:25:33,032 - #8 b
INFO  17:25:33,032 - #30 )
INFO  17:25:33,032 - #20 {
INFO  17:25:33,033 - #31 if
INFO  17:25:33,033 - #29 (
INFO  17:25:33,033 - #8 a
INFO  17:25:33,033 - #38 >
INFO  17:25:33,033 - #8 b
INFO  17:25:33,035 - #30 )
INFO  17:25:33,035 - #20 {
INFO  17:25:33,035 - #8 return
INFO  17:25:33,036 - #9 3
ERROR 17:25:33,036 - 
Sintaksna greska na liniji -1
ERROR 17:25:33,036 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  17:25:54,428 - #2 program
INFO  17:25:54,429 - #8 Program
INFO  17:25:54,429 - #20 {
INFO  17:25:54,429 - #5 const
INFO  17:25:54,429 - #8 int
INFO  17:25:54,429 - #8 c
INFO  17:25:54,429 - #24 =
INFO  17:25:54,430 - #9 10
INFO  17:25:54,430 - #27 ;
INFO  17:25:54,430 - #5 const
INFO  17:25:54,430 - #8 int
INFO  17:25:54,431 - #8 d
INFO  17:25:54,431 - #24 =
INFO  17:25:54,431 - #9 13
INFO  17:25:54,431 - #27 ;
INFO  17:25:54,431 - #8 int
INFO  17:25:54,431 - #8 e
INFO  17:25:54,431 - #27 ;
INFO  17:25:54,431 - #6 void
INFO  17:25:54,432 - #8 test
INFO  17:25:54,432 - #29 (
INFO  17:25:54,432 - #30 )
INFO  17:25:54,432 - #20 {
INFO  17:25:54,432 - #8 int
INFO  17:25:54,432 - #8 a
INFO  17:25:54,432 - #27 ;
INFO  17:25:54,433 - #8 int
INFO  17:25:54,433 - #8 b
INFO  17:25:54,433 - #27 ;
INFO  17:25:54,433 - #8 a
INFO  17:25:54,433 - #24 =
INFO  17:25:54,433 - #9 3
INFO  17:25:54,433 - #27 ;
INFO  17:25:54,434 - #8 b
INFO  17:25:54,434 - #24 =
INFO  17:25:54,434 - #9 5
INFO  17:25:54,435 - #27 ;
INFO  17:25:54,435 - #3 print
INFO  17:25:54,435 - #29 (
INFO  17:25:54,435 - #8 a
INFO  17:25:54,435 - #15 +
INFO  17:25:54,435 - #8 b
INFO  17:25:54,437 - #30 )
INFO  17:25:54,437 - #27 ;
INFO  17:25:54,437 - #21 }
INFO  17:25:54,438 - #8 int
INFO  17:25:54,438 - #8 max
INFO  17:25:54,438 - #29 (
INFO  17:25:54,438 - #8 int
INFO  17:25:54,438 - #8 a
INFO  17:25:54,439 - #28 ,
INFO  17:25:54,439 - #8 int
INFO  17:25:54,439 - #8 b
INFO  17:25:54,439 - #30 )
INFO  17:25:54,439 - #20 {
INFO  17:25:54,439 - #31 if
INFO  17:25:54,440 - #29 (
INFO  17:25:54,440 - #8 a
INFO  17:25:54,440 - #38 >
INFO  17:25:54,440 - #8 b
INFO  17:25:54,442 - #30 )
INFO  17:25:54,443 - #20 {
INFO  17:25:54,443 - #8 return
INFO  17:25:54,443 - #8 a
ERROR 17:25:54,444 - 
Sintaksna greska na liniji -1
ERROR 17:25:54,444 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:00:19,380 - #2 program
INFO  18:00:19,381 - #8 Program
INFO  18:00:19,381 - #20 {
INFO  18:00:19,381 - #5 const
INFO  18:00:19,381 - #8 int
INFO  18:00:19,381 - #8 c
INFO  18:00:19,382 - #24 =
INFO  18:00:19,382 - #9 10
INFO  18:00:19,382 - #27 ;
INFO  18:00:19,382 - #5 const
INFO  18:00:19,383 - #8 int
INFO  18:00:19,383 - #8 d
INFO  18:00:19,383 - #24 =
INFO  18:00:19,383 - #9 13
INFO  18:00:19,383 - #27 ;
INFO  18:00:19,385 - #8 int
INFO  18:00:19,386 - #8 e
INFO  18:00:19,386 - #27 ;
INFO  18:00:19,386 - #6 void
INFO  18:00:19,386 - #8 test
INFO  18:00:19,386 - #29 (
INFO  18:00:19,386 - #30 )
INFO  18:00:19,387 - #20 {
INFO  18:00:19,387 - #8 int
INFO  18:00:19,387 - #8 a
INFO  18:00:19,387 - #27 ;
INFO  18:00:19,387 - #8 int
INFO  18:00:19,387 - #8 b
INFO  18:00:19,387 - #27 ;
INFO  18:00:19,387 - #8 a
INFO  18:00:19,388 - #24 =
INFO  18:00:19,388 - #9 3
INFO  18:00:19,388 - #27 ;
INFO  18:00:19,389 - #8 b
INFO  18:00:19,389 - #24 =
INFO  18:00:19,389 - #9 5
INFO  18:00:19,389 - #27 ;
INFO  18:00:19,389 - #3 print
INFO  18:00:19,390 - #29 (
INFO  18:00:19,390 - #8 a
INFO  18:00:19,390 - #15 +
INFO  18:00:19,391 - #8 b
INFO  18:00:19,393 - #30 )
INFO  18:00:19,394 - #27 ;
INFO  18:00:19,394 - #21 }
INFO  18:00:19,395 - #8 int
INFO  18:00:19,396 - #8 max
INFO  18:00:19,396 - #29 (
INFO  18:00:19,396 - #8 int
INFO  18:00:19,396 - #8 a
INFO  18:00:19,396 - #28 ,
INFO  18:00:19,397 - #8 int
INFO  18:00:19,397 - #8 b
INFO  18:00:19,397 - #30 )
INFO  18:00:19,397 - #20 {
INFO  18:00:19,397 - #31 if
INFO  18:00:19,397 - #29 (
INFO  18:00:19,398 - #8 a
INFO  18:00:19,398 - #38 >
INFO  18:00:19,398 - #8 b
INFO  18:00:19,399 - #30 )
INFO  18:00:19,400 - #20 {
INFO  18:00:19,400 - #8 return
INFO  18:00:19,401 - #8 a
ERROR 18:00:19,401 - 
Sintaksna greska na liniji -1
ERROR 18:00:19,401 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:06:52,563 - #2 program
INFO  18:06:52,564 - #8 Program
INFO  18:06:52,564 - #20 {
INFO  18:06:52,565 - #5 const
INFO  18:06:52,565 - #8 int
INFO  18:06:52,565 - #8 c
INFO  18:06:52,565 - #24 =
INFO  18:06:52,565 - #9 10
INFO  18:06:52,565 - #27 ;
INFO  18:06:52,566 - #5 const
INFO  18:06:52,566 - #8 int
INFO  18:06:52,567 - #8 d
INFO  18:06:52,567 - #24 =
INFO  18:06:52,567 - #9 13
INFO  18:06:52,567 - #27 ;
INFO  18:06:52,567 - #8 int
INFO  18:06:52,568 - #8 e
INFO  18:06:52,568 - #27 ;
INFO  18:06:52,569 - #6 void
INFO  18:06:52,570 - #8 test
INFO  18:06:52,570 - #29 (
INFO  18:06:52,570 - #30 )
INFO  18:06:52,570 - #20 {
INFO  18:06:52,570 - #8 int
INFO  18:06:52,571 - #8 a
INFO  18:06:52,571 - #27 ;
INFO  18:06:52,571 - #8 int
INFO  18:06:52,571 - #8 b
INFO  18:06:52,571 - #27 ;
INFO  18:06:52,571 - #8 a
INFO  18:06:52,572 - #24 =
INFO  18:06:52,573 - #9 3
INFO  18:06:52,573 - #27 ;
INFO  18:06:52,574 - #8 b
INFO  18:06:52,574 - #24 =
INFO  18:06:52,574 - #9 5
INFO  18:06:52,574 - #27 ;
INFO  18:06:52,574 - #3 print
INFO  18:06:52,575 - #29 (
INFO  18:06:52,575 - #8 a
INFO  18:06:52,575 - #15 +
INFO  18:06:52,575 - #8 b
INFO  18:06:52,577 - #30 )
INFO  18:06:52,577 - #27 ;
INFO  18:06:52,578 - #21 }
INFO  18:06:52,578 - #8 int
INFO  18:06:52,578 - #8 max
INFO  18:06:52,578 - #29 (
INFO  18:06:52,579 - #8 int
INFO  18:06:52,579 - #8 a
INFO  18:06:52,579 - #28 ,
INFO  18:06:52,579 - #8 int
INFO  18:06:52,579 - #8 b
INFO  18:06:52,579 - #30 )
INFO  18:06:52,580 - #20 {
INFO  18:06:52,580 - #31 if
INFO  18:06:52,580 - #29 (
INFO  18:06:52,580 - #8 a
INFO  18:06:52,580 - #38 >
INFO  18:06:52,580 - #8 b
INFO  18:06:52,582 - #30 )
INFO  18:06:52,582 - #20 {
INFO  18:06:52,582 - #37 return
INFO  18:06:52,583 - #8 a
INFO  18:06:52,583 - #27 ;
INFO  18:06:52,583 - #21 }
INFO  18:06:52,583 - #32 else
INFO  18:06:52,583 - #37 return
INFO  18:06:52,583 - #8 b
INFO  18:06:52,584 - #27 ;
INFO  18:06:52,584 - #21 }
INFO  18:06:52,584 - #8 int
INFO  18:06:52,584 - #8 min
INFO  18:06:52,585 - #29 (
INFO  18:06:52,585 - #8 int
INFO  18:06:52,585 - #8 a
INFO  18:06:52,585 - #28 ,
INFO  18:06:52,587 - #8 int
INFO  18:06:52,587 - #8 b
INFO  18:06:52,587 - #30 )
INFO  18:06:52,587 - #20 {
INFO  18:06:52,587 - #31 if
INFO  18:06:52,587 - #29 (
INFO  18:06:52,587 - #8 a
INFO  18:06:52,587 - #40 <
INFO  18:06:52,588 - #8 b
INFO  18:06:52,589 - #30 )
INFO  18:06:52,589 - #20 {
INFO  18:06:52,589 - #37 return
INFO  18:06:52,589 - #8 a
INFO  18:06:52,589 - #27 ;
INFO  18:06:52,589 - #21 }
INFO  18:06:52,589 - #32 else
INFO  18:06:52,590 - #20 {
INFO  18:06:52,590 - #37 return
INFO  18:06:52,590 - #8 b
INFO  18:06:52,590 - #27 ;
INFO  18:06:52,590 - #21 }
INFO  18:06:52,590 - #21 }
INFO  18:06:52,590 - #6 void
INFO  18:06:52,590 - #8 main
INFO  18:06:52,591 - #29 (
INFO  18:06:52,591 - #30 )
INFO  18:06:52,591 - #20 {
INFO  18:06:52,591 - #8 int
INFO  18:06:52,591 - #8 a
INFO  18:06:52,591 - #22 [
INFO  18:06:52,591 - #23 ]
INFO  18:06:52,591 - #24 =
ERROR 18:06:52,592 - 
Sintaksna greska na liniji -1
ERROR 18:06:52,592 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:07:51,414 - #2 program
INFO  18:07:51,414 - #8 Program
INFO  18:07:51,414 - #20 {
INFO  18:07:51,415 - #5 const
INFO  18:07:51,415 - #8 int
INFO  18:07:51,415 - #8 c
INFO  18:07:51,415 - #24 =
INFO  18:07:51,415 - #9 10
INFO  18:07:51,415 - #27 ;
INFO  18:07:51,416 - #5 const
INFO  18:07:51,416 - #8 int
INFO  18:07:51,417 - #8 d
INFO  18:07:51,417 - #24 =
INFO  18:07:51,417 - #9 13
INFO  18:07:51,417 - #27 ;
INFO  18:07:51,417 - #8 int
INFO  18:07:51,418 - #8 e
INFO  18:07:51,418 - #27 ;
INFO  18:07:51,418 - #6 void
INFO  18:07:51,419 - #8 test
INFO  18:07:51,419 - #29 (
INFO  18:07:51,419 - #30 )
INFO  18:07:51,419 - #20 {
INFO  18:07:51,419 - #8 int
INFO  18:07:51,419 - #8 a
INFO  18:07:51,419 - #27 ;
INFO  18:07:51,419 - #8 int
INFO  18:07:51,420 - #8 b
INFO  18:07:51,420 - #27 ;
INFO  18:07:51,420 - #8 a
INFO  18:07:51,420 - #24 =
INFO  18:07:51,421 - #9 3
INFO  18:07:51,421 - #27 ;
INFO  18:07:51,422 - #8 b
INFO  18:07:51,422 - #24 =
INFO  18:07:51,422 - #9 5
INFO  18:07:51,422 - #27 ;
INFO  18:07:51,422 - #3 print
INFO  18:07:51,422 - #29 (
INFO  18:07:51,423 - #8 a
INFO  18:07:51,423 - #15 +
INFO  18:07:51,423 - #8 b
INFO  18:07:51,425 - #30 )
INFO  18:07:51,425 - #27 ;
INFO  18:07:51,425 - #21 }
INFO  18:07:51,426 - #8 int
INFO  18:07:51,426 - #8 max
INFO  18:07:51,426 - #29 (
INFO  18:07:51,426 - #8 int
INFO  18:07:51,427 - #8 a
INFO  18:07:51,427 - #28 ,
INFO  18:07:51,427 - #8 int
INFO  18:07:51,427 - #8 b
INFO  18:07:51,427 - #30 )
INFO  18:07:51,428 - #20 {
INFO  18:07:51,428 - #31 if
INFO  18:07:51,428 - #29 (
INFO  18:07:51,428 - #8 a
INFO  18:07:51,428 - #38 >
INFO  18:07:51,428 - #8 b
INFO  18:07:51,430 - #30 )
INFO  18:07:51,430 - #20 {
INFO  18:07:51,430 - #37 return
INFO  18:07:51,431 - #8 a
INFO  18:07:51,431 - #27 ;
INFO  18:07:51,431 - #21 }
INFO  18:07:51,431 - #32 else
INFO  18:07:51,431 - #37 return
INFO  18:07:51,431 - #8 b
INFO  18:07:51,432 - #27 ;
INFO  18:07:51,432 - #21 }
INFO  18:07:51,432 - #8 int
INFO  18:07:51,433 - #8 min
INFO  18:07:51,433 - #29 (
INFO  18:07:51,433 - #8 int
INFO  18:07:51,433 - #8 a
INFO  18:07:51,433 - #28 ,
INFO  18:07:51,433 - #8 int
INFO  18:07:51,433 - #8 b
INFO  18:07:51,433 - #30 )
INFO  18:07:51,433 - #20 {
INFO  18:07:51,434 - #31 if
INFO  18:07:51,434 - #29 (
INFO  18:07:51,434 - #8 a
INFO  18:07:51,434 - #40 <
INFO  18:07:51,434 - #8 b
INFO  18:07:51,435 - #30 )
INFO  18:07:51,435 - #20 {
INFO  18:07:51,435 - #37 return
INFO  18:07:51,435 - #8 a
INFO  18:07:51,435 - #27 ;
INFO  18:07:51,436 - #21 }
INFO  18:07:51,436 - #32 else
INFO  18:07:51,436 - #20 {
INFO  18:07:51,436 - #37 return
INFO  18:07:51,436 - #8 b
INFO  18:07:51,438 - #27 ;
INFO  18:07:51,438 - #21 }
INFO  18:07:51,438 - #21 }
INFO  18:07:51,438 - #6 void
INFO  18:07:51,438 - #8 main
INFO  18:07:51,438 - #29 (
INFO  18:07:51,439 - #30 )
INFO  18:07:51,439 - #20 {
INFO  18:07:51,439 - #8 int
INFO  18:07:51,439 - #8 a
INFO  18:07:51,439 - #22 [
INFO  18:07:51,439 - #23 ]
INFO  18:07:51,439 - #27 ;
INFO  18:07:51,439 - #8 a
INFO  18:07:51,440 - #24 =
INFO  18:07:51,440 - #7 new
INFO  18:07:51,440 - #8 int
INFO  18:07:51,440 - #22 [
INFO  18:07:51,440 - #9 5
INFO  18:07:51,440 - #23 ]
INFO  18:07:51,440 - #27 ;
INFO  18:07:51,441 - #8 int
INFO  18:07:51,441 - #8 b
ERROR 18:07:51,441 - 
Sintaksna greska na liniji -1
ERROR 18:07:51,441 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:08:15,540 - #2 program
INFO  18:08:15,540 - #8 Program
INFO  18:08:15,541 - #20 {
INFO  18:08:15,541 - #5 const
INFO  18:08:15,541 - #8 int
INFO  18:08:15,541 - #8 c
INFO  18:08:15,541 - #24 =
INFO  18:08:15,541 - #9 10
INFO  18:08:15,541 - #27 ;
INFO  18:08:15,542 - #5 const
INFO  18:08:15,542 - #8 int
INFO  18:08:15,542 - #8 d
INFO  18:08:15,542 - #24 =
INFO  18:08:15,543 - #9 13
INFO  18:08:15,543 - #27 ;
INFO  18:08:15,543 - #8 int
INFO  18:08:15,543 - #8 e
INFO  18:08:15,543 - #27 ;
INFO  18:08:15,543 - #6 void
INFO  18:08:15,543 - #8 test
INFO  18:08:15,544 - #29 (
INFO  18:08:15,544 - #30 )
INFO  18:08:15,544 - #20 {
INFO  18:08:15,544 - #8 int
INFO  18:08:15,544 - #8 a
INFO  18:08:15,544 - #27 ;
INFO  18:08:15,544 - #8 int
INFO  18:08:15,544 - #8 b
INFO  18:08:15,544 - #27 ;
INFO  18:08:15,544 - #8 a
INFO  18:08:15,545 - #24 =
INFO  18:08:15,545 - #9 3
INFO  18:08:15,545 - #27 ;
INFO  18:08:15,546 - #8 b
INFO  18:08:15,546 - #24 =
INFO  18:08:15,546 - #9 5
INFO  18:08:15,546 - #27 ;
INFO  18:08:15,546 - #3 print
INFO  18:08:15,546 - #29 (
INFO  18:08:15,546 - #8 a
INFO  18:08:15,547 - #15 +
INFO  18:08:15,547 - #8 b
INFO  18:08:15,548 - #30 )
INFO  18:08:15,549 - #27 ;
INFO  18:08:15,549 - #21 }
INFO  18:08:15,549 - #8 int
INFO  18:08:15,550 - #8 max
INFO  18:08:15,550 - #29 (
INFO  18:08:15,550 - #8 int
INFO  18:08:15,550 - #8 a
INFO  18:08:15,551 - #28 ,
INFO  18:08:15,551 - #8 int
INFO  18:08:15,551 - #8 b
INFO  18:08:15,551 - #30 )
INFO  18:08:15,551 - #20 {
INFO  18:08:15,551 - #31 if
INFO  18:08:15,551 - #29 (
INFO  18:08:15,552 - #8 a
INFO  18:08:15,552 - #38 >
INFO  18:08:15,552 - #8 b
INFO  18:08:15,553 - #30 )
INFO  18:08:15,554 - #20 {
INFO  18:08:15,554 - #37 return
INFO  18:08:15,554 - #8 a
INFO  18:08:15,554 - #27 ;
INFO  18:08:15,554 - #21 }
INFO  18:08:15,554 - #32 else
INFO  18:08:15,555 - #37 return
INFO  18:08:15,555 - #8 b
INFO  18:08:15,555 - #27 ;
INFO  18:08:15,555 - #21 }
INFO  18:08:15,555 - #8 int
INFO  18:08:15,556 - #8 min
INFO  18:08:15,556 - #29 (
INFO  18:08:15,556 - #8 int
INFO  18:08:15,556 - #8 a
INFO  18:08:15,556 - #28 ,
INFO  18:08:15,556 - #8 int
INFO  18:08:15,556 - #8 b
INFO  18:08:15,556 - #30 )
INFO  18:08:15,557 - #20 {
INFO  18:08:15,557 - #31 if
INFO  18:08:15,557 - #29 (
INFO  18:08:15,557 - #8 a
INFO  18:08:15,557 - #40 <
INFO  18:08:15,557 - #8 b
INFO  18:08:15,558 - #30 )
INFO  18:08:15,558 - #20 {
INFO  18:08:15,558 - #37 return
INFO  18:08:15,558 - #8 a
INFO  18:08:15,558 - #27 ;
INFO  18:08:15,558 - #21 }
INFO  18:08:15,558 - #32 else
INFO  18:08:15,558 - #20 {
INFO  18:08:15,559 - #37 return
INFO  18:08:15,559 - #8 b
INFO  18:08:15,559 - #27 ;
INFO  18:08:15,559 - #21 }
INFO  18:08:15,559 - #21 }
INFO  18:08:15,559 - #6 void
INFO  18:08:15,559 - #8 main
INFO  18:08:15,559 - #29 (
INFO  18:08:15,559 - #30 )
INFO  18:08:15,559 - #20 {
INFO  18:08:15,559 - #8 int
INFO  18:08:15,559 - #8 a
INFO  18:08:15,560 - #22 [
INFO  18:08:15,560 - #23 ]
INFO  18:08:15,560 - #27 ;
INFO  18:08:15,560 - #8 int
INFO  18:08:15,560 - #8 b
INFO  18:08:15,560 - #27 ;
INFO  18:08:15,560 - #8 a
INFO  18:08:15,560 - #24 =
INFO  18:08:15,560 - #7 new
INFO  18:08:15,561 - #8 int
INFO  18:08:15,561 - #22 [
INFO  18:08:15,561 - #9 5
INFO  18:08:15,561 - #23 ]
INFO  18:08:15,561 - #27 ;
INFO  18:08:15,561 - #33 do
INFO  18:08:15,561 - #20 {
INFO  18:08:15,561 - #8 a
INFO  18:08:15,561 - #22 [
ERROR 18:08:15,562 - 
Sintaksna greska na liniji -1
ERROR 18:08:15,562 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:14:17,801 - #2 program
INFO  18:14:17,802 - #8 Program
INFO  18:14:17,802 - #20 {
INFO  18:14:17,802 - #5 const
INFO  18:14:17,802 - #8 int
INFO  18:14:17,802 - #8 c
INFO  18:14:17,803 - #24 =
INFO  18:14:17,803 - #9 10
INFO  18:14:17,803 - #27 ;
INFO  18:14:17,804 - #5 const
INFO  18:14:17,804 - #8 int
INFO  18:14:17,804 - #8 d
INFO  18:14:17,805 - #24 =
INFO  18:14:17,805 - #9 13
INFO  18:14:17,805 - #27 ;
INFO  18:14:17,805 - #8 int
INFO  18:14:17,806 - #8 e
INFO  18:14:17,806 - #27 ;
INFO  18:14:17,806 - #6 void
INFO  18:14:17,807 - #8 test
INFO  18:14:17,807 - #29 (
INFO  18:14:17,807 - #30 )
INFO  18:14:17,807 - #20 {
INFO  18:14:17,807 - #8 int
INFO  18:14:17,807 - #8 a
INFO  18:14:17,807 - #27 ;
INFO  18:14:17,808 - #8 int
INFO  18:14:17,808 - #8 b
INFO  18:14:17,808 - #27 ;
INFO  18:14:17,808 - #8 a
INFO  18:14:17,808 - #24 =
INFO  18:14:17,808 - #9 3
INFO  18:14:17,809 - #27 ;
INFO  18:14:17,809 - #8 b
INFO  18:14:17,810 - #24 =
INFO  18:14:17,810 - #9 5
INFO  18:14:17,810 - #27 ;
INFO  18:14:17,812 - #3 print
INFO  18:14:17,812 - #29 (
INFO  18:14:17,812 - #8 a
INFO  18:14:17,812 - #15 +
INFO  18:14:17,813 - #8 b
INFO  18:14:17,815 - #30 )
INFO  18:14:17,815 - #27 ;
INFO  18:14:17,816 - #21 }
INFO  18:14:17,817 - #8 int
INFO  18:14:17,817 - #8 max
INFO  18:14:17,817 - #29 (
INFO  18:14:17,817 - #8 int
INFO  18:14:17,817 - #8 a
INFO  18:14:17,818 - #28 ,
INFO  18:14:17,818 - #8 int
INFO  18:14:17,818 - #8 b
INFO  18:14:17,818 - #30 )
INFO  18:14:17,818 - #20 {
INFO  18:14:17,818 - #31 if
INFO  18:14:17,818 - #29 (
INFO  18:14:17,819 - #8 a
INFO  18:14:17,819 - #38 >
INFO  18:14:17,819 - #8 b
INFO  18:14:17,820 - #30 )
INFO  18:14:17,821 - #20 {
INFO  18:14:17,821 - #37 return
INFO  18:14:17,821 - #8 a
INFO  18:14:17,821 - #27 ;
INFO  18:14:17,821 - #21 }
INFO  18:14:17,821 - #32 else
INFO  18:14:17,822 - #37 return
INFO  18:14:17,822 - #8 b
INFO  18:14:17,822 - #27 ;
INFO  18:14:17,822 - #21 }
INFO  18:14:17,823 - #8 int
INFO  18:14:17,823 - #8 min
INFO  18:14:17,823 - #29 (
INFO  18:14:17,824 - #8 int
INFO  18:14:17,824 - #8 a
INFO  18:14:17,824 - #28 ,
INFO  18:14:17,826 - #8 int
INFO  18:14:17,826 - #8 b
INFO  18:14:17,826 - #30 )
INFO  18:14:17,826 - #20 {
INFO  18:14:17,826 - #31 if
INFO  18:14:17,826 - #29 (
INFO  18:14:17,826 - #8 a
INFO  18:14:17,826 - #40 <
INFO  18:14:17,826 - #8 b
INFO  18:14:17,827 - #30 )
INFO  18:14:17,827 - #20 {
INFO  18:14:17,827 - #37 return
INFO  18:14:17,827 - #8 a
INFO  18:14:17,827 - #27 ;
INFO  18:14:17,827 - #21 }
INFO  18:14:17,828 - #32 else
INFO  18:14:17,828 - #20 {
INFO  18:14:17,828 - #37 return
INFO  18:14:17,828 - #8 b
INFO  18:14:17,828 - #27 ;
INFO  18:14:17,828 - #21 }
INFO  18:14:17,828 - #21 }
INFO  18:14:17,829 - #6 void
INFO  18:14:17,829 - #8 main
INFO  18:14:17,829 - #29 (
INFO  18:14:17,829 - #30 )
INFO  18:14:17,829 - #20 {
INFO  18:14:17,829 - #8 int
INFO  18:14:17,829 - #8 a
INFO  18:14:17,829 - #22 [
INFO  18:14:17,829 - #23 ]
INFO  18:14:17,830 - #27 ;
INFO  18:14:17,830 - #8 int
INFO  18:14:17,830 - #8 b
INFO  18:14:17,830 - #27 ;
INFO  18:14:17,830 - #8 a
INFO  18:14:17,830 - #24 =
INFO  18:14:17,830 - #7 new
INFO  18:14:17,830 - #8 int
INFO  18:14:17,830 - #22 [
INFO  18:14:17,831 - #9 5
INFO  18:14:17,831 - #23 ]
INFO  18:14:17,831 - #27 ;
INFO  18:14:17,831 - #33 do
INFO  18:14:17,831 - #20 {
INFO  18:14:17,831 - #8 a
INFO  18:14:17,831 - #22 [
INFO  18:14:17,831 - #8 i
INFO  18:14:17,831 - #23 ]
INFO  18:14:17,832 - #24 =
INFO  18:14:17,832 - #4 read
ERROR 18:14:17,832 - 
Sintaksna greska na liniji -1
ERROR 18:14:17,832 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:15:12,333 - #2 program
INFO  18:15:12,334 - #8 Program
INFO  18:15:12,335 - #20 {
INFO  18:15:12,335 - #5 const
INFO  18:15:12,335 - #8 int
INFO  18:15:12,335 - #8 c
INFO  18:15:12,335 - #24 =
INFO  18:15:12,335 - #9 10
INFO  18:15:12,335 - #27 ;
INFO  18:15:12,336 - #5 const
INFO  18:15:12,336 - #8 int
INFO  18:15:12,336 - #8 d
INFO  18:15:12,337 - #24 =
INFO  18:15:12,337 - #9 13
INFO  18:15:12,337 - #27 ;
INFO  18:15:12,337 - #8 int
INFO  18:15:12,338 - #8 e
INFO  18:15:12,338 - #27 ;
INFO  18:15:12,338 - #6 void
INFO  18:15:12,339 - #8 test
INFO  18:15:12,339 - #29 (
INFO  18:15:12,339 - #30 )
INFO  18:15:12,339 - #20 {
INFO  18:15:12,339 - #8 int
INFO  18:15:12,339 - #8 a
INFO  18:15:12,339 - #27 ;
INFO  18:15:12,340 - #8 int
INFO  18:15:12,340 - #8 b
INFO  18:15:12,340 - #27 ;
INFO  18:15:12,340 - #8 a
INFO  18:15:12,341 - #24 =
INFO  18:15:12,341 - #9 3
INFO  18:15:12,341 - #27 ;
INFO  18:15:12,342 - #8 b
INFO  18:15:12,342 - #24 =
INFO  18:15:12,342 - #9 5
INFO  18:15:12,342 - #27 ;
INFO  18:15:12,343 - #3 print
INFO  18:15:12,343 - #29 (
INFO  18:15:12,343 - #8 a
INFO  18:15:12,343 - #15 +
INFO  18:15:12,343 - #8 b
INFO  18:15:12,345 - #30 )
INFO  18:15:12,345 - #27 ;
INFO  18:15:12,345 - #21 }
INFO  18:15:12,346 - #8 int
INFO  18:15:12,346 - #8 max
INFO  18:15:12,347 - #29 (
INFO  18:15:12,347 - #8 int
INFO  18:15:12,347 - #8 a
INFO  18:15:12,347 - #28 ,
INFO  18:15:12,347 - #8 int
INFO  18:15:12,347 - #8 b
INFO  18:15:12,347 - #30 )
INFO  18:15:12,348 - #20 {
INFO  18:15:12,348 - #31 if
INFO  18:15:12,348 - #29 (
INFO  18:15:12,348 - #8 a
INFO  18:15:12,348 - #38 >
INFO  18:15:12,348 - #8 b
INFO  18:15:12,350 - #30 )
INFO  18:15:12,350 - #20 {
INFO  18:15:12,350 - #37 return
INFO  18:15:12,351 - #8 a
INFO  18:15:12,351 - #27 ;
INFO  18:15:12,351 - #21 }
INFO  18:15:12,351 - #32 else
INFO  18:15:12,351 - #37 return
INFO  18:15:12,351 - #8 b
INFO  18:15:12,352 - #27 ;
INFO  18:15:12,352 - #21 }
INFO  18:15:12,353 - #8 int
INFO  18:15:12,353 - #8 min
INFO  18:15:12,353 - #29 (
INFO  18:15:12,353 - #8 int
INFO  18:15:12,353 - #8 a
INFO  18:15:12,353 - #28 ,
INFO  18:15:12,355 - #8 int
INFO  18:15:12,356 - #8 b
INFO  18:15:12,356 - #30 )
INFO  18:15:12,356 - #20 {
INFO  18:15:12,356 - #31 if
INFO  18:15:12,356 - #29 (
INFO  18:15:12,356 - #8 a
INFO  18:15:12,356 - #40 <
INFO  18:15:12,356 - #8 b
INFO  18:15:12,357 - #30 )
INFO  18:15:12,357 - #20 {
INFO  18:15:12,357 - #37 return
INFO  18:15:12,357 - #8 a
INFO  18:15:12,357 - #27 ;
INFO  18:15:12,357 - #21 }
INFO  18:15:12,358 - #32 else
INFO  18:15:12,358 - #20 {
INFO  18:15:12,358 - #37 return
INFO  18:15:12,358 - #8 b
INFO  18:15:12,358 - #27 ;
INFO  18:15:12,358 - #21 }
INFO  18:15:12,358 - #21 }
INFO  18:15:12,358 - #6 void
INFO  18:15:12,358 - #8 main
INFO  18:15:12,358 - #29 (
INFO  18:15:12,359 - #30 )
INFO  18:15:12,359 - #20 {
INFO  18:15:12,359 - #8 int
INFO  18:15:12,359 - #8 a
INFO  18:15:12,359 - #22 [
INFO  18:15:12,359 - #23 ]
INFO  18:15:12,359 - #27 ;
INFO  18:15:12,359 - #8 int
INFO  18:15:12,359 - #8 b
INFO  18:15:12,360 - #27 ;
INFO  18:15:12,360 - #8 a
INFO  18:15:12,360 - #24 =
INFO  18:15:12,360 - #7 new
INFO  18:15:12,360 - #8 int
INFO  18:15:12,360 - #22 [
INFO  18:15:12,360 - #9 5
INFO  18:15:12,360 - #23 ]
INFO  18:15:12,360 - #27 ;
INFO  18:15:12,360 - #33 do
INFO  18:15:12,361 - #20 {
INFO  18:15:12,361 - #8 a
INFO  18:15:12,361 - #22 [
INFO  18:15:12,361 - #8 i
INFO  18:15:12,361 - #23 ]
INFO  18:15:12,361 - #24 =
INFO  18:15:12,361 - #4 read
ERROR 18:15:12,361 - 
Sintaksna greska na liniji -1
ERROR 18:15:12,362 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:15:46,406 - #2 program
INFO  18:15:46,407 - #8 Program
INFO  18:15:46,407 - #20 {
INFO  18:15:46,407 - #5 const
INFO  18:15:46,407 - #8 int
INFO  18:15:46,407 - #8 c
INFO  18:15:46,407 - #24 =
INFO  18:15:46,408 - #9 10
INFO  18:15:46,408 - #27 ;
INFO  18:15:46,408 - #5 const
INFO  18:15:46,409 - #8 int
INFO  18:15:46,409 - #8 d
INFO  18:15:46,409 - #24 =
INFO  18:15:46,409 - #9 13
INFO  18:15:46,409 - #27 ;
INFO  18:15:46,409 - #8 int
INFO  18:15:46,409 - #8 e
INFO  18:15:46,409 - #27 ;
INFO  18:15:46,409 - #6 void
INFO  18:15:46,410 - #8 test
INFO  18:15:46,410 - #29 (
INFO  18:15:46,410 - #30 )
INFO  18:15:46,410 - #20 {
INFO  18:15:46,410 - #8 int
INFO  18:15:46,410 - #8 a
INFO  18:15:46,410 - #27 ;
INFO  18:15:46,411 - #8 int
INFO  18:15:46,411 - #8 b
INFO  18:15:46,411 - #27 ;
INFO  18:15:46,411 - #8 a
INFO  18:15:46,411 - #24 =
INFO  18:15:46,411 - #9 3
INFO  18:15:46,412 - #27 ;
INFO  18:15:46,412 - #8 b
INFO  18:15:46,413 - #24 =
INFO  18:15:46,413 - #9 5
INFO  18:15:46,413 - #27 ;
INFO  18:15:46,413 - #3 print
INFO  18:15:46,413 - #29 (
INFO  18:15:46,413 - #8 a
INFO  18:15:46,413 - #15 +
INFO  18:15:46,413 - #8 b
INFO  18:15:46,415 - #30 )
INFO  18:15:46,417 - #27 ;
INFO  18:15:46,417 - #21 }
INFO  18:15:46,418 - #8 int
INFO  18:15:46,419 - #8 max
INFO  18:15:46,419 - #29 (
INFO  18:15:46,419 - #8 int
INFO  18:15:46,420 - #8 a
INFO  18:15:46,420 - #28 ,
INFO  18:15:46,420 - #8 int
INFO  18:15:46,420 - #8 b
INFO  18:15:46,420 - #30 )
INFO  18:15:46,421 - #20 {
INFO  18:15:46,421 - #31 if
INFO  18:15:46,421 - #29 (
INFO  18:15:46,421 - #8 a
INFO  18:15:46,421 - #38 >
INFO  18:15:46,421 - #8 b
INFO  18:15:46,423 - #30 )
INFO  18:15:46,424 - #20 {
INFO  18:15:46,424 - #37 return
INFO  18:15:46,424 - #8 a
INFO  18:15:46,424 - #27 ;
INFO  18:15:46,424 - #21 }
INFO  18:15:46,425 - #32 else
INFO  18:15:46,425 - #37 return
INFO  18:15:46,425 - #8 b
INFO  18:15:46,425 - #27 ;
INFO  18:15:46,425 - #21 }
INFO  18:15:46,425 - #8 int
INFO  18:15:46,426 - #8 min
INFO  18:15:46,426 - #29 (
INFO  18:15:46,426 - #8 int
INFO  18:15:46,426 - #8 a
INFO  18:15:46,426 - #28 ,
INFO  18:15:46,428 - #8 int
INFO  18:15:46,428 - #8 b
INFO  18:15:46,428 - #30 )
INFO  18:15:46,428 - #20 {
INFO  18:15:46,428 - #31 if
INFO  18:15:46,428 - #29 (
INFO  18:15:46,429 - #8 a
INFO  18:15:46,429 - #40 <
INFO  18:15:46,429 - #8 b
INFO  18:15:46,430 - #30 )
INFO  18:15:46,430 - #20 {
INFO  18:15:46,430 - #37 return
INFO  18:15:46,430 - #8 a
INFO  18:15:46,430 - #27 ;
INFO  18:15:46,430 - #21 }
INFO  18:15:46,430 - #32 else
INFO  18:15:46,430 - #20 {
INFO  18:15:46,430 - #37 return
INFO  18:15:46,430 - #8 b
INFO  18:15:46,430 - #27 ;
INFO  18:15:46,431 - #21 }
INFO  18:15:46,431 - #21 }
INFO  18:15:46,431 - #6 void
INFO  18:15:46,431 - #8 main
INFO  18:15:46,431 - #29 (
INFO  18:15:46,431 - #30 )
INFO  18:15:46,431 - #20 {
INFO  18:15:46,431 - #8 int
INFO  18:15:46,431 - #8 a
INFO  18:15:46,431 - #22 [
INFO  18:15:46,431 - #23 ]
INFO  18:15:46,432 - #27 ;
INFO  18:15:46,432 - #8 int
INFO  18:15:46,432 - #8 b
INFO  18:15:46,432 - #27 ;
INFO  18:15:46,432 - #8 a
INFO  18:15:46,432 - #24 =
INFO  18:15:46,432 - #7 new
INFO  18:15:46,433 - #8 int
INFO  18:15:46,433 - #22 [
INFO  18:15:46,433 - #9 5
INFO  18:15:46,433 - #23 ]
INFO  18:15:46,433 - #27 ;
INFO  18:15:46,434 - #33 do
INFO  18:15:46,434 - #20 {
INFO  18:15:46,434 - #8 a
INFO  18:15:46,434 - #22 [
INFO  18:15:46,434 - #8 i
INFO  18:15:46,435 - #23 ]
INFO  18:15:46,435 - #24 =
INFO  18:15:46,435 - #4 read
ERROR 18:15:46,435 - 
Sintaksna greska na liniji -1
ERROR 18:15:46,435 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:16:36,029 - #2 program
INFO  18:16:36,030 - #8 Program
INFO  18:16:36,030 - #20 {
INFO  18:16:36,030 - #5 const
INFO  18:16:36,030 - #8 int
INFO  18:16:36,030 - #8 c
INFO  18:16:36,031 - #24 =
INFO  18:16:36,031 - #9 10
INFO  18:16:36,031 - #27 ;
INFO  18:16:36,031 - #5 const
INFO  18:16:36,032 - #8 int
INFO  18:16:36,032 - #8 d
INFO  18:16:36,032 - #24 =
INFO  18:16:36,032 - #9 13
INFO  18:16:36,032 - #27 ;
INFO  18:16:36,033 - #8 int
INFO  18:16:36,033 - #8 e
INFO  18:16:36,033 - #27 ;
INFO  18:16:36,033 - #6 void
INFO  18:16:36,034 - #8 test
INFO  18:16:36,034 - #29 (
INFO  18:16:36,034 - #30 )
INFO  18:16:36,034 - #20 {
INFO  18:16:36,034 - #8 int
INFO  18:16:36,034 - #8 a
INFO  18:16:36,035 - #27 ;
INFO  18:16:36,035 - #8 int
INFO  18:16:36,035 - #8 b
INFO  18:16:36,035 - #27 ;
INFO  18:16:36,035 - #8 a
INFO  18:16:36,035 - #24 =
INFO  18:16:36,036 - #9 3
INFO  18:16:36,036 - #27 ;
INFO  18:16:36,036 - #8 b
INFO  18:16:36,037 - #24 =
INFO  18:16:36,037 - #9 5
INFO  18:16:36,037 - #27 ;
INFO  18:16:36,037 - #3 print
INFO  18:16:36,038 - #29 (
INFO  18:16:36,038 - #8 a
INFO  18:16:36,038 - #15 +
INFO  18:16:36,038 - #8 b
INFO  18:16:36,040 - #30 )
INFO  18:16:36,042 - #27 ;
INFO  18:16:36,042 - #21 }
INFO  18:16:36,043 - #8 int
INFO  18:16:36,043 - #8 max
INFO  18:16:36,043 - #29 (
INFO  18:16:36,043 - #8 int
INFO  18:16:36,043 - #8 a
INFO  18:16:36,043 - #28 ,
INFO  18:16:36,044 - #8 int
INFO  18:16:36,044 - #8 b
INFO  18:16:36,044 - #30 )
INFO  18:16:36,044 - #20 {
INFO  18:16:36,044 - #31 if
INFO  18:16:36,045 - #29 (
INFO  18:16:36,045 - #8 a
INFO  18:16:36,045 - #38 >
INFO  18:16:36,045 - #8 b
INFO  18:16:36,047 - #30 )
INFO  18:16:36,048 - #20 {
INFO  18:16:36,048 - #37 return
INFO  18:16:36,048 - #8 a
INFO  18:16:36,048 - #27 ;
INFO  18:16:36,048 - #21 }
INFO  18:16:36,048 - #32 else
INFO  18:16:36,049 - #37 return
INFO  18:16:36,050 - #8 b
INFO  18:16:36,050 - #27 ;
INFO  18:16:36,050 - #21 }
INFO  18:16:36,051 - #8 int
INFO  18:16:36,051 - #8 min
INFO  18:16:36,051 - #29 (
INFO  18:16:36,051 - #8 int
INFO  18:16:36,051 - #8 a
INFO  18:16:36,051 - #28 ,
INFO  18:16:36,054 - #8 int
INFO  18:16:36,054 - #8 b
INFO  18:16:36,054 - #30 )
INFO  18:16:36,054 - #20 {
INFO  18:16:36,054 - #31 if
INFO  18:16:36,054 - #29 (
INFO  18:16:36,054 - #8 a
INFO  18:16:36,054 - #40 <
INFO  18:16:36,055 - #8 b
INFO  18:16:36,056 - #30 )
INFO  18:16:36,056 - #20 {
INFO  18:16:36,056 - #37 return
INFO  18:16:36,056 - #8 a
INFO  18:16:36,056 - #27 ;
INFO  18:16:36,057 - #21 }
INFO  18:16:36,057 - #32 else
INFO  18:16:36,057 - #20 {
INFO  18:16:36,057 - #37 return
INFO  18:16:36,057 - #8 b
INFO  18:16:36,058 - #27 ;
INFO  18:16:36,058 - #21 }
INFO  18:16:36,058 - #21 }
INFO  18:16:36,058 - #6 void
INFO  18:16:36,058 - #8 main
INFO  18:16:36,058 - #29 (
INFO  18:16:36,058 - #30 )
INFO  18:16:36,058 - #20 {
INFO  18:16:36,058 - #8 int
INFO  18:16:36,058 - #8 a
INFO  18:16:36,059 - #22 [
INFO  18:16:36,059 - #23 ]
INFO  18:16:36,059 - #27 ;
INFO  18:16:36,059 - #8 a
INFO  18:16:36,059 - #24 =
INFO  18:16:36,059 - #7 new
INFO  18:16:36,059 - #8 int
INFO  18:16:36,059 - #22 [
INFO  18:16:36,060 - #9 5
INFO  18:16:36,060 - #23 ]
INFO  18:16:36,060 - #27 ;
INFO  18:16:36,060 - #33 do
INFO  18:16:36,060 - #20 {
INFO  18:16:36,060 - #4 read
INFO  18:16:36,060 - #29 (
INFO  18:16:36,061 - #8 a
INFO  18:16:36,061 - #22 [
INFO  18:16:36,061 - #8 i
INFO  18:16:36,061 - #23 ]
INFO  18:16:36,061 - #30 )
INFO  18:16:36,061 - #27 ;
INFO  18:16:36,061 - #31 if
INFO  18:16:36,062 - #29 (
INFO  18:16:36,062 - #8 a
INFO  18:16:36,062 - #22 [
INFO  18:16:36,062 - #8 i
INFO  18:16:36,062 - #23 ]
INFO  18:16:36,062 - #19 %
INFO  18:16:36,062 - #9 3
INFO  18:16:36,064 - #39 ==
INFO  18:16:36,065 - #9 0
INFO  18:16:36,066 - #30 )
INFO  18:16:36,066 - #3 print
INFO  18:16:36,066 - #29 (
INFO  18:16:36,067 - #8 a
INFO  18:16:36,067 - #22 [
INFO  18:16:36,067 - #8 i
INFO  18:16:36,067 - #23 ]
INFO  18:16:36,067 - #30 )
INFO  18:16:36,067 - #27 ;
INFO  18:16:36,067 - #32 else
INFO  18:16:36,067 - #3 print
INFO  18:16:36,068 - #29 (
INFO  18:16:36,068 - #8 max
INFO  18:16:36,068 - #29 (
INFO  18:16:36,068 - #8 a
INFO  18:16:36,068 - #22 [
INFO  18:16:36,068 - #8 i
INFO  18:16:36,068 - #23 ]
INFO  18:16:36,068 - #28 ,
INFO  18:16:36,068 - #9 0
INFO  18:16:36,069 - #30 )
INFO  18:16:36,069 - #30 )
INFO  18:16:36,070 - #27 ;
INFO  18:16:36,070 - #21 }
INFO  18:16:36,070 - #34 while
INFO  18:16:36,070 - #29 (
INFO  18:16:36,070 - #8 i
INFO  18:16:36,070 - #40 <
INFO  18:16:36,070 - #9 5
INFO  18:16:36,070 - #30 )
INFO  18:16:36,070 - #27 ;
INFO  18:16:36,070 - #3 print
INFO  18:16:36,071 - #29 (
INFO  18:16:36,071 - #8 c
INFO  18:16:36,071 - #30 )
INFO  18:16:36,071 - #27 ;
INFO  18:16:36,071 - #21 }
INFO  18:16:36,071 - #21 }
INFO  18:18:44,467 - #2 program
INFO  18:18:44,468 - #8 Program
INFO  18:18:44,468 - #20 {
INFO  18:18:44,468 - #5 const
INFO  18:18:44,468 - #8 int
INFO  18:18:44,468 - #8 c
INFO  18:18:44,469 - #24 =
INFO  18:18:44,469 - #9 10
INFO  18:18:44,469 - #27 ;
INFO  18:18:44,469 - #5 const
INFO  18:18:44,470 - #8 int
INFO  18:18:44,470 - #8 d
INFO  18:18:44,470 - #24 =
INFO  18:18:44,470 - #9 13
INFO  18:18:44,470 - #27 ;
INFO  18:18:44,471 - #8 int
INFO  18:18:44,471 - #8 e
INFO  18:18:44,471 - #27 ;
INFO  18:18:44,471 - #6 void
INFO  18:18:44,472 - #8 test
INFO  18:18:44,472 - #29 (
INFO  18:18:44,472 - #30 )
INFO  18:18:44,472 - #20 {
INFO  18:18:44,473 - #8 int
INFO  18:18:44,473 - #8 a
INFO  18:18:44,473 - #27 ;
INFO  18:18:44,473 - #8 int
INFO  18:18:44,474 - #8 b
INFO  18:18:44,474 - #27 ;
INFO  18:18:44,474 - #8 a
INFO  18:18:44,475 - #24 =
INFO  18:18:44,475 - #9 3
INFO  18:18:44,475 - #27 ;
INFO  18:18:44,476 - #8 b
INFO  18:18:44,476 - #24 =
INFO  18:18:44,476 - #9 5
INFO  18:18:44,476 - #27 ;
INFO  18:18:44,477 - #31 if
INFO  18:18:44,477 - #29 (
INFO  18:18:44,477 - #8 a
INFO  18:18:44,477 - #16 -
INFO  18:18:44,477 - #8 b
INFO  18:18:44,479 - #38 >
INFO  18:18:44,480 - #9 0
INFO  18:18:44,482 - #30 )
INFO  18:18:44,483 - #3 print
INFO  18:18:44,483 - #29 (
INFO  18:18:44,483 - #8 a
INFO  18:18:44,483 - #15 +
INFO  18:18:44,484 - #8 b
INFO  18:18:44,485 - #30 )
INFO  18:18:44,485 - #27 ;
INFO  18:18:44,486 - #21 }
INFO  18:18:44,486 - #8 int
INFO  18:18:44,489 - #8 max
INFO  18:18:44,489 - #29 (
INFO  18:18:44,489 - #8 int
INFO  18:18:44,489 - #8 a
INFO  18:18:44,489 - #28 ,
INFO  18:18:44,490 - #8 int
INFO  18:18:44,490 - #8 b
INFO  18:18:44,490 - #30 )
INFO  18:18:44,490 - #20 {
INFO  18:18:44,490 - #31 if
INFO  18:18:44,491 - #29 (
INFO  18:18:44,491 - #8 a
INFO  18:18:44,491 - #38 >
INFO  18:18:44,491 - #8 b
INFO  18:18:44,491 - #30 )
INFO  18:18:44,491 - #20 {
INFO  18:18:44,491 - #37 return
INFO  18:18:44,492 - #8 a
INFO  18:18:44,492 - #27 ;
INFO  18:18:44,492 - #21 }
INFO  18:18:44,492 - #32 else
INFO  18:18:44,492 - #37 return
INFO  18:18:44,492 - #8 b
INFO  18:18:44,495 - #27 ;
INFO  18:18:44,495 - #21 }
INFO  18:18:44,496 - #8 int
INFO  18:18:44,496 - #8 min
INFO  18:18:44,496 - #29 (
INFO  18:18:44,496 - #8 int
INFO  18:18:44,496 - #8 a
INFO  18:18:44,496 - #28 ,
INFO  18:18:44,497 - #8 int
INFO  18:18:44,497 - #8 b
INFO  18:18:44,497 - #30 )
INFO  18:18:44,497 - #20 {
INFO  18:18:44,497 - #31 if
INFO  18:18:44,497 - #29 (
INFO  18:18:44,497 - #8 a
INFO  18:18:44,497 - #40 <
INFO  18:18:44,497 - #8 b
INFO  18:18:44,498 - #30 )
INFO  18:18:44,498 - #20 {
INFO  18:18:44,499 - #37 return
INFO  18:18:44,499 - #8 a
INFO  18:18:44,499 - #27 ;
INFO  18:18:44,499 - #21 }
INFO  18:18:44,500 - #32 else
INFO  18:18:44,500 - #20 {
INFO  18:18:44,500 - #37 return
INFO  18:18:44,500 - #8 b
INFO  18:18:44,500 - #27 ;
INFO  18:18:44,500 - #21 }
INFO  18:18:44,500 - #21 }
INFO  18:18:44,500 - #6 void
INFO  18:18:44,501 - #8 main
INFO  18:18:44,501 - #29 (
INFO  18:18:44,501 - #30 )
INFO  18:18:44,501 - #20 {
INFO  18:18:44,501 - #8 int
INFO  18:18:44,501 - #8 a
INFO  18:18:44,502 - #22 [
INFO  18:18:44,502 - #23 ]
INFO  18:18:44,502 - #27 ;
INFO  18:18:44,502 - #8 test
INFO  18:18:44,502 - #29 (
INFO  18:18:44,502 - #30 )
INFO  18:18:44,502 - #27 ;
INFO  18:18:44,502 - #8 a
INFO  18:18:44,502 - #24 =
INFO  18:18:44,502 - #7 new
INFO  18:18:44,503 - #8 int
INFO  18:18:44,503 - #22 [
INFO  18:18:44,503 - #9 5
INFO  18:18:44,503 - #23 ]
INFO  18:18:44,503 - #27 ;
INFO  18:18:44,503 - #33 do
INFO  18:18:44,504 - #20 {
INFO  18:18:44,504 - #4 read
INFO  18:18:44,504 - #29 (
INFO  18:18:44,504 - #8 a
INFO  18:18:44,504 - #22 [
INFO  18:18:44,504 - #8 i
INFO  18:18:44,504 - #23 ]
INFO  18:18:44,504 - #30 )
INFO  18:18:44,505 - #27 ;
INFO  18:18:44,505 - #31 if
INFO  18:18:44,505 - #29 (
INFO  18:18:44,505 - #8 a
INFO  18:18:44,505 - #22 [
INFO  18:18:44,505 - #8 i
INFO  18:18:44,505 - #23 ]
INFO  18:18:44,505 - #19 %
INFO  18:18:44,505 - #9 3
INFO  18:18:44,507 - #39 ==
INFO  18:18:44,507 - #9 0
INFO  18:18:44,509 - #30 )
INFO  18:18:44,509 - #3 print
INFO  18:18:44,509 - #29 (
INFO  18:18:44,509 - #8 a
INFO  18:18:44,509 - #22 [
INFO  18:18:44,509 - #8 i
INFO  18:18:44,509 - #23 ]
INFO  18:18:44,509 - #30 )
INFO  18:18:44,509 - #27 ;
INFO  18:18:44,509 - #32 else
INFO  18:18:44,510 - #3 print
INFO  18:18:44,510 - #29 (
INFO  18:18:44,510 - #8 max
INFO  18:18:44,510 - #29 (
INFO  18:18:44,511 - #8 a
INFO  18:18:44,511 - #22 [
INFO  18:18:44,511 - #8 i
INFO  18:18:44,511 - #23 ]
INFO  18:18:44,511 - #28 ,
INFO  18:18:44,511 - #9 0
INFO  18:18:44,512 - #30 )
INFO  18:18:44,512 - #30 )
INFO  18:18:44,512 - #27 ;
INFO  18:18:44,512 - #21 }
INFO  18:18:44,512 - #34 while
INFO  18:18:44,513 - #29 (
INFO  18:18:44,513 - #8 i
INFO  18:18:44,513 - #40 <
INFO  18:18:44,513 - #9 5
INFO  18:18:44,513 - #30 )
INFO  18:18:44,513 - #27 ;
INFO  18:18:44,513 - #3 print
INFO  18:18:44,513 - #29 (
INFO  18:18:44,514 - #8 c
INFO  18:18:44,514 - #30 )
INFO  18:18:44,514 - #27 ;
INFO  18:18:44,514 - #21 }
INFO  18:18:44,514 - #21 }
INFO  18:23:22,155 - #2 program
INFO  18:23:22,156 - #8 Program
INFO  18:23:22,156 - #20 {
INFO  18:23:22,156 - #5 const
INFO  18:23:22,156 - #8 int
INFO  18:23:22,156 - #8 c
INFO  18:23:22,157 - #24 =
INFO  18:23:22,157 - #9 10
INFO  18:23:22,157 - #27 ;
INFO  18:23:22,157 - #5 const
INFO  18:23:22,158 - #8 int
INFO  18:23:22,158 - #8 d
INFO  18:23:22,158 - #24 =
INFO  18:23:22,158 - #9 13
INFO  18:23:22,158 - #27 ;
INFO  18:23:22,158 - #8 int
INFO  18:23:22,159 - #8 e
INFO  18:23:22,159 - #27 ;
INFO  18:23:22,159 - #6 void
INFO  18:23:22,159 - #8 test
INFO  18:23:22,160 - #29 (
INFO  18:23:22,160 - #30 )
INFO  18:23:22,160 - #20 {
INFO  18:23:22,160 - #8 int
INFO  18:23:22,160 - #8 a
INFO  18:23:22,160 - #27 ;
INFO  18:23:22,160 - #8 int
INFO  18:23:22,161 - #8 b
INFO  18:23:22,161 - #27 ;
INFO  18:23:22,161 - #8 a
INFO  18:23:22,161 - #24 =
INFO  18:23:22,161 - #9 3
INFO  18:23:22,161 - #27 ;
INFO  18:23:22,162 - #8 b
INFO  18:23:22,162 - #24 =
INFO  18:23:22,163 - #9 5
INFO  18:23:22,163 - #27 ;
INFO  18:23:22,163 - #31 if
INFO  18:23:22,163 - #29 (
INFO  18:23:22,163 - #8 a
INFO  18:23:22,163 - #16 -
INFO  18:23:22,164 - #8 b
INFO  18:23:22,165 - #38 >
INFO  18:23:22,166 - #9 0
INFO  18:23:22,167 - #30 )
INFO  18:23:22,168 - #3 print
INFO  18:23:22,168 - #29 (
INFO  18:23:22,168 - #8 a
INFO  18:23:22,169 - #15 +
INFO  18:23:22,169 - #8 b
INFO  18:23:22,170 - #30 )
INFO  18:23:22,170 - #27 ;
INFO  18:23:22,170 - #21 }
INFO  18:23:22,171 - #8 int
INFO  18:23:22,171 - #8 max
INFO  18:23:22,171 - #29 (
INFO  18:23:22,171 - #8 int
INFO  18:23:22,171 - #8 a
INFO  18:23:22,172 - #28 ,
INFO  18:23:22,172 - #8 int
INFO  18:23:22,172 - #8 b
INFO  18:23:22,172 - #30 )
INFO  18:23:22,173 - #20 {
INFO  18:23:22,173 - #31 if
INFO  18:23:22,173 - #29 (
INFO  18:23:22,173 - #8 a
INFO  18:23:22,173 - #38 >
INFO  18:23:22,173 - #8 b
INFO  18:23:22,173 - #30 )
INFO  18:23:22,174 - #20 {
INFO  18:23:22,174 - #37 return
INFO  18:23:22,174 - #8 a
INFO  18:23:22,174 - #27 ;
INFO  18:23:22,174 - #21 }
INFO  18:23:22,174 - #32 else
INFO  18:23:22,174 - #37 return
INFO  18:23:22,175 - #8 b
INFO  18:23:22,175 - #27 ;
INFO  18:23:22,175 - #21 }
INFO  18:23:22,175 - #8 int
INFO  18:23:22,176 - #8 min
INFO  18:23:22,176 - #29 (
INFO  18:23:22,176 - #8 int
INFO  18:23:22,176 - #8 a
INFO  18:23:22,176 - #28 ,
INFO  18:23:22,176 - #8 int
INFO  18:23:22,176 - #8 b
INFO  18:23:22,176 - #30 )
INFO  18:23:22,176 - #20 {
INFO  18:23:22,177 - #31 if
INFO  18:23:22,177 - #29 (
INFO  18:23:22,177 - #8 a
INFO  18:23:22,177 - #40 <
INFO  18:23:22,177 - #8 b
INFO  18:23:22,178 - #30 )
INFO  18:23:22,178 - #20 {
INFO  18:23:22,178 - #37 return
INFO  18:23:22,178 - #8 a
INFO  18:23:22,178 - #27 ;
INFO  18:23:22,179 - #21 }
INFO  18:23:22,179 - #32 else
INFO  18:23:22,179 - #20 {
INFO  18:23:22,179 - #37 return
INFO  18:23:22,179 - #8 b
INFO  18:23:22,179 - #27 ;
INFO  18:23:22,179 - #21 }
INFO  18:23:22,179 - #21 }
INFO  18:23:22,180 - #6 void
INFO  18:23:22,180 - #8 main
INFO  18:23:22,180 - #29 (
INFO  18:23:22,180 - #30 )
INFO  18:23:22,180 - #20 {
INFO  18:23:22,180 - #8 int
INFO  18:23:22,180 - #8 a
INFO  18:23:22,180 - #22 [
INFO  18:23:22,180 - #23 ]
INFO  18:23:22,181 - #27 ;
INFO  18:23:22,181 - #8 int
INFO  18:23:22,181 - #8 length
INFO  18:23:22,181 - #27 ;
INFO  18:23:22,181 - #8 length
INFO  18:23:22,182 - #24 =
INFO  18:23:22,182 - #8 c
INFO  18:23:22,182 - #27 ;
INFO  18:23:22,182 - #8 test
INFO  18:23:22,182 - #29 (
INFO  18:23:22,182 - #30 )
INFO  18:23:22,183 - #27 ;
INFO  18:23:22,183 - #31 if
INFO  18:23:22,183 - #29 (
INFO  18:23:22,183 - #8 length
INFO  18:23:22,183 - #38 >
INFO  18:23:22,183 - #9 0
INFO  18:23:22,183 - #30 )
INFO  18:23:22,184 - #8 a
INFO  18:23:22,184 - #24 =
INFO  18:23:22,184 - #7 new
INFO  18:23:22,184 - #8 int
INFO  18:23:22,184 - #22 [
INFO  18:23:22,184 - #8 length
INFO  18:23:22,184 - #23 ]
INFO  18:23:22,186 - #27 ;
INFO  18:23:22,186 - #32 else
INFO  18:23:22,186 - #8 a
INFO  18:23:22,187 - #24 =
INFO  18:23:22,187 - #7 new
INFO  18:23:22,187 - #8 int
INFO  18:23:22,187 - #22 [
INFO  18:23:22,187 - #9 5
INFO  18:23:22,187 - #23 ]
INFO  18:23:22,187 - #27 ;
INFO  18:23:22,187 - #33 do
INFO  18:23:22,187 - #20 {
INFO  18:23:22,187 - #4 read
INFO  18:23:22,188 - #29 (
INFO  18:23:22,188 - #8 a
INFO  18:23:22,188 - #22 [
INFO  18:23:22,189 - #8 i
INFO  18:23:22,189 - #23 ]
INFO  18:23:22,189 - #30 )
INFO  18:23:22,189 - #27 ;
INFO  18:23:22,189 - #31 if
INFO  18:23:22,189 - #29 (
INFO  18:23:22,189 - #8 a
INFO  18:23:22,189 - #22 [
INFO  18:23:22,189 - #8 i
INFO  18:23:22,190 - #23 ]
INFO  18:23:22,190 - #19 %
INFO  18:23:22,190 - #9 3
INFO  18:23:22,191 - #39 ==
INFO  18:23:22,192 - #9 0
INFO  18:23:22,193 - #30 )
INFO  18:23:22,193 - #3 print
INFO  18:23:22,193 - #29 (
INFO  18:23:22,194 - #8 a
INFO  18:23:22,194 - #22 [
INFO  18:23:22,194 - #8 i
INFO  18:23:22,194 - #23 ]
INFO  18:23:22,194 - #30 )
INFO  18:23:22,194 - #27 ;
INFO  18:23:22,194 - #32 else
INFO  18:23:22,194 - #3 print
INFO  18:23:22,194 - #29 (
INFO  18:23:22,194 - #8 max
INFO  18:23:22,194 - #29 (
INFO  18:23:22,196 - #8 a
INFO  18:23:22,196 - #22 [
INFO  18:23:22,196 - #8 i
INFO  18:23:22,196 - #23 ]
INFO  18:23:22,196 - #28 ,
INFO  18:23:22,196 - #9 0
INFO  18:23:22,196 - #30 )
INFO  18:23:22,197 - #30 )
INFO  18:23:22,197 - #27 ;
INFO  18:23:22,197 - #21 }
INFO  18:23:22,197 - #34 while
INFO  18:23:22,197 - #29 (
INFO  18:23:22,198 - #8 i
INFO  18:23:22,198 - #40 <
INFO  18:23:22,198 - #9 5
INFO  18:23:22,198 - #30 )
INFO  18:23:22,198 - #27 ;
INFO  18:23:22,198 - #3 print
INFO  18:23:22,199 - #29 (
INFO  18:23:22,199 - #8 d
INFO  18:23:22,199 - #30 )
INFO  18:23:22,199 - #27 ;
INFO  18:23:22,199 - #21 }
INFO  18:23:22,199 - #21 }
INFO  18:24:00,281 - #2 program
INFO  18:24:00,282 - #8 Program
INFO  18:24:00,282 - #20 {
INFO  18:24:00,282 - #5 const
INFO  18:24:00,282 - #8 int
INFO  18:24:00,282 - #8 c
INFO  18:24:00,282 - #24 =
INFO  18:24:00,283 - #9 10
INFO  18:24:00,283 - #27 ;
INFO  18:24:00,283 - #5 const
INFO  18:24:00,283 - #8 int
INFO  18:24:00,284 - #8 d
INFO  18:24:00,284 - #24 =
INFO  18:24:00,284 - #9 99
INFO  18:24:00,284 - #27 ;
INFO  18:24:00,285 - #8 int
INFO  18:24:00,285 - #8 e
INFO  18:24:00,285 - #27 ;
INFO  18:24:00,285 - #6 void
INFO  18:24:00,285 - #8 test
INFO  18:24:00,286 - #29 (
INFO  18:24:00,286 - #30 )
INFO  18:24:00,286 - #20 {
INFO  18:24:00,286 - #8 int
INFO  18:24:00,286 - #8 a
INFO  18:24:00,286 - #27 ;
INFO  18:24:00,286 - #8 int
INFO  18:24:00,286 - #8 b
INFO  18:24:00,286 - #27 ;
INFO  18:24:00,287 - #8 a
INFO  18:24:00,287 - #24 =
INFO  18:24:00,287 - #9 3
INFO  18:24:00,287 - #27 ;
INFO  18:24:00,288 - #8 b
INFO  18:24:00,288 - #24 =
INFO  18:24:00,288 - #9 5
INFO  18:24:00,288 - #27 ;
INFO  18:24:00,288 - #31 if
INFO  18:24:00,288 - #29 (
INFO  18:24:00,289 - #8 a
INFO  18:24:00,289 - #16 -
INFO  18:24:00,289 - #8 b
INFO  18:24:00,290 - #38 >
INFO  18:24:00,291 - #9 0
INFO  18:24:00,292 - #30 )
INFO  18:24:00,293 - #3 print
INFO  18:24:00,293 - #29 (
INFO  18:24:00,293 - #8 a
INFO  18:24:00,293 - #15 +
INFO  18:24:00,294 - #8 b
INFO  18:24:00,295 - #30 )
INFO  18:24:00,295 - #27 ;
INFO  18:24:00,295 - #21 }
INFO  18:24:00,296 - #8 int
INFO  18:24:00,296 - #8 max
INFO  18:24:00,296 - #29 (
INFO  18:24:00,296 - #8 int
INFO  18:24:00,296 - #8 a
INFO  18:24:00,296 - #28 ,
INFO  18:24:00,297 - #8 int
INFO  18:24:00,297 - #8 b
INFO  18:24:00,297 - #30 )
INFO  18:24:00,297 - #20 {
INFO  18:24:00,297 - #31 if
INFO  18:24:00,297 - #29 (
INFO  18:24:00,297 - #8 a
INFO  18:24:00,297 - #38 >
INFO  18:24:00,297 - #8 b
INFO  18:24:00,298 - #30 )
INFO  18:24:00,298 - #20 {
INFO  18:24:00,298 - #37 return
INFO  18:24:00,298 - #8 a
INFO  18:24:00,298 - #27 ;
INFO  18:24:00,298 - #21 }
INFO  18:24:00,298 - #32 else
INFO  18:24:00,299 - #37 return
INFO  18:24:00,299 - #8 b
INFO  18:24:00,300 - #27 ;
INFO  18:24:00,300 - #21 }
INFO  18:24:00,300 - #8 int
INFO  18:24:00,301 - #8 min
INFO  18:24:00,301 - #29 (
INFO  18:24:00,301 - #8 int
INFO  18:24:00,301 - #8 a
INFO  18:24:00,301 - #28 ,
INFO  18:24:00,301 - #8 int
INFO  18:24:00,301 - #8 b
INFO  18:24:00,301 - #30 )
INFO  18:24:00,301 - #20 {
INFO  18:24:00,301 - #31 if
INFO  18:24:00,302 - #29 (
INFO  18:24:00,302 - #8 a
INFO  18:24:00,302 - #40 <
INFO  18:24:00,302 - #8 b
INFO  18:24:00,303 - #30 )
INFO  18:24:00,303 - #20 {
INFO  18:24:00,303 - #37 return
INFO  18:24:00,303 - #8 a
INFO  18:24:00,303 - #27 ;
INFO  18:24:00,304 - #21 }
INFO  18:24:00,304 - #32 else
INFO  18:24:00,304 - #20 {
INFO  18:24:00,304 - #37 return
INFO  18:24:00,304 - #8 b
INFO  18:24:00,304 - #27 ;
INFO  18:24:00,304 - #21 }
INFO  18:24:00,304 - #21 }
INFO  18:24:00,304 - #6 void
INFO  18:24:00,305 - #8 main
INFO  18:24:00,305 - #29 (
INFO  18:24:00,305 - #30 )
INFO  18:24:00,305 - #20 {
INFO  18:24:00,305 - #8 int
INFO  18:24:00,305 - #8 a
INFO  18:24:00,305 - #22 [
INFO  18:24:00,305 - #23 ]
INFO  18:24:00,305 - #27 ;
INFO  18:24:00,305 - #8 int
INFO  18:24:00,305 - #8 length
INFO  18:24:00,306 - #27 ;
INFO  18:24:00,306 - #8 length
INFO  18:24:00,306 - #24 =
INFO  18:24:00,306 - #8 c
INFO  18:24:00,306 - #27 ;
INFO  18:24:00,306 - #8 test
INFO  18:24:00,306 - #29 (
INFO  18:24:00,306 - #30 )
INFO  18:24:00,306 - #27 ;
INFO  18:24:00,306 - #31 if
INFO  18:24:00,307 - #29 (
INFO  18:24:00,307 - #8 length
INFO  18:24:00,307 - #38 >
INFO  18:24:00,307 - #9 0
INFO  18:24:00,307 - #13 &&
INFO  18:24:00,307 - #8 length
INFO  18:24:00,307 - #42 <=
INFO  18:24:00,307 - #8 d
INFO  18:24:00,308 - #30 )
INFO  18:24:00,308 - #8 a
INFO  18:24:00,308 - #24 =
INFO  18:24:00,308 - #7 new
INFO  18:24:00,309 - #8 int
INFO  18:24:00,309 - #22 [
INFO  18:24:00,309 - #8 length
INFO  18:24:00,310 - #23 ]
INFO  18:24:00,310 - #27 ;
INFO  18:24:00,310 - #32 else
INFO  18:24:00,310 - #8 a
INFO  18:24:00,310 - #24 =
INFO  18:24:00,310 - #7 new
INFO  18:24:00,310 - #8 int
INFO  18:24:00,310 - #22 [
INFO  18:24:00,310 - #9 5
INFO  18:24:00,310 - #23 ]
INFO  18:24:00,310 - #27 ;
INFO  18:24:00,310 - #33 do
INFO  18:24:00,311 - #20 {
INFO  18:24:00,311 - #4 read
INFO  18:24:00,311 - #29 (
INFO  18:24:00,311 - #8 a
INFO  18:24:00,311 - #22 [
INFO  18:24:00,311 - #8 i
INFO  18:24:00,311 - #23 ]
INFO  18:24:00,311 - #30 )
INFO  18:24:00,311 - #27 ;
INFO  18:24:00,311 - #31 if
INFO  18:24:00,311 - #29 (
INFO  18:24:00,311 - #8 a
INFO  18:24:00,311 - #22 [
INFO  18:24:00,311 - #8 i
INFO  18:24:00,312 - #23 ]
INFO  18:24:00,312 - #19 %
INFO  18:24:00,312 - #9 3
INFO  18:24:00,313 - #39 ==
INFO  18:24:00,313 - #9 0
INFO  18:24:00,314 - #30 )
INFO  18:24:00,314 - #3 print
INFO  18:24:00,314 - #29 (
INFO  18:24:00,314 - #8 a
INFO  18:24:00,314 - #22 [
INFO  18:24:00,314 - #8 i
INFO  18:24:00,314 - #23 ]
INFO  18:24:00,315 - #30 )
INFO  18:24:00,315 - #27 ;
INFO  18:24:00,315 - #32 else
INFO  18:24:00,315 - #3 print
INFO  18:24:00,315 - #29 (
INFO  18:24:00,315 - #8 max
INFO  18:24:00,315 - #29 (
INFO  18:24:00,315 - #8 a
INFO  18:24:00,315 - #22 [
INFO  18:24:00,315 - #8 i
INFO  18:24:00,315 - #23 ]
INFO  18:24:00,315 - #28 ,
INFO  18:24:00,315 - #9 0
INFO  18:24:00,316 - #30 )
INFO  18:24:00,316 - #30 )
INFO  18:24:00,316 - #27 ;
INFO  18:24:00,316 - #21 }
INFO  18:24:00,316 - #34 while
INFO  18:24:00,316 - #29 (
INFO  18:24:00,316 - #8 i
INFO  18:24:00,316 - #40 <
INFO  18:24:00,317 - #9 5
INFO  18:24:00,317 - #30 )
INFO  18:24:00,317 - #27 ;
INFO  18:24:00,317 - #3 print
INFO  18:24:00,317 - #29 (
INFO  18:24:00,317 - #8 d
INFO  18:24:00,317 - #30 )
INFO  18:24:00,317 - #27 ;
INFO  18:24:00,317 - #21 }
INFO  18:24:00,317 - #21 }
INFO  18:25:09,884 - #2 program
INFO  18:25:09,886 - #8 Program
INFO  18:25:09,886 - #20 {
INFO  18:25:09,886 - #5 const
INFO  18:25:09,886 - #8 int
INFO  18:25:09,886 - #8 c
INFO  18:25:09,887 - #24 =
INFO  18:25:09,887 - #9 10
INFO  18:25:09,887 - #27 ;
INFO  18:25:09,888 - #5 const
INFO  18:25:09,888 - #8 int
INFO  18:25:09,888 - #8 d
INFO  18:25:09,889 - #24 =
INFO  18:25:09,889 - #9 99
INFO  18:25:09,889 - #27 ;
INFO  18:25:09,889 - #8 int
INFO  18:25:09,890 - #8 e
INFO  18:25:09,890 - #27 ;
INFO  18:25:09,890 - #6 void
INFO  18:25:09,890 - #8 test
INFO  18:25:09,890 - #29 (
INFO  18:25:09,890 - #30 )
INFO  18:25:09,891 - #20 {
INFO  18:25:09,891 - #8 int
INFO  18:25:09,891 - #8 a
INFO  18:25:09,891 - #27 ;
INFO  18:25:09,891 - #8 int
INFO  18:25:09,891 - #8 b
INFO  18:25:09,891 - #27 ;
INFO  18:25:09,891 - #8 a
INFO  18:25:09,892 - #24 =
INFO  18:25:09,892 - #9 3
INFO  18:25:09,892 - #27 ;
INFO  18:25:09,893 - #8 b
INFO  18:25:09,893 - #24 =
INFO  18:25:09,894 - #9 5
INFO  18:25:09,894 - #27 ;
INFO  18:25:09,894 - #31 if
INFO  18:25:09,894 - #29 (
INFO  18:25:09,894 - #8 a
INFO  18:25:09,894 - #16 -
INFO  18:25:09,895 - #8 b
INFO  18:25:09,897 - #38 >
INFO  18:25:09,899 - #9 0
INFO  18:25:09,901 - #30 )
INFO  18:25:09,902 - #3 print
INFO  18:25:09,902 - #29 (
INFO  18:25:09,902 - #8 a
INFO  18:25:09,902 - #15 +
INFO  18:25:09,902 - #8 b
INFO  18:25:09,903 - #30 )
INFO  18:25:09,903 - #27 ;
INFO  18:25:09,903 - #21 }
INFO  18:25:09,904 - #8 int
INFO  18:25:09,904 - #8 max
INFO  18:25:09,904 - #29 (
INFO  18:25:09,904 - #8 int
INFO  18:25:09,904 - #8 a
INFO  18:25:09,905 - #28 ,
INFO  18:25:09,905 - #8 int
INFO  18:25:09,905 - #8 b
INFO  18:25:09,905 - #30 )
INFO  18:25:09,905 - #20 {
INFO  18:25:09,906 - #31 if
INFO  18:25:09,906 - #29 (
INFO  18:25:09,906 - #8 a
INFO  18:25:09,906 - #38 >
INFO  18:25:09,906 - #8 b
INFO  18:25:09,906 - #30 )
INFO  18:25:09,906 - #20 {
INFO  18:25:09,906 - #37 return
INFO  18:25:09,906 - #8 a
INFO  18:25:09,906 - #27 ;
INFO  18:25:09,906 - #21 }
INFO  18:25:09,907 - #32 else
INFO  18:25:09,907 - #37 return
INFO  18:25:09,907 - #8 b
INFO  18:25:09,907 - #27 ;
INFO  18:25:09,907 - #21 }
INFO  18:25:09,907 - #8 int
INFO  18:25:09,908 - #8 min
INFO  18:25:09,908 - #29 (
INFO  18:25:09,908 - #8 int
INFO  18:25:09,908 - #8 a
INFO  18:25:09,909 - #28 ,
INFO  18:25:09,909 - #8 int
INFO  18:25:09,910 - #8 b
INFO  18:25:09,910 - #30 )
INFO  18:25:09,910 - #20 {
INFO  18:25:09,910 - #31 if
INFO  18:25:09,910 - #29 (
INFO  18:25:09,910 - #8 a
INFO  18:25:09,910 - #40 <
INFO  18:25:09,911 - #8 b
INFO  18:25:09,912 - #30 )
INFO  18:25:09,912 - #20 {
INFO  18:25:09,913 - #37 return
INFO  18:25:09,913 - #8 a
INFO  18:25:09,913 - #27 ;
INFO  18:25:09,913 - #21 }
INFO  18:25:09,913 - #32 else
INFO  18:25:09,913 - #20 {
INFO  18:25:09,914 - #37 return
INFO  18:25:09,914 - #8 b
INFO  18:25:09,914 - #27 ;
INFO  18:25:09,914 - #21 }
INFO  18:25:09,914 - #21 }
INFO  18:25:09,914 - #6 void
INFO  18:25:09,914 - #8 main
INFO  18:25:09,914 - #29 (
INFO  18:25:09,915 - #30 )
INFO  18:25:09,915 - #20 {
INFO  18:25:09,915 - #8 int
INFO  18:25:09,915 - #8 a
INFO  18:25:09,915 - #22 [
INFO  18:25:09,915 - #23 ]
INFO  18:25:09,915 - #27 ;
INFO  18:25:09,915 - #8 int
INFO  18:25:09,916 - #8 length
INFO  18:25:09,916 - #27 ;
INFO  18:25:09,916 - #8 length
INFO  18:25:09,917 - #24 =
INFO  18:25:09,917 - #8 c
INFO  18:25:09,917 - #27 ;
INFO  18:25:09,917 - #8 test
INFO  18:25:09,918 - #29 (
INFO  18:25:09,918 - #30 )
INFO  18:25:09,918 - #27 ;
INFO  18:25:09,918 - #31 if
INFO  18:25:09,918 - #29 (
INFO  18:25:09,918 - #8 length
INFO  18:25:09,918 - #38 >
INFO  18:25:09,919 - #9 0
INFO  18:25:09,919 - #13 &&
INFO  18:25:09,919 - #8 length
INFO  18:25:09,919 - #42 <=
INFO  18:25:09,919 - #8 d
INFO  18:25:09,920 - #30 )
INFO  18:25:09,920 - #8 a
INFO  18:25:09,920 - #24 =
INFO  18:25:09,921 - #7 new
INFO  18:25:09,924 - #8 int
INFO  18:25:09,924 - #22 [
INFO  18:25:09,924 - #8 length
INFO  18:25:09,924 - #23 ]
INFO  18:25:09,924 - #27 ;
INFO  18:25:09,924 - #32 else
INFO  18:25:09,924 - #8 a
INFO  18:25:09,924 - #24 =
INFO  18:25:09,924 - #7 new
INFO  18:25:09,925 - #8 int
INFO  18:25:09,925 - #22 [
INFO  18:25:09,925 - #9 5
INFO  18:25:09,925 - #23 ]
INFO  18:25:09,925 - #27 ;
INFO  18:25:09,925 - #33 do
INFO  18:25:09,925 - #20 {
INFO  18:25:09,925 - #4 read
INFO  18:25:09,925 - #29 (
INFO  18:25:09,925 - #8 a
INFO  18:25:09,926 - #22 [
INFO  18:25:09,926 - #8 i
INFO  18:25:09,926 - #23 ]
INFO  18:25:09,926 - #30 )
INFO  18:25:09,926 - #27 ;
INFO  18:25:09,926 - #31 if
INFO  18:25:09,926 - #29 (
INFO  18:25:09,926 - #8 a
INFO  18:25:09,926 - #22 [
INFO  18:25:09,927 - #8 i
INFO  18:25:09,927 - #23 ]
INFO  18:25:09,927 - #19 %
INFO  18:25:09,927 - #9 3
INFO  18:25:09,928 - #39 ==
INFO  18:25:09,929 - #9 0
INFO  18:25:09,930 - #30 )
INFO  18:25:09,930 - #3 print
INFO  18:25:09,930 - #29 (
INFO  18:25:09,930 - #8 a
INFO  18:25:09,930 - #22 [
INFO  18:25:09,931 - #8 i
INFO  18:25:09,931 - #23 ]
INFO  18:25:09,931 - #30 )
INFO  18:25:09,931 - #27 ;
INFO  18:25:09,931 - #32 else
INFO  18:25:09,931 - #3 print
INFO  18:25:09,931 - #29 (
INFO  18:25:09,931 - #8 max
INFO  18:25:09,931 - #29 (
INFO  18:25:09,931 - #8 a
INFO  18:25:09,931 - #22 [
INFO  18:25:09,932 - #8 i
INFO  18:25:09,932 - #23 ]
INFO  18:25:09,932 - #28 ,
INFO  18:25:09,932 - #9 0
INFO  18:25:09,932 - #30 )
INFO  18:25:09,932 - #30 )
INFO  18:25:09,933 - #27 ;
INFO  18:25:09,933 - #21 }
INFO  18:25:09,933 - #34 while
INFO  18:25:09,933 - #29 (
INFO  18:25:09,933 - #8 i
INFO  18:25:09,933 - #42 <=
INFO  18:25:09,933 - #8 length
INFO  18:25:09,933 - #16 -
INFO  18:25:09,934 - #9 1
INFO  18:25:09,934 - #30 )
INFO  18:25:09,934 - #27 ;
INFO  18:25:09,934 - #3 print
INFO  18:25:09,934 - #29 (
INFO  18:25:09,934 - #8 d
INFO  18:25:09,935 - #30 )
INFO  18:25:09,935 - #27 ;
INFO  18:25:09,935 - #21 }
INFO  18:25:09,935 - #21 }
INFO  18:28:16,998 - #2 program
INFO  18:28:16,998 - #8 Program
INFO  18:28:16,998 - #20 {
INFO  18:28:16,999 - #5 const
INFO  18:28:16,999 - #8 int
INFO  18:28:16,999 - #8 c
INFO  18:28:16,999 - #24 =
INFO  18:28:17,000 - #9 10
INFO  18:28:17,000 - #27 ;
INFO  18:28:17,001 - #5 const
INFO  18:28:17,002 - #8 int
INFO  18:28:17,002 - #8 d
INFO  18:28:17,002 - #24 =
INFO  18:28:17,002 - #9 99
INFO  18:28:17,002 - #27 ;
INFO  18:28:17,002 - #8 int
INFO  18:28:17,003 - #8 e
INFO  18:28:17,003 - #27 ;
INFO  18:28:17,003 - #6 void
INFO  18:28:17,004 - #8 test
INFO  18:28:17,004 - #29 (
INFO  18:28:17,004 - #30 )
INFO  18:28:17,004 - #20 {
INFO  18:28:17,004 - #8 int
INFO  18:28:17,004 - #8 a
INFO  18:28:17,004 - #27 ;
INFO  18:28:17,005 - #8 int
INFO  18:28:17,005 - #8 b
INFO  18:28:17,005 - #27 ;
INFO  18:28:17,005 - #8 bool
INFO  18:28:17,006 - #8 cond
INFO  18:28:17,006 - #27 ;
INFO  18:28:17,006 - #8 a
INFO  18:28:17,006 - #24 =
INFO  18:28:17,007 - #9 3
INFO  18:28:17,007 - #27 ;
INFO  18:28:17,008 - #8 b
INFO  18:28:17,008 - #24 =
INFO  18:28:17,009 - #9 5
INFO  18:28:17,009 - #27 ;
INFO  18:28:17,009 - #8 cond
INFO  18:28:17,009 - #24 =
INFO  18:28:17,010 - #8 a
INFO  18:28:17,010 - #40 <
ERROR 18:28:17,010 - 
Sintaksna greska na liniji -1
ERROR 18:28:17,010 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:28:31,321 - #2 program
INFO  18:28:31,322 - #8 Program
INFO  18:28:31,322 - #20 {
INFO  18:28:31,322 - #5 const
INFO  18:28:31,322 - #8 int
INFO  18:28:31,322 - #8 c
INFO  18:28:31,323 - #24 =
INFO  18:28:31,323 - #9 10
INFO  18:28:31,323 - #27 ;
INFO  18:28:31,323 - #5 const
INFO  18:28:31,324 - #8 int
INFO  18:28:31,324 - #8 d
INFO  18:28:31,325 - #24 =
INFO  18:28:31,326 - #9 99
INFO  18:28:31,326 - #27 ;
INFO  18:28:31,326 - #8 int
INFO  18:28:31,326 - #8 e
INFO  18:28:31,327 - #27 ;
INFO  18:28:31,327 - #6 void
INFO  18:28:31,327 - #8 test
INFO  18:28:31,327 - #29 (
INFO  18:28:31,328 - #30 )
INFO  18:28:31,328 - #20 {
INFO  18:28:31,328 - #8 int
INFO  18:28:31,328 - #8 a
INFO  18:28:31,328 - #27 ;
INFO  18:28:31,328 - #8 int
INFO  18:28:31,328 - #8 b
INFO  18:28:31,328 - #27 ;
INFO  18:28:31,328 - #8 bool
INFO  18:28:31,329 - #8 cond
INFO  18:28:31,329 - #27 ;
INFO  18:28:31,329 - #8 a
INFO  18:28:31,329 - #24 =
INFO  18:28:31,329 - #9 3
INFO  18:28:31,329 - #27 ;
INFO  18:28:31,330 - #8 b
INFO  18:28:31,330 - #24 =
INFO  18:28:31,330 - #9 5
INFO  18:28:31,330 - #27 ;
INFO  18:28:31,331 - #8 cond
INFO  18:28:31,331 - #24 =
INFO  18:28:31,331 - #8 a
INFO  18:28:31,335 - #40 <
ERROR 18:28:31,335 - 
Sintaksna greska na liniji -1
ERROR 18:28:31,335 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:28:50,686 - #2 program
INFO  18:28:50,687 - #8 Program
INFO  18:28:50,687 - #20 {
INFO  18:28:50,687 - #5 const
INFO  18:28:50,687 - #8 int
INFO  18:28:50,687 - #8 c
INFO  18:28:50,688 - #24 =
INFO  18:28:50,688 - #9 10
INFO  18:28:50,688 - #27 ;
INFO  18:28:50,688 - #5 const
INFO  18:28:50,689 - #8 int
INFO  18:28:50,689 - #8 d
INFO  18:28:50,689 - #24 =
INFO  18:28:50,689 - #9 99
INFO  18:28:50,689 - #27 ;
INFO  18:28:50,689 - #8 int
INFO  18:28:50,689 - #8 e
INFO  18:28:50,690 - #27 ;
INFO  18:28:50,690 - #6 void
INFO  18:28:50,690 - #8 test
INFO  18:28:50,690 - #29 (
INFO  18:28:50,690 - #30 )
INFO  18:28:50,690 - #20 {
INFO  18:28:50,691 - #8 int
INFO  18:28:50,691 - #8 a
INFO  18:28:50,691 - #27 ;
INFO  18:28:50,691 - #8 int
INFO  18:28:50,691 - #8 b
INFO  18:28:50,691 - #27 ;
INFO  18:28:50,699 - #8 bool
INFO  18:28:50,699 - #8 cond
INFO  18:28:50,700 - #27 ;
INFO  18:28:50,700 - #8 a
INFO  18:28:50,700 - #24 =
INFO  18:28:50,700 - #9 3
INFO  18:28:50,700 - #27 ;
INFO  18:28:50,701 - #8 b
INFO  18:28:50,702 - #24 =
INFO  18:28:50,702 - #9 5
INFO  18:28:50,702 - #27 ;
INFO  18:28:50,702 - #8 cond
INFO  18:28:50,703 - #24 =
INFO  18:28:50,703 - #29 (
INFO  18:28:50,704 - #8 a
INFO  18:28:50,704 - #40 <
ERROR 18:28:50,704 - 
Sintaksna greska na liniji -1
ERROR 18:28:50,705 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:29:12,668 - #2 program
INFO  18:29:12,669 - #8 Program
INFO  18:29:12,669 - #20 {
INFO  18:29:12,669 - #5 const
INFO  18:29:12,669 - #8 int
INFO  18:29:12,669 - #8 c
INFO  18:29:12,670 - #24 =
INFO  18:29:12,670 - #9 10
INFO  18:29:12,670 - #27 ;
INFO  18:29:12,670 - #5 const
INFO  18:29:12,671 - #8 int
INFO  18:29:12,671 - #8 d
INFO  18:29:12,671 - #24 =
INFO  18:29:12,671 - #9 99
INFO  18:29:12,671 - #27 ;
INFO  18:29:12,672 - #8 int
INFO  18:29:12,672 - #8 e
INFO  18:29:12,672 - #27 ;
INFO  18:29:12,672 - #6 void
INFO  18:29:12,673 - #8 test
INFO  18:29:12,673 - #29 (
INFO  18:29:12,673 - #30 )
INFO  18:29:12,673 - #20 {
INFO  18:29:12,673 - #8 int
INFO  18:29:12,673 - #8 a
INFO  18:29:12,673 - #27 ;
INFO  18:29:12,674 - #8 int
INFO  18:29:12,674 - #8 b
INFO  18:29:12,674 - #27 ;
INFO  18:29:12,674 - #8 bool
INFO  18:29:12,674 - #8 cond
INFO  18:29:12,674 - #27 ;
INFO  18:29:12,675 - #8 a
INFO  18:29:12,675 - #24 =
INFO  18:29:12,675 - #9 3
INFO  18:29:12,675 - #27 ;
INFO  18:29:12,676 - #8 b
INFO  18:29:12,677 - #24 =
INFO  18:29:12,677 - #9 5
INFO  18:29:12,677 - #27 ;
INFO  18:29:12,677 - #8 cond
INFO  18:29:12,677 - #24 =
INFO  18:29:12,677 - #11 true
INFO  18:29:12,678 - #27 ;
INFO  18:29:12,679 - #31 if
INFO  18:29:12,680 - #29 (
INFO  18:29:12,680 - #9 2
INFO  18:29:12,680 - #17 *
INFO  18:29:12,680 - #29 (
INFO  18:29:12,681 - #8 a
INFO  18:29:12,681 - #16 -
INFO  18:29:12,682 - #8 b
INFO  18:29:12,685 - #16 -
INFO  18:29:12,685 - #9 1
INFO  18:29:12,685 - #30 )
INFO  18:29:12,687 - #16 -
INFO  18:29:12,687 - #9 14
INFO  18:29:12,688 - #38 >
INFO  18:29:12,688 - #9 0
INFO  18:29:12,689 - #13 &&
INFO  18:29:12,690 - #8 cond
INFO  18:29:12,690 - #30 )
INFO  18:29:12,691 - #3 print
INFO  18:29:12,691 - #29 (
INFO  18:29:12,691 - #8 a
INFO  18:29:12,691 - #15 +
INFO  18:29:12,691 - #8 b
INFO  18:29:12,692 - #30 )
INFO  18:29:12,692 - #27 ;
INFO  18:29:12,692 - #21 }
INFO  18:29:12,693 - #8 int
INFO  18:29:12,693 - #8 max
INFO  18:29:12,693 - #29 (
INFO  18:29:12,693 - #8 int
INFO  18:29:12,693 - #8 a
INFO  18:29:12,694 - #28 ,
INFO  18:29:12,694 - #8 int
INFO  18:29:12,696 - #8 b
INFO  18:29:12,696 - #30 )
INFO  18:29:12,696 - #20 {
INFO  18:29:12,696 - #31 if
INFO  18:29:12,696 - #29 (
INFO  18:29:12,697 - #8 a
INFO  18:29:12,697 - #38 >
INFO  18:29:12,697 - #8 b
INFO  18:29:12,697 - #30 )
INFO  18:29:12,697 - #20 {
INFO  18:29:12,697 - #37 return
INFO  18:29:12,697 - #8 a
INFO  18:29:12,697 - #27 ;
INFO  18:29:12,697 - #21 }
INFO  18:29:12,697 - #32 else
INFO  18:29:12,698 - #37 return
INFO  18:29:12,698 - #8 b
INFO  18:29:12,698 - #27 ;
INFO  18:29:12,698 - #21 }
INFO  18:29:12,698 - #8 int
INFO  18:29:12,699 - #8 min
INFO  18:29:12,699 - #29 (
INFO  18:29:12,699 - #8 int
INFO  18:29:12,699 - #8 a
INFO  18:29:12,699 - #28 ,
INFO  18:29:12,699 - #8 int
INFO  18:29:12,699 - #8 b
INFO  18:29:12,699 - #30 )
INFO  18:29:12,700 - #20 {
INFO  18:29:12,700 - #31 if
INFO  18:29:12,700 - #29 (
INFO  18:29:12,700 - #8 a
INFO  18:29:12,700 - #40 <
INFO  18:29:12,700 - #8 b
INFO  18:29:12,702 - #30 )
INFO  18:29:12,702 - #20 {
INFO  18:29:12,702 - #37 return
INFO  18:29:12,702 - #8 a
INFO  18:29:12,703 - #27 ;
INFO  18:29:12,703 - #21 }
INFO  18:29:12,703 - #32 else
INFO  18:29:12,703 - #20 {
INFO  18:29:12,703 - #37 return
INFO  18:29:12,703 - #8 b
INFO  18:29:12,703 - #27 ;
INFO  18:29:12,703 - #21 }
INFO  18:29:12,703 - #21 }
INFO  18:29:12,704 - #6 void
INFO  18:29:12,704 - #8 main
INFO  18:29:12,704 - #29 (
INFO  18:29:12,704 - #30 )
INFO  18:29:12,704 - #20 {
INFO  18:29:12,705 - #8 int
INFO  18:29:12,705 - #8 a
INFO  18:29:12,705 - #22 [
INFO  18:29:12,705 - #23 ]
INFO  18:29:12,705 - #27 ;
INFO  18:29:12,705 - #8 int
INFO  18:29:12,705 - #8 length
INFO  18:29:12,705 - #27 ;
INFO  18:29:12,706 - #8 length
INFO  18:29:12,706 - #24 =
INFO  18:29:12,706 - #8 c
INFO  18:29:12,706 - #27 ;
INFO  18:29:12,706 - #8 test
INFO  18:29:12,706 - #29 (
INFO  18:29:12,706 - #30 )
INFO  18:29:12,706 - #27 ;
INFO  18:29:12,707 - #31 if
INFO  18:29:12,707 - #29 (
INFO  18:29:12,707 - #8 length
INFO  18:29:12,707 - #38 >
INFO  18:29:12,707 - #9 0
INFO  18:29:12,707 - #13 &&
INFO  18:29:12,708 - #8 length
INFO  18:29:12,708 - #42 <=
INFO  18:29:12,708 - #8 d
INFO  18:29:12,709 - #30 )
INFO  18:29:12,710 - #8 a
INFO  18:29:12,710 - #24 =
INFO  18:29:12,710 - #7 new
INFO  18:29:12,710 - #8 int
INFO  18:29:12,710 - #22 [
INFO  18:29:12,710 - #8 length
INFO  18:29:12,710 - #23 ]
INFO  18:29:12,710 - #27 ;
INFO  18:29:12,710 - #32 else
INFO  18:29:12,711 - #8 a
INFO  18:29:12,711 - #24 =
INFO  18:29:12,711 - #7 new
INFO  18:29:12,711 - #8 int
INFO  18:29:12,711 - #22 [
INFO  18:29:12,711 - #9 5
INFO  18:29:12,711 - #23 ]
INFO  18:29:12,711 - #27 ;
INFO  18:29:12,711 - #33 do
INFO  18:29:12,712 - #20 {
INFO  18:29:12,712 - #4 read
INFO  18:29:12,712 - #29 (
INFO  18:29:12,712 - #8 a
INFO  18:29:12,712 - #22 [
INFO  18:29:12,712 - #8 i
INFO  18:29:12,712 - #23 ]
INFO  18:29:12,712 - #30 )
INFO  18:29:12,712 - #27 ;
INFO  18:29:12,713 - #31 if
INFO  18:29:12,713 - #29 (
INFO  18:29:12,713 - #8 a
INFO  18:29:12,713 - #22 [
INFO  18:29:12,713 - #8 i
INFO  18:29:12,713 - #23 ]
INFO  18:29:12,713 - #19 %
INFO  18:29:12,714 - #9 3
INFO  18:29:12,714 - #39 ==
INFO  18:29:12,715 - #9 0
INFO  18:29:12,716 - #30 )
INFO  18:29:12,716 - #3 print
INFO  18:29:12,716 - #29 (
INFO  18:29:12,716 - #8 a
INFO  18:29:12,716 - #22 [
INFO  18:29:12,717 - #8 i
INFO  18:29:12,717 - #23 ]
INFO  18:29:12,717 - #30 )
INFO  18:29:12,717 - #27 ;
INFO  18:29:12,718 - #32 else
INFO  18:29:12,718 - #3 print
INFO  18:29:12,718 - #29 (
INFO  18:29:12,718 - #8 max
INFO  18:29:12,718 - #29 (
INFO  18:29:12,718 - #8 a
INFO  18:29:12,718 - #22 [
INFO  18:29:12,718 - #8 i
INFO  18:29:12,718 - #23 ]
INFO  18:29:12,718 - #28 ,
INFO  18:29:12,718 - #9 0
INFO  18:29:12,718 - #30 )
INFO  18:29:12,719 - #30 )
INFO  18:29:12,719 - #27 ;
INFO  18:29:12,719 - #21 }
INFO  18:29:12,719 - #34 while
INFO  18:29:12,719 - #29 (
INFO  18:29:12,720 - #8 i
INFO  18:29:12,720 - #42 <=
INFO  18:29:12,720 - #8 length
INFO  18:29:12,720 - #16 -
INFO  18:29:12,720 - #9 1
INFO  18:29:12,720 - #30 )
INFO  18:29:12,720 - #27 ;
INFO  18:29:12,720 - #3 print
INFO  18:29:12,720 - #29 (
INFO  18:29:12,721 - #8 d
INFO  18:29:12,721 - #30 )
INFO  18:29:12,721 - #27 ;
INFO  18:29:12,721 - #21 }
INFO  18:29:12,721 - #21 }
INFO  18:37:28,646 - #2 program
INFO  18:37:28,647 - #8 Program
INFO  18:37:28,647 - #20 {
INFO  18:37:28,647 - #5 const
INFO  18:37:28,647 - #8 int
INFO  18:37:28,647 - #8 c
INFO  18:37:28,648 - #24 =
INFO  18:37:28,648 - #9 10
INFO  18:37:28,648 - #27 ;
INFO  18:37:28,648 - #5 const
INFO  18:37:28,649 - #8 int
INFO  18:37:28,649 - #8 d
INFO  18:37:28,649 - #24 =
INFO  18:37:28,649 - #9 99
INFO  18:37:28,649 - #27 ;
INFO  18:37:28,649 - #8 int
INFO  18:37:28,650 - #8 e
INFO  18:37:28,650 - #27 ;
INFO  18:37:28,650 - #6 void
INFO  18:37:28,651 - #8 test
INFO  18:37:28,651 - #29 (
INFO  18:37:28,651 - #30 )
INFO  18:37:28,651 - #20 {
INFO  18:37:28,651 - #8 int
INFO  18:37:28,651 - #8 a
INFO  18:37:28,651 - #27 ;
INFO  18:37:28,651 - #8 int
INFO  18:37:28,652 - #8 b
INFO  18:37:28,652 - #27 ;
INFO  18:37:28,652 - #8 bool
INFO  18:37:28,652 - #8 cond
INFO  18:37:28,652 - #28 ,
ERROR 18:37:28,652 - 
Sintaksna greska na liniji -1
ERROR 18:37:28,653 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:48:19,473 - #2 program
INFO  18:48:19,474 - #8 Program
INFO  18:48:19,474 - #20 {
INFO  18:48:19,475 - #5 const
INFO  18:48:19,475 - #8 int
INFO  18:48:19,475 - #8 c
INFO  18:48:19,475 - #24 =
INFO  18:48:19,475 - #9 10
INFO  18:48:19,475 - #27 ;
INFO  18:48:19,476 - #5 const
INFO  18:48:19,476 - #8 int
INFO  18:48:19,476 - #8 d
INFO  18:48:19,476 - #24 =
INFO  18:48:19,477 - #9 99
INFO  18:48:19,477 - #27 ;
INFO  18:48:19,477 - #8 int
INFO  18:48:19,477 - #8 e
INFO  18:48:19,477 - #27 ;
INFO  18:48:19,478 - #6 void
INFO  18:48:19,478 - #8 test
INFO  18:48:19,478 - #29 (
INFO  18:48:19,478 - #30 )
INFO  18:48:19,478 - #20 {
INFO  18:48:19,478 - #8 int
INFO  18:48:19,479 - #8 a
INFO  18:48:19,479 - #27 ;
INFO  18:48:19,479 - #8 int
INFO  18:48:19,479 - #8 b
INFO  18:48:19,479 - #27 ;
INFO  18:48:19,479 - #8 bool
INFO  18:48:19,480 - #8 cond
INFO  18:48:19,480 - #27 ;
INFO  18:48:19,480 - #8 bool
INFO  18:48:19,480 - #8 mini
INFO  18:48:19,481 - #27 ;
INFO  18:48:19,481 - #8 a
INFO  18:48:19,481 - #24 =
INFO  18:48:19,481 - #9 3
INFO  18:48:19,481 - #27 ;
INFO  18:48:19,482 - #8 b
INFO  18:48:19,482 - #24 =
INFO  18:48:19,482 - #9 5
INFO  18:48:19,482 - #27 ;
INFO  18:48:19,483 - #8 cond
INFO  18:48:19,483 - #24 =
INFO  18:48:19,483 - #11 true
INFO  18:48:19,483 - #27 ;
INFO  18:48:19,485 - #8 mini
INFO  18:48:19,485 - #24 =
INFO  18:48:19,485 - #12 false
INFO  18:48:19,485 - #27 ;
INFO  18:48:19,486 - #31 if
INFO  18:48:19,486 - #29 (
INFO  18:48:19,486 - #29 (
INFO  18:48:19,487 - #9 2
INFO  18:48:19,487 - #17 *
INFO  18:48:19,487 - #29 (
INFO  18:48:19,488 - #8 a
INFO  18:48:19,489 - #16 -
INFO  18:48:19,489 - #8 b
INFO  18:48:19,491 - #16 -
INFO  18:48:19,491 - #9 1
INFO  18:48:19,491 - #30 )
INFO  18:48:19,492 - #16 -
INFO  18:48:19,492 - #9 14
INFO  18:48:19,492 - #38 >
ERROR 18:48:19,493 - 
Sintaksna greska na liniji -1
ERROR 18:48:19,493 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:49:41,465 - #2 program
INFO  18:49:41,466 - #8 Program
INFO  18:49:41,466 - #20 {
INFO  18:49:41,466 - #5 const
INFO  18:49:41,466 - #8 int
INFO  18:49:41,466 - #8 c
INFO  18:49:41,467 - #24 =
INFO  18:49:41,467 - #9 10
INFO  18:49:41,467 - #27 ;
INFO  18:49:41,467 - #5 const
INFO  18:49:41,468 - #8 int
INFO  18:49:41,468 - #8 d
INFO  18:49:41,468 - #24 =
INFO  18:49:41,468 - #9 99
INFO  18:49:41,468 - #27 ;
INFO  18:49:41,468 - #8 int
INFO  18:49:41,469 - #8 e
INFO  18:49:41,469 - #27 ;
INFO  18:49:41,469 - #6 void
INFO  18:49:41,469 - #8 test
INFO  18:49:41,470 - #29 (
INFO  18:49:41,470 - #30 )
INFO  18:49:41,470 - #20 {
INFO  18:49:41,470 - #8 int
INFO  18:49:41,470 - #8 a
INFO  18:49:41,470 - #27 ;
INFO  18:49:41,470 - #8 int
INFO  18:49:41,470 - #8 b
INFO  18:49:41,471 - #27 ;
INFO  18:49:41,471 - #8 bool
INFO  18:49:41,471 - #8 cond
INFO  18:49:41,471 - #27 ;
INFO  18:49:41,471 - #8 bool
INFO  18:49:41,471 - #8 mini
INFO  18:49:41,471 - #27 ;
INFO  18:49:41,471 - #8 a
INFO  18:49:41,472 - #24 =
INFO  18:49:41,474 - #9 3
INFO  18:49:41,474 - #27 ;
INFO  18:49:41,475 - #8 b
INFO  18:49:41,476 - #24 =
INFO  18:49:41,476 - #9 5
INFO  18:49:41,476 - #27 ;
INFO  18:49:41,476 - #8 cond
INFO  18:49:41,476 - #24 =
INFO  18:49:41,476 - #11 true
INFO  18:49:41,480 - #27 ;
INFO  18:49:41,483 - #8 mini
INFO  18:49:41,483 - #24 =
INFO  18:49:41,483 - #12 false
INFO  18:49:41,483 - #27 ;
INFO  18:49:41,485 - #31 if
INFO  18:49:41,485 - #29 (
INFO  18:49:41,488 - #29 (
INFO  18:49:41,488 - #9 2
INFO  18:49:41,488 - #17 *
INFO  18:49:41,488 - #29 (
INFO  18:49:41,490 - #8 a
INFO  18:49:41,490 - #16 -
INFO  18:49:41,490 - #8 b
INFO  18:49:41,492 - #16 -
INFO  18:49:41,492 - #9 1
INFO  18:49:41,492 - #30 )
INFO  18:49:41,493 - #16 -
INFO  18:49:41,493 - #9 14
INFO  18:49:41,493 - #38 >
ERROR 18:49:41,494 - 
Sintaksna greska na liniji -1
ERROR 18:49:41,494 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:50:01,227 - #2 program
INFO  18:50:01,228 - #8 Program
INFO  18:50:01,228 - #20 {
INFO  18:50:01,228 - #5 const
INFO  18:50:01,229 - #8 int
INFO  18:50:01,229 - #8 c
INFO  18:50:01,229 - #24 =
INFO  18:50:01,229 - #9 10
INFO  18:50:01,229 - #27 ;
INFO  18:50:01,229 - #5 const
INFO  18:50:01,230 - #8 int
INFO  18:50:01,230 - #8 d
INFO  18:50:01,230 - #24 =
INFO  18:50:01,231 - #9 99
INFO  18:50:01,231 - #27 ;
INFO  18:50:01,231 - #8 int
INFO  18:50:01,231 - #8 e
INFO  18:50:01,231 - #27 ;
INFO  18:50:01,231 - #6 void
INFO  18:50:01,232 - #8 test
INFO  18:50:01,232 - #29 (
INFO  18:50:01,232 - #30 )
INFO  18:50:01,232 - #20 {
INFO  18:50:01,232 - #8 int
INFO  18:50:01,233 - #8 a
INFO  18:50:01,233 - #27 ;
INFO  18:50:01,233 - #8 int
INFO  18:50:01,234 - #8 b
INFO  18:50:01,234 - #27 ;
INFO  18:50:01,234 - #8 bool
INFO  18:50:01,234 - #8 cond
INFO  18:50:01,235 - #27 ;
INFO  18:50:01,235 - #8 bool
INFO  18:50:01,235 - #8 mini
INFO  18:50:01,235 - #27 ;
INFO  18:50:01,235 - #8 a
INFO  18:50:01,235 - #24 =
INFO  18:50:01,235 - #9 3
INFO  18:50:01,235 - #27 ;
INFO  18:50:01,236 - #8 b
INFO  18:50:01,236 - #24 =
INFO  18:50:01,236 - #9 5
INFO  18:50:01,236 - #27 ;
INFO  18:50:01,237 - #8 cond
INFO  18:50:01,237 - #24 =
INFO  18:50:01,237 - #11 true
INFO  18:50:01,237 - #27 ;
INFO  18:50:01,239 - #8 mini
INFO  18:50:01,239 - #24 =
INFO  18:50:01,239 - #12 false
INFO  18:50:01,239 - #27 ;
INFO  18:50:01,240 - #31 if
INFO  18:50:01,240 - #29 (
INFO  18:50:01,240 - #9 2
INFO  18:50:01,240 - #17 *
INFO  18:50:01,240 - #29 (
INFO  18:50:01,242 - #8 a
INFO  18:50:01,242 - #16 -
INFO  18:50:01,242 - #8 b
INFO  18:50:01,244 - #16 -
INFO  18:50:01,245 - #9 1
INFO  18:50:01,245 - #30 )
INFO  18:50:01,245 - #16 -
INFO  18:50:01,246 - #9 14
INFO  18:50:01,246 - #38 >
INFO  18:50:01,246 - #9 0
INFO  18:50:01,250 - #13 &&
INFO  18:50:01,251 - #8 cond
INFO  18:50:01,251 - #30 )
INFO  18:50:01,251 - #3 print
INFO  18:50:01,252 - #29 (
INFO  18:50:01,252 - #8 a
INFO  18:50:01,252 - #15 +
INFO  18:50:01,252 - #8 b
INFO  18:50:01,254 - #30 )
INFO  18:50:01,254 - #27 ;
INFO  18:50:01,254 - #21 }
INFO  18:50:01,257 - #8 int
INFO  18:50:01,257 - #8 max
INFO  18:50:01,257 - #29 (
INFO  18:50:01,257 - #8 int
INFO  18:50:01,258 - #8 a
INFO  18:50:01,258 - #28 ,
INFO  18:50:01,258 - #8 int
INFO  18:50:01,258 - #8 b
INFO  18:50:01,258 - #30 )
INFO  18:50:01,258 - #20 {
INFO  18:50:01,259 - #31 if
INFO  18:50:01,259 - #29 (
INFO  18:50:01,259 - #8 a
INFO  18:50:01,259 - #38 >
INFO  18:50:01,259 - #8 b
INFO  18:50:01,259 - #30 )
INFO  18:50:01,260 - #20 {
INFO  18:50:01,260 - #37 return
INFO  18:50:01,260 - #8 a
INFO  18:50:01,260 - #27 ;
INFO  18:50:01,260 - #21 }
INFO  18:50:01,260 - #32 else
INFO  18:50:01,261 - #37 return
INFO  18:50:01,261 - #8 b
INFO  18:50:01,261 - #27 ;
INFO  18:50:01,261 - #21 }
INFO  18:50:01,261 - #8 int
INFO  18:50:01,261 - #8 min
INFO  18:50:01,262 - #29 (
INFO  18:50:01,262 - #8 int
INFO  18:50:01,262 - #8 a
INFO  18:50:01,262 - #28 ,
INFO  18:50:01,262 - #8 int
INFO  18:50:01,262 - #8 b
INFO  18:50:01,262 - #30 )
INFO  18:50:01,262 - #20 {
INFO  18:50:01,262 - #31 if
INFO  18:50:01,262 - #29 (
INFO  18:50:01,262 - #8 a
INFO  18:50:01,262 - #40 <
INFO  18:50:01,263 - #8 b
INFO  18:50:01,263 - #30 )
INFO  18:50:01,264 - #20 {
INFO  18:50:01,264 - #37 return
INFO  18:50:01,264 - #8 a
INFO  18:50:01,264 - #27 ;
INFO  18:50:01,264 - #21 }
INFO  18:50:01,264 - #32 else
INFO  18:50:01,264 - #20 {
INFO  18:50:01,264 - #37 return
INFO  18:50:01,264 - #8 b
INFO  18:50:01,265 - #27 ;
INFO  18:50:01,265 - #21 }
INFO  18:50:01,265 - #21 }
INFO  18:50:01,265 - #6 void
INFO  18:50:01,265 - #8 main
INFO  18:50:01,265 - #29 (
INFO  18:50:01,265 - #30 )
INFO  18:50:01,265 - #20 {
INFO  18:50:01,265 - #8 int
INFO  18:50:01,265 - #8 a
INFO  18:50:01,265 - #22 [
INFO  18:50:01,265 - #23 ]
INFO  18:50:01,265 - #27 ;
INFO  18:50:01,265 - #8 int
INFO  18:50:01,266 - #8 length
INFO  18:50:01,266 - #27 ;
INFO  18:50:01,266 - #8 length
INFO  18:50:01,266 - #24 =
INFO  18:50:01,266 - #8 c
INFO  18:50:01,266 - #27 ;
INFO  18:50:01,266 - #8 test
INFO  18:50:01,266 - #29 (
INFO  18:50:01,266 - #30 )
INFO  18:50:01,266 - #27 ;
INFO  18:50:01,267 - #31 if
INFO  18:50:01,267 - #29 (
INFO  18:50:01,267 - #8 length
INFO  18:50:01,267 - #38 >
INFO  18:50:01,267 - #9 0
INFO  18:50:01,267 - #13 &&
INFO  18:50:01,267 - #8 length
INFO  18:50:01,267 - #42 <=
INFO  18:50:01,267 - #8 d
INFO  18:50:01,268 - #30 )
INFO  18:50:01,269 - #8 a
INFO  18:50:01,269 - #24 =
INFO  18:50:01,269 - #7 new
INFO  18:50:01,269 - #8 int
INFO  18:50:01,269 - #22 [
INFO  18:50:01,269 - #8 length
INFO  18:50:01,269 - #23 ]
INFO  18:50:01,269 - #27 ;
INFO  18:50:01,269 - #32 else
INFO  18:50:01,270 - #8 a
INFO  18:50:01,270 - #24 =
INFO  18:50:01,270 - #7 new
INFO  18:50:01,270 - #8 int
INFO  18:50:01,270 - #22 [
INFO  18:50:01,270 - #9 5
INFO  18:50:01,270 - #23 ]
INFO  18:50:01,270 - #27 ;
INFO  18:50:01,270 - #33 do
INFO  18:50:01,270 - #20 {
INFO  18:50:01,270 - #4 read
INFO  18:50:01,270 - #29 (
INFO  18:50:01,271 - #8 a
INFO  18:50:01,271 - #22 [
INFO  18:50:01,271 - #8 i
INFO  18:50:01,271 - #23 ]
INFO  18:50:01,271 - #30 )
INFO  18:50:01,271 - #27 ;
INFO  18:50:01,271 - #31 if
INFO  18:50:01,271 - #29 (
INFO  18:50:01,272 - #8 a
INFO  18:50:01,272 - #22 [
INFO  18:50:01,272 - #8 i
INFO  18:50:01,272 - #23 ]
INFO  18:50:01,272 - #19 %
INFO  18:50:01,272 - #9 3
INFO  18:50:01,273 - #39 ==
INFO  18:50:01,273 - #9 0
INFO  18:50:01,274 - #30 )
INFO  18:50:01,274 - #3 print
INFO  18:50:01,274 - #29 (
INFO  18:50:01,274 - #8 a
INFO  18:50:01,274 - #22 [
INFO  18:50:01,274 - #8 i
INFO  18:50:01,274 - #23 ]
INFO  18:50:01,274 - #30 )
INFO  18:50:01,275 - #27 ;
INFO  18:50:01,275 - #32 else
INFO  18:50:01,275 - #3 print
INFO  18:50:01,275 - #29 (
INFO  18:50:01,275 - #8 max
INFO  18:50:01,275 - #29 (
INFO  18:50:01,275 - #8 a
INFO  18:50:01,275 - #22 [
INFO  18:50:01,275 - #8 i
INFO  18:50:01,275 - #23 ]
INFO  18:50:01,275 - #28 ,
INFO  18:50:01,275 - #9 0
INFO  18:50:01,276 - #30 )
INFO  18:50:01,276 - #30 )
INFO  18:50:01,276 - #27 ;
INFO  18:50:01,276 - #21 }
INFO  18:50:01,277 - #34 while
INFO  18:50:01,277 - #29 (
INFO  18:50:01,277 - #8 i
INFO  18:50:01,277 - #42 <=
INFO  18:50:01,277 - #8 length
INFO  18:50:01,277 - #16 -
INFO  18:50:01,277 - #9 1
INFO  18:50:01,277 - #30 )
INFO  18:50:01,277 - #27 ;
INFO  18:50:01,277 - #3 print
INFO  18:50:01,277 - #29 (
INFO  18:50:01,278 - #8 d
INFO  18:50:01,278 - #30 )
INFO  18:50:01,278 - #27 ;
INFO  18:50:01,278 - #21 }
INFO  18:50:01,278 - #21 }
INFO  18:50:21,292 - #2 program
INFO  18:50:21,293 - #8 Program
INFO  18:50:21,293 - #20 {
INFO  18:50:21,293 - #5 const
INFO  18:50:21,293 - #8 int
INFO  18:50:21,294 - #8 c
INFO  18:50:21,294 - #24 =
INFO  18:50:21,294 - #9 10
INFO  18:50:21,294 - #27 ;
INFO  18:50:21,294 - #5 const
INFO  18:50:21,295 - #8 int
INFO  18:50:21,295 - #8 d
INFO  18:50:21,295 - #24 =
INFO  18:50:21,295 - #9 99
INFO  18:50:21,295 - #27 ;
INFO  18:50:21,296 - #8 int
INFO  18:50:21,296 - #8 e
INFO  18:50:21,296 - #27 ;
INFO  18:50:21,296 - #6 void
INFO  18:50:21,296 - #8 test
INFO  18:50:21,296 - #29 (
INFO  18:50:21,297 - #30 )
INFO  18:50:21,297 - #20 {
INFO  18:50:21,297 - #8 int
INFO  18:50:21,297 - #8 a
INFO  18:50:21,297 - #27 ;
INFO  18:50:21,297 - #8 int
INFO  18:50:21,297 - #8 b
INFO  18:50:21,297 - #27 ;
INFO  18:50:21,297 - #8 bool
INFO  18:50:21,298 - #8 cond
INFO  18:50:21,298 - #27 ;
INFO  18:50:21,298 - #8 bool
INFO  18:50:21,298 - #8 mini
INFO  18:50:21,298 - #27 ;
INFO  18:50:21,298 - #8 a
INFO  18:50:21,298 - #24 =
INFO  18:50:21,298 - #9 3
INFO  18:50:21,299 - #27 ;
INFO  18:50:21,299 - #8 b
INFO  18:50:21,300 - #24 =
INFO  18:50:21,300 - #9 5
INFO  18:50:21,300 - #27 ;
INFO  18:50:21,303 - #8 cond
INFO  18:50:21,304 - #24 =
INFO  18:50:21,304 - #11 true
INFO  18:50:21,304 - #27 ;
INFO  18:50:21,306 - #8 mini
INFO  18:50:21,306 - #24 =
INFO  18:50:21,306 - #12 false
INFO  18:50:21,307 - #27 ;
INFO  18:50:21,308 - #31 if
INFO  18:50:21,308 - #29 (
INFO  18:50:21,308 - #29 (
INFO  18:50:21,308 - #9 2
INFO  18:50:21,309 - #17 *
INFO  18:50:21,309 - #29 (
INFO  18:50:21,310 - #8 a
INFO  18:50:21,310 - #16 -
INFO  18:50:21,310 - #8 b
INFO  18:50:21,312 - #16 -
INFO  18:50:21,312 - #9 1
INFO  18:50:21,312 - #30 )
INFO  18:50:21,313 - #16 -
INFO  18:50:21,313 - #9 14
INFO  18:50:21,314 - #38 >
ERROR 18:50:21,314 - 
Sintaksna greska na liniji -1
ERROR 18:50:21,314 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:51:19,899 - #2 program
INFO  18:51:19,901 - #8 Program
INFO  18:51:19,901 - #20 {
INFO  18:51:19,902 - #5 const
INFO  18:51:19,902 - #8 int
INFO  18:51:19,903 - #8 c
INFO  18:51:19,903 - #24 =
INFO  18:51:19,903 - #9 10
INFO  18:51:19,903 - #27 ;
INFO  18:51:19,904 - #5 const
INFO  18:51:19,905 - #8 int
INFO  18:51:19,905 - #8 d
INFO  18:51:19,906 - #24 =
INFO  18:51:19,906 - #9 99
INFO  18:51:19,906 - #27 ;
INFO  18:51:19,906 - #8 int
INFO  18:51:19,907 - #8 e
INFO  18:51:19,907 - #27 ;
INFO  18:51:19,907 - #6 void
INFO  18:51:19,907 - #8 test
INFO  18:51:19,908 - #29 (
INFO  18:51:19,908 - #30 )
INFO  18:51:19,908 - #20 {
INFO  18:51:19,908 - #8 int
INFO  18:51:19,909 - #8 a
INFO  18:51:19,909 - #27 ;
INFO  18:51:19,909 - #8 int
INFO  18:51:19,909 - #8 b
INFO  18:51:19,909 - #27 ;
INFO  18:51:19,910 - #8 bool
INFO  18:51:19,910 - #8 cond
INFO  18:51:19,910 - #27 ;
INFO  18:51:19,910 - #8 bool
INFO  18:51:19,911 - #8 mini
INFO  18:51:19,911 - #27 ;
INFO  18:51:19,911 - #8 a
INFO  18:51:19,911 - #24 =
INFO  18:51:19,911 - #9 3
INFO  18:51:19,911 - #27 ;
INFO  18:51:19,912 - #8 b
INFO  18:51:19,913 - #24 =
INFO  18:51:19,913 - #9 5
INFO  18:51:19,913 - #27 ;
INFO  18:51:19,913 - #8 cond
INFO  18:51:19,914 - #24 =
INFO  18:51:19,914 - #11 true
INFO  18:51:19,914 - #27 ;
INFO  18:51:19,916 - #8 mini
INFO  18:51:19,916 - #24 =
INFO  18:51:19,916 - #12 false
INFO  18:51:19,916 - #27 ;
INFO  18:51:19,917 - #31 if
INFO  18:51:19,918 - #29 (
INFO  18:51:19,918 - #9 2
INFO  18:51:19,918 - #17 *
INFO  18:51:19,918 - #29 (
INFO  18:51:19,920 - #8 a
INFO  18:51:19,920 - #16 -
INFO  18:51:19,920 - #8 b
INFO  18:51:19,922 - #16 -
INFO  18:51:19,923 - #9 1
INFO  18:51:19,923 - #30 )
INFO  18:51:19,924 - #16 -
INFO  18:51:19,924 - #9 14
INFO  18:51:19,925 - #38 >
INFO  18:51:19,925 - #9 0
INFO  18:51:19,927 - #13 &&
INFO  18:51:19,927 - #8 cond
INFO  18:51:19,927 - #30 )
INFO  18:51:19,928 - #3 print
INFO  18:51:19,928 - #29 (
INFO  18:51:19,928 - #8 a
INFO  18:51:19,928 - #15 +
INFO  18:51:19,928 - #8 b
INFO  18:51:19,929 - #30 )
INFO  18:51:19,930 - #27 ;
INFO  18:51:19,930 - #21 }
INFO  18:51:19,933 - #8 int
INFO  18:51:19,933 - #8 max
INFO  18:51:19,933 - #29 (
INFO  18:51:19,933 - #8 int
INFO  18:51:19,934 - #8 a
INFO  18:51:19,934 - #28 ,
INFO  18:51:19,934 - #8 int
INFO  18:51:19,934 - #8 b
INFO  18:51:19,934 - #30 )
INFO  18:51:19,935 - #20 {
INFO  18:51:19,935 - #31 if
INFO  18:51:19,935 - #29 (
INFO  18:51:19,935 - #8 a
INFO  18:51:19,935 - #38 >
INFO  18:51:19,935 - #8 b
INFO  18:51:19,935 - #30 )
INFO  18:51:19,936 - #20 {
INFO  18:51:19,936 - #37 return
INFO  18:51:19,936 - #8 a
INFO  18:51:19,936 - #27 ;
INFO  18:51:19,936 - #21 }
INFO  18:51:19,936 - #32 else
INFO  18:51:19,937 - #37 return
INFO  18:51:19,937 - #8 b
INFO  18:51:19,937 - #27 ;
INFO  18:51:19,937 - #21 }
INFO  18:51:19,938 - #8 int
INFO  18:51:19,938 - #8 min
INFO  18:51:19,938 - #29 (
INFO  18:51:19,938 - #8 int
INFO  18:51:19,938 - #8 a
INFO  18:51:19,938 - #28 ,
INFO  18:51:19,939 - #8 int
INFO  18:51:19,939 - #8 b
INFO  18:51:19,939 - #30 )
INFO  18:51:19,939 - #20 {
INFO  18:51:19,939 - #31 if
INFO  18:51:19,939 - #29 (
INFO  18:51:19,940 - #8 a
INFO  18:51:19,940 - #40 <
INFO  18:51:19,940 - #8 b
INFO  18:51:19,941 - #30 )
INFO  18:51:19,942 - #20 {
INFO  18:51:19,942 - #37 return
INFO  18:51:19,942 - #8 a
INFO  18:51:19,943 - #27 ;
INFO  18:51:19,943 - #21 }
INFO  18:51:19,943 - #32 else
INFO  18:51:19,943 - #20 {
INFO  18:51:19,943 - #37 return
INFO  18:51:19,944 - #8 b
INFO  18:51:19,944 - #27 ;
INFO  18:51:19,944 - #21 }
INFO  18:51:19,944 - #21 }
INFO  18:51:19,944 - #6 void
INFO  18:51:19,944 - #8 main
INFO  18:51:19,944 - #29 (
INFO  18:51:19,945 - #30 )
INFO  18:51:19,945 - #20 {
INFO  18:51:19,945 - #8 int
INFO  18:51:19,945 - #8 a
INFO  18:51:19,945 - #22 [
INFO  18:51:19,945 - #23 ]
INFO  18:51:19,945 - #27 ;
INFO  18:51:19,945 - #8 int
INFO  18:51:19,945 - #8 length
INFO  18:51:19,946 - #27 ;
INFO  18:51:19,946 - #8 length
INFO  18:51:19,946 - #24 =
INFO  18:51:19,946 - #8 c
INFO  18:51:19,946 - #27 ;
INFO  18:51:19,946 - #8 test
INFO  18:51:19,946 - #29 (
INFO  18:51:19,946 - #30 )
INFO  18:51:19,946 - #27 ;
INFO  18:51:19,946 - #31 if
INFO  18:51:19,947 - #29 (
INFO  18:51:19,947 - #8 length
INFO  18:51:19,947 - #38 >
INFO  18:51:19,947 - #9 0
INFO  18:51:19,947 - #13 &&
INFO  18:51:19,947 - #8 length
INFO  18:51:19,947 - #42 <=
INFO  18:51:19,947 - #8 d
INFO  18:51:19,948 - #30 )
INFO  18:51:19,949 - #8 a
INFO  18:51:19,949 - #24 =
INFO  18:51:19,949 - #7 new
INFO  18:51:19,949 - #8 int
INFO  18:51:19,949 - #22 [
INFO  18:51:19,949 - #8 length
INFO  18:51:19,949 - #23 ]
INFO  18:51:19,949 - #27 ;
INFO  18:51:19,950 - #32 else
INFO  18:51:19,950 - #8 a
INFO  18:51:19,950 - #24 =
INFO  18:51:19,950 - #7 new
INFO  18:51:19,950 - #8 int
INFO  18:51:19,950 - #22 [
INFO  18:51:19,950 - #9 5
INFO  18:51:19,950 - #23 ]
INFO  18:51:19,950 - #27 ;
INFO  18:51:19,950 - #33 do
INFO  18:51:19,950 - #20 {
INFO  18:51:19,951 - #4 read
INFO  18:51:19,951 - #29 (
INFO  18:51:19,951 - #8 a
INFO  18:51:19,951 - #22 [
INFO  18:51:19,951 - #8 i
INFO  18:51:19,951 - #23 ]
INFO  18:51:19,951 - #30 )
INFO  18:51:19,951 - #27 ;
INFO  18:51:19,951 - #31 if
INFO  18:51:19,952 - #29 (
INFO  18:51:19,952 - #8 a
INFO  18:51:19,952 - #22 [
INFO  18:51:19,952 - #8 i
INFO  18:51:19,952 - #23 ]
INFO  18:51:19,952 - #19 %
INFO  18:51:19,952 - #9 3
INFO  18:51:19,953 - #39 ==
INFO  18:51:19,953 - #9 0
INFO  18:51:19,954 - #30 )
INFO  18:51:19,955 - #3 print
INFO  18:51:19,955 - #29 (
INFO  18:51:19,955 - #8 a
INFO  18:51:19,956 - #22 [
INFO  18:51:19,956 - #8 i
INFO  18:51:19,956 - #23 ]
INFO  18:51:19,956 - #30 )
INFO  18:51:19,956 - #27 ;
INFO  18:51:19,957 - #32 else
INFO  18:51:19,957 - #3 print
INFO  18:51:19,957 - #29 (
INFO  18:51:19,957 - #8 max
INFO  18:51:19,957 - #29 (
INFO  18:51:19,957 - #8 a
INFO  18:51:19,957 - #22 [
INFO  18:51:19,957 - #8 i
INFO  18:51:19,958 - #23 ]
INFO  18:51:19,958 - #28 ,
INFO  18:51:19,958 - #9 0
INFO  18:51:19,958 - #30 )
INFO  18:51:19,958 - #30 )
INFO  18:51:19,959 - #27 ;
INFO  18:51:19,959 - #21 }
INFO  18:51:19,959 - #34 while
INFO  18:51:19,959 - #29 (
INFO  18:51:19,959 - #8 i
INFO  18:51:19,959 - #42 <=
INFO  18:51:19,959 - #8 length
INFO  18:51:19,960 - #16 -
INFO  18:51:19,960 - #9 1
INFO  18:51:19,960 - #30 )
INFO  18:51:19,960 - #27 ;
INFO  18:51:19,960 - #3 print
INFO  18:51:19,961 - #29 (
INFO  18:51:19,961 - #8 d
INFO  18:51:19,961 - #30 )
INFO  18:51:19,961 - #27 ;
INFO  18:51:19,961 - #21 }
INFO  18:51:19,962 - #21 }
INFO  18:51:32,051 - #2 program
INFO  18:51:32,052 - #8 Program
INFO  18:51:32,052 - #20 {
INFO  18:51:32,053 - #5 const
INFO  18:51:32,053 - #8 int
INFO  18:51:32,053 - #8 c
INFO  18:51:32,054 - #24 =
INFO  18:51:32,054 - #9 10
INFO  18:51:32,054 - #27 ;
INFO  18:51:32,054 - #5 const
INFO  18:51:32,055 - #8 int
INFO  18:51:32,056 - #8 d
INFO  18:51:32,056 - #24 =
INFO  18:51:32,056 - #9 99
INFO  18:51:32,056 - #27 ;
INFO  18:51:32,056 - #8 int
INFO  18:51:32,056 - #8 e
INFO  18:51:32,056 - #27 ;
INFO  18:51:32,056 - #6 void
INFO  18:51:32,057 - #8 test
INFO  18:51:32,057 - #29 (
INFO  18:51:32,057 - #30 )
INFO  18:51:32,057 - #20 {
INFO  18:51:32,057 - #8 int
INFO  18:51:32,057 - #8 a
INFO  18:51:32,057 - #27 ;
INFO  18:51:32,057 - #8 int
INFO  18:51:32,058 - #8 b
INFO  18:51:32,058 - #27 ;
INFO  18:51:32,058 - #8 bool
INFO  18:51:32,058 - #8 cond
INFO  18:51:32,058 - #27 ;
INFO  18:51:32,058 - #8 bool
INFO  18:51:32,058 - #8 mini
INFO  18:51:32,059 - #27 ;
INFO  18:51:32,059 - #8 a
INFO  18:51:32,059 - #24 =
INFO  18:51:32,059 - #9 3
INFO  18:51:32,059 - #27 ;
INFO  18:51:32,060 - #8 b
INFO  18:51:32,060 - #24 =
INFO  18:51:32,060 - #9 5
INFO  18:51:32,060 - #27 ;
INFO  18:51:32,060 - #8 cond
INFO  18:51:32,063 - #24 =
INFO  18:51:32,063 - #11 true
INFO  18:51:32,063 - #27 ;
INFO  18:51:32,065 - #8 mini
INFO  18:51:32,065 - #24 =
INFO  18:51:32,065 - #12 false
INFO  18:51:32,066 - #27 ;
INFO  18:51:32,067 - #31 if
INFO  18:51:32,067 - #29 (
INFO  18:51:32,070 - #9 2
INFO  18:51:32,070 - #17 *
INFO  18:51:32,070 - #29 (
INFO  18:51:32,073 - #8 a
INFO  18:51:32,073 - #16 -
INFO  18:51:32,073 - #8 b
INFO  18:51:32,075 - #16 -
INFO  18:51:32,075 - #9 1
INFO  18:51:32,075 - #30 )
INFO  18:51:32,076 - #16 -
INFO  18:51:32,078 - #9 14
INFO  18:51:32,079 - #38 >
INFO  18:51:32,079 - #9 0
INFO  18:51:32,081 - #14 ||
INFO  18:51:32,081 - #8 cond
INFO  18:51:32,082 - #30 )
INFO  18:51:32,082 - #3 print
INFO  18:51:32,082 - #29 (
INFO  18:51:32,082 - #8 a
INFO  18:51:32,082 - #15 +
INFO  18:51:32,083 - #8 b
INFO  18:51:32,084 - #30 )
INFO  18:51:32,084 - #27 ;
INFO  18:51:32,084 - #21 }
INFO  18:51:32,088 - #8 int
INFO  18:51:32,089 - #8 max
INFO  18:51:32,089 - #29 (
INFO  18:51:32,089 - #8 int
INFO  18:51:32,089 - #8 a
INFO  18:51:32,089 - #28 ,
INFO  18:51:32,089 - #8 int
INFO  18:51:32,090 - #8 b
INFO  18:51:32,090 - #30 )
INFO  18:51:32,090 - #20 {
INFO  18:51:32,090 - #31 if
INFO  18:51:32,090 - #29 (
INFO  18:51:32,090 - #8 a
INFO  18:51:32,090 - #38 >
INFO  18:51:32,090 - #8 b
INFO  18:51:32,091 - #30 )
INFO  18:51:32,091 - #20 {
INFO  18:51:32,091 - #37 return
INFO  18:51:32,091 - #8 a
INFO  18:51:32,091 - #27 ;
INFO  18:51:32,091 - #21 }
INFO  18:51:32,092 - #32 else
INFO  18:51:32,092 - #37 return
INFO  18:51:32,092 - #8 b
INFO  18:51:32,092 - #27 ;
INFO  18:51:32,092 - #21 }
INFO  18:51:32,093 - #8 int
INFO  18:51:32,093 - #8 min
INFO  18:51:32,093 - #29 (
INFO  18:51:32,093 - #8 int
INFO  18:51:32,093 - #8 a
INFO  18:51:32,093 - #28 ,
INFO  18:51:32,094 - #8 int
INFO  18:51:32,094 - #8 b
INFO  18:51:32,094 - #30 )
INFO  18:51:32,094 - #20 {
INFO  18:51:32,094 - #31 if
INFO  18:51:32,094 - #29 (
INFO  18:51:32,094 - #8 a
INFO  18:51:32,094 - #40 <
INFO  18:51:32,095 - #8 b
INFO  18:51:32,096 - #30 )
INFO  18:51:32,096 - #20 {
INFO  18:51:32,096 - #37 return
INFO  18:51:32,096 - #8 a
INFO  18:51:32,097 - #27 ;
INFO  18:51:32,097 - #21 }
INFO  18:51:32,097 - #32 else
INFO  18:51:32,097 - #20 {
INFO  18:51:32,098 - #37 return
INFO  18:51:32,098 - #8 b
INFO  18:51:32,098 - #27 ;
INFO  18:51:32,098 - #21 }
INFO  18:51:32,099 - #21 }
INFO  18:51:32,099 - #6 void
INFO  18:51:32,099 - #8 main
INFO  18:51:32,099 - #29 (
INFO  18:51:32,099 - #30 )
INFO  18:51:32,099 - #20 {
INFO  18:51:32,099 - #8 int
INFO  18:51:32,099 - #8 a
INFO  18:51:32,099 - #22 [
INFO  18:51:32,099 - #23 ]
INFO  18:51:32,100 - #27 ;
INFO  18:51:32,100 - #8 int
INFO  18:51:32,100 - #8 length
INFO  18:51:32,100 - #27 ;
INFO  18:51:32,100 - #8 length
INFO  18:51:32,100 - #24 =
INFO  18:51:32,100 - #8 c
INFO  18:51:32,100 - #27 ;
INFO  18:51:32,100 - #8 test
INFO  18:51:32,100 - #29 (
INFO  18:51:32,101 - #30 )
INFO  18:51:32,101 - #27 ;
INFO  18:51:32,101 - #31 if
INFO  18:51:32,101 - #29 (
INFO  18:51:32,101 - #8 length
INFO  18:51:32,101 - #38 >
INFO  18:51:32,101 - #9 0
INFO  18:51:32,101 - #13 &&
INFO  18:51:32,101 - #8 length
INFO  18:51:32,102 - #42 <=
INFO  18:51:32,102 - #8 d
INFO  18:51:32,103 - #30 )
INFO  18:51:32,103 - #8 a
INFO  18:51:32,103 - #24 =
INFO  18:51:32,103 - #7 new
INFO  18:51:32,104 - #8 int
INFO  18:51:32,104 - #22 [
INFO  18:51:32,104 - #8 length
INFO  18:51:32,104 - #23 ]
INFO  18:51:32,104 - #27 ;
INFO  18:51:32,104 - #32 else
INFO  18:51:32,104 - #8 a
INFO  18:51:32,104 - #24 =
INFO  18:51:32,104 - #7 new
INFO  18:51:32,105 - #8 int
INFO  18:51:32,105 - #22 [
INFO  18:51:32,105 - #9 5
INFO  18:51:32,105 - #23 ]
INFO  18:51:32,105 - #27 ;
INFO  18:51:32,105 - #33 do
INFO  18:51:32,106 - #20 {
INFO  18:51:32,106 - #4 read
INFO  18:51:32,106 - #29 (
INFO  18:51:32,106 - #8 a
INFO  18:51:32,106 - #22 [
INFO  18:51:32,106 - #8 i
INFO  18:51:32,106 - #23 ]
INFO  18:51:32,106 - #30 )
INFO  18:51:32,107 - #27 ;
INFO  18:51:32,107 - #31 if
INFO  18:51:32,107 - #29 (
INFO  18:51:32,107 - #8 a
INFO  18:51:32,107 - #22 [
INFO  18:51:32,107 - #8 i
INFO  18:51:32,107 - #23 ]
INFO  18:51:32,107 - #19 %
INFO  18:51:32,107 - #9 3
INFO  18:51:32,109 - #39 ==
INFO  18:51:32,109 - #9 0
INFO  18:51:32,111 - #30 )
INFO  18:51:32,111 - #3 print
INFO  18:51:32,111 - #29 (
INFO  18:51:32,111 - #8 a
INFO  18:51:32,111 - #22 [
INFO  18:51:32,111 - #8 i
INFO  18:51:32,112 - #23 ]
INFO  18:51:32,112 - #30 )
INFO  18:51:32,112 - #27 ;
INFO  18:51:32,112 - #32 else
INFO  18:51:32,112 - #3 print
INFO  18:51:32,112 - #29 (
INFO  18:51:32,112 - #8 max
INFO  18:51:32,112 - #29 (
INFO  18:51:32,112 - #8 a
INFO  18:51:32,112 - #22 [
INFO  18:51:32,112 - #8 i
INFO  18:51:32,112 - #23 ]
INFO  18:51:32,112 - #28 ,
INFO  18:51:32,113 - #9 0
INFO  18:51:32,113 - #30 )
INFO  18:51:32,113 - #30 )
INFO  18:51:32,113 - #27 ;
INFO  18:51:32,113 - #21 }
INFO  18:51:32,113 - #34 while
INFO  18:51:32,114 - #29 (
INFO  18:51:32,114 - #8 i
INFO  18:51:32,114 - #42 <=
INFO  18:51:32,114 - #8 length
INFO  18:51:32,114 - #16 -
INFO  18:51:32,114 - #9 1
INFO  18:51:32,114 - #30 )
INFO  18:51:32,114 - #27 ;
INFO  18:51:32,114 - #3 print
INFO  18:51:32,115 - #29 (
INFO  18:51:32,115 - #8 d
INFO  18:51:32,115 - #30 )
INFO  18:51:32,115 - #27 ;
INFO  18:51:32,115 - #21 }
INFO  18:51:32,115 - #21 }
INFO  18:52:00,905 - #2 program
INFO  18:52:00,905 - #8 Program
INFO  18:52:00,905 - #20 {
INFO  18:52:00,906 - #5 const
INFO  18:52:00,906 - #8 int
INFO  18:52:00,906 - #8 c
INFO  18:52:00,906 - #24 =
INFO  18:52:00,906 - #9 10
INFO  18:52:00,906 - #27 ;
INFO  18:52:00,906 - #5 const
INFO  18:52:00,907 - #8 int
INFO  18:52:00,908 - #8 d
INFO  18:52:00,908 - #24 =
INFO  18:52:00,908 - #9 99
INFO  18:52:00,908 - #27 ;
INFO  18:52:00,909 - #8 int
INFO  18:52:00,909 - #8 e
INFO  18:52:00,909 - #27 ;
INFO  18:52:00,909 - #6 void
INFO  18:52:00,910 - #8 test
INFO  18:52:00,910 - #29 (
INFO  18:52:00,910 - #30 )
INFO  18:52:00,910 - #20 {
INFO  18:52:00,910 - #8 int
INFO  18:52:00,910 - #8 a
INFO  18:52:00,910 - #27 ;
INFO  18:52:00,910 - #8 int
INFO  18:52:00,911 - #8 b
INFO  18:52:00,911 - #27 ;
INFO  18:52:00,911 - #8 bool
INFO  18:52:00,911 - #8 cond
INFO  18:52:00,912 - #27 ;
INFO  18:52:00,912 - #8 a
INFO  18:52:00,912 - #24 =
INFO  18:52:00,912 - #9 3
INFO  18:52:00,913 - #27 ;
INFO  18:52:00,913 - #8 b
INFO  18:52:00,914 - #24 =
INFO  18:52:00,914 - #9 5
INFO  18:52:00,914 - #27 ;
INFO  18:52:00,914 - #8 cond
INFO  18:52:00,914 - #24 =
INFO  18:52:00,914 - #11 true
INFO  18:52:00,915 - #27 ;
INFO  18:52:00,916 - #27 ;
ERROR 18:52:00,917 - 
Sintaksna greska na liniji -1
ERROR 18:52:00,917 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  18:52:13,371 - #2 program
INFO  18:52:13,372 - #8 Program
INFO  18:52:13,372 - #20 {
INFO  18:52:13,372 - #5 const
INFO  18:52:13,372 - #8 int
INFO  18:52:13,373 - #8 c
INFO  18:52:13,373 - #24 =
INFO  18:52:13,373 - #9 10
INFO  18:52:13,373 - #27 ;
INFO  18:52:13,374 - #5 const
INFO  18:52:13,374 - #8 int
INFO  18:52:13,375 - #8 d
INFO  18:52:13,375 - #24 =
INFO  18:52:13,375 - #9 99
INFO  18:52:13,375 - #27 ;
INFO  18:52:13,375 - #8 int
INFO  18:52:13,376 - #8 e
INFO  18:52:13,376 - #27 ;
INFO  18:52:13,376 - #6 void
INFO  18:52:13,376 - #8 test
INFO  18:52:13,376 - #29 (
INFO  18:52:13,377 - #30 )
INFO  18:52:13,377 - #20 {
INFO  18:52:13,377 - #8 int
INFO  18:52:13,377 - #8 a
INFO  18:52:13,377 - #27 ;
INFO  18:52:13,377 - #8 int
INFO  18:52:13,377 - #8 b
INFO  18:52:13,377 - #27 ;
INFO  18:52:13,378 - #8 bool
INFO  18:52:13,378 - #8 cond
INFO  18:52:13,378 - #27 ;
INFO  18:52:13,378 - #8 a
INFO  18:52:13,379 - #24 =
INFO  18:52:13,379 - #9 3
INFO  18:52:13,379 - #27 ;
INFO  18:52:13,380 - #8 b
INFO  18:52:13,380 - #24 =
INFO  18:52:13,380 - #9 5
INFO  18:52:13,381 - #27 ;
INFO  18:52:13,381 - #8 cond
INFO  18:52:13,381 - #24 =
INFO  18:52:13,381 - #11 true
INFO  18:52:13,382 - #27 ;
INFO  18:52:13,384 - #31 if
INFO  18:52:13,384 - #29 (
INFO  18:52:13,385 - #9 2
INFO  18:52:13,385 - #17 *
INFO  18:52:13,385 - #29 (
INFO  18:52:13,386 - #8 a
INFO  18:52:13,386 - #16 -
INFO  18:52:13,387 - #8 b
INFO  18:52:13,389 - #16 -
INFO  18:52:13,390 - #9 1
INFO  18:52:13,390 - #30 )
INFO  18:52:13,390 - #16 -
INFO  18:52:13,391 - #9 14
INFO  18:52:13,391 - #38 >
INFO  18:52:13,391 - #9 0
INFO  18:52:13,393 - #14 ||
INFO  18:52:13,393 - #8 cond
INFO  18:52:13,394 - #30 )
INFO  18:52:13,394 - #3 print
INFO  18:52:13,394 - #29 (
INFO  18:52:13,394 - #8 a
INFO  18:52:13,395 - #15 +
INFO  18:52:13,395 - #8 b
INFO  18:52:13,396 - #30 )
INFO  18:52:13,396 - #27 ;
INFO  18:52:13,396 - #21 }
INFO  18:52:13,396 - #8 int
INFO  18:52:13,397 - #8 max
INFO  18:52:13,397 - #29 (
INFO  18:52:13,397 - #8 int
INFO  18:52:13,397 - #8 a
INFO  18:52:13,397 - #28 ,
INFO  18:52:13,397 - #8 int
INFO  18:52:13,400 - #8 b
INFO  18:52:13,400 - #30 )
INFO  18:52:13,400 - #20 {
INFO  18:52:13,400 - #31 if
INFO  18:52:13,401 - #29 (
INFO  18:52:13,401 - #8 a
INFO  18:52:13,401 - #38 >
INFO  18:52:13,401 - #8 b
INFO  18:52:13,401 - #30 )
INFO  18:52:13,401 - #20 {
INFO  18:52:13,401 - #37 return
INFO  18:52:13,401 - #8 a
INFO  18:52:13,401 - #27 ;
INFO  18:52:13,402 - #21 }
INFO  18:52:13,402 - #32 else
INFO  18:52:13,402 - #37 return
INFO  18:52:13,403 - #8 b
INFO  18:52:13,403 - #27 ;
INFO  18:52:13,403 - #21 }
INFO  18:52:13,403 - #8 int
INFO  18:52:13,404 - #8 min
INFO  18:52:13,404 - #29 (
INFO  18:52:13,404 - #8 int
INFO  18:52:13,404 - #8 a
INFO  18:52:13,404 - #28 ,
INFO  18:52:13,404 - #8 int
INFO  18:52:13,404 - #8 b
INFO  18:52:13,404 - #30 )
INFO  18:52:13,404 - #20 {
INFO  18:52:13,404 - #31 if
INFO  18:52:13,405 - #29 (
INFO  18:52:13,405 - #8 a
INFO  18:52:13,405 - #40 <
INFO  18:52:13,405 - #8 b
INFO  18:52:13,406 - #30 )
INFO  18:52:13,406 - #20 {
INFO  18:52:13,406 - #37 return
INFO  18:52:13,406 - #8 a
INFO  18:52:13,406 - #27 ;
INFO  18:52:13,406 - #21 }
INFO  18:52:13,406 - #32 else
INFO  18:52:13,406 - #20 {
INFO  18:52:13,407 - #37 return
INFO  18:52:13,407 - #8 b
INFO  18:52:13,407 - #27 ;
INFO  18:52:13,407 - #21 }
INFO  18:52:13,407 - #21 }
INFO  18:52:13,407 - #6 void
INFO  18:52:13,407 - #8 main
INFO  18:52:13,407 - #29 (
INFO  18:52:13,407 - #30 )
INFO  18:52:13,408 - #20 {
INFO  18:52:13,408 - #8 int
INFO  18:52:13,408 - #8 a
INFO  18:52:13,408 - #22 [
INFO  18:52:13,408 - #23 ]
INFO  18:52:13,408 - #27 ;
INFO  18:52:13,408 - #8 int
INFO  18:52:13,408 - #8 length
INFO  18:52:13,408 - #27 ;
INFO  18:52:13,408 - #8 length
INFO  18:52:13,409 - #24 =
INFO  18:52:13,409 - #8 c
INFO  18:52:13,409 - #27 ;
INFO  18:52:13,409 - #8 test
INFO  18:52:13,409 - #29 (
INFO  18:52:13,409 - #30 )
INFO  18:52:13,409 - #27 ;
INFO  18:52:13,409 - #31 if
INFO  18:52:13,409 - #29 (
INFO  18:52:13,409 - #8 length
INFO  18:52:13,409 - #38 >
INFO  18:52:13,409 - #9 0
INFO  18:52:13,410 - #13 &&
INFO  18:52:13,410 - #8 length
INFO  18:52:13,410 - #42 <=
INFO  18:52:13,410 - #8 d
INFO  18:52:13,411 - #30 )
INFO  18:52:13,411 - #8 a
INFO  18:52:13,411 - #24 =
INFO  18:52:13,411 - #7 new
INFO  18:52:13,411 - #8 int
INFO  18:52:13,411 - #22 [
INFO  18:52:13,411 - #8 length
INFO  18:52:13,412 - #23 ]
INFO  18:52:13,412 - #27 ;
INFO  18:52:13,412 - #32 else
INFO  18:52:13,412 - #8 a
INFO  18:52:13,412 - #24 =
INFO  18:52:13,412 - #7 new
INFO  18:52:13,412 - #8 int
INFO  18:52:13,412 - #22 [
INFO  18:52:13,412 - #9 5
INFO  18:52:13,412 - #23 ]
INFO  18:52:13,412 - #27 ;
INFO  18:52:13,413 - #33 do
INFO  18:52:13,413 - #20 {
INFO  18:52:13,413 - #4 read
INFO  18:52:13,413 - #29 (
INFO  18:52:13,413 - #8 a
INFO  18:52:13,413 - #22 [
INFO  18:52:13,413 - #8 i
INFO  18:52:13,414 - #23 ]
INFO  18:52:13,414 - #30 )
INFO  18:52:13,415 - #27 ;
INFO  18:52:13,415 - #31 if
INFO  18:52:13,415 - #29 (
INFO  18:52:13,415 - #8 a
INFO  18:52:13,415 - #22 [
INFO  18:52:13,415 - #8 i
INFO  18:52:13,415 - #23 ]
INFO  18:52:13,415 - #19 %
INFO  18:52:13,416 - #9 3
INFO  18:52:13,417 - #39 ==
INFO  18:52:13,417 - #9 0
INFO  18:52:13,418 - #30 )
INFO  18:52:13,418 - #3 print
INFO  18:52:13,418 - #29 (
INFO  18:52:13,418 - #8 a
INFO  18:52:13,418 - #22 [
INFO  18:52:13,418 - #8 i
INFO  18:52:13,418 - #23 ]
INFO  18:52:13,418 - #30 )
INFO  18:52:13,418 - #27 ;
INFO  18:52:13,419 - #32 else
INFO  18:52:13,419 - #3 print
INFO  18:52:13,419 - #29 (
INFO  18:52:13,419 - #8 max
INFO  18:52:13,419 - #29 (
INFO  18:52:13,419 - #8 a
INFO  18:52:13,419 - #22 [
INFO  18:52:13,419 - #8 i
INFO  18:52:13,419 - #23 ]
INFO  18:52:13,419 - #28 ,
INFO  18:52:13,419 - #9 0
INFO  18:52:13,419 - #30 )
INFO  18:52:13,420 - #30 )
INFO  18:52:13,420 - #27 ;
INFO  18:52:13,420 - #21 }
INFO  18:52:13,420 - #34 while
INFO  18:52:13,420 - #29 (
INFO  18:52:13,421 - #8 i
INFO  18:52:13,421 - #42 <=
INFO  18:52:13,421 - #8 length
INFO  18:52:13,421 - #16 -
INFO  18:52:13,421 - #9 1
INFO  18:52:13,421 - #30 )
INFO  18:52:13,421 - #27 ;
INFO  18:52:13,421 - #3 print
INFO  18:52:13,421 - #29 (
INFO  18:52:13,421 - #8 d
INFO  18:52:13,422 - #30 )
INFO  18:52:13,422 - #27 ;
INFO  18:52:13,422 - #21 }
INFO  18:52:13,422 - #21 }
INFO  19:34:40,624 - #2 program
INFO  19:34:40,682 - #8 Program
INFO  19:34:40,682 - #20 {
INFO  19:34:40,682 - #5 const
INFO  19:34:40,682 - #8 int
INFO  19:34:40,683 - #8 c
ERROR 19:34:40,684 - 
Sintaksna greska na liniji -1
ERROR 19:34:40,684 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  19:37:55,233 - #2 program
INFO  19:37:55,258 - #8 Program
INFO  19:37:55,258 - #20 {
INFO  19:37:55,258 - #5 const
INFO  19:37:55,258 - #8 int
INFO  19:37:55,258 - #8 c
INFO  19:37:55,259 - #24 =
INFO  19:37:55,259 - #9 10
INFO  19:37:55,259 - #27 ;
INFO  19:37:55,259 - #5 const
INFO  19:37:55,260 - #8 int
INFO  19:37:55,260 - #8 d
INFO  19:37:55,260 - #24 =
INFO  19:37:55,260 - #9 99
INFO  19:37:55,260 - #27 ;
INFO  19:37:55,260 - #8 int
INFO  19:37:55,261 - #8 e
INFO  19:37:55,261 - #27 ;
INFO  19:37:55,261 - #6 void
INFO  19:37:55,261 - #8 test
INFO  19:37:55,261 - #29 (
INFO  19:37:55,262 - #30 )
INFO  19:37:55,262 - #20 {
INFO  19:37:55,262 - #8 int
INFO  19:37:55,262 - #8 a
INFO  19:37:55,263 - #27 ;
INFO  19:37:55,263 - #8 int
INFO  19:37:55,263 - #8 b
INFO  19:37:55,263 - #27 ;
INFO  19:37:55,263 - #8 bool
INFO  19:37:55,264 - #8 cond
INFO  19:37:55,264 - #27 ;
INFO  19:37:55,264 - #8 a
INFO  19:37:55,264 - #24 =
INFO  19:37:55,264 - #9 3
INFO  19:37:55,264 - #27 ;
INFO  19:37:55,265 - #8 b
INFO  19:37:55,266 - #24 =
INFO  19:37:55,266 - #9 5
INFO  19:37:55,266 - #27 ;
INFO  19:37:55,266 - #8 cond
INFO  19:37:55,266 - #24 =
INFO  19:37:55,266 - #11 true
INFO  19:37:55,266 - #27 ;
INFO  19:37:55,268 - #31 if
INFO  19:37:55,268 - #29 (
INFO  19:37:55,268 - #9 2
INFO  19:37:55,268 - #17 *
INFO  19:37:55,268 - #29 (
INFO  19:37:55,270 - #8 a
INFO  19:37:55,270 - #16 -
INFO  19:37:55,270 - #8 b
INFO  19:37:55,272 - #16 -
INFO  19:37:55,272 - #9 1
INFO  19:37:55,273 - #30 )
INFO  19:37:55,273 - #16 -
INFO  19:37:55,273 - #9 14
INFO  19:37:55,274 - #38 >
INFO  19:37:55,274 - #9 0
INFO  19:37:55,276 - #14 ||
INFO  19:37:55,276 - #8 cond
INFO  19:37:55,277 - #30 )
INFO  19:37:55,277 - #3 print
INFO  19:37:55,277 - #29 (
INFO  19:37:55,277 - #8 a
INFO  19:37:55,278 - #15 +
INFO  19:37:55,278 - #8 b
INFO  19:37:55,279 - #30 )
INFO  19:37:55,279 - #27 ;
INFO  19:37:55,279 - #21 }
INFO  19:37:55,279 - #8 int
INFO  19:37:55,280 - #8 max
INFO  19:37:55,280 - #29 (
INFO  19:37:55,280 - #8 int
INFO  19:37:55,280 - #8 a
INFO  19:37:55,280 - #28 ,
INFO  19:37:55,281 - #8 int
INFO  19:37:55,283 - #8 b
INFO  19:37:55,283 - #30 )
INFO  19:37:55,284 - #20 {
INFO  19:37:55,284 - #31 if
INFO  19:37:55,284 - #29 (
INFO  19:37:55,284 - #8 a
INFO  19:37:55,284 - #38 >
INFO  19:37:55,284 - #8 b
INFO  19:37:55,284 - #30 )
INFO  19:37:55,284 - #20 {
INFO  19:37:55,285 - #37 return
INFO  19:37:55,285 - #8 a
INFO  19:37:55,285 - #27 ;
INFO  19:37:55,285 - #21 }
INFO  19:37:55,285 - #32 else
INFO  19:37:55,285 - #37 return
INFO  19:37:55,285 - #8 b
INFO  19:37:55,285 - #27 ;
INFO  19:37:55,286 - #21 }
INFO  19:37:55,287 - #8 int
INFO  19:37:55,287 - #8 min
INFO  19:37:55,287 - #29 (
INFO  19:37:55,288 - #8 int
INFO  19:37:55,288 - #8 a
INFO  19:37:55,288 - #28 ,
INFO  19:37:55,288 - #8 int
INFO  19:37:55,288 - #8 b
INFO  19:37:55,288 - #30 )
INFO  19:37:55,288 - #20 {
INFO  19:37:55,288 - #31 if
INFO  19:37:55,288 - #29 (
INFO  19:37:55,288 - #8 a
INFO  19:37:55,288 - #40 <
INFO  19:37:55,289 - #8 b
INFO  19:37:55,290 - #30 )
INFO  19:37:55,290 - #20 {
INFO  19:37:55,290 - #37 return
INFO  19:37:55,290 - #8 a
INFO  19:37:55,290 - #27 ;
INFO  19:37:55,290 - #21 }
INFO  19:37:55,290 - #32 else
INFO  19:37:55,290 - #20 {
INFO  19:37:55,290 - #37 return
INFO  19:37:55,291 - #8 b
INFO  19:37:55,291 - #27 ;
INFO  19:37:55,291 - #21 }
INFO  19:37:55,291 - #21 }
INFO  19:37:55,291 - #6 void
INFO  19:37:55,292 - #8 main
INFO  19:37:55,292 - #29 (
INFO  19:37:55,292 - #30 )
INFO  19:37:55,292 - #20 {
INFO  19:37:55,292 - #8 int
INFO  19:37:55,292 - #8 a
INFO  19:37:55,292 - #22 [
INFO  19:37:55,293 - #23 ]
INFO  19:37:55,293 - #27 ;
INFO  19:37:55,293 - #8 int
INFO  19:37:55,293 - #8 length
INFO  19:37:55,293 - #27 ;
INFO  19:37:55,293 - #8 length
INFO  19:37:55,293 - #24 =
INFO  19:37:55,293 - #8 c
INFO  19:37:55,293 - #27 ;
INFO  19:37:55,294 - #8 test
INFO  19:37:55,294 - #29 (
INFO  19:37:55,294 - #30 )
INFO  19:37:55,294 - #27 ;
INFO  19:37:55,294 - #31 if
INFO  19:37:55,294 - #29 (
INFO  19:37:55,294 - #8 length
INFO  19:37:55,294 - #38 >
INFO  19:37:55,295 - #9 0
INFO  19:37:55,295 - #13 &&
INFO  19:37:55,295 - #8 length
INFO  19:37:55,295 - #42 <=
INFO  19:37:55,295 - #8 d
INFO  19:37:55,296 - #30 )
INFO  19:37:55,297 - #8 a
INFO  19:37:55,297 - #24 =
INFO  19:37:55,297 - #7 new
INFO  19:37:55,297 - #8 int
INFO  19:37:55,297 - #22 [
INFO  19:37:55,297 - #8 length
INFO  19:37:55,297 - #23 ]
INFO  19:37:55,297 - #27 ;
INFO  19:37:55,297 - #32 else
INFO  19:37:55,297 - #8 a
INFO  19:37:55,298 - #24 =
INFO  19:37:55,298 - #7 new
INFO  19:37:55,298 - #8 int
INFO  19:37:55,298 - #22 [
INFO  19:37:55,298 - #9 5
INFO  19:37:55,298 - #23 ]
INFO  19:37:55,298 - #27 ;
INFO  19:37:55,298 - #33 do
INFO  19:37:55,298 - #20 {
INFO  19:37:55,298 - #4 read
INFO  19:37:55,298 - #29 (
INFO  19:37:55,298 - #8 a
INFO  19:37:55,299 - #22 [
INFO  19:37:55,299 - #8 i
INFO  19:37:55,299 - #23 ]
INFO  19:37:55,299 - #30 )
INFO  19:37:55,299 - #27 ;
INFO  19:37:55,299 - #31 if
INFO  19:37:55,299 - #29 (
INFO  19:37:55,299 - #8 a
INFO  19:37:55,299 - #22 [
INFO  19:37:55,299 - #8 i
INFO  19:37:55,300 - #23 ]
INFO  19:37:55,300 - #19 %
INFO  19:37:55,300 - #9 3
INFO  19:37:55,300 - #39 ==
INFO  19:37:55,301 - #9 0
INFO  19:37:55,301 - #30 )
INFO  19:37:55,301 - #3 print
INFO  19:37:55,301 - #29 (
INFO  19:37:55,301 - #8 a
INFO  19:37:55,302 - #22 [
INFO  19:37:55,302 - #8 i
INFO  19:37:55,302 - #23 ]
INFO  19:37:55,302 - #30 )
INFO  19:37:55,302 - #27 ;
INFO  19:37:55,302 - #32 else
INFO  19:37:55,302 - #3 print
INFO  19:37:55,302 - #29 (
INFO  19:37:55,302 - #8 max
INFO  19:37:55,302 - #29 (
INFO  19:37:55,302 - #8 a
INFO  19:37:55,302 - #22 [
INFO  19:37:55,302 - #8 i
INFO  19:37:55,302 - #23 ]
INFO  19:37:55,302 - #28 ,
INFO  19:37:55,303 - #9 0
INFO  19:37:55,303 - #30 )
INFO  19:37:55,303 - #30 )
INFO  19:37:55,303 - #27 ;
INFO  19:37:55,303 - #21 }
INFO  19:37:55,303 - #34 while
INFO  19:37:55,304 - #29 (
INFO  19:37:55,304 - #8 i
INFO  19:37:55,304 - #42 <=
INFO  19:37:55,304 - #8 length
INFO  19:37:55,304 - #16 -
INFO  19:37:55,304 - #9 1
INFO  19:37:55,304 - #30 )
INFO  19:37:55,304 - #27 ;
INFO  19:37:55,304 - #3 print
INFO  19:37:55,304 - #29 (
INFO  19:37:55,304 - #8 d
INFO  19:37:55,305 - #30 )
INFO  19:37:55,305 - #27 ;
INFO  19:37:55,305 - #21 }
INFO  19:37:55,305 - #21 }
INFO  19:38:56,182 - #2 program
INFO  19:38:56,182 - #8 Program
INFO  19:38:56,182 - #20 {
INFO  19:38:56,183 - #5 const
INFO  19:38:56,183 - #8 int
INFO  19:38:56,183 - #8 c
INFO  19:38:56,184 - #24 =
INFO  19:38:56,184 - #9 10
INFO  19:38:56,184 - #27 ;
INFO  19:38:56,184 - #5 const
INFO  19:38:56,185 - #8 int
INFO  19:38:56,185 - #8 d
INFO  19:38:56,185 - #24 =
INFO  19:38:56,185 - #9 99
INFO  19:38:56,186 - #28 ,
INFO  19:38:56,186 - #8 eps
INFO  19:38:56,186 - #24 =
INFO  19:38:56,186 - #16 -
ERROR 19:38:56,186 - 
Sintaksna greska na liniji -1
ERROR 19:38:56,186 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  19:45:40,604 - #2 program
INFO  19:45:40,604 - #8 Program
INFO  19:45:40,604 - #20 {
INFO  19:45:40,605 - #5 const
INFO  19:45:40,605 - #8 int
INFO  19:45:40,605 - #8 c
INFO  19:45:40,605 - #24 =
INFO  19:45:40,606 - #9 10
INFO  19:45:40,606 - #27 ;
INFO  19:45:40,607 - #5 const
INFO  19:45:40,607 - #8 int
INFO  19:45:40,608 - #8 d
INFO  19:45:40,608 - #24 =
INFO  19:45:40,608 - #9 99
INFO  19:45:40,608 - #28 ,
INFO  19:45:40,608 - #8 eps
INFO  19:45:40,608 - #24 =
INFO  19:45:40,609 - #16 -
ERROR 19:45:40,609 - 
Sintaksna greska na liniji -1
ERROR 19:45:40,609 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  19:50:00,690 - #2 program
INFO  19:50:00,692 - #8 Program
INFO  19:50:00,692 - #20 {
INFO  19:50:00,692 - #5 const
INFO  19:50:00,693 - #8 int
INFO  19:50:00,693 - #8 c
INFO  19:50:00,693 - #24 =
INFO  19:50:00,693 - #9 10
INFO  19:50:00,693 - #27 ;
INFO  19:50:00,694 - #5 const
INFO  19:50:00,694 - #8 int
INFO  19:50:00,695 - #8 d
INFO  19:50:00,697 - #24 =
INFO  19:50:00,697 - #9 99
INFO  19:50:00,697 - #8 int
ERROR 19:50:00,697 - 
Sintaksna greska na liniji -1
ERROR 19:50:00,697 - Fatalna greska, parsiranje se ne moze nastaviti na liniji -1
INFO  19:50:19,686 - #2 program
INFO  19:50:19,687 - #8 Program
INFO  19:50:19,687 - #20 {
INFO  19:50:19,687 - #5 const
INFO  19:50:19,687 - #8 int
INFO  19:50:19,687 - #8 c
INFO  19:50:19,688 - #24 =
INFO  19:50:19,688 - #9 10
INFO  19:50:19,688 - #27 ;
INFO  19:50:19,688 - #5 const
INFO  19:50:19,689 - #8 int
INFO  19:50:19,689 - #8 d
INFO  19:50:19,689 - #24 =
INFO  19:50:19,689 - #9 99
INFO  19:50:19,689 - #27 ;
INFO  19:50:19,689 - #8 int
INFO  19:50:19,689 - #8 e
INFO  19:50:19,690 - #27 ;
INFO  19:50:19,690 - #6 void
INFO  19:50:19,690 - #8 test
INFO  19:50:19,690 - #29 (
INFO  19:50:19,690 - #30 )
INFO  19:50:19,690 - #20 {
INFO  19:50:19,690 - #8 int
INFO  19:50:19,690 - #8 a
INFO  19:50:19,690 - #28 ,
INFO  19:50:19,691 - #8 b
INFO  19:50:19,691 - #27 ;
INFO  19:50:19,691 - #8 bool
INFO  19:50:19,691 - #8 cond
INFO  19:50:19,691 - #27 ;
INFO  19:50:19,691 - #8 a
INFO  19:50:19,691 - #24 =
INFO  19:50:19,692 - #9 3
INFO  19:50:19,692 - #27 ;
INFO  19:50:19,692 - #8 b
INFO  19:50:19,692 - #24 =
INFO  19:50:19,693 - #9 5
INFO  19:50:19,693 - #27 ;
INFO  19:50:19,693 - #8 cond
INFO  19:50:19,693 - #24 =
INFO  19:50:19,693 - #11 true
INFO  19:50:19,693 - #27 ;
INFO  19:50:19,695 - #31 if
INFO  19:50:19,695 - #29 (
INFO  19:50:19,695 - #9 2
INFO  19:50:19,695 - #17 *
INFO  19:50:19,695 - #29 (
INFO  19:50:19,697 - #8 a
INFO  19:50:19,697 - #16 -
INFO  19:50:19,697 - #8 b
INFO  19:50:19,699 - #16 -
INFO  19:50:19,700 - #9 1
INFO  19:50:19,700 - #30 )
INFO  19:50:19,700 - #16 -
INFO  19:50:19,701 - #9 14
INFO  19:50:19,701 - #38 >
INFO  19:50:19,701 - #9 0
INFO  19:50:19,702 - #14 ||
INFO  19:50:19,703 - #8 cond
INFO  19:50:19,703 - #30 )
INFO  19:50:19,703 - #3 print
INFO  19:50:19,703 - #29 (
INFO  19:50:19,703 - #8 a
INFO  19:50:19,704 - #15 +
INFO  19:50:19,704 - #8 b
INFO  19:50:19,705 - #30 )
INFO  19:50:19,705 - #27 ;
INFO  19:50:19,705 - #21 }
INFO  19:50:19,705 - #8 int
INFO  19:50:19,705 - #8 max
INFO  19:50:19,706 - #29 (
INFO  19:50:19,706 - #8 int
INFO  19:50:19,706 - #8 a
INFO  19:50:19,706 - #28 ,
INFO  19:50:19,706 - #8 int
INFO  19:50:19,706 - #8 b
INFO  19:50:19,707 - #30 )
INFO  19:50:19,708 - #20 {
INFO  19:50:19,708 - #31 if
INFO  19:50:19,708 - #29 (
INFO  19:50:19,708 - #8 a
INFO  19:50:19,708 - #38 >
INFO  19:50:19,708 - #8 b
INFO  19:50:19,708 - #30 )
INFO  19:50:19,708 - #20 {
INFO  19:50:19,708 - #37 return
INFO  19:50:19,709 - #8 a
INFO  19:50:19,709 - #27 ;
INFO  19:50:19,709 - #21 }
INFO  19:50:19,709 - #32 else
INFO  19:50:19,709 - #37 return
INFO  19:50:19,709 - #8 b
INFO  19:50:19,709 - #27 ;
INFO  19:50:19,710 - #21 }
INFO  19:50:19,710 - #8 int
INFO  19:50:19,710 - #8 min
INFO  19:50:19,710 - #29 (
INFO  19:50:19,710 - #8 int
INFO  19:50:19,710 - #8 a
INFO  19:50:19,710 - #28 ,
INFO  19:50:19,710 - #8 int
INFO  19:50:19,711 - #8 b
INFO  19:50:19,711 - #30 )
INFO  19:50:19,711 - #20 {
INFO  19:50:19,711 - #31 if
INFO  19:50:19,711 - #29 (
INFO  19:50:19,711 - #8 a
INFO  19:50:19,711 - #40 <
INFO  19:50:19,711 - #8 b
INFO  19:50:19,712 - #30 )
INFO  19:50:19,712 - #20 {
INFO  19:50:19,713 - #37 return
INFO  19:50:19,713 - #8 a
INFO  19:50:19,713 - #27 ;
INFO  19:50:19,713 - #21 }
INFO  19:50:19,713 - #32 else
INFO  19:50:19,713 - #20 {
INFO  19:50:19,713 - #37 return
INFO  19:50:19,714 - #8 b
INFO  19:50:19,714 - #27 ;
INFO  19:50:19,714 - #21 }
INFO  19:50:19,714 - #21 }
INFO  19:50:19,714 - #6 void
INFO  19:50:19,714 - #8 main
INFO  19:50:19,714 - #29 (
INFO  19:50:19,714 - #30 )
INFO  19:50:19,715 - #20 {
INFO  19:50:19,715 - #8 int
INFO  19:50:19,715 - #8 a
INFO  19:50:19,715 - #22 [
INFO  19:50:19,715 - #23 ]
INFO  19:50:19,715 - #27 ;
INFO  19:50:19,715 - #8 int
INFO  19:50:19,715 - #8 length
INFO  19:50:19,715 - #27 ;
INFO  19:50:19,715 - #8 length
INFO  19:50:19,715 - #24 =
INFO  19:50:19,716 - #8 c
INFO  19:50:19,716 - #27 ;
INFO  19:50:19,716 - #8 test
INFO  19:50:19,716 - #29 (
INFO  19:50:19,716 - #30 )
INFO  19:50:19,716 - #27 ;
INFO  19:50:19,716 - #31 if
INFO  19:50:19,716 - #29 (
INFO  19:50:19,716 - #8 length
INFO  19:50:19,716 - #38 >
INFO  19:50:19,716 - #9 0
INFO  19:50:19,716 - #13 &&
INFO  19:50:19,717 - #8 length
INFO  19:50:19,717 - #42 <=
INFO  19:50:19,717 - #8 d
INFO  19:50:19,717 - #30 )
INFO  19:50:19,718 - #8 a
INFO  19:50:19,718 - #24 =
INFO  19:50:19,718 - #7 new
INFO  19:50:19,718 - #8 int
INFO  19:50:19,718 - #22 [
INFO  19:50:19,718 - #8 length
INFO  19:50:19,718 - #23 ]
INFO  19:50:19,718 - #27 ;
INFO  19:50:19,718 - #32 else
INFO  19:50:19,718 - #8 a
INFO  19:50:19,718 - #24 =
INFO  19:50:19,719 - #7 new
INFO  19:50:19,719 - #8 int
INFO  19:50:19,719 - #22 [
INFO  19:50:19,719 - #9 5
INFO  19:50:19,719 - #23 ]
INFO  19:50:19,719 - #27 ;
INFO  19:50:19,719 - #33 do
INFO  19:50:19,719 - #20 {
INFO  19:50:19,719 - #4 read
INFO  19:50:19,719 - #29 (
INFO  19:50:19,719 - #8 a
INFO  19:50:19,719 - #22 [
INFO  19:50:19,719 - #8 i
INFO  19:50:19,720 - #23 ]
INFO  19:50:19,720 - #30 )
INFO  19:50:19,720 - #27 ;
INFO  19:50:19,720 - #31 if
INFO  19:50:19,720 - #29 (
INFO  19:50:19,720 - #8 a
INFO  19:50:19,720 - #22 [
INFO  19:50:19,720 - #8 i
INFO  19:50:19,720 - #23 ]
INFO  19:50:19,721 - #19 %
INFO  19:50:19,721 - #9 3
INFO  19:50:19,722 - #39 ==
INFO  19:50:19,722 - #9 0
INFO  19:50:19,723 - #30 )
INFO  19:50:19,723 - #3 print
INFO  19:50:19,723 - #29 (
INFO  19:50:19,723 - #8 a
INFO  19:50:19,723 - #22 [
INFO  19:50:19,723 - #8 i
INFO  19:50:19,723 - #23 ]
INFO  19:50:19,724 - #30 )
INFO  19:50:19,724 - #27 ;
INFO  19:50:19,724 - #32 else
INFO  19:50:19,724 - #3 print
INFO  19:50:19,724 - #29 (
INFO  19:50:19,724 - #8 max
INFO  19:50:19,724 - #29 (
INFO  19:50:19,724 - #8 a
INFO  19:50:19,724 - #22 [
INFO  19:50:19,724 - #8 i
INFO  19:50:19,724 - #23 ]
INFO  19:50:19,724 - #28 ,
INFO  19:50:19,725 - #9 0
INFO  19:50:19,725 - #30 )
INFO  19:50:19,725 - #30 )
INFO  19:50:19,725 - #27 ;
INFO  19:50:19,726 - #21 }
INFO  19:50:19,726 - #34 while
INFO  19:50:19,726 - #29 (
INFO  19:50:19,726 - #8 i
INFO  19:50:19,726 - #42 <=
INFO  19:50:19,726 - #8 length
INFO  19:50:19,726 - #16 -
INFO  19:50:19,726 - #9 1
INFO  19:50:19,726 - #30 )
INFO  19:50:19,726 - #27 ;
INFO  19:50:19,726 - #3 print
INFO  19:50:19,727 - #29 (
INFO  19:50:19,727 - #8 d
INFO  19:50:19,727 - #30 )
INFO  19:50:19,727 - #27 ;
INFO  19:50:19,727 - #21 }
INFO  19:50:19,727 - #21 }
INFO  19:53:25,546 - #2 program
INFO  19:53:25,547 - #8 Program
INFO  19:53:25,547 - #20 {
INFO  19:53:25,547 - #5 const
INFO  19:53:25,547 - #8 int
INFO  19:53:25,547 - #8 c
INFO  19:53:25,548 - #24 =
INFO  19:53:25,548 - #9 10
INFO  19:53:25,548 - #27 ;
INFO  19:53:25,548 - #5 const
INFO  19:53:25,549 - #8 int
INFO  19:53:25,549 - #8 d
INFO  19:53:25,549 - #24 =
INFO  19:53:25,549 - #9 99
INFO  19:53:25,549 - #28 ,
INFO  19:53:25,549 - #8 eps
INFO  19:53:25,549 - #24 =
INFO  19:53:25,550 - #9 2
INFO  19:53:25,550 - #27 ;
INFO  19:53:25,550 - #8 int
INFO  19:53:25,551 - #8 e
INFO  19:53:25,551 - #27 ;
INFO  19:53:25,551 - #6 void
INFO  19:53:25,551 - #8 test
INFO  19:53:25,551 - #29 (
INFO  19:53:25,552 - #30 )
INFO  19:53:25,552 - #20 {
INFO  19:53:25,552 - #8 int
INFO  19:53:25,552 - #8 a
INFO  19:53:25,552 - #28 ,
INFO  19:53:25,552 - #8 b
INFO  19:53:25,552 - #27 ;
INFO  19:53:25,552 - #8 bool
INFO  19:53:25,553 - #8 cond
INFO  19:53:25,553 - #27 ;
INFO  19:53:25,553 - #8 a
INFO  19:53:25,553 - #24 =
INFO  19:53:25,554 - #9 3
INFO  19:53:25,554 - #27 ;
INFO  19:53:25,555 - #8 b
INFO  19:53:25,555 - #24 =
INFO  19:53:25,555 - #9 5
INFO  19:53:25,555 - #27 ;
INFO  19:53:25,555 - #8 cond
INFO  19:53:25,556 - #24 =
INFO  19:53:25,556 - #11 true
INFO  19:53:25,556 - #27 ;
INFO  19:53:25,558 - #31 if
INFO  19:53:25,558 - #29 (
INFO  19:53:25,558 - #9 2
INFO  19:53:25,558 - #17 *
INFO  19:53:25,558 - #29 (
INFO  19:53:25,560 - #8 a
INFO  19:53:25,560 - #16 -
INFO  19:53:25,560 - #8 b
INFO  19:53:25,562 - #16 -
INFO  19:53:25,562 - #9 1
INFO  19:53:25,562 - #30 )
INFO  19:53:25,563 - #16 -
INFO  19:53:25,563 - #9 14
INFO  19:53:25,564 - #38 >
INFO  19:53:25,564 - #9 0
INFO  19:53:25,565 - #14 ||
INFO  19:53:25,566 - #8 cond
INFO  19:53:25,566 - #30 )
INFO  19:53:25,567 - #3 print
INFO  19:53:25,567 - #29 (
INFO  19:53:25,567 - #8 a
INFO  19:53:25,567 - #15 +
INFO  19:53:25,567 - #8 b
INFO  19:53:25,568 - #30 )
INFO  19:53:25,568 - #27 ;
INFO  19:53:25,568 - #21 }
INFO  19:53:25,569 - #8 int
INFO  19:53:25,569 - #8 max
INFO  19:53:25,569 - #29 (
INFO  19:53:25,569 - #8 int
INFO  19:53:25,571 - #8 a
INFO  19:53:25,571 - #28 ,
INFO  19:53:25,572 - #8 int
INFO  19:53:25,572 - #8 b
INFO  19:53:25,572 - #30 )
INFO  19:53:25,572 - #20 {
INFO  19:53:25,573 - #31 if
INFO  19:53:25,573 - #29 (
INFO  19:53:25,573 - #8 a
INFO  19:53:25,573 - #38 >
INFO  19:53:25,573 - #8 b
INFO  19:53:25,573 - #30 )
INFO  19:53:25,573 - #20 {
INFO  19:53:25,573 - #37 return
INFO  19:53:25,573 - #8 a
INFO  19:53:25,573 - #27 ;
INFO  19:53:25,574 - #21 }
INFO  19:53:25,574 - #32 else
INFO  19:53:25,574 - #37 return
INFO  19:53:25,574 - #8 b
INFO  19:53:25,574 - #27 ;
INFO  19:53:25,574 - #21 }
INFO  19:53:25,575 - #8 int
INFO  19:53:25,575 - #8 min
INFO  19:53:25,575 - #29 (
INFO  19:53:25,575 - #8 int
INFO  19:53:25,576 - #8 a
INFO  19:53:25,576 - #28 ,
INFO  19:53:25,576 - #8 int
INFO  19:53:25,576 - #8 b
INFO  19:53:25,576 - #30 )
INFO  19:53:25,576 - #20 {
INFO  19:53:25,576 - #31 if
INFO  19:53:25,576 - #29 (
INFO  19:53:25,576 - #8 a
INFO  19:53:25,577 - #40 <
INFO  19:53:25,577 - #8 b
INFO  19:53:25,578 - #30 )
INFO  19:53:25,578 - #20 {
INFO  19:53:25,578 - #37 return
INFO  19:53:25,578 - #8 a
INFO  19:53:25,578 - #27 ;
INFO  19:53:25,578 - #21 }
INFO  19:53:25,579 - #32 else
INFO  19:53:25,579 - #20 {
INFO  19:53:25,579 - #37 return
INFO  19:53:25,579 - #8 b
INFO  19:53:25,579 - #27 ;
INFO  19:53:25,579 - #21 }
INFO  19:53:25,579 - #21 }
INFO  19:53:25,579 - #6 void
INFO  19:53:25,580 - #8 main
INFO  19:53:25,580 - #29 (
INFO  19:53:25,580 - #30 )
INFO  19:53:25,580 - #20 {
INFO  19:53:25,580 - #8 int
INFO  19:53:25,580 - #8 a
INFO  19:53:25,580 - #22 [
INFO  19:53:25,580 - #23 ]
INFO  19:53:25,580 - #27 ;
INFO  19:53:25,581 - #8 int
INFO  19:53:25,581 - #8 length
INFO  19:53:25,581 - #27 ;
INFO  19:53:25,581 - #8 length
INFO  19:53:25,581 - #24 =
INFO  19:53:25,581 - #8 c
INFO  19:53:25,581 - #27 ;
INFO  19:53:25,581 - #8 test
INFO  19:53:25,582 - #29 (
INFO  19:53:25,582 - #30 )
INFO  19:53:25,582 - #27 ;
INFO  19:53:25,582 - #31 if
INFO  19:53:25,582 - #29 (
INFO  19:53:25,582 - #8 length
INFO  19:53:25,582 - #38 >
INFO  19:53:25,583 - #9 0
INFO  19:53:25,583 - #13 &&
INFO  19:53:25,583 - #8 length
INFO  19:53:25,583 - #42 <=
INFO  19:53:25,583 - #8 d
INFO  19:53:25,584 - #30 )
INFO  19:53:25,584 - #8 a
INFO  19:53:25,585 - #24 =
INFO  19:53:25,585 - #7 new
INFO  19:53:25,585 - #8 int
INFO  19:53:25,585 - #22 [
INFO  19:53:25,585 - #8 length
INFO  19:53:25,585 - #23 ]
INFO  19:53:25,585 - #27 ;
INFO  19:53:25,585 - #32 else
INFO  19:53:25,585 - #8 a
INFO  19:53:25,585 - #24 =
INFO  19:53:25,586 - #7 new
INFO  19:53:25,586 - #8 int
INFO  19:53:25,586 - #22 [
INFO  19:53:25,586 - #9 5
INFO  19:53:25,586 - #23 ]
INFO  19:53:25,586 - #27 ;
INFO  19:53:25,586 - #33 do
INFO  19:53:25,586 - #20 {
INFO  19:53:25,587 - #4 read
INFO  19:53:25,587 - #29 (
INFO  19:53:25,587 - #8 a
INFO  19:53:25,587 - #22 [
INFO  19:53:25,587 - #8 i
INFO  19:53:25,587 - #23 ]
INFO  19:53:25,587 - #30 )
INFO  19:53:25,587 - #27 ;
INFO  19:53:25,587 - #31 if
INFO  19:53:25,588 - #29 (
INFO  19:53:25,588 - #8 a
INFO  19:53:25,588 - #22 [
INFO  19:53:25,588 - #8 i
INFO  19:53:25,588 - #23 ]
INFO  19:53:25,589 - #19 %
INFO  19:53:25,590 - #9 3
INFO  19:53:25,591 - #39 ==
INFO  19:53:25,592 - #9 0
INFO  19:53:25,592 - #30 )
INFO  19:53:25,593 - #3 print
INFO  19:53:25,593 - #29 (
INFO  19:53:25,593 - #8 a
INFO  19:53:25,593 - #22 [
INFO  19:53:25,593 - #8 i
INFO  19:53:25,593 - #23 ]
INFO  19:53:25,593 - #30 )
INFO  19:53:25,593 - #27 ;
INFO  19:53:25,593 - #32 else
INFO  19:53:25,593 - #3 print
INFO  19:53:25,593 - #29 (
INFO  19:53:25,593 - #8 max
INFO  19:53:25,593 - #29 (
INFO  19:53:25,594 - #8 a
INFO  19:53:25,594 - #22 [
INFO  19:53:25,594 - #8 i
INFO  19:53:25,594 - #23 ]
INFO  19:53:25,594 - #28 ,
INFO  19:53:25,594 - #9 0
INFO  19:53:25,594 - #30 )
INFO  19:53:25,595 - #30 )
INFO  19:53:25,595 - #27 ;
INFO  19:53:25,595 - #21 }
INFO  19:53:25,595 - #34 while
INFO  19:53:25,595 - #29 (
INFO  19:53:25,595 - #8 i
INFO  19:53:25,595 - #42 <=
INFO  19:53:25,595 - #8 length
INFO  19:53:25,596 - #16 -
INFO  19:53:25,596 - #9 1
INFO  19:53:25,596 - #30 )
INFO  19:53:25,596 - #27 ;
INFO  19:53:25,596 - #3 print
INFO  19:53:25,596 - #29 (
INFO  19:53:25,596 - #8 d
INFO  19:53:25,596 - #30 )
INFO  19:53:25,597 - #27 ;
INFO  19:53:25,597 - #21 }
INFO  19:53:25,597 - #21 }
INFO  19:58:23,298 - #2 program
INFO  19:58:23,299 - #8 Program
INFO  19:58:23,299 - #20 {
INFO  19:58:23,300 - #5 const
INFO  19:58:23,300 - #8 int
INFO  19:58:23,300 - #8 c
INFO  19:58:23,300 - #24 =
INFO  19:58:23,300 - #9 10
INFO  19:58:23,300 - #27 ;
INFO  19:58:23,301 - #5 const
INFO  19:58:23,301 - #8 int
INFO  19:58:23,301 - #8 d
INFO  19:58:23,301 - #24 =
INFO  19:58:23,302 - #9 99
INFO  19:58:23,302 - #28 ,
INFO  19:58:23,302 - #8 eps
INFO  19:58:23,302 - #24 =
INFO  19:58:23,302 - #9 2
INFO  19:58:23,302 - #27 ;
INFO  19:58:23,302 - #8 int
INFO  19:58:23,303 - #8 e
INFO  19:58:23,303 - #27 ;
INFO  19:58:23,303 - #6 void
INFO  19:58:23,303 - #8 test
INFO  19:58:23,303 - #29 (
INFO  19:58:23,304 - #30 )
INFO  19:58:23,304 - #20 {
INFO  19:58:23,304 - #8 int
INFO  19:58:23,304 - #8 a
INFO  19:58:23,304 - #28 ,
INFO  19:58:23,304 - #8 b
INFO  19:58:23,304 - #27 ;
INFO  19:58:23,304 - #8 bool
INFO  19:58:23,305 - #8 cond
INFO  19:58:23,305 - #27 ;
INFO  19:58:23,305 - #8 a
INFO  19:58:23,305 - #24 =
INFO  19:58:23,305 - #9 3
INFO  19:58:23,305 - #27 ;
INFO  19:58:23,306 - #8 b
INFO  19:58:23,306 - #24 =
INFO  19:58:23,307 - #9 5
INFO  19:58:23,307 - #27 ;
INFO  19:58:23,307 - #8 cond
INFO  19:58:23,307 - #24 =
INFO  19:58:23,307 - #11 true
INFO  19:58:23,307 - #27 ;
INFO  19:58:23,309 - #31 if
INFO  19:58:23,309 - #29 (
INFO  19:58:23,309 - #9 2
INFO  19:58:23,309 - #17 *
INFO  19:58:23,309 - #29 (
INFO  19:58:23,311 - #8 a
INFO  19:58:23,311 - #16 -
INFO  19:58:23,311 - #8 b
INFO  19:58:23,313 - #16 -
INFO  19:58:23,313 - #9 1
INFO  19:58:23,313 - #30 )
INFO  19:58:23,313 - #16 -
INFO  19:58:23,314 - #9 14
INFO  19:58:23,314 - #38 >
INFO  19:58:23,314 - #9 0
INFO  19:58:23,316 - #14 ||
INFO  19:58:23,316 - #8 cond
INFO  19:58:23,317 - #30 )
INFO  19:58:23,317 - #3 print
INFO  19:58:23,317 - #29 (
INFO  19:58:23,318 - #8 a
INFO  19:58:23,318 - #15 +
INFO  19:58:23,318 - #8 b
INFO  19:58:23,319 - #30 )
INFO  19:58:23,319 - #27 ;
INFO  19:58:23,319 - #21 }
INFO  19:58:23,319 - #8 int
INFO  19:58:23,320 - #8 max
INFO  19:58:23,320 - #29 (
INFO  19:58:23,320 - #8 int
INFO  19:58:23,320 - #8 a
INFO  19:58:23,320 - #28 ,
INFO  19:58:23,321 - #8 int
INFO  19:58:23,321 - #8 b
INFO  19:58:23,321 - #30 )
INFO  19:58:23,321 - #20 {
INFO  19:58:23,322 - #31 if
INFO  19:58:23,322 - #29 (
INFO  19:58:23,322 - #8 a
INFO  19:58:23,322 - #38 >
INFO  19:58:23,322 - #8 b
INFO  19:58:23,322 - #30 )
INFO  19:58:23,322 - #20 {
INFO  19:58:23,322 - #37 return
INFO  19:58:23,322 - #8 a
INFO  19:58:23,323 - #27 ;
INFO  19:58:23,323 - #21 }
INFO  19:58:23,323 - #32 else
INFO  19:58:23,323 - #37 return
INFO  19:58:23,323 - #8 b
INFO  19:58:23,324 - #27 ;
INFO  19:58:23,324 - #21 }
INFO  19:58:23,324 - #8 int
INFO  19:58:23,324 - #8 min
INFO  19:58:23,324 - #29 (
INFO  19:58:23,325 - #8 int
INFO  19:58:23,325 - #8 a
INFO  19:58:23,325 - #28 ,
INFO  19:58:23,325 - #8 int
INFO  19:58:23,325 - #8 b
INFO  19:58:23,325 - #30 )
INFO  19:58:23,325 - #20 {
INFO  19:58:23,325 - #31 if
INFO  19:58:23,325 - #29 (
INFO  19:58:23,325 - #8 a
INFO  19:58:23,325 - #40 <
INFO  19:58:23,325 - #8 b
INFO  19:58:23,326 - #30 )
INFO  19:58:23,327 - #20 {
INFO  19:58:23,327 - #37 return
INFO  19:58:23,327 - #8 a
INFO  19:58:23,327 - #27 ;
INFO  19:58:23,327 - #21 }
INFO  19:58:23,327 - #32 else
INFO  19:58:23,327 - #20 {
INFO  19:58:23,327 - #37 return
INFO  19:58:23,327 - #8 b
INFO  19:58:23,328 - #27 ;
INFO  19:58:23,328 - #21 }
INFO  19:58:23,328 - #21 }
INFO  19:58:23,328 - #6 void
INFO  19:58:23,328 - #8 main
INFO  19:58:23,328 - #29 (
INFO  19:58:23,328 - #30 )
INFO  19:58:23,328 - #20 {
INFO  19:58:23,328 - #8 int
INFO  19:58:23,328 - #8 a
INFO  19:58:23,328 - #22 [
INFO  19:58:23,328 - #23 ]
INFO  19:58:23,329 - #27 ;
INFO  19:58:23,329 - #8 int
INFO  19:58:23,329 - #8 length
INFO  19:58:23,329 - #27 ;
INFO  19:58:23,329 - #8 length
INFO  19:58:23,330 - #24 =
INFO  19:58:23,330 - #8 c
INFO  19:58:23,331 - #27 ;
INFO  19:58:23,331 - #8 test
INFO  19:58:23,331 - #29 (
INFO  19:58:23,331 - #30 )
INFO  19:58:23,331 - #27 ;
INFO  19:58:23,331 - #31 if
INFO  19:58:23,331 - #29 (
INFO  19:58:23,331 - #8 length
INFO  19:58:23,331 - #38 >
INFO  19:58:23,331 - #9 0
INFO  19:58:23,332 - #13 &&
INFO  19:58:23,332 - #8 length
INFO  19:58:23,332 - #42 <=
INFO  19:58:23,332 - #8 d
INFO  19:58:23,333 - #30 )
INFO  19:58:23,333 - #8 a
INFO  19:58:23,333 - #24 =
INFO  19:58:23,333 - #7 new
INFO  19:58:23,333 - #8 int
INFO  19:58:23,333 - #22 [
INFO  19:58:23,333 - #8 length
INFO  19:58:23,333 - #23 ]
INFO  19:58:23,333 - #27 ;
INFO  19:58:23,334 - #32 else
INFO  19:58:23,334 - #8 a
INFO  19:58:23,334 - #24 =
INFO  19:58:23,334 - #7 new
INFO  19:58:23,334 - #8 int
INFO  19:58:23,334 - #22 [
INFO  19:58:23,334 - #9 5
INFO  19:58:23,334 - #23 ]
INFO  19:58:23,334 - #27 ;
INFO  19:58:23,334 - #33 do
INFO  19:58:23,335 - #20 {
INFO  19:58:23,335 - #4 read
INFO  19:58:23,335 - #29 (
INFO  19:58:23,335 - #8 a
INFO  19:58:23,335 - #22 [
INFO  19:58:23,335 - #8 i
INFO  19:58:23,335 - #23 ]
INFO  19:58:23,335 - #30 )
INFO  19:58:23,336 - #27 ;
INFO  19:58:23,336 - #31 if
INFO  19:58:23,336 - #29 (
INFO  19:58:23,336 - #8 a
INFO  19:58:23,336 - #22 [
INFO  19:58:23,336 - #8 i
INFO  19:58:23,336 - #23 ]
INFO  19:58:23,337 - #19 %
INFO  19:58:23,337 - #9 3
INFO  19:58:23,338 - #39 ==
INFO  19:58:23,338 - #9 0
INFO  19:58:23,339 - #30 )
INFO  19:58:23,339 - #3 print
INFO  19:58:23,339 - #29 (
INFO  19:58:23,339 - #8 a
INFO  19:58:23,339 - #22 [
INFO  19:58:23,339 - #8 i
INFO  19:58:23,339 - #23 ]
INFO  19:58:23,339 - #30 )
INFO  19:58:23,339 - #27 ;
INFO  19:58:23,339 - #32 else
INFO  19:58:23,339 - #3 print
INFO  19:58:23,339 - #29 (
INFO  19:58:23,339 - #8 max
INFO  19:58:23,339 - #29 (
INFO  19:58:23,340 - #8 a
INFO  19:58:23,340 - #22 [
INFO  19:58:23,340 - #8 i
INFO  19:58:23,340 - #23 ]
INFO  19:58:23,340 - #28 ,
INFO  19:58:23,340 - #9 0
INFO  19:58:23,340 - #30 )
INFO  19:58:23,340 - #30 )
INFO  19:58:23,341 - #27 ;
INFO  19:58:23,341 - #21 }
INFO  19:58:23,341 - #34 while
INFO  19:58:23,341 - #29 (
INFO  19:58:23,341 - #8 i
INFO  19:58:23,341 - #42 <=
INFO  19:58:23,341 - #8 length
INFO  19:58:23,341 - #16 -
INFO  19:58:23,341 - #9 1
INFO  19:58:23,341 - #30 )
INFO  19:58:23,342 - #27 ;
INFO  19:58:23,342 - #3 print
INFO  19:58:23,342 - #29 (
INFO  19:58:23,342 - #8 d
INFO  19:58:23,342 - #30 )
INFO  19:58:23,342 - #27 ;
INFO  19:58:23,342 - #21 }
INFO  19:58:23,342 - #21 }
INFO  20:45:09,881 - #11 program
ERROR 20:45:09,882 - 
Sintaksna greska na liniji 1
ERROR 20:45:09,882 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 1
INFO  20:51:13,738 - #2 program
INFO  20:51:13,738 - #8 Program
INFO  20:51:13,739 - #20 {
INFO  20:51:13,740 - #5 const
INFO  20:51:13,741 - #8 int
INFO  20:51:13,741 - #8 c
INFO  20:51:13,742 - #24 =
INFO  20:51:13,742 - #9 10
INFO  20:51:13,742 - #27 ;
INFO  20:51:13,742 - #5 const
INFO  20:51:13,743 - #8 int
INFO  20:51:13,743 - #8 d
INFO  20:51:13,743 - #24 =
INFO  20:51:13,743 - #9 99
INFO  20:51:13,743 - #28 ,
INFO  20:51:13,743 - #8 eps
INFO  20:51:13,744 - #24 =
INFO  20:51:13,744 - #9 2
INFO  20:51:13,744 - #27 ;
INFO  20:51:13,744 - #8 int
INFO  20:51:13,744 - #8 e
INFO  20:51:13,745 - #27 ;
INFO  20:51:13,745 - #6 void
INFO  20:51:13,745 - #8 test
INFO  20:51:13,745 - #29 (
INFO  20:51:13,745 - #30 )
INFO  20:51:13,745 - #20 {
INFO  20:51:13,746 - #8 int
INFO  20:51:13,746 - #8 a
INFO  20:51:13,746 - #28 ,
INFO  20:51:13,746 - #8 b
INFO  20:51:13,746 - #27 ;
INFO  20:51:13,746 - #8 bool
INFO  20:51:13,747 - #8 cond
INFO  20:51:13,747 - #27 ;
INFO  20:51:13,747 - #8 a
INFO  20:51:13,747 - #24 =
INFO  20:51:13,748 - #9 3
INFO  20:51:13,748 - #27 ;
INFO  20:51:13,748 - #8 b
INFO  20:51:13,749 - #24 =
INFO  20:51:13,749 - #9 5
INFO  20:51:13,749 - #27 ;
INFO  20:51:13,749 - #8 cond
INFO  20:51:13,750 - #24 =
INFO  20:51:13,750 - #11 true
INFO  20:51:13,750 - #27 ;
INFO  20:51:13,752 - #31 if
INFO  20:51:13,752 - #29 (
INFO  20:51:13,752 - #9 2
INFO  20:51:13,752 - #17 *
INFO  20:51:13,752 - #29 (
INFO  20:51:13,755 - #8 a
INFO  20:51:13,755 - #16 -
INFO  20:51:13,756 - #8 b
INFO  20:51:13,758 - #16 -
INFO  20:51:13,759 - #9 1
INFO  20:51:13,759 - #30 )
INFO  20:51:13,760 - #16 -
INFO  20:51:13,761 - #9 14
INFO  20:51:13,761 - #38 >
INFO  20:51:13,761 - #9 0
INFO  20:51:13,764 - #14 ||
INFO  20:51:13,766 - #8 cond
INFO  20:51:13,766 - #30 )
INFO  20:51:13,767 - #3 print
INFO  20:51:13,767 - #29 (
INFO  20:51:13,767 - #8 a
INFO  20:51:13,767 - #15 +
INFO  20:51:13,767 - #8 b
INFO  20:51:13,769 - #30 )
INFO  20:51:13,769 - #27 ;
INFO  20:51:13,769 - #21 }
INFO  20:51:13,770 - #8 int
INFO  20:51:13,771 - #8 max
INFO  20:51:13,771 - #29 (
INFO  20:51:13,771 - #8 int
INFO  20:51:13,774 - #8 a
INFO  20:51:13,774 - #28 ,
INFO  20:51:13,775 - #8 int
INFO  20:51:13,775 - #8 b
INFO  20:51:13,776 - #30 )
INFO  20:51:13,776 - #20 {
INFO  20:51:13,776 - #31 if
INFO  20:51:13,776 - #29 (
INFO  20:51:13,776 - #8 a
INFO  20:51:13,776 - #38 >
INFO  20:51:13,777 - #8 b
INFO  20:51:13,777 - #30 )
INFO  20:51:13,777 - #20 {
INFO  20:51:13,777 - #37 return
INFO  20:51:13,777 - #8 a
INFO  20:51:13,777 - #27 ;
INFO  20:51:13,777 - #21 }
INFO  20:51:13,778 - #32 else
INFO  20:51:13,778 - #37 return
INFO  20:51:13,778 - #8 b
INFO  20:51:13,778 - #27 ;
INFO  20:51:13,778 - #21 }
INFO  20:51:13,779 - #8 int
INFO  20:51:13,779 - #8 min
INFO  20:51:13,780 - #29 (
INFO  20:51:13,780 - #8 int
INFO  20:51:13,780 - #8 a
INFO  20:51:13,780 - #28 ,
INFO  20:51:13,780 - #8 int
INFO  20:51:13,780 - #8 b
INFO  20:51:13,780 - #30 )
INFO  20:51:13,780 - #20 {
INFO  20:51:13,780 - #31 if
INFO  20:51:13,780 - #29 (
INFO  20:51:13,780 - #8 a
INFO  20:51:13,780 - #40 <
INFO  20:51:13,781 - #8 b
INFO  20:51:13,782 - #30 )
INFO  20:51:13,782 - #20 {
INFO  20:51:13,782 - #37 return
INFO  20:51:13,782 - #8 a
INFO  20:51:13,782 - #27 ;
INFO  20:51:13,782 - #21 }
INFO  20:51:13,782 - #32 else
INFO  20:51:13,782 - #20 {
INFO  20:51:13,782 - #37 return
INFO  20:51:13,782 - #8 b
INFO  20:51:13,783 - #27 ;
INFO  20:51:13,783 - #21 }
INFO  20:51:13,783 - #21 }
INFO  20:51:13,783 - #6 void
INFO  20:51:13,783 - #8 main
INFO  20:51:13,783 - #29 (
INFO  20:51:13,783 - #30 )
INFO  20:51:13,783 - #20 {
INFO  20:51:13,783 - #8 int
INFO  20:51:13,783 - #8 a
INFO  20:51:13,784 - #22 [
INFO  20:51:13,784 - #23 ]
INFO  20:51:13,784 - #27 ;
INFO  20:51:13,784 - #8 int
INFO  20:51:13,784 - #8 length
INFO  20:51:13,784 - #27 ;
INFO  20:51:13,784 - #8 length
INFO  20:51:13,784 - #24 =
INFO  20:51:13,784 - #8 c
INFO  20:51:13,784 - #27 ;
INFO  20:51:13,785 - #8 test
INFO  20:51:13,785 - #29 (
INFO  20:51:13,785 - #30 )
INFO  20:51:13,785 - #27 ;
INFO  20:51:13,785 - #31 if
INFO  20:51:13,785 - #29 (
INFO  20:51:13,786 - #8 length
INFO  20:51:13,786 - #38 >
INFO  20:51:13,786 - #9 0
INFO  20:51:13,786 - #13 &&
INFO  20:51:13,786 - #8 length
INFO  20:51:13,786 - #42 <=
INFO  20:51:13,786 - #8 d
INFO  20:51:13,789 - #30 )
INFO  20:51:13,789 - #8 a
INFO  20:51:13,790 - #24 =
INFO  20:51:13,790 - #7 new
INFO  20:51:13,790 - #8 int
INFO  20:51:13,790 - #22 [
INFO  20:51:13,790 - #8 length
INFO  20:51:13,790 - #23 ]
INFO  20:51:13,790 - #27 ;
INFO  20:51:13,791 - #32 else
INFO  20:51:13,791 - #8 a
INFO  20:51:13,791 - #24 =
INFO  20:51:13,791 - #7 new
INFO  20:51:13,791 - #8 int
INFO  20:51:13,791 - #22 [
INFO  20:51:13,791 - #9 5
INFO  20:51:13,791 - #23 ]
INFO  20:51:13,791 - #27 ;
INFO  20:51:13,791 - #33 do
INFO  20:51:13,792 - #20 {
INFO  20:51:13,792 - #4 read
INFO  20:51:13,792 - #29 (
INFO  20:51:13,792 - #8 a
INFO  20:51:13,792 - #22 [
INFO  20:51:13,792 - #8 i
INFO  20:51:13,792 - #23 ]
INFO  20:51:13,792 - #30 )
INFO  20:51:13,792 - #27 ;
INFO  20:51:13,792 - #31 if
INFO  20:51:13,793 - #29 (
INFO  20:51:13,793 - #8 a
INFO  20:51:13,793 - #22 [
INFO  20:51:13,793 - #8 i
INFO  20:51:13,793 - #23 ]
INFO  20:51:13,793 - #19 %
INFO  20:51:13,793 - #9 3
INFO  20:51:13,794 - #39 ==
INFO  20:51:13,794 - #9 0
INFO  20:51:13,795 - #30 )
INFO  20:51:13,795 - #3 print
INFO  20:51:13,795 - #29 (
INFO  20:51:13,795 - #8 a
INFO  20:51:13,795 - #22 [
INFO  20:51:13,795 - #8 i
INFO  20:51:13,795 - #23 ]
INFO  20:51:13,795 - #30 )
INFO  20:51:13,795 - #27 ;
INFO  20:51:13,796 - #32 else
INFO  20:51:13,796 - #3 print
INFO  20:51:13,796 - #29 (
INFO  20:51:13,796 - #8 max
INFO  20:51:13,796 - #29 (
INFO  20:51:13,796 - #8 a
INFO  20:51:13,796 - #22 [
INFO  20:51:13,796 - #8 i
INFO  20:51:13,796 - #23 ]
INFO  20:51:13,796 - #28 ,
INFO  20:51:13,796 - #9 0
INFO  20:51:13,797 - #30 )
INFO  20:51:13,797 - #30 )
INFO  20:51:13,798 - #27 ;
INFO  20:51:13,798 - #21 }
INFO  20:51:13,798 - #34 while
INFO  20:51:13,798 - #29 (
INFO  20:51:13,798 - #8 i
INFO  20:51:13,798 - #42 <=
INFO  20:51:13,798 - #8 length
INFO  20:51:13,798 - #16 -
INFO  20:51:13,798 - #9 1
INFO  20:51:13,798 - #30 )
INFO  20:51:13,798 - #27 ;
INFO  20:51:13,799 - #3 print
INFO  20:51:13,799 - #29 (
INFO  20:51:13,799 - #8 d
INFO  20:51:13,799 - #30 )
INFO  20:51:13,799 - #27 ;
INFO  20:51:13,800 - #21 }
INFO  20:51:13,800 - #21 }
INFO  20:52:10,939 - #2 program
INFO  20:52:10,940 - #8 Program
INFO  20:52:10,941 - #20 {
INFO  20:52:10,941 - #5 const
INFO  20:52:10,941 - #8 int
INFO  20:52:10,941 - #8 c
INFO  20:52:10,942 - #24 =
INFO  20:52:10,942 - #9 10
INFO  20:52:10,942 - #27 ;
INFO  20:52:10,943 - #5 const
INFO  20:52:10,944 - #8 int
INFO  20:52:10,944 - #8 d
INFO  20:52:10,944 - #24 =
INFO  20:52:10,945 - #9 99
INFO  20:52:10,945 - #28 ,
INFO  20:52:10,945 - #8 eps
INFO  20:52:10,945 - #24 =
INFO  20:52:10,945 - #9 2
INFO  20:52:10,945 - #8 int
ERROR 20:52:10,946 - 
Sintaksna greska na liniji 4
ERROR 20:52:10,946 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 4
INFO  20:52:38,793 - #2 program
INFO  20:52:38,794 - #8 Program
INFO  20:52:38,794 - #20 {
INFO  20:52:38,794 - #5 const
INFO  20:52:38,795 - #8 int
INFO  20:52:38,795 - #8 c
INFO  20:52:38,796 - #24 =
INFO  20:52:38,796 - #9 10
INFO  20:52:38,797 - #27 ;
INFO  20:52:38,797 - #5 const
INFO  20:52:38,798 - #8 int
INFO  20:52:38,798 - #8 d
INFO  20:52:38,798 - #24 =
INFO  20:52:38,798 - #9 99
INFO  20:52:38,798 - #28 ,
INFO  20:52:38,799 - #8 eps
INFO  20:52:38,799 - #24 =
INFO  20:52:38,799 - #9 2
INFO  20:52:38,799 - #27 ;
INFO  20:52:38,800 - #8 int
INFO  20:52:38,800 - #8 e
INFO  20:52:38,800 - #27 ;
INFO  20:52:38,800 - #6 void
INFO  20:52:38,802 - #8 test
INFO  20:52:38,802 - #29 (
INFO  20:52:38,802 - #30 )
INFO  20:52:38,802 - #8 int
ERROR 20:52:38,802 - 
Sintaksna greska na liniji 6
ERROR 20:52:38,802 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 6
INFO  20:52:59,158 - #2 program
INFO  20:52:59,159 - #8 Program
INFO  20:52:59,159 - #20 {
INFO  20:52:59,159 - #5 const
INFO  20:52:59,159 - #8 int
INFO  20:52:59,159 - #8 c
INFO  20:52:59,160 - #24 =
INFO  20:52:59,160 - #9 10
INFO  20:52:59,160 - #27 ;
INFO  20:52:59,160 - #5 const
INFO  20:52:59,161 - #8 int
INFO  20:52:59,161 - #8 d
INFO  20:52:59,161 - #24 =
INFO  20:52:59,161 - #9 99
INFO  20:52:59,161 - #28 ,
INFO  20:52:59,161 - #8 eps
INFO  20:52:59,161 - #24 =
INFO  20:52:59,162 - #9 2
INFO  20:52:59,162 - #27 ;
INFO  20:52:59,162 - #8 int
INFO  20:52:59,162 - #8 e
INFO  20:52:59,162 - #27 ;
INFO  20:52:59,163 - #6 void
INFO  20:52:59,163 - #8 test
INFO  20:52:59,163 - #29 (
INFO  20:52:59,163 - #30 )
INFO  20:52:59,163 - #20 {
INFO  20:52:59,163 - #8 int
INFO  20:52:59,163 - #8 a
INFO  20:52:59,164 - #28 ,
INFO  20:52:59,164 - #8 b
INFO  20:52:59,164 - #27 ;
INFO  20:52:59,164 - #8 bool
INFO  20:52:59,164 - #8 cond
INFO  20:52:59,164 - #27 ;
INFO  20:52:59,165 - #8 a
INFO  20:52:59,165 - #24 =
INFO  20:52:59,165 - #9 3
INFO  20:52:59,165 - #27 ;
INFO  20:52:59,166 - #8 b
INFO  20:52:59,166 - #24 =
INFO  20:52:59,166 - #9 5
INFO  20:52:59,166 - #27 ;
INFO  20:52:59,166 - #8 cond
INFO  20:52:59,167 - #24 =
INFO  20:52:59,167 - #11 true
INFO  20:52:59,167 - #27 ;
INFO  20:52:59,169 - #31 if
INFO  20:52:59,171 - #29 (
INFO  20:52:59,171 - #9 2
INFO  20:52:59,171 - #17 *
INFO  20:52:59,171 - #29 (
INFO  20:52:59,172 - #8 a
INFO  20:52:59,172 - #16 -
INFO  20:52:59,173 - #8 b
INFO  20:52:59,176 - #16 -
INFO  20:52:59,177 - #9 1
INFO  20:52:59,177 - #30 )
INFO  20:52:59,177 - #16 -
INFO  20:52:59,178 - #9 14
INFO  20:52:59,178 - #38 >
INFO  20:52:59,178 - #9 0
INFO  20:52:59,180 - #14 ||
INFO  20:52:59,180 - #8 cond
INFO  20:52:59,180 - #30 )
INFO  20:52:59,181 - #3 print
INFO  20:52:59,181 - #29 (
INFO  20:52:59,181 - #8 a
INFO  20:52:59,181 - #15 +
INFO  20:52:59,181 - #8 b
INFO  20:52:59,182 - #30 )
INFO  20:52:59,182 - #21 }
ERROR 20:52:59,183 - 
Sintaksna greska na liniji 13
ERROR 20:52:59,183 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 13
INFO  20:53:13,988 - #2 program
INFO  20:53:13,989 - #8 Program
INFO  20:53:13,989 - #20 {
INFO  20:53:13,989 - #5 const
INFO  20:53:13,989 - #8 int
INFO  20:53:13,989 - #8 c
INFO  20:53:13,990 - #24 =
INFO  20:53:13,990 - #9 10
INFO  20:53:13,990 - #27 ;
INFO  20:53:13,991 - #5 const
INFO  20:53:13,991 - #8 int
INFO  20:53:13,992 - #8 d
INFO  20:53:13,992 - #24 =
INFO  20:53:13,992 - #9 99
INFO  20:53:13,992 - #28 ,
INFO  20:53:13,992 - #8 eps
INFO  20:53:13,992 - #24 =
INFO  20:53:13,992 - #9 2
INFO  20:53:13,992 - #27 ;
INFO  20:53:13,993 - #8 int
INFO  20:53:13,994 - #8 e
INFO  20:53:13,994 - #27 ;
INFO  20:53:13,994 - #6 void
INFO  20:53:13,995 - #8 test
INFO  20:53:13,995 - #29 (
INFO  20:53:13,995 - #30 )
INFO  20:53:13,995 - #20 {
INFO  20:53:13,995 - #8 int
INFO  20:53:13,995 - #8 a
INFO  20:53:13,995 - #28 ,
INFO  20:53:13,996 - #8 b
INFO  20:53:13,996 - #27 ;
INFO  20:53:13,996 - #8 bool
INFO  20:53:13,996 - #8 cond
INFO  20:53:13,996 - #27 ;
INFO  20:53:13,996 - #8 a
INFO  20:53:13,997 - #24 =
INFO  20:53:13,997 - #9 3
INFO  20:53:13,997 - #27 ;
INFO  20:53:13,998 - #8 b
INFO  20:53:13,998 - #24 =
INFO  20:53:13,999 - #9 5
INFO  20:53:13,999 - #27 ;
INFO  20:53:13,999 - #8 cond
INFO  20:53:13,999 - #24 =
INFO  20:53:13,999 - #11 true
INFO  20:53:13,999 - #27 ;
INFO  20:53:14,002 - #31 if
INFO  20:53:14,002 - #29 (
INFO  20:53:14,003 - #9 2
INFO  20:53:14,003 - #17 *
INFO  20:53:14,003 - #29 (
INFO  20:53:14,006 - #8 a
INFO  20:53:14,006 - #16 -
INFO  20:53:14,006 - #8 b
INFO  20:53:14,008 - #16 -
INFO  20:53:14,009 - #9 1
INFO  20:53:14,009 - #30 )
INFO  20:53:14,009 - #16 -
INFO  20:53:14,010 - #9 14
INFO  20:53:14,010 - #38 >
INFO  20:53:14,010 - #9 0
INFO  20:53:14,012 - #14 ||
INFO  20:53:14,013 - #8 cond
INFO  20:53:14,013 - #30 )
INFO  20:53:14,014 - #3 print
INFO  20:53:14,014 - #29 (
INFO  20:53:14,014 - #8 a
INFO  20:53:14,014 - #15 +
INFO  20:53:14,014 - #8 b
INFO  20:53:14,015 - #30 )
INFO  20:53:14,016 - #27 ;
INFO  20:53:14,016 - #21 }
INFO  20:53:14,017 - #8 int
INFO  20:53:14,018 - #8 max
INFO  20:53:14,018 - #29 (
INFO  20:53:14,018 - #8 int
INFO  20:53:14,021 - #8 a
INFO  20:53:14,021 - #28 ,
INFO  20:53:14,022 - #8 int
INFO  20:53:14,022 - #8 b
INFO  20:53:14,023 - #30 )
INFO  20:53:14,023 - #20 {
INFO  20:53:14,023 - #31 if
INFO  20:53:14,024 - #29 (
INFO  20:53:14,024 - #8 a
INFO  20:53:14,024 - #38 >
INFO  20:53:14,024 - #8 b
INFO  20:53:14,024 - #30 )
INFO  20:53:14,024 - #20 {
INFO  20:53:14,025 - #37 return
INFO  20:53:14,025 - #8 a
INFO  20:53:14,025 - #27 ;
INFO  20:53:14,025 - #21 }
INFO  20:53:14,026 - #32 else
INFO  20:53:14,026 - #37 return
INFO  20:53:14,026 - #8 b
INFO  20:53:14,026 - #27 ;
INFO  20:53:14,026 - #21 }
INFO  20:53:14,026 - #8 int
INFO  20:53:14,027 - #8 min
INFO  20:53:14,027 - #29 (
INFO  20:53:14,027 - #8 int
INFO  20:53:14,027 - #8 a
INFO  20:53:14,027 - #28 ,
INFO  20:53:14,028 - #8 int
INFO  20:53:14,028 - #8 b
INFO  20:53:14,028 - #30 )
INFO  20:53:14,028 - #31 if
ERROR 20:53:14,028 - 
Sintaksna greska na liniji 22
ERROR 20:53:14,029 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 22
INFO  20:53:27,323 - #2 program
INFO  20:53:27,324 - #8 Program
INFO  20:53:27,324 - #20 {
INFO  20:53:27,324 - #5 const
INFO  20:53:27,325 - #8 int
INFO  20:53:27,325 - #8 c
INFO  20:53:27,325 - #24 =
INFO  20:53:27,325 - #9 10
INFO  20:53:27,325 - #27 ;
INFO  20:53:27,326 - #5 const
INFO  20:53:27,326 - #8 int
INFO  20:53:27,326 - #8 d
INFO  20:53:27,327 - #24 =
INFO  20:53:27,327 - #9 99
INFO  20:53:27,327 - #28 ,
INFO  20:53:27,327 - #8 eps
INFO  20:53:27,327 - #24 =
INFO  20:53:27,327 - #9 2
INFO  20:53:27,327 - #27 ;
INFO  20:53:27,328 - #8 int
INFO  20:53:27,328 - #8 e
INFO  20:53:27,328 - #27 ;
INFO  20:53:27,328 - #6 void
INFO  20:53:27,330 - #8 test
INFO  20:53:27,330 - #29 (
INFO  20:53:27,330 - #30 )
INFO  20:53:27,330 - #20 {
INFO  20:53:27,330 - #8 int
INFO  20:53:27,330 - #8 a
INFO  20:53:27,330 - #28 ,
INFO  20:53:27,330 - #8 b
INFO  20:53:27,331 - #27 ;
INFO  20:53:27,331 - #8 bool
INFO  20:53:27,331 - #8 cond
INFO  20:53:27,331 - #27 ;
INFO  20:53:27,332 - #8 a
INFO  20:53:27,332 - #24 =
INFO  20:53:27,332 - #9 3
INFO  20:53:27,332 - #27 ;
INFO  20:53:27,333 - #8 b
INFO  20:53:27,333 - #24 =
INFO  20:53:27,333 - #9 5
INFO  20:53:27,333 - #27 ;
INFO  20:53:27,335 - #8 cond
INFO  20:53:27,335 - #24 =
INFO  20:53:27,335 - #11 true
INFO  20:53:27,336 - #27 ;
INFO  20:53:27,338 - #31 if
INFO  20:53:27,338 - #29 (
INFO  20:53:27,338 - #9 2
INFO  20:53:27,338 - #17 *
INFO  20:53:27,338 - #29 (
INFO  20:53:27,340 - #8 a
INFO  20:53:27,341 - #16 -
INFO  20:53:27,341 - #8 b
INFO  20:53:27,343 - #16 -
INFO  20:53:27,343 - #9 1
INFO  20:53:27,343 - #30 )
INFO  20:53:27,344 - #16 -
INFO  20:53:27,345 - #9 14
INFO  20:53:27,345 - #38 >
INFO  20:53:27,345 - #9 0
INFO  20:53:27,347 - #14 ||
INFO  20:53:27,348 - #8 cond
INFO  20:53:27,352 - #30 )
INFO  20:53:27,353 - #3 print
INFO  20:53:27,353 - #29 (
INFO  20:53:27,353 - #8 a
INFO  20:53:27,354 - #15 +
INFO  20:53:27,354 - #8 b
INFO  20:53:27,355 - #30 )
INFO  20:53:27,356 - #27 ;
INFO  20:53:27,356 - #21 }
INFO  20:53:27,356 - #8 int
INFO  20:53:27,357 - #8 max
INFO  20:53:27,357 - #29 (
INFO  20:53:27,357 - #8 int
INFO  20:53:27,360 - #8 a
INFO  20:53:27,360 - #28 ,
INFO  20:53:27,360 - #8 int
INFO  20:53:27,361 - #8 b
INFO  20:53:27,361 - #30 )
INFO  20:53:27,361 - #20 {
INFO  20:53:27,361 - #31 if
INFO  20:53:27,361 - #29 (
INFO  20:53:27,361 - #8 a
INFO  20:53:27,361 - #38 >
INFO  20:53:27,361 - #8 b
INFO  20:53:27,362 - #30 )
INFO  20:53:27,362 - #20 {
INFO  20:53:27,362 - #37 return
INFO  20:53:27,362 - #8 a
INFO  20:53:27,362 - #27 ;
INFO  20:53:27,362 - #21 }
INFO  20:53:27,363 - #32 else
INFO  20:53:27,363 - #37 return
INFO  20:53:27,363 - #8 b
INFO  20:53:27,363 - #27 ;
INFO  20:53:27,363 - #21 }
INFO  20:53:27,363 - #8 int
INFO  20:53:27,364 - #8 min
INFO  20:53:27,364 - #29 (
INFO  20:53:27,364 - #8 int
INFO  20:53:27,364 - #8 a
INFO  20:53:27,364 - #28 ,
INFO  20:53:27,364 - #8 int
INFO  20:53:27,364 - #8 b
INFO  20:53:27,364 - #30 )
INFO  20:53:27,365 - #20 {
INFO  20:53:27,365 - #31 if
INFO  20:53:27,365 - #29 (
INFO  20:53:27,365 - #8 a
INFO  20:53:27,365 - #40 <
INFO  20:53:27,365 - #8 b
INFO  20:53:27,366 - #30 )
INFO  20:53:27,367 - #20 {
INFO  20:53:27,367 - #37 return
INFO  20:53:27,367 - #8 a
INFO  20:53:27,367 - #27 ;
INFO  20:53:27,367 - #21 }
INFO  20:53:27,367 - #32 else
INFO  20:53:27,367 - #20 {
INFO  20:53:27,367 - #37 return
INFO  20:53:27,368 - #8 b
INFO  20:53:27,368 - #27 ;
INFO  20:53:27,368 - #21 }
INFO  20:53:27,368 - #21 }
INFO  20:53:27,368 - #6 void
INFO  20:53:27,368 - #8 main
INFO  20:53:27,368 - #29 (
INFO  20:53:27,368 - #30 )
INFO  20:53:27,368 - #20 {
INFO  20:53:27,368 - #8 int
INFO  20:53:27,369 - #8 a
INFO  20:53:27,369 - #22 [
INFO  20:53:27,369 - #23 ]
INFO  20:53:27,369 - #27 ;
INFO  20:53:27,369 - #8 int
INFO  20:53:27,369 - #8 length
INFO  20:53:27,369 - #27 ;
INFO  20:53:27,369 - #8 length
INFO  20:53:27,369 - #24 =
INFO  20:53:27,369 - #8 c
INFO  20:53:27,370 - #27 ;
INFO  20:53:27,370 - #8 test
INFO  20:53:27,370 - #29 (
INFO  20:53:27,370 - #30 )
INFO  20:53:27,370 - #27 ;
INFO  20:53:27,370 - #31 if
INFO  20:53:27,370 - #29 (
INFO  20:53:27,370 - #8 length
INFO  20:53:27,370 - #38 >
INFO  20:53:27,371 - #9 0
INFO  20:53:27,371 - #13 &&
INFO  20:53:27,371 - #8 length
INFO  20:53:27,371 - #42 <=
INFO  20:53:27,371 - #8 d
INFO  20:53:27,372 - #30 )
INFO  20:53:27,372 - #8 a
INFO  20:53:27,372 - #24 =
INFO  20:53:27,372 - #7 new
INFO  20:53:27,373 - #8 int
INFO  20:53:27,373 - #22 [
INFO  20:53:27,373 - #8 length
INFO  20:53:27,373 - #23 ]
INFO  20:53:27,373 - #27 ;
INFO  20:53:27,373 - #32 else
INFO  20:53:27,373 - #8 a
INFO  20:53:27,373 - #24 =
INFO  20:53:27,373 - #7 new
INFO  20:53:27,373 - #8 int
INFO  20:53:27,374 - #22 [
INFO  20:53:27,374 - #9 5
INFO  20:53:27,374 - #23 ]
INFO  20:53:27,374 - #27 ;
INFO  20:53:27,374 - #33 do
INFO  20:53:27,374 - #20 {
INFO  20:53:27,374 - #4 read
INFO  20:53:27,374 - #29 (
INFO  20:53:27,374 - #8 a
INFO  20:53:27,374 - #22 [
INFO  20:53:27,374 - #8 i
INFO  20:53:27,374 - #23 ]
INFO  20:53:27,375 - #30 )
INFO  20:53:27,375 - #27 ;
INFO  20:53:27,375 - #31 if
INFO  20:53:27,375 - #29 (
INFO  20:53:27,375 - #8 a
INFO  20:53:27,375 - #22 [
INFO  20:53:27,375 - #8 i
INFO  20:53:27,375 - #23 ]
INFO  20:53:27,376 - #19 %
INFO  20:53:27,378 - #9 3
INFO  20:53:27,379 - #39 ==
INFO  20:53:27,379 - #9 0
INFO  20:53:27,380 - #30 )
INFO  20:53:27,380 - #3 print
INFO  20:53:27,380 - #29 (
INFO  20:53:27,381 - #8 a
INFO  20:53:27,381 - #22 [
INFO  20:53:27,381 - #8 i
INFO  20:53:27,381 - #23 ]
INFO  20:53:27,381 - #30 )
INFO  20:53:27,381 - #27 ;
INFO  20:53:27,381 - #32 else
INFO  20:53:27,381 - #3 print
INFO  20:53:27,381 - #29 (
INFO  20:53:27,382 - #8 max
INFO  20:53:27,382 - #29 (
INFO  20:53:27,382 - #8 a
INFO  20:53:27,382 - #22 [
INFO  20:53:27,382 - #8 i
INFO  20:53:27,382 - #23 ]
INFO  20:53:27,382 - #28 ,
INFO  20:53:27,382 - #9 0
INFO  20:53:27,382 - #30 )
INFO  20:53:27,383 - #30 )
INFO  20:53:27,383 - #27 ;
INFO  20:53:27,383 - #21 }
INFO  20:53:27,384 - #34 while
INFO  20:53:27,384 - #29 (
INFO  20:53:27,384 - #8 i
INFO  20:53:27,384 - #42 <=
INFO  20:53:27,384 - #8 length
INFO  20:53:27,384 - #16 -
INFO  20:53:27,384 - #9 1
INFO  20:53:27,384 - #30 )
INFO  20:53:27,385 - #27 ;
INFO  20:53:27,385 - #3 print
INFO  20:53:27,385 - #29 (
INFO  20:53:27,385 - #8 d
INFO  20:53:27,386 - #30 )
INFO  20:53:27,386 - #27 ;
INFO  20:53:27,386 - #21 }
INFO  20:53:27,386 - #21 }
INFO  21:19:57,087 - #2 program
INFO  21:19:57,089 - #8 Program
INFO  21:19:57,090 - #20 {
INFO  21:19:57,091 - #5 const
INFO  21:19:57,091 - #8 int
INFO  21:19:57,091 - #8 c
INFO  21:19:57,091 - #24 =
INFO  21:19:57,091 - #9 10
INFO  21:19:57,091 - #27 ;
INFO  21:19:57,092 - #5 const
INFO  21:19:57,092 - #8 int
INFO  21:19:57,092 - #8 d
INFO  21:19:57,092 - #24 =
INFO  21:19:57,092 - #9 99
INFO  21:19:57,093 - #28 ,
INFO  21:19:57,093 - #8 eps
INFO  21:19:57,093 - #24 =
INFO  21:19:57,093 - #9 2
INFO  21:19:57,093 - #27 ;
INFO  21:19:57,093 - #8 int
INFO  21:19:57,093 - #8 e
INFO  21:19:57,094 - #27 ;
INFO  21:19:57,094 - #6 void
INFO  21:19:57,094 - #8 test
INFO  21:19:57,094 - #29 (
INFO  21:19:57,094 - #30 )
INFO  21:19:57,095 - #20 {
INFO  21:19:57,095 - #8 int
INFO  21:19:57,095 - #8 a
INFO  21:19:57,095 - #28 ,
INFO  21:19:57,095 - #8 b
INFO  21:19:57,095 - #27 ;
INFO  21:19:57,095 - #8 bool
INFO  21:19:57,096 - #8 cond
INFO  21:19:57,096 - #27 ;
INFO  21:19:57,096 - #8 a
INFO  21:19:57,096 - #24 =
INFO  21:19:57,096 - #9 3
INFO  21:19:57,096 - #27 ;
INFO  21:19:57,097 - #8 b
INFO  21:19:57,097 - #24 =
INFO  21:19:57,098 - #9 5
INFO  21:19:57,098 - #27 ;
INFO  21:19:57,101 - #8 cond
INFO  21:19:57,102 - #24 =
INFO  21:19:57,102 - #11 true
INFO  21:19:57,102 - #27 ;
INFO  21:19:57,103 - #31 if
INFO  21:19:57,104 - #29 (
INFO  21:19:57,104 - #9 2
INFO  21:19:57,104 - #17 *
INFO  21:19:57,104 - #29 (
INFO  21:19:57,106 - #8 a
INFO  21:19:57,106 - #16 -
INFO  21:19:57,106 - #8 b
INFO  21:19:57,109 - #16 -
INFO  21:19:57,110 - #9 1
INFO  21:19:57,111 - #30 )
INFO  21:19:57,111 - #16 -
INFO  21:19:57,112 - #9 14
INFO  21:19:57,112 - #38 >
INFO  21:19:57,112 - #9 0
INFO  21:19:57,119 - #14 ||
INFO  21:19:57,120 - #8 cond
INFO  21:19:57,121 - #30 )
INFO  21:19:57,121 - #3 print
INFO  21:19:57,122 - #29 (
INFO  21:19:57,122 - #8 a
INFO  21:19:57,122 - #15 +
INFO  21:19:57,122 - #8 b
INFO  21:19:57,123 - #30 )
INFO  21:19:57,123 - #27 ;
INFO  21:19:57,124 - #21 }
INFO  21:19:57,124 - #8 int
INFO  21:19:57,124 - #8 max
INFO  21:19:57,125 - #29 (
INFO  21:19:57,125 - #8 int
INFO  21:19:57,127 - #8 a
INFO  21:19:57,127 - #28 ,
INFO  21:19:57,128 - #8 int
INFO  21:19:57,128 - #8 b
INFO  21:19:57,128 - #30 )
INFO  21:19:57,128 - #20 {
INFO  21:19:57,128 - #31 if
INFO  21:19:57,128 - #29 (
INFO  21:19:57,128 - #8 a
INFO  21:19:57,129 - #38 >
INFO  21:19:57,129 - #8 b
INFO  21:19:57,129 - #30 )
INFO  21:19:57,129 - #20 {
INFO  21:19:57,129 - #37 return
INFO  21:19:57,129 - #8 a
INFO  21:19:57,130 - #27 ;
INFO  21:19:57,130 - #21 }
INFO  21:19:57,130 - #32 else
INFO  21:19:57,130 - #37 return
INFO  21:19:57,131 - #8 b
INFO  21:19:57,131 - #27 ;
INFO  21:19:57,131 - #21 }
INFO  21:19:57,132 - #8 int
INFO  21:19:57,132 - #8 min
INFO  21:19:57,132 - #29 (
INFO  21:19:57,132 - #8 int
INFO  21:19:57,132 - #8 a
INFO  21:19:57,132 - #28 ,
INFO  21:19:57,133 - #8 int
INFO  21:19:57,133 - #8 b
INFO  21:19:57,133 - #30 )
INFO  21:19:57,133 - #20 {
INFO  21:19:57,133 - #31 if
INFO  21:19:57,133 - #29 (
INFO  21:19:57,133 - #8 a
INFO  21:19:57,133 - #40 <
INFO  21:19:57,133 - #8 b
INFO  21:19:57,134 - #30 )
INFO  21:19:57,134 - #20 {
INFO  21:19:57,135 - #37 return
INFO  21:19:57,135 - #8 a
INFO  21:19:57,135 - #27 ;
INFO  21:19:57,135 - #21 }
INFO  21:19:57,135 - #32 else
INFO  21:19:57,135 - #20 {
INFO  21:19:57,135 - #37 return
INFO  21:19:57,135 - #8 b
INFO  21:19:57,135 - #27 ;
INFO  21:19:57,135 - #21 }
INFO  21:19:57,135 - #21 }
INFO  21:19:57,136 - #6 void
INFO  21:19:57,136 - #8 main
INFO  21:19:57,136 - #29 (
INFO  21:19:57,136 - #30 )
INFO  21:19:57,136 - #20 {
INFO  21:19:57,136 - #8 int
INFO  21:19:57,136 - #8 a
INFO  21:19:57,137 - #22 [
INFO  21:19:57,137 - #23 ]
INFO  21:19:57,137 - #27 ;
INFO  21:19:57,137 - #8 int
INFO  21:19:57,137 - #8 length
INFO  21:19:57,138 - #27 ;
INFO  21:19:57,138 - #8 length
INFO  21:19:57,138 - #24 =
INFO  21:19:57,138 - #8 c
INFO  21:19:57,138 - #27 ;
INFO  21:19:57,138 - #8 test
INFO  21:19:57,138 - #29 (
INFO  21:19:57,138 - #30 )
INFO  21:19:57,138 - #27 ;
INFO  21:19:57,139 - #31 if
INFO  21:19:57,139 - #29 (
INFO  21:19:57,139 - #8 length
INFO  21:19:57,139 - #38 >
INFO  21:19:57,139 - #9 0
INFO  21:19:57,139 - #13 &&
INFO  21:19:57,139 - #8 length
INFO  21:19:57,139 - #42 <=
INFO  21:19:57,139 - #8 d
INFO  21:19:57,140 - #30 )
INFO  21:19:57,141 - #8 a
INFO  21:19:57,141 - #24 =
INFO  21:19:57,141 - #7 new
INFO  21:19:57,141 - #8 int
INFO  21:19:57,141 - #22 [
INFO  21:19:57,141 - #8 length
INFO  21:19:57,141 - #23 ]
INFO  21:19:57,141 - #27 ;
INFO  21:19:57,141 - #32 else
INFO  21:19:57,142 - #8 a
INFO  21:19:57,142 - #24 =
INFO  21:19:57,142 - #7 new
INFO  21:19:57,142 - #8 int
INFO  21:19:57,142 - #22 [
INFO  21:19:57,142 - #9 5
INFO  21:19:57,142 - #23 ]
INFO  21:19:57,142 - #27 ;
INFO  21:19:57,142 - #33 do
INFO  21:19:57,142 - #20 {
INFO  21:19:57,142 - #4 read
INFO  21:19:57,142 - #29 (
INFO  21:19:57,143 - #8 a
INFO  21:19:57,144 - #22 [
INFO  21:19:57,144 - #8 i
INFO  21:19:57,144 - #23 ]
INFO  21:19:57,144 - #30 )
INFO  21:19:57,144 - #27 ;
INFO  21:19:57,144 - #31 if
INFO  21:19:57,144 - #29 (
INFO  21:19:57,145 - #8 a
INFO  21:19:57,145 - #22 [
INFO  21:19:57,145 - #8 i
INFO  21:19:57,146 - #23 ]
INFO  21:19:57,146 - #19 %
INFO  21:19:57,147 - #9 3
INFO  21:19:57,148 - #39 ==
INFO  21:19:57,148 - #9 0
INFO  21:19:57,148 - #30 )
INFO  21:19:57,149 - #3 print
INFO  21:19:57,149 - #29 (
INFO  21:19:57,149 - #8 a
INFO  21:19:57,149 - #22 [
INFO  21:19:57,149 - #8 i
INFO  21:19:57,149 - #23 ]
INFO  21:19:57,149 - #30 )
INFO  21:19:57,149 - #27 ;
INFO  21:19:57,149 - #32 else
INFO  21:19:57,149 - #3 print
INFO  21:19:57,149 - #29 (
INFO  21:19:57,149 - #8 max
INFO  21:19:57,149 - #29 (
INFO  21:19:57,149 - #8 a
INFO  21:19:57,149 - #22 [
INFO  21:19:57,150 - #8 i
INFO  21:19:57,150 - #23 ]
INFO  21:19:57,150 - #28 ,
INFO  21:19:57,150 - #9 0
INFO  21:19:57,150 - #30 )
INFO  21:19:57,151 - #30 )
INFO  21:19:57,151 - #27 ;
INFO  21:19:57,151 - #21 }
INFO  21:19:57,151 - #34 while
INFO  21:19:57,151 - #29 (
INFO  21:19:57,152 - #8 i
INFO  21:19:57,152 - #42 <=
INFO  21:19:57,152 - #8 length
INFO  21:19:57,152 - #16 -
INFO  21:19:57,152 - #9 1
INFO  21:19:57,152 - #30 )
INFO  21:19:57,152 - #27 ;
INFO  21:19:57,152 - #3 print
INFO  21:19:57,152 - #29 (
INFO  21:19:57,152 - #8 d
INFO  21:19:57,152 - #30 )
INFO  21:19:57,153 - #27 ;
INFO  21:19:57,153 - #21 }
INFO  21:19:57,153 - #21 }
INFO  21:20:23,179 - #2 program
INFO  21:20:23,181 - #8 Program
INFO  21:20:23,181 - #20 {
INFO  21:20:23,181 - #5 const
INFO  21:20:23,181 - #8 int
INFO  21:20:23,181 - #8 c
INFO  21:20:23,181 - #24 =
INFO  21:20:23,182 - #9 10
INFO  21:20:23,182 - #27 ;
INFO  21:20:23,182 - #5 const
INFO  21:20:23,183 - #8 int
INFO  21:20:23,183 - #8 d
INFO  21:20:23,183 - #24 =
INFO  21:20:23,183 - #9 99
INFO  21:20:23,183 - #28 ,
INFO  21:20:23,183 - #8 eps
INFO  21:20:23,183 - #24 =
INFO  21:20:23,184 - #9 2
INFO  21:20:23,184 - #27 ;
INFO  21:20:23,184 - #8 int
INFO  21:20:23,184 - #8 e
INFO  21:20:23,184 - #27 ;
INFO  21:20:23,185 - #6 void
INFO  21:20:23,186 - #8 test
INFO  21:20:23,186 - #29 (
INFO  21:20:23,186 - #30 )
INFO  21:20:23,186 - #20 {
INFO  21:20:23,186 - #8 int
INFO  21:20:23,187 - #8 a
INFO  21:20:23,187 - #28 ,
INFO  21:20:23,188 - #8 b
INFO  21:20:23,188 - #27 ;
INFO  21:20:23,188 - #8 bool
INFO  21:20:23,188 - #8 cond
INFO  21:20:23,188 - #27 ;
INFO  21:20:23,188 - #8 a
INFO  21:20:23,189 - #24 =
INFO  21:20:23,189 - #9 3
INFO  21:20:23,189 - #27 ;
INFO  21:20:23,190 - #8 b
INFO  21:20:23,190 - #24 =
INFO  21:20:23,190 - #9 5
INFO  21:20:23,190 - #27 ;
INFO  21:20:23,190 - #8 cond
INFO  21:20:23,191 - #24 =
INFO  21:20:23,191 - #11 true
INFO  21:20:23,191 - #27 ;
INFO  21:20:23,193 - #31 if
INFO  21:20:23,193 - #29 (
INFO  21:20:23,194 - #9 2
INFO  21:20:23,194 - #17 *
INFO  21:20:23,194 - #29 (
INFO  21:20:23,195 - #8 a
INFO  21:20:23,195 - #16 -
INFO  21:20:23,196 - #8 b
INFO  21:20:23,198 - #16 -
INFO  21:20:23,198 - #9 1
INFO  21:20:23,198 - #30 )
INFO  21:20:23,199 - #16 -
INFO  21:20:23,203 - #9 14
INFO  21:20:23,204 - #38 >
INFO  21:20:23,204 - #9 0
INFO  21:20:23,209 - #14 ||
INFO  21:20:23,218 - #8 cond
INFO  21:20:23,219 - #30 )
INFO  21:20:23,220 - #3 print
INFO  21:20:23,220 - #29 (
INFO  21:20:23,220 - #8 a
INFO  21:20:23,220 - #15 +
INFO  21:20:23,220 - #8 b
INFO  21:20:23,222 - #30 )
INFO  21:20:23,222 - #27 ;
INFO  21:20:23,222 - #21 }
INFO  21:20:23,223 - #8 int
INFO  21:20:23,223 - #8 max
INFO  21:20:23,223 - #29 (
INFO  21:20:23,223 - #8 int
INFO  21:20:23,226 - #8 a
INFO  21:20:23,226 - #28 ,
INFO  21:20:23,227 - #8 int
INFO  21:20:23,227 - #8 b
INFO  21:20:23,227 - #30 )
INFO  21:20:23,228 - #20 {
INFO  21:20:23,228 - #31 if
INFO  21:20:23,228 - #29 (
INFO  21:20:23,228 - #8 a
INFO  21:20:23,228 - #38 >
INFO  21:20:23,229 - #8 b
INFO  21:20:23,229 - #30 )
INFO  21:20:23,229 - #20 {
INFO  21:20:23,229 - #37 return
INFO  21:20:23,229 - #8 a
INFO  21:20:23,229 - #27 ;
INFO  21:20:23,230 - #21 }
INFO  21:20:23,231 - #32 else
INFO  21:20:23,231 - #37 return
INFO  21:20:23,231 - #8 b
INFO  21:20:23,231 - #27 ;
INFO  21:20:23,232 - #21 }
INFO  21:20:23,232 - #8 int
INFO  21:20:23,233 - #8 min
INFO  21:20:23,233 - #29 (
INFO  21:20:23,233 - #8 int
INFO  21:20:23,233 - #8 a
INFO  21:20:23,233 - #28 ,
INFO  21:20:23,233 - #8 int
INFO  21:20:23,233 - #8 b
INFO  21:20:23,233 - #30 )
INFO  21:20:23,233 - #20 {
INFO  21:20:23,234 - #31 if
INFO  21:20:23,234 - #29 (
INFO  21:20:23,234 - #8 a
INFO  21:20:23,234 - #40 <
INFO  21:20:23,234 - #8 b
INFO  21:20:23,235 - #30 )
INFO  21:20:23,235 - #20 {
INFO  21:20:23,236 - #37 return
INFO  21:20:23,236 - #8 a
INFO  21:20:23,236 - #27 ;
INFO  21:20:23,236 - #21 }
INFO  21:20:23,236 - #32 else
INFO  21:20:23,236 - #20 {
INFO  21:20:23,236 - #37 return
INFO  21:20:23,236 - #8 b
INFO  21:20:23,236 - #27 ;
INFO  21:20:23,236 - #21 }
INFO  21:20:23,237 - #21 }
INFO  21:20:23,237 - #6 void
INFO  21:20:23,237 - #8 main
INFO  21:20:23,237 - #29 (
INFO  21:20:23,237 - #30 )
INFO  21:20:23,238 - #20 {
INFO  21:20:23,238 - #8 int
INFO  21:20:23,238 - #8 a
INFO  21:20:23,238 - #22 [
INFO  21:20:23,238 - #23 ]
INFO  21:20:23,238 - #27 ;
INFO  21:20:23,238 - #8 int
INFO  21:20:23,239 - #8 length
INFO  21:20:23,239 - #27 ;
INFO  21:20:23,239 - #8 length
INFO  21:20:23,239 - #24 =
INFO  21:20:23,239 - #8 c
INFO  21:20:23,239 - #27 ;
INFO  21:20:23,239 - #8 test
INFO  21:20:23,239 - #29 (
INFO  21:20:23,239 - #30 )
INFO  21:20:23,239 - #27 ;
INFO  21:20:23,240 - #31 if
INFO  21:20:23,240 - #29 (
INFO  21:20:23,240 - #8 length
INFO  21:20:23,240 - #38 >
INFO  21:20:23,240 - #9 0
INFO  21:20:23,240 - #13 &&
INFO  21:20:23,240 - #8 length
INFO  21:20:23,240 - #42 <=
INFO  21:20:23,240 - #8 d
INFO  21:20:23,241 - #30 )
INFO  21:20:23,242 - #8 a
INFO  21:20:23,242 - #24 =
INFO  21:20:23,242 - #7 new
INFO  21:20:23,242 - #8 int
INFO  21:20:23,242 - #22 [
INFO  21:20:23,242 - #8 length
INFO  21:20:23,242 - #23 ]
INFO  21:20:23,242 - #27 ;
INFO  21:20:23,243 - #32 else
INFO  21:20:23,243 - #8 a
INFO  21:20:23,243 - #24 =
INFO  21:20:23,243 - #7 new
INFO  21:20:23,243 - #8 int
INFO  21:20:23,243 - #22 [
INFO  21:20:23,243 - #9 5
INFO  21:20:23,243 - #23 ]
INFO  21:20:23,244 - #27 ;
INFO  21:20:23,244 - #33 do
INFO  21:20:23,244 - #20 {
INFO  21:20:23,244 - #4 read
INFO  21:20:23,244 - #29 (
INFO  21:20:23,244 - #8 a
INFO  21:20:23,245 - #22 [
INFO  21:20:23,245 - #8 i
INFO  21:20:23,245 - #23 ]
INFO  21:20:23,245 - #30 )
INFO  21:20:23,245 - #27 ;
INFO  21:20:23,245 - #31 if
INFO  21:20:23,246 - #29 (
INFO  21:20:23,246 - #8 a
INFO  21:20:23,246 - #22 [
INFO  21:20:23,246 - #8 i
INFO  21:20:23,246 - #23 ]
INFO  21:20:23,246 - #19 %
INFO  21:20:23,246 - #9 3
INFO  21:20:23,247 - #39 ==
INFO  21:20:23,247 - #9 0
INFO  21:20:23,248 - #30 )
INFO  21:20:23,249 - #3 print
INFO  21:20:23,249 - #29 (
INFO  21:20:23,249 - #8 a
INFO  21:20:23,249 - #22 [
INFO  21:20:23,249 - #8 i
INFO  21:20:23,249 - #23 ]
INFO  21:20:23,249 - #30 )
INFO  21:20:23,249 - #27 ;
INFO  21:20:23,249 - #32 else
INFO  21:20:23,249 - #3 print
INFO  21:20:23,250 - #29 (
INFO  21:20:23,250 - #8 max
INFO  21:20:23,250 - #29 (
INFO  21:20:23,250 - #8 a
INFO  21:20:23,250 - #22 [
INFO  21:20:23,250 - #8 i
INFO  21:20:23,250 - #23 ]
INFO  21:20:23,251 - #28 ,
INFO  21:20:23,251 - #9 0
INFO  21:20:23,251 - #30 )
INFO  21:20:23,251 - #30 )
INFO  21:20:23,252 - #27 ;
INFO  21:20:23,252 - #21 }
INFO  21:20:23,252 - #34 while
INFO  21:20:23,252 - #29 (
INFO  21:20:23,252 - #8 i
INFO  21:20:23,252 - #42 <=
INFO  21:20:23,252 - #8 length
INFO  21:20:23,253 - #16 -
INFO  21:20:23,253 - #9 1
INFO  21:20:23,253 - #30 )
INFO  21:20:23,253 - #27 ;
INFO  21:20:23,253 - #3 print
INFO  21:20:23,253 - #29 (
INFO  21:20:23,253 - #8 d
INFO  21:20:23,253 - #30 )
INFO  21:20:23,254 - #27 ;
INFO  21:20:23,254 - #21 }
INFO  21:20:23,254 - #21 }
INFO  21:20:41,186 - #2 program
INFO  21:20:41,188 - #8 Program
INFO  21:20:41,188 - #20 {
INFO  21:20:41,188 - #5 const
INFO  21:20:41,188 - #8 int
INFO  21:20:41,188 - #8 c
INFO  21:20:41,189 - #24 =
INFO  21:20:41,189 - #9 10
INFO  21:20:41,189 - #27 ;
INFO  21:20:41,189 - #5 const
INFO  21:20:41,190 - #8 int
INFO  21:20:41,190 - #8 d
INFO  21:20:41,191 - #24 =
INFO  21:20:41,191 - #9 99
INFO  21:20:41,191 - #28 ,
INFO  21:20:41,191 - #8 eps
INFO  21:20:41,191 - #24 =
INFO  21:20:41,191 - #9 2
INFO  21:20:41,191 - #27 ;
INFO  21:20:41,192 - #8 int
INFO  21:20:41,193 - #8 e
INFO  21:20:41,193 - #27 ;
INFO  21:20:41,194 - #6 void
INFO  21:20:41,195 - #8 test
INFO  21:20:41,196 - #29 (
INFO  21:20:41,196 - #30 )
INFO  21:20:41,196 - #20 {
INFO  21:20:41,197 - #8 int
INFO  21:20:41,197 - #8 a
INFO  21:20:41,197 - #28 ,
INFO  21:20:41,197 - #8 b
INFO  21:20:41,197 - #27 ;
INFO  21:20:41,197 - #8 bool
INFO  21:20:41,198 - #8 cond
INFO  21:20:41,198 - #27 ;
INFO  21:20:41,198 - #8 a
INFO  21:20:41,198 - #24 =
INFO  21:20:41,198 - #9 3
INFO  21:20:41,199 - #27 ;
INFO  21:20:41,199 - #8 b
INFO  21:20:41,199 - #24 =
INFO  21:20:41,200 - #9 5
INFO  21:20:41,200 - #27 ;
INFO  21:20:41,201 - #8 cond
INFO  21:20:41,202 - #24 =
INFO  21:20:41,202 - #11 true
INFO  21:20:41,202 - #27 ;
INFO  21:20:41,204 - #31 if
INFO  21:20:41,204 - #29 (
INFO  21:20:41,204 - #9 2
INFO  21:20:41,205 - #17 *
INFO  21:20:41,205 - #29 (
INFO  21:20:41,208 - #8 a
INFO  21:20:41,208 - #16 -
INFO  21:20:41,208 - #8 b
INFO  21:20:41,210 - #16 -
INFO  21:20:41,211 - #9 1
INFO  21:20:41,211 - #30 )
INFO  21:20:41,211 - #16 -
INFO  21:20:41,212 - #9 14
INFO  21:20:41,212 - #38 >
INFO  21:20:41,212 - #9 0
INFO  21:20:41,214 - #14 ||
INFO  21:20:41,215 - #8 cond
INFO  21:20:41,215 - #30 )
INFO  21:20:41,215 - #3 print
INFO  21:20:41,215 - #29 (
INFO  21:20:41,215 - #8 a
INFO  21:20:41,215 - #15 +
INFO  21:20:41,216 - #8 b
INFO  21:20:41,218 - #30 )
INFO  21:20:41,218 - #27 ;
INFO  21:20:41,218 - #21 }
INFO  21:20:41,219 - #8 int
INFO  21:20:41,220 - #8 max
INFO  21:20:41,220 - #29 (
INFO  21:20:41,220 - #8 int
INFO  21:20:41,222 - #8 a
INFO  21:20:41,223 - #28 ,
INFO  21:20:41,223 - #8 int
INFO  21:20:41,223 - #8 b
INFO  21:20:41,223 - #30 )
INFO  21:20:41,224 - #20 {
INFO  21:20:41,224 - #31 if
INFO  21:20:41,224 - #29 (
INFO  21:20:41,224 - #8 a
INFO  21:20:41,224 - #38 >
INFO  21:20:41,224 - #8 b
INFO  21:20:41,224 - #30 )
INFO  21:20:41,225 - #20 {
INFO  21:20:41,225 - #37 return
INFO  21:20:41,225 - #8 a
INFO  21:20:41,225 - #27 ;
INFO  21:20:41,225 - #21 }
INFO  21:20:41,225 - #32 else
INFO  21:20:41,226 - #37 return
INFO  21:20:41,226 - #8 b
INFO  21:20:41,226 - #27 ;
INFO  21:20:41,226 - #9 32323
ERROR 21:20:41,227 - 
Sintaksna greska na liniji 18
ERROR 21:20:41,227 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 18
INFO  21:21:03,926 - #2 program
INFO  21:21:03,927 - #8 Program
INFO  21:21:03,927 - #20 {
INFO  21:21:03,927 - #5 const
INFO  21:21:03,927 - #8 int
INFO  21:21:03,927 - #8 c
INFO  21:21:03,928 - #24 =
INFO  21:21:03,928 - #9 10
INFO  21:21:03,928 - #27 ;
INFO  21:21:03,929 - #5 const
INFO  21:21:03,930 - #8 int
INFO  21:21:03,931 - #8 d
INFO  21:21:03,931 - #24 =
INFO  21:21:03,931 - #9 99
INFO  21:21:03,931 - #28 ,
INFO  21:21:03,931 - #8 eps
INFO  21:21:03,931 - #24 =
INFO  21:21:03,931 - #9 2
INFO  21:21:03,931 - #27 ;
INFO  21:21:03,932 - #8 int
INFO  21:21:03,932 - #8 e
INFO  21:21:03,932 - #27 ;
INFO  21:21:03,932 - #6 void
INFO  21:21:03,933 - #8 test
INFO  21:21:03,933 - #29 (
INFO  21:21:03,933 - #30 )
INFO  21:21:03,933 - #20 {
INFO  21:21:03,933 - #8 int
INFO  21:21:03,933 - #8 a
INFO  21:21:03,934 - #28 ,
INFO  21:21:03,934 - #8 b
INFO  21:21:03,934 - #27 ;
INFO  21:21:03,934 - #8 bool
INFO  21:21:03,934 - #8 cond
INFO  21:21:03,934 - #27 ;
INFO  21:21:03,934 - #8 a
INFO  21:21:03,935 - #24 =
INFO  21:21:03,935 - #9 3
INFO  21:21:03,935 - #27 ;
INFO  21:21:03,936 - #8 b
INFO  21:21:03,936 - #24 =
INFO  21:21:03,936 - #9 5
INFO  21:21:03,936 - #27 ;
INFO  21:21:03,938 - #8 cond
INFO  21:21:03,939 - #24 =
INFO  21:21:03,939 - #11 true
INFO  21:21:03,940 - #27 ;
INFO  21:21:03,942 - #31 if
INFO  21:21:03,942 - #29 (
INFO  21:21:03,943 - #9 2
INFO  21:21:03,943 - #17 *
INFO  21:21:03,943 - #29 (
INFO  21:21:03,945 - #8 a
INFO  21:21:03,945 - #16 -
INFO  21:21:03,946 - #8 b
INFO  21:21:03,948 - #16 -
INFO  21:21:03,949 - #9 1
INFO  21:21:03,949 - #30 )
INFO  21:21:03,950 - #16 -
INFO  21:21:03,951 - #9 14
INFO  21:21:03,951 - #38 >
INFO  21:21:03,951 - #9 0
INFO  21:21:03,954 - #14 ||
INFO  21:21:03,955 - #8 cond
INFO  21:21:03,955 - #30 )
INFO  21:21:03,956 - #3 print
INFO  21:21:03,956 - #29 (
INFO  21:21:03,956 - #8 a
INFO  21:21:03,957 - #15 +
INFO  21:21:03,957 - #8 b
INFO  21:21:03,958 - #30 )
INFO  21:21:03,958 - #27 ;
INFO  21:21:03,958 - #21 }
INFO  21:21:03,959 - #8 int
INFO  21:21:03,959 - #8 max
INFO  21:21:03,960 - #29 (
INFO  21:21:03,960 - #8 int
INFO  21:21:03,962 - #8 a
INFO  21:21:03,962 - #28 ,
INFO  21:21:03,963 - #8 int
INFO  21:21:03,963 - #8 b
INFO  21:21:03,963 - #30 )
INFO  21:21:03,963 - #20 {
INFO  21:21:03,963 - #31 if
INFO  21:21:03,964 - #29 (
INFO  21:21:03,964 - #8 a
INFO  21:21:03,964 - #38 >
INFO  21:21:03,964 - #8 b
INFO  21:21:03,964 - #30 )
INFO  21:21:03,964 - #20 {
INFO  21:21:03,964 - #37 return
INFO  21:21:03,964 - #8 a
INFO  21:21:03,964 - #27 ;
INFO  21:21:03,965 - #21 }
INFO  21:21:03,965 - #32 else
INFO  21:21:03,965 - #37 return
INFO  21:21:03,965 - #8 b
INFO  21:21:03,965 - #27 ;
INFO  21:21:03,966 - #9 32323
ERROR 21:21:03,966 - 
Sintaksna greska na liniji 18
ERROR 21:21:03,966 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 18
INFO  21:21:12,011 - #2 program
INFO  21:21:12,013 - #8 Program
INFO  21:21:12,013 - #20 {
INFO  21:21:12,013 - #5 const
INFO  21:21:12,014 - #8 int
INFO  21:21:12,014 - #8 c
INFO  21:21:12,014 - #24 =
INFO  21:21:12,014 - #9 10
INFO  21:21:12,015 - #27 ;
INFO  21:21:12,015 - #5 const
INFO  21:21:12,016 - #8 int
INFO  21:21:12,016 - #8 d
INFO  21:21:12,016 - #24 =
INFO  21:21:12,016 - #9 99
INFO  21:21:12,016 - #28 ,
INFO  21:21:12,016 - #8 eps
INFO  21:21:12,017 - #24 =
INFO  21:21:12,017 - #9 2
INFO  21:21:12,017 - #27 ;
INFO  21:21:12,017 - #8 int
INFO  21:21:12,018 - #8 e
INFO  21:21:12,018 - #27 ;
INFO  21:21:12,018 - #6 void
INFO  21:21:12,018 - #8 test
INFO  21:21:12,019 - #29 (
INFO  21:21:12,019 - #30 )
INFO  21:21:12,019 - #20 {
INFO  21:21:12,019 - #8 int
INFO  21:21:12,019 - #8 a
INFO  21:21:12,019 - #28 ,
INFO  21:21:12,019 - #8 b
INFO  21:21:12,019 - #27 ;
INFO  21:21:12,020 - #8 bool
INFO  21:21:12,020 - #8 cond
INFO  21:21:12,020 - #27 ;
INFO  21:21:12,020 - #8 a
INFO  21:21:12,020 - #24 =
INFO  21:21:12,021 - #9 3
INFO  21:21:12,021 - #27 ;
INFO  21:21:12,021 - #8 b
INFO  21:21:12,022 - #24 =
INFO  21:21:12,022 - #9 5
INFO  21:21:12,022 - #27 ;
INFO  21:21:12,022 - #8 cond
INFO  21:21:12,022 - #24 =
INFO  21:21:12,022 - #11 true
INFO  21:21:12,022 - #27 ;
INFO  21:21:12,024 - #31 if
INFO  21:21:12,025 - #29 (
INFO  21:21:12,025 - #9 2
INFO  21:21:12,025 - #17 *
INFO  21:21:12,025 - #29 (
INFO  21:21:12,027 - #8 a
INFO  21:21:12,028 - #16 -
INFO  21:21:12,028 - #8 b
INFO  21:21:12,030 - #16 -
INFO  21:21:12,031 - #9 1
INFO  21:21:12,031 - #30 )
INFO  21:21:12,032 - #16 -
INFO  21:21:12,033 - #9 14
INFO  21:21:12,033 - #38 >
INFO  21:21:12,033 - #9 0
INFO  21:21:12,035 - #14 ||
INFO  21:21:12,036 - #8 cond
INFO  21:21:12,036 - #30 )
INFO  21:21:12,037 - #3 print
INFO  21:21:12,037 - #29 (
INFO  21:21:12,037 - #8 a
INFO  21:21:12,037 - #15 +
INFO  21:21:12,037 - #8 b
INFO  21:21:12,038 - #30 )
INFO  21:21:12,038 - #27 ;
INFO  21:21:12,039 - #21 }
INFO  21:21:12,039 - #8 int
INFO  21:21:12,040 - #8 max
INFO  21:21:12,040 - #29 (
INFO  21:21:12,040 - #8 int
INFO  21:21:12,043 - #8 a
INFO  21:21:12,043 - #28 ,
INFO  21:21:12,043 - #8 int
INFO  21:21:12,043 - #8 b
INFO  21:21:12,044 - #30 )
INFO  21:21:12,044 - #20 {
INFO  21:21:12,044 - #31 if
INFO  21:21:12,044 - #29 (
INFO  21:21:12,044 - #8 a
INFO  21:21:12,045 - #38 >
INFO  21:21:12,045 - #8 b
INFO  21:21:12,045 - #30 )
INFO  21:21:12,045 - #20 {
INFO  21:21:12,045 - #37 return
INFO  21:21:12,046 - #8 a
INFO  21:21:12,046 - #27 ;
INFO  21:21:12,046 - #21 }
INFO  21:21:12,046 - #32 else
INFO  21:21:12,047 - #37 return
INFO  21:21:12,047 - #8 b
INFO  21:21:12,047 - #27 ;
INFO  21:21:12,047 - #9 32323
ERROR 21:21:12,048 - 
Sintaksna greska na liniji 18
ERROR 21:21:12,048 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 18
INFO  21:21:48,102 - #2 program
INFO  21:21:48,102 - #8 Program
INFO  21:21:48,102 - #20 {
INFO  21:21:48,103 - #5 const
INFO  21:21:48,103 - #8 int
INFO  21:21:48,103 - #8 c
INFO  21:21:48,103 - #24 =
INFO  21:21:48,103 - #9 10
INFO  21:21:48,103 - #27 ;
INFO  21:21:48,104 - #5 const
INFO  21:21:48,104 - #8 int
INFO  21:21:48,104 - #8 d
INFO  21:21:48,105 - #24 =
INFO  21:21:48,105 - #9 99
INFO  21:21:48,105 - #28 ,
INFO  21:21:48,105 - #8 eps
INFO  21:21:48,105 - #24 =
INFO  21:21:48,105 - #9 2
INFO  21:21:48,105 - #27 ;
INFO  21:21:48,106 - #8 int
INFO  21:21:48,106 - #8 e
INFO  21:21:48,106 - #27 ;
INFO  21:21:48,106 - #6 void
INFO  21:21:48,107 - #8 test
INFO  21:21:48,107 - #29 (
INFO  21:21:48,107 - #30 )
INFO  21:21:48,108 - #20 {
INFO  21:21:48,108 - #8 int
INFO  21:21:48,108 - #8 a
INFO  21:21:48,108 - #28 ,
INFO  21:21:48,108 - #8 b
INFO  21:21:48,108 - #27 ;
INFO  21:21:48,108 - #8 bool
INFO  21:21:48,111 - #8 cond
INFO  21:21:48,111 - #27 ;
INFO  21:21:48,111 - #8 a
INFO  21:21:48,112 - #24 =
INFO  21:21:48,112 - #9 3
INFO  21:21:48,112 - #27 ;
INFO  21:21:48,113 - #8 b
INFO  21:21:48,113 - #24 =
INFO  21:21:48,113 - #9 5
INFO  21:21:48,113 - #27 ;
INFO  21:21:48,115 - #8 cond
INFO  21:21:48,115 - #24 =
INFO  21:21:48,115 - #11 true
INFO  21:21:48,115 - #27 ;
INFO  21:21:48,118 - #31 if
INFO  21:21:48,119 - #29 (
INFO  21:21:48,119 - #9 2
INFO  21:21:48,119 - #17 *
INFO  21:21:48,119 - #29 (
INFO  21:21:48,121 - #8 a
INFO  21:21:48,121 - #16 -
INFO  21:21:48,121 - #8 b
INFO  21:21:48,123 - #16 -
INFO  21:21:48,123 - #9 1
INFO  21:21:48,123 - #30 )
INFO  21:21:48,124 - #16 -
INFO  21:21:48,125 - #9 14
INFO  21:21:48,125 - #38 >
INFO  21:21:48,125 - #9 0
INFO  21:21:48,128 - #14 ||
INFO  21:21:48,128 - #8 cond
INFO  21:21:48,128 - #30 )
INFO  21:21:48,129 - #3 print
INFO  21:21:48,129 - #29 (
INFO  21:21:48,129 - #8 a
INFO  21:21:48,129 - #15 +
INFO  21:21:48,129 - #8 b
INFO  21:21:48,130 - #30 )
INFO  21:21:48,130 - #27 ;
INFO  21:21:48,130 - #21 }
INFO  21:21:48,131 - #8 int
INFO  21:21:48,131 - #8 max
INFO  21:21:48,131 - #29 (
INFO  21:21:48,131 - #8 int
INFO  21:21:48,131 - #8 a
INFO  21:21:48,132 - #28 ,
INFO  21:21:48,132 - #8 int
INFO  21:21:48,132 - #8 b
INFO  21:21:48,132 - #30 )
INFO  21:21:48,133 - #20 {
INFO  21:21:48,133 - #31 if
INFO  21:21:48,133 - #29 (
INFO  21:21:48,133 - #8 a
INFO  21:21:48,133 - #38 >
INFO  21:21:48,133 - #8 b
INFO  21:21:48,133 - #30 )
INFO  21:21:48,134 - #20 {
INFO  21:21:48,134 - #37 return
INFO  21:21:48,134 - #8 a
INFO  21:21:48,134 - #27 ;
INFO  21:21:48,134 - #21 }
INFO  21:21:48,135 - #32 else
INFO  21:21:48,135 - #37 return
INFO  21:21:48,135 - #8 b
INFO  21:21:48,136 - #27 ;
INFO  21:21:48,137 - #21 }
INFO  21:21:48,137 - #8 int
INFO  21:21:48,138 - #8 min
INFO  21:21:48,138 - #29 (
INFO  21:21:48,138 - #8 int
INFO  21:21:48,138 - #8 a
INFO  21:21:48,138 - #28 ,
INFO  21:21:48,139 - #8 int
INFO  21:21:48,139 - #8 b
INFO  21:21:48,139 - #30 )
INFO  21:21:48,139 - #20 {
INFO  21:21:48,139 - #31 if
INFO  21:21:48,139 - #29 (
INFO  21:21:48,139 - #8 a
INFO  21:21:48,139 - #40 <
INFO  21:21:48,139 - #8 b
INFO  21:21:48,140 - #30 )
INFO  21:21:48,140 - #20 {
INFO  21:21:48,141 - #37 return
INFO  21:21:48,141 - #8 a
INFO  21:21:48,141 - #27 ;
INFO  21:21:48,141 - #21 }
INFO  21:21:48,141 - #32 else
INFO  21:21:48,141 - #20 {
INFO  21:21:48,141 - #37 return
INFO  21:21:48,141 - #8 b
INFO  21:21:48,141 - #27 ;
INFO  21:21:48,141 - #21 }
INFO  21:21:48,142 - #21 }
INFO  21:21:48,142 - #6 void
INFO  21:21:48,142 - #8 main
INFO  21:21:48,142 - #29 (
INFO  21:21:48,142 - #30 )
INFO  21:21:48,142 - #20 {
INFO  21:21:48,142 - #8 int
INFO  21:21:48,143 - #8 a
INFO  21:21:48,143 - #22 [
INFO  21:21:48,143 - #23 ]
INFO  21:21:48,143 - #27 ;
INFO  21:21:48,143 - #8 int
INFO  21:21:48,143 - #8 length
INFO  21:21:48,143 - #27 ;
INFO  21:21:48,144 - #8 length
INFO  21:21:48,145 - #24 =
INFO  21:21:48,145 - #8 c
INFO  21:21:48,145 - #27 ;
INFO  21:21:48,146 - #8 test
INFO  21:21:48,146 - #29 (
INFO  21:21:48,146 - #30 )
INFO  21:21:48,146 - #27 ;
INFO  21:21:48,146 - #31 if
INFO  21:21:48,146 - #29 (
INFO  21:21:48,146 - #8 length
INFO  21:21:48,146 - #38 >
INFO  21:21:48,146 - #9 0
INFO  21:21:48,146 - #13 &&
INFO  21:21:48,147 - #8 length
INFO  21:21:48,147 - #42 <=
INFO  21:21:48,147 - #8 d
INFO  21:21:48,148 - #30 )
INFO  21:21:48,148 - #8 a
INFO  21:21:48,148 - #24 =
INFO  21:21:48,148 - #7 new
INFO  21:21:48,149 - #8 int
INFO  21:21:48,149 - #22 [
INFO  21:21:48,149 - #8 length
INFO  21:21:48,149 - #23 ]
INFO  21:21:48,149 - #27 ;
INFO  21:21:48,149 - #32 else
INFO  21:21:48,149 - #8 a
INFO  21:21:48,149 - #24 =
INFO  21:21:48,149 - #7 new
INFO  21:21:48,149 - #8 int
INFO  21:21:48,149 - #22 [
INFO  21:21:48,150 - #9 5
INFO  21:21:48,150 - #23 ]
INFO  21:21:48,150 - #27 ;
INFO  21:21:48,150 - #33 do
INFO  21:21:48,150 - #20 {
INFO  21:21:48,150 - #4 read
INFO  21:21:48,150 - #29 (
INFO  21:21:48,150 - #8 a
INFO  21:21:48,150 - #22 [
INFO  21:21:48,150 - #8 i
INFO  21:21:48,150 - #23 ]
INFO  21:21:48,150 - #30 )
INFO  21:21:48,151 - #27 ;
INFO  21:21:48,151 - #31 if
INFO  21:21:48,151 - #29 (
INFO  21:21:48,151 - #8 a
INFO  21:21:48,151 - #22 [
INFO  21:21:48,151 - #8 i
INFO  21:21:48,151 - #23 ]
INFO  21:21:48,158 - #19 %
INFO  21:21:48,158 - #9 3
INFO  21:21:48,159 - #39 ==
INFO  21:21:48,160 - #9 0
INFO  21:21:48,162 - #30 )
INFO  21:21:48,162 - #3 print
INFO  21:21:48,162 - #29 (
INFO  21:21:48,162 - #8 a
INFO  21:21:48,162 - #22 [
INFO  21:21:48,162 - #8 i
INFO  21:21:48,162 - #23 ]
INFO  21:21:48,162 - #30 )
INFO  21:21:48,162 - #27 ;
INFO  21:21:48,162 - #32 else
INFO  21:21:48,163 - #3 print
INFO  21:21:48,163 - #29 (
INFO  21:21:48,163 - #8 max
INFO  21:21:48,163 - #29 (
INFO  21:21:48,163 - #8 a
INFO  21:21:48,163 - #22 [
INFO  21:21:48,163 - #8 i
INFO  21:21:48,163 - #23 ]
INFO  21:21:48,163 - #28 ,
INFO  21:21:48,163 - #9 0
INFO  21:21:48,163 - #30 )
INFO  21:21:48,164 - #30 )
INFO  21:21:48,164 - #27 ;
INFO  21:21:48,164 - #21 }
INFO  21:21:48,164 - #34 while
INFO  21:21:48,164 - #29 (
INFO  21:21:48,164 - #8 i
INFO  21:21:48,164 - #42 <=
INFO  21:21:48,164 - #8 length
INFO  21:21:48,164 - #16 -
INFO  21:21:48,165 - #9 1
INFO  21:21:48,165 - #30 )
INFO  21:21:48,165 - #27 ;
INFO  21:21:48,165 - #3 print
INFO  21:21:48,165 - #29 (
INFO  21:21:48,165 - #8 d
INFO  21:21:48,165 - #30 )
INFO  21:21:48,165 - #27 ;
INFO  21:21:48,165 - #21 }
INFO  21:21:48,165 - #21 }
INFO  21:22:25,678 - #2 program
INFO  21:22:25,679 - #8 Program
INFO  21:22:25,679 - #20 {
INFO  21:22:25,679 - #5 const
INFO  21:22:25,680 - #8 int
INFO  21:22:25,680 - #8 c
INFO  21:22:25,680 - #24 =
INFO  21:22:25,680 - #9 10
INFO  21:22:25,681 - #27 ;
INFO  21:22:25,681 - #5 const
INFO  21:22:25,682 - #8 int
INFO  21:22:25,682 - #8 d
INFO  21:22:25,682 - #24 =
INFO  21:22:25,682 - #9 99
INFO  21:22:25,682 - #28 ,
INFO  21:22:25,682 - #8 eps
INFO  21:22:25,682 - #24 =
INFO  21:22:25,683 - #9 2
INFO  21:22:25,683 - #27 ;
INFO  21:22:25,683 - #8 int
INFO  21:22:25,683 - #8 e
INFO  21:22:25,683 - #27 ;
INFO  21:22:25,684 - #6 void
INFO  21:22:25,684 - #8 test
INFO  21:22:25,684 - #29 (
INFO  21:22:25,684 - #30 )
INFO  21:22:25,684 - #20 {
INFO  21:22:25,685 - #8 int
INFO  21:22:25,685 - #8 a
INFO  21:22:25,685 - #28 ,
INFO  21:22:25,685 - #8 b
INFO  21:22:25,685 - #27 ;
INFO  21:22:25,685 - #8 bool
INFO  21:22:25,686 - #8 cond
INFO  21:22:25,686 - #27 ;
INFO  21:22:25,686 - #8 a
INFO  21:22:25,686 - #24 =
INFO  21:22:25,686 - #9 3
INFO  21:22:25,686 - #27 ;
INFO  21:22:25,687 - #8 b
INFO  21:22:25,688 - #24 =
INFO  21:22:25,688 - #9 5
INFO  21:22:25,688 - #27 ;
INFO  21:22:25,688 - #8 cond
INFO  21:22:25,688 - #24 =
INFO  21:22:25,688 - #11 true
INFO  21:22:25,688 - #27 ;
INFO  21:22:25,690 - #31 if
INFO  21:22:25,690 - #29 (
INFO  21:22:25,690 - #9 2
INFO  21:22:25,690 - #17 *
INFO  21:22:25,690 - #29 (
INFO  21:22:25,698 - #8 a
INFO  21:22:25,699 - #16 -
INFO  21:22:25,700 - #8 b
INFO  21:22:25,701 - #16 -
INFO  21:22:25,702 - #9 1
INFO  21:22:25,702 - #30 )
INFO  21:22:25,702 - #16 -
INFO  21:22:25,703 - #9 14
INFO  21:22:25,703 - #38 >
INFO  21:22:25,704 - #9 0
INFO  21:22:25,706 - #14 ||
INFO  21:22:25,707 - #8 cond
INFO  21:22:25,707 - #30 )
INFO  21:22:25,708 - #3 print
INFO  21:22:25,708 - #29 (
INFO  21:22:25,708 - #8 a
INFO  21:22:25,708 - #15 +
INFO  21:22:25,708 - #8 b
INFO  21:22:25,709 - #30 )
INFO  21:22:25,709 - #27 ;
INFO  21:22:25,710 - #21 }
INFO  21:22:25,710 - #8 int
INFO  21:22:25,710 - #8 max
INFO  21:22:25,711 - #29 (
INFO  21:22:25,711 - #8 int
INFO  21:22:25,715 - #8 a
INFO  21:22:25,715 - #28 ,
INFO  21:22:25,716 - #8 int
INFO  21:22:25,716 - #8 b
INFO  21:22:25,716 - #30 )
INFO  21:22:25,716 - #20 {
INFO  21:22:25,717 - #31 if
INFO  21:22:25,717 - #29 (
INFO  21:22:25,717 - #8 a
INFO  21:22:25,717 - #38 >
INFO  21:22:25,717 - #8 b
INFO  21:22:25,717 - #30 )
INFO  21:22:25,717 - #20 {
INFO  21:22:25,717 - #37 return
INFO  21:22:25,717 - #8 a
INFO  21:22:25,717 - #27 ;
INFO  21:22:25,718 - #21 }
INFO  21:22:25,718 - #32 else
INFO  21:22:25,718 - #37 return
INFO  21:22:25,719 - #8 b
INFO  21:22:25,719 - #27 ;
INFO  21:22:25,719 - #21 }
INFO  21:22:25,719 - #8 int
INFO  21:22:25,719 - #8 min
INFO  21:22:25,720 - #29 (
INFO  21:22:25,720 - #8 int
INFO  21:22:25,720 - #8 a
INFO  21:22:25,720 - #28 ,
INFO  21:22:25,720 - #8 int
INFO  21:22:25,720 - #8 b
INFO  21:22:25,720 - #30 )
INFO  21:22:25,720 - #20 {
INFO  21:22:25,720 - #31 if
INFO  21:22:25,720 - #29 (
INFO  21:22:25,720 - #8 a
INFO  21:22:25,721 - #40 <
INFO  21:22:25,721 - #8 b
INFO  21:22:25,722 - #30 )
INFO  21:22:25,722 - #20 {
INFO  21:22:25,722 - #37 return
INFO  21:22:25,722 - #8 a
INFO  21:22:25,722 - #27 ;
INFO  21:22:25,722 - #21 }
INFO  21:22:25,722 - #32 else
INFO  21:22:25,722 - #20 {
INFO  21:22:25,722 - #37 return
INFO  21:22:25,722 - #8 b
INFO  21:22:25,722 - #27 ;
INFO  21:22:25,723 - #21 }
INFO  21:22:25,723 - #21 }
INFO  21:22:25,723 - #6 void
INFO  21:22:25,723 - #8 main
INFO  21:22:25,723 - #29 (
INFO  21:22:25,723 - #30 )
INFO  21:22:25,723 - #20 {
INFO  21:22:25,723 - #8 int
INFO  21:22:25,724 - #8 a
INFO  21:22:25,724 - #22 [
INFO  21:22:25,724 - #23 ]
INFO  21:22:25,724 - #27 ;
INFO  21:22:25,725 - #8 int
INFO  21:22:25,725 - #8 length
INFO  21:22:25,725 - #27 ;
INFO  21:22:25,725 - #8 length
INFO  21:22:25,725 - #24 =
INFO  21:22:25,725 - #8 c
INFO  21:22:25,725 - #27 ;
INFO  21:22:25,725 - #8 test
INFO  21:22:25,726 - #29 (
INFO  21:22:25,726 - #30 )
INFO  21:22:25,726 - #27 ;
INFO  21:22:25,726 - #31 if
INFO  21:22:25,726 - #29 (
INFO  21:22:25,726 - #8 length
INFO  21:22:25,726 - #38 >
INFO  21:22:25,727 - #9 0
INFO  21:22:25,727 - #13 &&
INFO  21:22:25,727 - #8 length
INFO  21:22:25,727 - #42 <=
INFO  21:22:25,727 - #8 d
INFO  21:22:25,729 - #30 )
INFO  21:22:25,729 - #8 a
INFO  21:22:25,729 - #24 =
INFO  21:22:25,730 - #7 new
INFO  21:22:25,730 - #8 int
INFO  21:22:25,730 - #22 [
INFO  21:22:25,730 - #8 length
INFO  21:22:25,730 - #23 ]
INFO  21:22:25,730 - #27 ;
INFO  21:22:25,731 - #32 else
INFO  21:22:25,731 - #8 a
INFO  21:22:25,731 - #24 =
INFO  21:22:25,731 - #7 new
INFO  21:22:25,731 - #8 int
INFO  21:22:25,731 - #22 [
INFO  21:22:25,731 - #9 5
INFO  21:22:25,731 - #23 ]
INFO  21:22:25,732 - #27 ;
INFO  21:22:25,732 - #33 do
INFO  21:22:25,732 - #20 {
INFO  21:22:25,732 - #4 read
INFO  21:22:25,732 - #29 (
INFO  21:22:25,732 - #8 a
INFO  21:22:25,732 - #22 [
INFO  21:22:25,732 - #8 i
INFO  21:22:25,732 - #23 ]
INFO  21:22:25,732 - #30 )
INFO  21:22:25,733 - #27 ;
INFO  21:22:25,733 - #31 if
INFO  21:22:25,733 - #29 (
INFO  21:22:25,733 - #8 a
INFO  21:22:25,733 - #22 [
INFO  21:22:25,733 - #8 i
INFO  21:22:25,733 - #23 ]
INFO  21:22:25,733 - #19 %
INFO  21:22:25,738 - #9 3
INFO  21:22:25,740 - #39 ==
INFO  21:22:25,740 - #9 0
INFO  21:22:25,741 - #30 )
INFO  21:22:25,741 - #3 print
INFO  21:22:25,741 - #29 (
INFO  21:22:25,741 - #8 a
INFO  21:22:25,741 - #22 [
INFO  21:22:25,741 - #8 i
INFO  21:22:25,741 - #23 ]
INFO  21:22:25,741 - #30 )
INFO  21:22:25,742 - #27 ;
INFO  21:22:25,742 - #32 else
INFO  21:22:25,742 - #3 print
INFO  21:22:25,743 - #29 (
INFO  21:22:25,743 - #8 max
INFO  21:22:25,743 - #29 (
INFO  21:22:25,743 - #8 a
INFO  21:22:25,743 - #22 [
INFO  21:22:25,743 - #8 i
INFO  21:22:25,743 - #23 ]
INFO  21:22:25,744 - #28 ,
INFO  21:22:25,744 - #9 0
INFO  21:22:25,744 - #30 )
INFO  21:22:25,744 - #30 )
INFO  21:22:25,745 - #27 ;
INFO  21:22:25,745 - #21 }
INFO  21:22:25,745 - #34 while
INFO  21:22:25,745 - #29 (
INFO  21:22:25,745 - #8 i
INFO  21:22:25,745 - #42 <=
INFO  21:22:25,745 - #8 length
INFO  21:22:25,745 - #16 -
INFO  21:22:25,745 - #9 1
INFO  21:22:25,745 - #30 )
INFO  21:22:25,745 - #27 ;
INFO  21:22:25,746 - #3 print
INFO  21:22:25,746 - #29 (
INFO  21:22:25,746 - #8 d
INFO  21:22:25,746 - #30 )
INFO  21:22:25,746 - #27 ;
INFO  21:22:25,746 - #21 }
INFO  21:22:25,746 - #21 }
INFO  21:24:24,838 - #2 program
INFO  21:24:24,839 - #8 Program
INFO  21:24:24,839 - #20 {
INFO  21:24:24,839 - #5 const
INFO  21:24:24,839 - #8 int
INFO  21:24:24,839 - #8 c
INFO  21:24:24,839 - #24 =
INFO  21:24:24,839 - #9 10
INFO  21:24:24,839 - #27 ;
INFO  21:24:24,840 - #5 const
INFO  21:24:24,840 - #8 int
INFO  21:24:24,840 - #8 d
INFO  21:24:24,840 - #24 =
INFO  21:24:24,840 - #9 99
INFO  21:24:24,841 - #28 ,
INFO  21:24:24,841 - #8 eps
INFO  21:24:24,841 - #24 =
INFO  21:24:24,841 - #9 2
INFO  21:24:24,841 - #27 ;
INFO  21:24:24,841 - #8 int
INFO  21:24:24,841 - #8 e
INFO  21:24:24,842 - #27 ;
INFO  21:24:24,842 - #6 void
INFO  21:24:24,842 - #8 test
INFO  21:24:24,842 - #29 (
INFO  21:24:24,842 - #30 )
INFO  21:24:24,842 - #20 {
INFO  21:24:24,842 - #8 int
INFO  21:24:24,842 - #8 a
INFO  21:24:24,842 - #28 ,
INFO  21:24:24,843 - #8 b
INFO  21:24:24,843 - #27 ;
INFO  21:24:24,844 - #8 bool
INFO  21:24:24,844 - #8 cond
INFO  21:24:24,844 - #27 ;
INFO  21:24:24,844 - #8 a
INFO  21:24:24,845 - #24 =
INFO  21:24:24,845 - #9 3
INFO  21:24:24,845 - #27 ;
INFO  21:24:24,846 - #8 b
INFO  21:24:24,846 - #24 =
INFO  21:24:24,846 - #9 5
INFO  21:24:24,846 - #27 ;
INFO  21:24:24,848 - #8 cond
INFO  21:24:24,848 - #24 =
INFO  21:24:24,848 - #11 true
INFO  21:24:24,848 - #27 ;
INFO  21:24:24,849 - #31 if
INFO  21:24:24,849 - #29 (
INFO  21:24:24,850 - #9 2
INFO  21:24:24,850 - #17 *
INFO  21:24:24,850 - #29 (
INFO  21:24:24,851 - #8 a
INFO  21:24:24,851 - #16 -
INFO  21:24:24,852 - #8 b
INFO  21:24:24,853 - #16 -
INFO  21:24:24,853 - #9 1
INFO  21:24:24,853 - #30 )
INFO  21:24:24,854 - #16 -
INFO  21:24:24,854 - #9 14
INFO  21:24:24,854 - #38 >
INFO  21:24:24,855 - #9 0
INFO  21:24:24,856 - #14 ||
INFO  21:24:24,856 - #8 cond
INFO  21:24:24,857 - #30 )
INFO  21:24:24,857 - #3 print
INFO  21:24:24,857 - #29 (
INFO  21:24:24,857 - #8 a
INFO  21:24:24,858 - #15 +
INFO  21:24:24,858 - #8 b
INFO  21:24:24,858 - #30 )
INFO  21:24:24,859 - #27 ;
INFO  21:24:24,859 - #21 }
INFO  21:24:24,859 - #8 int
INFO  21:24:24,860 - #8 max
INFO  21:24:24,860 - #29 (
INFO  21:24:24,860 - #8 int
INFO  21:24:24,861 - #8 a
INFO  21:24:24,861 - #28 ,
INFO  21:24:24,862 - #8 int
INFO  21:24:24,862 - #8 b
INFO  21:24:24,862 - #30 )
INFO  21:24:24,862 - #20 {
INFO  21:24:24,862 - #31 if
INFO  21:24:24,862 - #29 (
INFO  21:24:24,862 - #8 a
INFO  21:24:24,862 - #38 >
INFO  21:24:24,863 - #8 b
INFO  21:24:24,863 - #30 )
INFO  21:24:24,863 - #20 {
INFO  21:24:24,863 - #37 return
INFO  21:24:24,863 - #8 a
INFO  21:24:24,863 - #27 ;
INFO  21:24:24,864 - #21 }
INFO  21:24:24,864 - #32 else
INFO  21:24:24,864 - #37 return
INFO  21:24:24,864 - #8 b
INFO  21:24:24,864 - #27 ;
INFO  21:24:24,864 - #21 }
INFO  21:24:24,864 - #8 int
INFO  21:24:24,865 - #8 min
INFO  21:24:24,865 - #29 (
INFO  21:24:24,865 - #8 int
INFO  21:24:24,865 - #8 a
INFO  21:24:24,865 - #28 ,
INFO  21:24:24,865 - #8 int
INFO  21:24:24,865 - #8 b
INFO  21:24:24,865 - #30 )
INFO  21:24:24,865 - #20 {
INFO  21:24:24,865 - #31 if
INFO  21:24:24,865 - #29 (
INFO  21:24:24,865 - #8 a
INFO  21:24:24,865 - #40 <
INFO  21:24:24,866 - #8 b
INFO  21:24:24,866 - #30 )
INFO  21:24:24,866 - #20 {
INFO  21:24:24,867 - #37 return
INFO  21:24:24,867 - #8 a
INFO  21:24:24,867 - #27 ;
INFO  21:24:24,867 - #21 }
INFO  21:24:24,867 - #32 else
INFO  21:24:24,867 - #20 {
INFO  21:24:24,867 - #37 return
INFO  21:24:24,867 - #8 b
INFO  21:24:24,867 - #27 ;
INFO  21:24:24,867 - #21 }
INFO  21:24:24,867 - #21 }
INFO  21:24:24,868 - #6 void
INFO  21:24:24,868 - #8 main
INFO  21:24:24,868 - #29 (
INFO  21:24:24,868 - #30 )
INFO  21:24:24,868 - #20 {
INFO  21:24:24,868 - #8 int
INFO  21:24:24,868 - #8 a
INFO  21:24:24,868 - #22 [
INFO  21:24:24,868 - #23 ]
INFO  21:24:24,868 - #27 ;
INFO  21:24:24,868 - #8 int
INFO  21:24:24,868 - #8 length
INFO  21:24:24,868 - #27 ;
INFO  21:24:24,868 - #8 length
INFO  21:24:24,869 - #24 =
INFO  21:24:24,869 - #8 c
INFO  21:24:24,869 - #27 ;
INFO  21:24:24,869 - #8 test
INFO  21:24:24,869 - #29 (
INFO  21:24:24,869 - #30 )
INFO  21:24:24,869 - #27 ;
INFO  21:24:24,869 - #31 if
INFO  21:24:24,869 - #29 (
INFO  21:24:24,869 - #8 length
INFO  21:24:24,869 - #38 >
INFO  21:24:24,869 - #9 0
INFO  21:24:24,869 - #13 &&
INFO  21:24:24,869 - #8 length
INFO  21:24:24,870 - #42 <=
INFO  21:24:24,870 - #8 d
INFO  21:24:24,870 - #30 )
INFO  21:24:24,871 - #8 a
INFO  21:24:24,871 - #24 =
INFO  21:24:24,871 - #7 new
INFO  21:24:24,871 - #8 int
INFO  21:24:24,871 - #22 [
INFO  21:24:24,871 - #8 length
INFO  21:24:24,871 - #23 ]
INFO  21:24:24,871 - #27 ;
INFO  21:24:24,871 - #32 else
INFO  21:24:24,871 - #8 a
INFO  21:24:24,871 - #24 =
INFO  21:24:24,871 - #7 new
INFO  21:24:24,872 - #8 int
INFO  21:24:24,872 - #22 [
INFO  21:24:24,872 - #9 5
INFO  21:24:24,872 - #23 ]
INFO  21:24:24,872 - #27 ;
INFO  21:24:24,872 - #33 do
INFO  21:24:24,872 - #20 {
INFO  21:24:24,872 - #4 read
INFO  21:24:24,872 - #29 (
INFO  21:24:24,872 - #8 a
INFO  21:24:24,872 - #22 [
INFO  21:24:24,873 - #8 i
INFO  21:24:24,873 - #23 ]
INFO  21:24:24,873 - #30 )
INFO  21:24:24,873 - #27 ;
INFO  21:24:24,873 - #31 if
INFO  21:24:24,873 - #29 (
INFO  21:24:24,873 - #8 a
INFO  21:24:24,873 - #22 [
INFO  21:24:24,873 - #8 i
INFO  21:24:24,874 - #23 ]
INFO  21:24:24,874 - #19 %
INFO  21:24:24,874 - #9 3
INFO  21:24:24,875 - #39 ==
INFO  21:24:24,875 - #9 0
INFO  21:24:24,876 - #30 )
INFO  21:24:24,877 - #3 print
INFO  21:24:24,877 - #29 (
INFO  21:24:24,877 - #8 a
INFO  21:24:24,877 - #22 [
INFO  21:24:24,877 - #8 i
INFO  21:24:24,877 - #23 ]
INFO  21:24:24,878 - #30 )
INFO  21:24:24,878 - #27 ;
INFO  21:24:24,879 - #32 else
INFO  21:24:24,879 - #3 print
INFO  21:24:24,880 - #29 (
INFO  21:24:24,880 - #8 max
INFO  21:24:24,880 - #29 (
INFO  21:24:24,880 - #8 a
INFO  21:24:24,880 - #22 [
INFO  21:24:24,880 - #8 i
INFO  21:24:24,880 - #23 ]
INFO  21:24:24,880 - #28 ,
INFO  21:24:24,881 - #9 0
INFO  21:24:24,881 - #30 )
INFO  21:24:24,881 - #30 )
INFO  21:24:24,881 - #27 ;
INFO  21:24:24,881 - #21 }
INFO  21:24:24,881 - #34 while
INFO  21:24:24,881 - #29 (
INFO  21:24:24,882 - #8 i
INFO  21:24:24,882 - #42 <=
INFO  21:24:24,882 - #8 length
INFO  21:24:24,882 - #16 -
INFO  21:24:24,882 - #9 1
INFO  21:24:24,882 - #30 )
INFO  21:24:24,882 - #27 ;
INFO  21:24:24,882 - #3 print
INFO  21:24:24,882 - #29 (
INFO  21:24:24,882 - #8 d
INFO  21:24:24,882 - #30 )
INFO  21:24:24,883 - #27 ;
INFO  21:24:24,883 - #21 }
INFO  21:24:24,883 - #21 }
