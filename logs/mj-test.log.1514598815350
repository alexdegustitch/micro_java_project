INFO  02:41:32,076 - Compiling source file: C:\Users\LjubaS\Desktop\ACA_ETF\IR4PP1\projekat\sa100122dProjekatDX10\workspace\MJCompiler\test\program.mj
INFO  02:41:32,082 - #33 program
INFO  02:41:32,082 - #1 Program
INFO  02:41:32,082 - #29 {
INFO  02:41:32,082 - #34 const
INFO  02:41:32,082 - #1 int
INFO  02:41:32,082 - #1 c
INFO  02:41:32,083 - #7 =
INFO  02:41:32,083 - #2 10
INFO  02:41:32,083 - #6 ;
INFO  02:41:32,083 - #34 const
INFO  02:41:32,083 - #1 int
INFO  02:41:32,083 - #1 d
INFO  02:41:32,083 - #7 =
INFO  02:41:32,083 - #2 99
INFO  02:41:32,083 - #14 ,
INFO  02:41:32,084 - #1 eps
INFO  02:41:32,084 - #7 =
INFO  02:41:32,084 - #2 2
INFO  02:41:32,084 - #6 ;
INFO  02:41:32,084 - #1 int
INFO  02:41:32,084 - #6 ;
INFO  02:41:32,084 - #35 void
INFO  02:41:32,084 - #1 test
INFO  02:41:32,084 - #10 (
INFO  02:41:32,084 - #11 )
INFO  02:41:32,085 - #29 {
INFO  02:41:32,085 - #1 int
INFO  02:41:32,085 - #1 a
INFO  02:41:32,085 - #14 ,
INFO  02:41:32,085 - #1 b
INFO  02:41:32,085 - #6 ;
INFO  02:41:32,085 - #1 bool
INFO  02:41:32,085 - #1 cond
INFO  02:41:32,085 - #6 ;
INFO  02:41:32,085 - #1 a
INFO  02:41:32,085 - #7 =
INFO  02:41:32,085 - #2 3
INFO  02:41:32,085 - #6 ;
INFO  02:41:32,086 - #1 b
INFO  02:41:32,086 - #7 =
INFO  02:41:32,086 - #2 5
INFO  02:41:32,086 - #6 ;
INFO  02:41:32,086 - #1 cond
INFO  02:41:32,086 - #7 =
INFO  02:41:32,086 - #4 true
INFO  02:41:32,086 - #6 ;
INFO  02:41:32,086 - #23 if
INFO  02:41:32,086 - #10 (
INFO  02:41:32,086 - #2 2
INFO  02:41:32,086 - #18 *
INFO  02:41:32,086 - #10 (
INFO  02:41:32,086 - #1 a
INFO  02:41:32,087 - #17 -
INFO  02:41:32,087 - #1 b
INFO  02:41:32,087 - #17 -
INFO  02:41:32,087 - #2 1
INFO  02:41:32,087 - #11 )
INFO  02:41:32,087 - #17 -
INFO  02:41:32,087 - #2 14
INFO  02:41:32,089 - #40 >
INFO  02:41:32,090 - #2 0
INFO  02:41:32,090 - #31 ||
INFO  02:41:32,090 - #1 cond
INFO  02:41:32,090 - #11 )
INFO  02:41:32,090 - #13 print
INFO  02:41:32,090 - #10 (
INFO  02:41:32,090 - #1 a
INFO  02:41:32,090 - #16 +
INFO  02:41:32,090 - #1 b
INFO  02:41:32,090 - #11 )
INFO  02:41:32,090 - #6 ;
INFO  02:41:32,090 - #30 }
INFO  02:41:32,090 - #1 int
INFO  02:41:32,091 - #1 max
INFO  02:41:32,091 - #10 (
INFO  02:41:32,091 - #1 int
INFO  02:41:32,091 - #1 a
INFO  02:41:32,091 - #14 ,
INFO  02:41:32,091 - #1 int
INFO  02:41:32,091 - #1 b
INFO  02:41:32,091 - #11 )
INFO  02:41:32,091 - #29 {
INFO  02:41:32,091 - #23 if
INFO  02:41:32,091 - #10 (
INFO  02:41:32,091 - #1 a
INFO  02:41:32,091 - #40 >
INFO  02:41:32,091 - #1 b
INFO  02:41:32,092 - #11 )
INFO  02:41:32,092 - #29 {
INFO  02:41:32,092 - #36 return
INFO  02:41:32,092 - #1 a
INFO  02:41:32,092 - #6 ;
INFO  02:41:32,092 - #30 }
INFO  02:41:32,092 - #24 else
INFO  02:41:32,092 - #36 return
INFO  02:41:32,092 - #1 b
INFO  02:41:32,092 - #6 ;
INFO  02:41:32,092 - #30 }
INFO  02:41:32,092 - #1 int
INFO  02:41:32,093 - #1 min
INFO  02:41:32,093 - #10 (
INFO  02:41:32,093 - #1 int
INFO  02:41:32,093 - #1 a
INFO  02:41:32,093 - #14 ,
INFO  02:41:32,093 - #1 int
INFO  02:41:32,093 - #1 b
INFO  02:41:32,093 - #11 )
INFO  02:41:32,093 - #29 {
INFO  02:41:32,093 - #23 if
INFO  02:41:32,093 - #10 (
INFO  02:41:32,093 - #1 a
INFO  02:41:32,094 - #39 <
INFO  02:41:32,094 - #1 b
INFO  02:41:32,094 - #11 )
INFO  02:41:32,094 - #29 {
INFO  02:41:32,094 - #36 return
INFO  02:41:32,094 - #1 a
INFO  02:41:32,094 - #6 ;
INFO  02:41:32,094 - #30 }
INFO  02:41:32,094 - #24 else
INFO  02:41:32,094 - #29 {
INFO  02:41:32,094 - #36 return
INFO  02:41:32,095 - #1 b
INFO  02:41:32,095 - #6 ;
INFO  02:41:32,095 - #30 }
INFO  02:41:32,095 - #30 }
INFO  02:41:32,095 - #35 void
INFO  02:41:32,095 - #1 main
INFO  02:41:32,095 - #10 (
INFO  02:41:32,095 - #11 )
INFO  02:41:32,095 - #29 {
INFO  02:41:32,095 - #1 int
INFO  02:41:32,095 - #1 a
INFO  02:41:32,095 - #21 [
INFO  02:41:32,095 - #22 ]
INFO  02:41:32,096 - #6 ;
INFO  02:41:32,096 - #1 int
INFO  02:41:32,096 - #1 length
INFO  02:41:32,096 - #6 ;
INFO  02:41:32,096 - #1 length
INFO  02:41:32,096 - #7 =
INFO  02:41:32,096 - #1 c
INFO  02:41:32,096 - #6 ;
INFO  02:41:32,096 - #1 test
INFO  02:41:32,096 - #10 (
INFO  02:41:32,097 - #11 )
INFO  02:41:32,097 - #6 ;
INFO  02:41:32,097 - #23 if
INFO  02:41:32,097 - #10 (
INFO  02:41:32,097 - #1 length
INFO  02:41:32,097 - #40 >
INFO  02:41:32,097 - #2 0
INFO  02:41:32,097 - #32 &&
INFO  02:41:32,097 - #1 length
INFO  02:41:32,097 - #41 <=
INFO  02:41:32,097 - #1 d
INFO  02:41:32,098 - #11 )
INFO  02:41:32,098 - #1 a
INFO  02:41:32,098 - #7 =
INFO  02:41:32,098 - #15 new
INFO  02:41:32,098 - #1 int
INFO  02:41:32,098 - #21 [
INFO  02:41:32,098 - #1 length
INFO  02:41:32,098 - #22 ]
INFO  02:41:32,098 - #6 ;
INFO  02:41:32,098 - #24 else
INFO  02:41:32,098 - #1 a
INFO  02:41:32,098 - #7 =
INFO  02:41:32,098 - #15 new
INFO  02:41:32,098 - #1 int
INFO  02:41:32,099 - #21 [
INFO  02:41:32,099 - #2 5
INFO  02:41:32,099 - #22 ]
INFO  02:41:32,099 - #6 ;
INFO  02:41:32,099 - #25 do
INFO  02:41:32,099 - #29 {
INFO  02:41:32,099 - #12 read
INFO  02:41:32,099 - #10 (
INFO  02:41:32,100 - #1 a
INFO  02:41:32,100 - #21 [
INFO  02:41:32,100 - #1 i
INFO  02:41:32,100 - #22 ]
INFO  02:41:32,100 - #11 )
INFO  02:41:32,100 - #6 ;
INFO  02:41:32,100 - #23 if
INFO  02:41:32,100 - #10 (
INFO  02:41:32,100 - #1 a
INFO  02:41:32,100 - #21 [
INFO  02:41:32,100 - #1 i
INFO  02:41:32,100 - #22 ]
INFO  02:41:32,100 - #20 %
INFO  02:41:32,101 - #2 3
INFO  02:41:32,101 - #37 ==
INFO  02:41:32,101 - #2 0
INFO  02:41:32,101 - #11 )
INFO  02:41:32,101 - #13 print
INFO  02:41:32,101 - #10 (
INFO  02:41:32,101 - #1 a
INFO  02:41:32,101 - #21 [
INFO  02:41:32,101 - #1 i
INFO  02:41:32,101 - #22 ]
INFO  02:41:32,101 - #11 )
INFO  02:41:32,101 - #6 ;
INFO  02:41:32,101 - #24 else
INFO  02:41:32,101 - #13 print
INFO  02:41:32,101 - #10 (
INFO  02:41:32,101 - #1 max
INFO  02:41:32,101 - #10 (
INFO  02:41:32,102 - #1 a
INFO  02:41:32,102 - #21 [
INFO  02:41:32,102 - #1 i
INFO  02:41:32,102 - #22 ]
INFO  02:41:32,102 - #14 ,
INFO  02:41:32,102 - #2 0
INFO  02:41:32,102 - #11 )
INFO  02:41:32,102 - #11 )
INFO  02:41:32,102 - #6 ;
INFO  02:41:32,102 - #30 }
INFO  02:41:32,102 - #26 while
INFO  02:41:32,102 - #10 (
INFO  02:41:32,102 - #1 i
INFO  02:41:32,102 - #41 <=
INFO  02:41:32,102 - #1 length
INFO  02:41:32,102 - #17 -
INFO  02:41:32,102 - #2 1
INFO  02:41:32,102 - #11 )
INFO  02:41:32,102 - #6 ;
INFO  02:41:32,103 - #13 print
INFO  02:41:32,103 - #10 (
INFO  02:41:32,103 - #1 d
INFO  02:41:32,103 - #11 )
INFO  02:41:32,103 - #6 ;
INFO  02:41:32,103 - #30 }
INFO  02:41:32,103 - #30 }
