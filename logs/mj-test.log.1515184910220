INFO  17:28:15,005 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatDX38\workspace\MJCompiler\test\program.mj
INFO  17:28:15,011 - #33 program
INFO  17:28:15,012 - #1 Program
INFO  17:28:15,012 - #29 {
INFO  17:28:15,012 - #34 const
INFO  17:28:15,012 - #1 int
INFO  17:28:15,012 - #1 c
INFO  17:28:15,012 - #7 =
INFO  17:28:15,012 - #2 10
INFO  17:28:15,012 - #6 ;
INFO  17:28:15,013 - #34 const
INFO  17:28:15,013 - #1 int
INFO  17:28:15,013 - #1 d
INFO  17:28:15,013 - #7 =
INFO  17:28:15,013 - #2 99
INFO  17:28:15,013 - #14 ,
INFO  17:28:15,013 - #1 eps
INFO  17:28:15,013 - #7 =
INFO  17:28:15,013 - #2 2
INFO  17:28:15,013 - #6 ;
INFO  17:28:15,013 - #1 int
INFO  17:28:15,014 - #1 e
INFO  17:28:15,014 - #6 ;
INFO  17:28:15,014 - #35 void
INFO  17:28:15,014 - #1 test
INFO  17:28:15,014 - #10 (
INFO  17:28:15,014 - #11 )
INFO  17:28:15,014 - #29 {
INFO  17:28:15,014 - #1 int
INFO  17:28:15,014 - #1 a
INFO  17:28:15,014 - #14 ,
INFO  17:28:15,014 - #1 b
INFO  17:28:15,014 - #6 ;
INFO  17:28:15,015 - #1 bool
INFO  17:28:15,015 - #1 cond
INFO  17:28:15,015 - #6 ;
INFO  17:28:15,015 - #1 a
INFO  17:28:15,015 - #7 =
INFO  17:28:15,015 - #2 3
INFO  17:28:15,015 - #6 ;
INFO  17:28:15,016 - #1 b
INFO  17:28:15,016 - #7 =
INFO  17:28:15,016 - #2 5
INFO  17:28:15,016 - #6 ;
INFO  17:28:15,016 - #1 cond
INFO  17:28:15,016 - #7 =
INFO  17:28:15,016 - #4 true
INFO  17:28:15,017 - #6 ;
INFO  17:28:15,017 - #23 if
INFO  17:28:15,017 - #10 (
INFO  17:28:15,017 - #2 2
INFO  17:28:15,017 - #18 *
INFO  17:28:15,017 - #10 (
INFO  17:28:15,018 - #1 a
INFO  17:28:15,018 - #17 -
INFO  17:28:15,018 - #1 b
INFO  17:28:15,018 - #17 -
INFO  17:28:15,018 - #2 1
INFO  17:28:15,018 - #11 )
INFO  17:28:15,018 - #17 -
INFO  17:28:15,020 - #2 14
INFO  17:28:15,021 - #40 >
INFO  17:28:15,021 - #2 0
INFO  17:28:15,021 - #31 ||
INFO  17:28:15,021 - #1 cond
INFO  17:28:15,021 - #11 )
INFO  17:28:15,021 - #13 print
INFO  17:28:15,021 - #10 (
INFO  17:28:15,021 - #1 a
INFO  17:28:15,021 - #16 +
INFO  17:28:15,021 - #1 b
INFO  17:28:15,021 - #11 )
INFO  17:28:15,021 - #6 ;
INFO  17:28:15,022 - #30 }
INFO  17:28:15,022 - #1 int
INFO  17:28:15,022 - #1 max
INFO  17:28:15,022 - #10 (
INFO  17:28:15,022 - #1 int
INFO  17:28:15,022 - #1 a
INFO  17:28:15,022 - #14 ,
INFO  17:28:15,022 - #1 int
INFO  17:28:15,022 - #1 b
INFO  17:28:15,022 - #11 )
INFO  17:28:15,022 - #29 {
INFO  17:28:15,023 - #23 if
INFO  17:28:15,023 - #10 (
INFO  17:28:15,023 - #1 a
INFO  17:28:15,023 - #40 >
INFO  17:28:15,023 - #1 b
INFO  17:28:15,023 - #11 )
INFO  17:28:15,023 - #29 {
INFO  17:28:15,023 - #36 return
INFO  17:28:15,023 - #1 a
INFO  17:28:15,023 - #6 ;
INFO  17:28:15,023 - #30 }
INFO  17:28:15,023 - #24 else
INFO  17:28:15,024 - #36 return
INFO  17:28:15,024 - #1 b
INFO  17:28:15,024 - #6 ;
INFO  17:28:15,024 - #30 }
INFO  17:28:15,024 - #1 int
INFO  17:28:15,024 - #1 min
INFO  17:28:15,024 - #10 (
INFO  17:28:15,024 - #1 int
INFO  17:28:15,024 - #1 a
INFO  17:28:15,024 - #14 ,
INFO  17:28:15,024 - #1 int
INFO  17:28:15,024 - #1 b
INFO  17:28:15,024 - #11 )
INFO  17:28:15,024 - #29 {
INFO  17:28:15,025 - #23 if
INFO  17:28:15,025 - #10 (
INFO  17:28:15,025 - #1 a
INFO  17:28:15,025 - #39 <
INFO  17:28:15,025 - #1 b
INFO  17:28:15,025 - #11 )
INFO  17:28:15,025 - #29 {
INFO  17:28:15,025 - #36 return
INFO  17:28:15,025 - #1 a
INFO  17:28:15,025 - #6 ;
INFO  17:28:15,025 - #30 }
INFO  17:28:15,025 - #24 else
INFO  17:28:15,025 - #29 {
INFO  17:28:15,025 - #36 return
INFO  17:28:15,026 - #1 b
INFO  17:28:15,026 - #6 ;
INFO  17:28:15,026 - #30 }
INFO  17:28:15,026 - #30 }
INFO  17:28:15,026 - #35 void
INFO  17:28:15,026 - #1 main
INFO  17:28:15,026 - #10 (
INFO  17:28:15,026 - #11 )
INFO  17:28:15,026 - #29 {
INFO  17:28:15,026 - #1 int
INFO  17:28:15,026 - #1 a
INFO  17:28:15,026 - #21 [
INFO  17:28:15,026 - #22 ]
INFO  17:28:15,027 - #6 ;
INFO  17:28:15,027 - #1 int
INFO  17:28:15,027 - #1 length
INFO  17:28:15,027 - #6 ;
INFO  17:28:15,027 - #1 int
INFO  17:28:15,027 - #1 i
INFO  17:28:15,027 - #6 ;
INFO  17:28:15,027 - #1 length
INFO  17:28:15,027 - #7 =
INFO  17:28:15,027 - #1 c
INFO  17:28:15,027 - #6 ;
INFO  17:28:15,027 - #1 test
INFO  17:28:15,028 - #10 (
INFO  17:28:15,028 - #11 )
INFO  17:28:15,028 - #6 ;
INFO  17:28:15,028 - #23 if
INFO  17:28:15,028 - #10 (
INFO  17:28:15,028 - #1 length
INFO  17:28:15,028 - #40 >
INFO  17:28:15,028 - #2 0
INFO  17:28:15,028 - #32 &&
INFO  17:28:15,028 - #1 length
INFO  17:28:15,028 - #41 <=
INFO  17:28:15,028 - #1 d
INFO  17:28:15,028 - #11 )
INFO  17:28:15,028 - #1 a
INFO  17:28:15,028 - #7 =
INFO  17:28:15,029 - #15 new
INFO  17:28:15,029 - #1 int
INFO  17:28:15,029 - #21 [
INFO  17:28:15,029 - #1 length
INFO  17:28:15,029 - #22 ]
INFO  17:28:15,029 - #6 ;
INFO  17:28:15,029 - #24 else
INFO  17:28:15,029 - #1 a
INFO  17:28:15,029 - #7 =
INFO  17:28:15,029 - #15 new
INFO  17:28:15,029 - #1 int
INFO  17:28:15,029 - #21 [
INFO  17:28:15,029 - #2 5
INFO  17:28:15,030 - #22 ]
INFO  17:28:15,031 - #6 ;
INFO  17:28:15,031 - #25 do
INFO  17:28:15,031 - #29 {
INFO  17:28:15,031 - #12 read
INFO  17:28:15,031 - #10 (
INFO  17:28:15,031 - #1 a
INFO  17:28:15,032 - #21 [
INFO  17:28:15,032 - #1 i
INFO  17:28:15,032 - #22 ]
INFO  17:28:15,032 - #11 )
INFO  17:28:15,032 - #6 ;
INFO  17:28:15,032 - #23 if
INFO  17:28:15,032 - #10 (
INFO  17:28:15,032 - #1 a
INFO  17:28:15,032 - #21 [
INFO  17:28:15,032 - #1 i
INFO  17:28:15,032 - #22 ]
INFO  17:28:15,032 - #20 %
INFO  17:28:15,032 - #2 3
INFO  17:28:15,032 - #37 ==
INFO  17:28:15,032 - #2 0
INFO  17:28:15,032 - #11 )
INFO  17:28:15,033 - #13 print
INFO  17:28:15,033 - #10 (
INFO  17:28:15,033 - #1 a
INFO  17:28:15,033 - #21 [
INFO  17:28:15,033 - #1 i
INFO  17:28:15,033 - #22 ]
INFO  17:28:15,033 - #11 )
INFO  17:28:15,033 - #6 ;
INFO  17:28:15,033 - #24 else
INFO  17:28:15,033 - #13 print
INFO  17:28:15,033 - #10 (
INFO  17:28:15,033 - #1 max
INFO  17:28:15,033 - #10 (
INFO  17:28:15,034 - #1 a
INFO  17:28:15,034 - #21 [
INFO  17:28:15,034 - #1 i
INFO  17:28:15,034 - #22 ]
INFO  17:28:15,034 - #14 ,
INFO  17:28:15,034 - #2 0
INFO  17:28:15,034 - #11 )
INFO  17:28:15,034 - #11 )
INFO  17:28:15,034 - #6 ;
INFO  17:28:15,034 - #1 i
INFO  17:28:15,034 - #8 ++
INFO  17:28:15,034 - #6 ;
INFO  17:28:15,034 - #30 }
INFO  17:28:15,034 - #26 while
INFO  17:28:15,034 - #10 (
INFO  17:28:15,035 - #1 i
INFO  17:28:15,035 - #41 <=
INFO  17:28:15,035 - #1 length
INFO  17:28:15,035 - #17 -
INFO  17:28:15,035 - #2 1
INFO  17:28:15,036 - #11 )
INFO  17:28:15,036 - #6 ;
INFO  17:28:15,036 - #13 print
INFO  17:28:15,036 - #10 (
INFO  17:28:15,036 - #1 d
INFO  17:28:15,036 - #11 )
INFO  17:28:15,036 - #6 ;
INFO  17:28:15,036 - #30 }
INFO  17:28:15,036 - #30 }
