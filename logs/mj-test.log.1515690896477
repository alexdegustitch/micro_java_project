INFO  21:41:50,230 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatDX38\workspace\MJCompiler\test\program.mj
INFO  21:41:50,230 - #33 program
INFO  21:41:50,230 - #1 Program
INFO  21:41:50,230 - #29 {
INFO  21:41:50,230 - #34 const
INFO  21:41:50,230 - #1 int
INFO  21:41:50,230 - #1 c
INFO  21:41:50,230 - #7 =
INFO  21:41:50,230 - #2 10
INFO  21:41:50,230 - #6 ;
INFO  21:41:50,230 - #34 const
INFO  21:41:50,230 - #1 int
INFO  21:41:50,230 - #1 d
INFO  21:41:50,230 - #7 =
INFO  21:41:50,230 - #2 99
INFO  21:41:50,230 - #14 ,
INFO  21:41:50,230 - #1 eps
INFO  21:41:50,230 - #7 =
INFO  21:41:50,230 - #2 2
INFO  21:41:50,230 - #6 ;
INFO  21:41:50,230 - #1 int
INFO  21:41:50,230 - #1 e
INFO  21:41:50,230 - #6 ;
INFO  21:41:50,230 - #35 void
INFO  21:41:50,230 - #1 test
INFO  21:41:50,230 - #10 (
INFO  21:41:50,230 - #11 )
INFO  21:41:50,230 - #29 {
INFO  21:41:50,240 - #1 int
INFO  21:41:50,240 - #1 a
INFO  21:41:50,240 - #14 ,
INFO  21:41:50,240 - #1 b
INFO  21:41:50,240 - #6 ;
INFO  21:41:50,240 - #1 bool
INFO  21:41:50,240 - #1 cond
INFO  21:41:50,240 - #6 ;
INFO  21:41:50,240 - #1 a
INFO  21:41:50,240 - #7 =
INFO  21:41:50,240 - #2 3
INFO  21:41:50,240 - #6 ;
INFO  21:41:50,240 - #1 b
INFO  21:41:50,240 - #7 =
INFO  21:41:50,240 - #2 5
INFO  21:41:50,240 - #6 ;
INFO  21:41:50,240 - #1 cond
INFO  21:41:50,240 - #7 =
INFO  21:41:50,240 - #4 true
INFO  21:41:50,240 - #6 ;
INFO  21:41:50,240 - #23 if
INFO  21:41:50,240 - #10 (
INFO  21:41:50,240 - #2 2
INFO  21:41:50,240 - #18 *
INFO  21:41:50,240 - #10 (
INFO  21:41:50,240 - #1 a
INFO  21:41:50,240 - #17 -
INFO  21:41:50,240 - #1 b
INFO  21:41:50,240 - #17 -
INFO  21:41:50,240 - #2 1
INFO  21:41:50,240 - #11 )
INFO  21:41:50,240 - #17 -
INFO  21:41:50,240 - #2 14
INFO  21:41:50,240 - #40 >
INFO  21:41:50,240 - #2 0
INFO  21:41:50,240 - #31 ||
INFO  21:41:50,240 - #1 cond
INFO  21:41:50,240 - #11 )
INFO  21:41:50,240 - #13 print
INFO  21:41:50,240 - #10 (
INFO  21:41:50,240 - #1 a
INFO  21:41:50,240 - #16 +
INFO  21:41:50,240 - #1 b
INFO  21:41:50,240 - #11 )
INFO  21:41:50,240 - #6 ;
INFO  21:41:50,240 - #30 }
INFO  21:41:50,240 - #1 int
INFO  21:41:50,240 - #1 max
INFO  21:41:50,240 - #10 (
INFO  21:41:50,240 - #1 int
INFO  21:41:50,240 - #1 a
INFO  21:41:50,240 - #14 ,
INFO  21:41:50,240 - #1 int
INFO  21:41:50,240 - #1 b
INFO  21:41:50,240 - #11 )
INFO  21:41:50,240 - #29 {
INFO  21:41:50,240 - #23 if
INFO  21:41:50,240 - #10 (
INFO  21:41:50,240 - #1 a
INFO  21:41:50,240 - #40 >
INFO  21:41:50,240 - #1 b
INFO  21:41:50,240 - #11 )
INFO  21:41:50,240 - #29 {
INFO  21:41:50,240 - #36 return
INFO  21:41:50,240 - #1 a
INFO  21:41:50,240 - #6 ;
INFO  21:41:50,240 - #30 }
INFO  21:41:50,240 - #24 else
INFO  21:41:50,240 - #36 return
INFO  21:41:50,240 - #1 b
INFO  21:41:50,240 - #6 ;
INFO  21:41:50,240 - #30 }
INFO  21:41:50,240 - #1 int
INFO  21:41:50,240 - #1 min
INFO  21:41:50,240 - #10 (
INFO  21:41:50,240 - #1 int
INFO  21:41:50,240 - #1 a
INFO  21:41:50,240 - #14 ,
INFO  21:41:50,240 - #1 int
INFO  21:41:50,240 - #1 b
INFO  21:41:50,240 - #11 )
INFO  21:41:50,240 - #29 {
INFO  21:41:50,240 - #23 if
INFO  21:41:50,240 - #10 (
INFO  21:41:50,240 - #1 a
INFO  21:41:50,240 - #39 <
INFO  21:41:50,240 - #1 b
INFO  21:41:50,240 - #11 )
INFO  21:41:50,240 - #29 {
INFO  21:41:50,240 - #36 return
INFO  21:41:50,240 - #1 a
INFO  21:41:50,240 - #6 ;
INFO  21:41:50,240 - #30 }
INFO  21:41:50,240 - #24 else
INFO  21:41:50,240 - #29 {
INFO  21:41:50,240 - #36 return
INFO  21:41:50,240 - #1 b
INFO  21:41:50,240 - #6 ;
INFO  21:41:50,240 - #30 }
INFO  21:41:50,240 - #30 }
INFO  21:41:50,240 - #35 void
INFO  21:41:50,240 - #1 main
INFO  21:41:50,240 - #10 (
INFO  21:41:50,240 - #11 )
INFO  21:41:50,240 - #29 {
INFO  21:41:50,240 - #1 int
INFO  21:41:50,240 - #1 a
INFO  21:41:50,240 - #21 [
INFO  21:41:50,240 - #22 ]
INFO  21:41:50,240 - #6 ;
INFO  21:41:50,240 - #1 int
INFO  21:41:50,240 - #1 length
INFO  21:41:50,240 - #6 ;
INFO  21:41:50,250 - #1 int
INFO  21:41:50,250 - #1 i
INFO  21:41:50,250 - #6 ;
INFO  21:41:50,250 - #1 length
INFO  21:41:50,250 - #7 =
INFO  21:41:50,250 - #1 c
INFO  21:41:50,250 - #6 ;
INFO  21:41:50,250 - #1 test
INFO  21:41:50,250 - #10 (
INFO  21:41:50,250 - #11 )
INFO  21:41:50,250 - #6 ;
INFO  21:41:50,250 - #23 if
INFO  21:41:50,250 - #10 (
INFO  21:41:50,250 - #1 length
INFO  21:41:50,250 - #40 >
INFO  21:41:50,250 - #2 0
INFO  21:41:50,250 - #32 &&
INFO  21:41:50,250 - #1 length
INFO  21:41:50,250 - #41 <=
INFO  21:41:50,250 - #1 d
INFO  21:41:50,250 - #11 )
INFO  21:41:50,250 - #1 a
INFO  21:41:50,250 - #7 =
INFO  21:41:50,250 - #15 new
INFO  21:41:50,250 - #1 int
INFO  21:41:50,250 - #21 [
INFO  21:41:50,250 - #1 length
INFO  21:41:50,250 - #22 ]
INFO  21:41:50,250 - #6 ;
INFO  21:41:50,250 - #24 else
INFO  21:41:50,250 - #1 a
INFO  21:41:50,250 - #7 =
INFO  21:41:50,250 - #15 new
INFO  21:41:50,250 - #1 int
INFO  21:41:50,250 - #21 [
INFO  21:41:50,250 - #2 5
INFO  21:41:50,250 - #22 ]
INFO  21:41:50,250 - #6 ;
INFO  21:41:50,250 - #25 do
INFO  21:41:50,250 - #29 {
INFO  21:41:50,250 - #12 read
INFO  21:41:50,250 - #10 (
INFO  21:41:50,250 - #1 a
INFO  21:41:50,250 - #21 [
INFO  21:41:50,250 - #1 i
INFO  21:41:50,250 - #22 ]
INFO  21:41:50,250 - #11 )
INFO  21:41:50,250 - #6 ;
INFO  21:41:50,250 - #23 if
INFO  21:41:50,250 - #10 (
INFO  21:41:50,250 - #1 a
INFO  21:41:50,250 - #21 [
INFO  21:41:50,250 - #1 i
INFO  21:41:50,250 - #22 ]
INFO  21:41:50,250 - #20 %
INFO  21:41:50,250 - #2 3
INFO  21:41:50,250 - #37 ==
INFO  21:41:50,250 - #2 0
INFO  21:41:50,250 - #11 )
INFO  21:41:50,250 - #13 print
INFO  21:41:50,250 - #10 (
INFO  21:41:50,250 - #1 a
INFO  21:41:50,250 - #21 [
INFO  21:41:50,250 - #1 i
INFO  21:41:50,250 - #22 ]
INFO  21:41:50,250 - #11 )
INFO  21:41:50,250 - #6 ;
INFO  21:41:50,250 - #24 else
INFO  21:41:50,250 - #13 print
INFO  21:41:50,250 - #10 (
INFO  21:41:50,250 - #1 max
INFO  21:41:50,250 - #10 (
INFO  21:41:50,250 - #1 a
INFO  21:41:50,250 - #21 [
INFO  21:41:50,250 - #1 i
INFO  21:41:50,250 - #22 ]
INFO  21:41:50,250 - #14 ,
INFO  21:41:50,250 - #2 0
INFO  21:41:50,250 - #11 )
INFO  21:41:50,250 - #11 )
INFO  21:41:50,250 - #6 ;
INFO  21:41:50,250 - #1 i
INFO  21:41:50,250 - #8 ++
INFO  21:41:50,250 - #6 ;
INFO  21:41:50,250 - #30 }
INFO  21:41:50,250 - #26 while
INFO  21:41:50,250 - #10 (
INFO  21:41:50,250 - #1 i
INFO  21:41:50,250 - #41 <=
INFO  21:41:50,250 - #1 length
INFO  21:41:50,250 - #17 -
INFO  21:41:50,250 - #2 1
INFO  21:41:50,250 - #11 )
INFO  21:41:50,250 - #6 ;
INFO  21:41:50,250 - #13 print
INFO  21:41:50,250 - #10 (
INFO  21:41:50,250 - #1 d
INFO  21:41:50,250 - #11 )
INFO  21:41:50,250 - #6 ;
INFO  21:41:50,250 - #30 }
INFO  21:41:50,250 - #30 }
