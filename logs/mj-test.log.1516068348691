INFO  03:05:35,882 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatFX_Argon\workspace\MJCompiler\test\program.mj
INFO  03:05:35,892 - #33 program
INFO  03:05:35,893 - #1 Program
INFO  03:05:35,893 - #34 const
INFO  03:05:35,893 - #1 int
INFO  03:05:35,893 - #1 c
INFO  03:05:35,893 - #7 =
INFO  03:05:35,893 - #2 10
INFO  03:05:35,893 - #6 ;
INFO  03:05:35,893 - #34 const
INFO  03:05:35,894 - #1 int
INFO  03:05:35,894 - #1 d
INFO  03:05:35,894 - #7 =
INFO  03:05:35,894 - #2 99
INFO  03:05:35,894 - #14 ,
INFO  03:05:35,895 - #1 eps
INFO  03:05:35,895 - #7 =
INFO  03:05:35,895 - #2 2
INFO  03:05:35,895 - #6 ;
INFO  03:05:35,895 - #1 int
INFO  03:05:35,895 - #1 e
INFO  03:05:35,895 - #6 ;
INFO  03:05:35,895 - #29 {
INFO  03:05:35,895 - #35 void
INFO  03:05:35,896 - #1 test
INFO  03:05:35,896 - #10 (
INFO  03:05:35,896 - #11 )
INFO  03:05:35,896 - #1 int
INFO  03:05:35,896 - #1 a
INFO  03:05:35,896 - #14 ,
INFO  03:05:35,896 - #1 b
INFO  03:05:35,896 - #6 ;
INFO  03:05:35,896 - #1 bool
INFO  03:05:35,896 - #1 cond
INFO  03:05:35,897 - #6 ;
INFO  03:05:35,897 - #29 {
INFO  03:05:35,897 - #1 a
INFO  03:05:35,897 - #7 =
INFO  03:05:35,897 - #2 3
INFO  03:05:35,897 - #6 ;
INFO  03:05:35,897 - #1 b
INFO  03:05:35,898 - #7 =
INFO  03:05:35,898 - #2 5
INFO  03:05:35,898 - #6 ;
INFO  03:05:35,898 - #1 cond
INFO  03:05:35,898 - #7 =
INFO  03:05:35,898 - #4 true
INFO  03:05:35,898 - #6 ;
INFO  03:05:35,898 - #23 if
INFO  03:05:35,898 - #10 (
INFO  03:05:35,899 - #2 2
INFO  03:05:35,899 - #18 *
INFO  03:05:35,899 - #10 (
INFO  03:05:35,899 - #1 a
INFO  03:05:35,899 - #17 -
INFO  03:05:35,899 - #1 b
INFO  03:05:35,900 - #17 -
INFO  03:05:35,900 - #2 1
INFO  03:05:35,900 - #11 )
INFO  03:05:35,900 - #17 -
INFO  03:05:35,903 - #2 14
INFO  03:05:35,903 - #40 >
INFO  03:05:35,903 - #2 0
INFO  03:05:35,904 - #31 ||
INFO  03:05:35,904 - #1 cond
INFO  03:05:35,904 - #11 )
INFO  03:05:35,905 - #13 print
INFO  03:05:35,905 - #10 (
INFO  03:05:35,905 - #1 a
INFO  03:05:35,905 - #16 +
INFO  03:05:35,905 - #1 b
INFO  03:05:35,905 - #11 )
INFO  03:05:35,905 - #6 ;
INFO  03:05:35,905 - #30 }
INFO  03:05:35,905 - #1 int
INFO  03:05:35,906 - #1 max
INFO  03:05:35,906 - #10 (
INFO  03:05:35,906 - #1 int
INFO  03:05:35,906 - #1 a
INFO  03:05:35,906 - #14 ,
INFO  03:05:35,906 - #1 int
INFO  03:05:35,906 - #1 b
INFO  03:05:35,906 - #11 )
INFO  03:05:35,906 - #1 int
INFO  03:05:35,906 - #1 x
INFO  03:05:35,906 - #6 ;
INFO  03:05:35,907 - #29 {
INFO  03:05:35,907 - #23 if
INFO  03:05:35,907 - #10 (
INFO  03:05:35,907 - #1 a
INFO  03:05:35,907 - #40 >
INFO  03:05:35,907 - #1 b
INFO  03:05:35,907 - #11 )
INFO  03:05:35,907 - #29 {
INFO  03:05:35,907 - #36 return
INFO  03:05:35,907 - #1 a
INFO  03:05:35,908 - #6 ;
INFO  03:05:35,908 - #30 }
INFO  03:05:35,908 - #24 else
INFO  03:05:35,908 - #36 return
INFO  03:05:35,908 - #1 b
INFO  03:05:35,908 - #6 ;
INFO  03:05:35,908 - #30 }
INFO  03:05:35,908 - #1 int
INFO  03:05:35,908 - #1 min
INFO  03:05:35,908 - #10 (
INFO  03:05:35,909 - #1 int
INFO  03:05:35,909 - #1 a
INFO  03:05:35,909 - #14 ,
INFO  03:05:35,909 - #1 int
INFO  03:05:35,909 - #1 b
INFO  03:05:35,909 - #11 )
INFO  03:05:35,909 - #29 {
INFO  03:05:35,910 - #23 if
INFO  03:05:35,910 - #10 (
INFO  03:05:35,910 - #1 a
INFO  03:05:35,910 - #39 <
INFO  03:05:35,910 - #1 b
INFO  03:05:35,910 - #11 )
INFO  03:05:35,910 - #29 {
INFO  03:05:35,910 - #36 return
INFO  03:05:35,910 - #1 a
INFO  03:05:35,910 - #6 ;
INFO  03:05:35,910 - #30 }
INFO  03:05:35,911 - #24 else
INFO  03:05:35,911 - #29 {
INFO  03:05:35,911 - #36 return
INFO  03:05:35,911 - #1 b
INFO  03:05:35,911 - #6 ;
INFO  03:05:35,911 - #30 }
INFO  03:05:35,912 - #30 }
INFO  03:05:35,912 - #35 void
INFO  03:05:35,912 - #1 obrada
INFO  03:05:35,912 - #10 (
INFO  03:05:35,912 - #1 int
INFO  03:05:35,912 - #1 a
INFO  03:05:35,912 - #21 [
INFO  03:05:35,912 - #22 ]
INFO  03:05:35,912 - #14 ,
INFO  03:05:35,912 - #1 int
INFO  03:05:35,912 - #1 length
INFO  03:05:35,912 - #11 )
INFO  03:05:35,913 - #1 int
INFO  03:05:35,913 - #1 i
INFO  03:05:35,913 - #6 ;
INFO  03:05:35,913 - #29 {
INFO  03:05:35,913 - #1 i
INFO  03:05:35,913 - #7 =
INFO  03:05:35,913 - #2 0
INFO  03:05:35,913 - #6 ;
INFO  03:05:35,913 - #25 do
INFO  03:05:35,913 - #29 {
INFO  03:05:35,914 - #23 if
INFO  03:05:35,914 - #10 (
INFO  03:05:35,914 - #1 a
INFO  03:05:35,914 - #21 [
INFO  03:05:35,914 - #1 i
INFO  03:05:35,914 - #22 ]
INFO  03:05:35,914 - #20 %
INFO  03:05:35,914 - #2 3
INFO  03:05:35,914 - #37 ==
INFO  03:05:35,914 - #2 0
INFO  03:05:35,915 - #11 )
INFO  03:05:35,915 - #13 print
INFO  03:05:35,915 - #10 (
INFO  03:05:35,915 - #1 a
INFO  03:05:35,915 - #21 [
INFO  03:05:35,915 - #1 i
INFO  03:05:35,915 - #22 ]
INFO  03:05:35,915 - #11 )
INFO  03:05:35,915 - #6 ;
INFO  03:05:35,915 - #24 else
INFO  03:05:35,916 - #13 print
INFO  03:05:35,916 - #10 (
INFO  03:05:35,916 - #1 max
INFO  03:05:35,916 - #10 (
INFO  03:05:35,916 - #1 a
INFO  03:05:35,916 - #21 [
INFO  03:05:35,916 - #1 i
INFO  03:05:35,916 - #22 ]
INFO  03:05:35,917 - #14 ,
INFO  03:05:35,917 - #2 0
INFO  03:05:35,917 - #11 )
INFO  03:05:35,917 - #11 )
INFO  03:05:35,917 - #6 ;
INFO  03:05:35,917 - #1 i
INFO  03:05:35,917 - #8 ++
INFO  03:05:35,917 - #6 ;
INFO  03:05:35,917 - #30 }
INFO  03:05:35,918 - #26 while
INFO  03:05:35,918 - #10 (
INFO  03:05:35,918 - #1 i
INFO  03:05:35,918 - #39 <
INFO  03:05:35,918 - #1 length
INFO  03:05:35,918 - #11 )
INFO  03:05:35,918 - #6 ;
INFO  03:05:35,918 - #30 }
INFO  03:05:35,918 - #35 void
INFO  03:05:35,918 - #1 main
INFO  03:05:35,919 - #10 (
INFO  03:05:35,919 - #11 )
INFO  03:05:35,919 - #1 int
INFO  03:05:35,919 - #1 a
INFO  03:05:35,919 - #21 [
INFO  03:05:35,919 - #22 ]
INFO  03:05:35,919 - #14 ,
INFO  03:05:35,919 - #1 length
INFO  03:05:35,919 - #6 ;
INFO  03:05:35,919 - #1 int
INFO  03:05:35,919 - #1 i
INFO  03:05:35,920 - #6 ;
INFO  03:05:35,920 - #29 {
INFO  03:05:35,920 - #1 length
INFO  03:05:35,920 - #7 =
INFO  03:05:35,920 - #1 min
INFO  03:05:35,920 - #10 (
INFO  03:05:35,920 - #1 c
INFO  03:05:35,920 - #14 ,
INFO  03:05:35,921 - #2 103
INFO  03:05:35,921 - #11 )
INFO  03:05:35,921 - #6 ;
INFO  03:05:35,921 - #1 test
INFO  03:05:35,921 - #10 (
INFO  03:05:35,921 - #11 )
INFO  03:05:35,921 - #6 ;
INFO  03:05:35,921 - #23 if
INFO  03:05:35,921 - #10 (
INFO  03:05:35,921 - #1 length
INFO  03:05:35,921 - #40 >
INFO  03:05:35,921 - #2 0
INFO  03:05:35,922 - #32 &&
INFO  03:05:35,922 - #1 length
INFO  03:05:35,922 - #41 <=
INFO  03:05:35,922 - #1 d
INFO  03:05:35,922 - #11 )
INFO  03:05:35,922 - #1 a
INFO  03:05:35,922 - #7 =
INFO  03:05:35,922 - #15 new
INFO  03:05:35,922 - #1 int
INFO  03:05:35,922 - #21 [
INFO  03:05:35,922 - #1 length
INFO  03:05:35,922 - #22 ]
INFO  03:05:35,922 - #6 ;
INFO  03:05:35,922 - #24 else
INFO  03:05:35,922 - #1 a
INFO  03:05:35,922 - #7 =
INFO  03:05:35,922 - #15 new
INFO  03:05:35,922 - #1 int
INFO  03:05:35,922 - #21 [
INFO  03:05:35,922 - #2 5
INFO  03:05:35,923 - #22 ]
INFO  03:05:35,923 - #6 ;
INFO  03:05:35,923 - #25 do
INFO  03:05:35,923 - #29 {
INFO  03:05:35,923 - #12 read
INFO  03:05:35,923 - #10 (
INFO  03:05:35,923 - #1 a
INFO  03:05:35,923 - #21 [
INFO  03:05:35,924 - #1 i
INFO  03:05:35,924 - #22 ]
INFO  03:05:35,924 - #11 )
INFO  03:05:35,924 - #6 ;
INFO  03:05:35,924 - #30 }
INFO  03:05:35,924 - #26 while
INFO  03:05:35,924 - #10 (
INFO  03:05:35,924 - #1 i
INFO  03:05:35,924 - #41 <=
INFO  03:05:35,924 - #1 length
INFO  03:05:35,924 - #17 -
INFO  03:05:35,924 - #2 1
INFO  03:05:35,924 - #11 )
INFO  03:05:35,924 - #6 ;
INFO  03:05:35,924 - #1 obrada
INFO  03:05:35,924 - #10 (
INFO  03:05:35,924 - #1 a
INFO  03:05:35,924 - #14 ,
INFO  03:05:35,924 - #1 length
INFO  03:05:35,924 - #11 )
INFO  03:05:35,925 - #6 ;
INFO  03:05:35,925 - #13 print
INFO  03:05:35,925 - #10 (
INFO  03:05:35,925 - #1 d
INFO  03:05:35,925 - #11 )
INFO  03:05:35,925 - #6 ;
INFO  03:05:35,925 - #30 }
INFO  03:05:35,925 - #30 }
