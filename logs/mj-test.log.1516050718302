INFO  20:51:57,720 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatDX46\workspace\MJCompiler\test\program.mj
INFO  20:51:57,728 - #2 program
INFO  20:51:57,728 - #8 Program
INFO  20:51:57,729 - #5 const
INFO  20:51:57,729 - #8 int
INFO  20:51:57,729 - #8 c
INFO  20:51:57,729 - #24 =
INFO  20:51:57,729 - #9 10
INFO  20:51:57,729 - #27 ;
INFO  20:51:57,729 - #5 const
INFO  20:51:57,729 - #8 int
INFO  20:51:57,729 - #8 d
INFO  20:51:57,730 - #24 =
INFO  20:51:57,730 - #9 99
INFO  20:51:57,730 - #28 ,
INFO  20:51:57,730 - #8 eps
INFO  20:51:57,730 - #24 =
INFO  20:51:57,730 - #9 2
INFO  20:51:57,730 - #27 ;
INFO  20:51:57,730 - #8 int
INFO  20:51:57,730 - #8 e
INFO  20:51:57,730 - #27 ;
INFO  20:51:57,731 - #20 {
INFO  20:51:57,731 - #6 void
INFO  20:51:57,731 - #8 test
INFO  20:51:57,731 - #29 (
INFO  20:51:57,731 - #30 )
INFO  20:51:57,731 - #8 int
INFO  20:51:57,731 - #8 a
INFO  20:51:57,731 - #28 ,
INFO  20:51:57,731 - #8 b
INFO  20:51:57,731 - #27 ;
INFO  20:51:57,731 - #8 bool
INFO  20:51:57,732 - #8 cond
INFO  20:51:57,732 - #27 ;
INFO  20:51:57,732 - #20 {
INFO  20:51:57,732 - #8 a
INFO  20:51:57,732 - #24 =
INFO  20:51:57,732 - #9 3
INFO  20:51:57,732 - #27 ;
INFO  20:51:57,732 - #8 b
INFO  20:51:57,732 - #24 =
INFO  20:51:57,732 - #9 5
INFO  20:51:57,732 - #27 ;
INFO  20:51:57,732 - #8 cond
INFO  20:51:57,733 - #24 =
INFO  20:51:57,733 - #11 true
INFO  20:51:57,733 - #27 ;
INFO  20:51:57,733 - #31 if
INFO  20:51:57,733 - #29 (
INFO  20:51:57,733 - #9 2
INFO  20:51:57,733 - #17 *
INFO  20:51:57,733 - #29 (
INFO  20:51:57,733 - #8 a
INFO  20:51:57,733 - #16 -
INFO  20:51:57,733 - #8 b
INFO  20:51:57,734 - #16 -
INFO  20:51:57,734 - #9 1
INFO  20:51:57,734 - #30 )
INFO  20:51:57,734 - #16 -
INFO  20:51:57,735 - #9 14
INFO  20:51:57,735 - #38 >
INFO  20:51:57,735 - #9 0
INFO  20:51:57,736 - #14 ||
INFO  20:51:57,736 - #8 cond
INFO  20:51:57,736 - #30 )
INFO  20:51:57,736 - #3 print
INFO  20:51:57,736 - #29 (
INFO  20:51:57,736 - #8 a
INFO  20:51:57,736 - #15 +
INFO  20:51:57,736 - #8 b
INFO  20:51:57,736 - #30 )
INFO  20:51:57,736 - #27 ;
INFO  20:51:57,737 - #21 }
INFO  20:51:57,737 - #8 int
INFO  20:51:57,737 - #8 max
INFO  20:51:57,737 - #29 (
INFO  20:51:57,737 - #8 int
INFO  20:51:57,737 - #8 a
INFO  20:51:57,737 - #28 ,
INFO  20:51:57,737 - #8 int
INFO  20:51:57,737 - #8 b
INFO  20:51:57,737 - #30 )
INFO  20:51:57,737 - #8 int
INFO  20:51:57,737 - #8 x
INFO  20:51:57,738 - #27 ;
INFO  20:51:57,738 - #20 {
INFO  20:51:57,738 - #31 if
INFO  20:51:57,738 - #29 (
INFO  20:51:57,738 - #8 a
INFO  20:51:57,738 - #38 >
INFO  20:51:57,738 - #8 b
INFO  20:51:57,738 - #30 )
INFO  20:51:57,738 - #20 {
INFO  20:51:57,738 - #37 return
INFO  20:51:57,738 - #8 a
INFO  20:51:57,738 - #27 ;
INFO  20:51:57,738 - #21 }
INFO  20:51:57,738 - #32 else
INFO  20:51:57,739 - #37 return
INFO  20:51:57,739 - #8 b
INFO  20:51:57,739 - #27 ;
INFO  20:51:57,739 - #21 }
INFO  20:51:57,739 - #8 int
INFO  20:51:57,739 - #8 min
INFO  20:51:57,739 - #29 (
INFO  20:51:57,739 - #8 int
INFO  20:51:57,739 - #8 a
INFO  20:51:57,739 - #28 ,
INFO  20:51:57,739 - #8 int
INFO  20:51:57,739 - #8 b
INFO  20:51:57,739 - #30 )
INFO  20:51:57,739 - #20 {
INFO  20:51:57,740 - #31 if
INFO  20:51:57,740 - #29 (
INFO  20:51:57,740 - #8 a
INFO  20:51:57,740 - #40 <
INFO  20:51:57,740 - #8 b
INFO  20:51:57,740 - #30 )
INFO  20:51:57,740 - #20 {
INFO  20:51:57,740 - #37 return
INFO  20:51:57,740 - #8 a
INFO  20:51:57,740 - #27 ;
INFO  20:51:57,740 - #21 }
INFO  20:51:57,740 - #32 else
INFO  20:51:57,741 - #20 {
INFO  20:51:57,741 - #37 return
INFO  20:51:57,741 - #8 b
INFO  20:51:57,741 - #27 ;
INFO  20:51:57,741 - #21 }
INFO  20:51:57,741 - #21 }
INFO  20:51:57,741 - #6 void
INFO  20:51:57,741 - #8 obrada
INFO  20:51:57,741 - #29 (
INFO  20:51:57,741 - #8 int
INFO  20:51:57,741 - #8 a
INFO  20:51:57,741 - #22 [
INFO  20:51:57,742 - #23 ]
INFO  20:51:57,742 - #28 ,
INFO  20:51:57,742 - #8 int
INFO  20:51:57,742 - #8 length
INFO  20:51:57,742 - #30 )
INFO  20:51:57,742 - #8 int
INFO  20:51:57,742 - #8 i
INFO  20:51:57,742 - #27 ;
INFO  20:51:57,742 - #20 {
INFO  20:51:57,742 - #8 i
INFO  20:51:57,742 - #24 =
INFO  20:51:57,742 - #9 0
INFO  20:51:57,742 - #27 ;
INFO  20:51:57,743 - #33 do
INFO  20:51:57,743 - #20 {
INFO  20:51:57,743 - #31 if
INFO  20:51:57,743 - #29 (
INFO  20:51:57,743 - #8 a
INFO  20:51:57,743 - #22 [
INFO  20:51:57,743 - #8 i
INFO  20:51:57,743 - #23 ]
INFO  20:51:57,743 - #19 %
INFO  20:51:57,743 - #9 3
INFO  20:51:57,743 - #39 ==
INFO  20:51:57,743 - #9 0
INFO  20:51:57,743 - #30 )
INFO  20:51:57,743 - #3 print
INFO  20:51:57,743 - #29 (
INFO  20:51:57,744 - #8 a
INFO  20:51:57,744 - #22 [
INFO  20:51:57,744 - #8 i
INFO  20:51:57,744 - #23 ]
INFO  20:51:57,744 - #30 )
INFO  20:51:57,745 - #27 ;
INFO  20:51:57,745 - #32 else
INFO  20:51:57,745 - #3 print
INFO  20:51:57,745 - #29 (
INFO  20:51:57,745 - #8 max
INFO  20:51:57,745 - #29 (
INFO  20:51:57,745 - #8 a
INFO  20:51:57,746 - #22 [
INFO  20:51:57,746 - #8 i
INFO  20:51:57,746 - #23 ]
INFO  20:51:57,746 - #28 ,
INFO  20:51:57,746 - #9 0
INFO  20:51:57,746 - #30 )
INFO  20:51:57,746 - #30 )
INFO  20:51:57,746 - #27 ;
INFO  20:51:57,746 - #8 i
INFO  20:51:57,746 - #25 ++
INFO  20:51:57,746 - #27 ;
INFO  20:51:57,746 - #21 }
INFO  20:51:57,746 - #34 while
INFO  20:51:57,746 - #29 (
INFO  20:51:57,746 - #8 i
INFO  20:51:57,747 - #40 <
INFO  20:51:57,747 - #8 length
INFO  20:51:57,747 - #30 )
INFO  20:51:57,747 - #27 ;
INFO  20:51:57,747 - #21 }
INFO  20:51:57,747 - #6 void
INFO  20:51:57,747 - #8 main
INFO  20:51:57,747 - #29 (
INFO  20:51:57,747 - #30 )
INFO  20:51:57,747 - #8 int
INFO  20:51:57,747 - #8 a
INFO  20:51:57,747 - #22 [
INFO  20:51:57,747 - #23 ]
INFO  20:51:57,748 - #28 ,
INFO  20:51:57,748 - #8 length
INFO  20:51:57,748 - #27 ;
INFO  20:51:57,748 - #8 int
INFO  20:51:57,748 - #8 i
INFO  20:51:57,748 - #27 ;
INFO  20:51:57,748 - #20 {
INFO  20:51:57,748 - #8 length
INFO  20:51:57,748 - #24 =
INFO  20:51:57,748 - #8 min
INFO  20:51:57,748 - #29 (
INFO  20:51:57,749 - #8 c
INFO  20:51:57,749 - #28 ,
INFO  20:51:57,749 - #9 103
INFO  20:51:57,749 - #30 )
INFO  20:51:57,749 - #27 ;
INFO  20:51:57,749 - #8 test
INFO  20:51:57,749 - #29 (
INFO  20:51:57,749 - #30 )
INFO  20:51:57,749 - #27 ;
INFO  20:51:57,749 - #31 if
INFO  20:51:57,749 - #29 (
INFO  20:51:57,749 - #8 length
INFO  20:51:57,749 - #38 >
INFO  20:51:57,749 - #9 0
INFO  20:51:57,749 - #13 &&
INFO  20:51:57,749 - #8 length
INFO  20:51:57,750 - #42 <=
INFO  20:51:57,750 - #8 d
INFO  20:51:57,750 - #30 )
INFO  20:51:57,750 - #8 a
INFO  20:51:57,750 - #24 =
INFO  20:51:57,750 - #7 new
INFO  20:51:57,750 - #8 int
INFO  20:51:57,750 - #22 [
INFO  20:51:57,750 - #8 length
INFO  20:51:57,750 - #23 ]
INFO  20:51:57,750 - #27 ;
INFO  20:51:57,750 - #32 else
INFO  20:51:57,750 - #8 a
INFO  20:51:57,750 - #24 =
INFO  20:51:57,750 - #7 new
INFO  20:51:57,750 - #8 int
INFO  20:51:57,750 - #22 [
INFO  20:51:57,750 - #9 5
INFO  20:51:57,750 - #23 ]
INFO  20:51:57,750 - #27 ;
INFO  20:51:57,751 - #33 do
INFO  20:51:57,751 - #20 {
INFO  20:51:57,751 - #4 read
INFO  20:51:57,751 - #29 (
INFO  20:51:57,751 - #8 a
INFO  20:51:57,751 - #22 [
INFO  20:51:57,752 - #8 i
INFO  20:51:57,752 - #23 ]
INFO  20:51:57,752 - #30 )
INFO  20:51:57,752 - #27 ;
INFO  20:51:57,752 - #21 }
INFO  20:51:57,752 - #34 while
INFO  20:51:57,752 - #29 (
INFO  20:51:57,752 - #8 i
INFO  20:51:57,752 - #42 <=
INFO  20:51:57,752 - #8 length
INFO  20:51:57,752 - #16 -
INFO  20:51:57,752 - #9 1
INFO  20:51:57,752 - #30 )
INFO  20:51:57,752 - #27 ;
INFO  20:51:57,752 - #8 obrada
INFO  20:51:57,752 - #29 (
INFO  20:51:57,752 - #8 a
INFO  20:51:57,752 - #28 ,
INFO  20:51:57,753 - #8 length
INFO  20:51:57,753 - #30 )
INFO  20:51:57,753 - #27 ;
INFO  20:51:57,753 - #3 print
INFO  20:51:57,753 - #29 (
INFO  20:51:57,753 - #8 d
INFO  20:51:57,753 - #30 )
INFO  20:51:57,753 - #27 ;
INFO  20:51:57,753 - #21 }
INFO  20:51:57,753 - #21 }
