INFO  05:25:31,139 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatDX44\workspace\MJCompiler\test\program.mj
INFO  05:25:31,149 - #33 program
INFO  05:25:31,149 - #1 Program
INFO  05:25:31,149 - #29 {
INFO  05:25:31,149 - #34 const
INFO  05:25:31,149 - #1 int
INFO  05:25:31,149 - #1 c
INFO  05:25:31,149 - #7 =
INFO  05:25:31,149 - #2 10
INFO  05:25:31,149 - #6 ;
INFO  05:25:31,149 - #34 const
INFO  05:25:31,149 - #1 int
INFO  05:25:31,149 - #1 d
INFO  05:25:31,149 - #7 =
INFO  05:25:31,149 - #2 99
INFO  05:25:31,149 - #14 ,
INFO  05:25:31,149 - #1 eps
INFO  05:25:31,149 - #7 =
INFO  05:25:31,149 - #2 2
INFO  05:25:31,149 - #6 ;
INFO  05:25:31,149 - #1 int
INFO  05:25:31,149 - #1 e
INFO  05:25:31,149 - #6 ;
INFO  05:25:31,149 - #35 void
INFO  05:25:31,149 - #1 test
INFO  05:25:31,149 - #10 (
INFO  05:25:31,149 - #11 )
INFO  05:25:31,149 - #29 {
INFO  05:25:31,149 - #1 int
INFO  05:25:31,149 - #1 a
INFO  05:25:31,149 - #14 ,
INFO  05:25:31,149 - #1 b
INFO  05:25:31,154 - #6 ;
INFO  05:25:31,154 - #1 bool
INFO  05:25:31,154 - #1 cond
INFO  05:25:31,154 - #6 ;
INFO  05:25:31,154 - #1 a
INFO  05:25:31,154 - #7 =
INFO  05:25:31,154 - #2 3
INFO  05:25:31,154 - #6 ;
INFO  05:25:31,154 - #1 b
INFO  05:25:31,154 - #7 =
INFO  05:25:31,154 - #2 5
INFO  05:25:31,154 - #6 ;
INFO  05:25:31,154 - #1 cond
INFO  05:25:31,154 - #7 =
INFO  05:25:31,154 - #4 true
INFO  05:25:31,154 - #6 ;
INFO  05:25:31,154 - #23 if
INFO  05:25:31,154 - #10 (
INFO  05:25:31,154 - #2 2
INFO  05:25:31,154 - #18 *
INFO  05:25:31,154 - #10 (
INFO  05:25:31,154 - #1 a
INFO  05:25:31,154 - #17 -
INFO  05:25:31,154 - #1 b
INFO  05:25:31,154 - #17 -
INFO  05:25:31,154 - #2 1
INFO  05:25:31,154 - #11 )
INFO  05:25:31,154 - #17 -
INFO  05:25:31,154 - #2 14
INFO  05:25:31,154 - #40 >
INFO  05:25:31,154 - #2 0
INFO  05:25:31,154 - #31 ||
INFO  05:25:31,154 - #1 cond
INFO  05:25:31,154 - #11 )
INFO  05:25:31,154 - #13 print
INFO  05:25:31,154 - #10 (
INFO  05:25:31,154 - #1 a
INFO  05:25:31,154 - #16 +
INFO  05:25:31,154 - #1 b
INFO  05:25:31,154 - #11 )
INFO  05:25:31,154 - #6 ;
INFO  05:25:31,154 - #30 }
INFO  05:25:31,154 - #1 int
INFO  05:25:31,159 - #1 max
INFO  05:25:31,159 - #10 (
INFO  05:25:31,159 - #1 int
INFO  05:25:31,159 - #1 a
INFO  05:25:31,159 - #14 ,
INFO  05:25:31,159 - #1 int
INFO  05:25:31,159 - #1 b
INFO  05:25:31,159 - #11 )
INFO  05:25:31,159 - #29 {
INFO  05:25:31,159 - #1 int
INFO  05:25:31,159 - #1 x
INFO  05:25:31,159 - #6 ;
INFO  05:25:31,159 - #23 if
INFO  05:25:31,159 - #10 (
INFO  05:25:31,159 - #1 a
INFO  05:25:31,159 - #40 >
INFO  05:25:31,159 - #1 b
INFO  05:25:31,159 - #11 )
INFO  05:25:31,159 - #29 {
INFO  05:25:31,159 - #36 return
INFO  05:25:31,159 - #1 a
INFO  05:25:31,159 - #6 ;
INFO  05:25:31,159 - #30 }
INFO  05:25:31,159 - #24 else
INFO  05:25:31,159 - #36 return
INFO  05:25:31,159 - #1 b
INFO  05:25:31,159 - #6 ;
INFO  05:25:31,159 - #30 }
INFO  05:25:31,159 - #1 int
INFO  05:25:31,159 - #1 min
INFO  05:25:31,159 - #10 (
INFO  05:25:31,159 - #1 int
INFO  05:25:31,159 - #1 a
INFO  05:25:31,159 - #14 ,
INFO  05:25:31,159 - #1 int
INFO  05:25:31,159 - #1 b
INFO  05:25:31,159 - #11 )
INFO  05:25:31,159 - #29 {
INFO  05:25:31,159 - #23 if
INFO  05:25:31,159 - #10 (
INFO  05:25:31,159 - #1 a
INFO  05:25:31,164 - #39 <
INFO  05:25:31,164 - #1 b
INFO  05:25:31,164 - #11 )
INFO  05:25:31,164 - #29 {
INFO  05:25:31,164 - #36 return
INFO  05:25:31,164 - #1 a
INFO  05:25:31,164 - #6 ;
INFO  05:25:31,164 - #30 }
INFO  05:25:31,164 - #24 else
INFO  05:25:31,164 - #29 {
INFO  05:25:31,164 - #36 return
INFO  05:25:31,164 - #1 b
INFO  05:25:31,164 - #6 ;
INFO  05:25:31,164 - #30 }
INFO  05:25:31,164 - #30 }
INFO  05:25:31,164 - #35 void
INFO  05:25:31,164 - #1 obrada
INFO  05:25:31,164 - #10 (
INFO  05:25:31,164 - #1 int
INFO  05:25:31,164 - #1 a
INFO  05:25:31,164 - #21 [
INFO  05:25:31,164 - #22 ]
INFO  05:25:31,164 - #14 ,
INFO  05:25:31,164 - #1 int
INFO  05:25:31,164 - #1 length
INFO  05:25:31,164 - #11 )
INFO  05:25:31,164 - #29 {
INFO  05:25:31,164 - #1 int
INFO  05:25:31,164 - #1 i
INFO  05:25:31,164 - #6 ;
INFO  05:25:31,164 - #1 i
INFO  05:25:31,164 - #7 =
INFO  05:25:31,164 - #2 0
INFO  05:25:31,164 - #6 ;
INFO  05:25:31,164 - #25 do
INFO  05:25:31,164 - #29 {
INFO  05:25:31,164 - #23 if
INFO  05:25:31,164 - #10 (
INFO  05:25:31,164 - #1 a
INFO  05:25:31,164 - #21 [
INFO  05:25:31,164 - #1 i
INFO  05:25:31,169 - #22 ]
INFO  05:25:31,169 - #20 %
INFO  05:25:31,169 - #2 3
INFO  05:25:31,169 - #37 ==
INFO  05:25:31,169 - #2 0
INFO  05:25:31,169 - #11 )
INFO  05:25:31,169 - #13 print
INFO  05:25:31,169 - #10 (
INFO  05:25:31,169 - #1 a
INFO  05:25:31,169 - #21 [
INFO  05:25:31,169 - #1 i
INFO  05:25:31,169 - #22 ]
INFO  05:25:31,169 - #11 )
INFO  05:25:31,169 - #6 ;
INFO  05:25:31,169 - #24 else
INFO  05:25:31,169 - #13 print
INFO  05:25:31,169 - #10 (
INFO  05:25:31,169 - #1 max
INFO  05:25:31,169 - #10 (
INFO  05:25:31,169 - #1 a
INFO  05:25:31,169 - #21 [
INFO  05:25:31,169 - #1 i
INFO  05:25:31,169 - #22 ]
INFO  05:25:31,169 - #14 ,
INFO  05:25:31,169 - #2 0
INFO  05:25:31,169 - #11 )
INFO  05:25:31,169 - #11 )
INFO  05:25:31,169 - #6 ;
INFO  05:25:31,169 - #1 i
INFO  05:25:31,169 - #8 ++
INFO  05:25:31,169 - #6 ;
INFO  05:25:31,169 - #30 }
INFO  05:25:31,169 - #26 while
INFO  05:25:31,169 - #10 (
INFO  05:25:31,169 - #1 i
INFO  05:25:31,169 - #39 <
INFO  05:25:31,169 - #1 length
INFO  05:25:31,169 - #11 )
INFO  05:25:31,169 - #6 ;
INFO  05:25:31,169 - #30 }
INFO  05:25:31,169 - #35 void
INFO  05:25:31,169 - #1 main
INFO  05:25:31,169 - #10 (
INFO  05:25:31,169 - #11 )
INFO  05:25:31,169 - #29 {
INFO  05:25:31,169 - #1 int
INFO  05:25:31,169 - #1 a
INFO  05:25:31,169 - #21 [
INFO  05:25:31,169 - #22 ]
INFO  05:25:31,169 - #14 ,
INFO  05:25:31,169 - #1 length
INFO  05:25:31,169 - #6 ;
INFO  05:25:31,169 - #1 int
INFO  05:25:31,169 - #1 i
INFO  05:25:31,169 - #6 ;
INFO  05:25:31,169 - #1 length
INFO  05:25:31,169 - #7 =
INFO  05:25:31,169 - #1 min
INFO  05:25:31,169 - #10 (
INFO  05:25:31,169 - #1 c
INFO  05:25:31,169 - #14 ,
INFO  05:25:31,169 - #2 103
INFO  05:25:31,169 - #11 )
INFO  05:25:31,169 - #6 ;
INFO  05:25:31,169 - #23 if
INFO  05:25:31,169 - #10 (
INFO  05:25:31,169 - #1 length
INFO  05:25:31,169 - #40 >
INFO  05:25:31,169 - #2 0
INFO  05:25:31,169 - #32 &&
INFO  05:25:31,169 - #1 length
INFO  05:25:31,169 - #41 <=
INFO  05:25:31,169 - #1 d
INFO  05:25:31,169 - #11 )
INFO  05:25:31,169 - #1 a
INFO  05:25:31,169 - #7 =
INFO  05:25:31,174 - #15 new
INFO  05:25:31,174 - #1 int
INFO  05:25:31,174 - #21 [
INFO  05:25:31,174 - #1 length
INFO  05:25:31,174 - #22 ]
INFO  05:25:31,174 - #6 ;
INFO  05:25:31,174 - #24 else
INFO  05:25:31,174 - #1 a
INFO  05:25:31,174 - #7 =
INFO  05:25:31,174 - #15 new
INFO  05:25:31,174 - #1 int
INFO  05:25:31,174 - #21 [
INFO  05:25:31,174 - #2 5
INFO  05:25:31,174 - #22 ]
INFO  05:25:31,174 - #6 ;
INFO  05:25:31,174 - #25 do
INFO  05:25:31,174 - #29 {
INFO  05:25:31,174 - #12 read
INFO  05:25:31,174 - #10 (
INFO  05:25:31,174 - #1 a
INFO  05:25:31,174 - #21 [
INFO  05:25:31,174 - #1 i
INFO  05:25:31,174 - #22 ]
INFO  05:25:31,174 - #11 )
INFO  05:25:31,174 - #6 ;
INFO  05:25:31,174 - #30 }
INFO  05:25:31,174 - #26 while
INFO  05:25:31,174 - #10 (
INFO  05:25:31,174 - #1 i
INFO  05:25:31,174 - #41 <=
INFO  05:25:31,174 - #1 length
INFO  05:25:31,174 - #17 -
INFO  05:25:31,174 - #2 1
INFO  05:25:31,174 - #11 )
INFO  05:25:31,174 - #6 ;
INFO  05:25:31,174 - #1 obrada
INFO  05:25:31,174 - #10 (
INFO  05:25:31,174 - #1 a
INFO  05:25:31,174 - #14 ,
INFO  05:25:31,174 - #1 length
INFO  05:25:31,174 - #11 )
INFO  05:25:31,174 - #6 ;
INFO  05:25:31,174 - #13 print
INFO  05:25:31,174 - #10 (
INFO  05:25:31,174 - #1 d
INFO  05:25:31,174 - #11 )
INFO  05:25:31,174 - #6 ;
INFO  05:25:31,174 - #30 }
INFO  05:25:31,174 - #30 }
