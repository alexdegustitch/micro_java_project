INFO  00:43:25,825 - Compiling source file: C:\Users\LjubaS\Desktop\ACA_ETF\IR4PP1\projekat\sa100122dProjekatDX33\workspace\MJCompiler\test\program.mj
INFO  00:43:25,830 - #33 program
INFO  00:43:25,830 - #1 Program
INFO  00:43:25,830 - #29 {
INFO  00:43:25,830 - #34 const
INFO  00:43:25,830 - #1 int
INFO  00:43:25,831 - #1 c
INFO  00:43:25,831 - #7 =
INFO  00:43:25,831 - #2 10
INFO  00:43:25,831 - #6 ;
INFO  00:43:25,831 - #34 const
INFO  00:43:25,831 - #1 int
INFO  00:43:25,831 - #1 d
INFO  00:43:25,831 - #7 =
INFO  00:43:25,831 - #2 99
INFO  00:43:25,831 - #14 ,
INFO  00:43:25,832 - #1 eps
INFO  00:43:25,832 - #7 =
INFO  00:43:25,832 - #2 2
INFO  00:43:25,832 - #6 ;
INFO  00:43:25,832 - #1 int
INFO  00:43:25,832 - #1 e
INFO  00:43:25,832 - #6 ;
INFO  00:43:25,832 - #35 void
INFO  00:43:25,832 - #1 test
INFO  00:43:25,832 - #10 (
INFO  00:43:25,832 - #11 )
INFO  00:43:25,832 - #29 {
INFO  00:43:25,833 - #1 int
INFO  00:43:25,833 - #1 a
INFO  00:43:25,833 - #14 ,
INFO  00:43:25,833 - #1 b
INFO  00:43:25,833 - #6 ;
INFO  00:43:25,833 - #1 bool
INFO  00:43:25,833 - #1 cond
INFO  00:43:25,833 - #6 ;
INFO  00:43:25,833 - #1 a
INFO  00:43:25,833 - #7 =
INFO  00:43:25,833 - #2 3
INFO  00:43:25,833 - #6 ;
INFO  00:43:25,833 - #1 b
INFO  00:43:25,833 - #7 =
INFO  00:43:25,834 - #2 5
INFO  00:43:25,834 - #6 ;
INFO  00:43:25,834 - #1 cond
INFO  00:43:25,834 - #7 =
INFO  00:43:25,834 - #4 true
INFO  00:43:25,834 - #6 ;
INFO  00:43:25,834 - #23 if
INFO  00:43:25,834 - #10 (
INFO  00:43:25,834 - #2 2
INFO  00:43:25,834 - #18 *
INFO  00:43:25,834 - #10 (
INFO  00:43:25,834 - #1 a
INFO  00:43:25,834 - #17 -
INFO  00:43:25,834 - #1 b
INFO  00:43:25,835 - #17 -
INFO  00:43:25,835 - #2 1
INFO  00:43:25,835 - #11 )
INFO  00:43:25,835 - #17 -
INFO  00:43:25,837 - #2 14
INFO  00:43:25,837 - #40 >
INFO  00:43:25,837 - #2 0
INFO  00:43:25,837 - #31 ||
INFO  00:43:25,838 - #1 cond
INFO  00:43:25,838 - #11 )
INFO  00:43:25,838 - #13 print
INFO  00:43:25,838 - #10 (
INFO  00:43:25,838 - #1 a
INFO  00:43:25,838 - #16 +
INFO  00:43:25,838 - #1 b
INFO  00:43:25,838 - #11 )
INFO  00:43:25,838 - #6 ;
INFO  00:43:25,838 - #30 }
INFO  00:43:25,838 - #1 int
INFO  00:43:25,838 - #1 max
INFO  00:43:25,838 - #10 (
INFO  00:43:25,839 - #1 int
INFO  00:43:25,839 - #1 a
INFO  00:43:25,839 - #14 ,
INFO  00:43:25,839 - #1 int
INFO  00:43:25,839 - #1 b
INFO  00:43:25,839 - #11 )
INFO  00:43:25,839 - #29 {
INFO  00:43:25,839 - #23 if
INFO  00:43:25,839 - #10 (
INFO  00:43:25,839 - #1 a
INFO  00:43:25,839 - #40 >
INFO  00:43:25,839 - #1 b
INFO  00:43:25,839 - #11 )
INFO  00:43:25,839 - #29 {
INFO  00:43:25,840 - #36 return
INFO  00:43:25,840 - #1 a
INFO  00:43:25,840 - #6 ;
INFO  00:43:25,840 - #30 }
INFO  00:43:25,840 - #24 else
INFO  00:43:25,840 - #36 return
INFO  00:43:25,840 - #1 b
INFO  00:43:25,840 - #6 ;
INFO  00:43:25,840 - #30 }
INFO  00:43:25,840 - #1 int
INFO  00:43:25,840 - #1 min
INFO  00:43:25,840 - #10 (
INFO  00:43:25,841 - #1 int
INFO  00:43:25,841 - #1 a
INFO  00:43:25,841 - #14 ,
INFO  00:43:25,841 - #1 int
INFO  00:43:25,841 - #1 b
INFO  00:43:25,841 - #11 )
INFO  00:43:25,841 - #29 {
INFO  00:43:25,841 - #23 if
INFO  00:43:25,841 - #10 (
INFO  00:43:25,841 - #1 a
INFO  00:43:25,841 - #39 <
INFO  00:43:25,841 - #1 b
INFO  00:43:25,841 - #11 )
INFO  00:43:25,841 - #29 {
INFO  00:43:25,842 - #36 return
INFO  00:43:25,842 - #1 a
INFO  00:43:25,842 - #6 ;
INFO  00:43:25,842 - #30 }
INFO  00:43:25,842 - #24 else
INFO  00:43:25,842 - #29 {
INFO  00:43:25,842 - #36 return
INFO  00:43:25,842 - #1 b
INFO  00:43:25,842 - #6 ;
INFO  00:43:25,842 - #30 }
INFO  00:43:25,842 - #30 }
INFO  00:43:25,843 - #35 void
INFO  00:43:25,843 - #1 main
INFO  00:43:25,843 - #10 (
INFO  00:43:25,843 - #11 )
INFO  00:43:25,843 - #29 {
INFO  00:43:25,843 - #1 int
INFO  00:43:25,843 - #1 a
INFO  00:43:25,843 - #21 [
INFO  00:43:25,843 - #22 ]
INFO  00:43:25,843 - #6 ;
INFO  00:43:25,843 - #1 int
INFO  00:43:25,843 - #1 length
INFO  00:43:25,843 - #6 ;
INFO  00:43:25,843 - #1 int
INFO  00:43:25,843 - #1 i
INFO  00:43:25,844 - #6 ;
INFO  00:43:25,844 - #1 length
INFO  00:43:25,844 - #7 =
INFO  00:43:25,844 - #1 c
INFO  00:43:25,844 - #6 ;
INFO  00:43:25,844 - #1 test
INFO  00:43:25,844 - #10 (
INFO  00:43:25,844 - #11 )
INFO  00:43:25,844 - #6 ;
INFO  00:43:25,844 - #23 if
INFO  00:43:25,844 - #10 (
INFO  00:43:25,844 - #1 length
INFO  00:43:25,844 - #40 >
INFO  00:43:25,844 - #2 0
INFO  00:43:25,844 - #32 &&
INFO  00:43:25,844 - #1 length
INFO  00:43:25,844 - #41 <=
INFO  00:43:25,844 - #1 d
INFO  00:43:25,844 - #11 )
INFO  00:43:25,845 - #1 a
INFO  00:43:25,845 - #7 =
INFO  00:43:25,845 - #15 new
INFO  00:43:25,845 - #1 int
INFO  00:43:25,845 - #21 [
INFO  00:43:25,845 - #1 length
INFO  00:43:25,845 - #22 ]
INFO  00:43:25,845 - #6 ;
INFO  00:43:25,845 - #24 else
INFO  00:43:25,845 - #1 a
INFO  00:43:25,845 - #7 =
INFO  00:43:25,845 - #15 new
INFO  00:43:25,845 - #1 int
INFO  00:43:25,845 - #21 [
INFO  00:43:25,845 - #2 5
INFO  00:43:25,845 - #22 ]
INFO  00:43:25,845 - #6 ;
INFO  00:43:25,845 - #25 do
INFO  00:43:25,845 - #29 {
INFO  00:43:25,846 - #12 read
INFO  00:43:25,846 - #10 (
INFO  00:43:25,846 - #1 a
INFO  00:43:25,846 - #21 [
INFO  00:43:25,846 - #1 i
INFO  00:43:25,846 - #22 ]
INFO  00:43:25,846 - #11 )
INFO  00:43:25,846 - #6 ;
INFO  00:43:25,846 - #23 if
INFO  00:43:25,846 - #10 (
INFO  00:43:25,846 - #1 a
INFO  00:43:25,846 - #21 [
INFO  00:43:25,846 - #1 i
INFO  00:43:25,846 - #22 ]
INFO  00:43:25,846 - #20 %
INFO  00:43:25,846 - #2 3
INFO  00:43:25,846 - #37 ==
INFO  00:43:25,846 - #2 0
INFO  00:43:25,847 - #11 )
INFO  00:43:25,847 - #13 print
INFO  00:43:25,847 - #10 (
INFO  00:43:25,847 - #1 a
INFO  00:43:25,847 - #21 [
INFO  00:43:25,847 - #1 i
INFO  00:43:25,847 - #22 ]
INFO  00:43:25,847 - #11 )
INFO  00:43:25,847 - #6 ;
INFO  00:43:25,847 - #24 else
INFO  00:43:25,847 - #13 print
INFO  00:43:25,847 - #10 (
INFO  00:43:25,847 - #1 max
INFO  00:43:25,847 - #10 (
INFO  00:43:25,847 - #1 a
INFO  00:43:25,847 - #21 [
INFO  00:43:25,847 - #1 i
INFO  00:43:25,847 - #22 ]
INFO  00:43:25,847 - #14 ,
INFO  00:43:25,847 - #2 0
INFO  00:43:25,848 - #11 )
INFO  00:43:25,848 - #11 )
INFO  00:43:25,848 - #6 ;
INFO  00:43:25,848 - #1 i
INFO  00:43:25,848 - #8 ++
INFO  00:43:25,848 - #6 ;
INFO  00:43:25,848 - #30 }
INFO  00:43:25,848 - #26 while
INFO  00:43:25,848 - #10 (
INFO  00:43:25,848 - #1 i
INFO  00:43:25,848 - #41 <=
INFO  00:43:25,848 - #1 length
INFO  00:43:25,848 - #17 -
INFO  00:43:25,848 - #2 1
INFO  00:43:25,848 - #11 )
INFO  00:43:25,848 - #6 ;
INFO  00:43:25,848 - #13 print
INFO  00:43:25,848 - #10 (
INFO  00:43:25,848 - #1 d
INFO  00:43:25,849 - #11 )
INFO  00:43:25,849 - #6 ;
INFO  00:43:25,849 - #30 }
INFO  00:43:25,849 - #30 }
