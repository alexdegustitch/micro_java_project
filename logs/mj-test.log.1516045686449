INFO  19:25:07,022 - Compiling source file: C:\Users\Coa\Desktop\IR4PP1\projekat\sa100122dProjekatDX46\workspace\MJCompiler\test\program.mj
INFO  19:25:07,031 - #2 program
INFO  19:25:07,031 - #8 Program
INFO  19:25:07,031 - #5 const
INFO  19:25:07,031 - #8 int
INFO  19:25:07,031 - #8 c
INFO  19:25:07,031 - #24 =
INFO  19:25:07,032 - #9 10
INFO  19:25:07,032 - #27 ;
INFO  19:25:07,032 - #5 const
INFO  19:25:07,032 - #8 int
INFO  19:25:07,032 - #8 d
INFO  19:25:07,032 - #24 =
INFO  19:25:07,032 - #9 99
INFO  19:25:07,032 - #28 ,
INFO  19:25:07,032 - #8 eps
INFO  19:25:07,032 - #24 =
INFO  19:25:07,033 - #9 2
INFO  19:25:07,033 - #27 ;
INFO  19:25:07,033 - #8 int
INFO  19:25:07,033 - #8 e
INFO  19:25:07,033 - #27 ;
INFO  19:25:07,033 - #20 {
INFO  19:25:07,033 - #6 void
INFO  19:25:07,033 - #8 test
INFO  19:25:07,033 - #29 (
INFO  19:25:07,034 - #30 )
INFO  19:25:07,034 - #8 int
INFO  19:25:07,034 - #8 a
INFO  19:25:07,034 - #28 ,
INFO  19:25:07,034 - #8 b
INFO  19:25:07,034 - #27 ;
INFO  19:25:07,034 - #8 bool
INFO  19:25:07,034 - #8 cond
INFO  19:25:07,034 - #27 ;
INFO  19:25:07,034 - #20 {
INFO  19:25:07,034 - #8 a
INFO  19:25:07,034 - #24 =
INFO  19:25:07,035 - #9 3
INFO  19:25:07,035 - #27 ;
INFO  19:25:07,035 - #8 b
INFO  19:25:07,035 - #24 =
INFO  19:25:07,035 - #9 5
INFO  19:25:07,035 - #27 ;
INFO  19:25:07,035 - #8 cond
INFO  19:25:07,035 - #24 =
INFO  19:25:07,036 - #11 true
INFO  19:25:07,036 - #27 ;
INFO  19:25:07,036 - #31 if
INFO  19:25:07,036 - #29 (
INFO  19:25:07,036 - #9 2
INFO  19:25:07,036 - #17 *
INFO  19:25:07,036 - #29 (
INFO  19:25:07,036 - #8 a
INFO  19:25:07,037 - #16 -
INFO  19:25:07,037 - #8 b
INFO  19:25:07,037 - #16 -
INFO  19:25:07,037 - #9 1
INFO  19:25:07,037 - #30 )
INFO  19:25:07,037 - #16 -
INFO  19:25:07,039 - #9 14
INFO  19:25:07,039 - #38 >
INFO  19:25:07,039 - #9 0
INFO  19:25:07,039 - #14 ||
INFO  19:25:07,039 - #8 cond
INFO  19:25:07,040 - #30 )
INFO  19:25:07,040 - #3 print
INFO  19:25:07,040 - #29 (
INFO  19:25:07,040 - #8 a
INFO  19:25:07,040 - #15 +
INFO  19:25:07,040 - #8 b
INFO  19:25:07,040 - #30 )
INFO  19:25:07,040 - #27 ;
INFO  19:25:07,040 - #21 }
INFO  19:25:07,040 - #8 int
INFO  19:25:07,040 - #8 max
INFO  19:25:07,041 - #29 (
INFO  19:25:07,041 - #8 int
INFO  19:25:07,041 - #8 a
INFO  19:25:07,041 - #28 ,
INFO  19:25:07,041 - #8 int
INFO  19:25:07,041 - #8 b
INFO  19:25:07,041 - #30 )
INFO  19:25:07,041 - #8 int
INFO  19:25:07,041 - #8 x
INFO  19:25:07,041 - #27 ;
INFO  19:25:07,041 - #20 {
INFO  19:25:07,042 - #31 if
INFO  19:25:07,042 - #29 (
INFO  19:25:07,042 - #8 a
INFO  19:25:07,042 - #38 >
INFO  19:25:07,042 - #8 b
INFO  19:25:07,042 - #30 )
INFO  19:25:07,042 - #20 {
INFO  19:25:07,042 - #37 return
INFO  19:25:07,042 - #8 a
INFO  19:25:07,042 - #27 ;
INFO  19:25:07,042 - #21 }
INFO  19:25:07,043 - #32 else
INFO  19:25:07,043 - #37 return
INFO  19:25:07,043 - #8 b
INFO  19:25:07,043 - #27 ;
INFO  19:25:07,043 - #21 }
INFO  19:25:07,043 - #8 int
INFO  19:25:07,043 - #8 min
INFO  19:25:07,043 - #29 (
INFO  19:25:07,044 - #8 int
INFO  19:25:07,044 - #8 a
INFO  19:25:07,044 - #28 ,
INFO  19:25:07,044 - #8 int
INFO  19:25:07,044 - #8 b
INFO  19:25:07,044 - #30 )
INFO  19:25:07,044 - #20 {
INFO  19:25:07,044 - #31 if
INFO  19:25:07,044 - #29 (
INFO  19:25:07,044 - #8 a
INFO  19:25:07,044 - #40 <
INFO  19:25:07,044 - #8 b
INFO  19:25:07,044 - #30 )
INFO  19:25:07,046 - #20 {
INFO  19:25:07,046 - #37 return
INFO  19:25:07,046 - #8 a
INFO  19:25:07,047 - #27 ;
INFO  19:25:07,047 - #21 }
INFO  19:25:07,047 - #32 else
INFO  19:25:07,047 - #20 {
INFO  19:25:07,047 - #37 return
INFO  19:25:07,047 - #8 b
INFO  19:25:07,048 - #27 ;
INFO  19:25:07,048 - #21 }
INFO  19:25:07,048 - #21 }
INFO  19:25:07,048 - #6 void
INFO  19:25:07,048 - #8 obrada
INFO  19:25:07,048 - #29 (
INFO  19:25:07,048 - #8 int
INFO  19:25:07,048 - #8 a
INFO  19:25:07,048 - #22 [
INFO  19:25:07,048 - #23 ]
INFO  19:25:07,048 - #28 ,
INFO  19:25:07,048 - #8 int
INFO  19:25:07,048 - #8 length
INFO  19:25:07,048 - #30 )
INFO  19:25:07,048 - #8 int
INFO  19:25:07,049 - #8 i
INFO  19:25:07,049 - #27 ;
INFO  19:25:07,049 - #20 {
INFO  19:25:07,049 - #8 i
INFO  19:25:07,049 - #24 =
INFO  19:25:07,049 - #9 0
INFO  19:25:07,049 - #27 ;
INFO  19:25:07,049 - #33 do
INFO  19:25:07,049 - #20 {
INFO  19:25:07,049 - #31 if
INFO  19:25:07,049 - #29 (
INFO  19:25:07,049 - #8 a
INFO  19:25:07,049 - #22 [
INFO  19:25:07,049 - #8 i
INFO  19:25:07,050 - #23 ]
INFO  19:25:07,050 - #19 %
INFO  19:25:07,050 - #9 3
INFO  19:25:07,050 - #39 ==
INFO  19:25:07,050 - #9 0
INFO  19:25:07,050 - #30 )
INFO  19:25:07,050 - #3 print
INFO  19:25:07,050 - #29 (
INFO  19:25:07,050 - #8 a
INFO  19:25:07,050 - #22 [
INFO  19:25:07,051 - #8 i
INFO  19:25:07,051 - #23 ]
INFO  19:25:07,051 - #30 )
INFO  19:25:07,051 - #27 ;
INFO  19:25:07,051 - #32 else
INFO  19:25:07,051 - #3 print
INFO  19:25:07,051 - #29 (
INFO  19:25:07,051 - #8 max
INFO  19:25:07,051 - #29 (
INFO  19:25:07,051 - #8 a
INFO  19:25:07,051 - #22 [
INFO  19:25:07,051 - #8 i
INFO  19:25:07,052 - #23 ]
INFO  19:25:07,052 - #28 ,
INFO  19:25:07,052 - #9 0
INFO  19:25:07,052 - #30 )
INFO  19:25:07,052 - #30 )
INFO  19:25:07,052 - #27 ;
INFO  19:25:07,052 - #8 i
INFO  19:25:07,052 - #25 ++
INFO  19:25:07,052 - #27 ;
INFO  19:25:07,052 - #21 }
INFO  19:25:07,052 - #34 while
INFO  19:25:07,052 - #29 (
INFO  19:25:07,052 - #8 i
INFO  19:25:07,052 - #40 <
INFO  19:25:07,052 - #8 length
INFO  19:25:07,052 - #30 )
INFO  19:25:07,053 - #27 ;
INFO  19:25:07,053 - #21 }
INFO  19:25:07,053 - #6 void
INFO  19:25:07,053 - #8 main
INFO  19:25:07,053 - #29 (
INFO  19:25:07,053 - #30 )
INFO  19:25:07,053 - #8 int
INFO  19:25:07,053 - #8 a
INFO  19:25:07,053 - #22 [
INFO  19:25:07,053 - #23 ]
INFO  19:25:07,053 - #28 ,
INFO  19:25:07,053 - #8 length
INFO  19:25:07,053 - #27 ;
INFO  19:25:07,053 - #8 int
INFO  19:25:07,053 - #8 i
INFO  19:25:07,053 - #27 ;
INFO  19:25:07,053 - #20 {
INFO  19:25:07,053 - #8 length
INFO  19:25:07,054 - #24 =
INFO  19:25:07,054 - #8 min
INFO  19:25:07,054 - #29 (
INFO  19:25:07,054 - #8 c
INFO  19:25:07,054 - #28 ,
INFO  19:25:07,054 - #9 103
INFO  19:25:07,054 - #30 )
INFO  19:25:07,054 - #27 ;
INFO  19:25:07,054 - #8 test
INFO  19:25:07,054 - #29 (
INFO  19:25:07,054 - #30 )
INFO  19:25:07,054 - #27 ;
INFO  19:25:07,054 - #31 if
INFO  19:25:07,054 - #29 (
INFO  19:25:07,054 - #8 length
INFO  19:25:07,054 - #38 >
INFO  19:25:07,054 - #9 0
INFO  19:25:07,054 - #13 &&
INFO  19:25:07,055 - #8 length
INFO  19:25:07,055 - #42 <=
INFO  19:25:07,055 - #8 d
INFO  19:25:07,055 - #30 )
INFO  19:25:07,055 - #8 a
INFO  19:25:07,055 - #24 =
INFO  19:25:07,055 - #7 new
INFO  19:25:07,055 - #8 int
INFO  19:25:07,055 - #22 [
INFO  19:25:07,055 - #8 length
INFO  19:25:07,055 - #23 ]
INFO  19:25:07,055 - #27 ;
INFO  19:25:07,055 - #32 else
INFO  19:25:07,055 - #8 a
INFO  19:25:07,055 - #24 =
INFO  19:25:07,055 - #7 new
INFO  19:25:07,056 - #8 int
INFO  19:25:07,056 - #22 [
INFO  19:25:07,056 - #9 5
INFO  19:25:07,056 - #23 ]
INFO  19:25:07,056 - #27 ;
INFO  19:25:07,056 - #33 do
INFO  19:25:07,056 - #20 {
INFO  19:25:07,056 - #4 read
INFO  19:25:07,056 - #29 (
INFO  19:25:07,058 - #8 a
INFO  19:25:07,058 - #22 [
INFO  19:25:07,058 - #8 i
INFO  19:25:07,058 - #23 ]
INFO  19:25:07,058 - #30 )
INFO  19:25:07,059 - #27 ;
INFO  19:25:07,059 - #21 }
INFO  19:25:07,061 - #34 while
INFO  19:25:07,061 - #29 (
INFO  19:25:07,061 - #8 i
INFO  19:25:07,061 - #42 <=
INFO  19:25:07,061 - #8 length
INFO  19:25:07,061 - #16 -
INFO  19:25:07,061 - #9 1
INFO  19:25:07,061 - #30 )
INFO  19:25:07,061 - #27 ;
INFO  19:25:07,061 - #8 obrada
INFO  19:25:07,061 - #29 (
INFO  19:25:07,061 - #8 a
INFO  19:25:07,061 - #28 ,
INFO  19:25:07,061 - #8 length
INFO  19:25:07,061 - #30 )
INFO  19:25:07,061 - #27 ;
INFO  19:25:07,061 - #3 print
INFO  19:25:07,062 - #29 (
INFO  19:25:07,062 - #8 d
INFO  19:25:07,062 - #30 )
INFO  19:25:07,062 - #27 ;
INFO  19:25:07,062 - #21 }
INFO  19:25:07,062 - #21 }
