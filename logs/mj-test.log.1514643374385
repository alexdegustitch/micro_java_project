INFO  14:23:28,135 - Compiling source file: C:\Users\LjubaS\Desktop\ACA_ETF\IR4PP1\projekat\sa100122dProjekatDX13\workspace\MJCompiler\test\program.mj
INFO  14:23:28,140 - #2 program
INFO  14:23:28,140 - #8 Program
INFO  14:23:28,140 - #20 {
INFO  14:23:28,141 - #5 const
INFO  14:23:28,141 - #8 int
INFO  14:23:28,141 - #8 c
INFO  14:23:28,141 - #24 =
INFO  14:23:28,141 - #9 10
INFO  14:23:28,141 - #27 ;
INFO  14:23:28,141 - #5 const
INFO  14:23:28,141 - #8 int
INFO  14:23:28,141 - #8 d
INFO  14:23:28,141 - #24 =
INFO  14:23:28,142 - #9 99
INFO  14:23:28,142 - #28 ,
INFO  14:23:28,142 - #8 eps
INFO  14:23:28,142 - #24 =
INFO  14:23:28,142 - #9 2
INFO  14:23:28,142 - #27 ;
INFO  14:23:28,142 - #8 int
INFO  14:23:28,142 - #8 e
INFO  14:23:28,142 - #27 ;
INFO  14:23:28,143 - #6 void
INFO  14:23:28,143 - #8 test
INFO  14:23:28,143 - #29 (
INFO  14:23:28,143 - #30 )
INFO  14:23:28,143 - #20 {
INFO  14:23:28,143 - #8 int
INFO  14:23:28,143 - #8 a
INFO  14:23:28,143 - #28 ,
INFO  14:23:28,143 - #8 b
INFO  14:23:28,143 - #28 ,
INFO  14:23:28,143 - #27 ;
INFO  14:23:28,143 - #8 bool
INFO  14:23:28,143 - #8 cond
INFO  14:23:28,143 - #27 ;
INFO  14:23:28,143 - #8 a
INFO  14:23:28,144 - #24 =
INFO  14:23:28,144 - #9 3
INFO  14:23:28,144 - #27 ;
INFO  14:23:28,144 - #8 b
INFO  14:23:28,144 - #24 =
INFO  14:23:28,144 - #9 5
INFO  14:23:28,144 - #27 ;
INFO  14:23:28,144 - #8 cond
INFO  14:23:28,144 - #24 =
INFO  14:23:28,144 - #11 true
INFO  14:23:28,144 - #27 ;
INFO  14:23:28,144 - #31 if
INFO  14:23:28,144 - #29 (
INFO  14:23:28,144 - #9 2
INFO  14:23:28,145 - #17 *
INFO  14:23:28,145 - #29 (
INFO  14:23:28,145 - #8 a
INFO  14:23:28,145 - #16 -
INFO  14:23:28,145 - #8 b
INFO  14:23:28,145 - #16 -
INFO  14:23:28,145 - #9 1
INFO  14:23:28,145 - #30 )
INFO  14:23:28,147 - #16 -
INFO  14:23:28,148 - #9 14
INFO  14:23:28,148 - #38 >
INFO  14:23:28,148 - #9 0
INFO  14:23:28,148 - #14 ||
INFO  14:23:28,148 - #8 cond
INFO  14:23:28,148 - #30 )
INFO  14:23:28,148 - #3 print
INFO  14:23:28,148 - #29 (
INFO  14:23:28,148 - #8 a
INFO  14:23:28,148 - #15 +
INFO  14:23:28,148 - #8 b
INFO  14:23:28,148 - #30 )
INFO  14:23:28,148 - #27 ;
INFO  14:23:28,149 - #21 }
INFO  14:23:28,149 - #8 int
INFO  14:23:28,149 - #8 max
INFO  14:23:28,149 - #29 (
INFO  14:23:28,149 - #8 int
INFO  14:23:28,149 - #8 a
INFO  14:23:28,149 - #27 ;
INFO  14:23:28,149 - #8 int
INFO  14:23:28,149 - #8 b
INFO  14:23:28,149 - #30 )
INFO  14:23:28,149 - #20 {
INFO  14:23:28,149 - #31 if
INFO  14:23:28,149 - #29 (
INFO  14:23:28,149 - #8 a
INFO  14:23:28,150 - #38 >
INFO  14:23:28,150 - #9 0
INFO  14:23:28,150 - #8 b
INFO  14:23:28,150 - #30 )
INFO  14:23:28,150 - #20 {
INFO  14:23:28,150 - #37 return
INFO  14:23:28,150 - #8 a
INFO  14:23:28,150 - #27 ;
INFO  14:23:28,151 - #21 }
INFO  14:23:28,151 - #32 else
INFO  14:23:28,151 - #37 return
INFO  14:23:28,151 - #8 b
INFO  14:23:28,151 - #27 ;
INFO  14:23:28,151 - #21 }
INFO  14:23:28,151 - #8 int
INFO  14:23:28,151 - #8 min
INFO  14:23:28,151 - #29 (
INFO  14:23:28,151 - #8 int
INFO  14:23:28,152 - #8 a
INFO  14:23:28,152 - #28 ,
INFO  14:23:28,152 - #8 int
INFO  14:23:28,152 - #8 b
INFO  14:23:28,152 - #30 )
INFO  14:23:28,152 - #20 {
INFO  14:23:28,152 - #31 if
INFO  14:23:28,152 - #29 (
INFO  14:23:28,152 - #8 a
INFO  14:23:28,152 - #40 <
INFO  14:23:28,152 - #8 b
INFO  14:23:28,152 - #30 )
INFO  14:23:28,152 - #20 {
INFO  14:23:28,153 - #37 return
INFO  14:23:28,153 - #8 a
INFO  14:23:28,153 - #27 ;
INFO  14:23:28,153 - #21 }
INFO  14:23:28,153 - #32 else
INFO  14:23:28,153 - #20 {
INFO  14:23:28,153 - #37 return
INFO  14:23:28,153 - #8 b
INFO  14:23:28,153 - #27 ;
INFO  14:23:28,153 - #21 }
INFO  14:23:28,154 - #21 }
INFO  14:23:28,154 - #6 void
INFO  14:23:28,154 - #8 main
INFO  14:23:28,154 - #29 (
INFO  14:23:28,154 - #30 )
INFO  14:23:28,154 - #20 {
INFO  14:23:28,154 - #8 int
INFO  14:23:28,154 - #8 a
INFO  14:23:28,154 - #22 [
INFO  14:23:28,154 - #23 ]
INFO  14:23:28,154 - #27 ;
INFO  14:23:28,154 - #8 int
INFO  14:23:28,154 - #8 length
INFO  14:23:28,154 - #27 ;
INFO  14:23:28,154 - #8 length
INFO  14:23:28,155 - #24 =
INFO  14:23:28,155 - #8 c
INFO  14:23:28,155 - #27 ;
INFO  14:23:28,155 - #8 test
INFO  14:23:28,155 - #29 (
INFO  14:23:28,155 - #30 )
INFO  14:23:28,155 - #27 ;
INFO  14:23:28,155 - #31 if
INFO  14:23:28,155 - #29 (
INFO  14:23:28,155 - #8 length
INFO  14:23:28,155 - #38 >
INFO  14:23:28,155 - #9 0
INFO  14:23:28,155 - #13 &&
INFO  14:23:28,156 - #8 length
INFO  14:23:28,156 - #42 <=
INFO  14:23:28,156 - #8 d
INFO  14:23:28,156 - #30 )
INFO  14:23:28,156 - #8 a
INFO  14:23:28,156 - #24 =
INFO  14:23:28,156 - #7 new
INFO  14:23:28,156 - #8 int
INFO  14:23:28,156 - #22 [
INFO  14:23:28,157 - #8 length
INFO  14:23:28,157 - #23 ]
INFO  14:23:28,157 - #27 ;
INFO  14:23:28,157 - #32 else
INFO  14:23:28,157 - #8 a
INFO  14:23:28,157 - #24 =
INFO  14:23:28,157 - #7 new
INFO  14:23:28,157 - #8 int
INFO  14:23:28,157 - #22 [
INFO  14:23:28,157 - #9 5
INFO  14:23:28,157 - #23 ]
INFO  14:23:28,157 - #27 ;
INFO  14:23:28,158 - #33 do
INFO  14:23:28,158 - #20 {
INFO  14:23:28,158 - #4 read
INFO  14:23:28,158 - #29 (
INFO  14:23:28,158 - #8 a
INFO  14:23:28,158 - #22 [
INFO  14:23:28,158 - #8 i
INFO  14:23:28,158 - #23 ]
INFO  14:23:28,158 - #30 )
INFO  14:23:28,158 - #27 ;
INFO  14:23:28,158 - #31 if
INFO  14:23:28,158 - #29 (
INFO  14:23:28,158 - #8 a
INFO  14:23:28,158 - #22 [
INFO  14:23:28,158 - #8 i
INFO  14:23:28,159 - #23 ]
INFO  14:23:28,159 - #19 %
INFO  14:23:28,159 - #9 3
INFO  14:23:28,159 - #39 ==
INFO  14:23:28,159 - #9 0
INFO  14:23:28,159 - #30 )
INFO  14:23:28,159 - #3 print
INFO  14:23:28,159 - #29 (
INFO  14:23:28,159 - #8 a
INFO  14:23:28,159 - #22 [
INFO  14:23:28,159 - #8 i
INFO  14:23:28,159 - #23 ]
INFO  14:23:28,159 - #30 )
INFO  14:23:28,159 - #27 ;
INFO  14:23:28,159 - #32 else
INFO  14:23:28,159 - #3 print
INFO  14:23:28,159 - #29 (
INFO  14:23:28,159 - #8 max
INFO  14:23:28,159 - #29 (
INFO  14:23:28,159 - #8 a
INFO  14:23:28,160 - #22 [
INFO  14:23:28,160 - #8 i
INFO  14:23:28,160 - #23 ]
INFO  14:23:28,160 - #28 ,
INFO  14:23:28,160 - #9 0
INFO  14:23:28,160 - #30 )
INFO  14:23:28,160 - #30 )
INFO  14:23:28,160 - #27 ;
INFO  14:23:28,160 - #21 }
INFO  14:23:28,160 - #34 while
INFO  14:23:28,160 - #29 (
INFO  14:23:28,160 - #8 i
INFO  14:23:28,160 - #42 <=
INFO  14:23:28,160 - #8 length
INFO  14:23:28,160 - #16 -
INFO  14:23:28,160 - #9 1
INFO  14:23:28,160 - #30 )
INFO  14:23:28,160 - #27 ;
INFO  14:23:28,160 - #3 print
INFO  14:23:28,160 - #29 (
INFO  14:23:28,160 - #8 d
INFO  14:23:28,160 - #30 )
INFO  14:23:28,160 - #27 ;
INFO  14:23:28,160 - #21 }
INFO  14:23:28,161 - #21 }
